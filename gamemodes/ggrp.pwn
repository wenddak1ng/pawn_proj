//#include <profiler> //-d3 ключ компиляции | -O1
#include <a_samp>
#include <a_http>
#include <crashdetect>
#if defined MAX_PLAYERS
#undef MAX_PLAYERS
#define MAX_PLAYERS 1000
#endif
#include <Pawn.CMD>
#include <a_mysql>
#include <foreach>
#include <streamer>
#include <sscanf2>
#include <progress2>
#include <map_srp>
#include <remove_obj>
#include <bots>
#include <TOTP>
#include <mapandreas>
#include <nex-ac>
#include <raknet>
#include <mdialog>
#include <YSF>

#define DONATE_VALUE 3000

new newbiearea;
new mysql;
new DayDonate;
new Iterator:Admins<MAX_PLAYERS>;
#define callback%0(%1) forward%0(%1); public%0(%1)
/********************DEFINE OPTIMISE*******************/
#define GetVehicleModelEx(%0) VehicleInfo[%0][vModel]
#define GetVehicleState(%0) VehicleState[%0]
#define GetEngineStatus(%0) VehicleInfo[%0][vEngine]
#define GetDoorsStatus(%0) VehicleInfo[%0][vDoors]
#define GetBootStatus(%0) VehicleInfo[%0][bBoot]
#define GetBonnetStatus(%0) VehicleInfo[%0][vBonnet]
#define GetAlarmStatus(%0) VehicleInfo[%0][vAlarm]
#define GetVehicleID(%0) VehicleInfo[%0][vID]
#define Name(%0) PlayerName[%0]
//------------------------------------------------------------------------------//
#define Mode_Name 						"Good Game"
#define Mode_Mail 						"no-reply@ggrp.ru"
#define Mode_Forum 						"ggrp.su"
#define Mode_Site 						"ggrp.ru"
#define Mode_City						"Orion"
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#pragma dynamic 100000
#define SALT "wendY_wenddak1ng"//Соль SHA256 (Менять в случае крайней умственной отсталости)
#define GUN_ROT 90.0, 0.0, 90.0
#define FIRE_GUN_ROT 90.0, 0.0, 5.0
#define MAX_DMATS 		(300)
#define MAX_DGUNS 		(300)
#define MAX_NARKO		(300)
#define MAX_BOMBS   	(20)
#define MAX_AFK_TIME 	(300)
#define MAX_HOUSES 		(841)
#define MAX_OWNABLECARS (1050)
#define MAX_APARTS		(937)
#define MAX_PODEEZD		(23)
#define WIN_MULTIPLIER_GLOBAL 1.0
#define MIN_Bet 1000
#define MAX_Bet 250000
#define Bet_STEP 100
#define MAX_BILLBORDS 50
#define G_STATE_NOT_GAMBLING    0
#define G_STATE_READY           1
#define G_STATE_GAMBLING        2
#define G_STATE_DISPLAY         3 // Currently displaying the message
#define DISPLAY_TIME 750 // Time to display the messages
#define GAMBLE_TIMER 100 // Decrease this if too fast

#define STATUS_NONE     (0)
#define STATUS_VIP      (1)
#define STATUS_GOLD     (2)
#define STATUS_PLATIN   (3)
#define STATUS_TITAN    (4)

#define MAX_ORGS 		(28)
new Float:acPos[MAX_PLAYERS][3];
new TradeOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID,...};
new TradeSelected[MAX_PLAYERS][4];
new ValueTrade[MAX_PLAYERS][4];
new QuickList[13];
new Float:Pickups[1200][3];
new AlkatrazGZ;
new WineGZ;
new EXITSAVEMODE;
new bool:FPlayerText[MAX_PLAYERS];
new Text3D:PlayerFamily[MAX_PLAYERS];
/********************Тир***************/
#define MAX_TIRS   24
#define TARGET_MODEL 	1586
#define TIR_DIALOG  	238
#define COUNT_TARGETS   5
new Tir_CP[MAX_TIRS][2];
new Text3D:TirText[MAX_TIRS] = {Text3D:-1, ...};
new PlayerTir[MAX_PLAYERS];
new TirPlayer[MAX_PLAYERS];
new TargetCount[MAX_PLAYERS];
new TargetShots[MAX_PLAYERS];
new Target_Object[MAX_TIRS];
new TargetTimer[MAX_TIRS] = {-1,...};
new TirGun[MAX_PLAYERS];
new TirAmmo[MAX_PLAYERS];
new bool:TirBusy[MAX_TIRS];
new bool:TargetGo[MAX_TIRS];
new Text:TirDraw[6];
new Text:TirBGDraw;
new Float:TargetMoveSpeed[MAX_PLAYERS];
new TimerTime[MAX_PLAYERS];
new StartCount[MAX_PLAYERS];
new TirEnter[2];
new TirExit;
enum tirguninfo
{
	tgGunname[30],
	tgGunid,
	tgCost
}
new TGunInfo[7][tirguninfo] =
{
    {"Pistols", 22, 250},
	{"Desert Eagle", 24, 390},
	{"ShotGun", 25, 500},
	{"MP5", 29, 650},
	{"AK47", 30, 650},
	{"M4", 31, 650},
	{"Sniper Rifle", 34, 1000}
};
enum tirinfo
{
	Float:tirPos[3],
	Float:tirTPos[6],
	tirInt,
	tirWorld
}
new TirInfo[24][tirinfo] =
{
	{{289.20,-24.89,1001.5156},{289.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 0},
	{{290.79,-24.89,1001.5156},{290.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 0},
	{{292.20,-24.89,1001.5156},{292.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 0},
	{{293.70,-24.89,1001.5156},{293.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 0},
	{{295.29,-24.89,1001.5156},{295.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 0},
	{{296.79,-24.89,1001.5156},{296.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 0},
	{{298.29,-24.89,1001.5156},{298.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 0},
	{{299.79,-24.89,1001.5156},{299.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 0},
	{{289.20,-24.89,1001.5156},{289.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 1},
	{{290.79,-24.89,1001.5156},{290.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 1},
	{{292.20,-24.89,1001.5156},{292.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 1},
	{{293.70,-24.89,1001.5156},{293.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 1},
	{{295.29,-24.89,1001.5156},{295.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 1},
	{{296.79,-24.89,1001.5156},{296.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 1},
	{{298.29,-24.89,1001.5156},{298.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 1},
	{{299.79,-24.89,1001.5156},{299.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 1},
	{{289.20,-24.89,1001.5156},{289.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 2},
	{{290.79,-24.89,1001.5156},{290.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 2},
	{{292.20,-24.89,1001.5156},{292.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 2},
	{{293.70,-24.89,1001.5156},{293.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 2},
	{{295.29,-24.89,1001.5156},{295.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 2},
	{{296.79,-24.89,1001.5156},{296.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 2},
	{{298.29,-24.89,1001.5156},{298.10000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 2},
	{{299.79,-24.89,1001.5156},{299.60000610,-7.7,1000.5,270.0,0.0,0.0}, 1, 2}	
};
/**************************************/
enum vInfo
{
	vModel,
	Float:vPos[4],
	vColor_1,
	vColor_2,
	vSpawnTime,
	vEngine,
	vLights,
	vAlarm,
	vDoors,
	vBonnet,
	vBoot,
	vObjective,
	vJob,
	vTeam,
	vRank,
	vAntiRepair,
	vLock,
	vPlayer,
	bool:vIterSiren,
	vState,
	vFilled,
	vID
}
new VehicleInfo[MAX_VEHICLES][vInfo];
new CarForSell[] = {541,411,560,451,415,562,559,429,603,402,579,602,554,490,400,540,445,489,506,482,483,600,474,549,575,487,469,522,521,461,468,586,581,463,534,419,412,495,580,426,421,491,535,462,510,481,509,496,565,589,480,475,542,439,576,566,558,551,567,500,533,536,477,587,492,495,473,454,452,446,434,458,401,404,410,422,436,466,478,479,507,516,517,518,526,527,529,543,545,546,547,555,561,604,605,484,471,494,502,502};
new Float:PlanePositions[28][4] = {
	{2452.2000, 1357.5000, 11.0000, 180.0000},
	{2455.3999, 1357.5000, 11.0000, 180.0000},
	{2458.6001, 1357.5000, 11.0000, 180.0000},
	{2461.8000, 1357.5000, 11.0000, 180.0000},
	{2465.0000, 1357.5000, 11.0000, 180.0000},
	{2468.2000, 1357.5000, 11.0000, 180.0000},
	{2471.3999, 1357.5000, 11.0000, 180.0000},
	{2441.8999, 1355.0000, 11.0000, 270.0000},
	{2441.8999, 1351.5000, 11.0000, 270.0000},
	{2441.8999, 1348.0000, 11.0000, 270.0000},
	{2441.8999, 1344.5000, 11.0000, 270.0000},
	{2441.8999, 1341.0000, 11.0000, 270.0000},
	{2441.8999, 1337.5000, 11.0000, 270.0000},
	{2441.8999, 1334.0000, 11.0000, 270.0000},
	{2444.3999, 1327.5000, 11.0000, 0.0000},
	{2447.8999, 1327.5000, 11.0000, 0.0000},
	{2451.3999, 1327.5000, 11.0000, 0.0000},
	{2454.8999, 1327.5000, 11.0000, 0.0000},
	{2452.2000, 1345.5000, 11.0000, 0.0000},
	{2455.3999, 1345.5000, 11.0000, 0.0000},
	{2458.6001, 1345.5000, 11.0000, 0.0000},
	{2461.8000, 1345.5000, 11.0000, 0.0000},
	{2465.0000, 1345.5000, 11.0000, 0.0000},
	{2465.0000, 1337.0000, 11.0000, 180.0000},
	{2461.8000, 1337.0000, 11.0000, 180.0000},
	{2458.6001, 1337.0000, 11.0000, 180.0000},
	{2455.3999, 1337.0000, 11.0000, 180.0000},
	{2452.2000, 1337.0000, 11.0000, 180.0000}
};
new Float:CarsPositions[54][4] = {
	{2334.9197, 1391.0762, 10.9220, 0.0000},
	{2331.4197, 1391.0762, 10.9220, 0.0000},
	{2327.9197, 1391.0762, 10.9220, 0.0000},
	{2319.4197, 1391.0762, 10.9220, 0.0000},
	{2303.6426, 1408.4874, 10.9220, 270.0000},
	{2303.6426, 1411.9874, 10.9220, 270.0000},
	{2303.6426, 1415.4874, 10.9220, 270.0000},
	{2303.6426, 1418.9874, 10.9220, 270.0000},
	{2303.6426, 1422.4874, 10.9220, 270.0000},
	{2303.6523, 1426.0898, 10.9220, 270.0000},
	{2303.6523, 1429.5898, 10.9220, 270.0000},
	{2303.6523, 1433.0898, 10.9220, 270.0000},
	{2303.6523, 1436.5898, 10.9220, 270.0000},
	{2303.6523, 1440.0898, 10.9220, 270.0000},
	{2303.6523, 1443.5898, 10.9220, 270.0000},
	{2303.6523, 1447.0898, 10.9220, 270.0000},
	{2303.6523, 1450.5898, 10.9220, 270.0000},
	{2303.6523, 1454.0898, 10.9220, 270.0000},
	{2303.6523, 1457.5898, 10.9220, 270.0000},
	{2303.6523, 1461.0898, 10.9220, 270.0000},
	{2303.6426, 1404.9874, 10.9220, 270.0000},
	{2349.9197, 1461.0762, 10.9220, 90.0000},
	{2349.9197, 1457.5762, 10.9220, 90.0000},
	{2349.9197, 1454.0762, 10.9220, 90.0000},
	{2349.9197, 1450.5762, 10.9220, 90.0000},
	{2349.9197, 1447.0762, 10.9220, 90.0000},
	{2349.9197, 1443.5762, 10.9220, 90.0000},
	{2349.9197, 1440.0762, 10.9220, 90.0000},
	{2349.9197, 1436.5762, 10.9220, 90.0000},
	{2349.9197, 1433.0762, 10.9220, 90.0000},
	{2349.9197, 1429.5762, 10.9220, 90.0000},
	{2349.9197, 1426.0762, 10.9220, 90.0000},
	{2349.9197, 1419.0762, 10.9220, 90.0000},
	{2349.9197, 1415.5762, 10.9220, 90.0000},
	{2349.9197, 1412.0762, 10.9220, 90.0000},
	{2349.9197, 1408.5762, 10.9220, 90.0000},
	{2349.9197, 1405.0762, 10.9220, 90.0000},
	{2330.9053, 1408.4447, 10.9220, 90.0000},
	{2330.9053, 1411.9447, 10.9220, 90.0000},
	{2330.9053, 1404.9447, 10.9220, 90.0000},
	{2330.9053, 1415.4447, 10.9220, 90.0000},
	{2330.9053, 1418.9447, 10.9220, 90.0000},
	{2330.9053, 1422.4447, 10.9220, 90.0000},
	{2330.9150, 1426.0471, 10.9220, 90.0000},
	{2330.9150, 1429.5471, 10.9220, 90.0000},
	{2330.9150, 1433.0471, 10.9220, 90.0000},
	{2330.9150, 1436.5471, 10.9220, 90.0000},
	{2330.9150, 1440.0471, 10.9220, 90.0000},
	{2330.9150, 1443.5471, 10.9220, 90.0000},
	{2330.9150, 1447.0471, 10.9220, 90.0000},
	{2330.9150, 1450.5471, 10.9220, 90.0000},
	{2330.9150, 1454.0471, 10.9220, 90.0000},
	{2330.9150, 1457.5471, 10.9220, 90.0000},
	{2330.9150, 1461.0471, 10.9220, 90.0000}
};
ac_CreateDynamicCP(&tmpcp, &tmparea, Float:x, Float:y, Float:z, Float:size, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = STREAMER_CP_SD)
{
	tmpcp = CreateDynamicObject(1317, x, y, z-1.8, 0.0, 0.0, 0.0, worldid, interiorid, playerid, streamdistance);
	SetDynamicObjectMaterial(tmpcp, 0, 18646, "matcolours", "orange", 0x99D94141);
	tmparea = CreateDynamicSphere(x, y, z+0.5, size, worldid, interiorid, playerid);
	return 1;
}
ac_DestroyDynamicCP(&tmpcp, &tmparea)
{
	DestroyDynamicObject(tmpcp);
	DestroyDynamicArea(tmparea);
	return 1;
}
_KillTimer(&timerid){
    if(timerid != 0){
        KillTimer(timerid);
        timerid = 0;
    }
    return 1;
}
new Float:randspawn[4][3] = {
	{1774.8228,-1647.9200,20.1919},
	{1773.8228,-1647.9200,20.1919},
	{1774.8228,-1646.9200,20.1919},
	{1775.8228,-1647.9200,20.1919}
};
#define KillTimer _KillTimer
#define f(%1, 					format(%1,sizeof(%1),
/**************************Silent anti-cheat*******************/
new Silent_warnings[MAX_PLAYERS];
#define MAX_DIST 7
Float:GetAngle(Float:x, Float:y, Float:ix, Float:iy)
{
	new Float:absoluteangle, Float:tmpangle, Float:misc = 5.0;
	tmpangle = 180.0 - atan2(x-ix,y-iy);
	tmpangle += misc;
	misc *= -1;
	absoluteangle = tmpangle + misc;
	return absoluteangle;
}
stock IsPlayerFacingCoords(playerid, Float:destx, Float:desty, offset = 0)
{
	new Float:px, Float:py, Float:pz, Float:a, Float:a2;
	GetPlayerPos(playerid, px, py, pz);
	GetPlayerFacingAngle(playerid, a);
	a2 = GetAngle(px, py, destx, desty);
	if((a2 + offset) > 360) a2 = 360 - offset;
	if((a2 - offset) < 0) a2 = 0 + offset;
	if(a < (a2 + offset) && a > (a2 - offset)) return 1;
	return 0;
} 
/**************************MatchMaking*******************/
new Text:MMTD[24];
new PlayerText:MMPTD[MAX_PLAYERS][26];
/**************************GPS*******************
enum RouteInformation
{
    Destination,
    bool:calculating,
    Lenght,
    GPS_Polygon,
	Object,
    bool:IsInGPS_Polygon
};
new PlayerRoute[MAX_PLAYERS][RouteInformation];
enum colors_info{
	gps_color,
	gps_rgb[9]
}
new GPSCOLORS[10][colors_info] = {
	{0xFFFF4400, "{FF4400}"},
	{0xFFD94141, "{D94141}"},
	{0xFF34A11B, "{34A11B}"},
	{0xFFFFD700, "{FFD700}"},
	{0xFF7396FB, "{7396FB}"},
	{0xFF86D18D, "{86D18D}"},
	{0xFFFFFFFF, "{FFFFFF}"},
	{0xFFBA61FF, "{BA61FF}"},
	{0xFF949494, "{949494}"},
	{0xFF6500C9, "{6500C9}"}
};*/
/**************************Квартиры*******************/
enum podInfo
{ 
Float:podPic[3], 
	podEtazi,
	podMir[30], 
	eSquare[2],
	pSquare[2],
	HOUSE,
	podeezd
}; 
new PodeezdInfo[MAX_PODEEZD][podInfo],Allpod;
enum kInfo 
{ 
kID,
pID,
Float:kvPic[3], 
Float:kvExit[3], 
pCount,
pDay,
	vladelec[32], 
Text3D:dtext, 
	kvLock, 
	kvWorld, 
	kvPlata,
	podeezd,
	fake
}; 
new kvartinfo[MAX_APARTS][kInfo];
new ALLKVARTIRI,HMIR = 95, KID = 760;
new nfake = 1,lasthouse;
/**************************Таланты*******************/
new Text:TalentsTD[14];
new PlayerText:PlayerTalents[MAX_PLAYERS][8];
enum talinfo{
	Float:talX,
	Float:talY,
	talIcon[13]
}
new TalentEnum[9][talinfo] = {
	{443.500000, 157.500000, "LD_OTB2:Ric1"},
	{476.000000, 157.500000, "LD_OTB2:Ric1"},
	{509.000000, 157.500000, "LD_OTB2:Ric1"},
	{443.500000, 187.000000, "LD_OTB2:Ric2"},
	{476.000000, 187.000000, "LD_OTB2:Ric2"},
	{509.000000, 187.000000, "LD_OTB2:Ric2"},
	{443.500000, 215.000000, "LD_OTB2:Ric3"},
	{476.000000, 215.000000, "LD_OTB2:Ric3"},
	{509.000000, 215.000000, "LD_OTB2:Ric3"}
};
new PlayerText:TalentItems[MAX_PLAYERS][9];
new SelectedBrunch[MAX_PLAYERS];
new SelectedTalent[MAX_PLAYERS];
new CorrectLine[MAX_PLAYERS];
new TalentsInfo[MAX_PLAYERS][4][3];
Float:MAX_PLAYER_HEALTH(playerid){
	new Float:max_health;
	max_health = (TalentsInfo[playerid][3][1] == 1) ? 150.0 : 100.0;
	return max_health;
}
MAX_PLAYER_SATIETY(playerid){
	new max_health;
	max_health = (TalentsInfo[playerid][3][1] == 2) ? 200 : 100;
	return max_health;
}
enum taldesc{
	talName[32],
	talDesc[170]
}
new TalentDesc[4][9][taldesc] = {
	{
		{"Атлет", "{FFCB8C}Персонаж получает возможность восстановить 1% здоровья каждые 60 секунд"},
		{"Cвой человек", "{FFCB8C}При лечении в больнице персонаж получает вероятность 30% восстановить дополнительно 2 единицы здоровья"},
		{"Обновление", "{FFCB8C}Когда ваш уровень здоровья опускается ниже 30%, вы с вероятностью 15% восстановите 20% от общего уровня здоровья за счёт уровня сытости"},
		{"9 жизней", "{FFCB8C}С вероятностью 5% полученный урон от огнестрельного оружия будет снижен"},
		{"Неприкосновенный запас", "{FFCB8C}Персонаж дополнительно восстанавливает 10% здоровья при использовании аптечки"},
		{"Интерн", "{FFCB8C}Становится доступным навык 'Первая помощь'. Используя его, персонаж восстанавливает 25% здоровья. Время перезарядки 120 секунд"},
		{"Знак свыше", "{FFCB8C}Снижает время перезарядки навыка 'Первая помощь' на 30 секунд"},
		{"Сатана", "{FFCB8C}С вероятностью 5% при получении урона персонаж восстановит 10% от общего уровня здоровья"},
		{"Покаяние", "{FFCB8C}Становится доступным навык 'Второе дыхание'. Используя его, персонаж преодолеет сильную ломку от наркотической зависимости. Время перезарядки 120 секунд"}
	},{
		{"Аккуратность", "{FFCB8C}Повышает навык вашего вождения. При аварии двигатель вашего транспортного средства не будет глохнуть"},
		{"Семьянин", "{FFCB8C}Повышает навык вашего вождения. Расход топлива снизится в 2 раза"},
		{"Бомбила", "{FFCB8C}При снижении здоровья транспорта до 400 единиц, вы восстановите дополнительно 10 единиц и сможете продолжить движение"},
		{"Шумахер", "{FFCB8C}Повышает навык вашего вождения. Вы сможете развить скорость выше, чем может разогнаться сам транспорт"},
		{"Мастер", "{FFCB8C}Становится доступным навык 'Экспресс-ремонт'. Используя его, вы восстановите 50 единиц здоровья вашему транспорту. Время перезарядки 240 секунд"},
		{"Осторожность", "{FFCB8C}Повышает навык вашего вождения. При экстренном торможении ваш тормозной путь будет короче"},
		{"", "{FFCB8C}"},
		{"", "{FFCB8C}"},
		{"", "{FFCB8C}"}
	},{
		{"Мастер на все руки", "{FFCB8C}Позволяет улучшать навыки стрельбы в 2 раза быстрее"},
		{"Знающий", "{FFCB8C}Добавляет звуковое оповещение при попадании в игрока"},
		{"Охотник", "{FFCB8C}Добавляет информацию о нанесённом уроне над головой вашей жертвы"},
		{"Хитрец", "{FFCB8C}При создании оружия вы будете тратить на 5% меньше материалов"},
		{"Хамелеон", "{FFCB8C}Время действия маски увеличивается до 15 минут"},
		{"Звезда с неба", "{FFCB8C}Становится доступным навык 'Халявщик'. Данный навык позволяет вам платить налоги на транспорт и недвижимость в 2 раза меньше (Пассивная способность)"},
		{"", ""},
		{"Снайпер", "{FFCB8C}При попадании в голову с вероятностью 80% вы убьёте цель"},
		{"", ""}
	},{
		{"Воздаяние", "{FFCB8C}Увеличение урона с руки на 3%"},
		{"Ловкость рук", "{FFCB8C}С вероятностью 5% при нанесении урона с руки вы восстановите 2% от общего запаса здоровья"},
		{"Воля к победе", "{FFCB8C}С вероятностью 10% при лечении в больнице вы восстановите 1% от общего уровня сытости"},
		{"Стойкость", "{FFCB8C}Увеличение общего уровня запаса здоровья до 150%"},
		{"Энергия солнца", "{FFCB8C}Увеличение общего уровня запаса сытости до 200%"},
		{"Паучье чутьё", "{FFCB8C}С вероятностью 20% вы уклонитесь от удара, наносимого с руки"},
		{"Сила духа", "{FFCB8C}Становится доступным навык 'Решительность'. Используя его, вы самостоятельно покинете ту организацию, в которой состоите"},
		{"Боевой дух", "{FFCB8C}Позволяет изучать стили боя в 2 раза быстрее"},
		{"Вышибала", "{FFCB8C}С вероятностью 10% при нанесении урона с руки вы оглушите противника на 2 секунды"}
	}
};
/**************************Игра в дурака*******************/
#define MAX_FOOL 8
new Float:tablepos[MAX_FOOL][3] = {
	{-2310.19971, 1779.41357, 32.69190},
	{-2314.02563, 1779.41357, 32.69190},
	{-2310.19971, 1784.11694, 32.69190},
	{-2314.02563, 1784.11694, 32.69190},
	{-2313.59863, 1810.08130, 32.69190},
	{-2317.90234, 1810.08130, 32.69190},
	{-2313.59863, 1805.28320, 32.69190},
	{-2317.90234, 1805.28320, 32.69190}
};
enum foolinfo
{
	Text3D:foolText,
	foolPlayers,
	foolBet,
	foolBank,
	foolGamestart,
	foolTotal,
	foolAttack,
	foolPodkid,
	foolDefence,
	foolBito,
	foolNum,
	foolUpcards,
	foolTimer,
	foolDowncards,
	foolArea,
	foolDefCards,
	foolPos,
	foolTrump[2]
}
new FoolInfo[MAX_FOOL][foolinfo];
new FoolGamers[MAX_FOOL][4] = {
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...}
};
//Интерфейс
new Text:FoolCardsTD[MAX_FOOL][6];//Карты хода
new Text:BitCardsTD[MAX_FOOL][6];//Карты игрока, который бьётся
new Text:TrumpCardsTD[MAX_FOOL][3];//Козырь и колода
new Text:FoolMenuTD[MAX_FOOL][7];//Меню стола
new Text:FoolPlayersTD[MAX_FOOL][8];//Игроки и статус в дурака
new Text:FoolOtherTD[MAX_FOOL][5];//Остальные элементы
new PlayerText:FoolCards[MAX_PLAYERS][18];//Карты в раздаче
//
#include <fool_cards>
new PlayerCards[MAX_PLAYERS][36][16];
new UpCards[MAX_FOOL][6][16];
new DownCards[MAX_FOOL][6][16];
/**************************Игра коины 1х1*******************/
new PlayerText:CoinsTD[MAX_PLAYERS][4];
new Text:CoinsMenu[6];
new CoinsOpponent[MAX_PLAYERS] = INVALID_PLAYER_ID;
new CoinsSelect[MAX_PLAYERS] = -1;
new CoinsBet[MAX_PLAYERS];
new CoinsPick;
/**************************Алькатрас*******************/
PlayerText:CreateChain(playerid, Float:x, Float:y, color)
{
	new PlayerText:temp;
	temp = CreatePlayerTextDraw(playerid, x, y, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, temp, 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, temp, 20.444427, 10.951126);
	PlayerTextDrawAlignment(playerid, temp, 1);
	PlayerTextDrawColor(playerid, temp, color);
	PlayerTextDrawSetShadow(playerid, temp, 0);
	PlayerTextDrawSetOutline(playerid, temp, 0);
	PlayerTextDrawFont(playerid, temp, 4);
	PlayerTextDrawSetSelectable(playerid, temp, true);
	PlayerTextDrawShow(playerid, temp);
	return temp;
}
enum alkdrop
{
	alType,
	Text3D:alText,
	alObj,
	bool:alCreated,
	Float:alX,
	Float:alY,
	Float:alZ
}
new AlkatrazPickup;
new AlkatrazDrop[10][alkdrop];
new Float:DropPos[10][4] = {
	{-2207.5012,1792.1854,1054.9347,299.6894}, 
	{-2223.5100,1795.9265,1062.9725,49.8006}, 
	{-2218.3828,1840.0464,1054.9347,312.7082}, 
	{-2300.1731,1795.9772,33.7404,273.0782}, 
	{-2335.8262,1780.8557,33.3348,166.5907}, 
	{-2376.4050,1786.4161,33.6335,49.5025}, 
	{-2371.5977,1806.1232,33.6283,329.5182}, 
	{-2355.0688,1827.0210,33.4951,280.0948}, 
	{-2336.3291,1826.7717,33.3577,284.4814}, 
	{-2331.9734,1821.0212,33.3243,295.5944}
};
new AlkCP[3][2];//0 - street, 1 - interior, 2 - vents
enum alDoors
{
	Float:alClose_X,
	Float:alClose_Y,
	Float:alClose_Z,
	Float:alOpen_Y,
	bool:alOpen,
	alWorld
}
new Float:AlkatrazToogle[33][3] = {
	//1
	{-2220.927978, 1796.506103, 1055.651611},
	{-2220.927978, 1800.502197, 1055.651611},
	{-2220.927978, 1804.500244, 1055.651611},
	{-2220.927978, 1808.500244, 1055.651611},
	{-2220.927978, 1812.433837, 1055.651611},
	{-2220.927978, 1816.433837, 1055.651611},
	{-2220.927978, 1820.431884, 1055.651611},
	{-2220.927978, 1824.431884, 1055.651611},
	{-2220.927978, 1828.426025, 1055.651611},
	{-2220.927978, 1832.426025, 1055.651611},	
	{-2220.927978, 1836.424072, 1055.651611},
	//2
	{-2220.927978, 1796.506103, 1059.606933},
	{-2220.927978, 1800.502197, 1059.606933},
	{-2220.927978, 1804.500244, 1059.606933},
	{-2220.927978, 1808.500244, 1059.606933},
	{-2220.927978, 1812.433837, 1059.606933},
	{-2220.927978, 1816.433837, 1059.606933},
	{-2220.927978, 1820.431884, 1059.606933},
	{-2220.927978, 1824.431884, 1059.606933},
	{-2220.927978, 1828.426025, 1059.606933},
	{-2220.927978, 1832.426025, 1059.606933},	
	{-2220.927978, 1836.424072, 1059.606933},
	//3
	{-2220.927978, 1796.506103, 1063.744262},
	{-2220.927978, 1800.502197, 1063.744262},
	{-2220.927978, 1804.500244, 1063.744262},
	{-2220.927978, 1808.500244, 1063.744262},
	{-2220.927978, 1812.433837, 1063.744262},
	{-2220.927978, 1816.433837, 1063.744262},
	{-2220.927978, 1820.431884, 1063.744262},
	{-2220.927978, 1824.431884, 1063.744262},
	{-2220.927978, 1828.426025, 1063.744262},
	{-2220.927978, 1832.426025, 1063.744262},	
	{-2220.927978, 1836.424072, 1063.744262}		
};
new AlkatrazDoors[165][alDoors] = {
	//1 floor
	{-2220.906494, 1797.605590, 1063.254272, 1799.105590, false,1},
	{-2220.906494, 1801.605590, 1063.254272, 1803.105590, false,1},
	{-2220.906494, 1805.605590, 1063.254272, 1807.105590, false,1},
	{-2220.906494, 1809.605590, 1063.254272, 1811.105590, false,1},
	{-2220.906494, 1813.605590, 1063.254272, 1815.105590, false,1},
	{-2220.906494, 1817.605590, 1063.254272, 1819.105590, false,1},
	{-2220.906494, 1821.605590, 1063.254272, 1823.105590, false,1},
	{-2220.906494, 1825.605590, 1063.254272, 1827.105590, false,1},
	{-2220.906494, 1829.605590, 1063.254272, 1831.105590, false,1},
	{-2220.906494, 1833.605590, 1063.254272, 1835.105590, false,1},
	{-2220.906494, 1837.605590, 1063.254272, 1839.105590, false,1},
	//2 floor
	{-2220.906494, 1797.605590, 1055.204345, 1799.105590, false,1},
	{-2220.906494, 1801.605590, 1055.204345, 1803.105590, false,1},
	{-2220.906494, 1805.605590, 1055.204345, 1807.105590, false,1},
	{-2220.906494, 1809.605590, 1055.204345, 1811.105590, false,1},
	{-2220.906494, 1813.605590, 1055.204345, 1815.105590, false,1},
	{-2220.906494, 1817.605590, 1055.204345, 1819.105590, false,1},
	{-2220.906494, 1821.605590, 1055.204345, 1823.105590, false,1},
	{-2220.906494, 1825.605590, 1055.204345, 1827.105590, false,1},
	{-2220.906494, 1829.605590, 1055.204345, 1831.105590, false,1},
	{-2220.906494, 1833.605590, 1055.204345, 1835.105590, false,1},
	{-2220.906494, 1837.605590, 1055.204345, 1839.105590, false,1},
	//3 floor
	{-2220.906494, 1797.605590, 1059.204345, 1799.105590, false,1},
	{-2220.906494, 1801.605590, 1059.204345, 1803.105590, false,1},
	{-2220.906494, 1805.605590, 1059.204345, 1807.105590, false,1},
	{-2220.906494, 1809.605590, 1059.204345, 1811.105590, false,1},
	{-2220.906494, 1813.605590, 1059.204345, 1815.105590, false,1},
	{-2220.906494, 1817.605590, 1059.204345, 1819.105590, false,1},
	{-2220.906494, 1821.605590, 1059.204345, 1823.105590, false,1},
	{-2220.906494, 1825.605590, 1059.204345, 1827.105590, false,1},
	{-2220.906494, 1829.605590, 1059.204345, 1831.105590, false,1},
	{-2220.906494, 1833.605590, 1059.204345, 1835.105590, false,1},
	{-2220.906494, 1837.605590, 1059.204345, 1839.105590, false,1},
	//1 floor
	{-2220.906494, 1797.605590, 1063.254272, 1799.105590, false,2},
	{-2220.906494, 1801.605590, 1063.254272, 1803.105590, false,2},
	{-2220.906494, 1805.605590, 1063.254272, 1807.105590, false,2},
	{-2220.906494, 1809.605590, 1063.254272, 1811.105590, false,2},
	{-2220.906494, 1813.605590, 1063.254272, 1815.105590, false,2},
	{-2220.906494, 1817.605590, 1063.254272, 1819.105590, false,2},
	{-2220.906494, 1821.605590, 1063.254272, 1823.105590, false,2},
	{-2220.906494, 1825.605590, 1063.254272, 1827.105590, false,2},
	{-2220.906494, 1829.605590, 1063.254272, 1831.105590, false,2},
	{-2220.906494, 1833.605590, 1063.254272, 1835.105590, false,2},
	{-2220.906494, 1837.605590, 1063.254272, 1839.105590, false,2},
	//2 floor
	{-2220.906494, 1797.605590, 1055.204345, 1799.105590, false,2},
	{-2220.906494, 1801.605590, 1055.204345, 1803.105590, false,2},
	{-2220.906494, 1805.605590, 1055.204345, 1807.105590, false,2},
	{-2220.906494, 1809.605590, 1055.204345, 1811.105590, false,2},
	{-2220.906494, 1813.605590, 1055.204345, 1815.105590, false,2},
	{-2220.906494, 1817.605590, 1055.204345, 1819.105590, false,2},
	{-2220.906494, 1821.605590, 1055.204345, 1823.105590, false,2},
	{-2220.906494, 1825.605590, 1055.204345, 1827.105590, false,2},
	{-2220.906494, 1829.605590, 1055.204345, 1831.105590, false,2},
	{-2220.906494, 1833.605590, 1055.204345, 1835.105590, false,2},
	{-2220.906494, 1837.605590, 1055.204345, 1839.105590, false,2},
	//3 floor
	{-2220.906494, 1797.605590, 1059.204345, 1799.105590, false,2},
	{-2220.906494, 1801.605590, 1059.204345, 1803.105590, false,2},
	{-2220.906494, 1805.605590, 1059.204345, 1807.105590, false,2},
	{-2220.906494, 1809.605590, 1059.204345, 1811.105590, false,2},
	{-2220.906494, 1813.605590, 1059.204345, 1815.105590, false,2},
	{-2220.906494, 1817.605590, 1059.204345, 1819.105590, false,2},
	{-2220.906494, 1821.605590, 1059.204345, 1823.105590, false,2},
	{-2220.906494, 1825.605590, 1059.204345, 1827.105590, false,2},
	{-2220.906494, 1829.605590, 1059.204345, 1831.105590, false,2},
	{-2220.906494, 1833.605590, 1059.204345, 1835.105590, false,2},
	{-2220.906494, 1837.605590, 1059.204345, 1839.105590, false,2},
	//1 floor
	{-2220.906494, 1797.605590, 1063.254272, 1799.105590, false,3},
	{-2220.906494, 1801.605590, 1063.254272, 1803.105590, false,3},
	{-2220.906494, 1805.605590, 1063.254272, 1807.105590, false,3},
	{-2220.906494, 1809.605590, 1063.254272, 1811.105590, false,3},
	{-2220.906494, 1813.605590, 1063.254272, 1815.105590, false,3},
	{-2220.906494, 1817.605590, 1063.254272, 1819.105590, false,3},
	{-2220.906494, 1821.605590, 1063.254272, 1823.105590, false,3},
	{-2220.906494, 1825.605590, 1063.254272, 1827.105590, false,3},
	{-2220.906494, 1829.605590, 1063.254272, 1831.105590, false,3},
	{-2220.906494, 1833.605590, 1063.254272, 1835.105590, false,3},
	{-2220.906494, 1837.605590, 1063.254272, 1839.105590, false,3},
	//2 floor
	{-2220.906494, 1797.605590, 1055.204345, 1799.105590, false,3},
	{-2220.906494, 1801.605590, 1055.204345, 1803.105590, false,3},
	{-2220.906494, 1805.605590, 1055.204345, 1807.105590, false,3},
	{-2220.906494, 1809.605590, 1055.204345, 1811.105590, false,3},
	{-2220.906494, 1813.605590, 1055.204345, 1815.105590, false,3},
	{-2220.906494, 1817.605590, 1055.204345, 1819.105590, false,3},
	{-2220.906494, 1821.605590, 1055.204345, 1823.105590, false,3},
	{-2220.906494, 1825.605590, 1055.204345, 1827.105590, false,3},
	{-2220.906494, 1829.605590, 1055.204345, 1831.105590, false,3},
	{-2220.906494, 1833.605590, 1055.204345, 1835.105590, false,3},
	{-2220.906494, 1837.605590, 1055.204345, 1839.105590, false,3},
	//3 floor
	{-2220.906494, 1797.605590, 1059.204345, 1799.105590, false,3},
	{-2220.906494, 1801.605590, 1059.204345, 1803.105590, false,3},
	{-2220.906494, 1805.605590, 1059.204345, 1807.105590, false,3},
	{-2220.906494, 1809.605590, 1059.204345, 1811.105590, false,3},
	{-2220.906494, 1813.605590, 1059.204345, 1815.105590, false,3},
	{-2220.906494, 1817.605590, 1059.204345, 1819.105590, false,3},
	{-2220.906494, 1821.605590, 1059.204345, 1823.105590, false,3},
	{-2220.906494, 1825.605590, 1059.204345, 1827.105590, false,3},
	{-2220.906494, 1829.605590, 1059.204345, 1831.105590, false,3},
	{-2220.906494, 1833.605590, 1059.204345, 1835.105590, false,3},
	{-2220.906494, 1837.605590, 1059.204345, 1839.105590, false,3},
	//1 floor
	{-2220.906494, 1797.605590, 1063.254272, 1799.105590, false,4},
	{-2220.906494, 1801.605590, 1063.254272, 1803.105590, false,4},
	{-2220.906494, 1805.605590, 1063.254272, 1807.105590, false,4},
	{-2220.906494, 1809.605590, 1063.254272, 1811.105590, false,4},
	{-2220.906494, 1813.605590, 1063.254272, 1815.105590, false,4},
	{-2220.906494, 1817.605590, 1063.254272, 1819.105590, false,4},
	{-2220.906494, 1821.605590, 1063.254272, 1823.105590, false,4},
	{-2220.906494, 1825.605590, 1063.254272, 1827.105590, false,4},
	{-2220.906494, 1829.605590, 1063.254272, 1831.105590, false,4},
	{-2220.906494, 1833.605590, 1063.254272, 1835.105590, false,4},
	{-2220.906494, 1837.605590, 1063.254272, 1839.105590, false,4},
	//2 floor
	{-2220.906494, 1797.605590, 1055.204345, 1799.105590, false,4},
	{-2220.906494, 1801.605590, 1055.204345, 1803.105590, false,4},
	{-2220.906494, 1805.605590, 1055.204345, 1807.105590, false,4},
	{-2220.906494, 1809.605590, 1055.204345, 1811.105590, false,4},
	{-2220.906494, 1813.605590, 1055.204345, 1815.105590, false,4},
	{-2220.906494, 1817.605590, 1055.204345, 1819.105590, false,4},
	{-2220.906494, 1821.605590, 1055.204345, 1823.105590, false,4},
	{-2220.906494, 1825.605590, 1055.204345, 1827.105590, false,4},
	{-2220.906494, 1829.605590, 1055.204345, 1831.105590, false,4},
	{-2220.906494, 1833.605590, 1055.204345, 1835.105590, false,4},
	{-2220.906494, 1837.605590, 1055.204345, 1839.105590, false,4},
	//3 floor
	{-2220.906494, 1797.605590, 1059.204345, 1799.105590, false,4},
	{-2220.906494, 1801.605590, 1059.204345, 1803.105590, false,4},
	{-2220.906494, 1805.605590, 1059.204345, 1807.105590, false,4},
	{-2220.906494, 1809.605590, 1059.204345, 1811.105590, false,4},
	{-2220.906494, 1813.605590, 1059.204345, 1815.105590, false,4},
	{-2220.906494, 1817.605590, 1059.204345, 1819.105590, false,4},
	{-2220.906494, 1821.605590, 1059.204345, 1823.105590, false,4},
	{-2220.906494, 1825.605590, 1059.204345, 1827.105590, false,4},
	{-2220.906494, 1829.605590, 1059.204345, 1831.105590, false,4},
	{-2220.906494, 1833.605590, 1059.204345, 1835.105590, false,4},
	{-2220.906494, 1837.605590, 1059.204345, 1839.105590, false,4},
	//1 floor
	{-2220.906494, 1797.605590, 1063.254272, 1799.105590, false,5},
	{-2220.906494, 1801.605590, 1063.254272, 1803.105590, false,5},
	{-2220.906494, 1805.605590, 1063.254272, 1807.105590, false,5},
	{-2220.906494, 1809.605590, 1063.254272, 1811.105590, false,5},
	{-2220.906494, 1813.605590, 1063.254272, 1815.105590, false,5},
	{-2220.906494, 1817.605590, 1063.254272, 1819.105590, false,5},
	{-2220.906494, 1821.605590, 1063.254272, 1823.105590, false,5},
	{-2220.906494, 1825.605590, 1063.254272, 1827.105590, false,5},
	{-2220.906494, 1829.605590, 1063.254272, 1831.105590, false,5},
	{-2220.906494, 1833.605590, 1063.254272, 1835.105590, false,5},
	{-2220.906494, 1837.605590, 1063.254272, 1839.105590, false,5},
	//2 floor
	{-2220.906494, 1797.605590, 1055.204345, 1799.105590, false,5},
	{-2220.906494, 1801.605590, 1055.204345, 1803.105590, false,5},
	{-2220.906494, 1805.605590, 1055.204345, 1807.105590, false,5},
	{-2220.906494, 1809.605590, 1055.204345, 1811.105590, false,5},
	{-2220.906494, 1813.605590, 1055.204345, 1815.105590, false,5},
	{-2220.906494, 1817.605590, 1055.204345, 1819.105590, false,5},
	{-2220.906494, 1821.605590, 1055.204345, 1823.105590, false,5},
	{-2220.906494, 1825.605590, 1055.204345, 1827.105590, false,5},
	{-2220.906494, 1829.605590, 1055.204345, 1831.105590, false,5},
	{-2220.906494, 1833.605590, 1055.204345, 1835.105590, false,5},
	{-2220.906494, 1837.605590, 1055.204345, 1839.105590, false,5},
	//3 floor
	{-2220.906494, 1797.605590, 1059.204345, 1799.105590, false,5},
	{-2220.906494, 1801.605590, 1059.204345, 1803.105590, false,5},
	{-2220.906494, 1805.605590, 1059.204345, 1807.105590, false,5},
	{-2220.906494, 1809.605590, 1059.204345, 1811.105590, false,5},
	{-2220.906494, 1813.605590, 1059.204345, 1815.105590, false,5},
	{-2220.906494, 1817.605590, 1059.204345, 1819.105590, false,5},
	{-2220.906494, 1821.605590, 1059.204345, 1823.105590, false,5},
	{-2220.906494, 1825.605590, 1059.204345, 1827.105590, false,5},
	{-2220.906494, 1829.605590, 1059.204345, 1831.105590, false,5},
	{-2220.906494, 1833.605590, 1059.204345, 1835.105590, false,5},
	{-2220.906494, 1837.605590, 1059.204345, 1839.105590, false,5}
};
new AlkGate[165];
new Text:AlkMenu[15];
new PlayerText:AlkTD[MAX_PLAYERS][8];
new Float:ChainPos[7] = {292.000000, 310.500000, 270.333129, 349.555297, 332.777374, 291.555114, 330.777374};
new Float:AlkatrazVent[33][3] = {
	{-2226.726806, 1837.304321, 1063.153564},
	{-2226.720214, 1833.284912, 1059.103515},
	{-2226.736083, 1829.300537, 1059.103515},
	{-2226.736328, 1797.339355, 1059.103515},
	{-2226.720458, 1801.323730, 1059.103515},
	{-2226.727050, 1805.343139, 1059.103515},
	{-2226.711181, 1809.327514, 1059.103515},
	{-2226.722900, 1813.289062, 1059.103515},
	{-2226.707031, 1817.273437, 1059.103515},
	{-2226.713623, 1821.292846, 1059.103515},
	{-2226.697753, 1825.277221, 1059.103515},
	{-2226.736328, 1797.339355, 1055.053466},
	{-2226.720458, 1801.323730, 1055.053466},
	{-2226.727050, 1805.343139, 1055.053466},
	{-2226.711181, 1809.327514, 1055.053466},
	{-2226.722900, 1813.289062, 1055.053466},
	{-2226.707031, 1817.273437, 1055.053466},
	{-2226.713623, 1821.292846, 1055.053466},
	{-2226.697753, 1825.277221, 1055.053466},
	{-2226.736083, 1829.300537, 1055.053466},
	{-2226.720214, 1833.284912, 1055.053466},
	{-2226.720214, 1833.284912, 1063.153564},
	{-2226.736083, 1829.300537, 1063.153564},
	{-2226.697753, 1825.277221, 1063.153564},
	{-2226.713623, 1821.292846, 1063.153564},
	{-2226.707031, 1817.273437, 1063.153564},
	{-2226.722900, 1813.289062, 1063.153564},
	{-2226.711181, 1809.327514, 1063.153564},
	{-2226.727050, 1805.343139, 1063.153564},
	{-2226.720458, 1801.323730, 1063.153564},
	{-2226.736328, 1797.339355, 1063.153564},
	{-2226.726806, 1837.304321, 1055.053466},
	{-2226.726806, 1837.304321, 1059.103515}
};
/**************************Радары*******************/
enum rinfo
{
	rOwner[MAX_PLAYER_NAME],
	rArea,
	rRemove,
	rSpeed,
	Text3D:rText,
	rObject
}
new RadarInfo[MAX_PLAYERS][rinfo];
/**************************Пейнтбол*******************/
enum painfo 
{ 
    pbName[MAX_PLAYER_NAME], 
    pbKills, 
    pbDeaths, 
}; 
new PaintInfo[15][painfo], PaintList;
new PaintArea[2][2];
new PaintGun[2] = {24,31}; 
new Float:PaintballSpawns[6][3] = { 
    {2563.6877,2807.0288,10.8203}, 
    {2554.0505,2837.7419,10.8203}, 
    {2585.6748,2848.5283,10.8203}, 
    {2598.7083,2843.5200,10.8203}, 
    {2546.7622,2830.9004,14.2559}, 
    {2575.9900,2839.3103,19.9922} 
}; 
new paintt[3]; 
/**************************Подземные парковки*******************/
#define MAX_PARKING 23
enum parkinfo
{
	Float:parkPos[4],
	Float:parkExit[4],
	parkWorld
}
new ParkInfo[MAX_PARKING][parkinfo];
/***********************Скиллы для оружия*********************************/
new iPlayerAmmo[MAX_PLAYERS];
new iNewPlayerAmmo[MAX_PLAYERS];
#define AMMO_PISTOL 	12
#define AMMO_SDPISTOL 	12
#define AMMO_DEAGLE 	14
#define AMMO_SHOTGUN 	8
#define AMMO_MP5 		25
#define AMMO_UZI 		25
#define AMMO_AK47 		30
#define AMMO_M4A1		30
#define AMMO_RIFLE		15
/**************************Семьи*******************/
new FamilyColor[18][] =
{
	"af9a5b",
	"b1b7f1",
	"5ba8a4",
	"b9378f",
	"1028f4",
	"5054ec",
	"01ff23",
	"f29527",
	"6c4559",
	"f2dafe",
	"7eadff",
	"c95eec",
	"852048",
	"76b3f2",
	"dcb72b",
	"31d166",
	"3969cd",
	"c9e8f2"
};
enum pFamilyInfo
{
	famID,
	famName[40],
	famLider[24],
	famZam[24],
	famColor,
	famSkladZam[25],
	famStatusSklad,
Float:famSpawn[4],
	famVirtalWorld,
	famInterior,
	famHouse,
	famAmount
};
new FamilyObjects[6] = {1212, 2061, 1279, 19163, 1650, 19832};
new FractionObjects[5] = {2061, 1279, 19163, 1650, 19832};
new ClosetObjects[3] = {1212, 2061, 1279};
new FamilyInfo[MAX_PLAYERS][pFamilyInfo];
new FamilyValue[MAX_PLAYERS][25];
/**************************Семьи*******************/
new FractionValue[MAX_ORGS][25];
enum pInfo
{
	pID,
	pKey,
	pTalents[4],
	pGPS,
	pKeyCheck,
	pGlue,
	pOtvertka,
	pJB,
	pOldRepl,
	pItems,
	pCredit_KD,
	pCredit_Default,
	pItem[5],
	pPhone,
	pChainPos[7],
	Text3D:AlkatrazText,
	AlkatrazObject,
	pChainComplete,
	Miner_Skill,
	Taxi_Skill,
	pAllRepl,
	FamilyMute,
	pFracSkin,
	pBirja[2],
	AuthAct,
	AuthCode[17],
	FamilyID,
	pExp,
	Donate_Score,
	pCase,
	pChat,
	pLoading,
	pWanted,
	DATE[12],
	pVIP,
	pVipTime,
	pLeader,
	pMember,
	pAdmin,
	pHelper,
	pWeapon[3],
	pAmmo[3],
	pGunLic,
	pBoatLic,
	pFishLic,
	pFlyLic,
	pCarLic,
	pBikeLic,
	Float:pOld[3],
	pVirMoney,
	pWarns,
	pSnow,
	pFWarns,
	RoulBalance,
	pView,
	pRank,
	pCars,
	pSex,
	pRace,
	pBank,
	pSkin,
	pOldSkin,
	pCCase,
	pGun[3],
	pValue,
	pD_Packets,
	pScrew,
	pPlayHours,
	pJob,
	pMuteTime,
	pFMuteTime,
	pHeal,
	pHealTime,
	pJailTime,
	pBailPrice,
	pKungfu,
	pKneehead,
	pElbow,
	pBoxing,
	pSpawned,
	pSpining,
	pWorms,
	pRadio,
	pMaskON,
	pLanguage,
	pPasatizhi,
	pDCTime,
	pPhoneBook,
	pPistol_Skill,
	pSDPistol_Skill,
	pEagle_Skill,
	pShotGun_Skill,
	pUZI_Skill,
	pMP5_Skill,
	pAK47_Skill,
	pM4_Skill,
	pSniper_Skill,
	pInvGun,
	pInvAmmo,
	pGlasses,
	pBandans,
	pGold,
	pHats,
	pOOC,
	pBL,
	pZKP,
	Float:pHealth,
	Float:pArmour,
	Float:pShield,
	pArmours,
	pSprunk,
	pCheeps,
	pBeer,
	pSprunks,
	pCheepses,
	pBeers,
	pGetBonus,
	pClip,
	pCredit,
	pBlackout,
	pSyringe,
	pRope,
	pBomb,
	pRepBan,
	pAskBan,
	pRPTest, 
 	pBuyWalent,
	pF_Skill,
	pZ_Skill,
	pP_Skill,
	pZa_Skill,
	pIn_Skill,
	pMy_Skill,
	pBy_Skill,
	pEnergy,
	pAmmos[13],
	pGuns[13],
	pShowName,
	pMerrit[25],
 	pSendName[25],
	pApass[30],
 	pCalling,
 	pONPhoneTalk,
 	pbydilnik,
	pKazpay,
	pKlogin,
	pLastGun,
	pLastAmmo,
	pTimeToLastWarn,
	oInTir,
	preOrg,
	preOrgg,
	pObjikt,
	Float:pLeftPosx,
	Float:pLeftPosy,
	Float:pRightPosx,
	Float:pRightPosy,
	pHSpectr,
	pScutes,
	pMScutes,
	pVID,
	pType,
	pSlotItem[6],
	pNeedMessage,
	pRedio,
	pHospital,
	pLastLogin[120],
	pLastIP[60],
	pShowIper,
	pSecond,
	PromoUsed[20],
	PromoActive,
	pHavePassword,
	bool:NeedRemove[6]
}
new PlayerInfo[MAX_PLAYERS][pInfo];
new ClosetValue[MAX_HOUSES][25];
new TrunkValue[MAX_OWNABLECARS][24];
/**************************Инвентарь*******************/
stock Translate(const str[]){ 
	new result[256]; 
	for (new i; i < 256; i++){ 
		switch (str[i]){ 
		case 'а', 'А': result[i] = 'A'; case 'б', 'Б': result[i] = 'Ђ'; case 'в', 'В': result[i] = 'B'; case 'г', 'Г': result[i] = '‚'; 
		case 'д', 'Д': result[i] = 'ѓ'; case 'е', 'Е': result[i] = 'E'; case 'ё', 'Ё': result[i] = 'E'; case 'ж', 'Ж': result[i] = '„'; 
		case 'з', 'З': result[i] = '3'; case 'и', 'И': result[i] = '…'; case 'й', 'Й': result[i] = '†'; case 'к', 'К': result[i] = 'K'; 
		case 'л', 'Л': result[i] = '‡'; case 'м', 'М': result[i] = 'M'; case 'н', 'Н': result[i] = 'H'; case 'о', 'О': result[i] = 'O'; 
		case 'п', 'П': result[i] = 'Њ'; case 'р', 'Р': result[i] = 'P'; case 'с', 'С': result[i] = 'C'; case 'т', 'Т': result[i] = 'T'; 
		case 'у', 'У': result[i] = 'Y'; case 'ф', 'Ф': result[i] = 'Ѓ'; case 'х', 'Х': result[i] = 'X'; case 'ц', 'Ц': result[i] = '‰'; 
		case 'ч', 'Ч': result[i] = 'Ќ'; case 'ш', 'Ш': result[i] = 'Ћ'; case 'щ', 'Щ': result[i] = 'Љ'; case 'ъ', 'Ъ': result[i] = 'ђ'; 
		case 'ы', 'Ы': result[i] = '‘'; case 'ь', 'Ь': result[i] = '’'; case 'э', 'Э': result[i] = '“'; case 'ю', 'Ю': result[i] = '”'; 
		case 'я', 'Я': result[i] = '•'; 
		default: result[i] = str[i]; 
		} 
	} 
	return result; 
}
new Float:InventarItemPos[50][2] = {
	//player
	{134.000000, 169.000000},
	{166.000000, 169.000000},
	{198.000000, 169.000000},
	{230.000000, 169.000000},
	{262.000000, 169.000000},
	{134.000000, 201.000000},
	{166.000000, 201.000000},
	{198.000000, 201.000000},
	{230.000000, 201.000000},
	{262.000000, 201.000000},
	{134.000000, 233.000000},
	{166.000000, 233.000000},
	{198.000000, 233.000000},
	{230.000000, 233.000000},
	{262.000000, 233.000000},
	{134.000000, 265.000000},
	{166.000000, 265.000000},
	{198.000000, 265.000000},
	{230.000000, 265.000000},
	{262.000000, 265.000000},
	{134.000000, 297.000000},
	{166.000000, 297.000000},
	{198.000000, 297.000000},
	{230.000000, 297.000000},
	{262.000000, 297.000000},
	//window
	{308.000000, 169.000000},
	{340.000000, 169.000000},
	{372.000000, 169.000000},
	{404.000000, 169.000000},
	{436.000000, 169.000000},
	{308.000000, 201.000000},
	{340.000000, 201.000000},
	{372.000000, 201.000000},
	{404.000000, 201.000000},
	{436.000000, 201.000000},
	{308.000000, 233.000000},
	{340.000000, 233.000000},
	{372.000000, 233.000000},
	{404.000000, 233.000000},
	{436.000000, 233.000000},
	{308.000000, 265.000000},
	{340.000000, 265.000000},
	{372.000000, 265.000000},
	{404.000000, 265.000000},
	{436.000000, 265.000000},
	{308.000000, 297.000000},
	{340.000000, 297.000000},
	{372.000000, 297.000000},
	{404.000000, 297.000000},
	{436.000000, 297.000000}
};
#define FREE_SLOT_OBJECT 	19374
#define USED_SLOT_FLOAT		-10.0, 0.0, 30.0, 1.0
#define DEFAULT_SLOT_BG		-907345921
#define EMPTY_SLOT_BG		0xACACACFF
#define ACTIVE_SLOT_BG		0x0099FFAA
new Float:TradeSlotPos[8][2] = {
	{187.000000, 374.000000},
	{219.000000, 374.000000},
	{251.000000, 374.000000},
	{283.000000, 374.000000},
	{327.000000, 374.000000},
	{359.000000, 374.000000},
	{391.000000, 374.000000},
	{423.000000, 374.000000}
};
new PlayerText:InventarOther[MAX_PLAYERS][36];
new PlayerText:InventarItems[MAX_PLAYERS][50];
new PlayerText:InventarValue[MAX_PLAYERS][50];
new PlayerText:InventarAction[MAX_PLAYERS][5];
new PlayerText:ClosetOther[MAX_PLAYERS][2];
new PlayerText:TradeSlots[MAX_PLAYERS][12];
new PlayerText:TradeValue[MAX_PLAYERS][8];
new PlayerText:QuickItems[MAX_PLAYERS][8];
new GunColor[3] = {-1, 0xD94141FF, 0x696969FF};
new CaseColor[9] = {-1, 0x0042E8FF, 0xFF33E7FF, 0x00FF6FFF, 0xFFCD00FF, 0x00F2FFFF, 0xA800FCFF, 0xD94141FF, 0x696969FF};
new Text:InventarTD[19];
new Text:TradeTD[5];
new Text:ClosetTD[5];
new Language[46][2][] = {
	{"CHARACTER", "ПЕРСОНАЖ"},//0
	{"SKILLS", "СКИЛЛЫ"},//1
	{"TALENTS", "ТАЛАНТЫ"},//2
	{"TRUNK", "БАГАЖНИК"},//3
	{"FRACTION", "фРАКЦИЯ"},//4
	{"FAMILY", "СЕМЬЯ"},//5
	{"CLOSET", "ШКАФ"},//6
	{"REPORT", "РЕПОРТ"},//7
	{"ACCESSORIES", "АКСЕССУАРЫ"},//8
	{"YOUR ITEMS", "ВАШИ ПРЕДМЕТЫ"},//9
	{"CLOSE", "ЗАКРЫТЬ"},//10
	{"USE", "ИСПОЛЬЗОВАТЬ"},//11
	{"TRADE", "ОБМЕНЯТЬ"},//12
	{"DETAILS", "ПОДРОБНЕЕ"},//13
	{"FRACTION ITEMS", "ПРЕДМЕТЫ ОРГАНИЗАЦИИ"},//14
	{"CLOSET ITEMS", "ПРЕДМЕТЫ В ШКАФУ"},//15
	{"FAMILY ITEMS", "ПРЕДМЕТЫ СЕМЬИ"},//16
	{"TRUNK ITEMS", "ПРЕДМЕТЫ В БАГАЖНИКЕ"},//17
	{"YOU TRADING", "ВЫ МЕНЯЕТЕ"},//18
	{"ACCEPT", "ПРИНЯТЬ"},//19
	{"DECLINE", "ОТКЛОНИТь"},//20
	{"THROW", "ВЫБРОСИТЬ"},//21
	{"PUT", "ПОЛОЖИТЬ"},//22
	{"TRADE OFFER", "ПРЕДЛОЖИТЬ ОБМЕН"},//23
	{"GREET", "ПОПРИВЕТСТВОВАТЬ"},//24
	{"SHOW PASSPORT", "ПОКАЗАТЬ ПАСПОРТ"},//25
	{"SHOW LICENSES", "ПОКАЗАТЬ ЛИЦЕНЗИИ"},//26
	{"SHOW SKILLS", "ПОКАЗАТЬ СКИЛЛЫ"},//27
	{"SHOW MED.CARD", "ПОКАЗАТЬ МЕД.КАРТУ"},//28
	{"NEED ASSISTANCE", "НУЖНА ПОДДЕРЖКА"},//29
	{"SET UP", "НАСТРОИТЬ"},//30
	{"CHARACTER's TALENTS", "ТАЛАНТЫ ПЕРСОНАЖА"},//31
	{"AVAILABLE TALENTS: ~p~%d", "ДОСТУПНО ТАЛАНТОВ: ~p~%d"},//32
	{"RESET", "СБРОСИТЬ"},//33
	{"TAKE", "ВЗЯТЬ"},//34
	{"LEARN", "ИЗУЧИТЬ"},//35
	{"MATCHMAKING MENU", "МЕНЮ ПОДБОРА ИГР"},//36
	{"YOUR LOBBY", "ВАШЕ ЛОББИ"},//37
	{"ESTIMATED TIME: ~y~%s", "ВРЕМЯ ОЖИДАНИЯ: ~y~%s"},//38
	{"TIME IN QUEUE: ~y~%s", "ВРЕМЯ В ОЧЕРЕДИ: ~y~%s"},//39
	{"PLAYERS ONLINE: ~y~%d", "ИГРОКОВ В СЕТИ: ~y~%d"},//40
	{"PLAYER IN QUEUE: ~y~%d", "ИГРОКОВ В ПОИСКЕ: ~y~%d"},//41
	{"STOP SEARCH", "ОСТАНОВИТЬ ПОИСК"},//42
	{"SEARCH SETTINGS", "НАСТРОЙКИ ПОИСКА"},//43
	{"RACING DERBY", "ГОНОЧНОЕ ДЕРБИ"},//44
	{"GUN FIGHT", "ОРУЖЕЙНАЯ СХВАТКА"}//45
};
enum itemsenum{
	invID,
	invObj,
	invDesc[256],
	invUse,
	invTrade
};
new bool:TrunkInfo[MAX_VEHICLES];
new idaofcar[MAX_PLAYERS];
new TrunkObjects[6] = {19804, 1212, 2061, 1279, 11738, 1650};
new ItemsInfo[][itemsenum] = {
	{1, 1212, "{FFFFFF}Наличность персонажа\n{FFCB8C}Нельзя использовать\n\n{56A85E}Доступно для обмена с игроками", 0, 1},
	{2, 19522, "{FFFFFF}Дом персонажа (имущество)\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{3, 1277, "{FFFFFF}Квартира персонажа (имущество)\n{FFCB8C}Можно использовать\n\n{FF4400}Недоступно для обмена с игроками", 1, 0},
	{4, 1550, "{FFFFFF}Бизнес персонажа (имущество)\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{5, 1314, "{FFFFFF}Станция технического обслуживания персонажа (имущество)\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{6, FREE_SLOT_OBJECT, "{FFFFFF}Слот транспорта №1 (имущество)\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{7, FREE_SLOT_OBJECT, "{FFFFFF}Слот транспорта №2 (имущество)\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{8, FREE_SLOT_OBJECT, "{FFFFFF}Слот транспорта №3 (имущество)\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{9, FREE_SLOT_OBJECT, "{FFFFFF}Слот транспорта №4 (имущество)\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{10, FREE_SLOT_OBJECT, "{FFFFFF}Слот транспорта №5 (имущество)\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{11, 1895, "{FFFFFF}Casino Royal (имущество)\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{12, 2061, "{FFFFFF}Материалы (ресурс). Используется для изготовления оружия\n{FFCB8C}Нельзя использовать\n\n{56A85E}Доступно для обмена с игроками", 0, 1},
	{13, 11738, "{FFFFFF}Аптечка (расходный материал). Используется для восстановления здоровья\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{14, 19163, "{FFFFFF}Маска (расходный материал). Используется для исчезновения с радаров игроков (временно)\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{15, 1279, "{FFFFFF}Наркотики (расходный материал). Используется для удовлетворения потребностей и восстановления здоровья\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{16, 19896, "{FFFFFF}Сигареты (расходный материал). Используется для удовлетворения потребностей\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{17, 19998, "{FFFFFF}Зажигалка (ресурс). Необходима для прикуривания сигарет\n{FFCB8C}Нельзя использовать\n\n{56A85E}Доступно для обмена с игроками", 0, 1},
	{18, 19832, "{FFFFFF}Рем.комплект (расходный материал). Используется для починки транспорта\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{19, 1254, "{FFFFFF}Яд (расходный материал). Используется для самоубийства\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{20, 1581, "{FFFFFF}SIM-карта (предмет)\n{FFCB8C}Нельзя использовать\n\n{56A85E}Доступно для обмена с игроками", 0, 1},
	{21, 1650, "{FFFFFF}Канистра (расходный материал). 30 литров топлива для вашего транспорта\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{22, 1240, "{FFFFFF}Первая помощь (навык). Восстановливает 25 процентов здоровья вашему персонажу\n{FFCB8C}Можно использовать\n\n{FF4400}Недоступно для обмена с игроками", 1, 0},
	{23, 19627, "{FFFFFF}Экспресс-ремонт (навык). Восстановливает 50 единиц здоровья вашему транспорту\n{FFCB8C}Можно использовать\n\n{FF4400}Недоступно для обмена с игроками", 1, 0},
	{24, 1275, "{FFFFFF}Решительность (навык). Возможность самостоятельно покинуть организацию\n{FFCB8C}Можно использовать\n\n{FF4400}Недоступно для обмена с игроками", 1, 0},
	{25, 1241, "{FFFFFF}Второе дыхание (навык). Возможность преодолевать сильную ломку от наркозависимости\n{FFCB8C}Можно использовать\n\n{FF4400}Недоступно для обмена с игроками", 1, 0},
	{26, FREE_SLOT_OBJECT, "{FFFFFF}Часы (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №3)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{27, FREE_SLOT_OBJECT, "{FFFFFF}Наушники (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №5)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{28, FREE_SLOT_OBJECT, "{FFFFFF}Бандана (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №4)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{29, FREE_SLOT_OBJECT, "{FFFFFF}Очки (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №2)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{30, FREE_SLOT_OBJECT, "{FFFFFF}Шапка (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №1)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{31, FREE_SLOT_OBJECT, "{FFFFFF}Панамка (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №1)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{32, FREE_SLOT_OBJECT, "{FFFFFF}Кепка(козырёк назад) (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №1)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{33, FREE_SLOT_OBJECT, "{FFFFFF}Кепка(козырёк вперёд) (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №1)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{34, FREE_SLOT_OBJECT, "{FFFFFF}Каска (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №1)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{35, FREE_SLOT_OBJECT, "{FFFFFF}Парик (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №1)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{36, FREE_SLOT_OBJECT, "{FFFFFF}Берет (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №1)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{37, FREE_SLOT_OBJECT, "{FFFFFF}Шляпа (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №1)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{38, FREE_SLOT_OBJECT, "{FFFFFF}Рюкзак (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №6)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{39, FREE_SLOT_OBJECT, "{FFFFFF}Усы (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №4)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{40, FREE_SLOT_OBJECT, "{FFFFFF}Гитара (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №6)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{41, FREE_SLOT_OBJECT, "{FFFFFF}Повязка (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №2)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{42, FREE_SLOT_OBJECT, "{FFFFFF}Скейтборд (аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать (Ячейка №6)\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{43, FREE_SLOT_OBJECT, "{FFFFFF}Одежда (внешний вид). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{44, FREE_SLOT_OBJECT, "{FFFFFF}Цветной Desert Eagle (внешний вид/аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{45, FREE_SLOT_OBJECT, "{FFFFFF}Цветной AK-47 (внешний вид/аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{46, FREE_SLOT_OBJECT, "{FFFFFF}Цветной Shotgun (внешний вид/аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1},
	{47, FREE_SLOT_OBJECT, "{FFFFFF}Цветной кейс для денег (внешний вид/аксессуар). Используется для индивидуализации персонажа\n{FFCB8C}Можно использовать\n\n{56A85E}Доступно для обмена с игроками", 1, 1}
};
new QuickInfo[][] = {
	{""},
	{""},
	{""},
	{""},
	{""},
	{""},
	{""},
	{""},
	{""},
	{""},
	{""},
	{""},
	{"Использовать аптечку\n"},
	{"Использовать маску\n"},
	{"Использовать наркотики\n"},
	{"Закурить сигарету\n"},
	{""},
	{"Использовать рем.комплект\n"},
	{"Использовать яд\n"},
	{""},
	{"Использовать канистру\n"},
	{"Первая помощь (навык)\n"},
	{"Экспресс-ремонт (навык)\n"},
	{"Решительность (навык)\n"},
	{"Второе дыхание (навык)\n"}
};
new SlotValue[MAX_PLAYERS][75];
new SelectedSlot[MAX_PLAYERS];
new ListSlot[MAX_PLAYERS];
#include <inventory/inv_window_func.pwn>
/***************************[Завод]*************************/
new WineBottles[8][7];
new Float:BottlesPos[8][7][3] = {
	{
		{1206.1127, 1306.3901, 1052.5234},//startpos
		{1206.1127, 1304.7507, 1051.6556},//2 pos
		{1206.1127, 1304.0577, 1051.6556},//1 bottle
		{1206.1127, 1303.6567, 1051.6556},//2 bottle
		{1206.1127, 1296.7767, 1051.7036},//3 bottle
		{1206.1127, 1296.3757, 1051.7036},//4 bottle
		{1206.1127, 1294.2007, 1051.6996}//endpos
	},
	{
		{1207.7747, 1306.3901, 1052.5234},//startpos
		{1207.7747, 1304.7507, 1051.6556},//2 pos
		{1207.7747, 1304.0577, 1051.6556},//1 bottle
		{1207.7747, 1303.6567, 1051.6556},//2 bottle
		{1207.7747, 1296.7767, 1051.7036},//3 bottle
		{1207.7747, 1296.3757, 1051.7036},//4 bottle
		{1207.7747, 1294.2007, 1051.6996}//endpos
	},
	{
		{1211.4097, 1306.3901, 1052.5234},//startpos
		{1211.4097, 1304.7507, 1051.6556},//2 pos
		{1211.4097, 1304.0577, 1051.6556},//1 bottle
		{1211.4097, 1303.6567, 1051.6556},//2 bottle
		{1211.4097, 1296.7767, 1051.7036},//3 bottle
		{1211.4097, 1296.3757, 1051.7036},//4 bottle
		{1211.4097, 1294.2007, 1051.6996}//endpos
	},
	{
		{1213.0567, 1306.3901, 1052.5234},//startpos
		{1213.0567, 1304.7507, 1051.6556},//2 pos
		{1213.0567, 1304.0577, 1051.6556},//1 bottle
		{1213.0567, 1303.6567, 1051.6556},//2 bottle
		{1213.0567, 1296.7767, 1051.7036},//3 bottle
		{1213.0567, 1296.3757, 1051.7036},//4 bottle
		{1213.0567, 1294.2007, 1051.6996}//endpos
	},
	{
		{1213.0247, 1277.6076, 1052.5234},//startpos
		{1213.0247, 1279.2470, 1051.6556},//2 pos
		{1213.0247, 1279.9407, 1051.6556},//1 bottle
		{1213.0247, 1280.3407, 1051.6556},//2 bottle
		{1213.0247, 1287.2207, 1051.7036},//3 bottle
		{1213.0247, 1287.6207, 1051.7036},//4 bottle
		{1213.0247, 1289.7957, 1051.6996}//endpos
	},
	{
		{1211.3727, 1277.6076, 1052.5234},//startpos
		{1211.3727, 1279.2470, 1051.6556},//2 pos
		{1211.3727, 1279.9407, 1051.6556},//1 bottle
		{1211.3727, 1280.3407, 1051.6556},//2 bottle
		{1211.3727, 1287.2207, 1051.7036},//3 bottle
		{1211.3727, 1287.6207, 1051.7036},//4 bottle
		{1211.3727, 1289.7957, 1051.6996}//endpos
	},
	{
		{1207.7517, 1277.6076, 1052.5234},//startpos
		{1207.7517, 1279.2470, 1051.6556},//2 pos
		{1207.7517, 1279.9407, 1051.6556},//1 bottle
		{1207.7517, 1280.3407, 1051.6556},//2 bottle
		{1207.7517, 1287.2207, 1051.7036},//3 bottle
		{1207.7517, 1287.6207, 1051.7036},//4 bottle
		{1207.7517, 1289.7957, 1051.6996}//endpos
	},
	{
		{1206.0887, 1277.6076, 1052.5234},//startpos
		{1206.0887, 1279.2470, 1051.6556},//2 pos
		{1206.0887, 1279.9407, 1051.6556},//1 bottle
		{1206.0887, 1280.3407, 1051.6556},//2 bottle
		{1206.0887, 1287.2207, 1051.7036},//3 bottle
		{1206.0887, 1287.6207, 1051.7036},//4 bottle
		{1206.0887, 1289.7957, 1051.6996}//endpos
	}
};
new BottleState[8][7] = {
	{0, 1, 2, 3, 4, 5, 6},
	{0, 1, 2, 3, 4, 5, 6},
	{0, 1, 2, 3, 4, 5, 6},
	{0, 1, 2, 3, 4, 5, 6},
	{0, 1, 2, 3, 4, 5, 6},
	{0, 1, 2, 3, 4, 5, 6},
	{0, 1, 2, 3, 4, 5, 6},
	{0, 1, 2, 3, 4, 5, 6}
};
new ConveerTimer;
new Text3D:ChanText;
new BoxCP[4][2];
new ChanStatus;
new ChanBalance;
new ChanTime;
new FactoryTimer;
/***************************Подача /gov*************************/
enum gpicinfo {
	Float:gpPosX,
	Float:gpPosY,
	Float:gpPosZ,
	gpWorld
};
new GovPos[4][gpicinfo] = {
	{1780.5149,-1654.3923,20.3689},
	{2211.2627,-1141.1718,25.8144},
	{-1972.5464,116.7850,27.6941},
	{2852.6628,1293.6481,11.3906}
};
new GovPic[4];
new GovText[MAX_ORGS][512];
new GovLeader[MAX_ORGS][3][100];
new GovSlot[MAX_ORGS];
/***************************Бар*************************/
#define BAR_OBJECTS 		7
new gBarPrice[BAR_OBJECTS] =
{
	200,
	400,
	600,
	800,
	1000,
	1200,
	1400
};
new gBarObject[BAR_OBJECTS][60] =
{
	"{7396FB}[1] {ffffff}Pepsi Black Cherry (0.33ml)",
	"{7396FB}[2] {ffffff}Corona Extra (0.33ml)",
	"{7396FB}[3] {ffffff}Dewar's White Label + лёд (0.2ml)",
	"{7396FB}[4] {ffffff}Коктейль 'Хиросима' (0.33ml)",
	"{7396FB}[5] {ffffff}Коктейль 'Фирма' (0.33ml)",
	"{7396FB}[6] {ffffff}Шот LaPhroaig (0.05ml)",
	"{7396FB}[7] {ffffff}Шот B52 (0.05ml)"
};
/***************************Казино*************************/
//Кости
new Text:bonestd[4];
new Text:bonesnames[4][5];
new Text:bonesscore[4][5];
new Text:bonesmenu[5];
new Text:bonesinfo[4];
enum bonetable
{
	bBet,
	bBank,
	bPlayers,
	bScore,
	bGameStart
}
new StolInfo[4][bonetable];
new StolGamer[4][5] = {
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...}
};
new StolCrupe[4] = {INVALID_PLAYER_ID, ...};
new Float:bonepos[][] = {
	{2236.441650, 1846.931884, 1028.405395},
	{2236.441650, 1852.812744, 1028.405395},
	{2243.462646, 1846.931884, 1028.405395},
	{2243.462646, 1852.812744, 1028.405395}
};
new Text3D:bones3d[4];
new TimeStavka[4];
new BonesArea[4];
new TotalBets[4];
//Рулетка
new RoulArea[4];
new Float:rl_fishpos[][3] = {
	{-0.0767, -0.5900, -0.1877}, //0
	{-0.3274, -0.4380, -0.1877}, //3
	{-0.3274, -0.2880, -0.1877}, //6
	{-0.3274, -0.1380, -0.1877}, //9
	{-0.3274, 0.0120, -0.1877}, //12
	{-0.3274, 0.1620, -0.1877}, //15
	{-0.3274, 0.3120, -0.1877}, //18
	{-0.3274, 0.4620, -0.1877}, //21
	{-0.3274, 0.6120, -0.1877}, //24
	{-0.3274, 0.7620, -0.1877}, //27
	{-0.3274, 0.9120, -0.1877}, //30
	{-0.3274, 1.0620, -0.1877}, //33
	{-0.3274, 1.2120, -0.1877}, //36
	{-0.3274, 1.3620, -0.1877}, //3 to 1
	{-0.0875, -0.4380, -0.1877}, //2
	{-0.0875, -0.2880, -0.1877}, //5
	{-0.0875, -0.1380, -0.1877}, //8
	{-0.0875, 0.0120, -0.1877}, //11
	{-0.0875, 0.1620, -0.1877}, //14
	{-0.0875, 0.3120, -0.1877}, //17
	{-0.0875, 0.4620, -0.1877}, //20
	{-0.0875, 0.6120, -0.1877}, //23
	{-0.0875, 0.7620, -0.1877}, //26
	{-0.0875, 0.9120, -0.1877}, //29
	{-0.0875, 1.0620, -0.1877}, //32
	{-0.0875, 1.2120, -0.1877}, //35
	{-0.0875, 1.3620, -0.1877}, //3 to 1
	{0.1466, -0.4380, -0.1877}, //1
	{0.1466, -0.2880, -0.1877}, //4
	{0.1466, -0.1380, -0.1877}, //7
	{0.1466, 0.0120, -0.1877}, //10
	{0.1466, 0.1620, -0.1877}, //13
	{0.1466, 0.3120, -0.1877}, //16
	{0.1466, 0.4620, -0.1877}, //19
	{0.1466, 0.6120, -0.1877}, //22
	{0.1466, 0.7620, -0.1877}, //25
	{0.1466, 0.9120, -0.1877}, //28
	{0.1466, 1.0620, -0.1877}, //31
	{0.1466, 1.2120, -0.1877}, //34
	{0.1466, 1.3620, -0.1877}, //3 to 1
	{0.4110, -0.2112, -0.1877}, //1-12
	{0.4110, 0.4038, -0.1877}, //13-24
	{0.4110, 1.0028, -0.1877}, //25-36
	{0.6521, -0.3609, -0.1877}, //1-18
	{0.6521, -0.0669, -0.1877}, //EVEN
	{0.6521, 0.2271, -0.1877}, //RED
	{0.6521, 0.5211, -0.1877}, //BLACK
	{0.6521, 0.8151, -0.1877}, //ODD
	{0.6521, 1.1091, -0.1877} //19-36
};
new rl_fishka[] = {1901, 1902, 1903, 1904, 1911, 1921, 1930, 1931, 1932, 1933, 1940, 1941};
new Text:roultd[50];
new Fishka[MAX_PLAYERS];
new Text:roulinfo[4];
new Float:rl_coord[4][3] = {
	{2217.714111, 1828.181152, 1028.968872},
	{2223.354492, 1815.300781, 1028.968872},
	{2223.354492, 1833.300537, 1028.968872},
	{2217.714111, 1820.131103, 1028.968872}
};
enum roul
{
	rPlayers,
	rBets,
	rGameStart
}
new RoulInfo[4][roul];
new Text3D:roul3d[4];
new lastroll[7][4];
new RollTimer[4];
new TimeRoll[4];
new RoulGamers[4][11] = {
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...},
	{INVALID_PLAYER_ID, ...}
};
/***************************Google*************************/
new gencode[MAX_PLAYERS][17];
new CodeSymbols[32][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y","Z","2", "3", "4", "5", "6", "7"};
/***************[Система промо-кодов]**********************/
new TotalPromo;
#define MAX_PROMO 1000
enum promoinfo
{
	prID,
	prCode[32],
	prAmount,
	prType,
	prActivates,
	prActivated,
	prDate[32]
};
new PromoInfo[MAX_PROMO][promoinfo];
/***************[Система репорта]**********************/
new TotalReports;
#define MAX_REPORTS 500
#define ClearReport(%0) 	ReportInfo[%0][re_OwnerID] = -1,TotalReports--,ReportInfo[%0][re_OwnerSQLID] = 0,format(ReportInfo[%0][re_Text],3,"\0")
enum re_info
{
	re_OwnerID,
	re_OwnerSQLID,
	re_Text[100]
};
new ReportInfo[MAX_REPORTS][re_info];
new ReportID[MAX_PLAYERS] = {-1, ...};
/***************[Система АЗС]**********************/
/***************[Система названий организаций]**********************/
new TotalRequests;
#define MAX_REQUESTS 20
#define ClearRequest(%0) 	RequestInfo[%0][req_Team] = 0,TotalRequests--,RequestInfo[%0][req_Slot] = 0,format(RequestInfo[%0][req_Text],3,"\0"),format(RequestInfo[%0][req_Sender],3,"\0")
enum req_info
{
	req_Team,
	req_Slot,
	req_Text[50],
	req_Sender[MAX_PLAYER_NAME]
};
new RequestInfo[MAX_REQUESTS][req_info];
new RequestID[MAX_PLAYERS] = {-1, ...};
/***************[Система АЗС]**********************/
new Text:FuelTD[15];
new PlayerText:PlayerFuelTD[MAX_PLAYERS][3];
new KindFuel[MAX_PLAYERS];
new Float:CountFuel[MAX_PLAYERS];
new PlayerFuel[MAX_PLAYERS];
/***************[Система растений виноградник]**********************/
#define MAX_PLANTS 3
#define PLANT_DISTANCE 2.5
#define PLANT_HARVEST_TIME 500
#define PLANT_STATE_GROWING 2
#define PLANT_STATE_GROWN 3
new PlantsToRemove[MAX_PLANTS];
new Iterator:TotalPlants<MAX_PLANTS>;
new FactoryCP[3][2];
new PLANT_GROVE_TIME = 300;
new WineArea;
new WineCP;
new Text3D:WineText[2];
new WinePic;
enum grdPlantInfo
{
	plantState,
	plantModel,
	plantStateTime,
	Float:plantPosX,
	Float:plantPosY,
	Float:plantPosZ,
	Float:plantRotZ,
	plantCreatedID,
	Text3D:plant3DTextID,
	plantHarvestCP[2],
	plantGived,
	plantHarvestedProcess
}
new PlantInfo[MAX_PLANTS][grdPlantInfo];
new PlayerHarvestID[MAX_PLAYERS] = {-1, ...};
new PlayerHarvestTimer[MAX_PLAYERS];
new fasthour = 1;//костыль
/***************[Мини-игра ферма]**********************/
new craftpos[2][MAX_PLAYERS];
new timerkc1[MAX_PLAYERS];
new PlayerText:TDCraft[6][MAX_PLAYERS];
new crafttry[MAX_PLAYERS];
/***************[Система рекон]**********************/
new GMTEST[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new SpecAd[MAX_PLAYERS];
new SpecID[MAX_PLAYERS];
new DisallowSpawn[MAX_PLAYERS];
new Float:SpecPlayer[MAX_PLAYERS][3];
new SpecPlayerInt[MAX_PLAYERS];
new SpecPlayerWorld[MAX_PLAYERS];
new Float:SpecPlayerAngle[MAX_PLAYERS];
new LastReconClick[MAX_PLAYERS][2];
new PlayerText:ReconPlayer[34];
new ReconBounds[MAX_PLAYERS][2];
new ReconSelect[MAX_PLAYERS];
new ReconSelectSub[MAX_PLAYERS];
new NumberShotTarget[MAX_PLAYERS];
new TimeNumberShot[MAX_PLAYERS];
new TimeNumberShotTarget[MAX_PLAYERS];
new NumberShot[MAX_PLAYERS];
PlayerText:CreateReconButton(playerid, Float:Xpos, Float:Ypos, const button_text[])
{
	new PlayerText:txtInit;
	txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, button_text);
	PlayerTextDrawBackgroundColor(playerid,txtInit, 0xFFFFFFFF);
	PlayerTextDrawFont(playerid,txtInit, 1);
	PlayerTextDrawLetterSize(playerid,txtInit, 0.200, 1.100);
	PlayerTextDrawColor(playerid,txtInit, 0x000000FF);
	PlayerTextDrawSetOutline(playerid,txtInit, 0);
	PlayerTextDrawAlignment(playerid,txtInit, 2);
	PlayerTextDrawSetProportional(playerid,txtInit, 1);
	PlayerTextDrawSetShadow(playerid,txtInit, 0);
	PlayerTextDrawUseBox(playerid,txtInit, 1);
	PlayerTextDrawBoxColor(playerid,txtInit, 0xFFFFFFFF);
	PlayerTextDrawTextSize(playerid,txtInit, 11.000, 60.000);
	PlayerTextDrawSetSelectable(playerid, txtInit, 1);
	return txtInit;
}
new MaxSpeedCar[212] = {
        87,81,103,-1,73,91,-1,-1,-1,-1,-1,123,93,-1,-1,106,-1,-1,64,82,93,82,82,-1,75,-1,94,-1,
        -1,112,-1,-1,-1,-1,92,-1,85,-1,-1,93,-1,-1,-1,-1,62,90,-1,-1,-1,-1,-1,107,-1,-1,-1,-1,-1,-1,87,-1,-1,88 ,-1,79 ,-1,-1,
        87,87,79,-1,-1,61,-1,-1,82,96,-1,103,75,77,102,-1,-1,-1,-1,-1,-1,-1,-1,77,-1,82,78,-1,119,97,90,-1,-1,-1,-1,-1,119,119,-1,-1,99,92,-1,-1,-1,-1,
        -1,-1,-1,-1,87,87,91,-1,-1,88,95,-1,-1,-1,-1,87,82,-1,82,-1,-1,-1,90,93,87,96,-1,-1,-1,82,112,91,73,-1,81,82,79,-1,85,80,87,-1,-1,84,87,-1,-1,86,98,94,
        85,98,-1,-1,91,88,96,-1,-1,-1,-1,-1,-1,-1,87,87,-1,-1,87,85,88,-1,-1,-1,87,87,91,-1,90,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,82,-1,93,95,87,73,-1
}; 
/***************[Квесты]**********************/
#define MAX_QUESTS 13
enum QuestInfo
{
	QuestName[64],
	QuestText[512],
	LastProgress
}
new QI[MAX_QUESTS][QuestInfo] =
{
	{"","",70},
	{"{FFCB8C}[Вспомогательные]{FFFFFF} Сколотил состояние...","\n\n\
	\\c{FFFFFF}Рабочий класс всегда должен получать больше, чем офисные планктоны! Без работяг не было бы всего этого...\n\
	\\cХочешь подзаработать? - Отправляйся на шахту и начни добывать алмазы. Думал всё так просто? - Сначала добейся\n\
	\\cвозможности работать в алмазной шахте, а для этого нужно усердно потрудиться\n\n\
	\\c{FFCB8C}Задание: Изучить навык шахтёра\n\
	\\cНаграда: $200.000\n",9000},
	{"{FFCB8C}[Вспомогательные]{FFFFFF} Колхозник","\n\n\
	\\c{FFFFFF}Фермерская продукция - самая лучшая, потому что свежая и натуральная. Не буду томить... Отправляйся\n\
	\\cна ферму и помоги там, ещё одни руки никогда не помешают\n\n\
	\\c{FFCB8C}Задание: Перетащить 500 тюков сена на ферме\n\
	\\cНаграда: $50.000\n",500},
	{"{FFCB8C}[Вспомогательные]{FFFFFF} Настоящий бомбила","\n\n\
	\\c{FFFFFF}Без такси сейчас никуда. Не все могут позволить себе машину, а на такси и дёшево, сердито *улыбается*\n\n\
	\\c{FFCB8C}Задание: Изучить навык таксиста\n\
	\\cНаграда: $80.000\n",500},
	
	{"{D94141}[Таланты]{FFFFFF} Здоровее видали","\n\n\
	\\c{FFFFFF}Что-то ты совсем больным выглядишь... У нас в штате губернатор строго следит за здравоохранением, поэтому\n\
	\\cотправляйся в больницу, подлатай здоровье. Заодно узнаешь там чего полезного *улыбается*\n\n\
	\\c{FFCB8C}Задание: Подлечиться в ближайшей больнице\n\
	\\cНаграда: 1 очко таланта для ветки 'Медицина'\n",1},
	{"{D94141}[Таланты]{FFFFFF} Становление на ноги","\n\n\
	\\c{FFFFFF}Без медицинской карты далеко не уйдёшь: она везде нужна. И на права пойдёшь учиться, и на работу устраиваться -\n\
	\\cвезде требуется! Как будет время, направляйся в ближайшую больницу и получи у врачей мед.карту. Если у тебя она уже\n\
	\\cесть, то обнови - всегда пригодится\n\n\
	\\c{FFCB8C}Задание: Получить в больнице медицинскую карту\n\
	\\cНаграда: 1 очко таланта для ветки 'Медицина'\n",1},
	{"{D94141}[Таланты]{FFFFFF} ЗОЖ","\n\n\
	\\c{FFFFFF}Следить за здоровьем нужно постоянно, а не когда тебе об этом напоминают. Питайся 3 раза в день и проходи\n\
	\\cмедицинские осмотры, чтобы не допустить серьёзных болезней и осложнений\n\n\
	\\c{FFCB8C}Задание: Регулярно питаться и проходить лечение\n\
	\\cНаграда: 1 очко таланта для ветки 'Медицина'\n",1000},
	
	{"{56A85E}[Таланты]{FFFFFF} Гонщик","\n\n\
	\\c{FFFFFF}Колёса нужны всегда! При нашем ритме жизни нигде не успеть, если передвигаться пешком... Вот и я считаю, что\n\
	\\cтебе пора обзавестись водительским удостоверением. Отправляйся в центр лицензирования и сдай экзамен на вождение\n\n\
	\\c{FFCB8C}Задание: Получить водительское удостоверение\n\
	\\cНаграда: 1 очко таланта для ветки 'Вождение'\n",1},
	{"{56A85E}[Таланты]{FFFFFF} Аккуратный водитель","\n\n\
	\\c{FFFFFF}Погоняли и хватит. Лихачей никто не любит, а уж полиция тем более. Следите за тем, как ты ездишь, старайся\n\
	\\cне нарушать ПДД и не попадать на полицейские радары. А что дальше? - Дальше сам всё узнаешь!..\n\n\
	\\c{FFCB8C}Задание: Провести за рулём 10 игровых часов без аварий и нарушения ПДД\n\
	\\cНаграда: 1 очко таланта для ветки 'Вождение'\n",10},
	
	{"{FF9900}[Таланты]{FFFFFF} Схрон","\n\n\
	\\c{FFFFFF}И в мирное время держать оружие полезно, мало ли куда тебя занесёт. Но просто так размахивать пушкой тебе\n\
	\\cникто не даст, загремишь далеко и надолго. Поэтому, езжай в центр лицензирования и получи разрешение на оружие\n\n\
	\\c{FFCB8C}Задание: Получить разрешение на оружие\n\
	\\cНаграда: 1 очко таланта для ветки 'Стрельба'\n",1},
	{"{FF9900}[Таланты]{FFFFFF} Первый выстрел, как первый...","\n\n\
	\\c{FFFFFF}Раз получил разрешение, пора бы и к делу приступать. Стрелять сам себя не научит *смеётся*. Отправляйся\n\
	\\cв ближайший магазин оружия (АММО) и купи любое оружие и 100 патронов\n\n\
	\\c{FFCB8C}Задание: Купить оружие и 100 патронов в оружейном магазине\n\
	\\cНаграда: 1 очко таланта для ветки 'Стрельба'\n",100},
	{"{FF9900}[Таланты]{FFFFFF} Лучше любого прицела","\n\n\
	\\c{FFFFFF}Только истинный фанат своего дела достигает вершин...\n\n\
	\\c{FFCB8C}Задание: Изучить все навыки стрельбы\n\
	\\cНаграда: 1 очко таланта для ветки 'Стрельба'\n",8},
	
	{"{7396FB}[Таланты]{FFFFFF} Энергия солнца","\n\n\
	\\c{FFFFFF}Здоровый образ жизни и спорт формируют тебя, как личность. Без вредных привычек куда приятнее и интереснее\n\
	\\cжить, нежели зависеть от того, что тебя убивает... Так, о чём это я? - Отправляйся в ближайший спортзал, чтобы\n\
	\\cстать настоящим мастером боевых искусств\n\n\
	\\c{FFCB8C}Задание: Выучить один стиль боя\n\
	\\cНаграда: 3 очка таланта для ветки 'Спортсмен'\n",1}
};
new QuestProgress[MAX_PLAYERS][MAX_QUESTS];
new QuestShow[MAX_PLAYERS][MAX_QUESTS];
new AcceptQuest[MAX_PLAYERS][MAX_QUESTS];
new QuestClick[MAX_PLAYERS];
cmd:quests_gg(playerid)
{
	new string[1024],num;
	for(new i = 1;i < MAX_QUESTS;i++){
		if(AcceptQuest[playerid][i] == 0)continue;
		if(QuestProgress[playerid][i]<QI[i][LastProgress]) format(string,sizeof(string),"%s\n{FFFFFF}%s | {FFCB8C}Выполнение: %d/%d",string,QI[i][QuestName],QuestProgress[playerid][i],QI[i][LastProgress]);
		else if(QuestProgress[playerid][i]>=QI[i][LastProgress]) format(string,sizeof(string),"%s\n{FFFFFF}%s | {7396FB}[Выполнен]",string,QI[i][QuestName]);
		QuestShow[playerid][num]=i;
		num++;
	}
	if(!num)return SendError(playerid, "У Вас нет принятых заданий. Получить их можно в информационном центре (( /gps - Разное ))");
	if(strlen(string)>0)ShowPlayerDialogEx(playerid,7650,2,"Доступные задания",string,"Подробнее","Отмена");
	return 1;
}
/***************[Рулетка]**********************/
new RouletteTimer[MAX_PLAYERS];
new RouletteRepeat[MAX_PLAYERS];
enum lrInfo
{
	lrObject,
	lrColor,
	lrWinner[MAX_PLAYER_NAME]
}
new LastRoll[4][lrInfo];
new LastRollPlayer[MAX_PLAYERS][5];
new Text:Roulette[34];
new PlayerText:PlayerRoulette[MAX_PLAYERS][9];
new SelectCase[MAX_PLAYERS];
new CasePrice[4] = {50,125,250,600};
enum prInfo
{
	prID,
	prObject,
	prPrice,
	prCase
}
new RouletteInfo[4][153][prInfo] =
{
	{//basic
		{0, 323, 1, 1},//dildo
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{1, 325, 1, 1},//flowers
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{2, 343, 1, 1},//smoke
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{3, 367, 1, 1},//camera
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{4, 321, 1, 1},//dildo 2
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{5, 331, 1, 1},//knuckle
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{6, 1485, 1, 1},//cigars
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{7, 1210, 100, 2},//case for money(вариант 2)
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{8, 1274, 10, 2},//money
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{9, 1212, 50, 2},//donate
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{10, 19033, 100, 2},//glasses
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2}
	},
	{
		{0, 323, 1, 1},//dildo
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{1, 325, 1, 1},//flowers
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{2, 343, 1, 1},//smoke
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{3, 367, 1, 1},//camera
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{4, 321, 1, 1},//dildo 2
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{5, 331, 1, 1},//knuckle
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{6, 1485, 1, 1},//cigars
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{7, 1210, 100, 2},//case for money(вариант 2)
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{8, 1274, 10, 2},//money
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{9, 1212, 50, 2},//donate
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{10, 19033, 100, 2},//glasses
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{11, 19069, 100, 2},//Hats
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{12, 19554, 150, 2},//Ballas hat
		{12, 19554, 150, 2},
		{12, 19554, 150, 2},
		{12, 19554, 150, 2},
		{12, 19554, 150, 2},
		{13, 19104, 125, 2},//каски
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{14, 19350, 250, 3},//усы
		{14, 19350, 250, 3},
		{15, 1212, 200, 3},//Donate
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3}
	},
	{
		{0, 323, 1, 1},//dildo
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{0, 323, 1, 1},
		{1, 325, 1, 1},//flowers
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{1, 325, 1, 1},
		{2, 343, 1, 1},//smoke
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{2, 343, 1, 1},
		{3, 367, 1, 1},//camera
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{3, 367, 1, 1},
		{4, 321, 1, 1},//dildo 2
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{4, 321, 1, 1},
		{5, 331, 1, 1},//knuckle
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{5, 331, 1, 1},
		{6, 1485, 1, 1},//cigars
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{6, 1485, 1, 1},
		{7, 1210, 100, 2},//case for money(вариант 2)
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{8, 1274, 10, 2},//money
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{9, 1212, 50, 2},//donate
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{10, 19033, 100, 2},//glasses
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{11, 19069, 100, 2},//Hats
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{12, 19554, 150, 2},//Ballas hat
		{12, 19554, 150, 2},
		{12, 19554, 150, 2},
		{12, 19554, 150, 2},
		{13, 19104, 125, 2},//каски
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{14, 19350, 250, 3},//усы
		{14, 19350, 250, 3},
		{14, 19350, 250, 3},
		{14, 19350, 250, 3},
		{14, 19350, 250, 3},
		{15, 1212, 200, 3},//Donate
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{16, 1210, 400, 4},//case for money(вариант 11)
		{16, 1210, 400, 4},
		{17, 1210, 300, 3},//case for money(вариант 8)
		{17, 1210, 300, 3},
		{17, 1210, 300, 3},
		{17, 1210, 300, 3},
		{18, 1210, 250, 4},//case for money(вариант 13)
		{18, 1210, 250, 4},
		{18, 1210, 250, 4},
		{18, 1210, 250, 4},
		{18, 1210, 250, 4},
		{18, 1210, 250, 4},
		{19, 1210, 140, 3},//case for money(вариант 9)
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{20, 1210, 500, 4},//case for money(вариант 14)
		{21, 1210, 500, 4},//case for money(вариант 15)
		{29, 19487, 300, 3},//колпак белый
		{29, 19487, 300, 3},
		{29, 19487, 300, 3},
		{29, 19487, 300, 3},
		{29, 19487, 300, 3},
		{30, 19352, 300, 3},//колпак чёрный
		{30, 19352, 300, 3},
		{30, 19352, 300, 3},
		{30, 19352, 300, 3},
		{30, 19352, 300, 3},
		{31, 19319, 750, 4},//гитара
		{32, 19318, 750, 4},//гитара
		{33, 19317, 750, 4}//гитара
	},
	{
		{7, 1210, 100, 2},//case for money(вариант 2)
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{7, 1210, 100, 2},
		{8, 1274, 10, 2},//money
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{8, 1274, 10, 2},
		{9, 1212, 50, 2},//donate
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{9, 1212, 50, 2},
		{10, 19033, 100, 2},//glasses
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{10, 19033, 100, 2},
		{11, 19069, 100, 2},//Hats
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{11, 19069, 100, 2},
		{12, 19554, 150, 2},//Ballas hat
		{12, 19554, 150, 2},
		{12, 19554, 150, 2},
		{12, 19554, 150, 2},
		{12, 19554, 150, 2},
		{12, 19554, 150, 2},
		{13, 19104, 125, 2},//каски
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{13, 19104, 125, 2},
		{14, 19350, 250, 3},//усы
		{14, 19350, 250, 3},
		{14, 19350, 250, 3},
		{14, 19350, 250, 3},
		{14, 19350, 250, 3},
		{14, 19350, 250, 3},
		{14, 19350, 250, 3},
		{15, 1212, 200, 3},//Donate
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{15, 1212, 200, 3},
		{16, 1210, 400, 4},//case for money(вариант 11)
		{16, 1210, 400, 4},
		{16, 1210, 400, 4},
		{16, 1210, 400, 4},
		{16, 1210, 400, 4},
		{16, 1210, 400, 4},
		{16, 1210, 400, 4},
		{17, 1210, 300, 3},//case for money(вариант 8)
		{17, 1210, 300, 3},
		{17, 1210, 300, 3},
		{17, 1210, 300, 3},
		{17, 1210, 300, 3},
		{17, 1210, 300, 3},
		{18, 1210, 250, 4},//case for money(вариант 13)
		{18, 1210, 250, 4},
		{18, 1210, 250, 4},
		{18, 1210, 250, 4},
		{18, 1210, 250, 4},
		{18, 1210, 250, 4},
		{18, 1210, 250, 4},
		{19, 1210, 140, 3},//case for money(вариант 9)
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{19, 1210, 140, 3},
		{20, 1210, 500, 4},//case for money(вариант 14)
		{20, 1210, 500, 4},
		{20, 1210, 500, 4},
		{20, 1210, 500, 4},
		{20, 1210, 500, 4},
		{20, 1210, 500, 4},
		{20, 1210, 500, 4},
		{21, 1210, 500, 4},//case for money(вариант 15)
		{21, 1210, 500, 4},
		{21, 1210, 500, 4},
		{21, 1210, 500, 4},
		{21, 1210, 500, 4},
		{21, 1210, 500, 4},
		{22, 1210, 800, 4},//case for money(вариант 12)
		{22, 1210, 800, 4},
		{22, 1210, 800, 4},
		{22, 1210, 800, 4},
		{23, 1212, 1000, 4},//Donate
		{23, 1212, 1000, 4},
		{24, 1274, 600, 4},//money
		{24, 1274, 600, 4},
		{24, 1274, 600, 4},
		{24, 1274, 600, 4},
		{24, 1274, 600, 4},
		{25, 1274, 1000, 4},//house
		{25, 1274, 1000, 4},
		{26, 348, 700, 4},//red deagle
		{26, 348, 700, 4},
		{27, 355, 700, 4},//red ak47
		{27, 355, 700, 4},
		{28, 349, 700, 4},//red shotgun
		{28, 349, 700, 4},
		{29, 19487, 300, 3},//колпак белый
		{29, 19487, 300, 3},
		{30, 19352, 300, 3},//колпак чёрный
		{30, 19352, 300, 3},
		{31, 19319, 750, 4},//гитара
		{31, 19319, 750, 4},
		{31, 19319, 750, 4},
		{32, 19318, 750, 4},//гитара
		{32, 19318, 750, 4},
		{32, 19318, 750, 4},
		{33, 19317, 750, 4},//гитара
		{33, 19317, 750, 4},
		{33, 19317, 750, 4},
		{34, 19878, 1000, 4},
		{35, 348, 1000, 4},//black deagle
		{36, 355, 1000, 4},//black ak47
		{37, 349, 1000, 4}//black shotgun
	}
};
stock GetCaseColor(caseid)
{
	switch(caseid)
	{
	case 0:return 0x497fa3FF;
	case 1:return 0xACACACFF;
	case 2:return 0x82CFFFFF;
	case 3:return 0x43CD80FF;
	case 4:return 0xD94141FF;
	}
	return 1;
}
enum plrinfo
{
	plrID,
	plrNum,
	plrPrize,
	plrCase,
	plrPrice
}
new ItemInfo[MAX_PLAYERS][plrinfo][1000];
new ItemRestrict[MAX_PLAYERS char];
new ItemNames[38][] = {
	{"Резиновый дилдо"},
	{"Цветы"},
	{"Дымовая граната {C9EAFF}(10 штук)"},
	{"Фотоаппарат {C9EAFF}(100 снимков)"},
	{"Деревянный дилдо"},
	{"Кастет"},
	{"Пачка сигарет"},
	{"Синий кейс для денег"},
	{"Деньги {C9EAFF}($40.000)"},
	{"DP {C9EAFF}(50 COINS)"},
	{"Очки {C9EAFF}(Аксессуар)"},
	{"Шапка {C9EAFF}(Аксессуар)"},
	{"Шапка балласов {C9EAFF}(Аксессуар)"},
	{"Каска {C9EAFF}(Аксессуар)"},
	{"Усы {C9EAFF}(Аксессуар)"},
	{"DP {C9EAFF}(200 COINS)"},
	{"Розовый кейс для денег"},
	{"Зелёный кейс для денег"},
	{"Золотой кейс для денег"},
	{"Голубой кейс для денег"},
	{"Фиолетовый кейс для денег"},
	{"Красный кейс для денег"},
	{"Чёрный кейс для денег"},
	{"DP {C9EAFF}(1000 COINS)"},
	{"Деньги {C9EAFF}($2.400.000)"},
	{"Дом для проживания"},
	{"Красное оружие {C9EAFF}(Desert Eagle)"},
	{"Красное оружие {C9EAFF}(AK-47)"},
	{"Красное оружие {C9EAFF}(Shotgun)"},
	{"Белый колпак {C9EAFF}(Аксессуар)"},
	{"Чёрный колпак {C9EAFF}(Аксессуар)"},
	{"Гитара {C9EAFF}(Аксессуар)"},
	{"Гитара {C9EAFF}(Аксессуар)"},
	{"Гитара {C9EAFF}(Аксессуар)"},
	{"Скейтборд {C9EAFF}(Предмет)"},
	{"Чёрное оружие {C9EAFF}(Desert Eagle)"},
	{"Чёрное оружие {C9EAFF}(AK-47)"},
	{"Чёрное оружие {C9EAFF}(Shotgun)"}
};
new ItemNamesEn[38][] = {
	{"Dildo"},
	{"Flowers"},
	{"Smoke grenade I ~r~10 pcs."},
	{"Photocamera I ~r~100 pcs."},
	{"Dildo"},
	{"Knuckle"},
	{"Cigarettes"},
	{"Blue case for money"},
	{"Money I ~r~$40.000"},
	{"DP I ~r~50 COINS"},
	{"Glasses I ~r~Accessory"},
	{"Hat I ~r~Accessory"},
	{"Ballas hat I ~r~Accessory"},
	{"Kask I ~r~Accessory"},
	{"Mustache I ~r~Accessory"},
	{"DP I ~r~200 COINS"},
	{"Pink case for money"},
	{"Green case for money"},
	{"Gold case for money"},
	{"Skiey case for money"},
	{"Purple case for money"},
	{"Red case for money"},
	{"Black case for money"},
	{"DP I ~r~1000 COINS"},
	{"Money I ~r~$2.400.000"},
	{"House"},
	{"Red weapon I ~r~Desert Eagle"},
	{"Red weapon I ~r~AK-47"},
	{"Red weapon I ~r~Shotgun"},
	{"White cylinder I ~r~Accessory"},
	{"Black cylinder I ~r~Accessory"},
	{"Guitar I ~r~Accessory"},
	{"Guitar I ~r~Accessory"},
	{"Guitar I ~r~Accessory"},
	{"Skateboard I ~r~Item"},
	{"Black weapon I ~r~Desert Eagle"},
	{"Black weapon I ~r~AK-47"},
	{"Black weapon I ~r~Shotgun"}
};
/***************[Билборды]**********************/
enum B_INFO
{
    bObjectID,
	Float:bPos[4],
    bPosText[32],
	bText[144],
	bOwner[MAX_PLAYER_NAME],
	bBackColor,
	bFontFace,
	bAligment,
	bFontSize,
	bDay
};
new BildInfo[MAX_BILLBORDS][B_INFO];
new Colors_BIG[100] = { 0x000000,0xFFFFFF,0x20B2AA,0xDC143C,0x6495ED,0xf0e68c,0x778899,0xFF1493,0xF4A460,0xEE82EE,0xFFD720, 0x8b4513,0x4949A0,0x148b8b,0x14ff7f,0x556b2f,0x0FD9FA,0x10DC29,0x534081,0x0495CD,0xEF6CE8,0xBD34DA,
0x247C1B,0x0C8E5D,0x635B03,0xCB7ED3,0x65ADEB,0x5C1ACC,0xF2F853,0x11F891,0x7B39AA,0x53EB10,0x54137D, 0x275222,0xF09F5B,0x3D0A4F,0x22F767,0xD63034,0x9A6980,0xDFB935,0x3793FA,0x90239D,0xE9AB2F,0xAF2FF3,
0x057F94,0xB98519,0x388EEA,0x028151,0xA55043,0x0DE018,0x93AB1C,0x95BAF0,0x369976,0x18F71F,0x4B8987, 0x491B9E,0x829DC7,0xBCE635,0xCEA6DF,0x20D4AD,0x2D74FD,0x3C1C0D,0x12D6D4,0x48C000,0x2A51E2,0xE3AC12,
0xFC42A8,0x2FC827,0x1A30BF,0xB740C2,0x42ACF5,0x2FD9DE,0xFAFB71,0x05D1CD,0xC471BD,0x94436E,0xC1F7EC, 0xCE79EE,0xBD1EF2,0x93B7E4,0x3214AA,0x184D3B,0xAE4B99,0x7E49D7,0x4C436E,0xFA24CC,0xCE76BE,0xA04E0A,
0x9F945C,0xDCDE3D,0x10C9C5,0x70524D,0x0BE472,0x8A2CD7,0x6152C2,0xCF72A9,0xE59338,0xEEDC2D,0xD8C762, 0x3FE65C };
new Colors_LOW[][12] = { "000000","FFFFFF","20B2AA","DC143C","6495ED","f0e68c","778899","FF1493","F4A460","EE82EE","FFD720", "8b4513","4949A0","148b8b","14ff7f","556b2f","0FD9FA","10DC29","534081","0495CD","EF6CE8","BD34DA",
"247C1B","0C8E5D","635B03","CB7ED3","65ADEB","5C1ACC","F2F853","11F891","7B39AA","53EB10","54137D", "275222","F09F5B","3D0A4F","22F767","D63034","9A6980","DFB935","3793FA","90239D","E9AB2F","AF2FF3",
"057F94","B98519","388EEA","028151","A55043","0DE018","93AB1C","95BAF0","369976","18F71F","4B8987", "491B9E","829DC7","BCE635","CEA6DF","20D4AD","2D74FD","3C1C0D","12D6D4","48C000","2A51E2","E3AC12",
"FC42A8","2FC827","1A30BF","B740C2","42ACF5","2FD9DE","FAFB71","05D1CD","C471BD","94436E","C1F7EC", "CE79EE","BD1EF2","93B7E4","3214AA","184D3B","AE4B99","7E49D7","4C436E","FA24CC","CE76BE","A04E0A",
"9F945C","DCDE3D","10C9C5","70524D","0BE472","8A2CD7","6152C2","CF72A9","E59338","EEDC2D","D8C762","3FE65C" };
stock UpdateBuildText(b_id)
{
	new font_face[12];
	switch(BildInfo[b_id][bFontFace])
	{
	    case 0: font_face = "Arial";
	    case 1: font_face = "Calibri";
	    case 2: font_face = "Tahoma";
	    case 3: font_face = "Verdana";
	}
 	new text[144+16];
	if(strlen(BildInfo[b_id][bOwner]) < 4)
	{
		text = "{000000}РЕКЛАМНОЕ МЕСТО СВОБОДНО\nОбращаться в\nцентральный банк Los-Santos";
		BildInfo[b_id][bAligment] = 1, BildInfo[b_id][bFontSize]=25, BildInfo[b_id][bBackColor] = 1;
	}
	else format(text,144+16,"{000000}%s",BildInfo[b_id][bText]);
	return SetObjectMaterialText(BildInfo[b_id][bObjectID], text, 0, 130, font_face, BildInfo[b_id][bFontSize], 0, -1, Colors_BIG[BildInfo[b_id][bBackColor]], BildInfo[b_id][bAligment]);
}
stock ShowPlayerEditMenu(playerid)
{
	new string[512] = "{33AA33}Параметр\t{33AA33}Значение\n", page[64], p_var = GetPVarInt(playerid,"SelectBildID"), font_face[12], aligment_name[18];
	BildIntro(playerid, p_var, -13);
	switch(BildInfo[p_var][bFontFace])
	{
	    case 0: font_face = "Arial";
	    case 1: font_face = "Calibri";
	    case 2: font_face = "Tahoma";
	    case 3: font_face = "Verdana";
	}
	switch(BildInfo[p_var][bAligment])
	{
	    case 0: aligment_name = "По левому краю";
	    case 1: aligment_name = "По центру";
	    case 2: aligment_name = "По правому краю";
	}
	strcat(string,"\nТекст\t{ffffff}[{7396FB}Изменить{ffffff}]");
	format(page,64,"\nЦвет фона\t{ffffff}[{%s}Выглядит так{ffffff}]",Colors_LOW[BildInfo[p_var][bBackColor]]), strcat(string,page);
	format(page,64,"\nШрифт текста\t{ffffff}[{7396FB}%s{ffffff}]",font_face), strcat(string,page);
	format(page,64,"\nРазмер текста\t{ffffff}[{7396FB}%i{ffffff}]",BildInfo[p_var][bFontSize]), strcat(string,page);
	format(page,64,"\nВыравнивание текста\t{ffffff}[{7396FB}%s{ffffff}]",aligment_name), strcat(string,page);
	strcat(string,"\n{43CD80}Аренда активна\t{7396FB}Расторгнуть договор");
	return ShowPlayerDialogEx(playerid,1173,DIALOG_STYLE_TABLIST_HEADERS,"{43CD80}Настройка параметров рекламы",string,"Выбрать","Закрыть");
}
stock BildIntro(playerid, b_id, c_dist)
{
	new Float: x = BildInfo[b_id][bPos][0], Float: y = BildInfo[b_id][bPos][1];
    GetXYInFront(x, y, BildInfo[b_id][bPos][3], c_dist);
    SetPlayerCameraPos(playerid, x, y, BildInfo[b_id][bPos][2]);
    SetPlayerCameraLookAt(playerid, BildInfo[b_id][bPos][0], BildInfo[b_id][bPos][1], BildInfo[b_id][bPos][2]);
    return TogglePlayerControllable(playerid, 0), SetPlayerInterior(playerid, 0), true;
}
/*********************************Загрузка*******************************/
new Text: LoadingTextures[3];
new PlayerText: LoadingPlayerTextures[MAX_PLAYERS];
new CheckLoadTexture[MAX_PLAYERS];
new TimerOfLoadTexture[MAX_PLAYERS];
new LoadTextureStr[MAX_PLAYERS][57];
stock PlayerLoadingTexturesShow(playerid) 
{ 
    if(GetPVarInt(playerid, "timeofloadtexture") > gettime())return true; 
    CheckLoadTexture[playerid] = 10; 
    TimerOfLoadTexture[playerid] = SetTimerEx("LoadingTexturesForPlayer", (4 * GetPlayerPing(playerid)), true, "i", playerid); 
    PlayerTextDrawSetString(playerid, LoadingPlayerTextures[playerid], ""); 
    PlayerTextDrawShow(playerid, LoadingPlayerTextures[playerid]); 
    for(new i; i < 3; i ++) TextDrawShowForPlayer(playerid, LoadingTextures[i]); 
    LoadTextureStr[playerid] = ""; 
    SetPVarInt(playerid, "timeofloadtexture", gettime()+4); 
    return true; 
}
forward player_unfreeze(playerid);
public player_unfreeze(playerid)
{
	TogglePlayerControllable(playerid,1);
	ClearAnimations(playerid);
	if(GetPVarInt(playerid,"Tazer") > 0)
	{
		SetPVarInt(playerid,"Tazer",0);
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		return 1;
	}
	return 1;
}
forward LoadingTexturesForPlayer(playerid);
public LoadingTexturesForPlayer(playerid) 
{ 
    CheckLoadTexture[playerid]--; 
    switch(CheckLoadTexture[playerid]) 
    { 
        case 9: format(LoadTextureStr[playerid], 57, "."); 
        case 8: format(LoadTextureStr[playerid], 57, "%s...", LoadTextureStr[playerid]); 
        case 7: format(LoadTextureStr[playerid], 57, "%s...", LoadTextureStr[playerid]); 
		case 6: format(LoadTextureStr[playerid], 57, "%s...", LoadTextureStr[playerid]); 
		case 5: format(LoadTextureStr[playerid], 57, "%s...", LoadTextureStr[playerid]); 
		case 4: format(LoadTextureStr[playerid], 57, "%s...", LoadTextureStr[playerid]); 
		case 3: format(LoadTextureStr[playerid], 57, "%s...", LoadTextureStr[playerid]); 
		case 2: format(LoadTextureStr[playerid], 57, "%s...", LoadTextureStr[playerid]); 
		case 1: format(LoadTextureStr[playerid], 57, "%s..", LoadTextureStr[playerid]); 
        case 0: 
        { 
            PlayerTextDrawSetString(playerid, LoadingPlayerTextures[playerid], LoadTextureStr[playerid]); 
            KillTimer(TimerOfLoadTexture[playerid]); 
            PlayerTextDrawHide(playerid, LoadingPlayerTextures[playerid]); 
            for(new i; i < 3; i ++) TextDrawHideForPlayer(playerid, LoadingTextures[i]); 
            PlayerTextDrawSetString(playerid, LoadingPlayerTextures[playerid], ""); 
            CheckLoadTexture[playerid] = 10; 
            LoadTextureStr[playerid] = ""; 
        } 
    } 
    PlayerTextDrawSetString(playerid, LoadingPlayerTextures[playerid], LoadTextureStr[playerid]); 
    return true; 
} 
/*********************************Загрузка*******************************/
/*********************************Тюнинг*******************************/
enum nInfo
{
	nModel,
	nSpoiler,
	nSideskirt,
	nNitro,
	nExhaust,
	nWheels,
	nRoof,
	nHood,
	nHydraulics,
	nFrontBumper,
	nRearBumper,
	nPaintJob,
	nNeon,
	nSticker[5]
};
new TunInfo[MAX_VEHICLES][nInfo];
new Float:StickerPos[MAX_VEHICLES][5][6];
#define MAX_TUNING 2
enum stoInfo
{
	stoID,
	stoOwner[MAX_PLAYER_NAME],
	Float:stoPos[3],
	Float:stoGarage[4],
	Float:stoGarageEx[4],
	stoWorld,
	stoOplata,
	stoBalance,
	Text3D:stoText,
	bool:stoWait,
	stoWin,
	stoVisit
};
new TuningInfo[MAX_TUNING][stoInfo];
new TuningCP[MAX_TUNING][2];
enum tpi
{
	tID,
	tType,
	bool:tPaintjob
};
new TPInfo[MAX_PLAYERS][tpi];
#define NUMBER_TYPE_PAINTJOB 36
enum PaintjobInfi {
	vehID,
	pjNumber,
	pjPrice,
	pjName[12]
};
static const pjInfo[NUMBER_TYPE_PAINTJOB][PaintjobInfi] = {
	{ 483, 0, 25000, "Paintjob 1" },
	{ 534, 0, 25000, "Paintjob 1" },
	{ 534, 1, 25000, "Paintjob 2" },
	{ 534, 2, 25000, "Paintjob 3" },
	{ 535, 0, 25000, "Paintjob 1" },
	{ 535, 1, 25000, "Paintjob 2" },
	{ 535, 2, 25000, "Paintjob 3" },
	{ 536, 0, 25000, "Paintjob 1" },
	{ 536, 1, 25000, "Paintjob 2" },
	{ 536, 2, 25000, "Paintjob 3" },
	{ 558, 0, 25000, "Paintjob 1" },
	{ 558, 1, 25000, "Paintjob 2" },
	{ 558, 2, 25000, "Paintjob 3" },
	{ 559, 0, 25000, "Paintjob 1" },
	{ 559, 1, 25000, "Paintjob 2" },
	{ 559, 2, 25000, "Paintjob 3" },
	{ 560, 0, 25000, "Paintjob 1" },
	{ 560, 1, 25000, "Paintjob 2" },
	{ 560, 2, 25000, "Paintjob 3" },
	{ 561, 0, 25000, "Paintjob 1" },
	{ 561, 1, 25000, "Paintjob 2" },
	{ 561, 2, 25000, "Paintjob 3" },
	{ 562, 0, 25000, "Paintjob 1" },
	{ 562, 1, 25000, "Paintjob 2" },
	{ 562, 2, 25000, "Paintjob 3" },
	{ 565, 0, 25000, "Paintjob 1" },
	{ 565, 1, 25000, "Paintjob 2" },
	{ 565, 2, 25000, "Paintjob 3" },
	{ 567, 0, 25000, "Paintjob 1" },
	{ 567, 1, 25000, "Paintjob 2" },
	{ 567, 2, 25000, "Paintjob 3" },
	{ 575, 0, 25000, "Paintjob 1" },
	{ 575, 1, 25000, "Paintjob 2" },
	{ 576, 0, 25000, "Paintjob 1" },
	{ 576, 1, 25000, "Paintjob 2" },
	{ 576, 2, 25000, "Paintjob 3" }
};
enum ComponentsInfo {
	cID,
	cName[ 40 ],
	cPrice,
	cType
};
#define MAX_COMPONENTS	200
static const ComponentInfo[MAX_COMPONENTS][ComponentsInfo] = {
	{ 1000, "Pro Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1001, "Win Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1002, "Drag Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1003, "Alpha Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1004, "Champ Scoop Hood", 7000, CARMODTYPE_HOOD },
	{ 1005, "Fury Scoop Hood", 7000, CARMODTYPE_HOOD },
	{ 1006, "Roof Scoop Roof", 30000, CARMODTYPE_ROOF },
	{ 1007, "Right Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1008, "5x Nitrous", 50000, CARMODTYPE_NITRO },
	{ 1009, "2x Nitrous", 20000, CARMODTYPE_NITRO },
	{ 1010, "10x Nitrous", 100000, CARMODTYPE_NITRO },
	{ 1011, "Race Scoop Hood", 7000, CARMODTYPE_HOOD },
	{ 1012, "Worx Scoop Hood", 7000, CARMODTYPE_HOOD },
	{ 1013, "Round Fog Lamp", 100, CARMODTYPE_LAMPS },
	{ 1014, "Champ Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1015, "Race Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1016, "Worx Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1017, "Left Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1018, "Upswept Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1019, "Twin Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1020, "Large Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1021, "Medium Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1022, "Small Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1023, "Fury Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1024, "Square Fog Lamp", 100, CARMODTYPE_LAMPS },
	{ 1025, "Offroad Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1026, "Right Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1027, "Left Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1028, "Alien Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1029, "X-Flow Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1030, "Left X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1031, "Right X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1032, "Alien Roof Vent", 30000, CARMODTYPE_ROOF },
	{ 1033, "X-Flow Roof Vent", 30000, CARMODTYPE_ROOF },
	{ 1034, "Alien Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1035, "X-Flow Roof Vent", 30000, CARMODTYPE_ROOF },
	{ 1036, "Right Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1037, "X-Flow Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1038, "Alien Roof Vent", 30000, CARMODTYPE_ROOF },
	{ 1039, "Left X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1040, "Left Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1041, "Right X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1042, "Right Chrome Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1043, "Slamin Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1044, "Chrome Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1045, "X-Flow Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1046, "Alien Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1047, "Right Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1048, "Right X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1049, "Alien Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1050, "X-Flow Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1051, "Left Alien Sideskirt", 12000, CARMODTYPE_SPOILER },
	{ 1052, "Left X-Flow Sideskirt", 12000, CARMODTYPE_SPOILER },
	{ 1053, "X-Flow Roof", 30000, CARMODTYPE_ROOF },
	{ 1054, "Alien Roof", 30000, CARMODTYPE_ROOF },
	{ 1055, "Alien Roof", 30000, CARMODTYPE_ROOF },
	{ 1056, "Right Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1057, "Right X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1058, "Alien Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1059, "X-Flow Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1060, "X-Flow Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1061, "X-Flow Roof", 30000, CARMODTYPE_ROOF },
	{ 1062, "Left Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1063, "Left X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1064, "Alien Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1065, "Alien Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1066, "X-Flow Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1067, "Alien Roof", 30000, CARMODTYPE_ROOF },
	{ 1068, "X-Flow Roof", 30000, CARMODTYPE_ROOF },
	{ 1069, "Right Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1070, "Right X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1071, "Left Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1072, "Left X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1073, "Shadow Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1074, "Mega Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1075, "Rimshine Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1076, "Wires Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1077, "Classic Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1078, "Twist Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1079, "Cutter Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1080, "Switch Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1081, "Grove Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1082, "Import Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1083, "Dollar Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1084, "Trance Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1085, "Atomic Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1086, "Stereo Wheels", 100, CARMODTYPE_STEREO },
	{ 1087, "Hydraulics", 200000, CARMODTYPE_HYDRAULICS },
	{ 1088, "Alien Roof", 30000, CARMODTYPE_ROOF },
	{ 1089, "X-Flow Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1090, "Right Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1091, "X-Flow Roof", 30000, CARMODTYPE_ROOF },
	{ 1092, "Alien Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1093, "Right X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1094, "Left Alien Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1095, "Right X-Flow Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1096, "Ahab Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1097, "Virtual Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1098, "Access Wheels", 75000, CARMODTYPE_WHEELS },
	{ 1099, "Left Chrome Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1100, "Chrome Grill", 100, -1 }, // Bullbar
	{ 1101, "Left `Chrome Flames` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1102, "Left `Chrome Strip` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1103, "Covertible Roof", 30000, CARMODTYPE_ROOF },
	{ 1104, "Chrome Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1105, "Slamin Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1106, "Right `Chrome Arches`", 10000, CARMODTYPE_SIDESKIRT },
	{ 1107, "Left `Chrome Strip` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1108, "Right `Chrome Strip` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1109, "Chrome", 100, -1 }, // Bullbar
	{ 1110, "Slamin", 100, -1 }, // Bullbar
	{ 1111, "Little Sign?", 100, -1 }, // sig
	{ 1112, "Little Sign?", 100, -1 }, // sig
	{ 1113, "Chrome Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1114, "Slamin Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1115, "Chrome", 100, -1 }, // Bullbar
	{ 1116, "Slamin", 100, -1 }, // Bullbar
	{ 1117, "Chrome Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1118, "Right `Chrome Trim` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1119, "Right `Wheelcovers` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1120, "Left `Chrome Trim` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1121, "Left `Wheelcovers` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1122, "Right `Chrome Flames` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1123, "Bullbar Chrome Bars", 100, -1 }, // Bullbar
	{ 1124, "Left `Chrome Arches` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1125, "Bullbar Chrome Lights", 100, -1 }, // Bullbar
	{ 1126, "Chrome Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1127, "Slamin Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1128, "Vinyl Hardtop", 30000, CARMODTYPE_ROOF },
	{ 1129, "Chrome Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1130, "Hardtop Roof", 30000, CARMODTYPE_ROOF },
	{ 1131, "Softtop Roof", 30000, CARMODTYPE_ROOF },
	{ 1132, "Slamin Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1133, "Right `Chrome Strip` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1134, "Right `Chrome Strip` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1135, "Slamin Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1136, "Chrome Exhaust", 6000, CARMODTYPE_EXHAUST },
	{ 1137, "Left `Chrome Strip` Sideskirt", 10000, CARMODTYPE_SIDESKIRT },
	{ 1138, "Alien Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1139, "X-Flow Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1140, "X-Flow Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1141, "Alien Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1142, "Left Oval Vents", 100, CARMODTYPE_VENT_LEFT },
	{ 1143, "Right Oval Vents", 100, CARMODTYPE_VENT_RIGHT },
	{ 1144, "Left Square Vents", 100, CARMODTYPE_VENT_LEFT },
	{ 1145, "Right Square Vents", 100, CARMODTYPE_VENT_RIGHT },
	{ 1146, "X-Flow Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1147, "Alien Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1148, "X-Flow Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1149, "Alien Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1150, "Alien Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1151, "X-Flow Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1152, "X-Flow Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1153, "Alien Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1154, "Alien Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1155, "Alien Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1156, "X-Flow Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1157, "X-Flow Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1158, "X-Flow Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1159, "Alien Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1160, "Alien Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1161, "X-Flow Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1162, "Alien Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1163, "X-Flow Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1164, "Alien Spoiler", 12000, CARMODTYPE_SPOILER },
	{ 1165, "X-Flow Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1166, "Alien Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1167, "X-Flow Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1168, "Alien Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1169, "Alien Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1170, "X-Flow Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1171, "Alien Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1172, "X-Flow Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1173, "X-Flow Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1174, "Chrome Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1175, "Slamin Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1176, "Chrome Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1177, "Slamin Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1178, "Slamin Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1179, "Chrome Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1180, "Chrome Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1181, "Slamin Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1182, "Chrome Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1183, "Slamin Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1184, "Chrome Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1185, "Slamin Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1186, "Slamin Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1187, "Chrome Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1188, "Slamin Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1189, "Chrome Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1190, "Slamin Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1191, "Chrome Front Bumper", 30000, CARMODTYPE_FRONT_BUMPER },
	{ 1192, "Chrome Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 1193, "Slamin Rear Bumper", 30000, CARMODTYPE_REAR_BUMPER },
	{ 18651, "Purple Neon Tubes", 70000, 2281488 },
	{ 18650, "Yellow Neon Tubes", 70000, 2281488 },
	{ 18649, "Green Neon Tubes", 70000, 2281488 },
	{ 18647, "Red Neon Tubes", 70000, 2281488 },
	{ 18648, "Blue Neon Tubes", 70000, 2281488 },
	{ 18652, "White Neon Tubes", 70000, 2281488 }
};
#define MAX_STICKERS 1
enum stickinfo{
	st_ID,
	st_Price,
	st_Name[48]
}
static const StickersInfo[MAX_STICKERS][stickinfo] = {
	{ 1, 150000, "Gucci Sticker" }
};
stock GetVehicleCameraPos(vehicleid, &Float:x, &Float:y, &Float:z, Float:xoff=0.0, Float:yoff=0.0, Float:zoff=0.0)
{
    new Float:rot;
    GetVehicleZAngle(vehicleid, rot);
    rot = 360 - rot;
    GetVehiclePos(vehicleid, x, y, z);
    x = floatsin(rot, degrees) * yoff + floatcos(rot, degrees) * xoff + x;
    y = floatcos(rot, degrees) * yoff - floatsin(rot, degrees) * xoff + y;
    z = zoff + z;
}
stock IsComponentidCompatible( modelid, componentid )
{
    if( componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
		componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
        componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
        componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086 || componentid == 18651||
		componentid == 18650 || componentid == 18649 || componentid == 18647 || componentid == 18648 || componentid == 18652)
	{
        return componentid;
	}
    switch( modelid )
	{
        case 400: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 ) return componentid;
        case 401: if( componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
        case 402: if( componentid == 1009 || componentid == 1009 || componentid == 1010 ) return componentid;
        case 404: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007) return componentid;
        case 405: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000) return componentid;
        case 409: if( componentid == 1009 ) return componentid;
        case 410: if( componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
        case 411: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 412: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 415: if( componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
        case 418: if( componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016) return componentid;
        case 419: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 420: if( componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003) return componentid;
        case 421: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000) return componentid;
        case 422: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007) return componentid;
        case 426: if( componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003) return componentid;
        case 429: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 436: if( componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
        case 438: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 439: if( componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013) return componentid;
        case 442: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 445: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 451: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 458: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 466: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 467: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 474: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 475: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 477: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007) return componentid;
        case 478: if( componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 479: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 480: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 489: if( componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000) return componentid;
        case 491: if( componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
        case 492: if( componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000) return componentid;
        case 496: if( componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020) return componentid;
        case 500: if( componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 506: if( componentid == 1009) return componentid;
        case 507: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 516: if( componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007) return componentid;
        case 517: if( componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
        case 518: if( componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
        case 526: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 527: if( componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007) return componentid;
        case 529: if( componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
        case 533: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 534: if( componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106) return componentid;
        case 535: if( componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119) return componentid;
        case 536: if( componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108) return componentid;
        case 540: if( componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007) return componentid;
        case 541: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 542: if( componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015) return componentid;
        case 545: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 546: if( componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007) return componentid;
        case 547: if( componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000) return componentid;
        case 549: if( componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
        case 550: if( componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003) return componentid;
        case 551: if( componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003) return componentid;
        case 555: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 558: if( componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093) return componentid;
        case 559: if( componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009) return componentid;
        case 560: if( componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031) return componentid;
        case 561: if( componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057) return componentid;
        case 562: if( componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039) return componentid;
        case 565: if( componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048) return componentid;
        case 566: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 567: if( componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133) return componentid;
        case 575: if( componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042) return componentid;
        case 576: if( componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134) return componentid;
        case 579: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 580: if( componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007) return componentid;
        case 585: if( componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007) return componentid;
        case 587: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 589: if( componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007) return componentid;
        case 600: if( componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007) return componentid;
        case 602: if( componentid == 1008 || componentid == 1009 || componentid == 1010) return componentid;
        case 603: if( componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007) return componentid;
    }
    return false;
}
stock AddComponentToVehicle(vehicleid, componentid)
{
	new vehid = GetVehicleID(vehicleid);
	if(GetVehicleComponentType(componentid) == CARMODTYPE_SPOILER)
	{
		TunInfo[vehid][nSpoiler] = componentid;
		if(TunInfo[vehid][nSpoiler] != -1) AddVehicleComponent(vehicleid, componentid);
	}
	else if(GetVehicleComponentType(componentid) == CARMODTYPE_HOOD)
	{
		TunInfo[vehid][nHood] = componentid;
		if(TunInfo[vehid][nHood] != -1) AddVehicleComponent( vehicleid, componentid );
	}
	else if(GetVehicleComponentType(componentid) == CARMODTYPE_ROOF)
	{
		TunInfo[vehid][nRoof] = componentid;
		if(TunInfo[vehid][nRoof] != -1) AddVehicleComponent(vehicleid, componentid);
	}
	else if(GetVehicleComponentType(componentid) == CARMODTYPE_SIDESKIRT)
	{
		TunInfo[vehid][nSideskirt] = componentid;
		if(TunInfo[vehid][nSideskirt] != -1 ) AddVehicleComponent(vehicleid, componentid);
	}
	else if(GetVehicleComponentType(componentid) == CARMODTYPE_NITRO)
	{
		TunInfo[vehid][nNitro] = componentid;
		if(TunInfo[vehid][nNitro] != -1) AddVehicleComponent(vehicleid, componentid);
	}
	else if(GetVehicleComponentType(componentid) == CARMODTYPE_EXHAUST)
	{
		TunInfo[vehid][nExhaust] = componentid;
		if(TunInfo[vehid][nExhaust] != -1 ) AddVehicleComponent(vehicleid, componentid);
	}
	else if(GetVehicleComponentType(componentid) == CARMODTYPE_WHEELS)
	{
		TunInfo[vehid][nWheels] = componentid;
		if(TunInfo[vehid][nWheels] != -1) AddVehicleComponent(vehicleid, componentid);
	}
	else if(GetVehicleComponentType(componentid) == CARMODTYPE_HYDRAULICS)
	{
		TunInfo[vehid][nHydraulics] = componentid;
		if(TunInfo[vehid][nHydraulics] != -1) AddVehicleComponent(vehicleid, componentid);
	}
	else if(GetVehicleComponentType(componentid) == CARMODTYPE_FRONT_BUMPER)
	{
		TunInfo[vehid][nFrontBumper] = componentid;
		if(TunInfo[vehid][nFrontBumper] != -1 ) AddVehicleComponent(vehicleid, componentid);
	}
	else if(GetVehicleComponentType(componentid) == CARMODTYPE_REAR_BUMPER)
	{
		TunInfo[vehid][nRearBumper] = componentid;
		if(TunInfo[vehid][nRearBumper] != -1 ) AddVehicleComponent(vehicleid, componentid);
	}
}
stock GetTuningName(componentid)
{
	new Name[20];
	switch(componentid)
	{
		case 1: Name = "Sticker_1";
		case 1000..1003,1014..1016,1023,1049,1050,1058,1060,1138,1139,1146,1147,1158,1162..1164: Name = "Spoiler";
		case 1004,1005,1011,1012: Name = "Hood";
		case 1007,1017,1026,1027,1030,1031,1036,1039..1042,1047,1048,1051,1052,1056,1057,1062,1063,1069,1072,1090,1093..1095,1099,1101,1102,1106..1108,1119..1122,1124,1133,1134,1137: Name = "Sides";
		case 1008..1010: Name = "Nitro";
		case 1018..1022,1028,1029,1034,1037,1043..1046,1059,1064.1066,1089,1092,1105,1113,1114,1126,1127,1129,1132,1135,1136: Name = "Exhaust";
		case 1025,1073..1085,1096..1098: Name = "Wheels";
		case 1006,1032,1033,1035,1038,1053..1055,1061,1067,1068,1088,1091,1103,1128,1130,1131: Name = "Roof";
		case 1087: Name = "Hydraulics";
		case 1117,1152,1153,1155,1157,1160,1165,1166,1169..1174,1176,1179,1181,1182,1185,1188..1191: Name = "FBumper";
		case 1140,1141,1148..1151,1154,1156,1159,1161,1167,1168,1175,1177,1178,1180,1183,1184,1186,1187,1192,1193: Name = "RBumper";
		case 18647..18652: Name = "Neon";
	}
	return Name;
}
stock ShowTuning(playerid)return ShowPlayerDialogEx(playerid, 7000, 2, "Автомастерская", "\
{7396FB}[1] {ffffff}Покрасочные работы\n\
{7396FB}[2] {ffffff}Перекраска кузова\n\
{7396FB}[3] {ffffff}Выхлоп\n\
{7396FB}[4] {ffffff}Передние бампера\n\
{7396FB}[5] {ffffff}Задние бампера\n\
{7396FB}[6] {ffffff}Воздухозаборники\n\
{7396FB}[7] {ffffff}Крыши\n\
{7396FB}[8] {ffffff}Спойлеры\n\
{7396FB}[9] {ffffff}Боковые юбки\n\
{7396FB}[10] {ffffff}Колёса\n\
{7396FB}[11] {ffffff}Гидравлика\n\
{7396FB}[12] {ffffff}Нитроускорители\n\
{7396FB}[13] {ffffff}Неоновая подсветка\n\
{7396FB}[14] {FFCB8C}Брендовые стикеры", "Выбрать", "Выйти");
ResetTuningInfo(playerid)
{
	TPInfo[playerid][tID] = -1;
	TPInfo[playerid][tType] = -1;
	TPInfo[playerid][tPaintjob] = false;
}
/*********************************Тюнинг*******************************/
/*native IsValidVehicle(vehicleid);
stock GetWeaponSlot(weaponid)
{
	switch(weaponid)
	{
	case 0,1: return 0;
	case 2..9: return 1;
	case 22..24: return 2;
	case 25..27: return 3;
	case 28,29,32: return 4;
	case 30,31: return 5;
	case 33,34: return 6;
	case 35..38: return 7;
	case 16..18,39:return 8;
	case 41..43: return 9;
	case 10..15: return 10;
	case 44..46: return 11;
	case 40: return 12;
	}
	return 0xFFFF;
}*/
//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
new OnPlayerLoading[MAX_PLAYERS];
new OnPlayerLoadingTick[MAX_PLAYERS];
new prost;
new Text:klick[21];
new checkcode[20][6] = {
	{1, 2, 3, 4, 5, 6},
	{2, 1, 6, 4, 5, 3},
	{2, 4, 1, 3, 6, 5},
	{6, 1, 4, 3, 2, 5},
	{3, 2, 1, 4, 5, 6},
	{5, 2, 6, 1, 3, 4},
	{5, 6, 4, 3, 2, 1},
	{1, 6, 3, 4, 5, 2},
	{1, 4, 5, 6, 3, 2},
	{4, 2, 3, 1, 5, 6},
	{1, 4, 3, 2, 6, 5},
	{5, 6, 1, 4, 2, 3},
	{6, 3, 1, 2, 4, 5},
	{5, 3, 4, 2, 6, 1},
	{1, 6, 2, 3, 5, 4},
	{6, 5, 4, 3, 2, 1},
	{4, 5, 6, 3, 2, 1},
	{3, 2, 1, 4, 5, 6},
	{3, 2, 1, 6, 4, 5},
	{1, 2, 6, 5, 4, 3}
};
new coderow;
new TutState[MAX_PLAYERS];
new healthpd[7];
new UseDrugsTime[MAX_PLAYERS];
new Text:Sphone[13];
new Text:SphoneKey[23];
new Text:Calling[4];
new PlayerText:Ppnumber[MAX_PLAYERS];
new PlayerText:callname[MAX_PLAYERS];
new Text:kbox[2];
new Float:CenaRaboti[MAX_PLAYERS];
new shot[MAX_PLAYERS];
new CanSend[MAX_PLAYERS];
new PlayerBar:golod[MAX_PLAYERS];
new CanUse[MAX_PLAYERS];
new oldGUN[MAX_PLAYERS];
new NeSdal[MAX_PLAYERS];
new dBiz[MAX_PLAYERS];
new pMusicOn[MAX_PLAYERS];
new royalcar;
////АНТИЧИТ ВАЛИКА
new bool:WeaponInfo[MAX_PLAYERS][47];
new AmmoInfo[MAX_PLAYERS][47];
new AmmoSlot[MAX_PLAYERS][13];
//////////////
//-=-=-=-=-=-=-=-=-=-=-=-=[ПЕРЕМЕННЫЕ СОЗДАНЫЕ ДЛЯ ЗАМЕНЫ ПВАРОВ]-=-=-=-=-=-=-=-
new WeatherIDs[] = {1, 2, 3, 4, 6, 8, 10, 11, 12, 13, 17, 14, 15, 7};
new Float: GHealth[MAX_PLAYERS];
new bool:VehicleCreates[MAX_VEHICLES];
new VehicleCreate[MAX_PLAYERS];
new TimetoReturn[MAX_PLAYERS];
new Vnedren[MAX_PLAYERS];
new Getemer[MAX_PLAYERS];
new Talent_KD[MAX_PLAYERS][4];
new Iznas[MAX_PLAYERS];
new Assist[MAX_PLAYERS];
new Ingatre[MAX_PLAYERS];
new kasmenu[MAX_PLAYERS];
new mehan[MAX_PLAYERS];
new dilo[MAX_PLAYERS];
new TimeBus[MAX_PLAYERS];
new deal[MAX_PLAYERS];
new gpss[MAX_PLAYERS];
new lomanim[MAX_PLAYERS];
new medlomka[MAX_PLAYERS];
new startlomka[MAX_PLAYERS];
new cuffer[MAX_PLAYERS];
new EngineStalled[MAX_PLAYERS];
new rabden[MAX_PLAYERS];
new notneedm[MAX_PLAYERS];
new animan[MAX_PLAYERS];
new report[MAX_PLAYERS];
new spaned[MAX_PLAYERS];
new ferman[MAX_PLAYERS];
new FirstFire[MAX_PLAYERS];
new SecondFire[MAX_PLAYERS];
new selfrac[MAX_PLAYERS];
new asker[MAX_PLAYERS];
new gskin[MAX_PLAYERS];
new ViborSERIU[MAX_PLAYERS];
new BusTime[MAX_PLAYERS];
new BusMoney[MAX_PLAYERS];
new mycasino[MAX_PLAYERS];
new jlock[MAX_PLAYERS];
new InJobs[MAX_PLAYERS];
new engines[MAX_PLAYERS];
new Predlog[MAX_PLAYERS];
new aint[MAX_PLAYERS];
new onkey[MAX_PLAYERS];
new Healttime[MAX_PLAYERS];
new JobHack[MAX_PLAYERS];
new TimeMessage[MAX_PLAYERS];
new pCurrentWeapon[MAX_PLAYERS];
new sellcarto[MAX_PLAYERS];
new nedded[MAX_PLAYERS];
new PlayerAFK[MAX_PLAYERS];
new PlayerAFKTime[MAX_PLAYERS][2];
new Keychange[MAX_PLAYERS];
new Player_Timer[MAX_PLAYERS][3];
//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

new Float:antidm[15][4]=
{
	{2276.9587,32.8418,1040.7554, 120.0},//Больница
	{1468.6514,-1741.8002,13.5469, 100.0},//bank
	{2229.4236,-1156.9237,25.8201, 20.0},//Джефферсон
	{-1973.8165,123.3365,27.6939, 70.0},//
	{2858.4539,1240.7146,10.8984, 200.0},//
	{-23.8673,-29.7892,3.1172, 250.0},//
	{1595.0094,1825.6066,10.8203, 70.0},
	{-268.1275,-1394.9873,10.9708, 300.0},
	{1202.4354,-1330.0955,13.3984, 100.0},
	{-2031.1965,-91.2403,35.3181, 50.0},
	{447.3151, -1301.2961, 15.1445, 80.0},
	{2253.5122,1824.3641,1028.9556, 300.0},//казино интерьер
	{2085.8782,1444.3806,10.8203, 40.0},//казино снаружи
	{289.2448,-39.2696,1001.5156, 100.0},
	{-2048.5449,-121.3634,1035.6184, 100.0}
};


new Float:phonepos[134][3]=
{
	{1540.81, -1720.28, 13.79},
	{1163.00, -1704.39, 14.27},
	{1212.94, -1307.07, 13.78},
	{1363.9105,-1257.7277,13.5469},
	{1517.54, -1314.19, 15.23},
	{926.32, -1313.96, 13.81},
	{1066.10, -1029.03, 32.35},
	{460.74, -1607.63, 25.92},
	{333.68, -1775.89, 5.34},
	{539.27, -1266.13, 16.83},
	{1190.87, -930.76, 43.22},
	{1558.57, -1056.97, 24.02},
	{1674.82, -1168.34, 24.19},
	{1838.52, -1374.49, 13.86},
	{1795.61, -1620.13, 13.83},
	{1345.00, -1567.78, 13.89},
	{1947.05, -1794.71, 13.85},
	{2093.51, -1790.08, 13.79},
	{1950.80, -1978.01, 13.84},
	{1466.70, -2228.48, 13.80},
	{2088.65, -2101.52, 13.84},
	{2245.30, -2199.81, 13.87},
	{2205.43, -1994.22, 13.80},
	{2170.02, -1745.22, 13.82},
	{2243.34, -1724.31, 13.82},
	{2178.41, -1629.57, 15.08},
	{2422.05, -1890.09, 13.83},
	{2503.14, -1940.56, 13.81},
	{2730.45, -1987.05, 13.84},
	{2833.71, -1645.51, 11.21},
	{2484.72, -1495.39, 24.22},
	{2307.92, -1492.46, 23.81},
	{2277.04, -1338.40, 24.26},
	{2026.62, -1267.34, 24.30},
	{2195.91, -1132.80, 25.77},
	{1876.21, -1039.23, 24.08},
	{1990.07, -1472.45, 13.83},
	{2651.60, -1415.61, 30.63},
	{2831.02, -1129.65, 25.22},
	{2251.45, -1308.21, 24.28},
	{1750.36, -1453.00, 13.81},
	{1706.17, -1319.16, 13.84},
	{1429.55, -1536.88, 13.85},
	{1290.85, -1558.72, 13.87},
	{1827.07, 824.71, 10.75},
	{2026.67, 1080.83, 11.05},
	{2085.41, 1386.88, 11.08},
	{2091.63, 1713.69, 11.08},
	{2214.46, 1780.42, 11.13},
	{2101.19, 2031.25, 11.09},
	{2271.61, 2028.42, 11.06},
	{2118.22, 2234.50, 11.07},
	{2333.44, 2421.31, 11.11},
	{2436.25, 2353.93, 11.08},
	{2174.13, 2461.80, 11.09},
	{2019.56, 2460.77, 11.11},
	{1918.68, 2310.74, 11.08},
	{1720.38, 2242.66, 11.06},
	{1486.36, 2046.84, 11.09},
	{1641.04, 1848.49, 11.09},
	{1313.80, 2059.51, 11.06},
	{1119.09, 2059.85, 11.09},
	{1060.15, 1945.67, 11.08},
	{1050.40, 1381.40, 11.10},
	{1405.17, 1199.50, 11.11},
	{1574.73, 736.68, 11.15},
	{1636.78, 939.82, 11.08},
	{1689.39, 1266.98, 11.15},
	{1715.12, 1374.58, 10.93},
	{2443.80, 2061.84, 11.09},
	{2514.01, 1910.17, 11.13},
	{2616.46, 1973.91, 11.08},
	{2811.74, 2119.81, 10.97},
	{2884.44, 2301.22, 11.09},
	{2635.13, 2307.56, 11.09},
	{2520.01, 2302.06, 11.02},
	{2333.71, 1644.22, 11.10},
	{2434.64, 1506.88, 11.12},
	{2445.94, 1366.45, 11.10},
	{2591.83, 1185.00, 11.08},
	{2798.67, 1322.22, 11.20},
	{2560.91, 1367.11, 11.13},
	{2208.06, 1366.71, 11.08},
	{1853.97, 2061.76, 11.14},
	{1936.07, 2165.18, 11.13},
	{1934.44, 2048.72, 11.06},
	{-1807.46, -128.81, 5.97},
	{-2019.60, -61.78, 35.64},
	{-1996.47, 132.13, 27.94},
	{-2114.38, 327.02, 35.45},
	{-2258.88, 135.45, 35.62},
	{-2268.38, -174.33, 35.57},
	{-2363.64, -146.05, 35.61},
	{-2180.08, 313.92, 35.53},
	{-2018.43, 471.62, 35.47},
	{-2266.92, -36.03, 35.58},
	{-2427.97, -52.55, 35.58},
	{-2410.60, 310.71, 35.44},
	{-2237.71, 552.46, 35.44},
	{-2077.99, 557.22, 35.58},
	{-1824.78, 615.24, 35.48},
	{-1928.06, 720.37, 45.65},
	{-1986.18, 831.29, 45.68},
	{-1752.72, 829.49, 25.22},
	{-1723.04, 655.50, 25.18},
	{-1705.30, 825.06, 25.09},
	{-1805.25, 893.59, 25.08},
	{-1910.16, 867.79, 35.36},
	{-1993.13, 893.16, 45.72},
	{-2154.95, 763.83, 69.90},
	{-1982.00, 1088.07, 56.05},
	{-2643.99, 576.62, 14.94},
	{-2446.00, 716.49, 35.43},
	{-2246.69, 674.83, 49.70},
	{-2133.04, 896.79, 80.27},
	{-1631.27, 740.87, 14.90},
	{-1570.14, 508.45, 7.49},
	{-1673.62, 391.68, 7.44},
	{-1813.99, 71.72, 15.33},
	{-2245.78, -150.15, 35.57},
	{-2427.68, -135.93, 35.56},
	{-2508.02, -116.00, 25.91},
	{-2507.95, 17.15, 26.10},
	{-2363.44, -2.61, 35.51},
	{-2672.04, -63.73, 4.56},
	{-2664.74, -218.79, 4.61},
	{-2692.48, 280.11, 4.64},
	{-2732.06, 421.79, 4.60},
	{-1999.5015,96.6074,27.6875},
	{1770.9142,-1917.4033,13.5558},
	{1721.2460,-1720.8604,13.5433},
	{1381.9146,-1802.9962,13.5469},
	{1394.5167,-1765.7505,13.5469},
	{547.3615,-1499.2080,14.5036}
};
new Float:bandos[14][3]=
{
	{2237.6855, 1815.2903, 1029.5364},
	{2246.5885, 1815.2903, 1029.5364},
	{2252.9194, 1815.2903, 1029.5364},
	{2255.3544, 1808.9593, 1029.5364},
	{2250.9715, 1808.9594, 1029.5364},
	{2239.2834, 1808.9594, 1029.5364},
	{2234.9004, 1808.9594, 1029.5364},
	{2252.0713, 1833.0803, 1029.5240},
	{2243.0713, 1833.0803, 1029.5240},
	{2236.5713, 1833.0803, 1029.5240},
	{2250.7933, 1839.2903, 1029.5240},
	{2254.9572, 1839.2903, 1029.5240},
	{2238.9532, 1839.2903, 1029.5240},
	{2234.4531, 1839.2903, 1029.5240}
};
new Pstroka[MAX_PLAYERS][7];
new clickerstat[MAX_PLAYERS];
new pclicklen[MAX_PLAYERS][12];
new PlayerText:calltime[MAX_PLAYERS];
new PlayerText:bydilnik[MAX_PLAYERS];
new Text:kryg;
new PlayerText: pKlicked[MAX_PLAYERS];
enum gtInfo
{
	gtID,
	gtGoID,
	Float:gtX,
	Float:gtY,
	Float:gtZ,
	Float:gtTPX,
	Float:gtTPY,
	Float:gtTPZ,
	gtState,
	gtStayed
}

new GotoInfo[MAX_PLAYERS][gtInfo];
new Text:Bandito[9];
new Text:BetText[MAX_PLAYERS];
new Text:BalanceText[MAX_PLAYERS];
new Text:Box;
new Text:Digit1[6];
new Text:Digit2[6];
new Text:Digit3[6];
new Slots[MAX_PLAYERS][3];
new SlotCounter[MAX_PLAYERS];
new Gambling[MAX_PLAYERS];
new SlotTimer[MAX_PLAYERS];
new Bet[MAX_PLAYERS];
new Balance[MAX_PLAYERS];
Text:CreateSprite(Float:X,Float:Y,const Name[25],Float:Width,Float:Height)
{
        new Text:RetSprite;
        RetSprite = TextDrawCreate(X, Y, Name); // Text is txdfile:texture
        TextDrawFont(RetSprite, 4); // Font ID 4 is the sprite draw font
        TextDrawColor(RetSprite,0xFFFFFFFF);
        TextDrawTextSize(RetSprite,Width,Height); // Text size is the Width:Height
        return RetSprite;
}
enum bbInfo
{
	bool:bbCreated,
	Float:bbPos[3],
	bbTime,
	Text3D:bbText,
	bbObject,
	bool:bbBreak
}

new BombInfo[MAX_BOMBS][bbInfo];
Text:CreateBox(Float:X,Float:Y,Float:Width,Float:Height,color)
{
    new Text[500];
    for(new i=floatround(Y); i < floatround(Y+Height);i++) strcat(Text,"~n~_");
	new Text:RetSprite;
    RetSprite = TextDrawCreate(X, Y, Text); // Text is txdfile:texture
    TextDrawFont(RetSprite, 0); // Font ID 4 is the sprite draw font
    TextDrawColor(RetSprite,0xFFFFFFFF);
    TextDrawTextSize(RetSprite,Width+X,Height+Y); // Text size is the Width:Height
    TextDrawUseBox(RetSprite,1);
    TextDrawBoxColor(RetSprite,color);
    TextDrawLetterSize(RetSprite,0.0001,0.1158);
    return RetSprite;
}
new Text:StopAnimation;
new PlayerText:NeedAssistance[MAX_PLAYERS];
new TimerP;
//new PTick[MAX_PLAYERS];
new Process[MAX_PLAYERS][MAX_VEHICLES];
new MProcess[MAX_PLAYERS][MAX_VEHICLES];
new Fullness[MAX_PLAYERS];
new pSportZal[MAX_PLAYERS];
new shotTime[MAX_PLAYERS];
new SellGzone[MAX_PLAYERS];
new SellPGzone[MAX_PLAYERS];
new Text3D:cretits;
static const Pb[27] =
{
    0x10331113, 0x11311131, 0x11331313, 0x80133301,0x1381F110, 0x10311103, 0x10001F10, 0x11113311,0x13113311, 0x31101100, 0x30001301, 0x11031311,
    0x11111331, 0x10013111, 0x01131100, 0x11111110,0x11100031, 0x11130221, 0x33113311, 0x11111101,0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
    0x13330111, 0xFF131111, 0x0000FF3F
};
static VehicleID[MAX_PLAYERS];
new actortime[MAX_ACTORSS];
new CreteBomb[MAX_PLAYERS];
new GLS[72];
/////////////
new AddMessages[MAX_PLAYERS][128];
new AddTimeMessages[MAX_PLAYERS];
new AddId[MAX_PLAYERS];
new time_grandtimer,time_grandtimer_max, GrandEndOK;
new time_newkeys,time_pickup;
new time_update_max;
new Text:URL[23];
new Text:INTROTD[2];
new Weather;
//
new RegTimeNumber[MAX_PLAYERS];
new RegCarNumber[MAX_PLAYERS];
new RegCarID[MAX_PLAYERS];
new RegNumbers[MAX_PLAYERS][128];
new HealSG[71];
new bool:PlayerPlayed[MAX_PLAYERS];
new PlayerBBOX[MAX_PLAYERS];
new PlayerSound[MAX_PLAYERS][256];
new bool:PlayerGlass[MAX_PLAYERS];
new amybank;
new nalogoffise[2];
new shopeat[31];
//==============event===============
new Float:eventXYZ[3], Float:eventStartXYZ[3];
new eventMoney, eventMoneyAll, eventPls, eventStats;
new eventIN[MAX_PLAYERS];
//--------------event---------------
enum factoryenum{
	fMaterials,
	fAurum,
	fDiamonds,
	fSlitkov,
	fBrilliantov,
	gold_Sell,
	gold_Buy,
	diamond_Sell,
	diamond_Buy,
	Text3D:fInfo[2]
}
new FactoryInfo[factoryenum];
new MinerInfo[28][2];
new Float:MinerPos[28][3] = {
	//almaz
	{722.3077,-194.7943,1032.4128},
	{717.6339,-202.4381,1030.9446},
	{714.3942,-206.1026,1031.3083},
	{718.2842,-216.6483,1031.1383},
	{718.5179,-220.3101,1031.7031},
	{714.4520,-222.0455,1031.5210},
	{707.1659,-214.6983,1030.8427},
	{707.7131,-206.7019,1030.8427},
	{720.5803,-198.3864,1030.9495},
	//metall
	{1019.2089,-126.3969,1031.0773},
	{1017.4895,-123.3646,1032.4634},
	{1017.1657,-118.6391,1032.1086},
	{1023.1144,-113.6014,1030.9579},
	{1025.2471,-111.4969,1031.4377},
	{1027.8005,-113.0498,1031.4481},
	{1034.9263,-115.3258,1030.9167},
	{1037.4768,-117.5990,1031.2347},
	{1039.7629,-120.0097,1031.0291},
	{1044.2771,-124.9567,1031.4363},
	{1038.7406,-130.7960,1031.1277},
	//gold
	{737.7895,-249.3746,1030.9305},
	{738.5242,-253.3994,1031.2092},
	{735.7606,-257.4752,1031.2969},
	{733.5126,-260.5149,1031.5203},
	{724.2143,-261.6406,1031.6602},
	{720.4954,-259.0481,1031.9048},
	{713.6071,-251.7316,1030.8530},
	{711.3892,-248.0708,1031.2861}
};
new DownCP[2];
new Text:FactoryGame[10];
new PlayerText:FactoryKamen[MAX_PLAYERS];
new Float:FactoryGamePos[9][2] = {
	{264.666748, 183.182250},
	{337.111297, 255.644454},
	{301.222259, 256.386688},
	{265.111053, 255.884460},
	{336.555633, 218.795593},
	{300.888916, 219.040039},
	{265.222198, 219.035598},
	{337.333587, 182.942260},
	{300.777954, 182.937820}
};
//==========speed===========
new PlayerText:speeddraw[MAX_PLAYERS][9];
//==========speed===========

enum _spectator
{
	sID
}
new SERIU[MAX_PLAYERS][_spectator];
new TempBGObject[MAX_PLAYERS] = {-1, ...};
new Float:GunPos[47][3] =
{
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.40999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.35999924, 1001.59997559},
	{295.00001221, -39.35999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{294.90001221, -39.35999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.33999924, 1001.59997559},
	{295.20001221, -39.33999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.10001221, -39.25999924, 1001.59997559},
	{295.10001221, -39.25999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.10001221, -39.20999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{295.00001221, -39.25999924, 1001.59997559},
	{295.00001221, -39.25999924, 1001.59997559},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{0.00000, 0.00000, 0.00000},
	{295.20001221, -39.40999924, 1001.59997559}
};
#define GUN_POS GunPos[gunid][0], GunPos[gunid][1], GunPos[gunid][2]
#define GUN_ROT 90.0, 0.0, 90.0
//------------------------------------------------------------------------------
main()
{
	print("                    ______________________________\n");
	print("                    | 	    GOOD GAME RP    	 |");
	print("                    | 	 Copyright 2018 (c) 	 |");
	print("                    | 	 ALL RIGHTS RESERVED 	 |");
	print("                    ______________________________");
}
#define ZAVOD_SKIN_1 259
#define ZAVOD_SKIN_2 260
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define MAX_STRIPS          50
#define UN_SPEED 	0.95
#define MAX_SPEED   0.50
#define NO_LICENSE         	(0)
#define NULLED_LIC         	(1)
#define YES_LICENSE         (2)
#define COLOR_SYSTEM 		0xEFEFF7AA
#define COLOR_SHBAR_BG 		0x000000FF
#define COLOR_SHBAR_BG2 	0xB8CEF6FF
#define COLOR_RED 			0xCC3B12FF
#define COLOR_ORANGE 		0xFFA500FF
#define COLOR_GREEN 		0x34A11BFF
#define COLOR_GOLD          0xFFD700FF
#define COLOR_LIGHTRED 		0xED5555FF
#define COLOR_LIGHTBLUE 	0x7396FBFF
#define COLOR_LIGHTGREEN 	0x86D18DFF
#define COLOR_YELLOW 		0xFFFF00FF
#define COLOR_WHITE 		0xFFFFFFFF
#define COLOR_BLACK 		0x000000FF
#define COLOR_BLUENEW 		0x379ADBFF
#define COLOR_BLUE 			0x514FFBFF
#define COLOR_PURPLE 		0xBA61FFFF
#define COLOR_LIME 			0xBAF779FF
#define COLOR_GRAY 			0x949494FF
#define COLOR_INDIGO        0x6500C9FF
#define COLOR_CHAT			0xebebebFF
#define COLOR_SCHAT			0x94E0C2FF
#define COLOR_DOCHAT		0x8D69B3FF
#define COLOR_RACIO			0x3AA2CFFF
#define COLOR_DEPAR			0xFF754FFF
#define COLOR_ACHAT   		0x82CFFFFF
#define COLOR_ME            0xE59CE5FF
#define COLOR_GOV           0x8760EBFF
#define MAX_MUSORS 329
#define SetPlayerTimer(%0,%1,%2,%3) SetTimerEx(%1, %2, %3, "i", %0)
#define RENAME_DIALOG 	(170)
#define VEHICLE_STATE_CAR   0
#define VEHICLE_STATE_BIKE  1
#define VEHICLE_STATE_VELIK 2
#define VEHICLE_STATE_PLANE 3
#define VEHICLE_STATE_BOAT  4
#define VEHICLE_STATE_MOPED 5
#define VEHICLE_STATE_TRAIN 6
#define JOB_NONE        (0)
#define JOB_GUNDEALER 	(1)
#define JOB_DETECTIVE 	(2)
#define JOB_CARJACKER 	(3)
#define JOB_MECHANIC 	(4)
#define JOB_TAXI 		(5)
#define JOB_ADVOKAT 	(6)
#define JOB_MINER 		(7)
#define JOB_GUIDE 		(8)
#define JOB_COLLECTOR 	(9)
#define JOB_DRUGDEALER  (10)
#define JOB_TRUCKER  	(11)
#define JOB_SCRAPER  	(13)
#define JOB_NALOG 		(16)
#define JOB_FARMER1 	(17)

#define SPECIAL_ACTION_PISS (68)
#define INVALID_DIALOG_ID   (1234)
#define ADM_NONE 		(0)
#define ADM_MODER 		(1)
#define ADM_SUPER_MODER (2)
#define ADM_ADMIN       (3)
#define ADM_SUPER_ADMIN (4)
#define ADM_GRAND_ADMIN (5)
#define ADM_GRAND		(6)
#define TEAM_FIRST_RANK (1)
#define PUT_STATE_MONEY (0)
#define PUT_STATE_DRUGS (1)
#define PUT_STATE_MATS 	(2)
#define PUT_STATE_CHEEPS (0)
#define PUT_STATE_SPRUNK (1)
#define MP5Mats      	(3)
#define AK47Mats 	 	(5)
#define UziMats 	 	(2)
#define M4Mats 		 	(5)
#define EagleMats    	(4)
#define ShotGunMats  	(2)
#define RifleMats    	(10)
#define SniperMats   	(50)
#define KoktelMats 	 	(500)
#define MAX_OGRAD 		(1000)
#define GasMax 			(50)
#define MAX_OWNABLECASINO  (1)
#define MAX_PING        (500)
#define MAX_BIZ         (127)
#define NO_DUTY_TEXT    "Необходимо получить доступ к панели администрирования. Используйте {cc3b12}/apanel"
#define DONAT_ID_MONEY 900
#define INVALID_BIZ     (-1)
#define BIZ_GS_LS       (0)
#define BIZ_GS_SF       (1)
#define BIZ_GS_LV       (2)
#define BIZ_ELECTRO_LS 	(15)
#define BIZ_ELECTRO_SF 	(16)
#define BIZ_ELECTRO_LV 	(17)
#define BIZ_GAS_LS_1 	(19)
#define BIZ_GAS_LS_2 	(20)
#define BIZ_GAS_SF_1 	(21)
#define BIZ_GAS_SF_2 	(22)
#define BIZ_GAS_SF_3 	(23)
#define BIZ_GAS_SF_4 	(24)
#define BIZ_GAS_SF_5 	(25)
#define BIZ_GAS_SF_6 	(26)
#define BIZ_GAS_LV_1 	(27)
#define BIZ_GAS_LV_2 	(28)
#define BIZ_GAS_LV_3 	(29)
#define BIZ_GAS_LV_4 	(30)
#define BIZ_GAS_LV_5 	(31)
#define BIZ_GAS_LV_6 	(32)
#define BIZ_RENT_LS     (39)
#define BIZ_RENT_SF     (40)
#define BIZ_RENT_LV     (41) //getto
#define BIZ_AERO_LS     (42)
#define BIZ_RENTLV1 (52)
#define BIZ_RENTLV2 (53)
#define BIZ_RENTLV3 (54)
#define BIZ_RENTLV4 (55)
#define BIZ_RENTLV5 (56)
#define BIZ_RENTLV6 (57)
#define BIZ_RENTLV7 (58)

#define BIZ_SFRENT1 (122)
#define BIZ_SFRENT2 (123)
#define BIZ_SFRENT3 (124)
#define BIZ_SFRENT4 (125)


#define BIZ_AZS1 (59)
#define BIZ_AZS2 (60)
#define BIZ_AZS3 (61)
#define BIZ_AZS4 (62)
#define BIZ_AZS5 (63)
#define BIZ_AZS6 (64)
#define LV_AMYN1 (65)
#define LV_AMYN2 (66)
#define LV_AMYN3 (67)
#define LV_AMYN4 (68)
#define SPAWN_NONE  	(0)
#define SPAWN_HOUSE 	(1)
#define MAX_EATCP 3
#define MAX_TELEPORTS   (84)
#define MAX_BANS        (50)
#define NONE_3D_TEXT (Text3D:-1)
#define D_BUY_VIP       (0)
#define D_BUY_GOLD 		(1)
#define D_BUY_MONEY 	(2)
#define D_BUY_PHONE 	(3)
#define D_BUY_WARN 		(4)
#define D_BUY_SKILL 	(5)
#define D_BUY_NAME 		(6)
#define D_BUY_EXP 		(7)
#define D_BUY_UNBL 		(8)
#define D_BUY_ZKP 		(9)
#define D_BUY_PLATIN 	(10)
#define D_BUY_NARKO 	(11)
#define MOBILE_CORDS    0.0, 0.0, 0.0, 0.0, 0.0, 0.0

#define TEAM_NONE       (0)
#define TEAM_LSPD 		(1)
#define TEAM_RCPD 		(2)
#define TEAM_FBI 		(3)
#define TEAM_SFPD		(4)
#define TEAM_M4C 		(5)
#define TEAM_MERIALS 	(6)
#define TEAM_ARMYLV 	(7)
#define TEAM_MERIALV 	(8)
#define TEAM_LICENSERS 	(9)
#define TEAM_RADIO 		(10)
#define TEAM_GROOVE 	(11)
#define TEAM_VAGOS 		(12)
#define TEAM_BALLAS 	(13)
#define TEAM_CORONOS 	(14)
#define TEAM_RIFA 		(15)
#define TEAM_RM 		(16)
#define TEAM_YAKUZA 	(17)
#define TEAM_LCN 		(18)
#define TEAM_BIKERS 	(19)
#define TEAM_ARMY		(20)
#define TEAM_BANK		(21)
#define TEAM_MEDICLV	(22)
#define TEAM_PDLV 		(23)
#define TEAM_RADIOLV 	(24)
#define TEAM_WOLFS 		(25)
#define TEAM_RADIOSF 	(26)
#define TEAM_ARMYSF 	(27)

#define RES_CAR_TIME    (600)
#define BUY_MENU_PRODUCTS 	"Предмет\tСтоимость\t\nЧипсы\t{52A32A}$400{FFFFFF}\nСпранк\t{52A32A}$100{FFFFFF}\nПиво\t{52A32A}$300{FFFFFF}"
#define BUY_MENU_CHANCERY 	"Предмет\tСтоимость\t\nТелефонная книга\t{52A32A}$650{FFFFFF}\nСкрепки\t{52A32A}$90{FFFFFF}"
#define BUY_MENU_ACCSESSORY	"Предмет\tСтоимость\t\nМаска\t{52A32A}$600{FFFFFF}"
#define BUY_MENU_TEXNIKA    "Предмет\tСтоимость\t\nМобильный телефон\t{52A32A}$700{FFFFFF}\nБумбокс\t{52A32A}$400{FFFFFF}\nФотоаппарат\t{52A32A}$100{FFFFFF}\nСим-карта\t{52A32A}$400{FFFFFF}"
#define BUY_MENU_SMOKE      "Предмет\tСтоимость\t\nСигареты\nЗажигалки"
#define BUY_MENU_FISHED     "Предмет\tСтоимость\t\nУдочка\t{52A32A}$500{FFFFFF}\nЧерви\t{52A32A}$20{FFFFFF}"
#define BUY_MENU_MEHAN      "Предмет\tСтоимость\t\nЛопата\t{52A32A}$700{FFFFFF}\nНабор для починки\t{52A32A}$1500{FFFFFF}\nКанистра\t{52A32A}$1500{FFFFFF}\nБалончик с краской\t{52A32A}$1500{FFFFFF}\nБензопила\t{52A32A}$2000{FFFFFF}"
#define BUY_MENU_SMOKES2    "Предмет\tСтоимость\t\nLM\t{52A32A}$100{FFFFFF}\nBOND\t{52A32A}$100{FFFFFF}\nРусский Стиль\t{52A32A}$100{FFFFFF}\nKent\t{52A32A}$100{FFFFFF}\nОптима\t{52A32A}$100{FFFFFF}\nChesterfield\t{52A32A}$200{FFFFFF}\nMarllboro\t{52A32A}$200{FFFFFF}\nParlament\t{52A32A}$200{FFFFFF}\nСигары\t{52A32A}$500{FFFFFF}\nПрима без фильтра\t{52A32A}$100{FFFFFF}\nБеломор канал\t{52A32A}$100"
#define BUY_MENU_LIGHTS2    "Предмет\tСтоимость\t\nАвтогеновая\t{52A32A}$200{FFFFFF}\nZippo\t{52A32A}$300{FFFFFF}\nCricket\t{52A32A}$100{FFFFFF}"
#define GRAND_BUY_MENU_TEXT "{52A32A}-{FFFFFF} Продукты\n{52A32A}-{FFFFFF} Канцелярия\n{52A32A}-{FFFFFF} Аксессуары\n{52A32A}-{FFFFFF} Техника\n{52A32A}-{FFFFFF} Сигареты & Зажигалки\n{52A32A}-{FFFFFF} Рыбалка\n{52A32A}-{FFFFFF} Разное"
#define KEY_HORN 				(2)
#define KEY_ACCELERATE 			(8)
#define KEY_ACTION_WALK 		(9)
#define KEY_FIRE_ACCELERATE 	(12)
#define KEY_EXIT_VEHICLE 		(16)
#define KEY_BRAKE 				(32)
#define KEY_FIRE_BRAKE 			(36)
#define KEY_SPRINT_JUMP 		(40)
#define KEY_AIM                 (128)
#define KEY_AIM_FIRE 			(132)
#define KEY_AIM_BRAKE 			(136)
#define KEY_LOOK_BEHIND_V 		(320)
#define KEY_LOOK_BEHIND_AIM 	(640)
#define KEY_WALK_AIM 			(1152)
#define KEY_FIRE_ANALOG_LEFT 	(8196)
#define KEY_AIM_ANALOG_LEFT 	(8320)
#define KEY_WALK_ANALOG_LEFT 	(9216)
#define KEY_FIRE_ANALOG_RIGHT 	(16388)
#define KEY_AIM_ANALOG_RIGHT 	(16512)
#define KEY_WALK_ANALOG_RIGHT 	(17408)
#define CLICK_STATE_NONE 	 (-1)
#define CLICK_STATE_PAY      (0)
#define CLICK_STATE_MATS   	 (1)
#define CLICK_STATE_DRUGS  	 (2)
#define CLICK_STATE_SIGS  	 (3)
#define CLICK_STATE_CHEEPS 	 (4)
#define CLICK_STATE_SPRUNK 	 (5)
#define CLICK_STATE_BEER 	 (6)
#define CLICK_STATE_GOLD 	 (7)
#define CLICK_STATE_SYRINGE  (8)
#define CLICK_STATE_POISON 	 (9)
#define CLICK_STATE_CLIP     (10)
#define CLICK_STATE_WORMS    (11)
#define CLICK_STATE_WHISPER  (12)
#define CLICK_STATE_AUDIOMSG (13)
#define CLICK_STATE_BRON (14)
#define CLICK_STATE_NARKOZ (15)
#define ArendCars 187
#define AREND_DIALOG 230
#define B_GUNSHOP 	(0)
#define B_BAR 		(1)
#define B_BUY 		(2)
#define B_BINKO 	(3)
#define B_ELECTRO 	(4)
#define B_CARUPGR 	(5)
#define B_GAS 		(6)
#define B_CL_BELL 	(7)
#define B_RENTCAR 	(8)
#define SEK_MC 	1000
#define MIN_SEC 60
#define MAX_BARSs 7
#define SCRAP_POS_X   	2224.5222
#define SCRAP_POS_Y   	-2461.0154
#define SCRAP_POS_Z   	13.4466
#define MAX_AFK_TIME 	(300)
#define BARRIER_SPEED 	0.015
#define D_STATE_NORMAL  	(0)
#define D_STATE_CUFFED  	(1)
#define D_STATE_TEMPCUFF	(2)
#define D_STATE_KNOCKOUT    (3)
#define D_STATE_TIED        (4)
#define MAX_PHOTOS 6
#define MAX_CPS 21
#define MAX_RADIOS 10
#define INC_CPs 22
#define MAX_GUNS (sizeof(BuyGunInfo)-1)
/***************************Двери*************************/
new gGate[28];
new gBarrier[13];
enum gInfo
{
	gOrg,
	gObID,
	Float:gClose_X,
	Float:gClose_Y,
	Float:gClose_Z,
	Float:gClose_A,
	Float:gOpen_X,
	Float:gOpen_Y,
	Float:gOpen_Z,
	bool:gOpen,
	gForGateid,
	bool:gCreated,
	gWorld
}
enum brInfo
{
	brOrg,
	Float:brPos_X,
	Float:brPos_Y,
	Float:brPos_Z,
	Float:brPos_A,
	bool:brOpen,
	brForBarrierID
}
new BarrierInfo[13][brInfo] =
{
	{TEAM_NONE, 		1640.88, -1147.39, 22.91, 0.00, false, -1},
	{TEAM_LSPD,    		1544.71, -1630.79, 12.36,-90.00, false, -1},
	{TEAM_ARMYLV, 		347.99, 1799.77, 17.37,   34.51, false, -1},
	{TEAM_RM, 			997.12, 1752.23, 9.74,   269.34, false, -1},
	{TEAM_RM, 			997.09, 1707.56, 9.74,   269.34, false, -1},
	{TEAM_MEDICLV, 		1637.15, 1829.90, 9.63,    269.13, false, -1},
	{TEAM_MEDICLV, 		1577.66, 1829.97, 9.63,    270.69, false, -1},
	{TEAM_PDLV, 		2238.18, 2450.46, 9.80,    -90.00, false, -1},
	{TEAM_RADIOLV, 		2617.45, 1169.65, 9.65,    268.97, false, -1},
	{TEAM_SFPD,			-1701.43, 687.59, 23.88, 90.00, false, -1},
	{TEAM_SFPD,			-1572.20, 658.84, 6.08, 270.00, false, -1},
	{TEAM_ARMYSF,		-1526.3906, 481.3828, 6.1797, 360.0000, false, -1},
	{TEAM_MERIALS,		1399.2773, -1778.3040, 12.5200, 90.0, false, -1}

};
new GateInfo[9][gInfo] =
{
	{TEAM_LSPD,11327, 1589.33, -1638.27, 14.86,270.09, 1596.37, -1638.27, 14.86,false,-1,false,-1},
	{TEAM_RADIO,1495, 1652.21, -1638.22, 56.15,180.00,1653.51, -1638.22, 56.15,false,-1,false,-1},
	{TEAM_LICENSERS,1495, -2043.4153, -113.4076, 1038.1169,90.0,-2043.4153, -114.9076, 1038.1169,false,-1,false,-1},
	{TEAM_RADIO,1495,  1705.7180, -1664.3540, 19.2260,0.00,1704.5780, -1664.3540, 19.2260,false,-1,false,1},
	{TEAM_RADIOLV,1495,  1705.7180, -1664.3540, 19.2260,0.00,1704.5780, -1664.3540, 19.2260,false,-1,false,2},
	{TEAM_RADIOSF,1495,  1705.7180, -1664.3540, 19.2260,0.00,1704.5780, -1664.3540, 19.2260,false,-1,false,3},
	{TEAM_ARMYLV, 8229, 1141.9399, 1362.9800, 12.2600, 0.0, 1141.9399, 1362.9800, 9.2600,false,-1,false,-1},
	{TEAM_ARMY, 971, 2719.9629, -2405.3434, 11.7385, 90.0, 2719.9629, -2405.3434, 5.7385,false,-1,false,-1},
	{TEAM_ARMY, 971, 2719.9511, -2503.9198, 11.7419, 90.0, 2719.9629, -2503.9198, 5.7385,false,-1,false,-1}
};
/***************************Двери*************************/
new object[MAX_OGRAD] ={-1,...};
new dmats[MAX_DMATS] ={-1,...};
new dguns[MAX_DGUNS] ={-1,...};
new dpatrons[MAX_DGUNS]={-1,...};
new dgunn[MAX_DGUNS]={-1,...};
new marktimer[MAX_PLAYERS];//for /find
new DayLimit[MAX_ORGS];

new ddTimer[MAX_NARKO]={-1,...};
new ddrugs[MAX_NARKO] ={-1,...};
new Text3D:ddText[MAX_NARKO];
new ddrugtime[MAX_NARKO];

new Timerak[MAX_PLAYERS];
new dguntime[MAX_DGUNS];
new Text3D:tActor[MAX_ACTORSS];
forward Float:GetVehicleAngleToPoint(vehicleid, Float:x, Float:y);
forward Raskraska(playerid);
forward checkGM(playerid);
forward reofff(playerid);
forward PlKick(playerid);
forward GateClose(gate);
forward BarrierClose(barrier);
forward MailResponse(index, response_code, const data[]);//mailsend
forward PlayerSpawn(playerid);
forward PlayerPos(playerid,Float:X,Float:Y,Float:Z);
forward OnPlayerRegister(playerid);
forward SaveAccount(playerid);
forward OnPlayerLogin(playerid);
forward J_SetPlayerArmour(playerid,Float:armour);
forward GrandTimer();
forward Fillup(playerid,carid,Float:gas);
forward CheckTazer(playerid, target);
forward EngineVehicle(playerid,vehicleid);
forward PlayerRemovePhone(playerid, code);
forward ModCar(carid);
forward PlayerFishing(playerid);
forward SetBuyGunCamera(playerid);
forward CreateGate(gateid);
forward ChangeInterior(playerid);
forward DeathPlayer(playerid);
forward ExitIntroTaxi(playerid);
forward PlayerDeathed(playerid, code);
forward TalkWithTaxist(playerid, status);
forward IntroTaxi(playerid);
forward HidePlayerHelpDraw(playerid);
forward ReloadAllAnims(playerid);
forward UnFreeze(playerid);
forward Float:PointToPoint(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2);
forward TestFunction();
forward J_ApplyAnimation(playerid, const animlib[], const animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync);
forward DestroyTempStrip(strip, carid);
forward PlayerUnStrip(playerid);
forward ClearAnims(playerid);
forward BuyTeamCar(playerid);
forward PlayerDrink(playerid);
forward ExitPhotoPlace(playerid);
forward OnPlayerSnapShot(playerid);
forward UnDamaged(playerid);
forward SetDamage(playerid, issuerid, Float:damage);
new VehicleName[212][25] = {
	"Landstalker",
	"Bravura",
	"Buffalo",
	"Linerunner",
	"Perenniel",
	"Sentinel",
	"Dumper",
	"Firetruck",
	"Trashmaster",
	"Stretch",
	"Manana",
	"Infernus",
	"Voodoo",
	"Pony",
	"Mule",
	"Cheetah",
	"Ambulance",
	"Leviathan",
	"Moonbeam",
	"Esperanto",
	"Taxi",
	"Washington",
	"Bobcat",
	"Mr Whoopee",
	"BF Injection",
	"Hunter",
	"Premier",
	"Enforcer",
	"Securicar",
	"Banshee",
	"Predator",
	"Bus",
	"Rhino",
	"Barracks",
	"Hotknife",
	"Article Trailer",
	"Previon",
	"Coach",
	"Cabbie",
	"Stallion",
	"Rumpo",
	"RC Bandit",
	"Romero",
	"Packer",
	"Monster",
	"Admiral",
	"Squallo",
	"Seasparrow",
	"Pizzaboy",
	"Tram",
	"Article Trailer 2",
	"Turismo",
	"Speeder",
	"Reefer",
	"Tropic",
	"Flatbed",
	"Yankee",
	"Caddy",
	"Solair",
	"Berkley's RC Van",
	"Skimmer",
	"PCJ-600",
	"Faggio",
	"Freeway",
	"RC Baron",
	"RC Raider",
	"Glendale",
	"Oceanic",
	"Sanchez",
	"Sparrow",
	"Patriot",
	"Quad",
	"Coastguard",
	"Dinghy",
	"Hermes",
	"Sabre",
	"Rustler",
	"ZR-350",
	"Walton",
	"Regina",
	"Comet",
	"BMX",
	"Burrito",
	"Camper",
	"Marquis",
	"Baggage",
	"Dozer",
	"Maverick",
	"SAN News Maverick",
	"Rancher",
	"FBI Rancher",
	"Virgo",
	"Greenwood",
	"Jetmax",
	"Hotring Racer",
	"Sandking",
	"Blista Compact",
	"Police Maverick",
	"Boxville",
	"Benson",
	"Mesa",
	"RC Goblin",
	"Hotring Racer",
	"Hotring Racer",
	"Bloodring Banger",
	"Rancher",
	"Super GT",
	"Elegant",
	"Journey",
	"Bike",
	"Mountain Bike",
	"Beagle",
	"Cropduster",
	"Stuntplane",
	"Tanker",
	"Roadtrain",
	"Nebula",
	"Majestic",
	"Buccaneer",
	"Shamal",
	"Hydra",
	"FCR-900",
	"NRG-500",
	"HPV1000",
	"Cement Truck",
	"Towtruck",
	"Fortune",
	"Cadrona",
	"FBI Truck",
	"Willard",
	"Forklift",
	"Tractor",
	"Combine Harvester",
	"Feltzer",
	"Remington",
	"Slamvan",
	"Blade",
	"Freight",
	"Brownstreak",
	"Vortex",
	"Vincent",
	"Bullet",
	"Clover",
	"Sadler",
	"Firetruck LA",
	"Hustler",
	"Intruder",
	"Primo",
	"Cargobob",
	"Tampa",
	"Sunrise",
	"Merit",
	"Utility Van",
	"Nevada",
	"Yosemite",
	"Windsor",
	"Monster A",
	"Monster B",
	"Uranus",
	"Jester",
	"Sultan",
	"Stratum",
	"Elegy",
	"Raindance",
	"RC Tiger",
	"Flash",
	"Tahoma",
	"Savanna",
	"Bandito",
	"Freight Flat Trailer",
	"Streak Trailer",
	"Kart",
	"Mower",
	"Dune",
	"Sweeper",
	"Broadway",
	"Tornado",
	"AT400",
	"DFT-30",
	"Huntley",
	"Stafford",
	"BF-400",
	"Newsvan",
	"Tug",
	"Petrol Trailer",
	"Emperor",
	"Wayfarer",
	"Euros",
	"Hotdog",
	"Club",
	"Freight Box Trailer",
	"Article Trailer 3",
	"Andromada",
	"Dodo",
	"RC Cam",
	"Launch",
	"Police Car (LSPD)",
	"Police Car (SFPD)",
	"Police Car (LVPD)",
	"Police Ranger",
	"Picador",
	"Police SF",
	"Alpha",
	"Phoenix",
	"Glendale Shit",
	"Sadler Shit",
	"Baggage Trailer A",
	"Baggage Trailer B",
	"Tug Stairs Trailer",
	"Boxville",
	"Farm Trailer",
	"Utility Trailer"
};
enum _temp_
{
	pArendaCar,
	pcarid,
	bool:SPECTPLAYER,
	BreakKey,
	BreakCount,
	BreakTime,
	pWW[MAX_PLAYERS]
}
new pTemp[MAX_PLAYERS][_temp_];
//-------------------------------------
new Text:Taximeter[4];
new PlayerText:TaxiDraw[MAX_PLAYERS];
new Text3D:WantedText[MAX_PLAYERS];
//-------------------------
new PlayerText:IconsMenu[MAX_PLAYERS][9];
new TheftKey[MAX_PLAYERS];
new TheftCount[MAX_PLAYERS];
new TheftTime[MAX_PLAYERS];
new Float:JobsPos[3][3] =
{
	{-87.6299,-307.8251,1.4297},
	{-142.9741,-79.5276,3.1172},
	{-377.4685,-1416.8032,25.7266}
};
enum JobsPosInfo
{
    Float:Position[2],
    JobsId
};
//пилюля
new JobsInfo[JobsPosInfo];
//-------------------news--------------
new RobKey[MAX_PLAYERS];
new RobTime[MAX_PLAYERS];
new RobCount[MAX_PLAYERS];
//new UnSpeedZone;
new ArrestID[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
//-------------------------------------
new bool:RP_Names = true;//RP ники
//-------------------------------------
new RegPass[MAX_PLAYERS][65];
new RegSex[MAX_PLAYERS];
new RegRace[MAX_PLAYERS];
new RegReferal[MAX_PLAYERS][24];
//-------------------------------------
new TeamDuty[MAX_PLAYERS];
new PlayerBuyState[MAX_PLAYERS];
new RPTest[MAX_PLAYERS];
new CarproductCount[MAX_VEHICLES];
new CarproductType[MAX_VEHICLES];

new CarMusorCount[MAX_VEHICLES];
new Text3D:MusorCarText[MAX_VEHICLES] = {NONE_3D_TEXT, ...};

//-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
new BenzinCount[MAX_VEHICLES];
new Float:BenzinCena[MAX_VEHICLES];
new Contracter[MAX_VEHICLES];
new Text3D:Benzin[MAX_VEHICLES] = {NONE_3D_TEXT, ...};
//==============================================================================
new Text3D:Product[MAX_VEHICLES] = {NONE_3D_TEXT, ...};
//
new NomerCP[2];
new TimeOfCuff[MAX_PLAYERS];
new PlayerOfCuff[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
//-------------------------------------
new PlayerText:ActionText[MAX_PLAYERS] = {PlayerText:-1, ...};
new PlayerText:ActionBand[MAX_PLAYERS] = {PlayerText:-1, ...};
new PlayerText:InfoText[MAX_PLAYERS] = {PlayerText:-1, ...};
new PlayerText:maininfo[MAX_PLAYERS][8];
/////////
new Ring[MAX_PLAYERS];
new Merrit[4];
/////////
new Text:BandDrawBG[2];
new Text:ShieldBG[2];
new Bar_CP[MAX_BARSs] = {-1, ...};
new CasinoBar;
new ScrapCP;
new MatsDel_CP[2];
new Yakydzapick;
new Eatery_CP[MAX_EATCP][2] = {-1, ...};
new FirstReferal[MAX_PLAYERS];
new FirstBL[MAX_PLAYERS];
new TazerPlayer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new ResetGunsUP[MAX_PLAYERS];
new ResetBuyGuns[MAX_PLAYERS];
new ShowJobID[MAX_PLAYERS];
new CreditMoney[MAX_PLAYERS];
new CarPound_CP[2][2] = {-1,...};
new Zek_CP[2] = {-1,...};
new RingCP[2] = {-1,...};
new MeriaGun = -1;
new Text:ActionMenu[8];
new Text:ButtonDown;
//петя
new BuyGun_CP[2] = {-1,...};
new Reklam;
new BuyGunAmmo[MAX_PLAYERS] = {-1, ...};
new BuyGuns[MAX_PLAYERS] = {-1, ...};
//////////////мафии
new BizAtack = -1;
new BizDeff = -1;
new BizAtakkill = 0;
new BizDeffkill = 0;
new BizTime = 0;
new BizWar = -1;
new PlaceWar;
new HealExitPickup[2];
new EnterBankPickup;
new ExitBankPickup;
new RecoveryTime[MAX_ORGS];
new Damaged[MAX_PLAYERS];
new VehicleState[MAX_VEHICLES];
new LoadIntro[MAX_PLAYERS];
new CarScrap[MAX_VEHICLES] = {-1,...};

new VehObjects[MAX_VEHICLES][25] = {-1,...};
//----------------COUNT------------------------------
new Iterator:OWNABLECARS<MAX_OWNABLECARS>;
new Iterator:COPCARS<MAX_VEHICLES>;
new OWNABLEHOUSES;
new OWNABLEBIZES;
new ADD_VEHICLES;
new ADD_OBJECTS;
new GANGZONES;
new OWNABLECASINO;
//----------------COUNT------------------------------
new ARENDCARS;
new ArendCar[ArendCars] = INVALID_VEHICLE_ID;
new ArendKey[MAX_PLAYERS] = INVALID_VEHICLE_ID;

new CasinoCPEn[MAX_OWNABLECASINO];
new CasinoCPEx[MAX_OWNABLECASINO];

new PAYDAY = 0;
new RESTART;
new engine,lights,alarm,doors,bonnet,boot,objective;
new Binko_CP;
new ResetShield[MAX_PLAYERS];
new SelectPost[MAX_PLAYERS];
new DListitem[MAX_PLAYERS][100];

new DBizitem[MAX_PLAYERS][22];

new HideMapZone;
//new TempTazerObject[MAX_PLAYERS] = {-1, ...};
new PddState[MAX_PLAYERS];
//new TazerReset[MAX_PLAYERS];
//new TazerFire[MAX_PLAYERS];
new ZavodPutCP[8];
new ZavodClotherCP[6];
new FuelName[4][15] =
{
	"Diesel", "A-92", "A-95", "A-98"
};
enum InfoDutyPos
{
	Float: dutyposX,
	Float: dutyposY,
	Float: dutyposZ,
	dutyposWorld
}
new Float:DutyPos[MAX_ORGS][InfoDutyPos] =
{
	{0.0, 0.0, -1000.0,-1}, //No-ne
	{1702.3654,2287.6001,1422.9221,1}, //LSPD
	{1702.3654,2287.6001,1422.9221,11}, //SFPD (LVPD)
	{1482.2937,-1664.3550,1516.2163,0}, //FBI
	{1702.3654,2287.6001,1422.9221,0}, //SWAT
	{2239.2061,46.6118,1040.8901,1}, //M4C
	{-1371.7551,515.9324,1045.9236,2}, //Meria
	{248.1274,1859.9524,14.0840,0}, //ARMY LV
	{2239.2061,46.6118,1040.8901,3}, //деревенская больница
	{-2044.2196,-122.1136,1039.2584,-1}, //Licensers
	{-7.0858,-12.3645,1231.1194,1}, //Radio
	{0.0, 0.0, 0.0,-1},
	{0.0, 0.0, 0.0,-1},
	{0.0, 0.0, 0.0,-1},
	{0.0, 0.0, 0.0,-1},
	{0.0, 0.0, 0.0,-1},
	{0.0, 0.0, 0.0,-1},
	{0.0, 0.0, 0.0,-1},
	{0.0, 0.0, 0.0,-1},
 	{0.0, 0.0, 0.0,-1},
	{2731.6279,-2417.5535,13.6280,0}, //army
	{1482.1085,650.5188,979.1730,-1},
	{2239.2061,46.6118,1040.8901,2},
	{1702.3654,2287.6001,1422.9221,12},
	{-7.0858,-12.3645,1231.1194,2}, //Radio lv
	{0.0, 0.0, 0.0,-1},
	{-7.0858,-12.3645,1231.1194,3}, //Radio SF
	{-1704.7922,280.3512,7.1975,0}//armysf
};
new TeamDutyCP[MAX_ORGS];
new Float:BuyPos[1][3] =
{
	{1294.7634,-1557.1613,2501.0859}
};
//-------------------------------
new RankName[MAX_ORGS][13][50];

new BeforeFill[MAX_VEHICLES];
new PlayerText:DeathDraw[MAX_PLAYERS] = {PlayerText:-1, ...};

new Text:CheaterList;
new StringCheaters[8][64];
new lastcheatid = INVALID_PLAYER_ID;
//--------------------------------------
new NumInc_CP[MAX_PLAYERS] = {-1, ...};
//new JobCar[MAX_PLAYERS];
new Inc_CP = -1;
enum zdInfo
{
	zdObject,
	zdPlayer,
	zdTimer
}

new Text3D:NarkoText[5];

new Text3D:FactoryText[3];
new InJob[MAX_PLAYERS];
new FireCount[MAX_PLAYERS];
new Fish_CP[50][2];
//---------------bools------------------
new Taxi_GO[MAX_PLAYERS];
new bool:Cuffed[MAX_PLAYERS];
new bool:PlayerSpawned[MAX_PLAYERS];
new bool:Controllable[MAX_PLAYERS];
new bool:Crack[MAX_PLAYERS];
new bool:TaxiON[MAX_PLAYERS];
new bool:MedikON[MAX_PLAYERS];
new bool:MehanON[MAX_PLAYERS];
new bool:PoliseON[MAX_PLAYERS];
new bool:Fishing[MAX_PLAYERS];
new ADuty[MAX_PLAYERS];
new IsPlayerLogged[MAX_PLAYERS];
//--------------------------------------
new TheifTime[MAX_PLAYERS];
new TheifMoney[MAX_PLAYERS];
new TheifCount[MAX_PLAYERS];
new TheifKey[MAX_PLAYERS];
//--------------------------------------
new NoEnterPickup[MAX_PLAYERS];
new DRotTick[MAX_PLAYERS];
new NoStrip[MAX_PLAYERS];
new ReMail[MAX_PLAYERS][50];
new ReMailCode[MAX_PLAYERS];
new SpectatePlayer[MAX_PLAYERS];
new HouseEntered[MAX_PLAYERS];
new BizEntered[MAX_PLAYERS];
new RegisterState[MAX_PLAYERS];
new Question[MAX_PLAYERS];
new ClickedPlayerID[MAX_PLAYERS];
new FullnessTick[MAX_PLAYERS];
new OldFreePlayer[MAX_PLAYERS];
new DamageWarning[MAX_PLAYERS];
new RenameTime[MAX_PLAYERS];
new PlayerDrunkLevel[MAX_PLAYERS];
new PlayerDrunkLevels[MAX_PLAYERS];
new CallTime[MAX_PLAYERS];
new bool:UsingShield[MAX_PLAYERS];
new BuyInt[MAX_PLAYERS] = {-1, ...};
new SetPass[MAX_PLAYERS][30];
new UnbanName[MAX_PLAYERS][24];
new TruckReset[MAX_PLAYERS];
new TextReset[MAX_PLAYERS];
new LawyerOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new LastTicket[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new LiveOfferID[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new LiveStation[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new TakeOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new HealOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new PlayerJailCP[MAX_PLAYERS];
new PlayerGoPost[MAX_PLAYERS];
new HealPrice[MAX_PLAYERS];
new CuffedTime[MAX_PLAYERS];
new Recuffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new RHouseOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new BizPrice[MAX_PLAYERS];
new ShowCar[MAX_PLAYERS][MAX_VEHICLES];
new ShowVeh[MAX_PLAYERS];
new Errors[MAX_PLAYERS];
new DrivingTest[MAX_PLAYERS];
new CarTest[MAX_PLAYERS] = {-1, ...};
new FarmJob[MAX_PLAYERS]= {-1, ...};
new Clother[MAX_PLAYERS] = {-1, ...};
new Buyitem[MAX_PLAYERS] = {-1, ...};

new TestASKMassive[MAX_PLAYERS][4];
new SkateObj[MAX_PLAYERS];
new Float:vRut[MAX_PLAYERS][2];
new TaxiTarif[MAX_PLAYERS];//Для таксиста
new TaxiPrice[MAX_PLAYERS];//Для пассажира
new TaxiDistance[MAX_PLAYERS];//Для пассажира
new PlayerCar[MAX_PLAYERS] = {INVALID_VEHICLE_ID, ...};
new PlayerSeat[MAX_PLAYERS] = {-1, ...};
new EnterVehicle[MAX_PLAYERS] = {INVALID_VEHICLE_ID, ...};
new Smokes[MAX_PLAYERS];
new Smoke[MAX_PLAYERS];
new SmokeTime[MAX_PLAYERS];
new OldWorld[MAX_PLAYERS];
new TransferPlayer[MAX_PLAYERS];
new GetJob[MAX_PLAYERS];
new TelNumber[MAX_PLAYERS];
new InfoHouse[MAX_PLAYERS];
new PutState[MAX_PLAYERS];
new InfoBiz[MAX_PLAYERS];
new InfoSTO[MAX_PLAYERS];
new MLeader[MAX_PLAYERS];
new OldMessage[MAX_PLAYERS][150];
new MLPlayer[MAX_PLAYERS];
new MLName[MAX_PLAYERS][24];
new SGunMats[MAX_PLAYERS];
new SGunID[MAX_PLAYERS];
new SGunOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new SGunPrice[MAX_PLAYERS];
new SGunAmmo[MAX_PLAYERS];
new OGReset[MAX_PLAYERS];
new HouseCP[MAX_HOUSES][2] = {-1, ...};
new HouseIcon[MAX_HOUSES] = {-1, ...};
new Text3D:House3DText[MAX_HOUSES] = {NONE_3D_TEXT, ...};
new BizCP[MAX_BIZ][2] = {-1, ...};
new Text3D:Biz3DText[MAX_BIZ] = {NONE_3D_TEXT, ...};
new BizPick[MAX_BIZ];
new Text3D:Casino3DText[MAX_OWNABLECASINO] = {NONE_3D_TEXT};
new Text3D:CarText[MAX_OWNABLECARS] = {NONE_3D_TEXT, ...};
new DonateBuy[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new gPlayerLogTries[MAX_PLAYERS];
new PanelPlayerID[MAX_PLAYERS];
new OldDialogID[MAX_PLAYERS];
new aSellCarID[MAX_PLAYERS];
new OwnableCar[MAX_OWNABLECARS];
new PlayerFish[MAX_PLAYERS][5];
new FishMassa[MAX_PLAYERS][5];
new PassRegSex[MAX_PLAYERS];
//---------------MAX_VEHICLES-------------------------
new AlarmTime[MAX_VEHICLES];
new VehicleSeat[MAX_VEHICLES][50];
new UnEngine[MAX_VEHICLES];
new Float:VehicleHealth[MAX_VEHICLES];
new Float:Fuel[MAX_VEHICLES];
new CarStrips[MAX_VEHICLES];
new SelectTP[MAX_PLAYERS];
new Float:VehicleMilage[MAX_VEHICLES];
//-----------------------------------------------------
enum gsInfo
{
	gsName[20],
	Float:gsPosX,
	Float:gsPosY,
	Float:gsPosZ,
	gsBizzID
}
new GoGunShop[11][gsInfo] =
{
    {"GunShop LS",1359.9208,-1283.6482,13.3461,BIZ_GS_LS},
	{"Palomino Gun",2340.3765,63.1496,26.3359,BIZ_GS_SF},
	{"Blueberry Gun",235.4267,-180.1013,1.4297,BIZ_GS_LV},
	{"LV GunShop",2530.9441,2084.2971,10.6719,LV_AMYN1},
	{"LV Pro Gun",2093.8525,2052.8147,10.8203,LV_AMYN2},
	{"FC Gun",-302.5458,827.9150,13.2947,LV_AMYN3},
	{"EQ Gun",-1510.5068,2603.7961,55.6909,LV_AMYN4},
	{"SF Guns",-2625.7246,209.2422,4.6199,115},
	{"SF Guns",-2163.4663,129.3818,35.3203,116},
	{"SF Guns",-2051.9065,553.7458,35.1719,117},
	{"Angel Guns",-2093.6995,-2464.9138,30.6250,118}

};
enum gfinfo
{
	gfName[20],
	Float:gfPos_X,
	Float:gfPos_Y,
	Float:gfPos_Z,
	gfBizzID
}
new GoFuelCP[20];
new GoGunShopCP[11];
new GoFuel[20][gfinfo] =
{
	{"Gas LS 1",1004.4177,-940.2440,42.1797,BIZ_GAS_LS_1},
	{"Gas LS 2",1944.3726,-1773.2112,13.3906,BIZ_GAS_LS_2},
	{"Gas LS 3",300.1025,-172.2511,1.3289,BIZ_GAS_LV_2},
	{"Gas LS 4",653.9818,-569.3989,16.3359,BIZ_GAS_LV_4},
	{"Gas LS 6",1378.2557,456.6682,19.8868,BIZ_GAS_LV_6},
	{"Gas LV 1",2202.4253,2473.4390,10.8203,BIZ_AZS1},
	{"Gas LV 2",1598.4116,2199.1228,10.8203,BIZ_AZS2},
	{"Gas LV 3",611.7775,1694.6161,6.9922,BIZ_AZS3},
	{"Gas LV 4",2145.7642,2748.0129,10.8203,BIZ_AZS4},
	{"Gas LV 5",-1328.3707,2677.3887,50.0625,BIZ_AZS5},
	{"Gas LV 6",-1472.3184,1864.2222,32.6328,BIZ_AZS6},
	{"Gas LV 7",2116.3933,920.1677,10.8203,BIZ_GAS_LV_5},
	{"Gas SF 1",-98.7537,-1166.8053,2.5993,21},
	{"Gas SF 2",22.4816,-2646.1042,40.4618,27},
	{"Gas SF 3",-1606.3723,-2713.6147,48.5335,22},
	{"Gas SF 4",-2249.9185,-2558.6838,31.8938,25},
	{"Gas SF 5",-1666.6174,408.5915,7.1797,26},
	{"Gas SF 6",-2022.0974,155.9591,28.8359,23},
	{"Gas SF 7",-2261.1799,-2.6144,35.1719,29},
	{"Gas SF 8",-2405.7432,974.6953,45.2969,24}

};
enum bcInfo
{
	Float:bcPos_X[20],
	Float:bcPos_Y[20],
	Float:bcPos_Z[20],
	Float:bcPos_A[20],
	bcBuyCars
}
enum chInfo
{
	Float:chEnter_X,
	Float:chEnter_Y,
	Float:chEnter_Z,
	Float:chExit_X,
	Float:chExit_Y,
	Float:chExit_Z,
	chCost,
	chLevel,
	chInt
}
enum bgInfo
{
	bgGunid,
	bgAmmo[5],
	bgGPrice,
	bgPrice
}
new BuyGunInfo[11][bgInfo] =
{
	{1, 	{1, 0, 0, 0, 0}, 			0, 		60},
	{5, 	{1, 0, 0, 0, 0}, 			0, 		120},
	{8, 	{1, 0, 0, 0, 0}, 			0, 		300},
	{46, 	{1, 0, 0, 0, 0}, 			0, 		240},
	{17, 	{1, 2, 3, 4, 5}, 			0, 		50},
	{24, 	{50, 75, 100, 125, 150}, 	900, 	100},
	{25,	{50, 75, 100, 125, 150}, 	1100, 	120},
	{29, 	{100, 150, 200, 250, 300}, 	1300, 	200},
	{30, 	{100, 150, 200, 250, 300}, 	1400, 	250},
	{31, 	{100, 150, 200, 250, 300}, 	1450, 	280},
	{33, 	{50, 100, 150, 200, 250}, 	1510, 	300}
};
new Float:CarPounds[14][4] =
{
    {1611.3163,-1140.9514,1679.1689,-1073.6880},
    {1603.515625,-1089.84375,1806.640625,-1039.0625},
	{1566.40625,-1041.015625,1755.859375,-1007.8125},
	{1751.953125,-1041.015625,1792.96875,-1021.484375},
	{1755.859375,-1021.484375,1783.203125,-1011.71875},
	{1617.1875,-1140.625,1685.546875,-1091.796875},
	{1615.234375,-1095.703125,1685.546875,-1085.9375},
	{1578.125,-1056.640625,1609.375,-1039.0625},
	{1591.796875,-1068.359375,1607.421875,-1056.640625},
	{1599.609375,-1076.171875,1607.421875,-1066.40625},
	{1825.6003,-1147.3049,1547.0156,-1006.9152},
	{2480.0544,2482.7708,2534.8032,2543.1504},
	{2399.3401,2525.1711,2479.9580,2557.8350},
	{2458.6350,2482.7695,2479.3079,2500.5684}
};
enum healinfo
{
	Float:hCP[3],
	hInt,
	hWorld,
	hName[24],
	hID
}
new HealInfo[84][healinfo] =
{
	{	{2260.2029,47.1195,1040.8862}, 2, 1, "The State", 1},
	{	{2252.9094,52.0612,1040.8862}, 2, 1, "The State", 2},
	{	{2260.1982,51.0109,1040.8862}, 2, 1, "The State", 3},
	{	{2253.0103,55.8288,1040.8862}, 2, 1, "The State", 4},
	{	{2260.3911,54.9430,1040.8862}, 2, 1, "The State", 5},
	{	{2252.7793,59.5823,1040.8862}, 2, 1, "The State", 6},
	{	{2260.1611,58.5370,1040.8862}, 2, 1, "The State", 7},
	{	{2252.7886,63.6243,1040.8862}, 2, 1, "The State", 8},
	{	{2260.4414,62.2791,1040.8862}, 2, 1, "The State", 9},
	{	{2260.2605,36.4626,1040.8862}, 2, 1, "The State", 10},
	{	{2252.9128,33.7015,1040.8862}, 2, 1, "The State", 11},
	{	{2260.1213,32.7704,1040.8862}, 2, 1, "The State", 12},
	{	{2252.8103,29.9805,1040.8862}, 2, 1, "The State", 13},
	{	{2260.2405,29.0708,1040.8862}, 2, 1, "The State", 14},
	{	{2252.8804,26.3050,1040.8862}, 2, 1, "The State", 15},
	{	{2260.1702,25.1234,1040.8862}, 2, 1, "The State", 16},
	{	{2260.2029,21.0325,1040.8862}, 2, 1, "The State", 17},
	{	{2252.6428,22.4167,1040.8862}, 2, 1, "The State", 18},
	{	{657.9229,-1662.1273,871.2830}, 2, 1, "The State", 19},
	{	{657.9229,-1658.8335,871.2830}, 2, 1, "The State", 20},
	{	{657.9253,-1655.5253,871.2830}, 2, 1, "The State", 21},
	{	{657.9244,-1652.1862,871.2830}, 2, 1, "The State", 22},
	{	{657.9229,-1648.8647,871.2830}, 2, 1, "The State", 23},
	{	{657.9232,-1645.7933,871.2830}, 2, 1, "The State", 24},
	{	{665.2261,-1645.7203,871.2830}, 2, 1, "The State", 25},
	{	{665.2272,-1648.9058,871.2830}, 2, 1, "The State", 26},
	{	{665.2266,-1652.2651,871.2830}, 2, 1, "The State", 27},
	{	{665.2271,-1655.5231,871.2830}, 2, 1, "The State", 28},
	{	{665.2271,-1658.8093,871.2830}, 2, 1, "The State", 29},
	{	{665.2266,-1662.1066,871.2830}, 2, 1, "The State", 30},
	{	{2260.2029,47.1195,1040.8862}, 2, 2, "The State", 31},
	{	{2252.9094,52.0612,1040.8862}, 2, 2, "The State", 32},
	{	{2260.1982,51.0109,1040.8862}, 2, 2, "The State", 33},
	{	{2253.0103,55.8288,1040.8862}, 2, 2, "The State", 34},
	{	{2260.3911,54.9430,1040.8862}, 2, 2, "The State", 35},
	{	{2252.7793,59.5823,1040.8862}, 2, 2, "The State", 36},
	{	{2260.1611,58.5370,1040.8862}, 2, 2, "The State", 37},
	{	{2252.7886,63.6243,1040.8862}, 2, 2, "The State", 38},
	{	{2260.4414,62.2791,1040.8862}, 2, 2, "The State", 39},
	{	{2260.2605,36.4626,1040.8862}, 2, 2, "The State", 40},
	{	{2252.9128,33.7015,1040.8862}, 2, 2, "The State", 41},
	{	{2260.1213,32.7704,1040.8862}, 2, 2, "The State", 42},
	{	{2252.8103,29.9805,1040.8862}, 2, 2, "The State", 43},
	{	{2260.2405,29.0708,1040.8862}, 2, 2, "The State", 44},
	{	{2252.8804,26.3050,1040.8862}, 2, 2, "The State", 45},
	{	{2260.1702,25.1234,1040.8862}, 2, 2, "The State", 46},
	{	{2260.2029,21.0325,1040.8862}, 2, 2, "The State", 47},
	{	{2252.6428,22.4167,1040.8862}, 2, 2, "The State", 48},
	{	{560.9267,1473.2104,1900.7980}, 2, 1, "The State", 49},
	{	{562.8075,1473.2095,1900.7980}, 2, 1, "The State", 50},
	{	{564.6690,1473.2115,1900.7980}, 2, 1, "The State", 51},
	{	{566.6547,1473.2280,1900.7980}, 2, 1, "The State", 52},
	{	{568.5155,1473.1996,1900.7980}, 2, 1, "The State", 53},
	{	{576.2724,1473.0447,1900.7980}, 2, 1, "The State", 54},
	{	{578.1570,1473.0494,1900.7980}, 2, 1, "The State", 55},
	{	{580.0428,1473.0444,1900.7980}, 2, 1, "The State", 56},
	{	{581.9430,1473.0494,1900.7980}, 2, 1, "The State", 57},
	{	{560.8146,1464.4045,1900.7980}, 2, 1, "The State", 58},
	{	{562.7275,1464.4045,1900.7980}, 2, 1, "The State", 59},
	{	{564.5573,1464.3945,1900.7980}, 2, 1, "The State", 60},
	{	{566.5419,1464.3943,1900.7980}, 2, 1, "The State", 61},
	{	{568.3260,1464.4027,1900.7980}, 2, 1, "The State", 62},
	{	{576.1238,1464.5591,1900.7980}, 2, 1, "The State", 63},
	{	{577.9701,1464.5537,1900.7980}, 2, 1, "The State", 64},
	{	{579.9421,1464.5508,1900.7980}, 2, 1, "The State", 65},
	{	{581.9159,1464.5604,1900.7980}, 2, 1, "The State", 66},
	{	{2260.2029,47.1195,1040.8862}, 2, 3, "The State", 67},
	{	{2252.9094,52.0612,1040.8862}, 2, 3, "The State", 68},
	{	{2260.1982,51.0109,1040.8862}, 2, 3, "The State", 69},
	{	{2253.0103,55.8288,1040.8862}, 2, 3, "The State", 70},
	{	{2260.3911,54.9430,1040.8862}, 2, 3, "The State", 71},
	{	{2252.7793,59.5823,1040.8862}, 2, 3, "The State", 72},
	{	{2260.1611,58.5370,1040.8862}, 2, 3, "The State", 73},
	{	{2252.7886,63.6243,1040.8862}, 2, 3, "The State", 74},
	{	{2260.4414,62.2791,1040.8862}, 2, 3, "The State", 75},
	{	{2260.2605,36.4626,1040.8862}, 2, 3, "The State", 76},
	{	{2252.9128,33.7015,1040.8862}, 2, 3, "The State", 77},
	{	{2260.1213,32.7704,1040.8862}, 2, 3, "The State", 78},
	{	{2252.8103,29.9805,1040.8862}, 2, 3, "The State", 79},
	{	{2260.2405,29.0708,1040.8862}, 2, 3, "The State", 80},
	{	{2252.8804,26.3050,1040.8862}, 2, 3, "The State", 81},
	{	{2260.1702,25.1234,1040.8862}, 2, 3, "The State", 82},
	{	{2260.2029,21.0325,1040.8862}, 2, 3, "The State", 83},
	{	{2252.6428,22.4167,1040.8862}, 2, 3, "The State", 84}
};
new Text3D:HealText[84] = {NONE_3D_TEXT, ...};
new PlayerBed[MAX_PLAYERS];
new bool:PlayerLie[MAX_PLAYERS];
//
new gunmute[MAX_PLAYERS];
forward _SetGun(playerid, weaponid, ammo);
public _SetGun(playerid, weaponid, ammo)
{
	new slot = GetWeaponSlot(weaponid);
	if(slot == 0xFFFF) return false;
	gunmute[playerid] = gettime()+3;

    WeaponInfo[playerid][weaponid] = true;
    AmmoSlot[playerid][slot] += ammo;
    AmmoInfo[playerid][weaponid] = AmmoSlot[playerid][slot];

	PlayerInfo[playerid][pAmmos][slot] += ammo;
	PlayerInfo[playerid][pGuns][slot] = weaponid;

	GivePlayerWeapon(playerid, weaponid, ammo);
	if(PlayerInfo[playerid][pAmmos][slot]==0) PlayerInfo[playerid][pGuns][slot]=0;
	return true;
}
forward _ResetGun(playerid);
public _ResetGun(playerid)
{
	gunmute[playerid] = gettime()+3;
	ResetPlayerWeapons(playerid);
	for(new x; x < 13; x ++)
	{
		PlayerInfo[playerid][pAmmos][x] = 0;
		PlayerInfo[playerid][pGuns][x] = 0;
		AmmoSlot[playerid][x] = 0;
	}

	for(new i = 0; i < 47; i++)
	{
		WeaponInfo[playerid][i] = false;
		AmmoInfo[playerid][i] = 0;
	}

	PlayerInfo[playerid][pLastGun]=0;
	PlayerInfo[playerid][pLastAmmo]= 0;
	return true;
}
enum tpInfo
{
	tpName[50],
	Float:tpEnterPos_X,
	Float:tpEnterPos_Y,
	Float:tpEnterPos_Z,
	tpEnterWorld,
	tpEnterInt,
	Float:tpExitPos_X,
	Float:tpExitPos_Y,
	Float:tpExitPos_Z,
	Float:tpExitPos_A,
	tpExitInt,
	tpExitWorld
}
new TeleportInfo[83][tpInfo] =
{
	{"San Andreas | Miner depo",-1902.1906,-1677.3469,21.7508, 0, 0, 867.2949,-179.8734,1034.4962,270.0000, 13, 13},
	{"Outside depo",863.9222,-179.8551,1034.4962, 13, 13, -1899.3438,-1677.1616,21.7480,289.8064, 0, 0},
	{"City Hall of Los-Santos",1481.055,-1772.040,18.796, 0, 0, -1386.7487,541.1885,1042.1315,270.0000, 2, 2},
	{"Exit to street",-1389.4541,541.0113,1042.1315, 2, 2, 1480.7877,-1768.5625,18.7929,0.0000, 0, 0},
	{"Police department of Los-Santos",1554.866943, -1675.680297, 16.195312, 0, 0, 1721.6072,2284.4954,1422.9221,180.0000, 1, 1}, // Police LS
	{"Exit to street",1721.4983,2287.0696,1422.9221, 1, 1, 1552.464599,-1675.447143,16.195312, 90.0, 0, 0}, // Police LS
	{"Police Department of Los-Santos",1568.6267,-1689.9706,6.2188, 0, 0, 1735.7902,2281.3044,1422.9221,90.0000, 1, 1}, // Police SF
	{"Exit to garage",1738.8645,2281.3062,1422.9221, 1, 1, 1568.0382,-1693.3805,5.8906,180.0000, 0, 0}, // Police SF
	{"Police department of Red County",627.3923,-571.7623,17.9145, 0, 0, 1721.6072,2284.4954,1422.9221,180.0000, 6, 11}, // Police SF
	{"Exit to street",1721.4983,2287.0696,1422.9221, 11, 6, 630.7498,-571.5781,16.3359,268.5526, 0, 0}, // Police SF
	{"Police department of Red County",611.0331,-583.4961,18.2109, 0, 0, 1735.7902,2281.3044,1422.9221,90.0000, 6, 11}, // Police SF
	{"Exit to garage",1738.8645,2281.3062,1422.9221, 11, 6, 611.8444,-586.5242,17.2266,269.7200, 0, 0}, // Police SF
	{"Federal bureau of investigations",287.4745,-1611.9064,32.9373, 0, 0, 1438.8804,-1658.2208,1518.1765,270.0000, 3, 0},
	{"Exit to street",1435.9246,-1654.5375,1518.1765, 0, 3, 287.9350,-1614.5675,33.0662,181.1810, 0, 0},
	{"Police department of San-Fierro",-1605.5493,710.2738,13.8672, 0, 0, 1721.6072,2284.4954,1422.9221,180.0000, 10, 0},
	{"Exit to street",1721.4983,2287.0696,1422.9221, 0, 10, -1606.1509,713.7501,13.2903,359.7803, 0, 0},
	{"Police Department of San-Fierro",-1594.2090,716.2310,-4.9063, 0, 0, 1735.7902,2281.3044,1422.9221,90.0000, 10, 0}, // Police SF
	{"Exit to garage",1738.8645,2281.3062,1422.9221, 0, 10, -1590.0851,716.0548,-5.2422,270.0000, 0, 0}, // Police SF
	{"Police Department of Las-Venturas",2287.0254,2432.3618,10.8203, 0, 0, 1721.6072,2284.4954,1422.9221,180.0000, 6, 12}, // Police SF
	{"Exit to street",1721.4983,2287.0696,1422.9221, 12, 6, 2287.0684,2428.8718,10.8203,179.2759, 0, 0}, // Police SF
	{"Police Department of Las-Venturas",2297.1174,2451.4746,10.8203, 0, 0, 1735.7902,2281.3044,1422.9221,90.0000, 6, 12}, // Police SF
	{"Exit to garage",1738.8645,2281.3062,1422.9221, 12, 6, 2293.9517,2451.7891,10.8203,90.0000, 0, 0}, // Police SF
	{"Enter to roof",2297.1160,2468.7705,10.8203, 0, 0, 2290.2505,2460.7644,38.6875,284.8691, 0, 0}, // Police SF
	{"Exit to garage",2287.9663,2458.1406,38.6875, 0, 0, 2294.0698,2468.4187,10.8203,88.4307, 0, 0}, // Police SF
	{"Radio center of Los-Santos",1653.9441,-1654.7587,22.5156, 0, 0, -5.9847,-20.9862,1231.0688,270.0000, 1, 1},//word, int int, word
	{"Los-Santos",-10.7317,-20.8065,1231.0688, 1, 1, 1653.5554,-1658.9841,22.5156,181.2989, 0, 0},//wordint,  intword
	{"Licensing center",-2051.6670,-117.9154,35.3199, 0, 0, -2037.6764, -113.9040, 1035.6496,180.0000, 1, 5},
	{"San-Fierro",-2037.7273, -111.6121, 1035.4098, 5, 1, -2051.2932,-113.0329,35.3199,0.0000, 0, 0},
	{"Parking",-2037.3486, -124.2236, 1035.3740, 5, 1,-2054.9045,-168.7541,35.3199,180.0000, 0, 0},
	{"Licensing center",-2055.6560,-164.6662,35.3199, 0, 0, -2037.6764, -121.9040, 1035.6496,0.0000, 1, 5},
	{"Los-Santos",627.302978, -11.985424, 1000.921875, 1, 1, 1084.715942,-1226.635253,15.820312, 270.961944, 0, 0},
 	{"San-Fierro",964.776794, -53.210323, 1001.117187, 1, 3, -1552.170410,1165.444458,7.187500, 89.121200, 0, 0},
	{"Varrios Los Aztecas Gang",2524.1243,-1998.7643,13.7826, 0, 0, 1164.0997, 278.6479, 1003.6977, 0.0000, 7, 4},
	{"Exit to street",1164.2402, 276.6999, 1003.4497, 4, 7, 2521.5767,-2001.4885,13.5469,137.3131, 0, 0},
	{"Los-Santos Vagos Gang",2795.966552, -1619.309692, 10.921875, 0, 0, 1164.0997, 278.6479, 1003.6977, 0.0000, 7, 2},
	{"Exit to street",1164.2402, 276.6999, 1003.4497, 2, 7, 2793.590820,-1618.637817,10.921875, 79.540718, 0, 0},
	{"Grove Street Gang",2495.311035, -1690.930175, 14.765625, 0, 0, 1164.0997, 278.6479, 1003.6977, 0.0000, 7, 1},
	{"Exit to street",1164.2402, 276.6999, 1003.4497, 1, 7, 2495.2034,-1689.1195,14.2319, 0.9635, 0, 0},
	{"The Rifa Gang",2185.7822, -1815.2261, 13.5469, 0, 0, 1164.0997, 278.6479, 1003.6977, 0.0000, 7, 5},
	{"Exit to street",1164.2402, 276.6999, 1003.4497, 5, 7, 2185.8145,-1810.8423, 13.5469, 1.5911, 0, 0},
	{"East Side Ballas Gang",2000.0611, -1113.6805, 26.9717, 0, 0, 1164.0997, 278.6479, 1003.6977, 0.0000, 7, 3},
	{"Exit to street",1164.2402, 276.6999, 1003.4497, 3, 7, 2000.1027, -1115.7868, 27.1860, 180.0, 0, 0},
	{"La Cosa Nostra",1456.1313,2773.3252,10.8203, 0, 0, 2437.4377,1349.8983,2082.2400,90.0000, 5, 1},
	{"Las-Venturas",2441.2190,1350.4357,2082.2400, 1, 5, 1460.8861,2773.1716,10.8203,269.9729, 0, 0},
	{"Yakuza",2634.7432,1824.2310,11.0161, 0, 0, 2437.4377,1349.8983,2082.2400,90.0000, 5, 0},
	{"Las-Venturas",2441.2190,1350.4357,2082.2400, 0, 5, 2630.3728,1824.2715,11.0234,90.2341, 0, 0},
	{"Русская Мафия",937.0781,1731.0668,8.8516, 0, 0, 2437.4377,1349.8983,2082.2400,90.0000, 3, 2},
	{"Las-Venturas",2441.2190,1350.4357,2082.2400, 2, 3, 940.1907,1731.1997,8.8516,271.1088, 0, 0},
	{"Warlocks MC", 681.5402,-473.3478,16.5363, 0, 0, 1848.1852,2573.4753,771.6005,270.0000, 3, 1},
	{"Exit to street", 1845.8567,2575.4570,771.5846, 1, 3, 681.6158,-476.9035,16.3359,178.3351, 0, 0},
	{"Sport Club of Los-Santos",2229.631835, -1721.709350, 13.565642, 0, 0, 773.9093,-76.9094,1000.6545,2.5748, 7, 0},
	{"Los-Santos",773.8964,-78.8464,1000.6628, 0, 7, 2228.418701,-1722.766357,13.554397, 137.274353, 0, 0},
	{"Los-Santos",964.776794, -53.210323, 1001.117187, 2, 3, 2194.1086,1677.1443,12.3672, 42.038417, 0, 0},
	{"Hospital of Los-Santos",1172.0773,-1325.3361,15.4074, 0, 0, 2280.0964,41.0889,1040.7622,90.0000, 2, 1},
	{"Hospital of Los-Santos",1172.0767,-1321.5111,15.3990, 0, 0, 2280.0417,44.1062,1040.7622,90.0000, 2, 1},
	{"Hospital of Las-Venturas",1609.5172,1815.2407,10.8203, 0, 0, 2280.0964,41.0889,1040.7622,90.0000, 3, 2},
	{"Hospital of Las-Venturas",1605.2539,1815.2415,10.8203, 0, 0, 2280.0417,44.1062,1040.7622,90.0000, 3, 2},
	{"Hospital of San-Fierro",-2661.7510,640.1641,14.4531, 0, 0, 2280.0964,41.0889,1040.7622,90.0000, 3, 3},
	{"Hospital of San-Fierro",-2658.3682,640.1651,14.4531, 0, 0, 2280.0417,44.1062,1040.7622,90.0000, 3, 3},
	{"Drugs house",2166.124267, -1671.345947, 15.073492, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 1},
	{"The Ghetto",318.586029, 1114.793212, 1083.882812, 1, 5, 2167.414550,-1672.636352,15.080650, 223.037063, 0, 0},
	{"Wine factory",-86.3057, -299.6985, 2.7646, 0, 0, 1188.7203,1302.5245,1051.7373,270.0000, 2, 10},
	{"Outside factory",1184.5627,1302.2571,1051.7373, 10, 2, -86.3985, -301.6363, 2.7646, 170.0, 0, 0},
	{"Church", 1720.3025,-1741.1660,13.5469,10,10,1274.6763,-1564.8978,3278.3521,89.3754,0,0},
	{"Unity Station", 1277.6923,-1564.9399,3278.3616,0,0,1720.2825,-1738.9661,13.5469,359.0755,0,0},
	{"San-Fierro", -122.5312,-59.7999,1003.6160,0,0,-2168.4531,252.0057,35.3295,272.3488,0,0},
	{"Sport Club of Las-Venturas",2092.6499,2493.1968,14.8390, 0, 0, 773.9093,-76.9094,1000.6545,2.5748, 7, 1},
	{"Las-Venturas",773.8964,-78.8464,1000.6628, 1, 7, 2095.5288,2493.2524,14.8390,267.9022, 0, 0},
	{"Radio center of Las-Venturas",2637.8018,1185.2871,10.8203, 0, 0, -5.9847,-20.9862,1231.0688,270.0000, 1, 2},//word, int int, word
	{"Las-Venturas",-10.7317,-20.8065,1231.0688, 2, 1, 2637.8726,1182.4669,10.8203,179.5183, 0, 0},//wordint,  intword
	{"Exit to street",1124.6691,-2590.2566,1221.5060, -1, 0, 1958.5825,949.7746,10.8203,180.0000, 0, 0},
	{"Radio center of San-Fierro",-1941.0482,456.0038,35.1719, 0, 0, -5.9847,-20.9862,1231.0688,270.0000, 1, 3},//word, int int, word
	{"San-Fierro",-10.7317,-20.8065,1231.0688, 3, 1, -1941.4008,459.7771,35.1719,1.2511, 0, 0},//wordint,  intword
	{"Drugs house",1814.4722,-1995.8588,13.5544, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 2},
	{"The Ghetto",318.586029, 1114.793212, 1083.882812, 2, 5, 1811.2611,-1996.1890,13.5513,87.3189, 0, 0},
	{"Drugs house",2286.6912,-2012.8440,13.5447, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 3},
	{"The Ghetto",318.586029, 1114.793212, 1083.882812, 3, 5, 2285.3196,-2015.5061,13.5434,131.0462, 0, 0},
	{"Drugs house",2333.4478,-1922.6251,12.2991, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 4},
	{"The Ghetto",318.586029, 1114.793212, 1083.882812, 4, 5, 2333.2817,-1919.0001,12.9586,359.0316, 0, 0},
	{"Drugs house",2175.9934,-1503.9364,23.9520, 0, 0, 318.662506,1116.091186,1083.882812, 1.946820, 5, 5},
	{"The Ghetto",318.586029, 1114.793212, 1083.882812, 5, 5, 2176.1218,-1501.6234,23.9621,1.0594, 0, 0},
	{"Информационный центр Los-Santos",1779.7155,-1650.3457,13.4809, 0, 0, 1774.7885,-1646.1267,20.1919,180.0000, 0, 1},
	{"Выход на улицу",1774.7396,-1643.0262,20.1919, 1, 0, 1784.3279,-1649.6113,13.3090,270.0000, 0, 0}
};
new TeleportPickup[sizeof(TeleportInfo)] = {-1, ...};
new Float:GHSPos[27][3] =
{
	{0.000000, 0.000000, 0.000000},
	{244.182006, 304.898986, 999.148010},
	{267.100006, 305.000000, 999.148010},
	{235.257995, 1187.099975, 1080.260009},
	{300.210998, 312.851013, 999.148010},
	{226.897003, 1114.280029, 1081.000000},
	{744.351989, 1436.760009, 1102.699951},
	{225.671997, 1022.030029, 1084.020019},
	{-42.601600, 1405.920043, 1084.430053},
	{260.757995, 1237.770019, 1084.260009},
	{23.968000, 1340.520019, 1084.380004},
	{0.000000, 0.000000, 0.000000},
	{446.709991, 506.898010, 1001.419982},
	{0.000000, 0.000000, 0.000000},
	{0.000000, 0.000000, 0.000000},
	{386.919006, 1471.699951, 1080.189941},
	{82.98, 1323.15, 1083.13},
	{-68.6603,1351.2046,1080.2109},
	{226.4221,1239.9434,1082.1406},
	{328.0897,1477.6736,1084.4375},
	{446.9292,1397.0680,1084.3047},
	{318.6248,1114.7825,1083.8828},
	{2365.2981,-1135.3936,1050.8750},
	{2308.7720,-1212.9192,1049.0234},
	{2237.4131,-1081.6366,1049.0234},
	{2196.5149,-1204.5540,1049.0234},
	{2270.0549,-1210.6090,1047.5625}
};

enum iInfo
{
	Float:iCam_X,
	Float:iCam_Y,
	Float:iCam_Z,
	Float:iCamAt_X,
	Float:iCamAt_Y,
	Float:iCamAt_Z,
	iInterior,
	iLevel,
	iCost
}
new Float:IntInfo[24][iInfo] =
{
	{	0.0000,		0.0000,		0.0000,		0.0000,		0.0000,		0.0000,		0,	0,	0		},
	{	249.6246,	306.6749,	1001.1484,	243.5571,	300.3347,	999.1484,	1,	1,	40000	},
	{	266.9934,	303.4084,	999.1484,	273.9032,	306.8496,	999.1484,	2,	1,	40000	},
	{	237.3471,	1186.9100,	1080.2578,	231.0561,	1204.1001,	1080.2578,	3,	1,	390000	},
	{	311.0790,	311.6574,	1003.3047,	300.4887,	301.3558,	1003.5391,	4,	1,	120000	},
	{	226.4762,	1114.2119,	1080.9939,	241.9857,	1114.0405,	1080.9922,	5,	1,	550000	},
	{	742.7902,	1436.4205,	1102.7031,	762.0859,	1442.8284,	1102.7031,	6,	1,	140000	},
	{	224.1152,	1021.5891,	1084.0173,	243.2221,	1039.6519,	1084.0137,	7,	1,	620000	},
	{	-52.5170,	1412.7664,	1084.4297,	-45.2184,	1403.6163,	1084.4370,	8,	1,	80000	},
	{	259.1778,	1237.3501,	1084.2578,	265.0774,	1250.0245,	1084.2578,	9,	1,	80000	},
	{	18.3519,	1340.2017,	1084.3750,	32.0237,	1345.5005,	1088.8750,	10,	1,	240000	},
	{	443.1728,	506.6413,	1001.4195,	451.4167,	515.1450,	1001.4195,	12,	1,	60000	},
	{	387.1001,	1472.7684,	1080.1875,	383.9466,	1470.7700,	1080.1949,	15,	1,	60000	},
    {	85.73,	1322.62,	1085.04,	85.59,	1323.23,	1085.07,9,1,800000	},
    {	-71.72,	1366.68,	1082.73,	-70.58,	1366.15,	1082.32,6,1,60000	},
    {	217.61,	1238.98,	1084.30,	218.12,	1239.33,	1084.06,2,1,90000	},
    {	330.23,	1477.15,	1085.04,	329.94,	1478.36,	1084.91,15,1,110000	},
    {	445.27,	1397.00,	1086.54,	445.69,	1398.18,	1086.25,2,1,400000	},
    {	316.37,	1116.34,	1085.26,	317.39,	1117.06,	1085.17,5,1,100000	},
    {	2366.97,	-1126.16,	1052.11,	2366.66,	-1126.70,	1052.00,8,1,380000	},
    {	2306.26,	-1206.41,	1051.03,	2306.81,	-1206.70,	1050.84,6,1,190000	},
    {	2236.43,	-1080.86,	1050.34,	2236.60,	-1080.26,	1050.27,2,1,240000	},
    {	2197.01,	-1199.81,	1050.94,	2196.50,	-1200.17,	1050.78,6,1,380000	},
    {	2263.93,	-1206.06,	1051.39,	2263.40,	-1206.37,	1051.25,10,1,380000	}
};

new Float:PrisonPos[5][3] =
{
 	{610.9518,-586.3849,17.2266},
	{-1590.2208,716.0150,-5.2422},
	{1568.9985,-1694.6547,5.8906},
	{2286.9282,2427.9839,10.8203},
	{-1591.2236,716.0541,-5.2422}
};
new Test_CP[47];
enum arInfo
{
	aRentID,
	aID,//ID
	Float:aPos_X,
	Float:aPos_Y,
	Float:aPos_Z,
	Float:aPos_A,
	aColor_1,//Цвет 1
	aColor_2,//Цвет 2,
	aBizid
};
new ArendInfo[187][arInfo] =
{
	{INVALID_PLAYER_ID, 551, 2650.2236, 1074.6016, 10.4665, 360.0000,162,1,BIZ_RENT_LV},//hospital
    {INVALID_PLAYER_ID, 551, 2632.1157, 1074.6016, 10.4665, 360.0000,162,1,BIZ_RENT_LV},//hospital
    {INVALID_PLAYER_ID, 551, 2648.7200, 1084.3699, 10.5495, 90.0000,162,1,BIZ_RENT_LV},//hospital
    {INVALID_PLAYER_ID, 551, 2639.3718, 1074.6016, 10.4665, 360.0000,162,1,BIZ_RENT_LV},//hospital
    {INVALID_PLAYER_ID, 551, 1593.6954, 1832.7589, 10.2700, 180.5820,162,1,BIZ_RENT_LV},//hospital
    {INVALID_PLAYER_ID, 551, 1595.8210, 1832.8043, 10.3100, 180.5820,162,1,BIZ_RENT_LV},//hospital
    {INVALID_PLAYER_ID, 551, 1597.9672, 1832.8949, 10.3100, 180.5820,162,1,BIZ_RENT_LV},//hospital
    {INVALID_PLAYER_ID, 551, 18600.0338, 1832.6292, 10.2700, 180.5820,162,1,BIZ_RENT_LV},//hospital
    {INVALID_PLAYER_ID, 551, 1602.2183, 1832.6133, 10.2700, 180.5820,162,1,BIZ_RENT_LV},//hospital
    {INVALID_PLAYER_ID, 551, 1604.3276, 1832.6333, 10.2700, 180.5820,162,1,BIZ_RENT_LV},//hospital
    {INVALID_PLAYER_ID, 551, 1606.4049, 1832.9114, 10.3100, 180.5820,162,1,BIZ_RENT_LV},//hospital
	{INVALID_PLAYER_ID, 551, 1227.5966, -1422.0499, 13.3279, 0.0000,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 1224.0966, -1422.0499, 13.3279, 0.0000,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 1220.5966, -1422.0499, 13.3279, 0.0000,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 1217.0966, -1422.0499, 13.3279, 0.0000,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 1213.5966, -1422.0499, 13.3279, 0.0000,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 1231.6044, -1413.1257, 13.3279, 90.0000,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 1509.6296, -1280.8462, 14.0600, 137.3464,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 1510.4818, -1281.5426, 14.0600, 137.3464,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 1511.3479, -1282.1930, 14.0600, 137.3464,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 1512.3319, -1282.9500, 14.0600, 137.3464,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 2503.0103, -1753.9370, 13.3101, 358.8433,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 2499.5103, -1753.9370, 13.3101, 358.8433,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 2496.0103, -1753.9370, 13.3101, 358.8433,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 2492.5103, -1753.9370, 13.3101, 358.8433,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 551, 2777.5156, -2105.9504, 11.2718, 40.2467,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 2771.6145, -2111.0305, 11.2718, 40.2467,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 2765.5601, -2116.0679, 11.2718, 40.2467,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 2759.6167, -2120.8315, 11.2718, 40.2467,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 551, 2752.5469, -2111.5220, 12.0515, 269.8227,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 492, 667.6203, -543.1777, 16.2203, 89.3185,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 492, 667.6231, -546.2809, 16.2203, 89.3185,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 492, 667.5521, -549.3002, 16.2203, 89.3185,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 492, 653.1042, -586.4561, 16.2208, 0.0000,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 492, 656.1042, -586.4561, 16.2208, 0.0000,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 492, 659.1042, -586.4561, 16.2208, 0.0000,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 492, 656.5692, -592.1067, 16.2208, 90.0000,162,1,BIZ_RENT_LS},//hospital
    {INVALID_PLAYER_ID, 492, 1280.7815, -1292.0701, 13.1210, 90.0676,162,1,BIZ_AERO_LS},//hospital
	{INVALID_PLAYER_ID, 492, 1280.8137, -1295.7914, 13.1210, 90.0676,162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 492, 1280.8157, -1299.6920, 13.1210, 90.0676,162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 492, 1281.2010, -1303.5446, 13.1210, 90.0676,162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 492, 1280.8484, -1307.4536, 13.1210, 90.0676,162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 492, 1280.9872, -1310.9534, 13.1210, 90.0676,162,1,BIZ_AERO_LS},
 	{INVALID_PLAYER_ID, 550, 1392.1981, 385.5167, 19.4100, 246.3684,162,1,BIZ_RENT_SF},//villeage
	{INVALID_PLAYER_ID, 550, 1390.7390, 382.2040, 19.4100, 246.3684,162,1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 550, 1389.3024, 378.8274, 19.4100, 246.3684,162,1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 550, 1387.8916, 375.5937, 19.4100, 246.3684,162,1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 550, 1386.3928, 372.3194, 19.4100, 246.3684,162,1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 550, 1393.5696, 388.9565, 19.4100, 246.3684,162,1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 550, 1394.9910, 392.3134, 19.4100, 246.3684,162,1,BIZ_RENT_SF},
	{INVALID_PLAYER_ID, 567, 2475.6345, -1526.8542, 23.6052, 359.0000,162,1,BIZ_RENT_LV}, //getto
	{INVALID_PLAYER_ID, 567, 2478.8823, -1526.9244, 23.6052, 359.0000,162,1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 567, 2481.9150, -1526.8684, 23.6052, 359.0000,162,1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 567, 2484.2478, -1517.7936, 23.6052, 181.9089,162,1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 567, 2487.3140, -1517.7598, 23.6052, 181.9089,162,1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 567, 2490.3770, -1517.8289, 23.6052, 181.9089,162,1,BIZ_RENT_LV},
	{INVALID_PLAYER_ID, 567,552.2256,-1263.0308,16.8377,215.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,549.2261,-1265.1127,16.8615,215.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,546.2819,-1267.1350,16.8603,216.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,543.2506,-1269.3328,16.8853,212.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,540.3386,-1271.8612,16.9312,218.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,537.4234,-1274.1729,16.8892,218.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,534.7526,-1276.3138,16.8918,219.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,531.9340,-1278.4873,16.8892,218.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,565.7926,-1283.7555,17.0098,103.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,564.8121,-1279.5139,17.0102,103.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,563.9153,-1275.2931,17.0073,102.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,563.3939,-1271.1617,16.9935,103.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 567,562.5081,-1267.2034,16.9659,103.0,162,1,BIZ_RENT_LS},
	{INVALID_PLAYER_ID, 436, 1875.0159, -2270.8831, 14.4766, -90.0000, 162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 436, 1875.0159, -2286.0461, 14.4766, -90.0000, 162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 436, 1875.0159, -2302.0259, 14.4766, -90.0000, 162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 436, 1859.6726, -2292.7288, 14.4766, -90.0000, 162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 436, 1859.6726, -2277.2041, 14.4766, -90.0000, 162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 436, 1884.0103, -2354.0991, 14.4766, -90.0000, 162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 436, 1884.0103, -2366.1475, 14.4766, -90.0000, 162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 436, 1884.0103, -2378.2358, 14.4766, -90.0000, 162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 436, 1870.8276, -2372.3872, 14.4766, -90.0000, 162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 436, 1870.8276, -2359.9214, 14.4766, -90.0000, 162,1,BIZ_AERO_LS},
	{INVALID_PLAYER_ID, 566, 2291.2539, 508.6360, 0.6427, 180.0000, 162,1,BIZ_RENTLV1},
	{INVALID_PLAYER_ID, 566, 2302.7437, 508.6360, 0.6427, 180.0000, 162,1,BIZ_RENTLV1},
	{INVALID_PLAYER_ID, 566, 2314.6931, 508.6360, 0.6427, 180.0000, 162,1,BIZ_RENTLV1},
	{INVALID_PLAYER_ID, 566, 2326.7314, 508.6360, 0.6427, 180.0000, 162,1,BIZ_RENTLV1},
	{INVALID_PLAYER_ID, 566, 2369.4595, 507.4760, 0.6427, 180.0000, 162,1,BIZ_RENTLV1},
	{INVALID_PLAYER_ID, 566, 2360.0398, 507.4760, 0.6427, 180.0000, 162,1,BIZ_RENTLV1},
	{INVALID_PLAYER_ID, 566, 2350.1580, 507.4760, 0.6427, 180.0000, 162,1,BIZ_RENTLV1},
	{INVALID_PLAYER_ID, 566, 132.8696, -1814.7062, 0.5467, 0.0000, 162,1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 566, 120.6497, -1814.7834, 0.5467, 0.0000, 162,1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 566, 129.2275, -1885.0004, 0.5487, 90.0000, 162,1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 566, 129.4274, -1872.4661, 0.5487, 90.0000, 162,1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 566, 130.4901, -1836.3348, 0.5487, 90.0000, 162,1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 566, 130.5704, -1829.3671, 0.5487, 90.0000, 162,1,BIZ_RENTLV2},
	{INVALID_PLAYER_ID, 566, 2148.7693, 1398.1857, 10.3921, 180.0000, 162,1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 566, 2145.5740, 1398.1857, 10.3921, 180.0000, 162,1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 566, 2139.1221, 1398.1857, 10.3921, 180.0000, 162,1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 566, 2135.9407, 1398.1857, 10.3921, 180.0000, 162,1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 566, 2126.3281, 1398.1857, 10.3921, 180.0000, 162,1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 566, 2119.9055, 1398.1857, 10.3921, 180.0000, 162,1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 566, 2116.7261, 1398.1857, 10.3921, 180.0000, 162,1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 566, 2116.8022, 1409.0896, 10.5221, 360.0000, 162,1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 566, 2110.3604, 1409.0831, 10.5221, 360.0000, 162,1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 566, 2107.2341, 1409.0896, 10.5221, 360.0000,162,1,BIZ_RENTLV3},
	{INVALID_PLAYER_ID, 566, 2216.1982, 2034.6406, 10.3637, 270.0000, 162,1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 566, 2216.1982, 2038.1283, 10.3637, 270.0000, 162,1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 566, 2216.1982, 2041.7065, 10.3637, 270.0000, 162,1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 566, 2216.1982, 2045.4866, 10.3637, 270.0000, 162,1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 566, 2246.2927, 2046.3232, 10.4237, 270.0000, 162,1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 566, 2246.2927, 2042.3247, 10.4237, 270.0000, 162,1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 566, 2246.2927, 2038.5048, 10.4237, 270.0000, 162,1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 555, 2235.0664, 2038.6821, 10.4637, 90.0000, 162,1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 555, 2235.0664, 2042.5248, 10.4637, 90.0000, 162,1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 555, 2235.0664, 2050.1907, 10.4637, 90.0000, 162,1,BIZ_RENTLV4},
	{INVALID_PLAYER_ID, 555, 1731.6844, 1885.4795, 10.3846, 90.5101, 162,1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 555, 1731.6948, 1890.8372, 10.3846, 90.5101, 162,1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 555, 1731.6909, 1893.6300, 10.3846, 90.5101, 162,1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 555, 1731.2958, 1899.5796, 10.3846, 90.5101, 162,1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 555, 1731.2533, 1902.0092, 10.3846, 90.5101, 162,1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 555, 1731.2714, 1905.6315, 10.3846, 90.5101, 162,1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 555, 1741.6327, 1885.7103, 10.7886, 270.0000, 162,1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 555, 1741.6398, 1888.6401, 10.7886, 270.0000, 162,1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 555, 1741.6577, 1895.1151, 10.7886, 270.0000, 162,1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 555, 1741.7596, 1897.8267, 10.5856, 270.0000, 162,1,BIZ_RENTLV5},
	{INVALID_PLAYER_ID, 555, 2080.5874, 2468.3430, 10.7266, 0.0190, 162,1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 555, 2084.7898, 2468.3430, 10.7266, 0.0190, 162,1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 555, 2088.9299, 2468.3430, 10.7266, 0.0190, 162,1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 555, 2082.2666, 2480.2153, 10.7266, 180.0000, 162,1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 555, 2078.1626, 2480.2153, 10.7266, 180.0000, 162,1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 555, 2073.9431, 2480.2153, 10.7266, 180.0000, 162,1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 555, 2069.8408, 2480.2153, 10.7266, 180.0000, 162,1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 555, 2057.1904, 2480.2153, 10.7266, 180.0000, 162,1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 555, 2053.1138, 2480.2007, 10.7266, 180.0000, 162,1,BIZ_RENTLV6},
	{INVALID_PLAYER_ID, 555, -30.8412, 1166.7690, 19.3222, 360.0000, 162,1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 555, -34.2425, 1166.7690, 19.3222, 360.0000, 162,1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 555, -37.8182, 1166.7690, 19.3222, 360.0000, 162,1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 555, -44.6972, 1166.7690, 19.3222, 360.0000, 162,1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 555, -48.3838, 1166.7690, 19.3222, 360.0000, 162,1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 589, 1838.0161, -1870.9659, 13.1197, 360.0000,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 589, 1834.8230, -1871.1737, 13.1197, 360.0000,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 589, 1844.3335, -1871.2560, 13.1197, 360.0000,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 589, 2161.2803, -1192.2465, 23.5259, 90.0000,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 589, 2161.4214, -1187.3746, 23.5259, 90.0000,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 589, 2161.5625, -1182.4960, 23.5259, 90.0000,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 589, 2161.6877, -1177.5209, 23.5259, 90.0000,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 589, 196.5415, -155.3585, 1.2498, 180.0000,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 589, 199.4011, -155.4082, 1.3298, 180.0000,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 589, 218.6169, -173.2578, 1.2898, 90.0000,162,1,BIZ_RENT_LS},//hospital
	{INVALID_PLAYER_ID, 589, 2760.3621, 1432.2369, 10.2147, 270.0000,162,1,BIZ_RENTLV7},//hospital
	{INVALID_PLAYER_ID, 589, 2760.4126, 1429.2205, 10.2147, 270.0000,162,1,BIZ_RENTLV7},//hospital
	{INVALID_PLAYER_ID, 589, 2760.6042, 1426.3209, 10.2147, 270.0000,162,1,BIZ_RENTLV7},
	{INVALID_PLAYER_ID, 589, -2086.5442, -101.7517, 35.1502, 0.0000,162,1,BIZ_SFRENT4},
	{INVALID_PLAYER_ID, 589, -2083.0442, -101.7517, 35.1502, 0.0000,162,1,BIZ_SFRENT4},
	{INVALID_PLAYER_ID, 589, -2079.5442, -101.7517, 35.1502, 0.0000,162,1,BIZ_SFRENT4},
	{INVALID_PLAYER_ID, 589, -2076.0442, -101.7517, 35.1502, 0.0000,162,1,BIZ_SFRENT4},
	{INVALID_PLAYER_ID, 589, -2682.2881, 575.3193, 14.5052, 180.0000,162,1,BIZ_SFRENT4},
	{INVALID_PLAYER_ID, 589, -2685.7881, 575.3193, 14.5052, 180.0000,162,1,BIZ_SFRENT4},
	{INVALID_PLAYER_ID, 589, -2689.2881, 575.3193, 14.5052, 180.0000,162,1,BIZ_SFRENT4},
	{INVALID_PLAYER_ID, 589, -2692.7881, 575.3193, 14.5052, 180.0000,162,1,BIZ_SFRENT4},
	{INVALID_PLAYER_ID,400, -1989.9163, 275.5569, 35.1662, 267.0000, 162,1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -1990.0594, 272.2518, 35.1662, 267.0000, 162,1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -1990.3448, 269.0416, 35.1662, 267.0000, 162,1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -1990.7004, 263.9048, 34.8462, 267.0000, 162,1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -1990.9237, 261.2656, 34.8462, 267.0000, 162,1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -1991.3481, 255.2821, 34.8462, 264.0474, 162,1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -1991.6816, 252.6617, 34.8462, 264.0474, 162,1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -1992.7944, 248.2620, 34.8462, 264.0474, 162,1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,400, -1993.0652, 245.8304, 34.8462, 264.0474, 162,1,BIZ_SFRENT1},
    {INVALID_PLAYER_ID,466, -2585.8699, 335.4568, 4.9638, 90.0000, 162,1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,466, -2585.8457, 331.9096, 4.9638, 90.0000, 162,1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,466, -2585.9548, 328.1809, 4.9638, 90.0000, 162,1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,466, -2585.9983, 324.8647, 4.9638, 90.0000, 162,1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,466, -2585.9209, 321.3739, 4.9638, 90.0000, 162,1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,466, -2585.9912, 317.6576, 4.9638, 90.0000, 162,1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,466, -2586.1077, 314.0794, 4.9638, 90.0000, 162,1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,466, -2586.0518, 310.8368, 4.9638, 90.0000, 162,1,BIZ_SFRENT2},
    {INVALID_PLAYER_ID,466, -2493.7048, 795.6027, 35.2550, 270.0000, 162,1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,466, -2493.6475, 792.7779, 35.2550, 270.0000, 162,1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,466, -2493.6985, 790.0810, 35.1350, 270.0000, 162,1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,466, -2493.7954, 787.2208, 35.1350, 270.0000, 162,1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,466, -2493.5164, 784.3647, 34.7750, 270.0000, 162,1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,466, -2493.6309, 781.4155, 34.7750, 270.0000, 162,1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,466, -2459.8179, 779.5052, 34.7350, 90.0000, 162,1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,466, -2459.4915, 786.4857, 34.7350, 90.0000,162,1,BIZ_SFRENT3},
    {INVALID_PLAYER_ID,436, -1764.7040, 956.2208, 24.4421, 270.0000, 162,1,BIZ_SFRENT4},
    {INVALID_PLAYER_ID,436, -1752.3950, 956.3077, 24.4421, 270.0000, 162,1,BIZ_SFRENT4},
    {INVALID_PLAYER_ID,436, -1760.8821, 947.5552, 24.4421, 270.0000, 162,1,BIZ_SFRENT4},
    {INVALID_PLAYER_ID,436, -1750.7251, 947.5801, 24.4421, 270.0000, 162,1,BIZ_SFRENT4},
    {INVALID_PLAYER_ID,436, -1740.4351, 955.3890, 24.4421, 258.6977, 162,1,BIZ_SFRENT4}
};
new Float:FishZone[15][3] =
{
	{349.8644,-2052.0598,7.8359},
	{349.9288,-2059.7078,7.8359},
	{349.9258,-2064.8701,7.8359},
	{349.9335,-2067.3757,7.8359},
	{349.9633,-2072.5100,7.8359},
	{354.5819,-2088.6687,7.8359},
	{362.2255,-2088.7966,7.8359},
	{367.2188,-2088.7983,7.8359},
	{369.7726,-2088.7871,7.8359},
	{375.0870,-2088.7959,7.8359},
	{383.4317,-2088.7952,7.8359},
	{391.2613,-2088.7966,7.8359},
	{396.0679,-2088.7976,7.8359},
	{398.6076,-2088.7954,7.8359},
	{403.9636,-2088.7976,7.8359}
};
new FishName[14][22] =
{
	"None",
	"Корешка",
	"Навага",
	"Сельдь",
	"Карп",
	"Окунь",
	"Тунец",
	"Камбала",
	"Кета",
	"Горбуша",
	"Красноперка",
	"Судак",
	"Щука",
	"Лещ"
};
new FishCost[14] =
{
	0, //None
	150, //Корешка
	50, //Навага
	150, //Сельдь
	200, //Карп
	200, //Окунь
	300, //Тунец
	80, //Камбала
	90, //Кета
	80, //Горбуша
	150, //Красноперка
	150, //Судак
	150, //Щука
	90  //Лещ
};
enum psInfo
{
	psSeria,
	psNumber,
	psSex,
	psDate[13],
	psDateBirth[13],
	psCity,
}
new PassInfo[MAX_PLAYERS][psInfo];
enum mcInfo
{
	mcState,
	mcDate[13],
	mcGiver[24]
}
new MedCardInfo[MAX_PLAYERS][mcInfo];
new JailCP[5];
new MinerDownCP;
new HouseNalog[MAX_PLAYERS] = {-1,...};
new HouseNalogState2[MAX_PLAYERS] = {0,...};
new MinerCP[40];
new channelfarm[MAX_PLAYERS];
new BankCP[2];
new IncCP[INC_CPs][2];
new NumberColors[15][24] =
{
	"{9C5353}",
	"{AA3333}",
	"{7396FB}",
	"{7396FB}",
	"{A52A2A}",
	"{43CD80}",
	"{33CCFF}",
	"{43CD80}",
	"{FFFF00}",
	"{B8CEF6}",
	"{6053F3}",
	"{BFC0C2}",
	"{C2A2DA}",
	"{10F441}",
	"{400080}"
};

new HouseRooms[27] = { 0, 1, 1, 4, 1, 5, 2, 4, 1, 1, 2, 0, 1, 0, 0, 2, 4, 2,3,3,5,2,2,1,2,5,3};
new TeamColors[28]=
{
	0xEFEFF710, //None
    0x0087E010, //LSPD
    0x587CD610, //RCPD
    0x69545410, //FBI
    0x0087E010, //SFPD
    0xFF9ED510, //Medic LS
    0x32477D10, //Government
    0xA37B4D10, //ARMY LV
    0xFF9ED510, //Medic SF
    0xFFCBA310, //Licensers
    0x9DC4B610, //Radio LS
    0x298A4399, //Groove Street
    0xFFFF7599, //LS Vagos
    0xBA00A499, //Ballas
    0x38C2B299, //El Coronos
    0x9696FF99, //SF Rifa
    0xBFBFBFFF, //Russian Mafia
    0xFF5757FF, //Yakuza Mafia
    0x82CFFFFF, //La Cosa Nostra
    0xFF835CFF, //Bikers
	0xA37B4D10, //army LS
	0xA6FFAA10, //bank
	0xFF9ED510, //Medic LV
	0x0087E010, //LVPD
	0x9DC4B610, //Radio LV
	0x7F646499, //Deathrow MC
	0x9DC4B610, //Radio SF
	0xA37B4D10 //ARMY SF
};
new WeaponNames[48][40] =
{
	"Unarmed (Fist)", // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Pistols"}, // 22
	{"Desert Eagle (Silencer)"}, // 23
	{"Desert Eagle"}, // 24
	{"Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Auto Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};
enum dInfo
{
    dDialog,
	dQuestion[500],
	dAnswers[300],
	dSuccesQwe
}
new QueInfo[4][dInfo] =
{
	{2,"Максимальная скорость в городе:",		"40 Км/ч\n60 Км/ч\n80 Км/ч\n100 Км/ч",1},
	{2,"Максимальная скорость вне города:		","100 Км/ч\n120 Км/ч\n150 Км/ч\nБез ограничений",1},
	{2,"Разрешена ли парковка на тротуаре?",	"Всегда да\nЕсли админ разрешит\nТолько в экстренных ситуациях\nВсегда нет",2},
	{2,"Что нужно делать при тумане?",		 	"Снизить скорость и включить фары\nЕхать как можно быстрее\nВыйти из авто и идти пешком\nЕхать и материться",0}
};
new OrgSalary[MAX_ORGS][10];
new DonateText[16][100] =
{
 	"{C9EAFF}Покупка игровой валюты\t{D94141}1 COIN = $3000",
	"{7396FB}[1] {FFFFFF}Статус GG START\t{C9EAFF}150 DP / 30 дней",
	"{7396FB}[2] {FFFFFF}Статус GG ADVANCE\t{C9EAFF}200 DP / 30 дней",
	"{7396FB}[3] {FFFFFF}Статус GG PRO\t{C9EAFF}250 DP / 30 дней",
	"{7396FB}[4] {FFFFFF}Статус GG\t{C9EAFF}300 DP / 30 дней",
	"{7396FB}[5] {FFFFFF}Статус GG+\t{C9EAFF}500 DP / Навсегда",
	"{7396FB}[6] {FFFFFF}Снять 1 предупреждение\t{C9EAFF}200 DP",
	"{7396FB}[7] {FFFFFF}Сменить никнейм\t{C9EAFF}20 DP",
	"{7396FB}[8] {FFFFFF}+1 к законопослушности\t{C9EAFF}3 DP",
	"{7396FB}[9] {FFFFFF}Смена пола\t{C9EAFF}150 DP",
	"{7396FB}[10] {FFFFFF}Смена расы\t{C9EAFF}50 DP",
	"{7396FB}[11] {FFFFFF}Рецепт от врача\t{C9EAFF}2 DP",
	"{7396FB}[12] {FFFFFF}Скейтборд\t{C9EAFF}500 DP",
	"{7396FB}[13] {FFFFFF}Случайный аксессуар {C9EAFF}(Гитара)\t{C9EAFF}1000 DP",
	"{7396FB}[14] {FFFFFF}Случайный аксессуар {C9EAFF}(Кейс для денег)\t{C9EAFF}600 DP",
	"{7396FB}[15] {FFFFFF}Случайный скин для оружия\t{C9EAFF}1000 DP"
};
new MOrgSkins[][] =
{
 {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},//None
 {71,266,284,267,265,282,311,17,295,280,0},//Police LS
 {71,266,284,267,265,282,288,283,280,0,0,0},//Police rcpd
 {286,163,165,166,164,240,0,0,0,0,0,0},//FBI
 {71,266,284,267,265,282,311,17,295,280,0,0},//Police SF
 {274,276,275,70,0,0,0,0,0,0,0,0},//M4C
 {164,163,187,57,147,0,0,0,0,0,0,0},//Meria LS
 {287,179,253,61,255,0,0,0,0,0,0,0},//Army лв
 {274,275,70,0,0,0,0,0,0,0,0,0},//M
 {59,240,0,0,0,0,0,0,0,0,0,0},//Licensers
 {188,250,261,0,0,0,0,0,0,0,0,0}, //Radio
 {105,106,107,269,271,270,0,0,0,0,0,0,0,0},//Groove Street
 {108,109,110,0,0,0,0,0,0,0,0,0,0,0},//LS Vagos
 {103,102,104,0,0,0,0,0,0,0,0,0,0,0},//Ballas
 {114,116,115,292,0,0,0,0,0,0,0,0,0},//El'Coronos
 {175,174,173,273,0,0,0,0,0,0,0,0,0,0},//SF Rifa
 {112,111,46,125,0,0,0,0,0,0,0,0,0,0},//Русская Мафия
 {122,123,186,120,0,0,0,0,0,0,0,0,0,0},//Yakuza
 {124,223,113,0,0,0,0,0,0,0,0,0,0,0},//LCN Male
 {181,242,241,248,247,110,100,0,0,0,0,0,0,0},//Bikers
 {287,179,253,61,255,0,0,0,0,0,0,0},//Army
 {164,171,163,166,153,118,228,227,0,0,0,0},//BANK
 {274,275,70,0,0,0,0,0,0,0,0,0},//MEDIC LV
 {71,266,284,267,265,282,311,17,295,280,0,0},//Police LV
 {188,250,261,0,0,0,0,0,0,0,0,0}, //Radio lv
 {21,28,293,297,0,0,0,0,0,0,0,0}, //Wolfs
 {188,250,261,0,0,0,0,0,0,0,0,0}, //Radio
 {287,179,253,61,255,0,0,0,0,0,0,0}//Army sf
};
new GOrgSkins[][] =
{
 {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},//None
 {76,306,307,309,192,0,0,0,0,0,0,0,0,0},//Police LS
 {76,306,307,309,192,0,0,0,0,0,0,0,0,0},//Police LV
 {141,192,0,0,0,0,0,0,0,0,0,0,0,0},//F.B.I
 {76,306,307,309,192,0,0,0,0,0,0,0,0,0},//Police SF
 {219,308,150,0,0,0,0,0,0,0,0,0,0,0},//M4C
 {150,0,0,0,0,0,0,0,0,0,0,0,0,0},//Meria LS
 {191,0,0,0,0,0,0,0,0,0,0,0,0,0},//Army
 {219,308,0,0,0,0,0,0,0,0,0,0,0,0},//M4C SF
 {150,11,172,0,0,0,0,0,0,0,0,0,0,0},//Licensers
 {211,0,0,0,0,0,0,0,0,0,0,0,0,0}, //Radio
 {65,207,298,0,0,0,0,0,0,0,0,0,0,0},//Groove Street
 {190,0,0,0,0,0,0,0,0,0,0,0,0,0},//LS Vagos
 {195,0,0,0,0,0,0,0,0,0,0,0,0,0},//Ballas
 {41,193,0,0,0,0,0,0,0,0,0,0,0,0},//El'Coronos
 {226,0,0,0,0,0,0,0,0,0,0,0,0,0},//SF Rifa
 {214,233,0,0,0,0,0,0,0,0,0,0,0,0},//Русская Мафия Female
 {169,0,0,0,0,0,0,0,0,0,0,0,0,0},//Yakuza
 {91,0,0,0,0,0,0,0,0,0,0,0,0,0},//LCN Female
 {233,0,0,0,0,0,0,0,0,0,0,0,0,0},//Bikers
 {191,0,0,0,0,0,0,0,0,0,0,0,0,0},//Army
 {141,0,0,0,0,0,0,0,0,0,0,0,0,0},//BANK
 {219,308,0,0,0,0,0,0,0,0,0,0,0,0},//M4C LV
 {76,306,307,309,192,0,0,0,0,0,0,0,0,0},    //Police LV
 {211,0,0,0,0,0,0,0,0,0,0,0,0,0}, //Radio lv
 {56,0,0,0,0,0,0,0,0,0,0,0,0,0}, //wolfs
 {211,0,0,0,0,0,0,0,0,0,0,0,0,0}, //Radio lv
 {191,0,0,0,0,0,0,0,0,0,0,0,0,0}
};

new ItemsId[][] =
{
	{ 19421,19422,19423,19424,1}, //Наушники
	{ 19069,19068,19067,19554,18953,18954,1},//Шапки
	{ 18968,18967,18969,1},//Панамки
	{ 18955,18956,18957,18959,18926,18927,18928,18929,18930,18931,18932,18933,1},//Кепки
	{ 19104,19105,19106,19107,19108,19109,18977,18978,18979,18645,1},//Каски
	{ 18925,18922,18923,18924,18921,1},//Береты
	{ 19519,19274,1},//Парики
	{ 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033,1},//Очки
	{ 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,1 }, //Банданы
	{ 18947,18948,18949,18950,18951,1 }, //Шляпы
	{ 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053,1 }, //Часы
	{ 3026,371,19559,19515,1 },//портфели
	{ 18970, 18973, 18972, 18971,19137,19528,1 },//Шляпы
	{ 18910, 18909, 18908, 18907, 18906,1 },// Банданы на голову
	{ 11704,19472,19037,19036,19038, 1}//маски
};
new ItemsCount[15][20];
new ItemsCost[][] =
{
	{ 13000,13000,13000,13000,1}, //Наушники
	{ 12500,12500,14000,16000,13000,13000,1},//Шапки
	{ 11500,11500,11500,1},//Панамки
	{ 11000,11000,11000,12000,12000,11500,14000,14000,13000,12500,12500,14000,1},//Кепки
	{ 12500,12500,13000,13000,13000,13000,25000,25000,25000,25000,1},//Каски
	{ 12000,12200,12200,12500,13000,1},//Береты
	{ 13000,13000,1},//Парики
	{ 1500,12000,1500,1700,11200,11800,12800,12800,12800,13000,13000,13000,13000,13000,12000,12100,12100,14000,1},//Очки
	{ 12000,11000,11000,11700,11700,11700,11300,11000,11000,11700,1 }, //Банданы
	{ 12100,12100,12100,12100,12100,1 }, //Шляпы
	{ 140000,130000,145000,150000,160000,14000,14000,14000,15000,15500,15000,15200,15400,1 }, //Часы
	{11000,1800,11200,20000,1},//портфели
	{13400,13200,13500,13300,20000,23000,1},//шляпы
	{12000,12000,12000,12000,12000,1},//Банданы
	{100000,25000,40000,40000,40000}//маски
};

new MSkins[][] =
{
	{1,78,135,137,2,3,50,29,37,44,58,68,72,167,73,96,97,101,119,153,184,206,235,236,20,242,252,258,98,289,290,291,294,299},
	{14,79,134,136,15,4,5,19,21,22,143,67,24,25,28,36,83,84,128,156,182,144,183,220,221,222,241,18,262,180,293,292,297,296}
};
new GSkins[][] =
{
	{91,90, 93,150,138,216,226,56,55,225,233},
	{9,11,12,40,76,190,215,192,298,211,214}
};
new MSkinCost[] =
{
 	2000,2000,2000,2000,2000,4000,2000,4000,4000,4000,
	4000,6000,6000,7000,7000,7000,10000,
	13000,14000,20000,20000,20000,20000,21000,
	50000,75000,76000,77000,150000,250000,100000,
	100000,450000,500000,
	2000,2000,2000,2000,2000,4000,4000,4000,4000,4000,6000,6000,6000,
	6000,7000,7000,25000,25000,15000,15000,
	15000,25000,25000,20000,50000,60000,61000,80000,
	20000,25000,150000,150000,200000,450000
};
new GSkinCost[] =
{
 	2000,2000,5000,7000,10000,10000,
	10000,10000,20000,100000,200000,
	2000,2000,2000,5000,7000,
	25000,50000,70000,100000,350000,500000
};
new MBomzSkins[][] =
{
    {78,135,137,200,213,230},
	{79,136,134,35,4,5}
};
new GBomzSkins[][] =
{
	{41,77,226},
	{13,245,214}
};
enum fillinfo
{
	Float:fPos_X,
	Float:fPos_Y,
	Float:fPos_Z,
	fBizzID
}
new Text3D:FuelText[23] = { NONE_3D_TEXT, ... }; //Изменить при увеличивании заправок!!!
new FuelInfo[31][fillinfo] =
{
    {1007.7967,-939.0165,42.1797,BIZ_GAS_LS_1},
	{1000.0021,-939.7214,42.1797,BIZ_GAS_LS_1},
	{1943.9103,-1778.4739,13.3906,BIZ_GAS_LS_2},
	{1944.1837,-1774.2662,13.3906,BIZ_GAS_LS_2},
	{1944.1002,-1771.2139,13.3900,BIZ_GAS_LS_2},
	{1944.1849,-1767.2201,13.3828,BIZ_GAS_LS_2},
	{296.1086,-171.5746,1.5781,BIZ_GAS_LV_2},
	{296.0072,-181.3552,1.5781,BIZ_GAS_LV_2},
	{300.9220,-181.4067,1.5781,BIZ_GAS_LV_2},
	{300.3612,-171.8585,1.5781,BIZ_GAS_LV_2},
	{653.0966,-559.7371,16.3359,BIZ_GAS_LV_4},
	{653.5595,-570.3958,16.3359,BIZ_GAS_LV_4},
	{2116.3933,920.1677,10.8203,BIZ_GAS_LV_5},
	{1379.0016,459.1470,19.9564,BIZ_GAS_LV_6},
	{1383.4531,456.9103,19.9467,BIZ_GAS_LV_6},
	{1385.5155,461.5921,20.1510,BIZ_GAS_LV_6},
	{1380.5353,463.0790,20.1233,BIZ_GAS_LV_6},
	{2205.3462,2476.8647,10.4015,BIZ_AZS1},
	{1594.2661,2202.1384,10.4015,BIZ_AZS2},
	{609.9623,1700.6389,6.5774,BIZ_AZS3},
	{2147.2593,2750.6055,10.4014,BIZ_AZS4},
	{-1329.8168,2672.0408,49.6437,BIZ_AZS5},
	{-1470.7079,1863.8987,32.6328,BIZ_AZS6},
	{-98.7537,-1166.8053,2.5993,21},
	{22.4816,-2646.1042,40.4618,27},
	{-1606.3723,-2713.6147,48.5335,22},
	{-2249.9185,-2558.6838,31.8938,25},
	{-1666.6174,408.5915,7.1797,26},
	{-2022.0974,155.9591,28.8359,23},
	{-2261.1799,-2.6144,35.1719,29},
	{-2405.7432,974.6953,45.2969,24}

};
enum oInfo
{
	oID,
	oName[32],
	oLeader[24],
	oName_def[32],
	oBank,
	Max_Rang,
	oOb4ak
}
new OrgInfo[MAX_ORGS][oInfo];
new Dorm_CP[MAX_ORGS][2] = {-1, ...};
new Text3D:DormText[MAX_ORGS] = {NONE_3D_TEXT, ...};
new Float:DormPos[27][3] =
{
	{0.0,0.0,-100.0}, //None
	{0.0,0.0,-100.0}, //LSPD
	{0.0,0.0,-100.0}, //LVPD
	{0.0,0.0,-100.0}, //CIA
	{0.0,0.0,-100.0}, //SWAT
	{0.0,0.0,-100.0}, //Medik
	{0.0,0.0,-100.0}, //MeriaLS
	{0.0,0.0,-100.0}, //MeriaSF
	{0.0,0.0,-100.0}, //MeriaLV
	{0.0,0.0,-100.0}, //Licensers
	{0.0,0.0,-100.0}, //Radio
	{1162.4673, 293.3484, 1003.6995}, //Groove St.
	{1162.4673, 293.3484, 1003.6995}, //LS Vagos
	{1162.4673, 293.3484, 1003.6995}, //Ballas
	{1162.4673, 293.3484, 1003.6995}, //Coronos
	{1162.4673, 293.3484, 1003.6995}, //Rifa
	{2414.8037,1339.0713,2078.7622}, //RM
	{2414.8037,1339.0713,2078.7622}, //Yakuza
	{2414.8037,1339.0713,2078.7622}, //LCN
	{1865.0568,2572.0503,771.2443}, //Bikers
	{0.0,0.0,-100.0}, //army
	{0.0,0.0,-100.0}, //BANK
	{0.0,0.0,-100.0}, //BANK
	{0.0,0.0,-100.0}, //BANK
	{0.0,0.0,-100.0}, //BANK
	{1162.4673, 293.3484, 1003.6995}, //wolfs
	{0.0,0.0,-100.0} //sf
};
new RankDefault[MAX_ORGS][10][50];
/******************CAPTURE************/
enum gzInfo
{
    gzID,
	gzFracID,
	Float:gzX[2],
	Float:gzY[2],
	gzArea
};
new GZInfo[250][gzInfo];
new GangZone[250];
new CaptureDef[2] = {-1, -1};
new CaptureAtac[2] = {-1, -1};
new CaptureDefKill[2] = {0, 0};
new CaptureAtacKill[2] = {0, 0};
new CaptureTime[2];
new CaptureZone[2] = {-1, -1};
new Text3D:CaptureText[2];
//////////////////////////////////
enum pHacksOFF
{
	SPEED_HACK,
	MONEY_HACK,
	VEH_ROOT_HACK,
	HEALTH_HACK,
	ARMOUR_HACK,
	CAR_HEALTH_HACK
}
new AntiCheatOFF[MAX_PLAYERS][pHacksOFF];
new Float:Bankomats[53][4] =
{
	{1491.64, -1279.95, 14.27,90.00},
	{1641.49, -1172.26, 23.59, 270.00},
	{2250.82, -1667.82, 15.13,255.48},
	{461.87, -1512.79, 30.63,1.38},
	{2820.09, -1468.37, 15.97, 90.00},
	{-107.03, -305.86, 1.13, 180.00},
	{-1823.97, 1284.36, 16.03,110.70},
	{1779.7464, -1653.9509, 13.1933,180.00},
	{1918.69, -1766.31, 13.25,-90.00},
	{1364.10, -1751.19, 13.25, 0.00},
	{1225.59, -1811.40, 16.25,90.00},
	{1147.24, -1773.07, 16.25,-90.00},
	{1232.28, -1415.86, 13.11,-90.00},
	{1367.62, -1290.17, 13.11,0.00},
	{753.93, -1384.86, 13.37,89.32},
	{1650.38, -1655.55, 22.19,90.50},
	{1949.18, -1986.50, 13.43,180.73},
	{2423.85, -1906.82, 13.22,359.22},
	{2247.3,-1792.4492,13.0,180.0},
	{2322.3,-1790.6986,13.0,180.0},
	{669.08, -577.52, 16.18,89.33},
	{ 2733.04, -2458.37, 13.41,179.86},
	{ -68.99, 1209.25, 19.61,90.00},
	{ 652.04, 1705.81, 6.99,41.29},
	{ 1154.41, 1363.19, 10.63,270.00},
	{ 1626.66, 1814.01, 10.53,270.00},
	{ 2018.83, 1005.11, 10.53,180.00},
	{ 2239.50, 1282.36, 10.63,360.00},
	{ 2197.74, 1395.31, 11.02,90.00},
	{ 2093.95, 1450.54, 10.48, 134.65},
	{ 2185.11, 1660.57, 10.76,285.21},
	{ 2257.25, 1804.71, 10.63,359.10},
	{ 2332.84, 2171.95, 10.60,180.00},
	{ 2619.40, 2345.90, 10.52,111.19},
	{ 2889.23, 2459.36, 10.89,134.97},
	{ 2597.39, 1086.47, 10.65,180.00},
	{ 2283.26, 2432.83, 10.62,90.00},
	{ 2479.92, 2520.86, 10.61,180.00},
	{ 2098.86, 2484.50, 10.90,89.78},
	{1304.125000, -1559.427001, 2500.988037, 0.0},
	{127.77, 1910.33, 18.55, 0.00},
	{-2674.95, 635.06, 14.30,90.0},
	{-2276.68, 535.11, 34.98,180.0},
	{-2186.82, 330.27, 35.09,90.0},
	{-2241.62, 83.38, 35.26,360.0},
	{-2034.73, -60.15, 35.11,90.0},
	{-2020.87, 128.47, 28.31,180.0},
	{-2017.89, 450.44, 35.05,180.0},
	{-1624.12, 716.50, 14.5,270.0},
	{-1712.51, 1349.73, 6.88,47.0},
	{-2765.62, 372.16, 6.00,180.0},
	{2852.11572, 1286.01514, 11.16770, -90.0},
	{-2629.31, 1407.91, 6.85,159.0}
};
enum lInfo
{
	lTime,
	lPause
}
new OnlineInfo[MAX_PLAYERS][lInfo];
enum cInfo
{
    cID,
    cModel,
    Float:cSell[4],
	Float:cPos[4],
	cColor_1,
	cColor_2,
	cOwner[24],
	cShtrafer,
	cNumber[30],
	cKeyer[24],
	cLock,
	cCost,
	cNeon,
	cShtraf,
	cAlarmON,
	cKeyIN,
	Float:cMilage,
	Float:cHealth,
	cOnNumber[10],
	cRegister[24],
	cOnRegister[24],
	cNumberColor,
	cClass,
	cVirt
};
new Float:ChetInfo[20];


enum griba
{
	Float:gribPos[3],
	gribCreat
}
new Float:GribInfo[91][griba] =
{
    {{702.8815,-705.6253,18.1862},-1},
    {{629.6369,-626.4828,16.8087},-1},
    {{552.2899,-710.6613,15.6666},-1},
    {{549.5466,-726.0712,16.4740},-1},
    {{498.2195,-679.3785,19.3385 },-1},
    {{435.9091,-699.4714,24.1253 },-1},
    {{410.0149,-693.8445,25.3369 },-1},
    {{423.6373,-632.5778,31.2596 },-1},
    {{383.9173,-598.8234,38.6380 },-1},
    {{365.3120,-605.5251,37.1760 },-1},
    {{389.1755,-564.6368,42.2504 },-1},
    {{396.1581,-548.8250,41.7694 },-1},
    {{411.8608,-449.7965,29.2956 },-1},
    {{424.7657,-430.9502,28.3068 },-1},
    {{441.9207,-381.7615,31.4900 },-1},
    {{439.1675,-350.8515,32.7176 },-1},
    {{271.2307,-263.2632,1.5781 },-1},
    {{108.2987,-136.0934,1.5781 },-1},
    {{175.8603,49.5331,2.3979 },-1},
    {{493.5621,97.1763,27.7191 },-1},
    {{547.1754,173.4039,27.1073 },-1},
    {{708.5907,307.0195,20.2344 },-1},
    {{743.8032,331.7983,20.3124 },-1},
    {{942.9208,409.0231,20.2344 },-1},
    {{1233.2169,536.8552,20.2344 },-1},
    {{1330.6167,494.6686,20.2184 },-1},
    {{1491.0624,324.2256,18.8417 },-1},
    {{1485.3533,273.8969,18.9174 },-1},
    {{1429.8097,164.6635,21.9831 },-1},
    {{1265.4169,-133.5778,39.7847 },-1},
    {{-372.7117,-89.7796,46.0523 },-1},
    {{-462.4359,-204.0353,77.9991 },-1},
    {{-554.9720,-221.0948,76.3361 },-1},
    {{921.3636,-479.7340,44.0374 },-1},
    {{890.4687,-494.8910,36.9549 },-1},
    {{878.1802,-483.0581,35.4741 },-1},
    {{1983.4618,89.3856,29.4775 },-1},
    {{2210.0349,146.4971,26.1758 },-1},
    {{-332.3008,-1987.6200,26.1051 },-1},
    {{-375.2895,-2004.4412,28.4262 },-1},
    {{-420.7345,-1962.1367,20.7989 },-1},
    {{-370.9467,-2049.1355,28.5462 },-1},
    {{-448.5980,-2072.9041,80.6654 },-1},
    {{-490.3048,-2121.0930,89.5054 },-1},
    {{-515.2039,-2223.6245,42.7538 },-1},
    {{-556.2787,-2223.5444,34.8664},-1},
    {{-653.4810,-2185.8540,14.6571 },-1},
    {{-697.4235,-2144.5728,24.7645 },-1},
    {{-913.5545,-2281.5803,45.6804 },-1},
    {{-924.2963,-2392.5601,63.9710 },-1},
    {{-921.2469,-2419.2676,73.1529 },-1},
    {{-928.6000,-2452.7974,90.8816 },-1},
    {{-1092.1782,-2576.2622,77.2730 },-1},
    {{-1114.4218,-2326.8787,44.7146 },-1},
    {{-1095.8896,-2317.7642,51.1427 },-1},
    {{-1036.0745,-2331.6079,60.0633 },-1},
    {{-1823.0471,-2169.1082,77.6051 },-1},
    {{-1745.4077,-2018.1677,74.5071 },-1},
    {{-1943.8130,-2144.5457,76.9309 },-1},
    {{-1955.9766,-2162.8020,75.9688 },-1},
    {{-1685.1254,-2385.9275,99.3290 },-1},
    {{-1643.7135,-2411.9897,95.7691 },-1},
    {{-1551.1573,-2505.1743,90.8708 },-1},
    {{-1465.4910,-2556.2893,63.7663 },-1},
    {{-1435.4855,-2544.3879,60.4281 },-1},
    {{-1401.0656,-2548.1582,55.9067 },-1},
    {{-1347.5752,-2507.9780,37.0068 },-1},
    {{-1328.0197,-2467.7183,27.8259 },-1},
    {{-1290.3135,-2479.8984,16.9108 },-1},
    {{-1277.4055,-2498.1367,11.4951 },-1},
    {{-568.3260,-2276.3220,27.5938 },-1},
    {{-653.1019,-2255.4465,23.3936 },-1},
    {{-614.5738,-2398.0959,28.0911 },-1},
    {{-620.2932,-2477.4644,52.8450 },-1},
    {{-673.6429,-2562.6052,58.4840 },-1},
    {{-797.0350,-2611.4380,85.9543 },-1},
    {{-814.8298,-2713.2485,90.4954 },-1},
    {{-900.3575,-2635.6716,96.5351 },-1},
    {{-908.8201,-2450.1675,86.1361},-1},
    {{-564.7324,-2000.7518,48.2172 },-1},
    {{-514.0831,-1990.8127,46.7821 },-1},
    {{-386.3437,-1968.6517,25.7109 },-1},
    {{-285.8642,-2063.6074,34.5075 },-1},
    {{-1735.6969,-2501.1594,10.1409 },-1},
    {{-1840.7139,-2382.2207,29.1400 },-1},
    {{-1906.1353,-2212.6089,77.4492 },-1},
    {{-1874.5731,-1969.2981,87.2874 },-1},
    {{-1739.6145,-1950.4650,98.8599 },-1},
    {{-1613.4684,-1867.4391,86.1701 },-1},
    {{-1868.5590,-1894.4634,88.9713 },-1},
    {{-2005.6901,-1937.4910,77.0140 },-1}
};
new CarInfo[MAX_OWNABLECARS][cInfo];
enum hInfo
{
	hID,
	Float:hEnter[3],
	Float:hExit[3],
	hCost,
	hLevel,
	hOwner[24],
	hInt,
	hLock,
	hRent,
	hBar,
	hCabinet,
	hSkin[5],
	hNalog,
	hNalog2,
	hNoOwner,
	hKlass,
	hMed
}
new HouseInfo[MAX_HOUSES][hInfo];
new HRoomOwner[MAX_HOUSES][5][24];
enum bInfo
{
	bID,
	bState,
	Float:bEnter[3],
	Float:bExit[3],
	bOwner[24],
	bName[64],
	bCost,
	bLevel,
	bInt,
	bLock,
	bMoney,
	Float:bEnterPrice,
	bProducts,
	Float:bProdPrice,
	bKrasher,
	bNum,
	bVisit,
	bWin,
	bBuyCost,
	bNeedItem
}
new BizInfo[MAX_BIZ][bInfo];
new TempStripObject[MAX_VEHICLES] = {-1, ...};
new TempStripTimer[MAX_VEHICLES];
new Float:TStripPos[MAX_STRIPS][3];
new StripCount;
new Text:CaptureTD[13][3];
new PlayerMail[MAX_PLAYERS][50];
new PlayerName[MAX_PLAYERS][24];
new PlayerReferal[MAX_PLAYERS][24];
new PlayerRegIP[MAX_PLAYERS][16];
new PlayerIp[MAX_PLAYERS][16];
new PlayerCheckIP1[MAX_PLAYERS][16];
new PlayerCheckIP2[MAX_PLAYERS][16];
new PlayerTelephone[MAX_PLAYERS][20];
///казино
enum casInfo
{
	Float:casPos[4],
	Float:casExit[4],
	casOwner[24],
	casBalance,
	casWorld,
	casCost,
	casLock,
	casWin,
	casLose,
	casVisit,
	casEnter,
	casNum,
	casNalog,
	casDeal
}
new CasinoInfo[MAX_OWNABLECASINO][casInfo];
new Float:SpawnInfo[28][4] =
{
	{1755.7021,-1904.0400,13.5643, 0.0},				//Int:  0 | World: 0 | None
	{1552.4646,-1675.4471,16.1850,90.0000},				//LSPD
	{630.7498,-571.5781,16.3359,268.5526},				//RCPD
	{287.9350,-1614.5675,33.0848,181.1810},				//FBI
	{-1606.1509,713.7501,13.2902,359.7803},				//polisesf
	{1177.1873,-1326.2905,14.0584,270.0000},			//Medic LS
	{1480.7877,-1768.5625,18.7957,0.0000},				//Meria LS
	{239.7024,1878.2006,11.4609,180.0000},				//ARMY LV
	{-2650.9790,637.4023,14.4531,180.0},					//Meria LV
	{-2043.9832,-115.7717,35.3199,90.0000},			//Licensers
	{1653.5554,-1658.9841,22.5156,181.2989},        	//Radio LS
	{2495.2034,-1689.1195,14.2319,0.9635},				//Groove
	{2793.5908,-1618.6378,10.9219,79.5407},				//Vagos
	{2011.4365,-1113.9827,26.2421,184.8236},			//Ballas
	{2521.5767,-2001.4885,13.5469,137.3131},			//Aztec
	{2185.8145,-1810.8423,13.5469,1.5911},				//Rifa
	{940.1907,1731.1997,8.8516,271.1088},				//Russian
	{2630.3728,1824.2715,11.0234,90.2341},				//Yakuza
	{1460.8861,2773.1716,10.8203,269.9729},				//LCN
	{681.6158,-476.9035,16.3359,178.3351},				//Warlocks Bikers
	{2732.3691,-2451.3196,17.5937,325.8486},			//army ls
	{1408.1946,-1706.7571,13.5469,270.3313},			//bank
	{1609.5172,1820.9020,10.8280,0.0000},				//mediclv
	{2287.0684,2428.8718,10.8203,179.2759},				//lvpd
	{2637.8726,1182.4669,10.8203,179.5183},				//cnn lv
	{2468.4150,-1422.4222,28.8398,269.2243}, 			//wolfs
	{-1941.4008,459.7771,35.1719,1.2511},				//cnn sf
	{-1702.0864,279.9887,7.2740,270.0000}				//army sf
};
new SpawnIntWorld[28][2] =
{
	{0,0},//Int: 0 | World: 0 | None
	{1,0},//Int: 6 | World: 10 | LSPD
	{6,11},//Int: 6 | World: 11 | LVPD
	{2,0},//Int: 2 | World: 12 | FBI
	{10,1},//Int: 10 | World: 0 | police sf
	{2,1},//Int: 0 | World: 0 | Medic
	{2,2},//Int: 0 | World: 0 | Meria LS
	{2,1},//Int: 3 | World: 1 | ARMY LV
	{3,3},//Int: 3 | World: 2 | hospital sf
	{0,0},//Int: 0 | World: 0 | Licensers
	{18,1},//Int: 1 | World: 1 | Radio
	{7,1},//Int: 7 | World: 1 | Groove
	{7,2},//Int: 7 | World: 2 | Vagos
	{7,3},//Int: 7 | World: 3 | Ballas
	{7,4},//Int: 7 | World: 4 | Coronos
	{7,5},//Int: 7 | World: 5 | Rifa
	{3,2},//Int: 3 | World: 0 | Russian
	{5,0},//Int: 0 | World: 0 | Yakuza
	{5,1},//Int: 5 | World: 1 | LCN
	{3,1},//Int: 3 | World: 1 | Bikers
	{2,1},//army
	{1,1}, //банк
	{3,2}, //medic lv
	{6,12}, //lvpd
	{18,2}, //radio lv
	{7,7}, //wolfs
	{18,3}, //sf news
	{2,1}//armysf
};
enum gpsInfo
{
	gpsName[50],
	Float:gpsPos[3],
	bool:gpsCP
}
new GpsInfo[15][gpsInfo] =
{
	{"Центр лицензирования",				{-2027.4399,-73.7133,34.8768}, true},
	{"Мэрия",				{1480.9033,-1744.6389,13.5469}, true},
	{"Ферма",					{-377.4685,-1416.8032,25.7266}, true},
	{"Виноградная плантация",					{-124.4387,-62.4651,3.1172}, true},
	{"Завод",					{-86.1893,-305.8608,1.4219}, true},
	{"Банк",						{1422.5767,-1707.3518,13.5469}, true},
	{"Больница Los-Santos", 				{1177.6864,-1323.2448,14.0830}, true},
	{"Больница Las-Venturas", 				{1641.8849,1833.5286,10.8508}, true},
	{"Больница San-Fierro", 				{-2666.6680,580.7857,14.4609}, true},
	{"ЖД Los-Santos", 				{1805.0404,-1908.3304,13.3983}, true},
	{"ЖД San-Fierro", 				{-1994.0475,100.2056,27.5391}, true},
	{"ЖД Las-Venturas", 			{2827.3931,1255.9264,10.7685}, true},
	{"Полиция Los-Santos", 				{1540.0491,-1676.1680,13.2146}, true},
	{"Полиция San-Fierro", 				{-1629.0847,726.1740,14.1306}, true},
	{"Полиция Las-Venturas", 				{2285.9685,2420.4519,10.4922}, true}

};
///
new Float:TestCP[47][3] = {
 	{-2068.3416, -203.1569, 34.8710},
	{-2068.3474, -223.3519, 34.8805},
	{-2068.3374, -262.0481, 34.9005},
	{-2057.1948, -259.2693, 34.8710},
	{-2052.6467, -263.0467, 34.8710},
	{-2043.3716, -259.8153, 34.8710},
	{-2033.7260, -264.1830, 34.8559},
	{-2027.1292, -265.1727, 34.9001},
	{-2026.2972, -253.3527, 34.8510},
	{-2026.2412, -227.4494, 35.0639},
	{-2023.6689, -218.2616, 34.9005},
	{-2035.6331, -212.8922, 34.8610},
	{-2043.2511, -224.4259, 34.8709},
	{-2055.1321, -230.4733, 34.8712},
	{-2063.5588, -210.8080, 34.8710},
	{-2014.1023, -194.0976, 34.9218},
	{-2008.4500, -231.1196, 35.4016},
	{-2019.4160, -289.7861, 35.0272},
	{-2200.6892, -288.6401, 35.0069},
	{-2205.2305, -203.1349, 35.0305},
	{-2237.7317, -187.2023, 34.8604},
	{-2260.8870, -205.9355, 35.0206},
	{-2260.4023, -315.1568, 49.6653},
	{-2218.5525, -437.1400, 50.5578},
	{-2098.8010, -557.0480, 31.7214},
	{-2036.9001, -583.3934, 27.5911},
	{-1937.2273, -584.4575, 24.1359},
	{-1831.0453, -584.3533, 16.3128},
	{-1816.4576, -560.1973, 15.9095},
	{-1807.7823, -385.0843, 17.0411},
	{-1796.6312, -212.2577, 16.4891},
	{-1799.0259, 28.5661, 14.6516},
	{-1799.6777, 245.8509, 14.6488},
	{-1747.3412, 299.9208, 6.7236},
	{-1757.1023, 323.0767, 6.7692},
	{-1844.6588, 410.8853, 16.7062},
	{-1835.5519, 436.6022, 16.9676},
	{-1855.4688, 537.9059, 33.8348},
	{-1894.9902, 590.5436, 34.6641},
	{-1917.0309, 609.8358, 34.7762},
	{-1988.0143, 609.2408, 34.7140},
	{-2008.0922, 586.2021, 34.7062},
	{-2008.1865, 321.0706, 34.7062},
	{-2009.6490, 200.6008, 27.2281},
	{-2009.6056, 12.0351, 32.9320},
	{-2013.2382, -185.8634, 35.0301},
	{-2042.9734, -190.7132, 34.8710}
};
new Float:IncCPPos[INC_CPs][44] =
{
	{767.1450,-1045.3896,23.9731,776.8019,-1038.0181,24.2658},
	{955.3633,-1330.1484,13.3765,953.9100,-1335.5221,13.5389},
	{1198.9749,-1441.2113,13.3481,1206.0974,-1438.9908,13.3828},
	{1213.5999,-1574.7318,13.3906,1217.2823,-1583.1549,13.5469},
	{1138.3198,-1743.4321,13.3984,1139.4956,-1760.5665,13.5942},
	{395.0161,-1775.0806,5.3623,385.2637,-1817.8198,7.8409},
	{453.0342,-1500.5748,30.8837,459.5194,-1500.8080,31.0414},
	{822.6261,-1596.8116,13.3828,822.8293,-1589.4729,13.5545},
	{1741.0114,-1596.5645,13.3819,1739.3080,-1583.7665,14.1583},
	{1824.1311,-1685.0016,13.3828,1835.0616,-1682.3575,13.4055},
	{2288.9473,2419.0779,10.8203,2287.1638,2429.7104,10.8203},
	{2114.6890,2083.5286,10.8203,2086.3657,2074.2183,11.0547},
	{1986.9327,1085.8973,10.8203,1977.7756,1076.0548,10.8203},
	{2614.7888,1162.4569,10.8203,2637.4773,1182.7587,10.8203},
	{2496.7053,1526.4484,10.8125,2481.6992,1525.5863,11.7108},
	{2583.9001,2001.6904,10.8203,2546.8918,1971.8082,10.8203},
	{2884.9507,2438.1228,10.8203,2876.7019,2446.1970,11.0690},
	{2160.3674,2780.6301,10.8203,2172.6409,2795.6777,10.8203},
	{1472.9072,2385.1072,10.8203,1442.1285,2360.2480,10.8203},
	{1654.7034,1796.7312,10.8203,1671.5212,1814.3573,10.8203},
	{1561.0010,981.8759,10.8203,1557.5923,990.4278,10.8203},
	{2116.7949,2461.2368,10.8203,2085.7800,2486.2427,11.0781}
};
new Float:MinPos[40][3] =
{
	{-326.9010,-1411.3728,14.0767},
	{-311.2819,-1396.6796,13.0986},
	{-309.1006,-1382.3204,10.8831},
	{-308.8808,-1363.9961,9.0507},
	{-309.7777,-1342.5895,8.5373},
	{-310.3027,-1324.3372,8.8039},
	{-300.6830,-1320.6600,8.9460},
	{-288.8134,-1321.1184,8.6941},
	{-287.1468,-1331.4827,7.9913},
	{-285.6286,-1342.6014,7.3520},
	{-290.6301,-1356.0698,8.4877},
	{-292.6301,-1369.7189,9.0214},
	{-294.6119,-1383.5444,9.9970},
	{-297.0575,-1398.6122,12.5305},
	{-298.3777,-1420.8732,13.6402},
	{-290.5233,-1423.6205,12.6480},
	{-284.8003,-1414.8342,12.0452},
	{-281.3375,-1404.0948,12.0926},
	{-277.4664,-1391.1167,10.8490},
	{-270.5129,-1356.8715,8.7302},
	{-267.2814,-1330.5328,8.2106},
	{-262.5984,-1313.9036,10.4055},
	{-256.9019,-1327.2227,8.8577},
	{-257.9899,-1337.1407,7.5764},
	{-258.2280,-1348.5403,7.9291},
	{-258.0781,-1360.7056,9.1792},
	{-258.8363,-1374.1068,10.3729},
	{-259.4532,-1382.8121,10.1332},
	{-259.9149,-1392.7649,10.3733},
	{-260.0939,-1402.9576,10.6237},
	{-257.2111,-1417.2032,8.5134},
	{-249.6873,-1418.7734,7.7798},
	{-244.5135,-1412.0303,8.3681},
	{-241.0012,-1399.8971,9.4827},
	{-239.4482,-1388.2162,9.6604},
	{-237.8382,-1375.0612,9.8541},
	{-236.1199,-1361.0215,8.6421},
	{-231.4646,-1344.7797,8.0253},
	{-225.0143,-1331.3757,10.7325},
	{-216.3645,-1339.7906,10.8897}
};
forward PlayKick(playerid);
public PlayKick(playerid)
{
    Kick(playerid);
}
#define Kick(%0) SetTimerEx("PlayKick",1000,false,"d",%0)

stock CreateTeamVehicle(org,rank,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime,siren = 0)
{
	new carid = J_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime, siren);
	VehicleInfo[carid][vTeam] = org;
	VehicleInfo[carid][vRank] = rank;
	return carid;
}
stock CreateJobVehicle(job,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime)
{
	new carid = J_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime);
	VehicleInfo[carid][vJob] = job;
	return carid;
}
new string:strring[256];
enum _Veeh// ВЫРЕЗАТЬ
{
	vGorod,
	vCena,
	vName[50],
	Text3D:vText,
	vReis
}
new Vehs[MAX_VEHICLES][_Veeh];// ВЫРЕЗАТЬ
new pPressed[MAX_PLAYERS];
#define RABOTABUS 280
#define MECH_ID   290
#define dcarshop 333
#define SHOWDATA 400
#define SHOWSKILLS 500
#define SHOWACTION 600
enum BUSLLS {//ВЫРЕЗАЙ
        BUSSTATION1,
		Float:BUS_COORD1[3]
};
static const Float:BusCityLS[37][BUSLLS] = {
	{0,{1229.8259,-1829.7358,13.5368}},
	{0,{1280.2579,-1854.6804,13.5182}},
	{0,{1652.2408,-1873.4386,13.5162}},
	{0,{1734.5934,-1819.4779,13.5007}},
	{1,{1816.8345,-1904.2699,13.6184}},
	{0,{1818.5557,-1914.4448,13.5211}},
	{0,{1942.7035,-1933.7701,13.5162}},
	{1,{1965.2905,-1784.1429,13.5104}},
	{0,{1965.2986,-1775.8351,13.5162}},
	{0,{1834.2664,-1749.8036,13.5161}},
	{1,{1824.0920,-1645.9943,13.5162}},
	{0,{1824.0588,-1627.0508,13.5162}},
	{0,{1580.0244,-1590.1259,13.5271}},
	{0,{1432.5289,-1571.1511,13.4886}},
	{0,{1455.5337,-1456.0300,13.4987}},
	{0,{1583.1376,-1443.8529,13.5238}},
	{0,{1610.7544,-1324.1510,17.4376}},
	{1,{1538.7518,-1294.6869,16.0552}},
	{0,{1521.1030,-1295.0481,15.1298}},
	{0,{1456.5043,-1255.2910,13.5255}},
	{0,{1371.3203,-1239.2648,13.5156}},
	{1,{1339.4738,-1306.8401,13.5837}},
	{0,{1339.5033,-1314.6669,13.5420}},
	{0,{1340.9142,-1382.7581,13.6311}},
	{0,{1223.4369,-1393.6273,13.3420}},
	{1,{1209.1743,-1316.7479,13.5312}},
	{0,{1209.0643,-1303.7913,13.5224}},
	{0,{1080.9596,-1278.3923,13.5390}},
	{0,{1056.1063,-1378.4590,13.5907}},
	{0,{1324.8569,-1407.8351,13.4525}},
	{0,{1438.4069,-1443.2587,13.5189}},
	{0,{1427.7025,-1707.5081,13.5161}},
	{1,{1502.1509,-1735.7925,13.5162}},
	{0,{1502.1509,-1735.7925,13.5162}},
	{0,{1567.4381,-1748.1270,13.5161}},
	{0,{1568.1758,-1859.9463,13.5161}},
	{0,{1281.2180,-1848.9690,13.5216}}
};
enum BUSFLS {//ВЫРЕЗАЙ
        BUSSTATION2,
		Float:BUS_COORD2[3]
};
static const Float:BusFarm[67][BUSFLS] = {
	{0,{1237.8948,-1832.1141,13.4713}},
	{0,{1404.0356,-1874.5087,13.4578}},
	{0,{1652.9841,-1874.6194,13.4578}},
	{0,{1807.0486,-1834.2417,13.4592}},
	{1,{1818.7704,-1906.8622,13.4683}},
	{0,{1818.7704,-1906.8622,13.4683}},
	{0,{1927.7805,-1935.2821,13.4578}},
	{0,{1963.7667,-1893.1801,13.4578}},
	{1,{1964.7584,-1778.1088,13.4547}},
	{0,{1964.7584,-1778.1088,13.4547}},
	{0,{1911.3258,-1749.8579,13.4574}},
	{0,{1824.5112,-1725.7615,13.4745}},
	{1,{1824.8112,-1645.2742,13.4578}},
	{0,{1824.8112,-1645.2742,13.4578}},
	{0,{1853.1031,-1429.0073,13.4657}},
	{0,{1868.8618,-1164.9558,23.7471}},
	{0,{1915.4825,-1043.4963,23.8686}},
	{0,{2085.8872,-1099.6027,24.9618}},
	{1,{2235.0862,-1140.5504,25.7006}},
	{0,{2235.0862,-1140.5504,25.7006}},
	{0,{2394.4849,-1156.6980,28.8896}},
	{0,{2697.7700,-1155.8300,52.8518}},
	{0,{2890.3357,-1099.2585,10.9500}},
	{0,{2896.3125,-851.6042,10.9502}},
	{0,{2816.1965,-435.7941,20.9845}},
	{0,{2742.5786,-208.1715,29.8970}},
	{0,{2818.1643,27.4715,20.8995}},
	{0,{2733.5378,46.7397,22.6336}},
	{0,{2413.7217,44.1769,26.4117}},
	{0,{2395.8704,76.3691,26.4110}},
	{1,{2278.4397,95.1039,26.4167}},
	{0,{2278.4397,95.1039,26.4167}},
	{0,{2207.5850,44.9261,26.4122}},
	{0,{1920.4877,45.7306,34.2922}},
	{0,{1741.3544,111.9195,33.0462}},
	{0,{1510.2655,147.4181,31.5759}},
	{1,{1229.3667,278.9224,19.4813}},
	{0,{1229.3667,278.9224,19.4813}},
	{0,{1220.0930,333.0586,19.4829}},
	{0,{1296.6200,319.4578,19.4829}},
	{0,{1348.4712,377.3011,19.4842}},
	{0,{1361.6685,455.9211,19.9597}},
	{0,{1159.1312,557.9290,19.9648}},
	{0,{1008.9088,459.5093,19.9578}},
	{0,{844.3448,347.9556,19.9638}},
	{0,{524.7679,249.8273,14.7410}},
	{0,{313.7930,79.9660,3.1327}},
	{1,{-2.4951,167.0647,2.1562}},
	{0,{-2.4951,167.0647,2.1562}},
	{0,{-169.3714,232.4576,10.7568}},
	{0,{-267.1622,87.9629,1.1528}},
	{0,{-285.3360,-214.5397,1.1534}},
	{1,{-153.9026,-375.9617,1.1538}},
	{0,{-153.9026,-375.9617,1.1538}},
	{0,{17.6611,-500.0209,8.4701}},
	{0,{46.8314,-657.7147,3.5617}},
	{0,{320.6441,-571.8426,40.6437}},
	{0,{677.5936,-675.7714,16.2595}},
	{0,{692.6474,-845.8254,43.3442}},
	{0,{796.1514,-1138.9399,24.0360}},
	{0,{795.8639,-1377.2534,13.4896}},
	{0,{854.6149,-1407.6465,13.2316}},
	{1,{1271.4054,-1409.2161,13.1092}},
	{0,{1271.4054,-1409.2161,13.1092}},
	{0,{1339.3062,-1426.6134,13.4578}},
	{0,{1295.0242,-1667.2679,13.4578}},
	{0,{1294.7853,-1829.2402,13.4578}}
};
enum BUSZLS {//ВЫРЕЗАЙ
        BUSSTATION3,
		Float:BUS_COORD3[3]
};
static const Float:BusZav[39][BUSZLS] = {
	{0,{1229.2997,-1831.3430,13.4918}},
	{0,{1656.7872,-1874.7206,13.4766}},
	{0,{1692.0085,-1824.3645,13.4765}},
	{0,{1807.9644,-1835.1954,13.4760}},
	{1,{1819.0844,-1905.2897,13.4900}},
	{0,{1819.0844,-1905.2897,13.4900}},
	{0,{1945.8931,-1934.5231,13.4759}},
	{0,{1963.6215,-1765.2841,13.4761}},
	{0,{1835.3751,-1750.2057,13.4757}},
	{1,{1824.7355,-1646.5450,13.4763}},
	{0,{1824.7355,-1646.5450,13.4763}},
	{0,{1852.6595,-1275.8950,13.4841}},
	{0,{1731.1975,-1298.5696,13.5214}},
	{1,{1549.8947,-1293.5890,16.5593}},
	{0,{1549.8947,-1293.5890,16.5593}},
	{0,{1467.7245,-1296.6996,13.5162}},
	{0,{1456.8760,-1246.0756,13.4824}},
	{0,{1369.8267,-1238.0427,13.4760}},
	{0,{1379.0013,-961.8619,34.1029}},
	{0,{1173.1611,-939.0876,42.9138}},
	{0,{1259.4996,-366.2016,2.9810}},
	{0,{1188.1992,-177.1511,40.3592}},
	{0,{943.0252,-176.3220,11.2184}},
	{0,{543.1816,-138.7326,37.4017}},
	{0,{347.0766,-139.8066,1.6424}},
	{0,{296.2548,-139.2764,1.5204}},
	{0,{280.4119,-196.8805,1.5154}},
	{0,{29.9225,-205.7583,1.5759}},
	{0,{-293.6570,-146.0782,1.4663}},
	{1,{-146.8190,-382.9973,1.1712}},
	{0,{36.6532,-623.3799,3.4851}},
	{0,{203.1494,-651.0359,19.7352}},
	{0,{401.8615,-586.5921,37.6639}},
	{0,{665.8414,-665.6905,16.3843}},
	{0,{793.1093,-1028.8997,25.4933}},
	{0,{794.4880,-1380.8113,13.5557}},
	{0,{1134.5815,-1407.9766,13.5701}},
	{0,{1328.6002,-1407.6282,13.4327}},
	{0,{1295.3855,-1766.4696,13.4766}}
};
enum BUSALS {//ВЫРЕЗАЙ
        BUSSTATION4,
		Float:BUS_COORD4[3]
};
static const Float:BusAvto[28][BUSALS] = {
	{0,{1232.6331,-1830.5366,13.4941}},
	{0,{1410.1094,-1875.3966,13.4760}},
	{0,{1656.1490,-1874.8623,13.4756}},
	{0,{1692.0580,-1827.3738,13.4761}},
	{0,{1808.1899,-1835.3752,13.4761}},
	{1,{1818.9661,-1905.0737,13.4903}},
	{0,{1818.9661,-1905.0737,13.4903}},
	{0,{1941.8381,-1934.3352,13.4759}},
	{0,{2072.3174,-1935.4684,13.4711}},
	{0,{2091.6484,-1765.0592,13.4909}},
	{0,{2174.4597,-1754.3929,13.4692}},
	{0,{2403.6680,-1734.2816,13.4759}},
	{1,{2410.3813,-1906.8245,13.4759}},
	{0,{2410.9624,-1946.8339,13.4758}},
	{0,{2226.4150,-1969.8279,13.4749}},
	{0,{2220.7681,-1907.9124,13.4615}},
	{0,{2094.4858,-1892.2651,13.4661}},
	{1,{1982.1689,-1928.8876,13.4753}},
	{0,{1982.1689,-1928.8876,13.4753}},
	{0,{1832.2825,-1929.9409,13.4775}},
	{0,{1824.0001,-1837.5123,13.5067}},
	{0,{1703.1348,-1809.0640,13.4597}},
	{0,{1598.1779,-1869.9440,13.4766}},
	{0,{1571.9581,-1745.8114,13.4766}},
	{1,{1498.0388,-1728.6017,13.4759}},
	{0,{1489.6395,-1728.8545,13.4765}},
	{0,{1402.1185,-1729.0494,13.4836}},
	{0,{1386.6500,-1858.5278,13.4759}}
};

////////маршутки лв
enum BUSLV { ///////////с лс до лв
        BUSSTATION5,
		Float:BUS_COORD5[3]
};
static const Float:BusLv[51][BUSLV] = {
	{0,{1232.0515,-1828.6260,13.4986}},
	{0,{1250.6344,-1854.9460,13.4760}},
	{0,{1488.9105,-1874.8153,13.4773}},
	{0,{1703.0072,-1813.7273,13.4600}},
	{1,{1818.5599,-1906.5231,13.4893}},
	{0,{1818.5599,-1906.5231,13.4893}},
	{0,{1946.3177,-1934.2123,13.4760}},
	{1,{1963.8538,-1777.8281,13.4761}},
	{0,{1963.8538,-1777.8281,13.4761}},
	{0,{1801.3658,-1730.7200,13.4837}},
	{1,{1500.5328,-1729.7361,13.4750}},
	{0,{1500.5328,-1729.7361,13.4750}},
	{0,{1314.3804,-1718.7456,13.4760}},
	{0,{1359.2566,-1431.8987,13.4799}},
	{1,{1361.0975,-1266.0936,13.4760}},
	{0,{1361.0975,-1266.0936,13.4760}},
	{0,{1370.4576,-1058.4480,26.7226}},
	{0,{1399.8005,-951.6357,34.9892}},
	{0,{1565.7369,-993.6835,45.6616}},
	{0,{1708.4244,-785.1653,54.5776}},
	{0,{1680.0234,-236.2828,42.4546}},
	{0,{1657.3685,250.2939,29.9955}},
	{0,{1790.0594,656.9621,18.1466}},
	{0,{2000.8984,834.6299,6.8330}},
	{0,{2506.7175,844.3246,6.8291}},
	{0,{2727.5769,1250.8336,6.8329}},
	{0,{2796.3796,1456.4688,10.7554}},
	{0,{2824.8545,1389.0665,10.8473}},
	{1,{2823.2661,1255.8954,10.8554}},
	{0,{2823.2661,1255.8954,10.8554}},
	{0,{2794.2759,1315.3356,10.8434}},
	{0,{2625.3569,1298.4623,10.7653}},
	{1,{2604.9023,1097.9755,10.7646}},
	{0,{2604.9023,1097.9755,10.7646}},
	{0,{2501.0615,1075.6737,10.7651}},
	{0,{2345.2649,1046.8436,10.7651}},
	{0,{2334.6252,976.3047,10.7645}},
	{1,{2137.9341,976.5244,10.7816}},
	{0,{2137.9341,976.5244,10.7816}},
	{0,{2046.6974,952.9116,10.2044}},
	{0,{2024.6371,854.6613,6.8276}},
	{0,{1789.5865,804.9660,11.1350}},
	{0,{1726.7368,525.0765,28.1258}},
	{0,{1654.1354,-169.6108,35.2687}},
	{0,{1700.9017,-580.4525,37.3024}},
	{0,{1583.0924,-894.6972,49.9651}},
	{0,{1359.8951,-959.5404,34.0466}},
	{1,{1339.1453,-1311.2400,13.5118}},
	{0,{1339.1453,-1311.2400,13.5118}},
	{0,{1295.9526,-1554.2906,13.4825}},
	{0,{1285.6277,-1849.1674,13.4842}}
};
//////////
enum BUSLVV { ///////////с лс до лв
        BUSSTATION6,
		Float:BUS_COORD6[3]
};
static const Float:BusLvv[52][BUSLVV] = {
	{0,{2807.6387,1272.8435,10.8427}},
	{1,{2830.5647,1277.3782,10.7731}},
	{0,{2830.5647,1277.3782,10.7731}},
	{0,{2828.9734,1393.1162,10.8363}},
	{0,{2729.9451,1663.1802,6.8276}},
	{0,{2739.0483,1987.6598,6.8265}},
	{0,{2812.8105,2110.1235,10.7473}},
	{0,{2849.4526,2145.1411,10.7650}},
	{0,{2892.3428,2291.0251,10.7734}},
	{0,{2909.6057,2414.2551,10.9135}},
	{1,{2856.4448,2401.3391,10.9138}},
	{0,{2856.4448,2401.3391,10.9138}},
	{0,{2804.6528,2383.3884,10.9136}},
	{0,{2818.2456,2315.2917,10.9135}},
	{0,{2905.1653,2388.1152,10.7650}},
	{0,{2840.4058,2295.1409,10.8219}},
	{0,{2625.9592,2278.2600,10.7645}},
	{0,{2542.5381,2235.6853,10.7654}},
	{1,{2450.1213,2236.4241,10.7706}},
	{0,{2450.1213,2236.4241,10.7706}},
	{0,{2430.5205,2399.5078,10.7647}},
	{1,{2392.3000,2417.3269,10.8366}},
	{0,{2392.3000,2417.3269,10.8366}},
	{0,{2229.5918,2426.0535,10.7643}},
	{1,{2084.2234,2457.1541,10.7648}},
	{0,{2084.2234,2457.1541,10.7648}},
	{0,{2025.6925,2438.1533,10.7651}},
	{0,{2116.6624,2263.3884,10.7667}},
	{0,{2109.2144,2116.1926,10.7732}},
	{0,{1925.2623,2101.1592,10.7652}},
	{0,{1913.1256,2044.5667,10.7647}},
	{0,{1705.0833,2037.6892,10.7669}},
	{0,{1691.8285,1876.0144,10.7651}},
	{1,{1644.2288,1818.9999,10.7729}},
	{0,{1644.2288,1818.9999,10.7729}},
	{0,{1663.2039,1711.4940,10.7644}},
	{0,{1975.4893,1711.2468,10.7662}},
	{0,{2043.9906,1689.7333,10.7651}},
	{0,{2044.2896,1381.0764,10.7658}},
	{1,{2039.3444,1061.6316,10.7652}},
	{0,{2039.3444,1061.6316,10.7652}},
	{0,{2056.6633,974.5224,10.6306}},
	{1,{2161.5979,970.3667,10.8381}},
	{0,{2161.5979,970.3667,10.8381}},
	{0,{2328.8586,971.0248,10.7650}},
	{0,{2366.9402,1070.0721,10.7646}},
	{0,{2593.4543,1071.5558,10.7647}},
	{1,{2610.7393,1087.2466,10.7646}},
	{0,{2610.7393,1087.2466,10.7646}},
	{0,{2609.3401,1239.3336,10.7647}},
	{0,{2629.3052,1297.4266,10.7651}},
	{0,{2789.9265,1310.8939,10.8431}}
};
////////
enum BUSLVVV { ///////////с лс до лв
        BUSSTATION7,
		Float:BUS_COORD7[3]
};
static const Float:BusLvvv[54][BUSLVVV] = {
	{1,{2826.6458,1256.2856,10.8607}},
	{0,{2826.6458,1256.2856,10.8607}},
	{0,{2817.6826,1312.2994,10.8472}},
	{0,{2541.7107,1314.7201,10.7647}},
	{0,{2429.8262,1353.9536,10.7650}},
	{0,{2335.4736,1374.8931,10.7662}},
	{1,{2128.0342,1376.2758,10.7692}},
	{0,{2128.0342,1376.2758,10.7692}},
	{0,{2050.5156,1376.1844,10.7650}},
	{0,{2045.2562,1225.3993,10.7662}},
	{1,{2039.2996,1060.9802,10.7650}},
	{0,{2039.2996,1060.9802,10.7650}},
	{0,{2045.5696,869.7059,6.9740}},
	{0,{1741.0863,854.6646,9.5771}},
	{0,{1355.0416,907.3795,9.7279}},
	{0,{926.2228,743.3319,10.7975}},
	{0,{479.3568,737.7695,4.6967}},
	{0,{244.9114,935.9122,26.6957}},
	{0,{189.1044,1121.2612,15.2849}},
	{0,{82.1361,1200.2052,18.6089}},
	{1,{-82.8524,1203.1519,19.7575}},
	{0,{-82.8524,1203.1519,19.7575}},
	{0,{-115.2880,1240.1694,17.5618}},
	{0,{132.7793,1175.0040,16.2269}},
	{0,{261.1092,1218.7169,15.7113}},
	{1,{348.2864,1393.8882,6.9014}},
	{0,{348.2864,1393.8882,6.9014}},
	{0,{396.9423,1564.6307,17.3186}},
	{1,{646.7731,1761.4861,4.9962}},
	{0,{646.7731,1761.4861,4.9962}},
	{0,{652.9279,1807.9609,5.5642}},
	{0,{693.6188,1808.6732,5.6322}},
	{0,{711.8121,1844.6010,5.6461}},
	{0,{813.0897,1785.5085,3.8044}},
	{0,{830.9492,1542.2643,17.9034}},
	{0,{787.4529,1314.0424,25.1152}},
	{1,{806.6180,1143.0206,28.4117}},
	{0,{806.6180,1143.0206,28.4117}},
	{0,{535.7621,1059.8241,28.4218}},
	{0,{239.1753,979.0547,28.2874}},
	{0,{263.9735,879.7539,21.6726}},
	{0,{379.7841,660.2042,13.3631}},
	{0,{386.7987,698.2360,8.9994}},
	{0,{630.9131,655.3173,6.1711}},
	{0,{963.0237,730.8145,10.7728}},
	{0,{1254.0504,828.2292,8.4419}},
	{0,{1703.8965,831.3081,8.3600}},
	{0,{1966.6864,831.3790,6.8309}},
	{0,{2190.9299,832.0923,6.8290}},
	{0,{2519.5972,844.5468,6.8291}},
	{0,{2724.1719,1089.6066,6.8321}},
	{0,{2751.4805,1371.3278,7.0348}},
	{0,{2797.1931,1467.6797,10.9872}},
	{0,{2811.0874,1302.5314,10.8440}}
};



////////
enum BUSSF{ ///////////с лс до cf
        BUSSTATION8,
		Float:BUS_COORD8[3]
};
static const Float:bussf[67][BUSSF] = {
	{0,{1239.2727,-1830.1093,13.4772}},
	{0,{1222.9926,-1855.1899,13.4578}},
	{0,{1659.7306,-1873.6669,13.4587}},
	{0,{1691.8713,-1828.2920,13.4563}},
	{0,{1707.5065,-1815.3641,13.4411}},
	{1,{1818.9033,-1907.0626,13.4684}},
	{0,{1818.9033,-1907.0626,13.4684}},
	{0,{1940.1924,-1935.0177,13.4580}},
	{0,{2066.0974,-1935.1301,13.4468}},
	{0,{2084.1279,-1916.7261,13.4578}},
	{0,{2114.9438,-1532.5641,24.1030}},
	{0,{2114.6106,-1397.4122,23.9031}},
	{0,{2255.9529,-1385.9990,23.9079}},
	{0,{2272.8545,-1166.5625,26.2749}},
	{1,{2242.8049,-1137.0457,25.8989}},
	{0,{2242.8049,-1137.0457,25.8989}},
	{0,{2149.0205,-1093.2343,24.9249}},
	{0,{1874.5559,-1006.6810,36.1298}},
	{0,{1709.8173,-707.0225,47.3745}},
	{0,{1693.8153,-403.5671,36.4291}},
	{0,{1644.5189,-3.8706,36.6602}},
	{0,{1786.8777,646.0321,18.9150}},
	{0,{1809.8561,817.5914,10.8629}},
	{0,{1767.7992,852.4989,10.4403}},
	{0,{1405.0864,876.2901,7.0759}},
	{0,{928.0593,743.1429,10.7757}},
	{0,{477.9346,737.8159,4.7228}},
	{0,{-4.5236,639.8621,8.8318}},
	{0,{-619.5453,658.5139,16.7961}},
	{0,{-842.0254,964.0228,25.1174}},
	{0,{-878.1572,1142.8975,28.1087}},
	{0,{-1009.8782,1293.9994,40.2651}},
	{0,{-1284.6588,963.9929,45.2598}},
	{0,{-1523.9430,711.5268,45.3911}},
	{0,{-1816.2042,416.2890,17.6484}},
	{0,{-1875.0621,404.4098,17.2046}},
	{0,{-1986.7096,349.5109,34.9161}},
	{0,{-2007.7003,306.7575,34.9604}},
	{1,{-2009.9449,130.6911,27.6141}},
	{0,{-2009.9449,130.6911,27.6141}},
	{1,{-2009.3240,-86.2265,35.4043}},
	{0,{-2009.3240,-86.2265,35.4043}},
	{0,{-2007.1432,-273.2873,35.3966}},
	{0,{-2046.3518,-326.7133,35.3794}},
	{0,{-2385.0352,-325.1478,37.9981}},
	{0,{-2806.4470,-491.9019,7.2122}},
	{0,{-2916.6018,-1155.5824,9.5673}},
	{0,{-2940.6841,-1538.1550,10.9662}},
	{0,{-2867.6536,-1946.4441,37.2266}},
	{0,{-2525.5186,-2273.7234,29.1935}},
	{0,{-2323.9414,-2630.9778,59.4208}},
	{0,{-1918.3955,-2622.7783,58.2431}},
	{0,{-1612.5243,-2768.3389,46.9970}},
	{0,{-1149.4178,-2868.0261,67.7893}},
	{0,{-820.2522,-2833.2683,56.6978}},
	{0,{-214.1823,-2869.7571,39.2527}},
	{0,{9.9848,-2644.1697,40.2500}},
	{0,{-316.1310,-2113.1294,27.9829}},
	{0,{-266.0706,-1667.7366,14.9981}},
	{0,{79.3633,-1298.2041,13.1298}},
	{0,{604.4440,-1195.3882,19.1967}},
	{0,{625.6140,-1427.2957,13.8754}},
	{0,{621.9033,-1713.2443,14.2480}},
	{0,{665.4852,-1755.8931,13.5018}},
	{0,{1042.6567,-1842.6890,13.5036}},
	{0,{1102.1276,-1854.6323,13.4550}},
	{0,{1250.8386,-1855.1190,13.4580}}

};


enum BUSLVSF{ ///////////с лв до cf
        BUSSTATION9,
		Float:BUS_COORD9[3]
};
static const Float:buslvsf[69][BUSLVSF] = {
	{1,{2818.7419,1257.3925,10.8343}},
	{0,{2818.7419,1257.3925,10.8343}},
	{0,{2791.3337,1315.4778,10.8250}},
	{0,{2574.2002,1315.0728,10.8538}},
	{0,{2446.2585,1315.7064,10.8499}},
	{0,{2429.9224,1357.2341,10.7468}},
	{0,{2389.2612,1375.7986,10.7485}},
	{0,{2125.0715,1375.3788,10.7516}},
	{0,{2097.9458,1375.4659,10.7855}},
	{0,{2045.9497,1341.0956,10.7473}},
	{1,{2040.6155,1062.1938,10.7468}},
	{0,{2040.6155,1062.1938,10.7468}},
	{0,{2045.6891,881.5240,7.2298}},
	{0,{1995.8934,855.4678,6.8081}},
	{0,{1658.7972,854.5658,6.8740}},
	{0,{1356.7434,907.4755,9.6777}},
	{0,{1116.4193,845.9794,10.7428}},
	{0,{888.3245,727.7820,10.8321}},
	{0,{659.8762,679.7547,7.5954}},
	{0,{491.3829,731.1174,4.3072}},
    {0,{299.1613,838.0553,17.1871}},
	{0,{199.1845,1056.6332,21.0792}},
	{0,{169.6721,1152.3199,14.4374}},
	{0,{67.3102,1200.3102,18.6911}},
	{1,{-83.8147,1202.2227,19.7309}},
	{0,{-83.8147,1202.2227,19.7309}},
	{0,{-113.0133,1217.5348,19.0318}},
	{0,{-77.6962,1255.8416,12.6333}},
	{0,{169.3127,1147.4120,14.3619}},
	{0,{260.4173,874.7805,21.4181}},
	{0,{116.6964,703.6432,5.9623}},
	{0,{-231.3173,577.5603,15.7142}},
	{0,{-574.3392,637.8568,16.7930}},
	{0,{-831.6596,836.4021,19.8658}},
	{0,{-873.1947,1126.7213,26.9703}},
	{0,{-915.5178,1315.5579,37.8013}},
	{0,{-1085.5634,1198.1527,39.0290}},
	{0,{-1297.7290,949.5397,45.6279}},
	{0,{-1597.4331,633.9749,42.3623}},
	{0,{-1820.2052,411.9102,17.4357}},
	{0,{-1878.3140,399.3504,17.5204}},
	{0,{-1982.8495,349.0168,34.7826}},
	{0,{-2008.9194,245.0558,29.6036}},
	{0,{-2009.2172,123.8958,27.6140}},
	{1,{-1989.2716,176.2378,27.6140}},
	{0,{-1989.2716,176.2378,27.6140}},
	{0,{-2000.4724,328.1176,35.0907}},
	{0,{-1979.3467,340.7978,34.6584}},
	{0,{-1867.6576,403.1433,17.1183}},
	{0,{-1822.2546,375.9888,17.0860}},
	{0,{-1783.6349,394.4813,17.9640}},
	{0,{-1575.9696,625.4163,42.6431}},
	{0,{-1329.9995,885.0818,46.6918}},
	{0,{-1078.1804,1152.6123,38.2186}},
	{0,{-908.4866,931.0784,18.8703}},
	{0,{-700.2190,672.8992,16.6869}},
	{0,{-257.4713,550.0108,16.1901}},
	{0,{39.5957,634.2082,7.2312}},
	{0,{480.1574,709.7883,5.0814}},
	{0,{934.9865,720.3270,10.7901}},
	{0,{1191.9908,823.4895,9.5034}},
	{0,{1506.4880,830.6743,6.8950}},
	{0,{1887.7756,832.3083,8.4499}},
	{0,{2292.8589,831.5078,6.8095}},
	{0,{2658.0078,937.9959,6.8081}},
	{0,{2728.9512,1246.3154,6.8095}},
	{0,{2795.9653,1451.9988,10.7232}},
	{0,{2824.8608,1393.1545,10.8226}},
	{0,{2809.2686,1291.3936,10.8302}}
};


///////
enum BUSSFSF{ ///////////с лв до cf
        BUSSTATION10,
		Float:BUS_COORD10[3]
};
static const Float:bussfsf[55][BUSSFSF] = {
	{0,{-2167.1038,317.4204,34.8428}},
	{0,{-2023.2380,318.5129,34.6873}},
	{0,{-2009.1259,300.6385,34.3691}},
	{0,{-2009.8013,125.2293,27.2110}},
	{1,{-1988.5049,180.6631,27.2085}},
	{0,{-1988.5049,180.6631,27.2085}},
	{0,{-2001.5211,264.7843,31.2235}},
	{1,{-1999.0499,468.3500,34.6873}},
	{0,{-1999.0499,468.3500,34.6873}},
	{0,{-1998.5966,590.4084,34.6897}},
	{0,{-1855.5277,600.6783,34.6854}},
	{0,{-1709.1293,673.1445,24.4042}},
	{0,{-1708.8419,714.7418,24.4120}},
	{1,{-1637.9459,726.1580,14.1365}},
	{0,{-1637.9459,726.1580,14.1365}},
	{0,{-1578.1815,726.1118,7.0200}},
	{0,{-1526.2339,883.5734,6.7088}},
	{0,{-1579.1440,1109.5095,6.7088}},
	{1,{-1714.2565,1335.4342,6.7150}},
	{0,{-1714.2565,1335.4342,6.7150}},
	{0,{-1871.2581,1361.2819,6.7088}},
	{0,{-2006.2347,1313.5310,6.7088}},
	{0,{-2233.9192,1336.1649,6.7088}},
	{1,{-2630.1072,1309.6821,6.7104}},
	{0,{-2630.1072,1309.6821,6.7104}},
	{0,{-2784.3318,1294.9115,5.4524}},
	{0,{-2884.1899,1114.9465,24.7271}},
	{0,{-2811.4885,877.4551,43.5760}},
	{0,{-2766.2197,805.7432,52.1425}},
	{0,{-2753.2576,794.6345,52.8756}},
	{0,{-2753.7847,689.5037,40.7973}},
	{0,{-2753.0166,577.3898,14.0619}},
	{0,{-2737.8687,562.3759,14.0691}},
	{1,{-2632.8486,560.7029,14.1319}},
	{0,{-2632.8486,560.7029,14.1319}},
	{0,{-2441.3323,561.8361,23.8603}},
	{0,{-2401.4966,561.9412,24.4133}},
	{0,{-2389.6692,549.9596,24.8637}},
	{0,{-2285.2390,391.5641,34.4838}},
	{0,{-2254.6250,212.0838,34.8417}},
	{1,{-2255.0723,133.9813,34.8427}},
	{0,{-2255.0723,133.9813,34.8427}},
	{0,{-2260.0593,-48.1074,34.8416}},
	{0,{-2236.5339,-73.3561,34.8419}},
	{1,{-2029.0266,-73.3784,34.8431}},
	{0,{-2029.0266,-73.3784,34.8431}},
	{0,{-2005.2770,-57.4544,34.8351}},
	{0,{-2004.3948,13.9501,32.7774}},
	{0,{-2020.1083,32.0629,32.8326}},
	{0,{-2157.3428,32.7148,34.8390}},
	{0,{-2144.7627,190.4043,34.8720}},
	{0,{-2164.1365,211.0393,34.8426}},
	{0,{-2239.3037,210.7358,34.8418}},
	{0,{-2248.9690,227.7879,34.8352}},
	{0,{-2248.8120,305.6744,34.8365}}
};


enum BUSSFFA{ ///////////с лв до cf
        BUSSTATION11,
		Float:BUS_COORD11[3]
};
static const Float:bussffa[75][BUSSFFA] = {
	{0,{-2174.9050,317.7509,34.8427}},
	{0,{-2019.6237,318.1793,34.6871}},
	{0,{-2008.9510,305.0338,34.5090}},
	{1,{-2010.6046,132.7925,27.2097}},
	{0,{-2010.6046,132.7925,27.2097}},
	{0,{-2008.9885,-54.7401,34.8402}},
	{0,{-1992.7821,-71.9844,34.0853}},
	{0,{-1814.6967,-118.2254,5.1683}},
	{0,{-1801.4783,-128.7777,5.3002}},
	{0,{-1818.4156,-418.9573,14.9718}},
	{0,{-1821.5718,-560.0546,15.8870}},
	{0,{-1775.8096,-585.4281,16.0077}},
	{0,{-1764.6259,-605.3375,15.8596}},
	{0,{-1657.9926,-777.3015,42.9683}},
	{0,{-1332.6031,-817.1893,75.3023}},
	{0,{-1176.0317,-676.6423,48.4221}},
	{0,{-1056.9240,-463.1037,34.6965}},
	{0,{-947.2189,-254.8894,36.9878}},
	{0,{-792.8929,-249.9980,45.8879}},
	{0,{-562.7043,-256.6750,60.9046}},
	{0,{-316.2539,-286.0246,6.6690}},
	{0,{-272.0051,-223.7131,0.7491}},
	{0,{-302.1390,-159.6033,0.7516}},
	{0,{-224.5988,-172.3030,1.8700}},
	{0,{-142.8315,-189.3140,1.5519}},
	{0,{-125.6160,-173.4721,1.7245}},
	{0,{-126.3775,-20.3938,2.7886}},
	{1,{-52.7965,127.3154,2.7880}},
	{0,{-52.7965,127.3154,2.7880}},
	{0,{-27.6686,157.9936,2.1155}},
	{0,{-5.2347,159.2431,1.7491}},
	{0,{218.4274,46.1648,1.9498}},
	{0,{230.1113,-88.4340,1.1009}},
	{0,{230.0273,-268.5443,1.1006}},
	{0,{205.9705,-307.4175,1.1301}},
	{0,{332.2468,-391.9171,12.2810}},
	{0,{532.9624,-418.1426,28.4018}},
	{0,{631.2547,-417.7620,15.9580}},
	{0,{638.9210,-471.1431,15.8565}},
	{0,{599.3491,-505.5807,15.8574}},
	{0,{628.7352,-533.2062,15.8594}},
	{1,{637.9811,-580.6973,15.8584}},
	{0,{637.9811,-580.6973,15.8584}},
	{0,{647.9406,-622.0186,16.0518}},
	{0,{487.1001,-604.9935,35.3475}},
	{0,{227.8586,-604.9842,31.0738}},
	{0,{53.7878,-654.0306,3.4489}},
	{0,{46.8307,-617.3934,3.1673}},
	{0,{-69.5452,-430.3338,0.7478}},
	{1,{-159.3885,-356.7591,0.9042}},
	{0,{-159.3885,-356.7591,0.9042}},
	{0,{-238.8560,-274.7635,0.7491}},
	{0,{-266.2452,-273.7684,1.3606}},
	{0,{-479.6364,-269.6306,46.8227}},
	{0,{-738.6415,-244.1123,55.8440}},
	{0,{-930.6696,-235.2151,38.3850}},
	{0,{-954.9512,-267.3421,36.2725}},
	{0,{-1127.2024,-527.6874,30.0361}},
	{0,{-1199.4417,-725.4346,57.2638}},
	{0,{-1394.0016,-813.6325,81.2812}},
	{0,{-1682.1772,-759.7511,40.5603}},
	{0,{-1759.1646,-598.3143,15.9505}},
	{0,{-1780.5062,-576.2640,16.0070}},
	{0,{-1815.9708,-560.0258,15.8876}},
	{0,{-1803.9103,-361.1591,19.1933}},
	{0,{-1797.0063,-128.9246,5.3084}},
	{0,{-1811.9873,-114.1868,5.1679}},
	{0,{-1964.3723,-62.7383,25.4352}},
	{1,{-2032.3367,-67.7764,34.8424}},
	{0,{-2032.3367,-67.7764,34.8424}},
	{0,{-2201.4539,-67.3160,34.8417}},
	{0,{-2238.8613,-67.4324,34.8414}},
	{0,{-2250.8760,-57.2726,34.8425}},
	{0,{-2249.4824,138.3279,34.8427}},
	{0,{-2249.3821,306.6966,34.8339}}
};

////////////////////
stock Float:GetPointDistanceToPoint(Float:x1,Float:y1,Float:z1,Float:x,Float:y,Float:z)
{
	return floatsqroot(floatpower(floatabs(floatsub(x,x1)),2)+floatpower(floatabs(floatsub(y,y1)),2)+floatpower(floatabs(floatsub(z,z1)),2));
}
forward SetEngineStatus(carid,status, playerid);
public SetEngineStatus(carid,status, playerid)
{
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,status,status,alarm,doors,bonnet,boot,objective);
    VehicleInfo[carid][vEngine] = status;
	VehicleInfo[carid][vLights] = status;
    if(playerid != -1 && !IsAVelik(carid) && !IsAPlane(carid) && GetPlayerState(playerid)==2)
  		if(PlayerInfo[playerid][pGold])
		{
			PlayerTextDrawColor(playerid, speeddraw[playerid][2], (status)?COLOR_LIGHTBLUE:0xFFFFFFFF);
			PlayerTextDrawShow(playerid, speeddraw[playerid][2]);
			PlayerTextDrawColor(playerid, speeddraw[playerid][3], (status)?COLOR_LIGHTBLUE:0xFFFFFFFF);
			PlayerTextDrawShow(playerid, speeddraw[playerid][3]);
		}
    return true;
}
stock SetDoorsStatus(carid,status, playerid = -1)
{

	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,engine,lights,alarm,status,bonnet,boot,objective);
    if(playerid != -1 && GetPlayerState(playerid)==2 && !IsAVelik(carid) && !IsAPlane(carid))
    {
		if(PlayerInfo[playerid][pGold])
		{
			PlayerTextDrawColor(playerid, speeddraw[playerid][4], (status)?COLOR_LIGHTBLUE:0xFFFFFFFF);
			PlayerTextDrawShow(playerid, speeddraw[playerid][4]);
		}
    }
    return true;
}
stock SetBootStatus(carid,status)
{
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,status,objective);
    VehicleInfo[carid][vBoot] = status;
    return true;
}
stock SetBonnetStatus(carid,status)
{
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,engine,lights,alarm,doors,status,boot,objective);
    VehicleInfo[carid][vBonnet] = status;
    return true;
}
stock SetAlarmStatus(carid,status)
{
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,engine,lights,status,doors,bonnet,boot,objective);
    VehicleInfo[carid][vAlarm] = status;
    return true;
}
stock GetMaxSeat(modelid)
{
	switch(modelid)
	{
	case 596..598, 427, 490: return 4;
	case 599, 497, 528: return 2;
	}
	return -1;
}
stock GetFreeSeat(vehicleid)
{
	if(!vehicleid) return -1;
	new model = GetVehicleModelEx(vehicleid);
	new maxs = GetMaxSeat(model) - 1;
	new bool:seat[3],cnt;
	foreach(new i: Player)
	{
		if(!IsPlayerConnected(i) || GetPlayerVehicleID(i) != vehicleid) continue;
		new pseat = GetPlayerVehicleSeat(i);
		if(pseat < 1 || pseat > 3) continue;
		seat[pseat-1] = true;
		cnt++;
		if(cnt >= maxs) return -1;
	}
	for(new i;i<3;i++) if(!seat[i]) return i+1;
	return -1;
}
stock DeleteRadar(playerid)
{
	DestroyDynamic3DTextLabel(RadarInfo[playerid][rText]);
	DestroyDynamicObject(RadarInfo[playerid][rObject]);
	DestroyDynamicArea(RadarInfo[playerid][rArea]);
	DestroyDynamicArea(RadarInfo[playerid][rRemove]);
	return 1;
}
stock ReSetCarPrice(carid)
{
    CarInfo[carid][cCost] = GetCarPrice(carid);
    return true;
}
stock GetCarPrice(carid)
{
	new cost;
	switch(CarInfo[carid][cModel])
	{
		//дома на колёсах
		case 437: cost = 3200000;
		case 508: cost = 1700000;
		//
		case 541: cost = 3400000;
		case 411: cost = 4500000;
		case 560: cost = 1350000;
		case 451: cost = 3000000;
		case 415: cost = 700000;
		case 562: cost = 900000;
		case 559: cost = 1200000;
		case 429: cost = 1500000;
		case 603: cost = 870000;
		case 402: cost = 750000;
		case 579: cost = 900000;
		case 602: cost = 430000;
		case 554: cost = 600000;
		case 490: cost = 900000;
		case 400: cost = 250000;
		case 540: cost = 90000;
		case 445: cost = 110000;
		case 489: cost = 290000;
		case 506: cost = 1400000;
		case 482: cost = 200000;
		case 483: cost = 140000;
		case 600: cost = 300000;
		case 474: cost = 120000;
		case 549: cost = 180000;
		case 575: cost = 130000;
		case 487: cost = 1300000;
		case 469: cost = 330000;
		case 522: cost = 1000000;
		case 521: cost = 180000;
		case 461: cost = 90000;
		case 468: cost = 70000;
		case 586: cost = 45000;
		case 581: cost = 65000;
		case 463: cost = 50000;
		case 534: cost = 250000;
		case 419: cost = 130000;
		case 412: cost = 130000;
		case 405: cost = 170000;
		case 580: cost = 160000;
		case 426: cost = 110000;
		case 421: cost = 200000;
		case 491: cost = 230000;
		case 535: cost = 230000;
		case 462: cost = 15000;
		case 510: cost = 15000;
		case 481: cost = 15000;
		case 509: cost = 15000;
		case 496: cost = 100000;
		case 565: cost = 650000;
		case 589: cost = 215000;
		case 480: cost = 1100000;
		case 475: cost = 220000;
		case 542: cost = 70000;
		case 439: cost = 265000;
		case 576: cost = 95000;
		case 566: cost = 200000;
		case 558: cost = 790000;
		case 551: cost = 130000;
		case 567: cost = 160000;
		case 500: cost = 100000;
		case 533: cost = 400000;
		case 536: cost = 320000;
		case 477: cost = 690000;
		case 587: cost = 340000;
		case 492: cost = 110000;
		case 495: cost = 700000;
		case 473: cost = 150000;
		case 454: cost = 120000;
		case 452: cost = 500000;
		case 446: cost = 650000;
		case 434: cost = 350000;
		case 458: cost = 280000;
		////нуб кар
		case 401: cost = 90000;
		case 404: cost = 80000;
		case 410: cost = 65000;
		case 422: cost = 90000;
		case 436: cost = 78000;
		case 466: cost = 95000;
		case 478: cost = 85000;
		case 479: cost = 105000;
		case 507: cost = 115000;
		case 516: cost = 98000;
		case 517: cost = 79000;
		case 518: cost = 120000;
		case 526: cost = 80000;
		case 527: cost = 49000;
		case 529: cost = 97000;
		case 543: cost = 58000;
		case 545: cost = 210000;
		case 546: cost = 76000;
		case 547: cost = 81000;
		case 555: cost = 175000;
		case 561: cost = 510000;
		case 604: cost = 20000;
		case 605: cost = 20000;
		case 484: cost = 10000;
		case 471: cost = 70000;
		case 494: cost = 60000;
		case 502: cost = 60000;
		case 503: cost = 60000;
		///////
		default: cost = 180000;
	}
	return cost;
}
ShowDiceResult(diceid)
{
	new num = -1, pid = -1, rid = -1;
	for(new m; m < 5; m++)
	{
		if(GetPVarInt(StolGamer[diceid][m],"BonesTable")-1 == diceid)
		{
			if(!GetPVarInt(StolGamer[diceid][m],"BonesScore") && (GetPVarInt(StolGamer[diceid][m],"BonesTable")-1 == diceid) && !(PlayerInfo[StolGamer[diceid][m]][pJob] == JOB_GUIDE && InJob[StolGamer[diceid][m]]) && GetPVarInt(StolGamer[diceid][m], "BonesBet"))
			{
				SetPVarInt(StolGamer[diceid][m],"BonesScore",random(6)+1);
			}
			if(GetPVarInt(StolGamer[diceid][m],"BonesScore") > num)
			{
				num = GetPVarInt(StolGamer[diceid][m],"BonesScore");
				pid = StolGamer[diceid][m];
			}
			else if((GetPVarInt(StolGamer[diceid][m],"BonesScore") == num) && (pid != StolGamer[diceid][m]))rid = StolGamer[diceid][m];
		}
	}
	if(rid != -1 && TotalBets[diceid] > 1)
	{
		for(new i; i < 5; i++)
		{
			if(GetPVarInt(StolGamer[diceid][i],"BonesTable")-1 != diceid)continue;
			if((StolGamer[diceid][i] != pid && StolGamer[diceid][i] != rid) && (GetPVarInt(StolGamer[diceid][i],"BonesTable")-1 == diceid))
			{
				DeletePVar(StolGamer[diceid][i],"BonesBet");
				DeletePVar(StolGamer[diceid][i],"BonesScore");
			}
			DeletePVar(StolGamer[diceid][i],"BonesScore");
			SendClientMessage(StolGamer[diceid][i],COLOR_PURPLE,"Ничья. Начало дополнительного раунда");
		}
		pid = -1;
		rid = -1;
		TimeStavka[diceid] = 15;
		StolInfo[diceid][bScore] = 0;
		TotalBets[diceid] = 2;
	}
	else
	{
		new result[50];
		format(result,sizeof result,"%s выиграл $%d, выбросив %d",PlayerName[pid],StolInfo[diceid][bBank]/100*95,num);
		GiveMoney(pid, StolInfo[diceid][bBank]/100*95, "Dice Winner");
		PlayerPlaySound(pid, 31000, 0.0,0.0,0.0);  
		CasinoInfo[0][casBalance] += StolInfo[diceid][bBank]/100*2;
		CasinoInfo[0][casWin] += StolInfo[diceid][bBank]/100*2;
		pid = -1;
		TimeStavka[diceid] = 0;
		StolInfo[diceid][bBank] = 0;
		StolInfo[diceid][bGameStart] = 0;
		StolInfo[diceid][bBet] = 0;
		StolInfo[diceid][bScore] = 0;
		TotalBets[diceid] = 0;
		for(new i; i < 5; i++)
		{
			if(GetPVarInt(StolGamer[diceid][i],"BonesTable")-1 == diceid)
			{
				SendClientMessage(StolGamer[diceid][i],COLOR_PURPLE,result);
				DeletePVar(StolGamer[diceid][i],"BonesScore");
				DeletePVar(StolGamer[diceid][i],"BonesBet");
			}
		}
		new logtime[3],logdate[3],logtimestring[16];
		getdate(logdate[2],logdate[1],logdate[0]);
		gettime(logtime[0],logtime[1],logtime[2]);
		f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
		WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[diceid][pID],Name(diceid),-1,"Система","Выигрыш в кости",StolInfo[diceid][bBank]/100*95,PlayerIp[diceid],"127.0.0.1",GetMoney(diceid));
	}
	for(new i;i < 5;i++)TextDrawSetString(bonesscore[diceid][i],"--");
	UpdateBonesInfo(diceid);
	return 0;
}
FoolEndGame(foolid)
{
	FoolInfo[foolid][foolBank] = 0;
	FoolInfo[foolid][foolGamestart] = 0;
	FoolInfo[foolid][foolBet] = 0;
	FoolInfo[foolid][foolTotal] = 0;
	FoolInfo[foolid][foolAttack] = -1;
	FoolInfo[foolid][foolDefence] = -1;
	FoolInfo[foolid][foolNum] = 0;
	TextDrawSetString(FoolMenuTD[foolid][2], "Set Bet");
	for(new i; i < 4; i++)
	{
		TextDrawSetString(FoolPlayersTD[foolid][i+4],"--");
		if(FoolGamers[foolid][i] == INVALID_PLAYER_ID)continue;
		DeletePVar(FoolGamers[foolid][i],"FoolScore");
		DeletePVar(FoolGamers[foolid][i],"FoolBet");
		DeletePVar(FoolGamers[foolid][i],"FoolLost");
		DeletePVar(FoolGamers[foolid][i],"FoolTimer");
		TextDrawHideForPlayer(FoolGamers[foolid][i], FoolOtherTD[foolid][2]);
		TextDrawHideForPlayer(FoolGamers[foolid][i], FoolOtherTD[foolid][3]);
		TextDrawHideForPlayer(FoolGamers[foolid][i], FoolOtherTD[foolid][4]);
		HidePlayerCards(FoolGamers[foolid][i]);
	}
	UpdateFoolTable(foolid);
	return 1;
}
ShowFoolResult(playerid, foolid, percent){
	new result[50];
	format(result,sizeof result,"%s выиграл $%d в этой партии",PlayerName[playerid],FoolInfo[foolid][foolBank]/100*percent);
	GiveMoney(playerid, FoolInfo[foolid][foolBank]/100*percent, "Выигрыш в дурака");
	FoolInfo[foolid][foolBank] -= FoolInfo[foolid][foolBank]/100*percent;
	PlayerPlaySound(playerid, 31000, 0.0,0.0,0.0);  
	for(new i; i < 4; i++){
		if(FoolGamers[foolid][i] == INVALID_PLAYER_ID)continue;
		SendClientMessage(FoolGamers[foolid][i],COLOR_PURPLE,result);
	}
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Выигрыш в дурака",FoolInfo[foolid][foolBank]/100*percent,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
	return 1;
}
UpdateBonesInfo(id)
{
	new string[80];
	format(string,sizeof string,"Bet: $%d~n~Bank: $%i",StolInfo[id][bBet],StolInfo[id][bBank]);
	TextDrawSetString(bonesinfo[id],string);
	return 0;
}
ShowBonesMenu(playerid, stol)
{
	TogglePlayerControllable(playerid,0);
	SetPVarInt(playerid, "BonesTable", stol+1);
	if(StolCrupe[stol] == playerid)goto here;
	for(new i;i < 5;i++)
	{
		if(StolGamer[GetPVarInt(playerid,"BonesTable")-1][i] != INVALID_PLAYER_ID)continue;
		TextDrawSetString(bonesnames[GetPVarInt(playerid,"BonesTable")-1][i],PlayerName[playerid]);
		StolGamer[GetPVarInt(playerid,"BonesTable")-1][i] = playerid;
		StolInfo[GetPVarInt(playerid,"BonesTable")-1][bPlayers]++;
		SetPVarInt(playerid, "BonesSlot", i);
		break;
	}
	here:
	for(new i;i < 5;i++)
	{
		TextDrawShowForPlayer(playerid,bonesmenu[i]);
		TextDrawShowForPlayer(playerid,bonesnames[GetPVarInt(playerid,"BonesTable")-1][i]);
		TextDrawShowForPlayer(playerid,bonesscore[GetPVarInt(playerid,"BonesTable")-1][i]);
	}
	TextDrawShowForPlayer(playerid,bonestd[GetPVarInt(playerid,"BonesTable")-1]);
	TextDrawShowForPlayer(playerid,bonesinfo[GetPVarInt(playerid,"BonesTable")-1]);
	SelectTextDraw(playerid,0x0099FFAA);
	SetPVarInt(playerid,"showedbonesmenu",1);
	UpdateBonesTable(GetPVarInt(playerid,"BonesTable")-1);
	return 1;
}
BarList(playerid, casino = 0)
{
	new mes[560], str[96];
	for(new i; i < BAR_OBJECTS; i++)
	{
		format(str, sizeof(str),"%s [{93C722}$%d{ffffff}]\n", gBarObject[i], gBarPrice[i]);
		strcat(mes, str);
	}
	if(!casino)ShowPlayerDialogEx(playerid, 1235, 2, "{43CD80}Бар", mes, "Купить", "Выйти");
	else ShowPlayerDialogEx(playerid, 1233, 2, "{43CD80}Бар", mes, "Купить", "Выйти");
	return 1;
}
ShowRoulMenu(playerid)
{
	TogglePlayerControllable(playerid,0);
	for(new i;i < sizeof roultd;i++)TextDrawShowForPlayer(playerid,roultd[i]);
	TextDrawShowForPlayer(playerid,roulinfo[GetPVarInt(playerid,"RoulTable")-1]);
	SetPVarInt(playerid,"showedroulmenu",1);
	SelectTextDraw(playerid,0x43CD80AA);
	UpdateRoulTable(GetPVarInt(playerid,"RoulTable")-1);
	SetPlayerCameraPos(playerid, rl_coord[GetPVarInt(playerid,"RoulTable")-1][0],rl_coord[GetPVarInt(playerid,"RoulTable")-1][1],rl_coord[GetPVarInt(playerid,"RoulTable")-1][2]+3.5);
	SetPlayerCameraLookAt(playerid, rl_coord[GetPVarInt(playerid,"RoulTable")-1][0]-0.4,rl_coord[GetPVarInt(playerid,"RoulTable")-1][1],rl_coord[GetPVarInt(playerid,"RoulTable")-1][2]);
	if(!(PlayerInfo[playerid][pJob] == JOB_GUIDE && InJob[playerid]))RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rPlayers]++;
	else return RoulGamers[GetPVarInt(playerid,"RoulTable")-1][10] = playerid;
	for(new i; i < 10;i++)
	{
		if(RoulGamers[GetPVarInt(playerid,"RoulTable")-1][i] != INVALID_PLAYER_ID)continue;
		RoulGamers[GetPVarInt(playerid,"RoulTable")-1][i] = playerid;
		break;
	}
	return 1;
}
ShowFoolMenu(playerid)
{
	TogglePlayerControllable(playerid,0);
	SetPVarInt(playerid,"showedfool",1);
	new foolid = GetPVarInt(playerid,"FoolTable")-1;
	for(new i; i < 4; i++)
	{
		if(FoolGamers[foolid][i] != INVALID_PLAYER_ID)continue;
		TextDrawSetString(FoolPlayersTD[foolid][i],PlayerName[playerid]);
		FoolGamers[foolid][i] = playerid;
		FoolInfo[foolid][foolPlayers]++;
		SetPVarInt(playerid, "FoolSlot", i);
		break;
	}
	//Показ интерфейса
	for(new i; i < 8; i++)
	{
		if(i < 6)
		{
			TextDrawShowForPlayer(playerid, FoolCardsTD[foolid][i]);
			TextDrawShowForPlayer(playerid, BitCardsTD[foolid][i]);
		}
		if(i < 7)
			TextDrawShowForPlayer(playerid, FoolMenuTD[foolid][i]);
		TextDrawShowForPlayer(playerid, FoolPlayersTD[foolid][i]);
	}
	TextDrawShowForPlayer(playerid, FoolOtherTD[foolid][0]);
	TextDrawShowForPlayer(playerid, FoolOtherTD[foolid][1]);
	ShowPlayerCards(playerid);
	//
	SelectTextDraw(playerid,0x82CFFFFF);
	SetPlayerCameraPos(playerid, tablepos[foolid][0],tablepos[foolid][1],tablepos[foolid][2]+3.5);
	SetPlayerCameraLookAt(playerid, tablepos[foolid][0]-0.4,tablepos[foolid][1],tablepos[foolid][2]);
	UpdateFoolTable(foolid);
	return 1;
}
HideFoolMenu(playerid)
{
	new foolid = GetPVarInt(playerid,"FoolTable")-1;
	TogglePlayerControllable(playerid,1);
	FoolGamers[foolid][GetPVarInt(playerid, "FoolSlot")] = INVALID_PLAYER_ID;
	FoolInfo[foolid][foolPlayers]--;
	TextDrawSetString(FoolPlayersTD[foolid][GetPVarInt(playerid, "FoolSlot")],"--");
	TextDrawSetString(FoolPlayersTD[foolid][GetPVarInt(playerid, "FoolSlot")+4],"--");
	//Скрытие интерфейса
	for(new i; i < 8; i++)
	{
		if(i < 3)
			TextDrawHideForPlayer(playerid, TrumpCardsTD[foolid][i]);
		if(i < 5)
			TextDrawHideForPlayer(playerid, FoolOtherTD[foolid][i]);
		if(i < 6)
		{
			TextDrawHideForPlayer(playerid, FoolCardsTD[foolid][i]);
			TextDrawHideForPlayer(playerid, BitCardsTD[foolid][i]);
		}
		if(i < 7)
			TextDrawHideForPlayer(playerid, FoolMenuTD[foolid][i]);
		TextDrawHideForPlayer(playerid, FoolPlayersTD[foolid][i]);
	}
	HidePlayerCards(playerid);
	//
	if(GetPVarInt(playerid,"FoolBet") && !FoolInfo[foolid][foolGamestart])
	{
		GiveMoney(playerid, GetPVarInt(playerid,"FoolBet"), "Return Bet");
		FoolInfo[foolid][foolBank] -= GetPVarInt(playerid,"FoolBet");
		new logtime[3],logdate[3],logtimestring[16];
		getdate(logdate[2],logdate[1],logdate[0]);
		gettime(logtime[0],logtime[1],logtime[2]);
		f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
		WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Возврат ставки (Дурак)",GetPVarInt(playerid,"FoolBet"),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
	}
	UpdateFoolTable(foolid);
	DeletePVar(playerid,"FoolBet");
	if(GetPVarInt(playerid, "FoolScore"))FoolInfo[foolid][foolTotal]--;
	DeletePVar(playerid,"showedfool");
	DeletePVar(playerid,"FoolTable");
	DeletePVar(playerid,"FoolSlot");
	DeletePVar(playerid,"FoolLost");
	DeletePVar(playerid,"FoolScore");
	DeletePVar(playerid,"FoolTimer");
	DeletePVar(playerid, "NeedCards");
	CancelSelectTextDraw(playerid);
	SetCameraBehindPlayer(playerid);
	if(FoolInfo[foolid][foolPlayers] == 1 && FoolInfo[foolid][foolGamestart])
	{
		for(new i; i < 4; i++)
		if(FoolGamers[foolid][i] != INVALID_PLAYER_ID)
		{
			ShowFoolResult(FoolGamers[foolid][i], foolid, 100);
			FoolEndGame(foolid);
			break;
		}
	}
	for(new i; i < 36; i++)
		SetString(PlayerCards[playerid][i], "");
	return 1;
}
HideRoulMenu(playerid)
{
	TogglePlayerControllable(playerid,1);
	for(new i;i < 11;i++)
	{
		if(RoulGamers[GetPVarInt(playerid,"RoulTable")-1][i] != playerid)continue;
		RoulGamers[GetPVarInt(playerid,"RoulTable")-1][i] = INVALID_PLAYER_ID;
		break;
	}
	for(new i;i < sizeof roultd;i++)
		TextDrawHideForPlayer(playerid,roultd[i]);
	TextDrawHideForPlayer(playerid,roulinfo[GetPVarInt(playerid,"RoulTable")-1]);
	if(!(PlayerInfo[playerid][pJob] == JOB_GUIDE && InJob[playerid]))RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rPlayers]--;
	if(GetPVarInt(playerid,"RoulBet") && !RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rGameStart])
	{
		GiveMoney(playerid, GetPVarInt(playerid,"RoulBet"), "Return Bet");
		new logtime[3],logdate[3],logtimestring[16];
		getdate(logdate[2],logdate[1],logdate[0]);
		gettime(logtime[0],logtime[1],logtime[2]);
		f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
		WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Возврат ставки на рулетку",GetPVarInt(playerid,"RoulBet"),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
	}
	UpdateRoulTable(GetPVarInt(playerid,"RoulTable")-1);
	DeletePVar(playerid,"RoulBet");
	DeletePVar(playerid,"RoulPoint");
	DeletePVar(playerid,"showedroulmenu");
	DeletePVar(playerid,"RoulTable");
	SetCameraBehindPlayer(playerid);
	CancelSelectTextDraw(playerid);
	DestroyDynamicObject(Fishka[playerid]);
	return 1;
}
HideBonesMenu(playerid)
{
	TogglePlayerControllable(playerid,1);
	if(StolCrupe[GetPVarInt(playerid,"BonesTable")-1] == playerid)StolCrupe[GetPVarInt(playerid,"BonesTable")-1] = INVALID_PLAYER_ID;
	else
	{
		StolGamer[GetPVarInt(playerid,"BonesTable")-1][GetPVarInt(playerid, "BonesSlot")] = INVALID_PLAYER_ID;
		StolInfo[GetPVarInt(playerid,"BonesTable")-1][bPlayers]--;
		TextDrawSetString(bonesnames[GetPVarInt(playerid,"BonesTable")-1][GetPVarInt(playerid, "BonesSlot")],"--");
		TextDrawSetString(bonesscore[GetPVarInt(playerid,"BonesTable")-1][GetPVarInt(playerid, "BonesSlot")],"--");
	}
	for(new i;i < 5;i++)
	{
		TextDrawHideForPlayer(playerid,bonesnames[GetPVarInt(playerid,"BonesTable")-1][i]);
		TextDrawHideForPlayer(playerid,bonesscore[GetPVarInt(playerid,"BonesTable")-1][i]);
		TextDrawHideForPlayer(playerid,bonesmenu[i]);
	}
	if(GetPVarInt(playerid,"BonesBet") && !StolInfo[GetPVarInt(playerid,"BonesTable")-1][bGameStart])
	{
		GiveMoney(playerid, GetPVarInt(playerid,"BonesBet"), "Return Bet");
		StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBank] -= GetPVarInt(playerid,"BonesBet");
		new logtime[3],logdate[3],logtimestring[16];
		getdate(logdate[2],logdate[1],logdate[0]);
		gettime(logtime[0],logtime[1],logtime[2]);
		f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
		WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Возврат ставки в кости",GetPVarInt(playerid,"BonesBet"),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
	}
	TextDrawHideForPlayer(playerid,bonestd[GetPVarInt(playerid,"BonesTable")-1]);
	TextDrawHideForPlayer(playerid,bonesinfo[GetPVarInt(playerid,"BonesTable")-1]);
	UpdateBonesTable(GetPVarInt(playerid,"BonesTable")-1);
	UpdateBonesInfo(GetPVarInt(playerid,"BonesTable")-1);
	if(GetPVarInt(playerid, "BonesBet"))TotalBets[GetPVarInt(playerid,"BonesTable")-1]--;
	DeletePVar(playerid,"BonesBet");
	DeletePVar(playerid,"showedbonesmenu");
	DeletePVar(playerid,"BonesTable");
	DeletePVar(playerid,"BonesSlot");
	CancelSelectTextDraw(playerid);
	return 1;
}
UpdateBonesTable(id)
{
	static table[] = "{88db96}Кости{FFFFFF}\n\nСтол №%i\nСвободных мест: {7396FB}%d";
	new string[sizeof table];
	format(string,sizeof string,table,id+1,5-StolInfo[id][bPlayers]);
	UpdateDynamic3DTextLabelText(bones3d[id], -1, string);
}
UpdateFoolTable(id)
{
	new table[136];
	if(id < 4)
	{
		if(!FoolInfo[id][foolGamestart])table = "{88db96}Карточная игра\nПодкидной дурак{FFFFFF}\n\nСтол №%i\nСвободных мест: {7396FB}%i";
		else table = "{88db96}Карточная игра\nПодкидной дурак{FFFFFF}\n\nСтол №%i\nСвободных мест: {7396FB}%i\n\n{ff4400}Игра начата";
	}
	else
	{
		if(!FoolInfo[id][foolGamestart])table = "{88db96}Карточная игра\nПереводной дурак{FFFFFF}\n\nСтол №%i\nСвободных мест: {7396FB}%i";
		else table = "{88db96}Карточная игра\nПереводной дурак{FFFFFF}\n\nСтол №%i\nСвободных мест: {7396FB}%i\n\n{ff4400}Игра начата";
	}
	new string[sizeof table];
	format(string,sizeof string,table,id+1,4-FoolInfo[id][foolPlayers]);
	UpdateDynamic3DTextLabelText(FoolInfo[id][foolText], -1, string);
}
LastRoul(tableid, number)
{
	format(lastroll[6][tableid], 3, lastroll[5][tableid]);
	format(lastroll[5][tableid], 3, lastroll[4][tableid]);
	format(lastroll[4][tableid], 3, lastroll[3][tableid]);
	format(lastroll[3][tableid], 3, lastroll[2][tableid]);
	format(lastroll[2][tableid], 3, lastroll[1][tableid]);
	format(lastroll[1][tableid], 3, lastroll[0][tableid]);
	format(lastroll[0][tableid], 3, "%d", number);
	new str[50];
	format(str, sizeof(str), "%s~n~%s~n~%s~n~%s~n~%s~n~%s~n~%s~n~", lastroll[6][tableid], lastroll[5][tableid], lastroll[4][tableid], lastroll[3][tableid], lastroll[2][tableid], lastroll[1][tableid], lastroll[0][tableid]);
	TextDrawSetString(roulinfo[tableid], str);
	return 1;
}
ShowRollResult(tableid, roll)
{
	LastRoul(tableid, roll);
	RoulInfo[tableid][rGameStart] = 0;
	RoulInfo[tableid][rBets] = 0;
	for(new i; i < 11; i++)
	{
		if(GetPVarInt(RoulGamers[tableid][i],"RoulTable")-1 != tableid)continue;
		PlayerPlaySound(RoulGamers[tableid][i], 33403, 0.0,0.0,0.0); 
		new string[100];
		f(string, "Выпало число %d", roll);
		SendClientMessage(RoulGamers[tableid][i], COLOR_PURPLE, string);
		if(!GetPVarInt(RoulGamers[tableid][i],"RoulBet"))continue;
		DestroyDynamicObject(Fishka[RoulGamers[tableid][i]]);
		switch(GetPVarInt(RoulGamers[tableid][i],"RoulPoint"))
		{
		case 0:
			{
				if(roll == 0 && GetPVarInt(RoulGamers[tableid][i], "RoulBet") && GetPVarInt(RoulGamers[tableid][i],"RoulPoint") == 0)
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*36, "Roulette winner");
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*36,PlayerIp[i],"127.0.0.1",GetMoney(i));
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*36);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
				}
			}
		case 40:
			{
				if(roll < 1 || roll > 12)continue;
				GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3, "Roulette winner");
				format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*3,PlayerIp[i],"127.0.0.1",GetMoney(i));
				SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
				PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
			}
		case 41:
			{
				if(roll < 13 || roll > 24)continue;
				GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3, "Roulette winner");
				format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3);
				SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*3,PlayerIp[i],"127.0.0.1",GetMoney(i));
				PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
			}
		case 42:
			{
				if(roll < 25)continue;
				GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3, "Roulette winner");
				format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3);
				SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*3,PlayerIp[i],"127.0.0.1",GetMoney(i));
				PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
			}
		case 13:
			{
				if(roll == 3 || roll == 6 || roll == 9 || roll == 12 || roll == 15 || roll == 18 || roll == 21 || roll == 24 || roll == 27
				|| roll == 30 || roll == 33 || roll == 36)
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3, "Roulette winner");
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*3,PlayerIp[i],"127.0.0.1",GetMoney(i));
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
				}
			}
		case 26:
			{
				if(roll == 2 || roll == 5 || roll == 8 || roll == 11 || roll == 14 || roll == 17 || roll == 20 || roll == 23
				 || roll == 26 || roll == 29 || roll == 32 || roll == 35)
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3, "Roulette winner");
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*3,PlayerIp[i],"127.0.0.1",GetMoney(i));
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
				}
			}
		case 39:
			{
				if(roll == 1 || roll == 4 || roll == 7 || roll == 10 || roll == 13 || roll == 16 || roll == 19
				 || roll == 22 || roll == 25 || roll == 28 || roll == 31 || roll == 34)
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3, "Roulette winner");
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*3);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*3,PlayerIp[i],"127.0.0.1",GetMoney(i));
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
					break;
				}
			}
		case 1..12:
			{
				if(roll == (GetPVarInt(RoulGamers[tableid][i],"RoulPoint")*3) && GetPVarInt(RoulGamers[tableid][i], "RoulBet"))
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*36, "Roulette winner");
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*36);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*36,PlayerIp[i],"127.0.0.1",GetMoney(i));
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
				}
			}
		case 14..25:
			{
				if(roll == (((GetPVarInt(RoulGamers[tableid][i],"RoulPoint")-13)*3)-1) && GetPVarInt(RoulGamers[tableid][i], "RoulBet"))
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*36, "Roulette winner");
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*36);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*36,PlayerIp[i],"127.0.0.1",GetMoney(i));
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
				}
			}
		case 27..38:
			{
				if(roll == (((GetPVarInt(RoulGamers[tableid][i],"RoulPoint")-26)*3)-2) && GetPVarInt(RoulGamers[tableid][i], "RoulBet"))
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*36, "Roulette winner");
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*36);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*36,PlayerIp[i],"127.0.0.1",GetMoney(i));
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
				}
			}
		case 43:
			{
				if(roll < 1 || roll > 18)continue;
				GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2, "Roulette winner");
				format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2);
				SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*2,PlayerIp[i],"127.0.0.1",GetMoney(i));
				PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
			}
		case 44:
			{
				if(roll == 2 || roll == 4 || roll == 6 || roll == 8 || roll == 10 || roll == 12 || roll == 14 || roll == 16 ||
					 roll == 18 || roll == 20 || roll == 22 || roll == 24 || roll == 26 || roll == 28 || roll == 30 ||
					  roll == 32 || roll == 34 || roll == 36)
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2, "Roulette winner");
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*2,PlayerIp[i],"127.0.0.1",GetMoney(i));
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
				}
			}
		case 46:
			{
				if(roll == 2 || roll == 4 || roll == 6 || roll == 8 || roll == 10 || roll == 11 || roll == 13 || roll == 15 || roll == 17 ||
					roll == 20 || roll == 22 || roll == 24 || roll == 26 || roll == 28 || roll == 29 || roll == 31 || roll == 33 || roll == 35)
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2, "Roulette winner");
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*2,PlayerIp[i],"127.0.0.1",GetMoney(i));
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
				}
			}
		case 45:
			{
				if(roll != 2 && roll != 4 && roll != 6 && roll != 8 && roll != 10 && roll != 11 && roll != 13 && roll != 15 && roll != 17 &&
					roll != 20 && roll != 22 && roll != 24 && roll != 26 && roll != 28 && roll != 29 && roll != 31 && roll != 33 && roll != 35 && roll != 0)
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2, "Roulette winner");
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*2,PlayerIp[i],"127.0.0.1",GetMoney(i));
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
				}
			}
		case 47:
			{
				if(roll == 1 || roll == 3 || roll == 5 || roll == 7 || roll == 9 || roll == 11 || roll == 13 || roll == 15 ||
					 roll == 17 || roll == 19 || roll == 21 || roll == 23 || roll == 25 || roll == 27 || roll == 29 ||
					  roll == 31 || roll == 33 || roll == 35)
				{
					GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2, "Roulette winner");
					format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2);
					SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*2,PlayerIp[i],"127.0.0.1",GetMoney(i));
					PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
				}
			}
		case 48:
			{
				if(roll < 19)continue;
				GiveMoney(RoulGamers[tableid][i], GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2, "Roulette winner");
				format(string,sizeof string,"Ваш выигрыш составил $%d",GetPVarInt(RoulGamers[tableid][i], "RoulBet")*2);
				SendClientMessage(RoulGamers[tableid][i],COLOR_PURPLE,string);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Выигрыш ставки на рулетку",GetPVarInt(RoulGamers[tableid][i],"RoulBet")*2,PlayerIp[i],"127.0.0.1",GetMoney(i));
				PlayerPlaySound(RoulGamers[tableid][i], 31000, 0.0,0.0,0.0); 
			}
		}
	}
	ClearRoulette(tableid);
	return 1;
}
ClearRoulette(tableid)
{
	for(new i; i < 11; i++)
	{
		if(RoulGamers[tableid][i] == INVALID_PLAYER_ID)continue;
		if(GetPVarInt(RoulGamers[tableid][i],"RoulBet"))
		{
			DeletePVar(RoulGamers[tableid][i],"RoulBet");
			DeletePVar(RoulGamers[tableid][i],"RoulPoint");
		}
	}
	return 1;
}
UpdateRoulTable(id)
{
	static str[] = "{88db96}Американская рулетка{FFFFFF}\n\nСтол №%i\nСвободных мест: {7396FB}%d";
	new string[sizeof str];
	format(string,sizeof string,str,id+1,10-RoulInfo[id][rPlayers]);
	UpdateDynamic3DTextLabelText(roul3d[id], -1, string);
}
stock IsASuccesIP(const ip[], const original[])
{
	new IP[4][4], Or[4][4], strvv[26], strv[26];
	split(ip,IP,'.');
	format(strv,sizeof(strv),"%s.%s",IP[0],IP[1]);
	split(original,Or,'.');
	format(strvv,sizeof(strvv),"%s.%s",Or[0],Or[1]);
	if(strcmp(strv,strvv, true)) return false;
	return true;
}
public OnGameModeInit()
{
	#if defined PROFILER_INC
		Profiler_Start();
	#endif
	for(new i; i < 15; i++){
		for(new x; x < 20; x++){
			ItemsCount[i][x] = random(2);
		}
	}
	Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 650); 
	SendRconCommand("rcon_password 4y7c8ZIazp13yzy8");
	#if defined PROFILER_INC
	SendRconCommand("hostname GGRP.ru Test Server");
	#else
	SendRconCommand("hostname GGRP.ru "Mode_City);
	#endif
	SetGameModeText(Mode_Name);
	SendRconCommand("mapname San Andreas");
	SendRconCommand("language Russian");
	SendRconCommand("weburl "Mode_Site);
	MapAndreas_Init(MAP_ANDREAS_MODE_MINIMAL);
	Iter_Clear(OWNABLECARS);
    ConnectMySQL();
	mysql_pquery(mysql, "UPDATE `accounts` SET `Online_status` = '1001'");
	LoadHouses();
	LoadPromo();
	LoadParking();
    LoadBiz();
	LoadCarServices();
	LoadCasino();
    LoadOrgs();
    LoadGangZones();
	LoadFactory();
	LoadKvartir();
	LoadPodeezd();
	BildboardLoad();
    ShowPlayerMarkers(0);
    LimitPlayerMarkerRadius(70.0);
    ManualVehicleEngineAndLights();
   	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	SetNameTagDrawDistance(20.0);
   	ShowPlayerMarkers(2);
	Weather = WeatherIDs[random(sizeof WeatherIDs)];
	SetWeather(Weather);
   	SetGravity(0.012);
	LoadInforamtion();
	//Reset govtext
	for(new i; i < MAX_ORGS; i++)
		SetString(GovText[i], "None");
	//Рулетка телефона
	for(new i; i < 4; i++)
	{
		LastRoll[i][lrObject] = 19222;
		LastRoll[i][lrColor] = 0;
		strmid(LastRoll[i][lrWinner],"-",0,2,2);
	}
	//Рулетка телефона
	newbiearea = CreateDynamicSphere(1774.8228,-1647.9200,20.1919, 25.0);
	/*************Casino*************/
	for(new a; a < 4; a++)
	{
		BonesArea[a] = CreateDynamicSphere(bonepos[a][0],bonepos[a][1],bonepos[a][2],2.0);
		RoulArea[a] = CreateDynamicSphere(rl_coord[a][0],rl_coord[a][1],rl_coord[a][2],2.0);
	}
	for(new i; i < 4; i++)
	{
		static texst[] = "{88db96}Кости{FFFFFF}\n\nСтол №%i\nСвободных мест: {7396FB}%i";
		new string[sizeof texst];
		format(string,sizeof string,texst,i+1,5-StolInfo[i][bPlayers]);
		bones3d[i] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, bonepos[i][0],bonepos[i][1],bonepos[i][2] + 1.5, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
		static str2[] = "{88db96}Американская рулетка{FFFFFF}\n\nСтол №%i\nСвободных мест: {7396FB}%i";
		new string2[sizeof str2];
		format(string2,sizeof string2,str2,i+1,10-RoulInfo[i][rPlayers]);
		roul3d[i] = CreateDynamic3DTextLabel(string2, 0xFFFFFFFF, rl_coord[i][0],rl_coord[i][1]-1.2,rl_coord[i][2]+1.5, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	}
	CasinoBar = CreateDynamicPickup(1274, 23, 2254.5142,1797.5720,1028.9517);
	CreateDynamic3DTextLabel(" Бар ",COLOR_VALIK,2254.5142,1797.5720,1028.9517,7.0);
	for(new i; i < MAX_FOOL; i++)
	{
		new str2[86];
		if(i < 4)str2 = "{88db96}Карточная игра\nПодкидной дурак{FFFFFF}\n\nСтол №%i\nСвободных мест: {7396FB}%i";
		else str2 = "{88db96}Карточная игра\nПереводной дурак{FFFFFF}\n\nСтол №%i\nСвободных мест: {7396FB}%i";
		new string2[sizeof str2];
		format(string2,sizeof string2,str2,i+1,4-FoolInfo[i][foolPlayers]);
		FoolInfo[i][foolText] = CreateDynamic3DTextLabel(string2, 0xFFFFFFFF, tablepos[i][0],tablepos[i][1]-1.2,tablepos[i][2]+1.5, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
		FoolInfo[i][foolArea] = CreateDynamicSphere(tablepos[i][0],tablepos[i][1],tablepos[i][2],2.0);
	}
	for(new i; i < MAX_VEHICLES; i++){
		VehicleInfo[i][vID] = -1;
	}
	/*************Casino*************/
	if(GLS[66]==0)
    {
		mysql_query(mysql,"UPDATE `ownable` SET `OnNumber`='The State', `Register`='The State', `OnRegister`='The State', `Number`='SA'", false);
	    mysql_query(mysql,"UPDATE `accounts` SET `AskBan`='0', `GetBonus`=0 ;");
	    GLS[66]=1;
    }
	GLS[42]+=5000;
	CreateDynamicPickup(1274, 23, 2564.4939, 1778.0359, 1059.7586,-1); // ????? ??????
	CreateDynamic3DTextLabel("Магазин аксессуаров\n\n{C9EAFF}~k~~SNEAK_ABOUT~",-1,2564.4939, 1778.0359, 1059.7586,3.0);
	CreateDynamic3DTextLabel("Автомат с бесплатной едой\n\n{C9EAFF}~k~~SNEAK_ABOUT~",-1,-1349.3528,493.8062,11.1953,3.0);

	for(new i;i<sizeof(phonepos);i++) CreateDynamic3DTextLabel("Телефонная будка\n{C9EAFF}Нажмите ~k~~SNEAK_ABOUT~, чтобы вызвать такси",COLOR_GREEN,phonepos[i][0],phonepos[i][1],phonepos[i][2],10.0,-1,-1,1);

	/**************************Завод*****************************/
	for(new l; l < 8; l++)
	{
		for(new i; i < 7; i++)
		{
			WineBottles[l][i] = CreateDynamicObject(1484, BottlesPos[l][i][0], BottlesPos[l][i][1], BottlesPos[l][i][2], -8.70000, 31.98000, -1.56000);
		}
	}
	ChanText = CreateDynamic3DTextLabel("{D94141}Котёл для варки\n\n{C9EAFF}Ожидает заполнения\n{43CD80}Загружено: 0/1000", -1, 1188.9171,1292.0785,1054.1406, 50.0);
	ac_CreateDynamicCP(BoxCP[0][0],BoxCP[0][1],1206.979614, 1293.1222, 1051.7373, 1.1);
	ac_CreateDynamicCP(BoxCP[1][0],BoxCP[1][1],1212.307739, 1293.1222, 1051.7373, 1.1);
	ac_CreateDynamicCP(BoxCP[2][0],BoxCP[2][1],1212.307739, 1290.8542, 1051.7373, 1.1);
	ac_CreateDynamicCP(BoxCP[3][0],BoxCP[3][1],1206.979614, 1290.8542, 1051.7373, 1.1);
	ac_CreateDynamicCP(FactoryCP[0][0],FactoryCP[0][1],1190.9274,1298.5110,1051.7373, 1.0);//pick
	ac_CreateDynamicCP(FactoryCP[1][0],FactoryCP[1][1],1195.0403,1280.1219,1051.7373, 1.0);//down
	ac_CreateDynamicCP(FactoryCP[2][0],FactoryCP[2][1],1187.4084,1306.0920,1051.7373, 1.0);//down ready
	/**************************Завод*****************************/
	ac_CreateDynamicCP(PaintArea[0][0], PaintArea[0][1], 2496.8916,2775.6079,10.8244, 1.0);
	CreateDynamic3DTextLabel("{D94141}Регистрация участников\n\n{FFFFFF}Соревнования по пейнтболу",-1,2496.8916,2775.6079,10.8244,50.0);
	ac_CreateDynamicCP(PaintArea[1][0], PaintArea[1][1], 2496.8616,2771.4331,10.8242, 1.0); 
	CreateDynamic3DTextLabel("{D94141}Список победителей\n\n{FFFFFF}Соревнования по пейнтболу",-1,2496.8616,2771.4331,10.8242,50.0);
	/**************************Шахта*****************************/
	for(new l; l < 28; l++)//0-8 алмазы, 9-19 металл, 20-27 золото
	{
		switch(l){
		case 0..8:CreateDynamic3DTextLabel("Место добычи алмазов",COLOR_SYSTEM,MinerPos[l][0],MinerPos[l][1],MinerPos[l][2],1.0);
		case 9..19:CreateDynamic3DTextLabel("Место добычи металла",COLOR_SYSTEM,MinerPos[l][0],MinerPos[l][1],MinerPos[l][2],1.0);
		case 20..27:CreateDynamic3DTextLabel("Место добычи золота",COLOR_SYSTEM,MinerPos[l][0],MinerPos[l][1],MinerPos[l][2],1.0);
		}
		ac_CreateDynamicCP(MinerInfo[l][0],MinerInfo[l][1],MinerPos[l][0],MinerPos[l][1],MinerPos[l][2], 1.0, -1, -1, -1, 5.0);
	}
	ac_CreateDynamicCP(DownCP[0],DownCP[1],872.4249,-170.8391,1034.4962, 1.0, -1, -1, -1, 15.0);
	CreateDynamic3DTextLabel("Ветка добычи металла\n{FFFFFF}Оплата: $200",COLOR_GRAY,899.7666,-187.4552,1036.0688,5.0);
	CreateDynamic3DTextLabel("Ветка добычи золота\n{FFFFFF}Оплата: $320",COLOR_GOLD,856.4647,-185.7963,1036.0691,5.0);
	CreateDynamic3DTextLabel("Ветка добычи алмазов\n{FFFFFF}Оплата: $460",COLOR_LIGHTBLUE,856.8464,-173.4915,1036.0691,5.0);
	/**************************Шахта*****************************/
	/*3D Метки*/
	CreateDynamic3DTextLabel("Регистрация семьи\n\n{C9EAFF}1.000.000$",COLOR_VALIK,-1361.0114,551.9227,1045.9265,3.0);
	CreateDynamic3DTextLabel("Заказ рекламного баннера\nЦена:{FFFFFF} 5.000$",COLOR_GREEN,-1364.3469,548.8475,1045.9324,3.0);
	
    CreateObject(14847, 246.23441, 117.80470, 1005.60938,   360.00000, 360.00000, 180.00000);
	CreateObject(15048, 2315.48, -1144.89, 1053.29,   360.00, 360.00, 360.00);
	CreateObject(15059, 2315.48, -1144.89, 1053.29,   360.00, 360.00, 360.00);
	
	healthpd[0] = CreatePickupEx(1240, 1,1720.0469,2267.2581,1422.9221, -1);//pd
	healthpd[1] = CreatePickupEx(1240, 1,1460.1013,-1662.6722,1518.1765, -1);
	healthpd[2] = CreatePickupEx(1240, 1,214.4528,107.6572,1003.2188, -1);
	healthpd[3] = CreatePickupEx(1240, 1,256.6305,86.2860,1002.4453, -1);
	healthpd[4] = CreatePickupEx(1240, 1,259.8683,109.7639,1003.2188, -1);
	healthpd[5] = CreatePickupEx(1240, 1,-2419.6069,-498.8875,1401.0900, -1);
	healthpd[6] = CreatePickupEx(1240, 1,1708.7021,-1670.1687,23.70570, -1);//cnn
    CreatePickupEx(1279, 1,1913.8906,2206.6763,1501.8960, -1);
	CoinsPick = CreateDynamicPickup(1852, 2, 2250.3972,1792.6885,1028.9517, 2);
    for(new i;i<20;i++) ChetInfo[i]=-1;
	CreateDynamic3DTextLabel("Эбби\n\n{FFFFFF}Чтобы поговорить, нажмите ~k~~SNEAK_ABOUT~",COLOR_VALIK,1774.8309,-1654.0077,20.3739,5.0);
	CreateDynamic3DTextLabel("Лэнс [Квестовый персонаж]\n\n{FFFFFF}Чтобы поговорить, нажмите ~k~~SNEAK_ABOUT~",COLOR_VALIK,1781.2798,-1650.7191,20.1869,1.5);

	CreateDynamic3DTextLabel("Проверка заявлений на регистрацию номера",-1,-1619.9810,649.4741,-5.2422,5.0);
	CreateDynamic3DTextLabel("Регистрация автомобильных номеров",-1,-1619.8113,653.5823,-5.2422,5.0);
	CreateDynamic3DTextLabel("Получение паспорта\n\n{C9EAFF}Нажмите ~k~~SNEAK_ABOUT~",COLOR_VALIK,-1369.2617,543.1968,1042.1315,3.0);
	//LV
	CreatePickupEx(2358,2,154.3891,1903.3417,18.7570, -1);
    CreatePickupEx(2358,2,141.1707,1875.4081,17.8434, -1);
    CreatePickupEx(2358,2,115.3891,1875.2244,17.8359, -1);
    CreatePickupEx(2358,2,117.9125,1871.2745,17.8359, -1);
    CreatePickupEx(2358,2,141.1704,1875.4607,17.8434, -1);
    CreatePickupEx(2358,2,137.3782,1879.5315,17.8359, -1);
    CreatePickupEx(2358,2,202.5459,1861.9189,13.1406, -1);
    CreatePickupEx(2358,2,193.3672,1931.5112,17.6406, -1);
	//
	ac_CreateDynamicCP(AlkCP[0][0],AlkCP[0][1],-2298.6042,1809.7234,34.8059, 1.1);
	CreateDynamic3DTextLabel("Вход в тюремные блоки (1-5)",0xFF4400FF,-2298.6042,1809.7234,34.8059,13.0);
	ac_CreateDynamicCP(AlkCP[1][0],AlkCP[1][1],-2215.4180,1839.9738,1054.9347, 1.1);
	CreateDynamic3DTextLabel("Выход в тюремный двор",0xFF4400FF,-2215.4180,1839.9738,1054.9347,13.0);
	ac_CreateDynamicCP(AlkCP[2][0],AlkCP[2][1],-2156.0908,1837.1777,1056.1762, 1.1);
	for(new i; i < sizeof AlkatrazDoors; i++)
	{
		if(i < 33)
		{
			CreateDynamic3DTextLabel("Вентиляция\n{ffffff}Для начала побега используйте {ff4400}'/jb'",0xFF4400FF,AlkatrazVent[i][0],AlkatrazVent[i][1],AlkatrazVent[i][2]-0.4,1.0);
			CreateDynamic3DTextLabel("Пульт\n{ffffff}Нажмите N",0xFF4400FF,AlkatrazToogle[i][0],AlkatrazToogle[i][1],AlkatrazToogle[i][2],2.0);
		}
		AlkGate[i] = CreateDynamicObject(19303,AlkatrazDoors[i][alClose_X],AlkatrazDoors[i][alClose_Y],AlkatrazDoors[i][alClose_Z],0.0,0.0,90.0,AlkatrazDoors[i][alWorld]);
	}
	AlkatrazPickup = CreateDynamicPickup(1275,23,-2207.5029,1792.0183,1054.9347,-1);
	CreateDynamic3DTextLabel("Пульт управления\n{ffffff}Нажмите N",0xFF4400FF,-2208.7266,1789.3815,1054.9576,2.0);
	//
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,154.3891,1903.3417,18.7570,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,141.1707,1875.4081,17.8434,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,115.3891,1875.2244,17.8359,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,117.9125,1871.2745,17.8359,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,137.3782,1879.5315,17.8359,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,202.5459,1861.9189,13.1406,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,193.3672,1931.5112,17.6406,3.0);
	CreateDynamic3DTextLabel("Посигнальте для проезда",COLOR_SYSTEM,282.1989, 1821.9396, 17.1344,13.0);
	CreateDynamic3DTextLabel("Посигнальте для проезда",COLOR_SYSTEM,289.6989, 1821.9396, 17.1344,13.0);
	//LS
	CreatePickupEx(2358,2,-1495.1292,406.3829,3.0847, -1);
    CreatePickupEx(2358,2,-1513.8723,422.4987,7.1846, -1);
    CreatePickupEx(2358,2,-1500.0229,384.3810,7.1846, -1);
    CreatePickupEx(2358,2,-1548.2480,460.4911,7.1975, -1);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,-1548.2480,460.4911,7.1975,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,-1500.0229,384.3810,7.1846,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,-1513.8723,422.4987,7.1846,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,-1495.1292,406.3829,3.0847,3.0);
	//LS
	CreatePickupEx(2358,2,2766.8298,-2517.4626,13.6418, -1);
    CreatePickupEx(2358,2,2733.4961,-2513.3254,13.6641, -1);
    CreatePickupEx(2358,2,2720.8320,-2487.6189,13.7089, -1);
	CreatePickupEx(2358,2,2720.8445,-2417.5535,13.6280, -1);
    CreatePickupEx(2358,2,2726.2590,-2384.1726,13.6328, -1);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,2766.8298,-2517.4626,13.6418,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,2733.4961,-2513.3254,13.6641,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,2720.8320,-2487.6189,13.7089,3.0);
	CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,2720.8445,-2417.5535,13.6280,3.0);
    CreateDynamic3DTextLabel("Пакет материалов\n[~k~~SNEAK_ABOUT~]",COLOR_GRAY,2726.2590,-2384.1726,13.6328,3.0);
	////казино
	CreatePickupEx(1277,1,1473.5546,659.3191,979.1759,-1);
	CreateDynamic3DTextLabel("Получение банковской карты\nСтоимость операции $1000\n\n{C9EAFF}Нажмите ~k~~SNEAK_ABOUT~",-1,1473.5546,659.3191,979.1759,4.0);
	//
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2237.6855, 1815.2903, 1029.5364,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2246.5885, 1815.2903, 1029.5364,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2252.9194, 1815.2903, 1029.5364,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2255.3544, 1808.9593, 1029.5364,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2250.9715, 1808.9594, 1029.5364,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2239.2834, 1808.9594, 1029.5364,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2234.9004, 1808.9594, 1029.5364,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2252.0713, 1833.0803, 1029.5240,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2243.0713, 1833.0803, 1029.5240,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2236.5713, 1833.0803, 1029.5240,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2250.7933, 1839.2903, 1029.5240,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2254.9572, 1839.2903, 1029.5240,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2238.9532, 1839.2903, 1029.5240,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2234.4531, 1839.2903, 1029.5240,5.0);
	//
    CreatePickupEx(1239, 23,1288.3657,-1267.7411,20.6199, -1);
    CreatePickupEx(1239, 1,1219.9004,-1270.2891,2053.6570, -1);
    CreateDynamic3DTextLabel("Должники",-1,1219.9004,-1270.2891,2053.6570,7.0);
    CreateDynamic3DTextLabel("Начать сдачу на права\n{7396FB}~k~~SNEAK_ABOUT~",COLOR_WHITE,-2048.5449,-121.3634,1035.6184,5.0);
    CreatePickupEx(1239,23,-2048.5449,-121.3634,1035.6184,-1);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2234.4531, 1839.2903, 1029.5240,5.0);
	CreateDynamic3DTextLabel("{C9EAFF}Игровые автоматы\n\n{FFFFFF}Используйте ~k~~SNEAK_ABOUT~",-1,2234.4531, 1839.2903, 1029.5240,5.0);
    CreateDynamic3DTextLabel("Благотворительный фонд\n[~k~~SNEAK_ABOUT~]",COLOR_GOLD,1288.3657,-1267.7411,20.6199,4.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,1588.5164,-1637.7506,13.4311,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,599.0131,-1220.5187,1001.3849,5.0);
 	CreateDynamic3DTextLabel("{FF0000}Сломаная дверь",COLOR_BLUENEW,610.8489,-1220.5266,1001.3849,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,595.7482,-1184.2529,1001.3849,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,1243.4695,-1258.3398,2053.6570,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,1219.7706,-1258.3278,2053.6570,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,1553.4229,-1677.8557,883.7559,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,1559.5681,-1655.2974,879.6959,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,2071.7566,-1383.9797,1001.2960,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,2579.9358,-1208.4148,1212.7019,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,1651.4950,-1638.6536,57.1529,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,1706.5123,-1664.7633,20.2273,4.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2407.6038,-504.1053,1401.0859,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2411.9658,-498.9610,1401.0859,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2407.6042,-492.6508,1401.0859,5.0);
	CreateDynamic3DTextLabel("{A19D9D}Открыть\n{FFFFFF}H",COLOR_BLUENEW,-2156.5369,-927.6063,1701.0859,5.0);

    CreateDynamicObject(973, -1993.16724, 273.42361, 34.90620,   360.00000, 360.00000, 85.00000);
	CreateDynamicObject(973, -1993.96667, 264.20779, 34.90620,   360.00000, 360.00000, 85.00000);
	CreateDynamicObject(973, -1994.88733, 255.07750, 34.90620,   360.00000, 360.00000, 83.57380);
	CreateDynamicObject(973, -1995.79443, 246.93350, 34.90620,   360.00000, 360.00000, 83.57380);
	CreateDynamicObject(973, -1996.20117, 243.37630, 34.90620,   360.00000, 360.00000, 83.57380);
	CreateDynamicObject(973, -1992.02722, 238.77451, 34.90620,   360.00000, 360.00000, 180.00000);
	CreateDynamicObject(973, -1983.62146, 238.76270, 34.90620,   360.00000, 360.00000, 180.00000);
	CreateDynamicObject(973, -1988.06226, 278.07001, 34.90620,   360.00000, 360.00000, 360.00000);
	CreateDynamicObject(1226, -1993.88806, 278.62619, 38.29860,   360.00000, 360.00000, 327.93558);

	//========================================[ГРИБЫ]========================================

	CreatePickupEx(1550, 1, 1590.4091,-1515.8990,1103.3810,-1);
	CreatePickupEx(1314, 1, 1489.8192,-1662.7606,1516.2263,-1);

	CreateDynamic3DTextLabel("Используйте ~k~~SNEAK_ABOUT~",COLOR_BLUENEW,1489.8192,-1662.7606,1516.2263,2.0);
	GLS[40]= 1;
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2085.2627, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2081.8926, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2078.3386, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2074.8396, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2071.3396, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2067.9287, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2064.3206, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2060.9055, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2046.7489, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2043.2639, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2039.7639, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2036.2639, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2032.7639, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2029.2639, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2025.7639, -180.3759, 35.1000, 180.0000, 218, 0,35);
	CreateTeamVehicle(TEAM_LICENSERS,1,426, -2022.2639, -180.3759, 35.1000, 180.0000, 218, 0,35);
    //////////////
	//--------------------------------------------------------------------------
	for(new i;i < sizeof(GateInfo);i ++) CreateGate(i);
	print("All Gates created");
    CreatePickupEx(1240,1,1234.2189,-1564.9213,3277.1960,-1);
    CreateDynamic3DTextLabel("Церковь\nДля того чтобы поженится вам нужен сотрудник мэрии\nНеобходимо приобрести кольца /gps - Важные места - Ю.Магазин\nДля развода введите [/unwedding (4 000$!)]",COLOR_GOLD,1234.2189,-1564.9213,3277.1960,10.0);
	CreatePickupEx(1318,1, 90.6645,54.3722,1002.2188, -1);
	
	CreatePickupEx(1318,1, 2721.2869,-2380.0461,17.3403, -1);//LSA
	CreateDynamic3DTextLabel("Столовая\n\n{0099FF}~k~~SNEAK_ABOUT~",COLOR_BLUENEW,2721.2869,-2380.0461,17.3403,2.0);
	CreatePickupEx(1318,1, 340.5760,1949.1917,22.0172, -1);//LVA
	CreateDynamic3DTextLabel("Столовая\n\n{0099FF}~k~~SNEAK_ABOUT~",COLOR_BLUENEW,340.5760,1949.1917,22.0172,2.0);
	CreatePickupEx(1318,1, -1508.0974,460.1775,7.1846, -1);//SFA
	CreateDynamic3DTextLabel("Столовая\n\n{0099FF}~k~~SNEAK_ABOUT~",COLOR_BLUENEW,-1508.0974,460.1775,7.1846,2.0);
	
	CreateDynamic3DTextLabel("~k~~SNEAK_ABOUT~",COLOR_BLUENEW,90.6645,54.3722,1002.2188,2.0);
    nalogoffise[0] = CreatePickupEx(19132,23,1530.7826,-1074.1027,25.0625,-1); //1 offise
    CreateDynamic3DTextLabel("Генеральный офис\nНалоговой службы",COLOR_BLUENEW,1530.7826,-1074.1027,25.0625,10.0);
    nalogoffise[1] = CreatePickupEx(19132,23,1494.4149,1304.1705,1093.2891,1); // 1 exit
    CreatePickupEx(1275,23,1627.8707,-1139.1649,23.9063, -1);//спортзал работа
    CreateDynamic3DTextLabel("Раздевалка\n~k~~SNEAK_ABOUT~",COLOR_BLUENEW,1627.8707,-1139.1649,23.9063,8.0);
    //////////
	///////казино
	CreatePickupEx(1275,23,2258.63330, 1800.81921, 1028.86426,-1);
    CreateDynamic3DTextLabel("{D94141}Раздевалка\n\n{FFFFFF}~k~~SNEAK_ABOUT~",-1,2258.63330, 1800.81921, 1028.86426,8.0);
	/////////////
    CreateDynamic3DTextLabel("Выбор работы",COLOR_BLUENEW,1626.2545,-1137.5186,23.9063,8.0);
    CreatePickupEx(1239,23,1626.2545,-1137.5186,23.9063,-1);

	CreatePickupEx(1275,23,770.8220,-77.3209,1000.6563,-1);//спортзал работа
	CreatePickupEx(1275,23,681.4680,-1652.4188,871.2896,-1);//спортзал работа
	CreateDynamic3DTextLabel("Раздевалка\n~k~~SNEAK_ABOUT~",COLOR_BLUENEW,770.8220,-77.3209,1000.6563,8.0);
	CreateDynamic3DTextLabel("Раздевалка\n~k~~SNEAK_ABOUT~",COLOR_BLUENEW,681.4680,-1652.4188,871.2896,8.0);
    CreatePickupEx(1559,1,246.4129,71.6503,1003.6406,-1);//сюды
    CreatePickupEx(1559,1,246.4379,73.7743,1003.6406,-1);
	CreateDynamic3DTextLabel("~k~~SNEAK_ABOUT~",COLOR_BLUENEW,246.4129,71.6503,1003.6406,1.0);
	CreateDynamic3DTextLabel("~k~~SNEAK_ABOUT~",COLOR_BLUENEW,246.4379,73.7743,1003.6406,1.0);
	
	CreateDynamic3DTextLabel("Press N",COLOR_BLUENEW,2042.6489,-1958.4153,14.3989,2.0);
	CreateDynamic3DTextLabel("Press N",COLOR_BLUENEW,2033.5723,-1958.2524,14.3989,2.0);
    amybank = CreatePickupEx(2035,2,1480.2875,650.5184,979.1730,-1);

	WineArea = CreateDynamicRectangle(-48.0589599609375, -121.27102661132812, 66.73349286925118, -4.271026611328125);
	WineCP = CreateDynamicCP(-2.8628,75.1675,3.1172, 1.0);
	new wintext[256];
	format(wintext, sizeof(wintext), "Склад виноградника\n\n\n{D94141}%d{FFFFFF} килограмм урожая\n\n{D38A37}Сырьё для изготовления",GLS[70]);
	WineText[0] = CreateDynamic3DTextLabel(wintext, -1,  -2.8628,75.1675,3.1172, 25.0);
	WineText[1] = CreateDynamic3DTextLabel(wintext, -1,  -117.0112,-313.7268,2.7646, 25.0);
	WinePic = CreatePickupEx(1669,23,-10.3449,55.1567,3.1172,-1);
    //bank
    CreatePickupEx(1318,23,1243.5079,-1275.9948,2053.6570,-1);
    CreatePickupEx(1318,23,1243.5242,-1275.9985,2058.7649,-1);
    CreatePickupEx(1239,23,-2046.7076,-123.9330,1035.6184,-1);
    CreateDynamic3DTextLabel("ПДД\n{7396FB}Нажмите ~k~~SNEAK_ABOUT~ чтобы прочитать",COLOR_WHITE,-2046.7076,-123.9330,1035.6184,5.0);
	shopeat[0] = CreatePickupEx(2663,2,1769.4325,-1653.5283,20.3739,1);
	shopeat[1] = CreatePickupEx(2663,2,2405.9805,-1933.0472,13.5538,-1);
	shopeat[2] = CreatePickupEx(2663,2,-92.1528,-304.7116,1.4297,-1);
	shopeat[3] = CreatePickupEx(2663,2,1502.1321,-1279.6311,-1014.5651,-1);
	shopeat[4] = CreatePickupEx(2663,2,1493.6877,-1726.9402,13.5287,-1);
	shopeat[5] = CreatePickupEx(2663,2,1184.5985,-1315.1580,13.5720,-1);
	shopeat[6] = CreatePickupEx(2663,2,1748.5256,-1922.6953,2001.0000,-1);
	shopeat[7] = CreatePickupEx(2663,2,195.4181,-115.9060,1.5500,1488);
	shopeat[8] = CreatePickupEx(2663,2,214.4591,-247.0783,1.9079,1488);

	shopeat[9] = CreatePickupEx(2663,2,-2022.6366,460.3604,35.1723,-1);
	shopeat[10] = CreatePickupEx(2663,2,1105.0247,1379.9026,10.8203,-1);
	shopeat[11] = CreatePickupEx(2663,2,1574.4995,1844.3917,10.8203,-1);
	shopeat[12] = CreatePickupEx(2663,2,2084.5444,1456.5774,10.8203,-1);
	shopeat[13] = CreatePickupEx(2663,2,2327.8806,2420.2002,10.8203,-1);
	shopeat[14] = CreatePickupEx(2663,2,2351.5396,2406.6335,10.8203,-1);
	shopeat[15] = CreatePickupEx(2663,2,2536.7700,2137.0681,10.8203,-1);
	shopeat[16] = CreatePickupEx(2663,2,2600.4695,1060.3147,10.8125,-1);

	shopeat[17] = CreatePickupEx(2663,2,2244.9023,570.9419,7.7802,-1);
	shopeat[18] = CreatePickupEx(2663,2,157.5782,-1812.6079,3.7416,-1);
	shopeat[19] = CreatePickupEx(2663,2,2221.0222,-1149.9821,25.7730,-1);
	shopeat[20] = CreatePickupEx(2663,2,1382.1482,-1804.9459,13.5469,-1);
	shopeat[21] = CreatePickupEx(2663,2,-372.3711,-1439.4579,25.7266,-1);//ферма
	shopeat[22] = CreatePickupEx(2663,2,-1290.5806,2366.1538,865.3589,-1);

	shopeat[23] = CreatePickupEx(2663,2,-2399.1362,336.8928,35.1719,-1);
	shopeat[24] = CreatePickupEx(2663,2,-2681.2913,584.9332,14.4531,-1);
	shopeat[25] = CreatePickupEx(2663,2,-2021.2462,-91.0251,35.3181,-1);
	shopeat[26] = CreatePickupEx(2663,2,-1984.5005,127.6157,27.6875,-1);
	shopeat[27] = CreatePickupEx(2663,2,-1982.6625,174.4855,27.6799,1488);
	shopeat[28] = CreatePickupEx(2663,2,-1549.8600,673.9366,7.1875,-1);
	shopeat[29] = CreatePickupEx(2663,2,-1825.6996,-567.4372,16.4844,-1);
	shopeat[30] = CreatePickupEx(2663,2,-142.4108,-75.8819,3.1172,-1);
	for(new i;i < sizeof(BarrierInfo);i ++)
	{
	    new
		Float:X = BarrierInfo[i][brPos_X],
		Float:Y = BarrierInfo[i][brPos_Y];
		ShiftCords(0, X, Y, BarrierInfo[i][brPos_A]+90.0, 3.5);
     	CreateDynamicObject(966,BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z],0.00000000,0.00000000,BarrierInfo[i][brPos_A]);
     	if(!BarrierInfo[i][brOpen])
     	{
			gBarrier[i] = CreateDynamicObject(968,BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.8,0.00000000,90.00000000,BarrierInfo[i][brPos_A]+180);
			MoveObject(gBarrier[i],BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[i][brPos_A]+180);
			MoveObject(gBarrier[i],BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.75,BARRIER_SPEED,0.0,90.0,BarrierInfo[i][brPos_A]+180);
		}
		else gBarrier[i] = CreateDynamicObject(968,BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.8,0.00000000,20.00000000,BarrierInfo[i][brPos_A]+180);
	}
	for(new i;i < sizeof(DormPos);i ++)
	{
		if(DormPos[i][0] + DormPos[i][1] + DormPos[i][2] != 0.0)
		{
		    new string[500];
		    new allzone = 0,narkoz=0;
			new urik[30];
			if(OrgInfo[i][oOb4ak] == 1) urik="{A92424}Закрыт{FFFFFF}";
			else urik = "{3FA924}Открыт{FFFFFF}";
			OrgInfo[i][oOb4ak]=1;
			if((i>=11 && i<=15) || i == 25)
			{
	            for(new d = 1; d < GANGZONES; d++)
				{
					if(GZInfo[d][gzFracID] == i)
					{
						allzone++;
						if (d == 33)narkoz++;
						if (d == 43)narkoz++;
						if (d == 10)narkoz++;
						if (d == 14)narkoz++;
						if (d == 24)narkoz++;
					}
				}
				format(string,sizeof(string),"Количество\nТерриторий: {FAAC58}%d{FFFFFF}\nНаркопритонов: {FAAC58}%d{FFFFFF}\n\nСклад %s\n{FAAC58}%s{FFFFFF}\n\nНаркотики: {FAAC58}%d г{FFFFFF}\nМатериалы: {FAAC58}%d шт{FFFFFF}\nКанистры: {FAAC58}%d шт{FFFFFF}\nИнструменты: {FAAC58}%d шт{FFFFFF}\nМаски: {FAAC58}%d шт{FFFFFF}\n",allzone,narkoz,urik,OrgInfo[i][oName],FractionValue[i][1],FractionValue[i][0],FractionValue[i][3],FractionValue[i][4],FractionValue[i][2]);
			}
			else
			{
			    for(new bizid;bizid < MAX_BIZ;bizid++)
				{
				    if(BizInfo[bizid][bKrasher] != i || strcmp(BizInfo[bizid][bOwner],"The State",true) == 0 ) continue;
					allzone++;
				}
				format(string,sizeof(string),"Количество\nбизнесов {FAAC58}%d{FFFFFF}\n\nСклад %s\n{FAAC58}%s{FFFFFF}\n\nНаркотики: {FAAC58}%d г{FFFFFF}\nМатериалы: {FAAC58}%d шт{FFFFFF}\nКанистры: {FAAC58}%d шт{FFFFFF}\nИнструменты: {FAAC58}%d шт{FFFFFF}\nМаски: {FAAC58}%d шт{FFFFFF}",allzone,urik,OrgInfo[i][oName],FractionValue[i][1],FractionValue[i][0],FractionValue[i][3],FractionValue[i][4],FractionValue[i][2]);
				ac_CreateDynamicCP(Dorm_CP[i][0],Dorm_CP[i][1],DormPos[i][0],DormPos[i][1],DormPos[i][2],1.0,SpawnIntWorld[i][1],SpawnIntWorld[i][0],-1,10.0);
			}
			DormText[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE,DormPos[i][0],DormPos[i][1],DormPos[i][2]+1.2, 6.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, SpawnIntWorld[i][1], SpawnIntWorld[i][0]);
			UpdateDorm(i);
		}
	}
	print("All warehouses created");
	ac_CreateDynamicCP(RingCP[0],RingCP[1],1739.2378,-1582.0302,14.1524, 1.0, -1, -1, -1,  5.0);///покупка колец
	CreateDynamic3DTextLabel("Покупка обручальных\nКолец",COLOR_GOLD,1739.2378,-1582.0302,14.1524,5.0);
	//---------------------------------------------------------------------------------
	HealSG[0] = CreatePickupEx(1241, 23, 2277.6079,50.8652,1040.7622, -1);
	HealSG[1] = CreatePickupEx(19133, 23, 2070.8188,-1363.2648,1001.3094, -1);
	HealSG[2] = CreatePickupEx(19133, 23, 1147.9972,-1343.0070,13.6483, 1488);
	HealSG[3] = CreatePickupEx(1241, 23, 1169.6074,-1333.3698,-0.8618, -1);
	HealSG[4] = CreatePickupEx(1239, 23, 1490.3748,1305.7142,1093.2964, 2);
	HealSG[5] = CreatePickupEx(1274, 23,1492.7451,1308.4236,1093.2927, 1);
	HealSG[6] = CreatePickupEx(19133, 23,1462.9194,-1638.6376,1518.1765, -1);
	HealSG[7] = CreatePickupEx(19133, 23,279.5766,-1619.0736,114.6778, -1);
	HealSG[8] = CreatePickupEx(1852, 23,-2322.4248,1812.6958,33.2521, 0);//info переводной
	HealSG[9] = CreatePickupEx(19133, 23,2847.9468,-2519.4592,11.9786, 1488);
	HealSG[10] = CreatePickupEx(19133, 23,2842.3452,-2523.9382,17.7489, 1488);
	HealSG[11] = CreatePickupEx(1241, 23,661.5717,-1644.2955,871.2830, -1);
	HealSG[12] = CreatePickupEx(19133,23,325.6197,-1906.6881,1004.4698,0);
	HealSG[13] = CreatePickupEx(19133,23,324.3776,-1906.7869,1004.4959,0);
	HealSG[14] = CreatePickupEx(1274,23,1478.3495,649.6915,979.1730,1);
	HealSG[15] = CreatePickupEx(1274,23,1485.3514,649.6918,979.1730,1);
	HealSG[16] = CreatePickupEx(1852,23,-2306.2517,1786.0886,33.1264,0);//info подкидной
	HealSG[17] = CreatePickupEx(19133,23,279.0815, 1833.0690, 18.2331,0);//LVA
	HealSG[18] = CreatePickupEx(19133,23,1285.9365,-1270.2250,13.5939,-1);
	HealSG[19] = CreatePickupEx(19133,23,1287.2783,-1261.7417,20.6199,-1);
	HealSG[20] = CreatePickupEx(19133,23,153.5847, 1944.6009, 19.9951,0);//LVA park
	HealSG[21] = CreatePickupEx(19133,23,140.0786, 1939.7599, 19.6785,0);//LVA base
	HealSG[22] = CreatePickupEx(1239,23,-369.9480,-1446.9771,25.7266,1488);
	HealSG[23] = CreatePickupEx(19133,23,522.78918, -1293.88525, 16.81620,1488);//Nope
	HealSG[24] = CreatePickupEx(19133,23,291.7215, 1834.0690, 18.2331,0);//LVA
	HealSG[25] = CreatePickupEx(1239,23,1411.2351,-1705.3066,13.5395,-1);
	HealSG[26] = CreatePickupEx(19133,23,1114.9540,-2586.3728,1221.5060,-1);
	HealSG[27] = CreatePickupEx(19133,23,1056.6017,-2579.2100,1223.9309,-1);
	HealSG[28] = CreatePickupEx(19133,23,-1357.8256,541.1177,1045.9414,2);
	HealSG[29] = CreatePickupEx(19133,23,440.0028,-803.7986,1495.8099,-1);
	HealSG[30] = CreatePickupEx(19133,23,1165.4773,1346.2273,10.9219,-1);
	HealSG[31] = CreatePickupEx(19133,23,1165.4714,1344.7832,10.8125,-1);
	HealSG[32] = CreatePickupEx(1241, 23, 550.3827,1472.2921,1900.7980, -1);
	HealSG[33] = CreatePickupEx(19133,23,592.9380,1428.2743,1900.7980,-1);
	HealSG[34] = CreatePickupEx(19133,23,592.8829,1426.6675,1900.7980,-1);
	HealSG[35] = CreatePickupEx(1239, 1,2570.1045,-1281.3558,1044.1250, 11);
	HealSG[36] = CreatePickupEx(1239, 1,2570.1045,-1281.3558,1044.1250, 12);
	HealSG[37] = CreatePickupEx(19133,23,483.0550,246.8815,3197.7139,-1);
	HealSG[38] = CreatePickupEx(19133,23,474.5011,216.2406,3194.6360,-1);
	HealSG[39] = CreatePickupEx(19133,23,481.3205,216.2760,3194.6360,-1);
	HealSG[40] = CreatePickupEx(19133,23,461.6805,223.6825,3197.7139,-1);
	HealSG[41] = CreatePickupEx(19133,23,1593.2783,1724.0553,-1010.8203,1488);
	HealSG[42] = CreatePickupEx(19133,23,1713.4481,-1641.3649,20.2225,1);
	HealSG[43] = CreatePickupEx(19133,23,1659.1163,-1640.2465,57.1529,-1);
	HealSG[44] = CreatePickupEx(18749,23,-382.9610,-1438.8756,26.3290,-1);
	HealSG[45] = CreatePickupEx(1274,23,-364.7384,-1424.6959,25.7266,1488);
	HealSG[46] = CreatePickupEx(1314,23,-1361.0114,551.9227,1045.9265,2);
	HealSG[47] = CreatePickupEx(2663, 1,  1241.6412,-1262.8788,2058.7649,-1);
	HealSG[48] = CreatePickupEx(19133, 23,  1547.6816,-1623.1069,13.3725,-1);
	HealSG[49] = CreatePickupEx(19133, 23,  1547.7014,-1622.3954,13.5366,-1);
	HealSG[50] = CreatePickupEx(19133, 23,  618.9825,-568.0446,26.1432,1488);
	HealSG[51] = CreatePickupEx(19133, 23,  246.4067,88.0055,1003.6406,11);
	HealSG[52] = CreatePickupEx(19132, 1,2073.8965,-1369.1693,1007.1063,-1);
	HealSG[53] = CreatePickupEx(19132, 1,2342.5989,-673.4814,1055.4230,-1);
	HealSG[54] = CreatePickupEx(19133, 1,-1358.5747,541.0541,1045.9476,2);
	HealSG[55] = CreatePickupEx(19133, 1, -2328.2952,1781.1470,33.2797,0);//alkatraz enter
	HealSG[56] = CreatePickupEx(19133, 1, -2327.5176,1781.1763,33.2740,0);//alkatraz exit
	HealSG[57] = CreatePickupEx(19133, 1, 368.4228,194.0216,1008.3828,-1);
	HealSG[58] = CreatePickupEx(19133, 1, 287.3401,-1611.8865,17.8593,1488);
	HealSG[59] = CreatePickupEx(19133, 23, -2594.7959,642.3338,14.4531, 1488);
	HealSG[60] = CreatePickupEx(1239, 1,2570.1045,-1281.3558,1044.1250, 13);
	HealSG[61] = CreatePickupEx(1241, 23, -1609.7928,-110.7104,1501.0859, -1);
	HealSG[62] = CreatePickupEx(1247, 1, 1720.4006,2279.5247,1422.9221, -1);
	HealSG[63] = CreatePickupEx(1247, 1, 240.4527,112.8498,1003.2188, -1);
	HealSG[64] = CreatePickupEx(1239, 23,-1619.8113,653.5823,-5.2422, -1);
	HealSG[65] = CreatePickupEx(1247, 23,-1619.9810,649.4741,-5.2422, -1);
	HealSG[66] = CreatePickupEx(18749, 23,-138.8487,-83.6043,3.1172, -1);
	HealSG[67] = CreatePickupEx(18749, 23,1195.0355,1273.6887,1051.7373, -1);
	HealSG[68] = CreatePickupEx(1210, 23,-1364.3469,548.8475,1045.9324, 2);
	HealSG[69] = CreatePickupEx(1210, 23,1471.0629,659.3188,979.1759, -1);
	HealSG[70] = CreatePickupEx(18749, 23,-1902.7009,-1673.3423,21.7513, -1);
	//---------------------------------------------------------------------------------
	ac_CreateDynamicCP(CarPound_CP[0][0],CarPound_CP[0][1],1533.7008,-1014.1130,24.0538,1.0,-1,-1,-1,10.0);
	ac_CreateDynamicCP(CarPound_CP[1][0],CarPound_CP[1][1],2485.4040527344,2506.73046875,10.8203125,1.0,-1,-1,-1,10.0);
	CreateDynamic3DTextLabel("Встаньте на чекпоинт чтобы оплатить штраф",COLOR_LIME,1533.7008,-1014.1130,24.0538,10.0);
	CreateDynamic3DTextLabel("Встаньте на чекпоинт чтобы оплатить штраф",COLOR_LIME,2485.4040527344,2506.73046875,10.8203125,10.0);
	//---------------------------------------------------------------------------------
	Bar_CP[0] = CreatePickupEx(1274,23,497.4280,-75.7883,998.7578,-1);
	CreateDynamic3DTextLabel("Бар",COLOR_WHITE,497.4280,-75.7883,998.7578,20.0);
	Bar_CP[1] = CreatePickupEx(1274,23,499.7772,-20.6834,1000.6797,-1);
	CreateDynamic3DTextLabel("Бар",COLOR_WHITE,499.7772,-20.6834,1000.6797,20.0);
	Bar_CP[2] = CreatePickupEx(1274,23,-2653.8188,1407.3539,906.2734,-1);
	CreateDynamic3DTextLabel("Бар",COLOR_WHITE,-2653.8188,1407.3539,906.2734,20.0);
	Bar_CP[3] = CreatePickupEx(1274,23,1585.7098,-1522.3213,1103.3810,-1);
	CreateDynamic3DTextLabel(" Бар",COLOR_WHITE,1585.7098,-1522.3213,1103.3810,7.0);
	Bar_CP[4]= CreatePickupEx(1274,23,1856.5518,2566.7129,771.2443,-1);
	CreateDynamic3DTextLabel(" Бар",COLOR_WHITE,1856.5518,2566.7129,771.2443,7.0);
	Bar_CP[5]= CreatePickupEx(1274,23,461.3756,209.5736,3194.6460,-1);
	CreateDynamic3DTextLabel(" Бар",COLOR_WHITE,461.3756,209.5736,3194.6460,7.0);
	Bar_CP[6]= CreatePickupEx(1274,23,1055.5858,-2564.8914,1223.9309,-1);
	CreateDynamic3DTextLabel(" Бар",COLOR_WHITE,1055.5858,-2564.8914,1223.9309,7.0);
	CreateDynamic3DTextLabel("{7396FB}Касса\n{FFFFFF}Нажмите N",COLOR_GRAY,1463.7428,655.6723,979.1730,5);
	CreateDynamic3DTextLabel("{7396FB}Касса\n{FFFFFF}Нажмите N",COLOR_GRAY,1466.2533,655.6681,979.1730,5);
	CreateDynamic3DTextLabel("{7396FB}Касса\n{FFFFFF}Нажмите N",COLOR_GRAY,1480.5974,655.6681,979.1730,5);
	CreateDynamic3DTextLabel("{7396FB}Касса\n{FFFFFF}Нажмите N",COLOR_GRAY,1478.0747,655.6681,979.1730,5);
	//---------------------------------------------------------------------------------
	ac_CreateDynamicCP(Eatery_CP[0][0],Eatery_CP[0][1],369.8459,-6.3606,1001.8589,1.0,-1,-1,-1,5.0);
	CreateDynamic3DTextLabel(" Закусочная \n\n{43CD80}Встаньте на чекпоинт чтобы перекусить",COLOR_WHITE,369.8459,-6.3606,1001.8589,20.0);
	ac_CreateDynamicCP(Eatery_CP[1][0],Eatery_CP[1][1],377.3555,-67.6919,1001.5151,1.0,-1,-1,-1,5.0);
	CreateDynamic3DTextLabel(" Закусочная \n\n{43CD80}Встаньте на чекпоинт чтобы перекусить",COLOR_WHITE,377.3555,-67.6919,1001.5151,20.0);
	ac_CreateDynamicCP(Eatery_CP[2][0],Eatery_CP[2][1],2065.5347,-1393.6661,1006.4060,1.0,-1,-1,-1,5.0);
	CreateDynamic3DTextLabel("Буфет",COLOR_WHITE,2065.5347,-1393.6661,1007.5060,10.0);
	//---------------------------------------------------------------------------------
	Binko_CP = CreateDynamicCP(199.1063, -128.3574, 1003.5152, 1.0, -1, -1, -1, 10.0);
	//---------------------------------------------------------------------------------
	HealExitPickup[0] = CreatePickupEx(19132, 1, 2283.0203,40.5954,1040.7622, -1);
	HealExitPickup[1] = CreatePickupEx(19132, 1, 2283.0198,44.0936,1040.7622, -1);
	EnterBankPickup = CreatePickupEx(1274,23,1411.5496,-1699.5398,13.5395,-1);
	CreateDynamic3DTextLabel("Центральный банк Los-Santos\n\n{C9EAFF}Встаньте на пикап, чтобы войти",-1,1411.5496,-1699.5398,13.5395, 5.0);
	ExitBankPickup = CreatePickupEx(19132, 1, 1480.9877,676.0620,979.1759,-1);
	CreateDynamic3DTextLabel("Встаньте на пикап", 0xC9EAFFFF, -0.0163,6.0246,1801.1040, 7.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1);
    for(new i; i < sizeof(TeleportInfo);i ++)
    {
        new string[150];
        strcat(string, TeleportInfo[i][tpName]), strcat(string,"\n\n{C9EAFF}Встаньте на пикап");
		CreateDynamic3DTextLabel(string, 0x43CD80FF, TeleportInfo[i][tpEnterPos_X], TeleportInfo[i][tpEnterPos_Y], TeleportInfo[i][tpEnterPos_Z], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, TeleportInfo[i][tpEnterWorld], TeleportInfo[i][tpEnterInt]);
		TeleportPickup[i] = CreateDynamicPickup(19132, 1, TeleportInfo[i][tpEnterPos_X], TeleportInfo[i][tpEnterPos_Y], TeleportInfo[i][tpEnterPos_Z], TeleportInfo[i][tpEnterWorld], TeleportInfo[i][tpEnterInt]);
    }
	CreatePickupEx(2663, 1,  76.5662,62.6399,1002.2188,-1);
	CreateDynamic3DTextLabel("Сухпаёк\n\n{C9EAFF}Используйте ~k~~SNEAK_ABOUT~",COLOR_LIME,76.5662,62.6399,1002.2188,7.0);
	CreatePickupEx(2663, 1, -1543.1743,461.8521,7.1975,-1);
	//////////
	Inc_CP = CreatePickupEx(1275, 2,  1460.0156,675.9401,979.1759,-1);  ////пиздююлька
	Yakydzapick = CreatePickupEx(11722, 1,  2426.9436,1348.0942,2082.2488, -1);  ////пиздююлька
	CreateDynamic3DTextLabel(" Раздевалка \n\n{C9EAFF}Работа инкассатора",COLOR_LIME,1460.0156,675.9401,979.1759,7.0);
	CreatePickupEx(1581, 23, -1369.2617,543.1968,1042.1315,-1);
	ac_CreateDynamicCP(Zek_CP[0],Zek_CP[1],1550.7634,-1681.3251,13.5540, 1.0,-1,-1,-1,5.0);
	CreateDynamic3DTextLabel("Список заключенных",COLOR_WHITE,1550.7634,-1681.3251,13.5540,5.0);
	new str[350];
	
	////
	GLS[28] = 30000;
	////
	format(str, sizeof(str), "На продаже {FF9900}%d материалов\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryInfo[fMaterials]);
	FactoryText[0] = CreateDynamic3DTextLabel(str, COLOR_WHITE, -1902.2656,-1652.1045,21.7500, 15.0);
	format(str, sizeof(str), "Склад фермы\n\n\n{D94141}%d{FFFFFF} продуктов\nСтоимость закупки: {D94141}$%d\n\n{D38A37}Для загрузки посигнальте",GLS[27],GLS[31]);
	FactoryText[1] = CreateDynamic3DTextLabel(str, COLOR_WHITE, -382.9761,-1426.3553,26.3189, 15.0);
	format(str, sizeof(str), "Склад разгрузочной станции\n\n\n{D38A37}%d{FFFFFF} предметов\nСтоимость закупки: {D38A37}$%d\n\n{D38A37}Для загрузки посигнальте",GLS[28],GLS[29]);
	FactoryText[2] = CreateDynamic3DTextLabel(str, COLOR_WHITE, 1976.6340,-2029.4700,13.5469, 15.0);
	/////наркопритоны
	format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[45],GLS[60],GLS[55],GLS[50]);
	NarkoText[0] = CreateDynamic3DTextLabel(str, COLOR_WHITE,331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 1, 5);

	format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[46],GLS[61],GLS[56],GLS[51]);
	NarkoText[1] = CreateDynamic3DTextLabel(str, COLOR_WHITE, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 2, 5);

	format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[47],GLS[62],GLS[57],GLS[52]);
	NarkoText[2] = CreateDynamic3DTextLabel(str, COLOR_WHITE, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 3, 5);

	format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[48],GLS[63],GLS[58],GLS[53]);
	NarkoText[3] = CreateDynamic3DTextLabel(str, COLOR_WHITE, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 4, 5);

	format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[49],GLS[64],GLS[59],GLS[54]);
	NarkoText[4] = CreateDynamic3DTextLabel(str, COLOR_WHITE, 331.9075,1119.5465,1083.8903, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 5, 5);

	///////////////////////конец
	for(new i=1;i<6;i++) CreateDynamic3DTextLabel("Для подробного изучения системы:\n{FFFFFF}/help - Наркопритоны",COLOR_VALIK, 321.3961,1123.5383,1083.8828,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, i, 5);

	CreateDynamic3DTextLabel("Трудоустройство\n{FFFFFF}Нажмите ~k~~SNEAK_ABOUT~",COLOR_VALIK, -1360.3853,525.5770,1045.9207,5.0);
	CreatePickupEx(1581, 1,-1360.3853,525.5770,1045.9207,-1);
	new tstring[150];
	format(tstring, sizeof(tstring), " {AFAFAF}Спресованый транспорт\nПосигнальте для загрузки метaла");
	CreateDynamic3DTextLabel(tstring, COLOR_WHITE, SCRAP_POS_X, SCRAP_POS_Y, SCRAP_POS_Z, 20.0);
	CreateDynamic3DTextLabel("Спресованый транспорт\nПосигнальте для загрузки метaла", COLOR_WHITE, 1124.2776,1962.4742,10.8203, 20.0);
	ScrapCP = CreateDynamicCP(-1917.2601,-1689.7162,21.7500, 3.0, -1, -1, -1, 10000.0);
	ac_CreateDynamicCP(MatsDel_CP[0], MatsDel_CP[1], -1902.2656,-1652.1045,21.7500, 1.0);

	CreateDynamic3DTextLabel(" Раздевалка \n[~k~~SNEAK_ABOUT~] ",COLOR_WHITE,1907.0087,153.0604,17.5156,10.0);
	CreatePickupEx(1275, 23, 1907.0087,153.0604,17.5156,-1);
	MeriaGun = CreatePickupEx(1275, 23,-2406.2676,-490.2213,1401.0900,-1);//Jekazzz
	ac_CreateDynamicCP(BuyGun_CP[0],BuyGun_CP[1],295.20001220703, -38.299999237061, 1001.5, 1.0, -1, -1, -1, 5.0);//Jekazzz
	CreateDynamic3DTextLabel("Для покупки оружия встаньте на чекпоинт",COLOR_WHITE,295.20001220703, -38.299999237061, 1001.5,10.0);
	prost = CreatePickupEx(1239, 1, 1722.5358,2279.5251,1422.9221, -1);
	CreatePickupEx(1274, 1 , -2237.0293,130.1837,1035.4141,-1);
	CreateDynamic3DTextLabel("Нажмите клавишу N",COLOR_SYSTEM,-2237.0293,130.1837,1035.4141,5.0);
	CreateDynamic3DTextLabel("Чтобы внести залог введите {7396FB}/bail [id]",COLOR_SYSTEM,1722.5358,2279.5251,1422.9221,5.0);

	CreateDynamic3DTextLabel("Сдаться с повинной",COLOR_LIGHTRED,1720.4006,2279.5247,1422.9221,5.0);
	CreateDynamic3DTextLabel("Работник Радиостанции\n[~k~~SNEAK_ABOUT~]",COLOR_SYSTEM,9.5227,-20.9149,1231.0688,5.0);
	MinerDownCP = CreateDynamicCP(-382.9761,-1426.3553,26.3189, 2.0, -1, -1, -1, 180.0);
	for(new i; i < sizeof(MinPos); i ++)MinerCP[i] = CreateDynamicCP(MinPos[i][0], MinPos[i][1], MinPos[i][2], 2.0);
	BankCP[0] = CreateDynamicCP(1422.5767,-1707.3518,13.5469, 3.0, -1, -1, -1, 10000.0);
	BankCP[1] = CreateDynamicCP(1413.3268,-1701.0189,13.5395, 1.0, -1, -1, -1, 10000.0);
	for(new i;i < sizeof(TestCP);i ++)
	{
	    if(i < sizeof(TestCP)-1) Test_CP[i] = CreateDynamicRaceCP(0,TestCP[i][0],TestCP[i][1],TestCP[i][2],TestCP[i+1][0],TestCP[i+1][1],TestCP[i+1][2],5.0,-1,-1,-1,1000.0);
	    else Test_CP[i] = CreateDynamicRaceCP(1,TestCP[i][0],TestCP[i][1],TestCP[i][2],TestCP[i][0],TestCP[i][1],TestCP[i][2],5.0,-1,-1,-1,1000.0);
	}
	for(new i;i < sizeof(GoFuel);i ++)GoFuelCP[i] = CreateDynamicCP(GoFuel[i][gfPos_X],GoFuel[i][gfPos_Y],GoFuel[i][gfPos_Z],6.0, -1, -1, -1, 10000.0);
	for(new i; i < sizeof(GoGunShop); i ++)GoGunShopCP[i] = CreateDynamicCP(GoGunShop[i][gsPosX], GoGunShop[i][gsPosY], GoGunShop[i][gsPosZ], 12.0, -1, -1, -1, 10000.0);
	for(new i;i < sizeof(PrisonPos);i ++)JailCP[i] = CreateDynamicCP(PrisonPos[i][0],PrisonPos[i][1],PrisonPos[i][2],3.0, -1, -1, -1, 3000.0);
	for(new i; i < sizeof(DutyPos); i ++)
	{
	    if(DutyPos[i][dutyposX] == 0.0 && DutyPos[i][dutyposY] == 0.0) continue;
     	TeamDutyCP[i] = CreatePickupEx(1275, 1, DutyPos[i][dutyposX], DutyPos[i][dutyposY], DutyPos[i][dutyposZ], DutyPos[i][dutyposWorld]);
	}
	for(new i;i < sizeof(IncCP);i ++)
	{
	    IncCP[i][0] = CreateDynamicCP(IncCPPos[i][0], IncCPPos[i][1], IncCPPos[i][2], 3.0, -1, -1, -1, 10000.0);
	    IncCP[i][1] = CreateDynamicCP(IncCPPos[i][3], IncCPPos[i][4], IncCPPos[i][5], 1.0, -1, -1, -1, 10000.0);
	}
	//
	ac_CreateDynamicCP(NomerCP[0],NomerCP[1],-1623.3687,659.7051,-5.1422, 2.0);
    CreateDynamic3DTextLabel("Установка номеров",COLOR_RED,-1623.3687,659.7051,-5.2422,5.0);
	
	for(new i;i < sizeof(HealInfo);i ++)
	{
	    new hstr[150];
	    format(hstr,sizeof(hstr),"{43CD80}Койка свободна\n\n{C9EAFF}Нажмите N, чтобы занять\nНеобходимо начать лечение");
	    HealText[i] = CreateDynamic3DTextLabel(hstr,COLOR_WHITE,HealInfo[i][hCP][0],HealInfo[i][hCP][1],HealInfo[i][hCP][2], 1.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, HealInfo[i][hWorld], HealInfo[i][hInt]);
	}
 	for(new i; i < sizeof(BuyPos); i ++)
	{
		CreateDynamic3DTextLabel("Магазин 24/7\n\n{C9EAFF}Нажмите N для покупок",COLOR_WHITE,BuyPos[i][0], BuyPos[i][1], BuyPos[i][2], 10.0);
		CreatePickupEx(1274, 1,  BuyPos[i][0], BuyPos[i][1], BuyPos[i][2],-1);
	}
	print("All positions created");
    for(new i;i < sizeof(FishZone);i ++)
	{
	    ac_CreateDynamicCP(Fish_CP[i][0],Fish_CP[i][1],FishZone[i][0], FishZone[i][1], FishZone[i][2], 0.7, -1, -1, -1, 5.0);
	    CreateDynamic3DTextLabel(" Место для рыбалки ",COLOR_WHITE,FishZone[i][0], FishZone[i][1], FishZone[i][2], 10.0);
	}
    print("All fishpos created");
	for(new i;i < OWNABLECASINO;i ++)
	{
 		CreateDynamicMapIcon(CasinoInfo[i][casPos][0], CasinoInfo[i][casPos][1], CasinoInfo[i][casPos][2], 25, 0, -1, -1, -1, 300.0);
		CasinoCPEn[i] = CreateDynamicPickup(19132,1,CasinoInfo[i][casPos][0], CasinoInfo[i][casPos][1], CasinoInfo[i][casPos][2],-1);
		CasinoCPEx[i] = CreateDynamicPickup(19132,1,CasinoInfo[i][casExit][0], CasinoInfo[i][casExit][1], CasinoInfo[i][casExit][2],-1);
		Casino3DText[i] = CreateDynamic3DTextLabel("{C9EAFF}Casino Royal\n\n{D6CC5C}Для входа нажмите ~k~~SNEAK_ABOUT~",-1,CasinoInfo[i][casPos][0], CasinoInfo[i][casPos][1], CasinoInfo[i][casPos][2],30.0);
	}
	new stri[150];
	f(stri, "Получение кредитa\n\n{C9EAFF}Кредитная ставка %d процента(ов)\nПолучить кредит можно через сотрудника банка",GLS[0]);
	cretits = CreateDynamic3DTextLabel(stri,COLOR_LIGHTBLUE,1471.0728,658.8788,980.0761,7.0);
	for(new i;i < sizeof(Bankomats);i ++)
	{
 		SetDynamicObjectMaterialText(CreateDynamicObject(2754,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2],0.0,0.0,Bankomats[i][3]), 2,"\nБанкомат\n \n \n \n \n ",OBJECT_MATERIAL_SIZE_256x256,"Tahoma", 48, 1, 0xFF000000,0xFF7396FB, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
		CreateDynamic3DTextLabel("Банкомат\n\n{7396FB}Используйте 'N'",COLOR_WHITE,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2]+1,5.0);
	}
	for(new i;i < sizeof(GovPos);i ++)
	{
 		CreateDynamicPickup(1314, 23, GovPos[i][gpPosX], GovPos[i][gpPosY], GovPos[i][gpPosZ], (i == 0)? 1 : 0);
		GovPic[i] = CreateDynamicSphere(GovPos[i][gpPosX], GovPos[i][gpPosY], GovPos[i][gpPosZ], 1.0, (i == 0)? 1 : 0);
		CreateDynamic3DTextLabel("{C9EAFF}Информация\n\n{D94141}Государственные новости",-1,GovPos[i][gpPosX], GovPos[i][gpPosY], GovPos[i][gpPosZ],5.0);
	}
	print("All ATMs created");
	for(new i;i < sizeof(TirInfo);i ++)
	{
	    ac_CreateDynamicCP(Tir_CP[i][0],Tir_CP[i][1],TirInfo[i][tirPos][0], TirInfo[i][tirPos][1], TirInfo[i][tirPos][2], 1.0, TirInfo[i][tirWorld], TirInfo[i][tirInt], -1, 10.0);
	    TirText[i] = CreateDynamic3DTextLabel("ТИР\n\n{FFCB8C}Встаньте на чекпоинт для выбора оружия",COLOR_GOLD,TirInfo[i][tirPos][0], TirInfo[i][tirPos][1], TirInfo[i][tirPos][2],5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, TirInfo[i][tirWorld], TirInfo[i][tirInt]);
	    Target_Object[i] = CreateDynamicObject(TARGET_MODEL, TirInfo[i][tirTPos][0], TirInfo[i][tirTPos][1], TirInfo[i][tirTPos][2], TirInfo[i][tirTPos][3], TirInfo[i][tirTPos][4], TirInfo[i][tirTPos][5]);
	}
	ac_CreateDynamicCP(TirEnter[0],TirEnter[1],-2270.6479,-155.9109,35.3203, 1.0, 0, 0, -1, 10.0);
	CreateDynamic3DTextLabel("\
		{43CD80}Тир San-Fierro\n\n\
		{FFFFFF}Залов для стрельбы: {43CD80}3 зала\n\n\
		{D94141}Для выбора зала встаньте на чекпоинт",-1,-2270.6479,-155.9109,35.3203,5.0);
	TirExit = CreateDynamicPickup(19133, 23, 286.0959,-29.1187,1001.5156);
	CreateDynamicMapIcon(-2270.6479,-155.9109,35.3203, 18, 0, -1, -1, -1, 300.0);
	print("All TIR-places created");
	for(new i = 1;i < GANGZONES;i ++){
		GangZone[i] = GangZoneCreate(GZInfo[i][gzX][0],GZInfo[i][gzY][0],GZInfo[i][gzX][1],GZInfo[i][gzY][1]);
		GZInfo[i][gzArea] = CreateDynamicRectangle(GZInfo[i][gzX][0],GZInfo[i][gzY][0],GZInfo[i][gzX][1],GZInfo[i][gzY][1]);
	}
	AlkatrazGZ = GangZoneCreate(-2612, 1587, -1938, 2195);
	WineGZ = GangZoneCreate(-46, -126, 54, -26);
	print("All gangzones created");
	HideMapZone = GangZoneCreate(-3000,-3000,3000,3000);
	for(new i;i < sizeof(GoFuel);i ++)
	{
	    new string[220];
	    new bizid = GoFuel[i][gfBizzID];
	    new Float:cost = BizInfo[bizid][bEnterPrice];
	    new benz = BizInfo[bizid][bProducts];
		format(string,sizeof(string),"\
		{FFFFFF}Заправочная станция\n\n\
		{FFFFFF}Используйте {43CD80}'/fill'{FFFFFF}, чтобы заправиться\n\
		Стоимость 1-го литра: {43CD80}$%.0f\n\
		{FFFFFF}Всего топлива: {43CD80}%d литров",cost,benz);
		CreatePickupEx(1650, 1,GoFuel[i][gfPos_X],GoFuel[i][gfPos_Y],GoFuel[i][gfPos_Z], -1);
	    FuelText[i] = CreateDynamic3DTextLabel(string,COLOR_WHITE,GoFuel[i][gfPos_X],GoFuel[i][gfPos_Y],GoFuel[i][gfPos_Z],30.0);
	    CreateDynamicMapIcon(GoFuel[i][gfPos_X], GoFuel[i][gfPos_Y], GoFuel[i][gfPos_Z], 47, 0, -1, -1, -1, 300.0);
	}
    new Float:Y = 350.0;
    Box = CreateBox(194.0,Y-20,3*64.0 + 3*20,84,0xD94141FF);
    // Cherries (x25)
    Digit1[0] = CreateSprite(214.0,Y,"LD_SLOT:cherry",64,64);
    Digit2[0] = CreateSprite(288.0,Y,"LD_SLOT:cherry",64,64);
    Digit3[0] = CreateSprite(362.0,Y,"LD_SLOT:cherry",64,64);
    // grapes (x100)
    Digit1[1] = CreateSprite(214.0,Y,"LD_SLOT:grapes",64,64);
    Digit2[1] = CreateSprite(288.0,Y,"LD_SLOT:grapes",64,64);
    Digit3[1] = CreateSprite(362.0,Y,"LD_SLOT:grapes",64,64);
    // 69's (x250)
    Digit1[2] = CreateSprite(214.0,Y,"LD_SLOT:r_69",64,64);
    Digit2[2] = CreateSprite(288.0,Y,"LD_SLOT:r_69",64,64);
    Digit3[2] = CreateSprite(362.0,Y,"LD_SLOT:r_69",64,64);
    // bells (x500)
    Digit1[3] = CreateSprite(214.0,Y,"LD_SLOT:bell",64,64);
    Digit2[3] = CreateSprite(288.0,Y,"LD_SLOT:bell",64,64);
    Digit3[3] = CreateSprite(362.0,Y,"LD_SLOT:bell",64,64);
    // Bars [1 bar] (x1000)
    Digit1[4] = CreateSprite(214.0,Y,"LD_SLOT:bar1_o",64,64);
    Digit2[4] = CreateSprite(288.0,Y,"LD_SLOT:bar1_o",64,64);
    Digit3[4] = CreateSprite(362.0,Y,"LD_SLOT:bar1_o",64,64);
    // Bars [2 bar] (x2000)
    Digit1[5] = CreateSprite(214.0,Y,"LD_SLOT:bar2_o",64,64);
    Digit2[5] = CreateSprite(288.0,Y,"LD_SLOT:bar2_o",64,64);
    Digit3[5] = CreateSprite(362.0,Y,"LD_SLOT:bar2_o",64,64);
    for(new i = 0;i < OWNABLEHOUSES;i++)
	{
	    HouseIcon[i] = CreateDynamicMapIcon(HouseInfo[i][hEnter][0], HouseInfo[i][hEnter][1], HouseInfo[i][hEnter][2], 31, 0,500);
	    ac_CreateDynamicCP(HouseCP[i][0],HouseCP[i][1],HouseInfo[i][hEnter][0], HouseInfo[i][hEnter][1], HouseInfo[i][hEnter][2], 1.0, -1, -1, -1, 10.0);
       	House3DText[i] = CreateDynamic3DTextLabel(" Дом ",0xE1AE3CFF,HouseInfo[i][hEnter][0], HouseInfo[i][hEnter][1],HouseInfo[i][hEnter][2],10.0);
       	if(GLS[65]==0)checkHouse(i);
	    UpdateHouse(i);
	}
	CreateDynamicMapIcon(-382.9610,-1438.8756,26.3290, 11, 0, -1, -1, -1, 300.0);//ферма
	////
	CreateDynamicMapIcon(212.6680,-1883.7994,1.5067, 55, 0, -1, -1, -1, 300.0);//лодки
	CreateDynamicMapIcon(2467.9500,1322.6254,10.6993, 55, 0, -1, -1, -1, 300.0);//Авторынок
	///
	CreateDynamicMapIcon(-1545.2085,451.3773,7.0315, 46, 0, -1, -1, -1, 300.0);

	CreateDynamicMapIcon(1814.4722,-1995.8588,13.5544, 23, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2286.6912,-2012.8440,13.5447, 23, 0, -1, -1, -1, 300.0);
 	CreateDynamicMapIcon(2333.4478,-1922.6251,12.2991, 23, 0, -1, -1, -1, 300.0);
 	CreateDynamicMapIcon(2175.9934,-1503.9364,23.9520, 23, 0, -1, -1, -1, 300.0);
	///
	CreateDynamicMapIcon(-2487.1482,369.5434,35.1219, 16, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-1941.4008,459.7771,35.1719, 12, 0, -1, -1, -1, 300.0);//sfnews
	/////
	CreateDynamicMapIcon(-2335.8118,-166.6666,35.5547, 10, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-1816.6819,617.5771,35.1719, 10, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-1721.5256,1359.8145,7.1853, 10, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-2356.4548,1008.1873,50.8984, 10, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-2443.8538,755.4180,35.1719, 10, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-2767.5112,788.7203,52.7813, 10, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-2672.2603,258.4307,4.6328, 10, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-1808.6821,945.9444,24.8906, 10, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-2155.2847,-2460.1235,30.8516, 10, 0, -1, -1, -1, 300.0);
	//////
	CreateDynamicMapIcon(-1694.5833,951.9144,24.8906, 45, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-2718.4712,50.4521,4.3359, 45, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-2241.7515,123.0408,35.3203, 45, 0, -1, -1, -1, 300.0);
	////
	CreateDynamicMapIcon(-88.7419,1378.2703,10.4698, 49, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(693.6755,1967.5216,5.5391, 49, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-36.0986,2349.6462,24.3026, 49, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2186.9092,1113.3481,12.6538, 48, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1951.4368,1342.9297,15.3746, 48, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2506.9543,2120.2803,10.8398, 48, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1966.1985,1623.1367,12.8626, 48, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2102.4863,2257.4006,11.0234, 45, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2802.8872,2430.6565,11.0625, 45, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(172.3484,1177.6282,14.7578, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2884.5476,2454.0398,11.0690, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2638.3013,1671.8616,11.0234, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2101.8923,2228.8093,11.0234, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1879.1917,2339.5007,10.9799, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1872.2565,2071.7385,11.0625, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-858.0142,1535.3987,22.5870, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-1213.7981,1830.3331,41.9297, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-138.8487,-83.6043,3.1172, 46, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(906.2801,-1221.0192,16.9766, 51, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1614.1479,2320.8289,10.8203, 51, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1976.6429,-2029.5635,13.5469, 51, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1054.8196,2134.8713,10.8203, 51, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2287.6665,607.6643,10.6760, 9, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(150.9107,-1812.6412,3.7416, 9, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(387.7626, 2539.7524, 16.9433, 36, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(253.2157,1838.9449,17.6568, 46, 0, -1, -1, -1, 600.0);
	CreateDynamicMapIcon(2637.8018,1185.2871,10.8203, 12, 0, -1, -1, -1, 600.0);
	CreateDynamicMapIcon(2287.0254,2432.3618,10.8203, 30, 0, -1, -1, -1, 600.0);
	CreateDynamicMapIcon(2735.6653,-2448.3457,13.6432, 46, 0, -1, -1, -1, 600.0);
	CreateDynamicMapIcon(2092.6499,2493.1968,14.8390, 54, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1168.6149,1364.8787,10.8125, 19, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1607.4197,1815.2408,10.8203, 22, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(178.4099,1101.4073,16.4498, 11, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(276.6597,1396.0018,10.4786, 51, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2823.4900,914.6848,10.6434, 51, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2258.0461,2765.0706,10.7141, 16, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2201.7358,-2226.7476,13.4103, 16, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2861.2329,1279.8409,11.4040, 38, 0, -1, -1, -1, 300.0);//ждлв
	CreateDynamicMapIcon(1785.0720,-1942.7961,13.5800, 38, 0, -1, -1, -1, 300.0);//ЖДЛС
	CreateDynamicMapIcon(2229.3896,-1159.9827,25.8025, 38, 0, -1, -1, -1, 300.0);//Jefferson
	CreateDynamicMapIcon(-1971.0687,140.6956,27.6873, 38, 0, -1, -1, -1, 300.0);//ЖДСФ
	CreateDynamicMapIcon(2319.4197, 1391.0762, 10.9220, 55, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2225.6599,-1724.1580,13.5621, 54, 0, -1, -1, -1, 300.0);
  	CreateDynamicMapIcon(2180.7395,-1990.5044,13.5469, 11, 0, -1, -1, -1, 300.0);
    CreateDynamicMapIcon(-1864.7662,-1668.6857,21.7500, 11, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1411.5496,-1699.5398,13.5395, 52, 0, -1, -1, -1, 300.0);//bank ls
	CreateDynamicMapIcon(1542.5132,-1675.6295,13.5546, 30, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(876.8422,-1567.4388,13.5391, 18, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2169.4517,-1675.1003,15.0859, 23, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2245.0801,-1662.6428,15.4690, 45, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-2040.3796,-114.5223,35.2579, 36, 0, -1, -1, -1, 300.0); //?????????
	CreateDynamicMapIcon(-2668.8684,640.1640,14.4531, 22, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-2756.1284,375.9151,4.3338, 19, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-220.9060,-234.7779,1.4219, 51, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-2136.0205,-77.7463,35.3203, 40, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1830.3513,-1678.9181,13.2740, 48, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(457.6003,-1501.4500,31.0383, 45, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(694.5242,-498.0038,16.3359, 45, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1654.3445,-1657.2205,22.5156, 12, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2000.2468,-1108.7992,26.7737, 59, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(810.979, -1616.12, 13.5466, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-10.3449,55.1567,3.1172, 7, 0, -1, -1, -1, 300.0);//саженец
	ZavodPutCP[0] = CreatePickupEx(1559, 1, 886.7524, 2132.6951, 1000.9016, 1);
	ZavodPutCP[1] = CreatePickupEx(1559, 1, 892.1548, 2132.6113, 1000.9016, 1);
	ZavodPutCP[2] = CreatePickupEx(1559, 1, 897.7520, 2132.6035, 1000.9016, 1);
	ZavodPutCP[3] = CreatePickupEx(1559, 1, 897.8268, 2112.9709, 1000.9016, 1);
	ZavodPutCP[4] = CreatePickupEx(1559, 1, 892.1816, 2113.1179, 1000.9084, 1);
	ZavodPutCP[5] = CreatePickupEx(1559, 1, 886.8200, 2113.1309, 1000.9016, 1);
	ZavodPutCP[6] = CreatePickupEx(1559, 1, 904.3490, 2115.0618, 1000.9016, 1);
	ZavodPutCP[7] = CreatePickupEx(1559, 1, 905.8527, 2113.6179, 1000.9016, 1);
	ZavodClotherCP[0] = CreatePickupEx(1275, 2, 909.7632, 2158.9688, 1000.9084, 1);
	ZavodClotherCP[1] = CreatePickupEx(1275, 2, 908.6809, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[2] = CreatePickupEx(1275, 2, 907.5459, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[3] = CreatePickupEx(1275, 2, 906.4932, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[4] = CreatePickupEx(1275, 2, 905.3242, 2158.9688, 1000.9016, 1);
	ZavodClotherCP[5] = CreatePickupEx(1275, 2, 904.2687, 2158.9688, 1000.9016, 1);

	J_AddStaticVehicleEx(462, 2229.9092, -1162.8600, 25.2544, 90.0000, -1, -1, 100);
	J_AddStaticVehicleEx(462, 2229.9680, -1166.4493, 25.2544, 90.0000, -1, -1, 100);
	J_AddStaticVehicleEx(462, 2230.0039, -1170.1107, 25.2544, 90.0000, -1, -1, 100);
	J_AddStaticVehicleEx(462, 2230.0129, -1173.5667, 25.2544, 90.0000, -1, -1, 100);
	
	J_AddStaticVehicleEx(462, 1786.2361, -1642.0621, 12.9305, 270.0000, 1, 1, 120);
	J_AddStaticVehicleEx(462, 1786.2361, -1639.0221, 12.9305, 270.0000, 1, 1, 120);
	J_AddStaticVehicleEx(462, 1786.2361, -1635.9021, 12.9305, 270.0000, 1, 1, 120);
	J_AddStaticVehicleEx(462, 1786.2361, -1632.6960, 12.9305, 270.0000, 1, 1, 120);
	J_AddStaticVehicleEx(462, 1786.2361, -1629.5840, 12.9305, 270.0000, 1, 1, 120);
	J_AddStaticVehicleEx(462, 1786.2361, -1658.9287, 12.9305, 270.0000, 1, 1, 120);
	J_AddStaticVehicleEx(462, 1786.2361, -1662.4287, 12.9305, 270.0000, 1, 1, 120);
	J_AddStaticVehicleEx(462, 1786.2361, -1665.9287, 12.9305, 270.0000, 1, 1, 120);
	J_AddStaticVehicleEx(462, 1786.2361, -1669.0907, 12.9305, 270.0000, 1, 1, 120);

	J_AddStaticVehicleEx(462, -85.2464, -313.4781, 0.9261, 89.0466, -1, -1, 200);
	J_AddStaticVehicleEx(462, -85.2508, -314.6550, 0.9261, 89.0466, -1, -1, 200);
	J_AddStaticVehicleEx(462, -85.2205, -315.8159, 0.9261, 89.0466, -1, -1, 200);

	J_AddStaticVehicleEx(462, 1348.5857,287.1873,19.1417,155.5508, -1, -1, 100);
	J_AddStaticVehicleEx(462, 1346.9385,287.8734,19.1410,148.9387, -1, -1, 100);
	J_AddStaticVehicleEx(462, 1345.3339,288.7947,19.1238,155.1355, -1, -1, 100);
	J_AddStaticVehicleEx(462, 1343.8882,289.4364,19.1251,149.5628, -1, -1, 100);
	J_AddStaticVehicleEx(462, 1342.1022,290.2208,19.1264,149.7179, -1, -1, 100);
	
	royalcar = J_AddStaticVehicleEx(411, 2243.1891, 1824.1936, 1030.8657,-90.0000, 1, -1, 5, 0, 0, 2);//ROYAL
	CreateDynamic3DTextLabel("{C9EAFF}Может стать твоей\n\n{ff4400}Сорви джекпот и получи\nшанс выиграть этот автомобиль", -1, 0, 0, 0+1, 15.0, INVALID_PLAYER_ID, royalcar);
	
 	for(new i = 0;i < sizeof(ArendInfo);i ++)
	{
	    ArendCar[i] = J_AddStaticVehicleEx(ArendInfo[i][aID], ArendInfo[i][aPos_X], ArendInfo[i][aPos_Y], ArendInfo[i][aPos_Z], ArendInfo[i][aPos_A], ArendInfo[i][aColor_1], ArendInfo[i][aColor_2], 0);
		ARENDCARS ++;
	}
    print("All rentcars created");
	CreateJobVehicle(JOB_NALOG,498, 1520.5752, -1044.9807, 23.6544, 245.0000, 6,1,RES_CAR_TIME);
	CreateJobVehicle(JOB_NALOG,498, 1508.4005, -1041.8052, 23.4839, 263.8714, 6,1,RES_CAR_TIME);
	//---------------------------------------------------------------------------------
	CreateJobVehicle(JOB_SCRAPER,413, 2463.4534, -2627.4004, 13.9394, 269.3257,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_SCRAPER,413, 2463.4180, -2617.3396, 13.9394, 269.3257,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_SCRAPER,413, 2463.4636, -2606.5388, 13.9394, 269.3257,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_SCRAPER,413, 2463.4990, -2596.2339, 13.9394, 269.3257,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_SCRAPER,413, 2463.5344, -2586.1101, 13.9394, 269.3257,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_SCRAPER,413, 2463.4807, -2565.0964, 13.9394, 269.3257,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_SCRAPER,413, 2463.4768, -2575.5710, 13.9394, 269.3257,0,0,RES_CAR_TIME); //
    CreateJobVehicle(JOB_SCRAPER,413, 1052.9906, 1920.8795, 11.3154, 360.0000,0,0,RES_CAR_TIME); //
    CreateJobVehicle(JOB_SCRAPER,413, 1060.4225, 1920.7687, 11.3154, 360.0000,0,0,RES_CAR_TIME); //
    CreateJobVehicle(JOB_SCRAPER,413, 1067.7998, 1920.8162, 11.3154, 360.0000,0,0,RES_CAR_TIME); //
    CreateJobVehicle(JOB_SCRAPER,413, 1076.7444, 1921.1068, 11.3154, 360.0000,0,0,RES_CAR_TIME); //
    CreateJobVehicle(JOB_SCRAPER,413, 1082.6561, 1920.6902, 11.3154, 360.0000,0,0,RES_CAR_TIME); //
    CreateJobVehicle(JOB_SCRAPER,413, 1091.5621, 1920.9321, 11.3154, 360.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_COLLECTOR,428, 1362.7135, -1635.4933, 13.3804, 270.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_COLLECTOR,428, 1362.9839, -1643.3324, 13.3804, 270.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_COLLECTOR,428, 1362.9490, -1651.0912, 13.3804, 270.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_COLLECTOR,428, 1362.8265, -1658.9108, 13.3804, 270.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_COLLECTOR,428, 2412.0967, 2315.1018, 10.7409, 270.0538,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_COLLECTOR,428, 2412.1970, 2319.7830, 10.7409, 270.0538,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_COLLECTOR,428, 2412.2061, 2324.8198, 10.7409, 270.0538,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_COLLECTOR,428, 2412.3059, 2329.8906, 10.7409, 270.0538,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_COLLECTOR,428, 2412.2432, 2335.1106, 10.7409, 270.0538,0,0,RES_CAR_TIME); //
	GLS[43] = 1;
	new meccar = CreateJobVehicle(JOB_MECHANIC,525, 1132.5924, -1671.2059, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1132.6256, -1675.8069, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1132.5924, -1680.9872, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1132.5658, -1686.3081, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1132.5170, -1691.8745, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1132.5253, -1696.5049, 13.6245, 270.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1963.6002, 2170.7954, 10.6195, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1963.5939, 2162.4075, 10.6195, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1963.7297, 2154.1882, 10.6195, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, 1963.7506, 2145.8806, 10.6195, 90.0000, 6, 6, RES_CAR_TIME);

	CreateJobVehicle(JOB_MECHANIC,525, 1617.7051, -1137.0414, 24.2880, 270.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_MECHANIC,525, 1617.7051, -1132.6008, 24.2880, 270.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_MECHANIC,525, 1617.7051, -1128.0978, 24.2880, 270.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_MECHANIC,525, 1617.7051, -1123.7153, 24.2880, 270.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_MECHANIC,525, 1617.7051, -1119.1040, 24.2880, 270.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_MECHANIC,525, 1648.6458, -1135.3395, 24.2880, 0.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_MECHANIC,525, 1652.8254, -1135.3395, 24.2880, 0.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_MECHANIC,525, 1657.1687, -1135.3395, 24.2880, 0.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_MECHANIC,525, 1661.7330, -1135.3395, 24.2880, 0.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_MECHANIC,525, 1665.9929, -1135.3395, 24.2880, 0.0000,0,0,RES_CAR_TIME); //
	CreateJobVehicle(JOB_MECHANIC,525, -2265.8577, 185.1595, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, -2265.7842, 188.8805, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, -2265.6499, 192.6978, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, -2265.5996, 204.5557, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	CreateJobVehicle(JOB_MECHANIC,525, -2265.6047, 196.6815, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);
	new meccar2 = CreateJobVehicle(JOB_MECHANIC,525, -2265.6130, 212.5199, 35.0016, 90.0000, 6, 6, RES_CAR_TIME);

	for(new i = meccar; i <= meccar2; i ++)
	{
		format(str,sizeof(str),"{D94141}Заправка: $%.1f\n{C9EAFF}Топливо: %d/1000",BenzinCena[i],BenzinCount[i]);
		Benzin[i] = CreateDynamic3DTextLabel(str, 0xFFFFFFFF, 0, 0, 0+2, 15.0, INVALID_PLAYER_ID, i);
	}

	CreateDynamicObject(984, 1177.60254, -1775.71387, 13.43050,   360.00000, 360.00000, 360.00000);
	CreateDynamicObject(984, 1177.60254, -1759.13391, 13.43050,   360.00000, 360.00000, 360.00000);
	CreateDynamicObject(984, 1177.60254, -1746.13391, 13.43050,   360.00000, 360.00000, 360.00000);
	CreateDynamicObject(984, 1177.59387, -1733.34668, 13.43050,   360.00000, 360.00000, 360.00000);
	CreateDynamicObject(984, 1177.59119, -1728.54761, 13.43050,   360.00000, 360.00000, 360.00000);
	CreateDynamicObject(984, 1177.60254, -1817.82397, 13.43050,   360.00000, 360.00000, 360.00000);
	CreateDynamicObject(984, 1177.60254, -1830.61743, 13.43050,   360.00000, 360.00000, 360.00000);
	CreateDynamicObject(984, 1177.59509, -1836.99683, 13.43050,   360.00000, 360.00000, 360.00000);

	//LS
	CreateJobVehicle(JOB_TAXI,451,1063.50000000,-1763.90002441,13.19999981,270.00000000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451,1063.59997559,-1775.69995117,13.19999981,270.00000000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551,1063.59997559,-1769.69995117,13.19999981,270.00000000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551,1063.59997559,-1758.00000000,13.30000019,270.00000000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551,1063.59997559,-1752.00000000,13.30000019,270.00000000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551,1063.59997559,-1746.09997559,13.30000019,270.00000000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551,1063.50000000,-1740.19995117,13.30000019,270.00000000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,469,1098.90002441,-1763.80004883,13.60000038,90.00000000,1,1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,469,1098.80004883,-1757.80004883,13.60000038,90.00000000,1,1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,469,1098.69995117,-1752.00000000,13.60000038,90.00000000,1,1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,469,1099.00000000,-1769.69995117,13.50000000,90.00000000,1,1,RES_CAR_TIME);
	//Glen
	CreateJobVehicle(JOB_TAXI,451, 2147.6467, -1157.3550, 23.4894, 270.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, 2147.5330, -1161.6392, 23.4894, 270.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2147.4675, -1166.2587, 23.4894, 270.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2147.4338, -1170.8635, 23.4894, 270.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2147.4719, -1175.7715, 23.4894, 270.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2147.4368, -1180.2921, 23.4894, 270.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2147.3428, -1184.9250, 23.4894, 270.0000,6,6,RES_CAR_TIME);
	//За заводом
	CreateJobVehicle(JOB_TAXI,551, 159.5747, -163.4501, 1.3221, 90.4101,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 159.5734, -166.6906, 1.3221, 90.4101,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 159.5098, -171.8708, 1.3221, 90.4101,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 159.5204, -175.7410, 1.3221, 90.4101,6,6,RES_CAR_TIME);
	//ЖДЛВ
	CreateJobVehicle(JOB_TAXI,551, 2805.2815, 1326.1350, 10.3866, 270.4524,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2805.2175, 1332.6567, 10.3866, 270.4524,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2805.2437, 1338.9758, 10.3866, 270.4524,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2805.1868, 1345.3809, 10.3866, 270.4524,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2805.1108, 1351.7854, 10.3866, 270.4524,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2805.0063, 1358.2195, 10.3866, 270.4524,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, 2804.9702, 1364.3650, 10.3866, 270.4524,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, 2804.9580, 1370.8323, 10.3866, 270.4524,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,469, 2813.5513, 1375.0787, 10.3866, 180.6553,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,469, 2810.2532, 1375.0620, 10.3866, 180.6553,6,6,RES_CAR_TIME);
	//Come-A-Lot
	CreateJobVehicle(JOB_TAXI,551, 2157.8330, 987.9869, 10.4502, 360.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2151.2722, 987.9686, 10.4502, 360.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2144.9858, 987.9401, 10.4502, 360.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2138.5859, 987.9042, 10.4502, 360.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2132.1841, 988.0284, 10.4502, 360.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, 2132.1846, 1006.5904, 10.4502, 90.1051,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, 2132.1926, 1012.9504, 10.4502, 90.1051,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, 2132.3030, 1019.2924, 10.4502, 90.1051,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, 2132.3093, 1025.6713, 10.4502, 90.1051,6,6,RES_CAR_TIME);
	//lv
	CreateJobVehicle(JOB_TAXI,451, 2593.8528, 1981.6957, 10.4542, 90.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, 2593.8813, 1976.3496, 10.4542, 90.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, 2593.9207, 1971.0695, 10.4542, 90.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2578.6936, 1977.0005, 10.4442, 270.2696,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2578.6550, 1981.9984, 10.4442, 270.2696,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, 2578.6477, 1987.0333, 10.4442, 270.2696,6,6,RES_CAR_TIME);
	//ЖДСФ
	CreateJobVehicle(JOB_TAXI,551, -1964.7651, 105.5459, 27.4084, 90.2113,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -1964.7872, 100.6797, 27.4084, 90.2113,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -1964.7867, 98.1396, 27.4084, 90.2113,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -1964.7623, 93.2782, 27.4084, 90.2113,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -1964.7936, 90.6587, 27.4084, 90.2113,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -1964.7448, 85.6379, 27.4084, 90.2113,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -1964.7343, 80.7575, 27.4084, 90.2113,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, -1975.9830, 83.7797, 27.4084, 270.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, -1976.0020, 86.2425, 27.4084, 270.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -1975.9562, 91.2848, 27.4084, 270.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,469, -1976.0045, 96.2337, 27.4084, 270.0000,6,6,RES_CAR_TIME);
	//sf
	CreateJobVehicle(JOB_TAXI,451, -2265.7043, 149.1152, 35.0484, 90.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, -2265.6655, 144.8691, 35.0484, 90.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, -2265.6516, 140.8833, 35.0484, 90.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,451, -2265.7063, 137.1782, 35.0484, 90.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -2265.6272, 132.9890, 35.0484, 90.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -2265.6531, 128.9456, 35.0484, 90.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -2265.7651, 125.0309, 35.0484, 90.0000,6,6,RES_CAR_TIME);
	CreateJobVehicle(JOB_TAXI,551, -2265.4949, 121.1020, 35.0484, 90.0000,6,6,RES_CAR_TIME);
	
	CreateJobVehicle(JOB_TRUCKER,514,1995.4604, -2046.2675, 14.0539, -90.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514,1995.4604, -2040.8676, 14.0539, -90.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514,1995.4604, -2035.4677, 14.0539, -90.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514,2004.1003, -2035.4677, 14.0539, 180.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,514,2009.2303, -2035.4677, 14.0539, 180.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(1,431, 1277.0647, -1805.6693, 13.3232, 90.0000,43,1,RES_CAR_TIME); //Bus
	CreateJobVehicle(1,431, 1277.0647, -1796.3993, 13.3332, 90.0000,43,1,RES_CAR_TIME); //Bus
    CreateJobVehicle(1,431, 1277.0647, -1810.6693, 13.3332, 90.0000,43,1,RES_CAR_TIME); //Bus
    CreateJobVehicle(1,431, 1277.0647, -1815.6693, 13.3332, 90.0000,43,1,RES_CAR_TIME); //Bus
    CreateJobVehicle(1,431, 1277.0647, -1825.6693, 13.3332, 90.0000,43,1,RES_CAR_TIME); //Bus
    CreateJobVehicle(1,431, 1277.0647, -1830.6693, 13.3332, 90.0000,43,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, 1277.0647, -18356692.0000, 13.3332, 90.0000,43,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, 1200.7920, -1829.0747, 13.3332, 270.0000,43,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, 1200.7728, -1834.2271, 13.3332, 270.0000,43,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(1,431, 2794.7163, 1292.5970, 10.7482, 180.0000,6,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, 2788.2739, 1292.6022, 10.7482, 180.0000,6,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, 2785.1704, 1292.6265, 10.7482, 180.0000,6,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, 2778.5483, 1292.5355, 10.7482, 180.0000,6,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, 2775.5710, 1292.6011, 10.7482, 180.0000,6,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, 2767.6765, 1281.5607, 10.7482, 270.0000,6,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, 2767.6912, 1278.4785, 10.7482, 270.0000,6,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, 2767.7268, 1271.9985, 10.7482, 270.0000,6,1,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, -2159.3274, 303.4340, 35.0653, 180.1683,1,6,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, -2167.1770, 303.3369, 35.0653, 180.1683,1,6,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, -2163.0901, 303.3921, 35.0653, 180.1683,1,6,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, -2175.4285, 303.3306, 35.0653, 180.1683,1,6,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, -2179.9001, 303.2414, 35.0653, 180.1683,1,6,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, -2210.0623, 296.2733, 35.0653, 360.0000,1,6,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, -2214.1479, 296.2141, 35.0653, 360.0000,1,6,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, -2222.5984, 296.1785, 35.0653, 360.0000,1,6,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, -2226.8101, 296.1526, 35.0653, 360.0000,1,6,RES_CAR_TIME); //Coach
    CreateJobVehicle(1,431, -2235.4680, 296.1688, 35.0653, 360.0000,1,6,RES_CAR_TIME); //Coach
	CreateJobVehicle(1,431, 2767.7498, 1268.8586, 10.7482, 270.0000,6,1,RES_CAR_TIME); //Coach
	new prodcar = CreateJobVehicle(3,456, 901.3243, -1207.0145, 16.9306, 180.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 867.2712, -1207.0145, 16.9306, 180.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 830.9780, -1207.0145, 16.9306, 180.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 866.5544, -1245.3495, 14.9935, 270.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 866.2090, -1255.6030, 14.9935, 270.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 850.6572, -1293.2709, 13.6845, 270.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 1635.6804, 2303.1755, 10.6776, 90.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 1635.6804, 2312.7637, 10.6776, 90.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 1635.6804, 2340.8357, 10.6776, 90.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 1638.8076, 2358.9194, 10.8176, 90.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 1593.5557, 2286.7019, 10.8176, 270.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, 1593.5557, 2294.4829, 10.8176, 270.0000,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, -28.2736, 47.2231, 3.0746, 250.2569,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, -30.8920, 39.9784, 3.0746, 250.2569,228,1,RES_CAR_TIME); //Coach
	CreateJobVehicle(3,456, -33.3566, 33.0568, 3.0746, 250.2569,228,1,RES_CAR_TIME); //Coach
	new prodcar2 = CreateJobVehicle(3,456, -35.9212, 25.8792, 3.0746, 250.2569,228,1,RES_CAR_TIME); //Coach
	for(new i = prodcar; i <= prodcar2; i ++)
	{
	    CarproductType[i] = 0;
	    CarproductCount[i]=0;
		format(str,sizeof(str),"Развозчик продуктов\n{43CD80}Загружено: %d/500",CarproductCount[i]);
		Product[i] = CreateDynamic3DTextLabel(str, 0xFFFFFFFF, 0, 0, 0+3, 15.0, INVALID_PLAYER_ID, i);
	}
	CreateJobVehicle(JOB_TRUCKER,591,1989.8503, -2066.8071, 13.4403, 90.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591,1989.8420, -2062.7390, 13.4403, 90.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591,1989.8503, -2058.7070, 13.4403, 90.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591,1978.5103, -2058.7070, 13.4403, 90.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,591,1978.5103, -2066.8071, 13.4403, 90.0000,-1,-1,RES_CAR_TIME);
	CreateJobVehicle(JOB_TRUCKER,403, 2283.7920, -2361.7754, 13.7764, 315.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,584, 2345.8572, -2340.9146, 14.6157, 45.6939,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,584, 2349.1504, -2337.4753, 14.6157, 45.2318,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,584, 2352.7537, -2333.7805, 14.6157, 45.2318,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,584, 2356.8618, -2329.6274, 14.6157, 45.2318,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,584, 2361.9436, -2324.5420, 14.6157, 45.2318,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,584, 2365.4797, -2320.8169, 14.6157, 45.2318,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,584, 2369.2466, -2317.1560, 14.6157, 45.2318,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,403, 2281.1604, -2359.0247, 13.7764, 315.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,403, 2278.2554, -2356.1472, 13.7764, 315.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,403, 2275.0803, -2352.8027, 13.7764, 315.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,403, 2271.9958, -2349.7327, 13.7764, 315.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,403, 2269.0525, -2346.7141, 13.7764, 315.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,403, 2266.0740, -2343.7979, 13.7764, 315.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,403, 2262.9104, -2340.6689, 13.7764, 315.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	///////////lv
	CreateJobVehicle(JOB_TRUCKER,403, 283.2295, 1438.1410, 11.0016, 90.2786,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,403, 283.1770, 1443.2140, 11.0016, 90.2786,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,403, 283.1367, 1448.1686, 11.0016, 90.2786,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,403, 283.2121, 1453.6683, 11.0016, 90.2786,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,403, 283.0680, 1458.7559, 11.0016, 90.2786,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,403, 283.0476, 1463.7240, 11.0016, 90.2786,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,403, 282.9244, 1468.6151, 11.0016, 90.2786,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,403, 282.6463, 1473.5391, 11.0016, 90.2786,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,403, 282.6335, 1478.9354, 11.0016, 90.2786,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,584, 283.4396, 1388.0272, 11.5307, 90.0000,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,584, 283.5101, 1381.8278, 11.5307, 90.0000,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,584, 283.5234, 1376.4355, 11.5307, 90.0000,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,584, 283.6128, 1370.9796, 11.5307, 90.0000,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,584, 283.6699, 1365.1796, 11.5307, 90.0000,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,584, 283.6070, 1359.5594, 11.5307, 90.0000,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,584, 283.4159, 1353.5386, 11.5307, 90.0000,-1,-1,RES_CAR_TIME); //Trailer 3
    CreateJobVehicle(JOB_TRUCKER,584, 283.4125, 1347.8372, 11.5307, 90.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,514, 2818.0342, 898.4192, 11.0842, 360.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,514, 2827.2937, 898.4471, 11.0842, 359.3848,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,514, 2855.2280, 898.3457, 11.0842, 359.3848,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,514, 2801.5776, 968.6064, 11.0842, 180.9509,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,514, 2822.7566, 968.4808, 11.0842, 180.9509,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,514, 2828.0725, 968.5270, 11.0842, 180.9509,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,514, 2807.1160, 968.5431, 11.0842, 180.9509,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,591, 2875.9521, 937.7621, 11.2442, 91.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,591, 2876.1030, 932.4043, 11.2442, 91.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,591, 2876.1101, 926.7573, 11.2442, 91.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,591, 2876.1948, 921.3900, 11.2442, 91.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,591, 2876.1301, 916.0045, 11.2442, 91.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,591, 2876.1934, 910.3636, 11.2442, 91.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	CreateJobVehicle(JOB_TRUCKER,591, 2876.2161, 905.1071, 11.2442, 91.0000,-1,-1,RES_CAR_TIME); //Trailer 3
	//////
	CreateTeamVehicle(TEAM_ARMYLV,1, 425,288.3243,1928.8093,18.2336,275.8014,37,37, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMYLV,1, 500,221.9194,1855.0072,13.0356,1.6078,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,217.1713,1854.8744,13.0242,1.6078,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,212.6617,1854.7483,13.0134,1.6078,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,203.7943,1862.3488,13.2462,271.1720,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,203.7240,1866.9736,13.2801,271.3324,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,203.5927,1872.2008,13.2459,271.1720,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,152.90450000,1970.09780000, 19.92540000,269.68860000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,153.69040000,1964.66420000, 20.11020000,267.78740000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,156.62200000,1958.41270000, 20.02840000,270.06060000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,172.75340000,1953.63980000, 20.06320000,270.24240000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,172.99880000,1958.34790000, 20.00980000,268.88950000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,173.07350000,1963.36410000, 19.93220000,270.17900000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,173.13080000,1968.48190000, 20.04760000,270.81270000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,172.93550000,1973.29700000, 20.05970000,269.62710000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,173.09060000,1978.29140000, 20.10240000,269.76820000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 500,172.92090000,1983.38120000, 20.00140000,268.40320000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,184.40990000,1945.04360000, 19.65430000,91.06440000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,183.96970000,1950.09970000, 19.78680000,88.88780000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,183.67430000,1954.93640000, 19.77820000,90.21300000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,184.13430000,1960.09620000, 19.57300000,88.98510000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,183.87360000,1965.14810000, 19.73130000,91.99030000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,184.05790000,1970.22350000, 19.77450000,89.54330000,77,77, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMYLV,1, 470,183.93110000,1975.23380000, 19.79280000,90.13170000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,183.60440000,1980.46470000, 19.71780000,90.51290000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,183.64470000,1985.51730000, 19.79170000,88.25440000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,183.76640000,1990.41660000, 19.74800000,88.68630000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,183.59310000,1995.62610000, 19.76930000,87.44930000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,274.89999390,1945.69995117,17.79999924,269.25000000,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 470,274.70001221,1966.09997559,17.79999924,269.24743652,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433,275.2985,1982.4747,18.0773,269.3129,34,34, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433,275.3807,1989.3337,18.0773,269.3129,34,34, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433,275.4670,1996.5306,18.0773,269.3129,34,34, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433,274.89999390,1951.19995117,17.79999924,269.24743652,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433,274.60000610,1955.80004883,17.79999924,269.24743652,77,77, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYLV,1, 433,274.79998779,1960.59997559,17.79999924,269.24743652,77,77, RES_CAR_TIME);

	//Radio Studio
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.5748, -1693.0895, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.5333, -1696.9873, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.4792, -1704.1243, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.5447, -1700.5864, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,582, 1668.4730, -1708.0327, 15.5849, 88.9162, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIO,1,488, 1668.1779, -1714.1947, 20.5305, 24.2905, 6,1,RES_CAR_TIME);
	////
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1976.5669, 447.5035, 35.2690, 90.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1976.5669, 444.0035, 35.2690, 90.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1976.5669, 440.5035, 35.2690, 90.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1976.5669, 437.0035, 35.2690, 90.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1976.5669, 433.0035, 35.2690, 90.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,582, -1976.5669, 429.0035, 35.2690, 90.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,585, -1976.5669, 451.0035, 35.2690, 90.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,585, -1976.5669, 425.5035, 35.2690, 90.0000, 5,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOSF,1,488, -1904.0132, 437.0794, 35.7320, 358.0000, 5,1,RES_CAR_TIME);
	//Radio Studio
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2674.3630, 1167.9310, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2669.0906, 1167.9784, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2664.0469, 1168.0015, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2659.0396, 1168.0638, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2653.9482, 1168.0232, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,582, 2643.9392, 1167.9216, 10.7936, 359.0000, 17,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RADIOLV,1,488, 2645.1099, 1210.6233, 27.2443, 19.5005, 17,1,RES_CAR_TIME);
	//sf m4s
	CreateTeamVehicle(TEAM_MERIALV,1,416, -2544.0093, 586.9008, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALV,1,416, -2543.9749, 592.9135, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALV,1,416, -2543.9980, 598.9249, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALV,1,416, -2543.9631, 604.8779, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALV,1,416, -2544.0520, 610.7438, 14.4942, 90.0000, 6,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALV,1,426, -2572.4500, 627.6297, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALV,1,426, -2572.5378, 632.8685, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALV,1,426, -2572.7861, 647.4091, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALV,1,426, -2572.7981, 658.3743, 14.1200, 270.0000, 2,1,RES_CAR_TIME);
	//lv m4s
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1593.6510, 1840.2689, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1597.9547, 1840.3273, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1602.2014, 1840.3251, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1606.3016, 1840.2615, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,416, 1610.6777, 1840.2601, 10.9372, 360.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,426, 1620.2689, 1850.2357, 10.4923, 180.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MEDICLV,1,426, 1616.0072, 1850.2614, 10.4923, 180.0000, 7,1,RES_CAR_TIME);
	//bank
	CreateTeamVehicle(TEAM_BANK,1,428, 1419.3588, -1690.9945, 13.7001, 180.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,428, 1419.3588, -1683.4945, 13.7001, 180.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,428, 1419.3588, -1675.9945, 13.7001, 180.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,533, 1419.3588, -1668.4945, 13.7001, 180.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,533, 1419.3588, -1660.9945, 13.7001, 180.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,580, 1414.9033, -1715.6074, 13.5417, -90.0000, 36,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BANK,1,580, 1414.9033, -1711.6074, 13.5417, -90.0000, 36,0,RES_CAR_TIME);
	//ls m4c
	CreateTeamVehicle(TEAM_M4C,2,416, 1178.6661, -1338.4050, 14.0606, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_M4C,2,416, 1179.3043, -1308.4926, 14.0136, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_M4C,2,416, 1225.5952, -1316.2213, 13.5703, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_M4C,2,416, 1225.5952, -1312.7073, 13.5703, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_M4C,2,416, 1225.5952, -1309.1934, 13.5703, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_M4C,2,416, 1225.5952, -1305.6793, 13.5703, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_M4C,2,416, 1225.5952, -1302.1653, 13.5703, 270.0000, 3,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_M4C,5,487, 1236.5646,-1300.8876,13.3204,180.0000, 3,1,RES_CAR_TIME);
	////////////////////////////////// ??????? ?????
	CreateTeamVehicle(TEAM_RM,1,579, 984.4582, 1747.0344, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,579, 984.4969, 1742.9897, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,579, 984.4497, 1738.9713, 8.4832, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,409, 950.2493, 1743.6547, 8.2832, 179.4013, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,580, 984.4694, 1719.4099, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,580, 984.3997, 1723.1316, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,580, 984.5228, 1727.1056, 8.2822, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,468, 947.9976, 1724.3361, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,468, 948.0338, 1725.7334, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,468, 947.8561, 1722.8571, 8.4332, 250.2157, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,421, 971.9404, 1769.3865, 8.5141, 180.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,421, 971.8877, 1778.1040, 8.5141, 180.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RM,1,421, 971.9247, 1787.2513, 8.5141, 180.0000, 0,0,RES_CAR_TIME);
	////////////////////////////////// ?????? --------------------------------------------------------
	CreateTeamVehicle(TEAM_YAKUZA,1,409, 2550.2788, 1841.6798, 10.5080, 89.5878, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,550, 2591.3743, 1833.8149, 10.5380, 89.5878, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,550, 2591.3831, 1836.9951, 10.5380, 89.5878, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,550, 2591.4011, 1846.6364, 10.5380, 89.5878, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,550, 2591.2788, 1856.3115, 10.5380, 89.5878, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,405, 2603.4258, 1815.1315, 10.5380, 270.2057, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,550, 2591.3010, 1805.5138, 10.5380, 89.5878, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,405, 2603.4248, 1811.8713, 10.5380, 270.2057, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,405, 2603.3625, 1833.8486, 10.5380, 270.2057, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,405, 2603.4297, 1837.0922, 10.5380, 270.2057, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,405, 2603.4785, 1843.4371, 10.5380, 270.2057, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,405, 2603.4463, 1846.6671, 10.5380, 270.2057, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,405, 2603.4492, 1853.0570, 10.5380, 270.2057, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,468, 2630.5073, 1842.4403, 10.5380, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,468, 2630.5569, 1845.7053, 10.5380, 90.0000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_YAKUZA,1,468, 2630.5688, 1848.9652, 10.5380, 90.0000, 0,0,RES_CAR_TIME);
	////////////////////////////////// ??? -------------------------------------------------------------------
	CreateTeamVehicle(TEAM_LCN,1,409, 1472.1443, 2778.5149, 10.2784, 0.7317, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2813.7498, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2818.3545, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2822.7544, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2827.2556, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,507, 1529.1272, 2831.7986, 10.5784, 90.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,445, 1495.9521, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,445, 1500.3752, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,445, 1504.7489, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,445, 1509.1300, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,445, 1513.6281, 2878.5740, 10.5784, -180.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2826.1260, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2830.3674, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2834.5801, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,457, 1424.0525, 2838.8606, 10.5784, 270.0000, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,468, 1459.1582, 2761.9631, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,468, 1459.3872, 2760.5962, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LCN,1,468, 1459.5973, 2759.4551, 10.3589, 299.7231, 72,0,RES_CAR_TIME);
	////////////////////////////////// ????? ?? -------------------------------------------------------------------
	CreateTeamVehicle(TEAM_MERIALS,1,409, 1406.5369, -1776.2697, 13.1876, 137.0399, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,400, 1407.6885, -1783.6926, 13.4209, 90.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,400, 1407.6885, -1786.9556, 13.4209, 90.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,400, 1407.6885, -1790.2186, 13.4209, 90.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,400, 1407.6885, -1793.4816, 13.4209, 90.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,421, 1407.6885, -1796.7446, 13.4609, 90.0000, 1,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_MERIALS,1,421, 1407.6885, -1800.0076, 13.4609, 90.0000, 1,1,RES_CAR_TIME);
	//
	CreateTeamVehicle(TEAM_ARMY,1, 470,2739.5549,-2419.2371,13.6304,270.2878, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470,2739.5923,-2423.3367,13.6305,270.9906, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470,2739.6287,-2427.6265,13.6315,271.0866, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470,2743.4583,-2448.7090,13.6656,270.0050, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMY,1, 470,2743.4321,-2444.9141,13.6371,270.5514, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470,2743.3860,-2441.0242,13.6362,270.8676, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470,2736.8411,-2474.9597,13.6466,270.41480, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470,2736.8289,-2471.1628,13.6426,269.8400, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470,2736.8328,-2467.4814,13.6651,269.7310, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470,2736.8308,-2463.7458,13.6885,269.8215, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470,2736.8667,-2478.7322,13.6415,270.8732, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 470,2736.7996,-2460.1074,13.6475,269.3318, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 433,2735.5662,-2392.9441,13.6267,140.8576, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 433,2740.5520,-2392.8936,13.6257,142.6246, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 433,2745.5024,-2392.9404,13.6255,142.6646, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 433,2750.4390,-2392.9768,13.6442,143.1559, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMY,1, 548,2773.1833,-2354.5332,15.3227,270.0318, 44, 1, RES_CAR_TIME);
	//
	CreateTeamVehicle(TEAM_ARMYSF,1,430, -1509.3613, 504.2921, 0.4866, -90.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,430, -1509.3613, 509.2921, 0.4866, -90.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,430, -1509.3613, 514.2921, 0.4866, -90.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,430, -1509.3613, 499.2921, 0.4866, -90.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,470, -1579.0044, 397.8436, 7.1891, 0.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,470, -1574.0044, 397.8436, 7.1891, 0.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,470, -1569.0044, 397.8436, 7.1891, 0.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,470, -1564.0044, 397.8436, 7.1891, 0.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,470, -1579.0044, 411.3436, 7.1891, 180.0000,  44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMYSF,1,470, -1574.0044, 411.3436, 7.1891, 180.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,470, -1569.0044, 411.3436, 7.1891, 180.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,470, -1564.0044, 411.3436, 7.1891, 180.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,500, -1562.0465, 371.9815, 7.1881, -90.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,500, -1562.0465, 366.9815, 7.1881, -90.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,500, -1562.0465, 361.9815, 7.1881, -90.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,437, -1546.8226, 321.7191, 7.1859, 0.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,437, -1551.8226, 321.7191, 7.1859, 0.0000,  44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,437, -1556.8226, 321.7191, 7.1859, 0.0000,  44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMYSF,1,433, -1575.9304, 361.8862, 7.5808, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,433, -1570.9304, 361.8862, 7.5808, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,433, -1580.9304, 361.8862, 7.5808, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,433, -1604.9281, 360.4842, 7.5808, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,433, -1609.9281, 360.4842, 7.5808, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,433, -1599.9281, 360.4842, 7.5808, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,433, -1614.9281, 360.4842, 7.5808, 180.0000, 44, 1, RES_CAR_TIME);
    CreateTeamVehicle(TEAM_ARMYSF,1,433, -1585.9304, 361.8862, 7.5808, 180.0000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMYSF,1,548, -1612.6558, 330.8487, 8.7628, 270.0000, 44, 1, RES_CAR_TIME);
	CreateTeamVehicle(TEAM_ARMYSF,1,548, -1631.1943, 338.5131, 8.7554, 270.0000, 44, 1, RES_CAR_TIME);
	//
	CreateTeamVehicle(TEAM_SFPD,2,597, -1600.3561, 749.6301, -5.5348, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,2,597, -1596.3401, 749.6301, -5.5348, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,2,597, -1592.0731, 749.6301, -5.5348, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,2,597, -1588.0571, 749.6301, -5.5348, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,2,597, -1584.0411, 749.6301, -5.5348, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,2,597, -1580.0251, 749.6301, -5.5348, 180.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,2,523, -1612.4977, 732.8409, -5.7693, 0.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,2,523, -1616.5137, 732.8409, -5.7693, 0.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,3,599, -1574.2128, 742.5521, -5.0101, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,3,599, -1574.2128, 738.5361, -5.0101, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,3,599, -1574.2128, 734.7711, -5.0101, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,3,599, -1574.2128, 730.7551, -5.0101, 90.0000, 1,15,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_SFPD,3,525, -1574.2128, 726.4297, -5.3397, 90.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,3,525, -1574.2128, 722.4137, -5.3397, 90.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,3,525, -1574.2128, 718.3977, -5.3397, 90.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,3,525, -1574.2128, 714.3817, -5.3397, 90.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,10,491, -1588.4854, 708.2356, -5.4874, 270.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,4,601, -1596.0704, 677.7892, -5.4866, 0.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,4,601, -1600.3374, 677.7892, -5.4866, 0.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,7,415, -1632.6198, 692.3959, -5.5511, 180.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,7,415, -1628.8549, 692.3959, -5.5511, 180.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,7,415, -1624.8387, 692.3959, -5.5511, 180.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,7,415, -1620.8228, 692.3959, -5.5511, 180.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,7,415, -1616.5558, 692.3959, -5.5511, 180.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,7,415, -1612.5398, 692.3959, -5.5511, 180.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,7,415, -1608.2728, 692.3959, -5.5511, 180.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,7,415, -1604.2568, 692.3959, -5.5511, 180.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,7,415, -1600.4918, 692.3959, -5.5511, 180.0000, 1,15,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_SFPD,7,497, -1679.8936, 705.5067, 30.7259, 47.0480, 1,15,RES_CAR_TIME);

	///
	CreateTeamVehicle(TEAM_FBI,6,497, 295.3040, -1611.4923, 114.8027, 39.9405, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,4,541, 299.9854, -1619.4790, 32.7926, 171.3000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,4,541, 305.1528, -1621.0092, 32.8519, 143.2202, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,4,541, 307.2851, -1626.9020, 32.8881, 83.1000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,8,560, 280.6035, -1620.9053, 32.6902, 196.1400, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,2,490, 271.9836, -1627.2516, 33.3779, -111.7800, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,2,490, 264.6708, -1624.1429, 33.3779, -119.5800, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,2,459, 302.8863, -1631.9406, 33.3885, 82.8000, 0,0,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_FBI,2,459, 311.3380, -1633.0259, 33.3885, 82.8000, 0,0,RES_CAR_TIME);
	//
	CreateTeamVehicle(TEAM_PDLV,3,525, 2260.4175, 2442.8896, 10.6815, 0.0000, 7,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_PDLV,3,525, 2256.1504, 2442.8896, 10.6815, 0.0000, 7,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_PDLV,3,525, 2251.8835, 2442.8896, 10.6815, 0.0000, 7,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_PDLV,2,598, 2282.0942, 2443.5737, 10.4699, 0.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,2,598, 2277.8271, 2443.5737, 10.4699, 0.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,2,598, 2273.5603, 2443.5737, 10.4699, 0.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,2,598, 2269.2932, 2443.5737, 10.4699, 0.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,2,598, 2282.0942, 2460.3115, 10.4699, 180.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,2,598, 2277.8271, 2460.3115, 10.4699, 180.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,2,598, 2273.5603, 2460.3115, 10.4699, 180.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,2,598, 2269.2932, 2460.3115, 10.4699, 180.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,4,601, 2295.0671, 2443.6914, 10.6173, 0.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,4,601, 2291.0510, 2443.6914, 10.6173, 0.0000, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,7,415, 2251.7991, 2475.9070, 10.5685, 180.0000, 7,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_PDLV,7,415, 2256.0662, 2475.9070, 10.5685, 180.0000, 7,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_PDLV,7,415, 2260.3330, 2475.9070, 10.5685, 180.0000, 7,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_PDLV,7,415, 2251.7991, 2458.1050, 10.5685, 0.0000, 7,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_PDLV,7,415, 2256.0662, 2458.1050, 10.5685, 0.0000, 7,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_PDLV,7,415, 2260.3330, 2458.1050, 10.5685, 0.0000, 7,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_PDLV,7,497, 2342.6707, 2472.6902, 39.0477, 176.9832, 7,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_PDLV,10,491, 2241.2568, 2439.1499, 10.5130, 0.0000, 7,1,RES_CAR_TIME,1);
	//
	CreateTeamVehicle(TEAM_LSPD,2,596, 1601.9399, -1684.0093, 5.5509, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,2,596, 1601.9399, -1688.0093, 5.5509, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,2,596, 1601.9399, -1692.0833, 5.5509, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,2,596, 1601.9399, -1696.1573, 5.5509, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,2,596, 1601.9399, -1700.2313, 5.5509, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,2,596, 1601.9399, -1704.3053, 5.5509, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,3,599, 1595.4359, -1709.4734, 6.0389, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,3,599, 1591.4359, -1709.4734, 6.0389, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,3,599, 1587.4359, -1709.4734, 6.0389, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,3,599, 1583.4359, -1709.4734, 6.0389, 0.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,7,497, 1552.8477, -1610.5408, 14.0469, 90.0000, 0,1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_LSPD,3,525, 1578.7124, -1709.4734, 5.8389, 0.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,3,525, 1574.5125, -1709.4734, 5.8389, 0.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,3,525, 1570.3125, -1709.4734, 5.8389, 0.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,3,525, 1566.1124, -1709.4734, 5.8389, 0.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,10,491, 1560.3969, -1694.8802, 5.6943, 180.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,7,415, 1526.6495, -1645.2894, 5.6220, 180.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,7,415, 1530.6495, -1645.2894, 5.6220, 180.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,7,415, 1534.6495, -1645.2894, 5.6220, 180.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,7,415, 1538.6495, -1645.2894, 5.6220, 180.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,7,415, 1544.2173, -1651.1641, 5.6220, 90.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,7,415, 1544.2173, -1655.1641, 5.6220, 90.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,7,415, 1544.2173, -1659.1641, 5.6220, 90.0000, 0,1,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_LSPD,7,415, 1544.2173, -1663.1641, 5.6220, 90.0000, 0,1,RES_CAR_TIME,1);
	//
	CreateTeamVehicle(TEAM_RCPD,2,596, 614.4224,-596.8713,16.9544,270.0000, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,2,596, 613.7486,-601.6826,16.9514,270.0000, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,2,596, 615.7883,-591.2003,16.9545,270.0000, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,2,596, 616.6922,-584.9808,16.9492,270.0000, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,3,599, 621.4668,-605.8457,17.3525,270.0000, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,3,599, 621.4632,-610.5536,17.3580,270.0000, 1,16,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RCPD,3,599, 637.3110,-566.4445,17.3446,180.0000, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_RCPD,3,599, 637.3110,-559.2595,17.3484,180.0000, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_RCPD,7,497, 612.9118, -603.8890, 22.8295, 215.0000, 1,16,RES_CAR_TIME);
    CreateTeamVehicle(TEAM_RCPD,3,525, 642.3864, -608.6330, 16.1555, -37.9200, 1,16,RES_CAR_TIME,1);
    CreateTeamVehicle(TEAM_RCPD,3,525, 636.5992, -608.6330, 16.1555, -37.9200, 1,16,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_RCPD,7,415, 667.2489, -580.1895, 16.2378, 90.0000, 1,16,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_RCPD,7,415, 667.2489, -583.6895, 16.2378, 90.0000, 1,16,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_RCPD,7,415, 667.2489, -587.1895, 16.2378, 90.0000, 1,16,RES_CAR_TIME,1);
	CreateTeamVehicle(TEAM_RCPD,10,491, 634.3328, -579.8776, 16.0785, 180.0000, 1,16,RES_CAR_TIME,1);
	//
	CreateTeamVehicle(TEAM_GROOVE,1, 600, 2485.0903, -1680.8488, 13.2813, 19.7400, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 600, 2488.3083, -1680.7385, 13.2813, 19.7400, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 492, 2506.0962, -1676.6655, 13.2813, -35.0400, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 492, 2508.0857, -1666.6547, 13.2813, 11.1000, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 492, 2501.6204, -1657.3187, 13.2813, 54.4800, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 478, 2498.6013, -1684.0957, 13.2813, 13.5600, 86, 86,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_GROOVE,1, 482, 2505.4092, -1694.1656, 14.2813, 0.0000, 86, 86,RES_CAR_TIME);
	//
	CreateTeamVehicle(TEAM_VAGOS,1, 467, 2771.5327, -1623.8390, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 467, 2776.0544, -1623.9009, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 467, 2780.4949, -1623.8438, 10.8047, -27.6000, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 474, 2779.6228, -1603.3281, 10.8047, -125.0400, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 474, 2785.9009, -1603.1583, 10.8047, -125.0400, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 478, 2769.9705, -1615.0035, 10.8047, -90.0000, 6, 1,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_VAGOS,1, 482, 2769.9705, -1606.8324, 10.8047, -90.0000, 6, 1,RES_CAR_TIME);
	//
	CreateTeamVehicle(TEAM_BALLAS,1, 566, 2008.8331, -1141.3059, 24.8854, 270.0000, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 566, 2008.8434, -1129.2593, 25.0132, 90.0000, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 566, 1985.5564, -1141.6482, 25.5184, 270.8255, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 419, 1993.8208, -1141.5947, 25.3474, 270.0000, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 419, 2001.6429, -1141.5061, 25.1574, 270.8112, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 478, 1994.4465, -1095.7386, 24.9574, 344.2161, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 478, 1998.7805, -1096.9128, 24.9574, 346.3077, 179, 179,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BALLAS,1, 482, 2002.2770, -1097.8044, 24.9574, 345.6925, 179, 179,RES_CAR_TIME);
	//
	CreateTeamVehicle(TEAM_CORONOS,1, 567, 2516.9424, -2005.0195, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 567, 2512.8218, -2004.6410, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 567, 2508.7004, -2004.2294, 13.2656, 140.4600, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 535, 2514.5210, -2014.6700, 13.2656, 90.0000, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 535, 2506.8916, -2014.6700, 13.2656, 90.0000, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 478, 2530.8352, -2007.6204, 13.6256, 89.5200, 2, 2,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_CORONOS,1, 482, 2530.8257, -2011.7937, 13.6256, 89.5200, 2, 2,RES_CAR_TIME);
	//
	CreateTeamVehicle(TEAM_RIFA,1, 529, 2177.5630, -1808.2943, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 529, 2173.5139, -1808.3468, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 529, 2169.4451, -1808.4357, 13.3516, -27.4200, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 439, 2172.6543, -1790.9640, 13.3516, -90.0000, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 439, 2165.4509, -1790.9640, 13.3516, -90.0000, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 478, 2190.1111, -1796.2930, 13.3516, 0.0000, 135, 135,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_RIFA,1, 482, 2190.1111, -1804.5145, 13.3516, 0.0000, 135, 135,RES_CAR_TIME);
	//
	CreateTeamVehicle(TEAM_BIKERS,1, 463, 694.9418, -473.2216, 15.7866, 268.5101, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 482,667.2937,-458.3004,16.3858,90.1459, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 482,667.4276,-461.4520,16.3934,90.0752, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463,668.6536,-464.6852,15.8379,89.1424, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463,668.6111,-467.6354,15.8379,87.3742, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, 694.6671, -470.1906, 15.7866, 268.5101, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, 694.4902, -467.1636, 15.7866, 268.5101, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, 694.4291, -464.1602, 15.7866, 268.5101, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, 694.4045, -461.0419, 15.7866, 268.5101, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, 709.5639, -458.0496, 15.7915, 90.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 413, 708.3828, -464.5707, 16.2955, 90.0000, 0, 3,RES_CAR_TIME);
	CreateTeamVehicle(TEAM_BIKERS,1, 463, 709.6432, -461.3040, 15.7915, 90.0000, 0, 3,RES_CAR_TIME);
	//
	LoadActors();
	for(new i;i<MAX_ACTORSS;i++)
	{
	    new Float: x,Float:y,Float:z;
	    GetActorPos(i,x,y,z);
	    tActor[i] = Create3DTextLabel("",COLOR_GRAY,x, y, z+1,10.0,GetActorVirtualWorld(i));
	}
	for(new i; i < 91;i ++) 	GribInfo[i][gribCreat] = CreateDynamicPickup(859,1,GribInfo[i][gribPos][0], GribInfo[i][gribPos][1], GribInfo[i][gribPos][2],-1);
	print("All businesses created");
	ADD_OBJECTS = CountDynamicObjects();
	ADD_VEHICLES = CountVehicles();
	print("All tuning components created");
	for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)
	{
	    Fuel[i] = GasMax;
	    VehicleInfo[i][vAntiRepair]=2;
	    VehicleHealth[i] = 1000;
     	TempStripObject[i] = -1;
	    if(IsAVelik(i))
			SetEngineStatus(i,true, -1);
	    for(new d;d < 10;d ++)
			VehicleSeat[i][d] = INVALID_PLAYER_ID;
	    SetVehicleToRespawn(i);
	}
	print("Vehicles Operation");
	///////bandi
	CreateDynamicMapIcon(2497.0403,-1670.8518,12.9654, 62, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2786.0085,-1616.5608,10.5467, 60, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2181.1194,-1799.4424,12.9900, 58, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2520.6709,-2010.6217,13.1715, 61, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2352.7537, -2333.7805, 14.6157, 51, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1533.7008,-1014.1130,24.0538, 55, 0, -1, -1, -1, 300.0);
	/////??????????
	CreateDynamicMapIcon(1199.32, -918.586, 43.1194, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(810.979, -1616.12, 13.5466, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1567.9766,-1897.5547,13.5608, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1367.5504,248.2412,19.5669, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(928.2542,-1352.9023,13.3438, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(611.0340,-585.7634,17.2266, 30, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2103.7222,-1804.7616,13.5547, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1038.2175,-1340.7327,13.7420, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2045.0459,-1908.0321,13.5469, 14, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(290.3592,-1619.6475,33.1258, 30, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(-1592.1372,715.8721,-5.2422, 30, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2447.9407,-1962.9333,13.5469, 37, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1177.9343,-1323.6394,14.0952, 22, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1530.7826,-1074.1027,25.0625, 25, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(875.805541, -1565.014892, 13.533462, 6, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(875.805541, -1565.014892, 13.533462, 6, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1481.055,-1772.040,18.796, 19, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2421.5164,-1219.2466,25.5615, 49, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(2309.7900,-1643.6821,14.8270, 49, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(385.8913,-1817.8950,7.8410, 49, 0, -1, -1, -1, 300.0);
	CreateDynamicMapIcon(1617.7051, -1137.0414, 24.2880, 27, 0, -1, -1, -1, 300.0);
	CreateMapping();
	CreateTextDraws();
	LoadOwnableCars();
	BizInfo[69][bEnter][0] = 2856.1978;
	BizInfo[69][bEnter][1] = 1264.4392;
	BizInfo[69][bEnter][2] = 11.3906;
	/////////////////
    for(new i = 0;i < OWNABLEBIZES;i ++)
	{
    	ac_CreateDynamicCP(BizCP[i][0],BizCP[i][1],BizInfo[i][bEnter][0], BizInfo[i][bEnter][1], BizInfo[i][bEnter][2], 1.0, -1, -1, -1, 10);
    	BizPick[i]=CreatePickupEx(19132, 1,BizInfo[i][bExit][0], BizInfo[i][bExit][1], BizInfo[i][bExit][2], (i+100));
		CreateDynamic3DTextLabel("Для выхода используйте ~k~~SNEAK_ABOUT~",0xFFCB8CFF,BizInfo[i][bExit][0], BizInfo[i][bExit][1], BizInfo[i][bExit][2],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,i+100);
    	Biz3DText[i] = CreateDynamic3DTextLabel(" Бизнес ",0x43CD80FF,BizInfo[i][bEnter][0], BizInfo[i][bEnter][1],BizInfo[i][bEnter][2],20.0);
    	if(BizInfo[i][bState] == B_GUNSHOP) CreateDynamicMapIcon(BizInfo[i][bEnter][0], BizInfo[i][bEnter][1], BizInfo[i][bEnter][2], 6, 0, -1, -1, -1, 300.0);
		else if(BizInfo[i][bState] == B_BUY) CreateDynamicMapIcon(BizInfo[i][bEnter][0], BizInfo[i][bEnter][1], BizInfo[i][bEnter][2], 17, 0, -1, -1, -1, 300.0);
		else if(BizInfo[i][bState] == 9) CreateDynamicMapIcon(BizInfo[i][bEnter][0], BizInfo[i][bEnter][1], BizInfo[i][bEnter][2], 56, 0, -1, -1, -1, 300.0);
		UpdateBiz(i,0);
	}
	print ("______________________________\n");
	printf("| Houses loaded:       %04d |",OWNABLEHOUSES);
	printf("| Businesses loaded:   %04d |",OWNABLEBIZES);
	printf("| Cars loaded:         %04d |",Iter_Count(OWNABLECARS));
	printf("| Created cars:        %04d |",ADD_VEHICLES);
	printf("| Created objects:     %04d |",ADD_OBJECTS);
	printf("| Created gangzones:   %04d |",GANGZONES);
	print (" ______________________________");
	new hour, minute, second;
	gettime(hour, minute, second);
	SetWorldTime(hour);
	SetTimer("GrandTimer",1000,1);
	SetTimer("StrobesTimer",450,1);
	SetTimer("FuelTimer",10000,1);
	return true;
}
stock CountVehicles()
{
	new carid = AddStaticVehicleEx(400, -100, -100, -100, 0, 0, 0, 0);
	DestroyVehicleEx(carid);
	return carid;
}
stock bool:floatcomp(Float:X1, Float:X2, Float:Delta = 0.05)
{
    return (floatabs(X1-X2) < Delta) ? true : false;
}

stock IsAtBankomat(playerid,Float:distance)
{
    for(new i = 0;i < sizeof(Bankomats);i ++) if(IsPlayerInRangeOfPoint(playerid,distance,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2])) return true;
	return false;
}

stock IsAtGang(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_GROOVE,TEAM_VAGOS,TEAM_BALLAS,TEAM_CORONOS,TEAM_RIFA,TEAM_WOLFS: return true;
	    default: return false;
	}
	return false;
}

stock IsAtMafia(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_RM,TEAM_YAKUZA,TEAM_LCN,TEAM_BIKERS: return true;
	    default: return false;
	}
	return false;
}
stock IsDepartament(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_LSPD,TEAM_PDLV,TEAM_RCPD,TEAM_FBI,TEAM_ARMY,TEAM_ARMYLV,TEAM_LICENSERS,TEAM_SFPD,TEAM_M4C,TEAM_MEDICLV,TEAM_MERIALS,TEAM_MERIALV,TEAM_ARMYSF,TEAM_BANK,TEAM_RADIOLV,TEAM_RADIOSF,TEAM_RADIO: return true;
	    default: return false;
	}
	return false;
}
stock IsAtFrakcia(playerid, onlygos = 0)
{
	new team = GetTeamID(playerid);
	if(onlygos)
	{
	    switch(team)
		{
		    case TEAM_LSPD,TEAM_PDLV,TEAM_RCPD,TEAM_FBI,TEAM_ARMY,TEAM_ARMYLV,TEAM_LICENSERS,TEAM_SFPD,TEAM_M4C,TEAM_MEDICLV,TEAM_MERIALS,TEAM_MERIALV,TEAM_BANK,TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMYSF: return true;
		    default: return false;
		}
	}
	else
	{
		switch(team)
		{
		    case TEAM_LSPD,TEAM_PDLV,TEAM_RCPD,TEAM_FBI,TEAM_SFPD,TEAM_M4C,TEAM_MEDICLV,TEAM_MERIALS,TEAM_MERIALV,TEAM_LICENSERS,TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMY,TEAM_ARMYLV,TEAM_BANK,TEAM_ARMYSF: return true;
		    default: return false;
		}
	}
	return false;
}
stock IsGos(team)
{
	switch(team)
	{
	    case TEAM_LSPD,TEAM_PDLV,TEAM_RCPD,TEAM_FBI,TEAM_SFPD,TEAM_M4C,TEAM_MEDICLV,TEAM_MERIALS,TEAM_MERIALV,TEAM_LICENSERS,TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV,TEAM_ARMY,TEAM_ARMYLV,TEAM_BANK,TEAM_ARMYSF: return true;
	    default: return false;
	}
	return false;
}
stock GetPlayerFAngle(playerid, &Float:angle)
{
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
	else GetPlayerFacingAngle(playerid, angle);
}

public Float:PointToPoint(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2)
{
	return floatsqroot(floatpower(floatabs(floatsub(x2,x)),2)+floatpower(floatabs(floatsub(y2,y)),2)+floatpower(floatabs(floatsub(z2,z)),2));
}

stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance)
{
    new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style)
	{
	    case 0:
	    {
	        x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
	    }
	    case 1:
		{
		    x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 2:
	    {
	        a += 90.0;
	        x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
	    }
	    case 3:
		{
		    a -= 90.0;
      		x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return false;
	}
	return true;
}

stock ShiftCords(style, &Float:x, &Float:y, Float:a, Float:distance)
{
	switch(style)
	{
	case 0:
	    {
	        x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
	    }
	case 1:
		{
		    x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	default: return false;
	}
	return true;
}
stock IsGangToZone(gangid, zone, Float:kolvo = 50.0)
{
	new Count, InZone, Float:All;
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i) && IsPlayerLogged[i])
		{
		    if(GetTeamID(i) == gangid)
		    {
		        Count ++;
		        if(IsPlayerInDynamicArea(i,GZInfo[zone][gzArea]))
		        {
		            InZone ++;
		        }
			}
	    }
	}
	if(!Count || !InZone) return false;
	All = 100.0 * float(InZone) / Count;
	return (All >= kolvo);
}

stock GetPlayerGangZone(playerid)
{
	for(new i=1;i < GANGZONES;i ++)
	{
	    if(IsPlayerInDynamicArea(playerid,GZInfo[i][gzArea]))
     	{
     	    return i;
     	}
	}
	return -1;
}

stock IsGangConnected(gangid)
{
	new count;
    foreach(new i:Player)
	{
	    if(!IsPlayerConnected(i))continue;
        if(GetTeamID(i) == gangid)
        {
			count++;
        }
	}
	return count;
}
forward UnLoadMod();
public UnLoadMod()
{
	EXITSAVEMODE = 1;
    foreach(new i:Player)
    {
        if(!IsPlayerConnected(i) || !IsPlayerLogged[i]) continue;
        SaveAccount(i);
    }
    print("\tAll accounts saved");
    SaveOwnableCars();
    print("\tAll cars saved");
	for (new i = 0;i < MAX_HOUSES;i ++)SaveHouse(i);
	print("\tAll houses saved");
	for (new i = 0;i < TotalPromo;i ++)SavePromo(i);
	print("\tAll promo-actions saved");
	for (new i = 0;i < MAX_BIZ;i ++) SaveBiz(i);
	print("\tAll businesses saved");
	for (new i = 0;i < MAX_TUNING;i ++) SaveCarService(i);
	print("\tAll car services saved");
    SaveOrgs();
	print("\tFractions saved");
	for (new i = 0;i < MAX_OWNABLECASINO;i ++) SaveCasino(i);
	print("\tAll casino saved");
	SaveInforamtion();
	print("\tInformation saved");
	SaveFactory();
	for(new kvart = 1; kvart <= ALLKVARTIRI; kvart++)savekvart(kvart);
	print("\tAll kvartiras saved");
	OnGameModeExit();
	return true;
}
public OnGameModeExit()
{
	foreach(Player, i)
	{
		switch(random(4))
		{
		case 0:
			{
				InterpolateCameraPos(i, 16.594369, -212.863296, 24.417634, -234.674270, 237.364624, 37.039245, 62000);
				InterpolateCameraLookAt(i, 14.963466, -208.169464, 23.862531, -233.701522, 232.480010, 36.598411, 62000);
			}
		case 1:
			{
				InterpolateCameraPos(i, -408.588195, -1341.169433, 40.336101, -6.855856, -1490.390625, 73.402801, 62000);
				InterpolateCameraLookAt(i, -407.004302, -1345.882202, 39.806369, -6.239206, -1485.856689, 71.387092, 62000);
			}
		case 2:
			{
				InterpolateCameraPos(i, 404.979705, -1340.925903, 38.275310, 735.295593, -1183.680786, 66.757911, 62000);
				InterpolateCameraLookAt(i, 406.981475, -1336.361572, 38.675662, 738.487426, -1179.864990, 67.259933, 62000);
			}
		case 3:
			{
				InterpolateCameraPos(i, 1457.659057, -1347.048828, 267.565643, 1477.803710, -1084.730468, 171.467559, 62000);
				InterpolateCameraLookAt(i, 1462.196166, -1347.146728, 269.664581, 1479.021118, -1089.033325, 173.704467, 62000);
			}
		}
		GameTextForPlayer(i, "~r~Server is restarting",62000,4);
		Dialog_Open(i, 0, 0, "", "\n\n\\c{ffffff}В данный момент происходит рестарт игрового сервера\n\\cСервер возобновит свою работу в течение 1-2 минут\n\n\\c{D94141}Для выхода из игры используйте (/q)uit\n\n", "Скрыть", "");
	}
	#if defined PROFILER_INC
		Profiler_Stop();
	#endif
	new date[3],newstring[16];
	getdate(date[0],date[1],date[2]);
	format(newstring, sizeof newstring,"%02d-%02d-%d", date[2], date[1], date[0]);
	new query[128];
	format(query, sizeof(query), "INSERT INTO `donate_stats`(`date`, `sum`) VALUES ('%s','%d')", newstring, DayDonate);
	mysql_pquery(mysql, query);
	mysql_close(mysql);
	SendRconCommand("exit");
	return 1;
}
stock IsDrivingDialog(dialogid)
{
	switch(dialogid)
	{
	    case 48, 49, 70: return true;
	    default: return false;
	}
	return false;
}
forward ShowPlayerDialogEx(playerid,dialogid,style, const theme[],const string[],const key_1[],const key_2[]);
public ShowPlayerDialogEx(playerid,dialogid,style,const theme[],const string[],const key_1[],const key_2[])
{
    if(theme[0]=='|') format(theme, 256, "");
    if(string[0]=='|') format(string, 256, "");
    if(key_1[0]=='|') format(key_1, 256, "");
    if(key_2[0]=='|') format(key_2, 256, "");
	new accept[32], decline[32];
	if(strlen(key_1) > 1)f(accept, "{56A85E}%s", key_1);
	if(strlen(key_2) > 1)f(decline, "{D94141}%s", key_2);
	new dtheme[100] = "{43CD80}";
	strcat(dtheme, theme);
	if(TutState[playerid] != -1 && dialogid != 199 && dialogid != 234) return false;
	if(OldDialogID[playerid] != RENAME_DIALOG || dialogid == RENAME_DIALOG || dialogid == 3)
	{
	    if(IsPlayerLogged[playerid] && OldDialogID[playerid] == 2) return false;
	    if(DrivingTest[playerid] != 0 && !IsDrivingDialog(dialogid)) return false;
		if(dialogid != 8)  	InviteOffer[playerid] = INVALID_PLAYER_ID;
		if(dialogid != 131) HealOffer[playerid] = INVALID_PLAYER_ID;
		if(dialogid != 145) LiveOfferID[playerid] = INVALID_PLAYER_ID;
		if(dialogid != 259) LawyerOffer[playerid] = INVALID_PLAYER_ID;
		if(dialogid != 247 && OldDialogID[playerid] == 247)
		{
		    SendClientMessage(playerid, COLOR_VALIK, "Удачного проезда");
		    Taxi_GO[playerid] = 2;
		}
		OldDialogID[playerid] = dialogid;
		ShowPlayerDialog(playerid,dialogid,style,dtheme,string,accept,decline);
		TogglePlayerControllable(playerid, false);
		return true;
	}
	return false;
}
stock ResetDynamicCPs(playerid)
{
    TogglePlayerDynamicCP(playerid, MinerDownCP, false);
	TogglePlayerDynamicCP(playerid, Binko_CP, true);
	TogglePlayerDynamicCP(playerid, WineCP, false);
	for(new i;i<2;i++) TogglePlayerDynamicCP(playerid, BankCP[i], false);
	TogglePlayerDynamicCP(playerid, ScrapCP, false);
	for(new i; i < MAX_MUSORS; i ++)
	{
	    if(i < sizeof(MinPos)) TogglePlayerDynamicCP(playerid, MinerCP[i], false);
	    if(i < sizeof(GoFuelCP)) TogglePlayerDynamicCP(playerid, GoFuelCP[i], false);
	    if(i < sizeof(GoGunShop)) TogglePlayerDynamicCP(playerid, GoGunShopCP[i], false);
	   	if(i < sizeof(PrisonPos)) TogglePlayerDynamicCP(playerid, JailCP[i], false);
		if(i < sizeof(IncCP))
		{
		    TogglePlayerDynamicCP(playerid, IncCP[i][0], false);
	    	TogglePlayerDynamicCP(playerid, IncCP[i][1], false);
		}
	}
	return true;
}

stock DisableAllRaceCPs(playerid)
{
    for(new i = 1;i <= CountDynamicRaceCPs();i ++) TogglePlayerDynamicRaceCP(playerid, i, false);
	return true;
}

stock Autorisation(playerid)
{
	if(PlayerInfo[playerid][pID] != -1) ShowLoginDialog(playerid);
	else
	{
	    if(!IsARPName(Name(playerid)) && RP_Names)
	 	{
	 	    RenameTime[playerid] = 180;
	 	    SendClientMessage(playerid, COLOR_GRAY, "Ваш никнейм не соответствует правилам сервера");
	 		return Dialog_Open(playerid,RENAME_DIALOG,1,"","\n\n\\c{FFFFFF}Ваш никнейм не соответствует правилам сервера\n\\cВведите новый никнейм в окошко и нажмите {43CD80}Далее\n\n\\c{FFFFFF}Пример: {43CD80}Carl_Johnson\n\n","Далее","Отмена");
	 	}
	    RegisterState[playerid] = 1;
	   	ShowRegisterDialog(playerid,RegisterState[playerid]);
	}
	return true;
}

stock MySQLGetPlayerParam(name[], param[])
{
	new query[128], value[56], Name[24], Param[50];
	mysql_real_escape_string(name, Name);
	mysql_real_escape_string(param, Param);
	format(query, sizeof(query), "SELECT `%s` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1", Param, Name);
	printf("Request parametres %s / Parametres %s",Name, Param);
	new Cache:result = mysql_query(mysql, query);
	cache_get_row(0,0, value, mysql);
	cache_delete(result, mysql);
	return value;
}
forward MysqlCheckKey(playerid, key);
public MysqlCheckKey(playerid, key)
{
	if(!cache_get_row_count(mysql)) return J_Kick(playerid);
    if(cache_get_field_content_int(0,"Key", mysql) == key) OnPlayerLogin(playerid);
	else J_Kick(playerid);
	return 1;
}
forward MysqlReferalCheck(playerid);
public MysqlReferalCheck(playerid)
{
	if(!cache_get_row_count(mysql)) return 1;
	new Referal[24], string[256];
	cache_get_row(0, 0, Referal, mysql);
	if(strcmp(Referal,"No Referal",false)!=0)
	{
		new refid = NameID(Referal);
		if(refid != INVALID_PLAYER_ID && IsPlayerLogged[refid])
		{
			GiveMoney(refid,50000,"Bonus (Referal)");
			format(string, sizeof(string), "Вы получаете $50000 за приведённого вами игрока %s",Name(playerid));
			SendClientMessage(refid,COLOR_VALIK,string);
		}
		else
		{
			format(string, sizeof(string), "UPDATE `accounts` SET `Money`=`Money`+50000 WHERE `NickName`='%s'", Referal);
			mysql_pquery(mysql, string);
		}
	}
	return 1;
}
public OnPlayerRequestSpawn(playerid)
{
	if(IsPlayerNPC(playerid))return 1;
	if(!IsPlayerLogged[playerid])
	{
	    SendInfo(playerid, "Для авторизации на нашем сервере введите пароль");
	    J_Kick(playerid);
	    return false;
	}
	return true;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(IsPlayerNPC(playerid))return 1;
	SetSpawnInfo(playerid, 255, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0);
	if(IsPlayerLogged[playerid])
	{
		SetPlayerTimer(playerid,"PlayerSpawn",200,0);
		GetSkinOfPlayer(playerid);
	}
	return 0;
}
stock UpdateBiz(bizid,id)
{
    new temp[450];
    new NOT_ENTER_BIZZ = IsNoEnterBiz(bizid);
    new mafiastr[256];
	switch(BizInfo[bizid][bKrasher])
	{
	    case TEAM_RM: format(mafiastr,sizeof(mafiastr),"русской мафии");
		case TEAM_YAKUZA: format(mafiastr,sizeof(mafiastr),"мафии Якудза");
		case TEAM_LCN: format(mafiastr,sizeof(mafiastr),"мафии La Cosa Nostra");
		case TEAM_BIKERS: format(mafiastr,sizeof(mafiastr),"байкеров");
		default: format(mafiastr,sizeof(mafiastr),"none");
	}
    if(GetString(BizInfo[bizid][bOwner],"The State"))
    {
   		format(temp,sizeof(temp), "\
		{43CD80}Бизнес продаётся\n\n\
		{FFFFFF}Бизнес номер %d\n\
		{FFFFFF}Тип бизнеса: {43CD80}%s\n\
  		{FFFFFF}Цена: {43CD80}$%d\n\n\
		{D94141}Под контролем %s",bizid,BizInfo[bizid][bName],BizInfo[bizid][bCost],mafiastr);
   		UpdateDynamic3DTextLabelText(Biz3DText[bizid],COLOR_WHITE,temp);
	}
	else
	{
	    if(!NOT_ENTER_BIZZ)
	    {
			format(temp,sizeof(temp), "\
			{FFFFFF}Номер бизнеса %d\n\
			{FFFFFF}Тип бизнеса: {43CD80}%s\n\
			{FFFFFF}Владелец: {43CD80}%s\n\n\
			{D94141}Под контролем %s",
			bizid,BizInfo[bizid][bName],BizInfo[bizid][bOwner],mafiastr);
   			if(BizInfo[bizid][bState] == 7 || BizInfo[bizid][bState] == 1 || BizInfo[bizid][bState] == 2 || BizInfo[bizid][bState] == 3 || BizInfo[bizid][bState] == 9)
			{
	            if(BizInfo[bizid][bBuyCost]>0 && BizInfo[bizid][bNeedItem]>0)
				{
				    if(BizInfo[bizid][bState] == 7) format(temp,sizeof(temp),"%s\n\n{FFFFFF}Скупает {C9EAFF}%d{FFFFFF} продуктов со склада фермы\nСтоимость 1-го продукта: {C9EAFF}$%d\nНажмите 'H' чтобы разгрузить продукты",temp,BizInfo[bizid][bNeedItem],BizInfo[bizid][bBuyCost]);
				    else format(temp,sizeof(temp),"%s\n\n{FFFFFF}Скупает {C9EAFF}%d{FFFFFF} продуктов с разгрузочной станции.\nСтоимость 1-го предмета: {C9EAFF}$%d\nНажмите 'H' чтобы разгрузить продукты",temp,BizInfo[bizid][bNeedItem],BizInfo[bizid][bBuyCost]);
				}
			}
	        UpdateDynamic3DTextLabelText(Biz3DText[bizid],COLOR_WHITE,temp);
		}
		else
		{
		    format(temp,sizeof(temp), "\
			{FFFFFF}Бизнес номер %d\n\
			{FFFFFF}Тип бизнеса: {43CD80}%s\n\
			{FFFFFF}Владелец: {43CD80}%s\n\n\
			{D94141}Под контролем %s\n\
			{D94141}Входа нет",
			bizid,BizInfo[bizid][bName],BizInfo[bizid][bOwner],mafiastr);
	        UpdateDynamic3DTextLabelText(Biz3DText[bizid],COLOR_WHITE,temp);
		}
	}
	if(id ==1 ) SaveBiz(bizid);
	return true;
}
stock UpdateSTO(serviceid)
{
    new temp[140];
	if(!GetString(TuningInfo[serviceid][stoOwner], "None"))f(temp, "Автомастерская #%d\n\n{FFFFFF}Владелец: {C9EAFF}%s\n{FFFFFF}Оплачено: {C9EAFF}%d/30 дней\n{D94141}Входа нет",TuningInfo[serviceid][stoID],TuningInfo[serviceid][stoOwner],TuningInfo[serviceid][stoOplata]);
	else f(temp, "Автомастерская #%d\n\n{C9EAFF}Стоимость: $2000000\n{D94141}Входа нет",TuningInfo[serviceid][stoID]);
	UpdateDynamic3DTextLabelText(TuningInfo[serviceid][stoText], 0x43CD80FF, temp);
	SaveCarService(serviceid);
	return true;
}
stock UpdateHouse(house)
{
	new string[300],str[60];
	DestroyDynamicMapIcon(HouseIcon[house]);
	new dour[60];
	if(!HouseInfo[house][hLock]) dour = "{43CD80}Дверь открыта";
	else dour = "{D94141}Дверь закрыта";
	new s = GetHouseStyle(house);
	if(GetString(HouseInfo[house][hOwner],"The State"))
	{
		strcat(string, "{43CD80}Дом продаётся");
		format(str,sizeof(str),"\n\n{ffffff}Дом номер %d",house);
		strcat(string, str);
		format(str,sizeof(str),"\n{FFFFFF}Класс дома: {43CD80}%d",HouseInfo[house][hKlass]);
		strcat(string, str);
		format(str,sizeof(str),"\n{FFFFFF}Стоимость: {43CD80}$%d",HouseInfo[house][hCost]);
		strcat(string, str);
		UpdateDynamic3DTextLabelText(House3DText[house],COLOR_WHITE,string);
		HouseIcon[house] = CreateDynamicMapIcon(HouseInfo[house][hEnter][0], HouseInfo[house][hEnter][1], HouseInfo[house][hEnter][2], 31, 0);
	}
	else
	{
        strcat(string, "{C9EAFF}Дом занят");
		format(str,sizeof(str),"\n\n{FFFFFF}Дом номер %d",house);
		strcat(string,str);
		format(str,sizeof(str),"\n{FFFFFF}Класс дома: {43CD80}%d",HouseInfo[house][hKlass]);
		strcat(string, str);
		format(str,sizeof(str),"\n{FFFFFF}Владелец: {43CD80}%s",HouseInfo[house][hOwner]);
		strcat(string,str);
		format(str,sizeof(str),"\n%s",dour);
		strcat(string,str);
		if(s != -1)
		{
			if(HouseRooms[s] > 0)
			{
				format(str,sizeof(str), "",HouseInfo[house][hRent]);
				strcat(string,str);
			}
		}
		strcat(string,"");
		UpdateDynamic3DTextLabelText(House3DText[house],COLOR_WHITE,string);
		HouseIcon[house] = CreateDynamicMapIcon(HouseInfo[house][hEnter][0], HouseInfo[house][hEnter][1], HouseInfo[house][hEnter][2], 32, 0);
	}
	SaveHouse(house);
	return true;
}

public PlayerSpawn(playerid)
{
    if(IsPlayerNPC(playerid))return true;
    if(IsPlayerInAnyVehicle(playerid))
	{
	    new Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,X,Y,Z);
		J_SetPlayerPos(playerid,X,Y,Z);
	    SetTimerEx("PlayerSpawn", 50, false, "i", playerid);
	    return true;
	}
 	SettingSpawn(playerid);
    AntiCheatsOFF(playerid, 2);
	if(pTemp[playerid][SPECTPLAYER]==true)SpecPl(playerid, false);
	else SpawnPlayer(playerid);
	return true;
}
stock GetCopsOnline()
{
	new Online;
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(!IsPlayerLogged[i]) continue;
		if(!IsACop(i))  continue;
		Online ++;
	}
	return Online;
}

stock GetCopsIsRangeOfPoint(&online, Float:radi, Float:x, Float:y, Float:z)
{
	new FromPoint;
	online = 0;
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(!IsPlayerLogged[i]) continue;
		if(!IsACop(i)) continue;
		online ++;
		if(!IsPlayerInRangeOfPoint(i, radi, x, y, z)) continue;
		FromPoint ++;
	}
	return FromPoint;
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    if(PlayerInfo[playerid][pAskBan]!=22 && PlayerInfo[playerid][pGetBonus]!=1)
	{
		if(hittype > 4) return false;
		if((hittype == BULLET_HIT_TYPE_NONE) && GetPlayerDistanceFromPoint(playerid, fX, fY, fZ) > 340.0 && (fX != 0.0 && fY != 0.0 && fZ != 0.0)) return false;
		if((hittype == BULLET_HIT_TYPE_PLAYER && ! IsPlayerConnected(hitid)) || (hittype == BULLET_HIT_TYPE_VEHICLE && !IsValidVehicle(hitid)) || (hittype == BULLET_HIT_TYPE_OBJECT && !IsValidVehicle(hitid)) || (hittype == BULLET_HIT_TYPE_PLAYER_OBJECT && !IsValidPlayerObject(playerid, hitid))) return false;
		if(hittype == 1){
			new Float:HitPosX, Float:HitPosY, Float:HitPosZ, Float:Temp;
			GetPlayerLastShotVectors(playerid, Temp, Temp, Temp, HitPosX, HitPosY, HitPosZ);
			if(!IsPlayerInRangeOfPoint(playerid, 3.0, HitPosX, HitPosY, HitPosZ) && !IsPlayerFacingCoords(playerid, HitPosX, HitPosY, MAX_DIST)){
				if(++Silent_warnings[playerid] > 2)return ToCheat(1, playerid);
			}else Silent_warnings[playerid] = 0;
		}else Silent_warnings[playerid] = 0;  
		if(hitid !=INVALID_PLAYER_ID)
		{
			if(GetPlayerWeapon(playerid) == 0)
			{
				if(!ProxDetectorS(8, playerid, hitid, 1))ToCheat(1,playerid);
				if((gettime() - shotTime[playerid]) < 1)shot[playerid]+=1;
				else shot[playerid]=0;
				if(shot[playerid] > 2) ToCheat(1,playerid);
				shotTime[playerid] = gettime();
			}
			
		}
		if(FirstFire[playerid] == 0) FirstFire[playerid] = GetTickCount();
	    else
	    {
	        SecondFire[playerid]= FirstFire[playerid];
	       	FirstFire[playerid] = GetTickCount();
	       	if(FirstFire[playerid]-SecondFire[playerid] < 30 && weaponid == 24) ToCheat(1,playerid);
	    }
		if(hittype != BULLET_HIT_TYPE_NONE)
	    {
	        if((fX <= -1000.0 || fX >= 1000.0) || (fY <= -1000.0 || fY >= 1000.0) || (fZ <= -1000.0 || fZ >= 1000.0) || ((hittype != BULLET_HIT_TYPE_PLAYER) && (hittype != BULLET_HIT_TYPE_VEHICLE) && (hittype != BULLET_HIT_TYPE_OBJECT) && (hittype != BULLET_HIT_TYPE_PLAYER_OBJECT)))
	        {
	            ToCheat(1,playerid);
	            return 0;
	        }
	    }
		if(hittype==BULLET_HIT_TYPE_PLAYER)
	    {
	        if(fX>=10 || fY>=10 || fZ>=10 || fX<=-10 || fY<=-10 || fZ<=-10)
	        {
	            ToCheat(1,playerid);
	            return 0;
	        }
	    }
		if(hittype < 0 || hittype > 4) return 0;

		if(weaponid > 47 && hittype == 0 && fX == 0.0000 && hitid == 0 && fY == 0.0000 && fZ == 0.0000)
		{
	     	ToCheat(1,playerid);
			return 0;
		}
	}
	if(GetPlayerState(playerid)==3 && GetPlayerWeapon(playerid)==24)
	{
		new Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,X,Y,Z);
	    J_SetPlayerPos(playerid,X,Y,Z+2);
	}
	return 1;
}
public OnPlayerConnect(playerid)
{
	if(IsPlayerNPC(playerid))return 1;
	Player_Timer[playerid][0] = SetTimerEx("PlayerTimer", 1100, true, "i", playerid);
	Player_Timer[playerid][1] = SetTimerEx("SecondTimer", 1200, true, "i", playerid);
	Player_Timer[playerid][2] = SetTimerEx("TalentsTimer", 60000, true, "i", playerid);
	new hour, minute, second;
	SpecAd[playerid] = 65535;
	gettime(hour, minute, second);
	SetPlayerTime(playerid, hour, minute);
	SetPlayerColor(playerid,COLOR_GRAY);
	for(new i = 0; i < 47; i++)
    {
        WeaponInfo[playerid][i] = false;
        AmmoInfo[playerid][i] = 0;
    }
    for(new i = 0; i < 13; i++) AmmoSlot[playerid][i] = 0;
	/////
	for(new i; i < 4; i++){
		TradeSelected[playerid][i] = -1;
		ValueTrade[playerid][i] = 0;
	}
	//PlayerRoute[playerid][Destination] = -1;  
	Silent_warnings[playerid] = 0;
    AntiCheatsOFF(playerid, 10);
	DestroyPlayerObject(playerid, PlayerInfo[playerid][AlkatrazObject]);
	DestroyDynamic3DTextLabel(PlayerInfo[playerid][AlkatrazText]);
	GangZoneShowForPlayer(playerid, AlkatrazGZ, 0xCC3B12AA);
	GangZoneShowForPlayer(playerid, WineGZ, 0x7396FBAA);
	GetSkinOfPlayer(playerid);
	GetPlayerIp(playerid,PlayerIp[playerid],16);
	GetPlayerName(playerid,PlayerName[playerid],24);
	pTemp[playerid][SPECTPLAYER] = false;
    CheckPlayerBanIP(playerid); //????
	PlayerInfo[playerid][pAdmin] = ADM_NONE;
    IsPlayerLogged[playerid] = false;
	mysql_real_escape_string(PlayerName[playerid], PlayerName[playerid]);
	LastReconClick[playerid][0] = 0;
	SpecID[playerid] = 65535;
	crafttry[playerid] = 0;
	LastReconClick[playerid][1] = 0;
	ReconSelect[playerid] = INVALID_TEXT_DRAW;
	ReconSelectSub[playerid] = INVALID_TEXT_DRAW;
	NumberShot[playerid] = 0;
	NumberShotTarget[playerid] = 0;
	DisallowSpawn[playerid] = 0;
	TimeNumberShot[playerid] = 0;
	TimeNumberShotTarget[playerid] = 0;
    OnPlayerLoading[playerid]=0;
    OnPlayerLoadingTick[playerid] = GetTickCount();
    OnPlayerLoading[playerid]=1;
	PlayerInfo[playerid][pAskBan]=0;
	PlayerInfo[playerid][AuthAct] = 0;
    OnPlayerLoading[playerid]=2;
	LoadRemoveObjects(playerid);
	for(new i; i < sizeof URL; i++)
		TextDrawShowForPlayer(playerid,URL[i]);
 	Gambling[playerid] = G_STATE_NOT_GAMBLING;
  	SlotTimer[playerid] = -1;
	///[antipvar]
	PlayerInfo[playerid][pHavePassword]=0;
	PlayerInfo[playerid][pSecond]=0;
	PlayerInfo[playerid][pShowIper]=0;
	SetString(PlayerInfo[playerid][pLastLogin],"The State");
	SetString(PlayerInfo[playerid][pLastIP],"The State");
	pCurrentWeapon[playerid] = 0;
	GHealth[playerid] = 350;
	RegCarNumber[playerid]=-1;
	RegCarID[playerid]=-1;
	pMusicOn[playerid]=0;
	PlayerInfo[playerid][pHospital]=0;
	dBiz[playerid]=-1;
	NeSdal[playerid]=0;
	Keychange[playerid]=0;
	oldGUN[playerid]=0;
	Timerak[playerid]=0;
	CanUse[playerid]=0;
	CanSend[playerid]=0;
	PlayerInfo[playerid][pNeedMessage]=0;
	for(new i;i<6;i++)PlayerInfo[playerid][pSlotItem][i]=0;
	PlayerInfo[playerid][pType]=-1;
	PlayerInfo[playerid][pVID]=0;
	PlayerInfo[playerid][pScutes]=-1;
	PlayerInfo[playerid][pMScutes]=-1;
	Vnedren[playerid]=0;
	PlayerInfo[playerid][pHSpectr]=-1;
	SlotValue[playerid][4]=-1;
    TimetoReturn[playerid]=0;
	PlayerInfo[playerid][pLeftPosx]=0;
	PlayerInfo[playerid][pLeftPosy]=0;
	PlayerInfo[playerid][pRightPosx]=0;
	PlayerInfo[playerid][pRightPosy]=0;
	PlayerInfo[playerid][pObjikt]=0;
	PlayerInfo[playerid][pChainPos] = 0;
	Getemer[playerid]=0;
	Talent_KD[playerid][0] = 0;
	Talent_KD[playerid][1] = 0;
	Talent_KD[playerid][2] = 0;
	Talent_KD[playerid][3] = 0;
	Iznas[playerid]=0;
    shot[playerid] = 0;
	Vehs[playerid][vReis] = 0;
	CenaRaboti[playerid]=0;
	PlayerAFKTime[playerid][0]                  = 0;
	TutState[playerid]                          = -1;
	kasmenu[playerid]=0;
	mehan[playerid]=0;
	dilo[playerid]=0;
	CoinsOpponent[playerid] = INVALID_PLAYER_ID;
	CoinsSelect[playerid] = -1;
	CoinsBet[playerid] = 0;
	TimeBus[playerid]=0;
	deal[playerid]=0;
	gpss[playerid]=0;
	lomanim[playerid]=0;
    medlomka[playerid]=0;
    startlomka[playerid]=0;
    cuffer[playerid]=0;
    EngineStalled[playerid]=0;
    rabden[playerid]=0;
    notneedm[playerid]=0;
	eventIN[playerid] = 0;
    animan[playerid]=0;
    report[playerid]=0;
    spaned[playerid]=0;
    ferman[playerid]=0;
    FirstFire[playerid]=0;
    SecondFire[playerid]=0;
    selfrac[playerid]=0;
    asker[playerid]=0;
    gskin[playerid]=0;
    ViborSERIU[playerid]=0;
    BusTime[playerid]=0;
    BusMoney[playerid]=0;
    mycasino[playerid]=-1;
    PlayerDrunkLevels[playerid]=0;
    PlayerDrunkLevel[playerid]=0;
    jlock[playerid]=0;
    InJobs[playerid]=0;
    engines[playerid]=0;
    PlayerInfo[playerid][preOrg]=0;
    PlayerInfo[playerid][preOrgg]=0;
    Predlog[playerid]=0;
    Ingatre[playerid]=-1;
	aint[playerid]=-1;
	onkey[playerid]=0;
	Healttime[playerid]=0;
	JobHack[playerid]=0;
	TimeMessage[playerid]=0;
	sellcarto[playerid]=0;
	idaofcar[playerid]=0;
	nedded[playerid]=0;
	PlayerInfo[playerid][pRedio]=0;
	/////////////
	gunmute[playerid] = gettime()+5;
    CreateAllTextDraws(playerid);
	DisablePlayerRaceCheckpoint(playerid);
	if(!IsPlayerNPC(playerid)){
		switch(random(5)){
		case 0:SendClientMessage(playerid, 0xFFCB8CFF,"Рады видеть вас на проекте Good Game");
		case 1:SendClientMessage(playerid, 0xFFCB8CFF,"Добро пожаловать на проект Good Game");
		case 2:SendClientMessage(playerid, 0xFFCB8CFF,"Good Game приветствует вас на своих просторах");
		case 3:SendClientMessage(playerid, 0xFFCB8CFF,"Окунись в мир интерактива и веселья с Good Game");
		case 4:SendClientMessage(playerid, 0xFFCB8CFF,"Рады видеть вас! Good Game. Good Emotions");
		}
	}
	ResetPlayerWeapons(playerid);
	//PlayerPlaySound(playerid, 1097, 0, 0, 0);
	PlayAudioStreamForPlayer(playerid, "https://ggrp.ru/audio/gta_sa.mp3");
	TextDrawShowForPlayer(playerid, INTROTD[0]);
	TextDrawShowForPlayer(playerid, INTROTD[1]);
	PlayerInfo[playerid][pCalling]                      =-1;
	Controllable[playerid] 						= true;
	ADuty[playerid] 							= 0;
	PlayerPlayed[playerid]						= false;
	PlayerGlass[playerid]						= false;
	Fishing[playerid] 							= false;
	PlayerInfo[playerid][pMaskON]						= 0;
	PlayerSpawned[playerid] 					= false;
	Cuffed[playerid]                        	= false;
	PlayerLie[playerid]                         = false;
	CallTime[playerid]                          = 0;
	UsingShield[playerid]                       = false;
	Taxi_GO[playerid]                           = 0;
	PlayerInfo[playerid][pLastGun]=0;
	PlayerInfo[playerid][pLastAmmo]=0;
	PlayerInfo[playerid][pBuyWalent]=1;
	shotTime[playerid] = 0;
	shot[playerid] = 0;
	CreteBomb[playerid]=0;
	TeamDuty[playerid]                          = 0;
	PlayerInfo[playerid][oInTir]=0;
	PlayerInfo[playerid][pShield] = 0.0;
	PlayerInfo[playerid][PromoActive] 			= -1; 
	for(new i; i < 20; i++)
		PlayerInfo[playerid][PromoUsed][i]		= -1;
	OldDialogID[playerid]                       = INVALID_DIALOG_ID;
	SpectatePlayer[playerid]					= INVALID_PLAYER_ID;
	LiveOfferID[playerid]						= INVALID_PLAYER_ID;
	LiveOffer[playerid]							= INVALID_PLAYER_ID;
	PlayerCar[playerid] 						= INVALID_VEHICLE_ID;
	EnterVehicle[playerid] 						= INVALID_VEHICLE_ID;
	ArendKey[playerid]                          = INVALID_VEHICLE_ID;
	MLPlayer[playerid] 							= INVALID_PLAYER_ID;
	SGunOffer[playerid] 						= INVALID_PLAYER_ID;
	InviteOffer[playerid] 						= INVALID_PLAYER_ID;
	RHouseOffer[playerid]						= INVALID_PLAYER_ID;
	LawyerOffer[playerid] 						= INVALID_PLAYER_ID;
	ArrestID[playerid]                        	= INVALID_PLAYER_ID;
	TazerPlayer[playerid]                       = INVALID_PLAYER_ID;
	PlayerOfCuff[playerid]                      = INVALID_PLAYER_ID;
	OldFreePlayer[playerid]                     = INVALID_PLAYER_ID;
	SetPass[playerid]                           = "\0";
	ReMail[playerid]                           	= "No Mail Adress";
	clickerstat[playerid]=0;
	for(new i;i < 5;i ++) 
		PlayerFish[playerid][i] 				= 0;
	TimeOfCuff[playerid]                        = 0;
	GotoInfo[playerid][gtID]                    = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtGoID]=INVALID_PLAYER_ID;
	GotoInfo[playerid][gtState]                 = 0;
	GotoInfo[playerid][gtX]                     = 0.0;
	PlayerInfo[playerid][pVipTime]				= 0;
	GotoInfo[playerid][gtY]                     = 0.0;
	GotoInfo[playerid][gtZ]                     = 0.0;
	GotoInfo[playerid][gtTPX]                   = 0.0;
	GotoInfo[playerid][gtTPY]                   = 0.0;
	GotoInfo[playerid][gtTPZ]                   = 0.0;
 	PlayerInfo[playerid][pBomb]                 = 0;
 	TheifMoney[playerid]                        = 0;
	TheifKey[playerid] 							= 0;
	TheifTime[playerid] 						= 0;
	TheifCount[playerid] 						= 0;
	DRotTick[playerid]                          = 120;
	Ring[playerid]                    			= 0;
	PlayerJailCP[playerid]                      = -1;
	PlayerGoPost[playerid]                      = -1;
	PlayerInfo[playerid][pEnergy] 				= 0;
	UseDrugsTime[playerid]                      = 0;
	PlayerInfo[playerid][pSpawned] 				= 0;
	NoEnterPickup[playerid]                     = 0;
	PlayerInfo[playerid][pGetBonus]             = 0;
	DonateBuy[playerid]                         = 0;
	PlayerInfo[playerid][pVirMoney]             = 0;
	Damaged[playerid]                       	= -1;
	DamageWarning[playerid] 					= 0;
	TruckReset[playerid]                        = 0;
 	Fullness[playerid]                     		= 55;
	FullnessTick[playerid]                      = 0;
	PlayerInfo[playerid][pValue]                = 0;
	PlayerInfo[playerid][pView]                 = 0;
	PlayerInfo[playerid][pShowName]             = 1;
	PlayerBed[playerid]                         = -1;
	PlayerInfo[playerid][pHealTime]           	= 0;
	PlayerInfo[playerid][pHeal]           		= 0;
	PlayerInfo[playerid][pCheepses]				= 0;
	PutState[playerid]                          = -1;
	SelectTP[playerid]                          = -1;
	ResetGunsUP[playerid]                       = 0;
	ResetBuyGuns[playerid]                      = 0;
	RPTest[playerid]                            = 0;
	PlayerInfo[playerid][pRPTest]               = 0;
	PlayerInfo[playerid][pWeapon]               = 0;
	SlotValue[playerid][18]               = 0;
	Errors[playerid]                            = 0;
	ReMailCode[playerid] 						= -1;
	BizPrice[playerid]                          = 0;
	PlayerInfo[playerid][pInvGun]              	= 0;
	PlayerInfo[playerid][pInvAmmo]             	= 0;
	OnlineInfo[playerid][lTime]              	= -1;
    NumInc_CP[playerid] 						= -1;
	RobKey[playerid]                            = 0;
	RobTime[playerid]                           = 0;
	PlayerInfo[playerid][pZKP]                  = 0;
 	LoadIntro[playerid]                         = 0;
	RobCount[playerid]                          = 0;
	InJob[playerid] 							= 0;
	PlayerInfo[playerid][pOldSkin] 				= 0;
	FireCount[playerid] 						= 0;
	HouseEntered[playerid] 						= -1;
	BizEntered[playerid] 						= -1;
	RegisterState[playerid] 					= 0;
	Question[playerid]		 					= 0;
	PlayerInfo[playerid][pPhoneBook] 			= 0;
	PlayerInfo[playerid][pRadio] 				= 0;
	BuyGuns[playerid]                           = -1;
	PlayerInfo[playerid][pSpining] 				= 0;
	RenameTime[playerid]                        = -1;
	BuyInt[playerid] 							= -1;
	CarTest[playerid] 							= -1;
	FarmJob[playerid] 							= -1;
	DrivingTest[playerid] 						= 0;
	PlayerInfo[playerid][pCase]					= 1;
	PlayerInfo[playerid][pChat]					= 1;
	PlayerInfo[playerid][pLoading]				= 1;
	SlotValue[playerid][0] 				= 0;
	PlayerInfo[playerid][pExp] 					= 1;
	CuffedTime[playerid]                        = 0;
	PlayerInfo[playerid][pWanted] 				= 0;
	PlayerInfo[playerid][pVIP] 					= STATUS_NONE;
	PlayerInfo[playerid][pAllRepl]				= 0;
	PlayerInfo[playerid][pOldRepl]				= 0;
	PlayerInfo[playerid][pLeader] 				= 0;
	PlayerInfo[playerid][pMember] 				= 0;
	PlayerInfo[playerid][pGunLic] 				= 0;
	PlayerInfo[playerid][pBoatLic] 				= 0;
	PlayerInfo[playerid][pFishLic] 				= 0;
	PlayerInfo[playerid][pFlyLic] 				= 0;
	PlayerInfo[playerid][pCarLic] 				= 0;
	PlayerInfo[playerid][pBikeLic] 				= 0;
	PlayerInfo[playerid][pWarns] 				= 0;
	SlotValue[playerid][1] 			= -1;
	SlotValue[playerid][3] 				= -1;
	PlayerInfo[playerid][pFWarns] 				= 0;
	PlayerInfo[playerid][pRank] 				= 0;
	PlayerInfo[playerid][pCars] 				= 0;
	PlayerInfo[playerid][pSex] 					= 0;
	SlotValue[playerid][15] 				= 0;
	PlayerInfo[playerid][pRace] 				= 0;
	PlayerInfo[playerid][pBank] 				= 0;
	PlayerInfo[playerid][pCCase] 				= 0;
	PlayerInfo[playerid][pGun][0] 				= 0;
	PlayerInfo[playerid][pGun][1] 				= 0;
	PlayerInfo[playerid][pGun][2] 				= 0;
	PlayerInfo[playerid][pSkin] 				= 0;
	SlotValue[playerid][19] 				= 0;
	SlotValue[playerid][11] 				= 0;
	PlayerInfo[playerid][pD_Packets] 			= 0;
	SlotValue[playerid][14] 				= 0;
	PlayerInfo[playerid][pPlayHours] 			= 0;
	PlayerInfo[playerid][pJob] 					= 0;
	PlayerInfo[playerid][pMuteTime] 			= 0;
	PlayerInfo[playerid][pFMuteTime] 			= 0;
	PlayerInfo[playerid][pJailTime] 			= 0;
	PlayerInfo[playerid][pBailPrice] 			= 0;
	PlayerInfo[playerid][pKungfu] 				= 0;
	PlayerInfo[playerid][pKneehead] 			= 0;
	PlayerInfo[playerid][pElbow] 				= 0;
	PlayerInfo[playerid][pBoxing] 				= 0;
	PlayerInfo[playerid][pKazpay]				= 0;
	PlayerInfo[playerid][pF_Skill] 				= 1;
	PlayerInfo[playerid][pZ_Skill] 				= 0;
	PlayerInfo[playerid][pP_Skill] 				= 0;
	PlayerInfo[playerid][pZa_Skill] 			= 0;
	PlayerInfo[playerid][pIn_Skill] 			= 0;
	PlayerInfo[playerid][pMy_Skill] 			= 0;
	PlayerInfo[playerid][pBy_Skill] 			= 0;
	CreditMoney[playerid]                       = 0;
	Clother[playerid] 							= -1;
	Buyitem[playerid]							= -1;
	TaxiTarif[playerid] 						= 0;//??? ????????
	TaxiPrice[playerid] 						= 0;//??? ?????????
	TaxiDistance[playerid] 						= 0;//??? ?????????
	PlayerSeat[playerid] 						= -1;
	pTemp[playerid][pArendaCar] 				= -1;
	PlayerInfo[playerid][pbydilnik]				= 0;
	PlayerInfo[playerid][pONPhoneTalk]			= 0;
	pTemp[playerid][pcarid] 					= INVALID_VEHICLE_ID;
	PassInfo[playerid][psDateBirth][0] 			= 0;
 	PassInfo[playerid][psDateBirth][1] 			= 0;
 	PassInfo[playerid][psDateBirth][2] 			= 0;
 	PassInfo[playerid][psDate][0] 				= 0;
 	PassInfo[playerid][psDate][1] 				= 0;
 	PassInfo[playerid][psDate][2] 				= 0;
 	PassInfo[playerid][psCity] 					= 0;
 	MedCardInfo[playerid][mcState] 				= -1;
	NoStrip[playerid]                           = -1;
	PlayerInfo[playerid][pOOC]               	= 0;
	PlayerInfo[playerid][pKlogin]               = 0;
	SlotValue[playerid][2]        = -1;
	Smokes[playerid] 							= 0;
	Smoke[playerid] 							= 0;
	SmokeTime[playerid] 						= 0;
	TransferPlayer[playerid] 					= 0;
	GetJob[playerid] 							= 0;
	TelNumber[playerid] 						= 0;
	InfoHouse[playerid] 						= -1;
	InfoBiz[playerid]                           = -1;
	InfoSTO[playerid]                           = -1;
	MLeader[playerid] 							= 0;
	PlayerInfo[playerid][pDCTime] 				= 0;
 	TheftKey[playerid] 							= 0;
	TheftCount[playerid] 						= 0;
	TheftTime[playerid] 						= 0;
	pTemp[playerid][BreakKey] 					= 0;
	pTemp[playerid][BreakCount] 				= 0;
	pTemp[playerid][BreakTime] 					= 0;
	SGunMats[playerid] 							= 0;
	SGunID[playerid] 							= 0;
	SGunPrice[playerid] 						= 0;
	SGunAmmo[playerid] 							= 0;
	OGReset[playerid]                          	= 0;
	gPlayerLogTries[playerid] 					= 3;
	PanelPlayerID[playerid] 					= -1;
	PlayerInfo[playerid][pArmours]              = 0;
	PlayerInfo[playerid][pArmour] 				= 0;
	Recuffer[playerid]                          = INVALID_PLAYER_ID;
	PlayerInfo[playerid][FamilyID]              = -1;
	PlayerInfo[playerid][RoulBalance]           = 0;
	for(new i = 1;i < GANGZONES;i ++)GangZoneShowForPlayer(playerid,GangZone[i],TeamColors[GZInfo[i][gzFracID]]);
	SERIU[playerid][sID] 						= INVALID_PLAYER_ID;
	J_SetPlayerHealth(playerid,100);
	return 1;
}
forward MysqlCheckCall(playerid);
public MysqlCheckCall(playerid)
{
	if(cache_get_row_count(mysql))
	if(!cache_get_row_int(0, 0, mysql)) return Dialog_Open(playerid,0,0,"{43CD80}Информация","\n\n\\c{D94141}Вы в чёрном списке абонента\n\n","Скрыть","");
	new id, string[256];
	if(PlayerInfo[playerid][pIn_Skill] < 10)return Dialog_Open(playerid,0,0,"{43CD80}Информация","\n\n\\c{7396FB}У вас на балансе недостаточно средств!\n\\cПополнить баланс можно у любого банкомата штата\n\\cТак же вы можете отправить *130* своему другу с проcьбой перезвонить.\n\\c{FFFFFF}Нажмите клавишу 'Decline' чтобы завершить звонок\n\n","Принять","");
	sscanf(PlayerInfo[playerid][pSendName], "u", id);
	if(id == INVALID_PLAYER_ID)return SendError(playerid, "Игрок не найден");
	if(PlayerInfo[id][pCalling]!=-1) return Dialog_Open(playerid,0,0,"{43CD80}Информация","\n\n\\c{D94141}Линия занята\n\n","Скрыть","");
	if(PlayerInfo[id][pZa_Skill]!=1)return Dialog_Open(playerid,0,0,"{43CD80}Информация","\n\n\\c{ffffff}Ваш абонент вне зоны действия сети\n\\c{7396FB}Вы можете оставить ему сообщение. Как только он появится в сети, он его сможет прочитать\n\n","Скрыть","");
	foreach(Player, i)if(PlayerInfo[i][pCalling]==id && IsPlayerLogged[i]) return Dialog_Open(playerid,0,0,"{43CD80}Информация","\n\n\\c{D94141}Занято. Пожалуйста, перезвоните позже\n\n","Скрыть","");
	PlayerInfo[playerid][pCalling]=id;
	SendInfo(playerid,"Нажмите клавишу {7396FB}'N'{ffffff}, чтобы достать курсор управления телефоном");
	SendInfo(id,"Нажмите клавишу {7396FB}'N'{ffffff}, чтобы достать курсор управления телефоном");
	format(string,sizeof(string),"UPDATE `phonebook` SET `Num`='0' WHERE `Name`='%s' AND `Namez`='%s'",PlayerName[playerid],PlayerName[PlayerInfo[playerid][pCalling]]);
	mysql_pquery(mysql, string);
	for(new i;i<13;i++)TextDrawHideForPlayer(playerid,Sphone[i]);
	for(new i;i<23;i++)TextDrawHideForPlayer(playerid,SphoneKey[i]);
	TextDrawShowForPlayer(playerid, Calling[1]);
	TextDrawShowForPlayer(playerid, Calling[3]);
	for(new i; i < 5; i++)TextDrawShowForPlayer(playerid,Sphone[i]);
	format(string, sizeof(string), "%s", PlayerName[id]);
	callname[playerid] = CreatePlayerTextDraw(playerid, 85.666709, 200.770492, string);
	PlayerTextDrawBackgroundColor(playerid, callname[playerid], 255);
	PlayerTextDrawFont(playerid, callname[playerid], 2);
	PlayerTextDrawLetterSize(playerid, callname[playerid], 0.126665, 0.874073);
	PlayerTextDrawAlignment(playerid, callname[playerid], 2);
	PlayerTextDrawColor(playerid, callname[playerid], 255);
	PlayerTextDrawSetOutline(playerid, callname[playerid], 0);
	PlayerTextDrawSetProportional(playerid, callname[playerid], 1);
	PlayerTextDrawSetShadow(playerid, callname[playerid], 0);
	PlayerTextDrawSetSelectable(playerid, callname[playerid], 0);
	PlayerTextDrawShow(playerid, callname[playerid]);
	calltime[playerid] = CreatePlayerTextDraw(playerid, 85.666740, 208.407485, "calling...");
	PlayerTextDrawBackgroundColor(playerid, calltime[playerid], 255);
	PlayerTextDrawFont(playerid, calltime[playerid], 1);
	PlayerTextDrawAlignment(playerid, calltime[playerid], 2);
	PlayerTextDrawLetterSize(playerid, calltime[playerid], 0.126665, 0.874073);
	PlayerTextDrawColor(playerid, calltime[playerid], 255);
	PlayerTextDrawSetOutline(playerid, calltime[playerid], 0);
	PlayerTextDrawSetProportional(playerid, calltime[playerid], 1);
	PlayerTextDrawSetShadow(playerid, calltime[playerid], 0);
	PlayerTextDrawSetSelectable(playerid, calltime[playerid], 0);
	PlayerTextDrawShow(playerid, calltime[playerid]);
	for(new i;i<13;i++)TextDrawHideForPlayer(id,Sphone[i]);
	for(new i;i<23;i++)TextDrawHideForPlayer(id,SphoneKey[i]);
	for(new i; i < 5; i++)TextDrawShowForPlayer(id,Sphone[i]);
	TextDrawShowForPlayer(id, Calling[0]);
	TextDrawShowForPlayer(id, Calling[1]);
	TextDrawShowForPlayer(id, Calling[2]);
	TextDrawShowForPlayer(id, Calling[3]);
	format(string, sizeof(string), "%s", PlayerName[playerid]);
	callname[id] = CreatePlayerTextDraw(id,85.666709, 200.770492, string);
	PlayerTextDrawBackgroundColor(id, callname[id], 255);
	PlayerTextDrawFont(id, callname[id], 2);
	PlayerTextDrawAlignment(id, callname[playerid], 2);
	PlayerTextDrawLetterSize(id, callname[id], 0.126665, 0.874073);
	PlayerTextDrawColor(id, callname[id], 255);
	PlayerTextDrawSetOutline(id, callname[id], 0);
	PlayerTextDrawSetProportional(id, callname[id], 1);
	PlayerTextDrawSetShadow(id, callname[id], 0);
	PlayerTextDrawSetSelectable(id, callname[id], 0);
	PlayerTextDrawShow(id, callname[id]);
	calltime[id] = CreatePlayerTextDraw(id, 85.666740, 208.407485, "incoming call...");
	PlayerTextDrawBackgroundColor(id, calltime[id], 255);
	PlayerTextDrawFont(id, calltime[id], 1);
	PlayerTextDrawLetterSize(id, calltime[id], 0.126665, 0.874073);
	PlayerTextDrawAlignment(id, calltime[playerid], 2);
	PlayerTextDrawColor(id, calltime[id], 255);
	PlayerTextDrawSetOutline(id, calltime[id], 0);
	PlayerTextDrawSetProportional(id, calltime[id], 1);
	PlayerTextDrawSetShadow(id, calltime[id], 0);
	PlayerTextDrawSetSelectable(id, calltime[id], 0);
	PlayerTextDrawShow(id, calltime[id]);
	SetPlayerChatBubble(id, "Звонит телефон", COLOR_PURPLE, 10.0, 10000);
	PlayerPlaySound(id, 20600, 0.0, 0.0, 0.0);
	return true;
}

forward MysqlCheckSMS(playerid, inputtextsave[]);
public MysqlCheckSMS(playerid, inputtextsave[])
{
	if(cache_get_row_count(mysql))
	if(!cache_get_row_int(0, 0, mysql)) return Dialog_Open(playerid,0,0,"{43CD80}Информация","\n\n\\c{D94141}Вы в черном списке абонента\n\n","Скрыть","");
	new mes[128], string[256]; mysql_real_escape_string(inputtextsave, mes);
	format(string, sizeof(string), "INSERT INTO `phonemes` VALUES('%s', '%s', '%s', '1', '%d')", PlayerName[playerid], PlayerInfo[playerid][pSendName],mes, gettime());
	mysql_pquery(mysql, string, "MysqlAddMessage", "d", playerid);
	new id;
	sscanf(PlayerInfo[playerid][pSendName],"u",id);
	if(id!=INVALID_PLAYER_ID)
	{
		if(PlayerInfo[id][pZa_Skill]==1)
		{
			SendInfo(id,"Вам пришло новое сообщение");
			SetPlayerChatBubble(id, "Получил сообщение", COLOR_PURPLE, 10.0, 5000);
		}
	}
	new ret[300];
	if(PlayerInfo[playerid][pScutes]!=-1)
	{
		format(ret, sizeof(ret), "[ЖУЧЕК]: %s написал СМС игроку %s:  %s", PlayerName[playerid],PlayerName[id], inputtextsave);
		SendClientMessage(PlayerInfo[playerid][pScutes], COLOR_BLUE, ret);
	}
	format(string,sizeof(string),"UPDATE `phonemes` SET `read`='0' WHERE `Namez`='%s' AND `Name`='%s';",PlayerName[playerid],PlayerInfo[playerid][pSendName]);
	mysql_pquery(mysql, string);
	return 1;
}
forward MysqlChencheGroup(playerid);
public MysqlChencheGroup(playerid)
{
	new string[512];
	format(string,sizeof(string),"SELECT `phonebook`.`Namez`,`phonebook`.`Num`,`accounts`.`TelNum`,`accounts`.`Online_status`,`phonebook`.`Group` FROM `phonebook`,`accounts` WHERE `phonebook`.`Name`='%s' AND `accounts`.`NickName`=`phonebook`.`Namez` ORDER BY `phonebook`.`Group` DESC;",PlayerName[playerid]);
	mysql_pquery(mysql, string, "MysqlShowContacts", "d", playerid);
	return 1;
}
forward MysqlCheckBanOnLogin(playerid, namez[]);
public MysqlCheckBanOnLogin(playerid, namez[])
{
    new seconds, reason[150], admin[24], Name[24];
    new string[256];
	if(PlayerInfo[playerid][pAskBan]!=22)
	{
		if(cache_get_row_count(mysql) > 0)
		{
			cache_get_row(0, 1, Name, mysql);
			cache_get_row(0, 2, admin, mysql);
			cache_get_row(0, 3, reason, mysql);
			seconds = cache_get_field_content_int(0, "BanSeconds", mysql);

			new times = gettime();
			new tima[20],dima;
			if(floatround((seconds-times)/60/60/24)> 1)
			{
				tima = "дней";
				dima =floatround((seconds-times)/60/60/24,floatround_ceil);
			}
			else
		 	{
	 			tima = "час(ов)";
	 			dima = floatround((seconds-times)/60/60,floatround_ceil);
			}
			if(times<seconds)
			{
				format(string,sizeof(string),"\
				\n\n\\c{FFFFFF}Ваш игровой аккаунт {FF0000}%s\n\
				\\c{FFFFFF}заблокирован на %d %s\n\
				\\cпо причине: %s\n\
				\\cадминистратором: %s\n\
				\\c{FFFFFF}подать заявку можно %s\n\n",
				Name, dima,tima, reason, admin, Mode_Forum);
				Dialog_Open(playerid,0,0,"{D94141}Аккаунт заблокирован",string,"Скрыть","");
				J_Kick(playerid);
				return true;
			}
			else
			{
				format(string, sizeof(string), "UPDATE `accounts` SET `Warns`='0' WHERE `NickName` = '%s' LIMIT 1", PlayerName[playerid]);
				mysql_pquery(mysql, string);
			    format(string, sizeof(string), "DELETE FROM `bannames` WHERE `Name` = '%s' LIMIT 1", PlayerName[playerid]);
				mysql_pquery(mysql, string);
			}
		}
	}
    VehicleID[playerid]=INVALID_VEHICLE_ID;
	OnPlayerLoadingTick[playerid] = GetTickCount();
 	format(string, sizeof(string), "SELECT `ID` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1", PlayerName[playerid]);
	mysql_pquery(mysql, string, "MysqlLoadingIDAccount", "ds", playerid, PlayerName[playerid]);
	OnPlayerLoading[playerid]=3;
	return 1;
}
forward MysqlLoadingIDAccount(playerid, namez[]);
public MysqlLoadingIDAccount(playerid, namez[])
{
	if(cache_get_row_count(mysql) > 0)
		PlayerInfo[playerid][pID] = cache_get_field_content_int(0, "ID", mysql);
	else PlayerInfo[playerid][pID] = -1;
 	J_SetPlayerHealth(playerid,100);
	OnPlayerLoading[playerid]=4;
	OnPlayerLoading[playerid]=6;
	SetPlayerVirtualWorld(playerid, 0);
	if(OnPlayerLoading[playerid]==6)
	{
	    if(PlayerInfo[playerid][pID] != -1)
		{
			ShowLoginDialog(playerid);
			SpecPl(playerid, true);
		}
		else
		{
			if(!IsARPName(Name(playerid)) && RP_Names)
			{
				RenameTime[playerid] = 180;
				SendClientMessage(playerid, COLOR_GRAY, "Ваш ник не соответствует правилам сервера. Смените его");
				return ShowPlayerDialogEx(playerid,RENAME_DIALOG,1,"","{FFFFFF}Ваш ник не соответствует правилам сервера\nВведите новый никнейм в окошко и нажмите {43CD80}Далее\n\n{FFFFFF}Пример: {43CD80}Carl_Johnson","Далее","Отмена");
			}
			RegisterState[playerid] = 1;
			ShowRegisterDialog(playerid,RegisterState[playerid]);
			SpecPl(playerid, true);
		}
	}
	switch(random(6))
	{
	case 0:
		{
			InterpolateCameraPos(playerid, 1054.2791, 1585.9382, 18.8321, 1054.2791, 1585.9382, 18.7321, 62000);
			InterpolateCameraLookAt(playerid, 1053.6819, 1586.7454, 18.7871, 1053.6819, 1586.7454, 18.6871, 62000);
		}
	case 1:
		{
			InterpolateCameraPos(playerid, 2074.2844, 1417.2183, 16.8488, 2074.2844, 1417.2183, 16.7488, 62000);
			InterpolateCameraLookAt(playerid, 2074.5215, 1418.1947, 16.8037, 2074.5215, 1418.1947, 16.7037, 62000);
		}
	case 2:
		{
			InterpolateCameraPos(playerid, 2276.1733, -1370.9896, 30.2214, 2276.1733, -1370.9896, 30.2114, 62000);
			InterpolateCameraLookAt(playerid, 2276.8110, -1371.7549, 30.2265, 2276.8110, -1371.7549, 30.2165, 62000);
		}
	case 3:
		{
			InterpolateCameraPos(playerid, 2304.0442, -90.5045, 36.9429, 2304.0442, -90.5045, 36.9329, 62000);
			InterpolateCameraLookAt(playerid, 2303.5784, -89.6139, 36.6727, 2303.5784, -89.6139, 36.6627, 62000);
		}
	case 4:
		{
			InterpolateCameraPos(playerid, -2053.6294, 177.8464, 52.9555, -2053.6294, 177.8464, 52.9455, 62000);
			InterpolateCameraLookAt(playerid, -2053.3860, 178.8221, 53.1704, -2053.3860, 178.8221, 53.1604, 62000);
		}
	case 5:
		{
			InterpolateCameraPos(playerid, 1773.3915, 860.4376, 88.5045, 1773.3915, 860.4376, 88.4945, 62000);
			InterpolateCameraLookAt(playerid, 1774.1968, 861.0272, 88.2445, 1774.1968, 861.0272, 88.2345, 62000);
		}
	}
	Streamer_Update(playerid);
	return 1;
}
stock DestroyAllTextDraws(playerid)
{
	DestroyDeathTextDraw(playerid);
	DestroyPlayerTD(playerid, InfoText[playerid]);
	DestroyPlayerTD(playerid, TaxiDraw[playerid]);
	DestroyPlayerTD(playerid, ActionText[playerid]);
	DestroyPlayerTD(playerid, ActionBand[playerid]);
	DestroyPlayerTD(playerid, PlayerFuelTD[playerid][0]);
	DestroyPlayerTD(playerid, PlayerFuelTD[playerid][1]);
	DestroyPlayerTD(playerid, PlayerFuelTD[playerid][2]);
	return true;
}

stock CreateAllTextDraws(playerid)
{
	DestroyAllTextDraws(playerid);
	InfoText[playerid] = CreatePlayerTextDraw(playerid, 170.0000, 370.0000, "-");
	PlayerTextDrawLetterSize(playerid, InfoText[playerid], 0.246788, 1.121348);
	PlayerTextDrawAlignment(playerid, InfoText[playerid], 2);
	PlayerTextDrawColor(playerid, InfoText[playerid], 0xC9EAFFFF);
	PlayerTextDrawSetShadow(playerid, InfoText[playerid], 0);
	PlayerTextDrawSetOutline(playerid, InfoText[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, InfoText[playerid], 572662527);
	PlayerTextDrawFont(playerid, InfoText[playerid], 2);
	PlayerTextDrawSetProportional(playerid, InfoText[playerid], 1);
	TaxiDraw[playerid] = CreatePlayerTextDraw(playerid, 608.006774, 286.090850, "$0");
	PlayerTextDrawLetterSize(playerid, TaxiDraw[playerid], 0.233292, 1.033177);
	PlayerTextDrawAlignment(playerid, TaxiDraw[playerid], 2);
	PlayerTextDrawColor(playerid, TaxiDraw[playerid], -1);
	PlayerTextDrawSetShadow(playerid, TaxiDraw[playerid], 0);
	PlayerTextDrawSetOutline(playerid, TaxiDraw[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, TaxiDraw[playerid], 51);
	PlayerTextDrawFont(playerid, TaxiDraw[playerid], 3);
	PlayerTextDrawSetProportional(playerid, TaxiDraw[playerid], 1);
	ActionText[playerid] = CreatePlayerTextDraw(playerid, 325.000000, 83.000000, "PRESS ~r~ENTER");
	PlayerTextDrawAlignment(playerid, ActionText[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, ActionText[playerid], 255);
	PlayerTextDrawFont(playerid, ActionText[playerid], 2);
	PlayerTextDrawLetterSize(playerid, ActionText[playerid], 0.909999, 2.599999);
	PlayerTextDrawColor(playerid, ActionText[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ActionText[playerid], 1);
	PlayerTextDrawSetProportional(playerid, ActionText[playerid], 1);
	ActionBand[playerid] = CreatePlayerTextDraw(playerid, 205.000000, 112.000000, "Band");
	PlayerTextDrawBackgroundColor(playerid, ActionBand[playerid], 255);
	PlayerTextDrawFont(playerid, ActionBand[playerid], 1);
	PlayerTextDrawLetterSize(playerid, ActionBand[playerid], -0.000000, 0.899999);
	PlayerTextDrawColor(playerid, ActionBand[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ActionBand[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ActionBand[playerid], 1);
	PlayerTextDrawSetShadow(playerid, ActionBand[playerid], 1);
	PlayerTextDrawUseBox(playerid, ActionBand[playerid], 1);
	PlayerTextDrawBoxColor(playerid, ActionBand[playerid], 0xFF990055);
	PlayerTextDrawTextSize(playerid, ActionBand[playerid], 201.000000, 0.000000);
	
	PlayerFuelTD[playerid][0] = CreatePlayerTextDraw(playerid, 320.000000, 225.740402, "DIESEL");
	PlayerTextDrawLetterSize(playerid, PlayerFuelTD[playerid][0], 0.197674, 1.163336);
	PlayerTextDrawAlignment(playerid, PlayerFuelTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, PlayerFuelTD[playerid][0], -650034689);
	PlayerTextDrawSetShadow(playerid, PlayerFuelTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerFuelTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerFuelTD[playerid][0], 51);
	PlayerTextDrawFont(playerid, PlayerFuelTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, PlayerFuelTD[playerid][0], 1);
	PlayerFuelTD[playerid][1] = CreatePlayerTextDraw(playerid, 284.194427, 247.988754, "50 ~y~LITRES");
	PlayerTextDrawLetterSize(playerid, PlayerFuelTD[playerid][1], 0.166555, 0.982792);
	PlayerTextDrawAlignment(playerid, PlayerFuelTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, PlayerFuelTD[playerid][1], -3342081);
	PlayerTextDrawSetShadow(playerid, PlayerFuelTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerFuelTD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerFuelTD[playerid][1], 51);
	PlayerTextDrawFont(playerid, PlayerFuelTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, PlayerFuelTD[playerid][1], 1);
	PlayerFuelTD[playerid][2] = CreatePlayerTextDraw(playerid, 351.556671, 246.469528, "$1250");
	PlayerTextDrawLetterSize(playerid, PlayerFuelTD[playerid][2], 0.283532, 1.175932);
	PlayerTextDrawAlignment(playerid, PlayerFuelTD[playerid][2], 2);
	PlayerTextDrawColor(playerid, PlayerFuelTD[playerid][2], 1453874943);
	PlayerTextDrawSetShadow(playerid, PlayerFuelTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerFuelTD[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerFuelTD[playerid][2], 51);
	PlayerTextDrawFont(playerid, PlayerFuelTD[playerid][2], 3);
	PlayerTextDrawSetProportional(playerid, PlayerFuelTD[playerid][2], 1);
	
	LoadingPlayerTextures[playerid] = CreatePlayerTextDraw(playerid, 320.000000, 182.442367, ".........................");
	PlayerTextDrawLetterSize(playerid, LoadingPlayerTextures[playerid], 0.407258, 2.183617);
	PlayerTextDrawAlignment(playerid, LoadingPlayerTextures[playerid], 2);
	PlayerTextDrawColor(playerid, LoadingPlayerTextures[playerid], -690767617);
	PlayerTextDrawSetShadow(playerid, LoadingPlayerTextures[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingPlayerTextures[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, LoadingPlayerTextures[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingPlayerTextures[playerid], 3);
	PlayerTextDrawSetProportional(playerid, LoadingPlayerTextures[playerid], 1);
	
	maininfo[playerid][0] = CreatePlayerTextDraw(playerid, 560.500000, 170.059997, "background");
	PlayerTextDrawLetterSize(playerid, maininfo[playerid][0], 0.000000, 5.945552);
	PlayerTextDrawTextSize(playerid, maininfo[playerid][0], 427.240000, 0.000000);
	PlayerTextDrawAlignment(playerid, maininfo[playerid][0], 1);
	PlayerTextDrawColor(playerid, maininfo[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, maininfo[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, maininfo[playerid][0], 572662384);
	PlayerTextDrawSetShadow(playerid, maininfo[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, maininfo[playerid][0], 0);
	PlayerTextDrawFont(playerid, maininfo[playerid][0], 0);
	maininfo[playerid][1] = CreatePlayerTextDraw(playerid, 428.250000, 168.840011, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, maininfo[playerid][1], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, maininfo[playerid][1], 131.000000, 12.039993);
	PlayerTextDrawAlignment(playerid, maininfo[playerid][1], 1);
	PlayerTextDrawColor(playerid, maininfo[playerid][1], COLOR_LIGHTBLUE);
	PlayerTextDrawUseBox(playerid, maininfo[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, maininfo[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, maininfo[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, maininfo[playerid][1], 0);
	PlayerTextDrawFont(playerid, maininfo[playerid][1], 4);
	maininfo[playerid][2] = CreatePlayerTextDraw(playerid, 493.250000, 169.500000, "ADRES");
	PlayerTextDrawLetterSize(playerid, maininfo[playerid][2], 0.159999, 1.065200);
	PlayerTextDrawTextSize(playerid, maininfo[playerid][2], -18.000000, 127.959945);
	PlayerTextDrawAlignment(playerid, maininfo[playerid][2], 2);
	PlayerTextDrawColor(playerid, maininfo[playerid][2], 255);
	PlayerTextDrawSetShadow(playerid, maininfo[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, maininfo[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, maininfo[playerid][2], 51);
	PlayerTextDrawFont(playerid, maininfo[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, maininfo[playerid][2], 1);
	maininfo[playerid][3] = CreatePlayerTextDraw(playerid, 493.000000, 181.700000, "CLASS DOMA: ~y~ZAEBIS");
	PlayerTextDrawLetterSize(playerid, maininfo[playerid][3], 0.182250, 0.939200);
	PlayerTextDrawTextSize(playerid, maininfo[playerid][3], -1.500000, 128.799942);
	maininfo[playerid][4] = CreatePlayerTextDraw(playerid, 493.000000, 189.440032, "STOIMOST: ~y~DOHUYA$");
	PlayerTextDrawLetterSize(playerid, maininfo[playerid][4], 0.182250, 0.939200);
	PlayerTextDrawTextSize(playerid, maininfo[playerid][4], -1.500000, 128.799942);
	maininfo[playerid][5] = CreatePlayerTextDraw(playerid, 493.000000, 197.440017, "VLADELEC BIZNESA: ~y~LEHA");
	PlayerTextDrawLetterSize(playerid, maininfo[playerid][5], 0.182250, 0.939200);
	PlayerTextDrawTextSize(playerid, maininfo[playerid][5], -1.500000, 128.799942);
	maininfo[playerid][6] = CreatePlayerTextDraw(playerid, 493.000000, 205.159988, "CENA VHODA: ~y~KAK DOMOY");
	PlayerTextDrawLetterSize(playerid, maininfo[playerid][6], 0.182250, 0.939200);
	PlayerTextDrawTextSize(playerid, maininfo[playerid][6], -1.500000, 128.799942);
	maininfo[playerid][7] = CreatePlayerTextDraw(playerid, 493.000000, 212.879959, "~b~PRESS ~k~~SNEAK_ABOUT~ TO ENTER");
	PlayerTextDrawLetterSize(playerid, maininfo[playerid][7], 0.182250, 0.939200);
	PlayerTextDrawTextSize(playerid, maininfo[playerid][7], -1.500000, 128.799942);
	for(new i = 3; i < 8; i++)
	{
		PlayerTextDrawAlignment(playerid, maininfo[playerid][i], 2);
		PlayerTextDrawColor(playerid, maininfo[playerid][i], -1);
		PlayerTextDrawSetShadow(playerid, maininfo[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, maininfo[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, maininfo[playerid][i], 51);
		PlayerTextDrawFont(playerid, maininfo[playerid][i], 2);
		PlayerTextDrawSetProportional(playerid, maininfo[playerid][i], 1);
	}
	PlayerTextDrawColor(playerid, maininfo[playerid][7], 0x6283BDFF);
	//Рулетка телефона
	PlayerRoulette[playerid][0] = CreatePlayerTextDraw(playerid, 320.000000, 85.000000, "-");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][0], 0.375389, 2.066052);
	PlayerTextDrawTextSize(playerid,PlayerRoulette[playerid][0], 40.000000, 260.500000);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][0], 2);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][0], 255);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerRoulette[playerid][0], true);
	
	PlayerRoulette[playerid][1] = CreatePlayerTextDraw(playerid, 402.108642, 129.419815, "1 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][1], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][1], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][1], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][1], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][1], 0x497fa3FF);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][1], 1);
	PlayerTextDrawSetPreviewModel(playerid, PlayerRoulette[playerid][1], 19222);
	PlayerTextDrawSetPreviewRot(playerid, PlayerRoulette[playerid][1], 0.000000, 0.000000, 0.000000, 1.000000);

	PlayerRoulette[playerid][2] = CreatePlayerTextDraw(playerid, 362.241851, 129.419815, "2 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][2], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][2], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][2], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][2], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][2], 0x497fa3FF);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][2], 1);
	PlayerTextDrawSetPreviewModel(playerid, PlayerRoulette[playerid][2], 19222);
	PlayerTextDrawSetPreviewRot(playerid, PlayerRoulette[playerid][2], 0.000000, 0.000000, 0.000000, 1.000000);

	PlayerRoulette[playerid][3] = CreatePlayerTextDraw(playerid, 321.999969, 129.419815, "3 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][3], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][3], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][3], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][3], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][3], 0x497fa3FF);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][3], 1);
	PlayerTextDrawSetPreviewModel(playerid, PlayerRoulette[playerid][3], 19222);
	PlayerTextDrawSetPreviewRot(playerid, PlayerRoulette[playerid][3], 0.000000, 0.000000, 0.000000, 1.000000);

	PlayerRoulette[playerid][4] = CreatePlayerTextDraw(playerid, 281.008239, 129.419815, "4 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][4], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][4], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][4], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][4], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][4], 0x497fa3FF);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][4], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][4], 1);
	PlayerTextDrawSetPreviewModel(playerid, PlayerRoulette[playerid][4], 19222);
	PlayerTextDrawSetPreviewRot(playerid, PlayerRoulette[playerid][4], 0.000000, 0.000000, 0.000000, 1.000000);

	PlayerRoulette[playerid][5] = CreatePlayerTextDraw(playerid, 240.391357, 129.419815, "5 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][5], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][5], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][5], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][5], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][5], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][5], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][5], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][5], 0x497fa3FF);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][5], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][5], 1);
	PlayerTextDrawSetPreviewModel(playerid, PlayerRoulette[playerid][5], 19222);
	PlayerTextDrawSetPreviewRot(playerid, PlayerRoulette[playerid][5], 0.000000, 0.000000, 0.000000, 1.000000);

	PlayerRoulette[playerid][6] = CreatePlayerTextDraw(playerid, 199.774459, 129.419815, "6 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][6], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][6], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][6], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][6], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][6], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][6], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][6], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][6], 0x497fa3FF);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][6], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][6], 1);
	PlayerTextDrawSetPreviewModel(playerid, PlayerRoulette[playerid][6], 19222);
	PlayerTextDrawSetPreviewRot(playerid, PlayerRoulette[playerid][6], 0.000000, 0.000000, 0.000000, 1.000000);

	PlayerRoulette[playerid][7] = CreatePlayerTextDraw(playerid, 284.383117, 215.194839, "drop_case");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][7], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][7], 71.611007, 70.118087);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][7], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][7], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][7], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][7], 1453874943);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][7], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][7], -6749953);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][7], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][7], 1);

	PlayerRoulette[playerid][8] = CreatePlayerTextDraw(playerid, 320.000000, 298.000000, "case for cash");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][8], 0.254663, 1.411059);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][8], 2);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][8], -6749953);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][8], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][8], 255);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][8], 1);
	////
	AlkTD[playerid][7] = CreatePlayerTextDraw(playerid, 570.000000, 130.000000, "Time to jailbreak~n~~y~0:00");
	PlayerTextDrawLetterSize(playerid, AlkTD[playerid][7], 0.196666, 0.858311);
	PlayerTextDrawTextSize(playerid, AlkTD[playerid][7], 22.222227, 69.191108);
	PlayerTextDrawAlignment(playerid, AlkTD[playerid][7], 2);
	PlayerTextDrawColor(playerid, AlkTD[playerid][7], -1);
	PlayerTextDrawUseBox(playerid, AlkTD[playerid][7], true);
	PlayerTextDrawBoxColor(playerid, AlkTD[playerid][7], 255);
	PlayerTextDrawSetShadow(playerid, AlkTD[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, AlkTD[playerid][7], 1);
	PlayerTextDrawBackgroundColor(playerid, AlkTD[playerid][7], 51);
	PlayerTextDrawFont(playerid, AlkTD[playerid][7], 3);
	PlayerTextDrawSetProportional(playerid, AlkTD[playerid][7], 1);
	CreateDeathTextDraw(playerid);
	return true;
}
stock IsPlayerInRangeOfPlayer(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid) &&
        !IsPlayerNPC(playerid) && !IsPlayerNPC(targetid))
    {
        new Float:posx, Float:posy, Float:posz;
        GetPlayerPos(targetid, posx, posy, posz);
        if(IsPlayerInRangeOfPoint(playerid, radi, posx, posy, posz)) return 1;
    }
    return 0;
}
stock Float:GetPlayerArmourEx(playerid)
{
	new Float:Armour;
	GetPlayerArmour(playerid, Armour);
	return Armour;
}
public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    if(enterexit == 1)SendInfo(playerid, "Используйте {7396FB}'/gps » Автомастерские'{ffffff}, чтобы добраться до мастерской");
	ModCar(GetPlayerVehicleID(playerid));
	return 1;
}
stock ToggleTextDrawForPlayer(playerid, Text:textdraw, toggle)
{
	if(toggle) TextDrawShowForPlayer(playerid, textdraw);
	else TextDrawHideForPlayer(playerid, textdraw);
	return true;
}
stock PlayerTextDrawToggle(playerid, PlayerText:textdraw, toggle)
{
	if(toggle) PlayerTextDrawShow(playerid, textdraw);
	else PlayerTextDrawHide(playerid, textdraw);
	return true;
}
stock ShowPlayerAZS(playerid)
{
    new str[2500], string[1000];
	for(new i;i < sizeof(GoFuel);i ++)
	{
		new biz = GoFuel[i][gfBizzID];
		format(string,sizeof(string),"{FFFFFF}%s {B83434}%d/50000 л. {43CD80}$%d\n",GoFuel[i][gfName],BizInfo[biz][bProducts],BizInfo[biz][bMoney]);
		strcat(str,string);
	}
	ShowPlayerDialogEx(playerid,236,2,"{43CD80}Выберите АЗС",str,"Выбор","Отмена");
	return true;
}
stock ShowPlayerGS(playerid)
{
    new str[800], string[700];
	for(new i;i < sizeof(GoGunShop);i ++)
	{
		new biz = GoGunShop[i][gsBizzID];
		format(string,sizeof(string),"{FFFFFF}%s {B83434}%d/50000 мат. Баланс бизнеса: {43CD80}$%d\n",GoGunShop[i][gsName],BizInfo[biz][bProducts],BizInfo[biz][bMoney]);
		strcat(str,string);
	}
	ShowPlayerDialogEx(playerid,258,2,"{43CD80}Выберите GunShop",str,"Выбор","Отмена");
	return true;
}
stock Float:fmax(Float:v1, Float:v2)
{
	return v1 > v2?v1:v2;
}
stock Float:fmin(Float:v1, Float:v2)
{
	return v1 < v2?v1:v2;
}
stock Float:jfloatsub(Float:value1, Float:value2)
{
	new Float:num1 = fmax(value1, value2);
	new Float:num2 = fmin(value1, value2);
	new Float:diff = (num1 - num2);
	if(diff > 300.0) diff = ( 360.0 - num1 ) + num2;
	return diff;
}
stock ShowPlayerActionText(playerid, const text[])
{
	PlayerTextDrawSetString(playerid, ActionText[playerid], text);
	PlayerTextDrawShow(playerid, ActionText[playerid]);
	return true;
}
stock HidePlayerActionText(playerid)
{
	PlayerTextDrawHide(playerid, ActionText[playerid]);
	return true;
}
stock ShowPlayerActionBand(playerid, status, endstatus)
{
	new Float:part = 100.0 / float(endstatus) * float(status);
	new Float:length = 201.0 + part * 2.42;
	if(length > 443.0) length = 443.0;
	else if(length < 201.0) length = 201.0;
	PlayerTextDrawTextSize(playerid, ActionBand[playerid], length, 0.0);
	PlayerTextDrawShow(playerid, ActionBand[playerid]);
	TextDrawShowForPlayer(playerid, BandDrawBG[0]);
	TextDrawShowForPlayer(playerid, BandDrawBG[1]);
	return true;
}
stock HidePlayerActionBand(playerid)
{
	PlayerTextDrawHide(playerid, ActionBand[playerid]);
	TextDrawHideForPlayer(playerid, BandDrawBG[0]);
	TextDrawHideForPlayer(playerid, BandDrawBG[1]);
	return true;
}
stock ResetDoorsStatus(carid)
{
	new status;
	if(!IsAOwnableCar(carid)) status = false;
	else status = CarInfo[GetVehicleID(carid)][cLock];
	SetDoorsStatus(carid, status);
	return status;
}
stock IsAMeria(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
		case TEAM_MERIALS: return true;
		default: return false;
	}
	return false;
}
stock IsAMedic(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
		case TEAM_MERIALV: return true;
		case TEAM_M4C: return true;
		case TEAM_MEDICLV: return true;
		default: return false;
	}
	return false;
}
stock VehicleSeatState(seat)
{
	new seatstate;
	switch(seat)
	{
	    case 0: seatstate = 2;
	    default: seatstate = PLAYER_STATE_PASSENGER;
	}
	return seatstate;
}
stock GetVehicleSeat(vehicleid, seatid)
{
	new playerid = VehicleSeat[vehicleid][seatid];
	if(IsPlayerInVehicle(playerid, vehicleid))
	{
	    if(GetPlayerState(playerid) == VehicleSeatState(seatid)) return playerid;
	}
	VehicleSeat[vehicleid][seatid] = INVALID_PLAYER_ID;
	return VehicleSeat[vehicleid][seatid];
}
public OnPlayerDisconnect(playerid, reason)
{
	if(IsPlayerNPC(playerid))return 1;
	if(IsValidDynamic3DTextLabel(WantedText[playerid]))DestroyDynamic3DTextLabel(WantedText[playerid]);
	if(ADuty[playerid]==228 || PlayerInfo[playerid][pHelper])Iter_Remove(Admins, playerid);
	KillTimer(Player_Timer[playerid][0]);
	KillTimer(Player_Timer[playerid][1]);
	KillTimer(Player_Timer[playerid][2]);
	DestroyObject(SkateObj[playerid]);
	if(GetPVarInt(playerid, "napeinte") && paintt[1] == 1) paintt[2]--; 
	if(PlayerPlayed[playerid]) callcmd::radio(playerid);
	if(GetPVarInt(playerid, "BBOX"))callcmd::bbox(playerid, "");
	KillTimer(marktimer[playerid]);
	if(GetPVarInt(playerid,"showedbonesmenu"))HideBonesMenu(playerid);
	if(GetPVarInt(playerid,"showedfool"))HideFoolMenu(playerid);
	if(GetPVarInt(playerid,"showedroulmenu"))HideRoulMenu(playerid);
	if(GetPVarInt(playerid, "TempRadar"))DeleteRadar(playerid);
	if(PlayerInfo[playerid][pDCTime]==4)
	{
		new Float:pos[3], other[2];
		GetPlayerPos(playerid, pos[0],pos[1],pos[2]);
		other[0] = GetPlayerVirtualWorld(playerid);
		other[1] = GetPlayerInterior(playerid);
		new query[256];
		format(query, sizeof query,"UPDATE `accounts` SET `spawnx` = '%.4f',`spawny` = '%.4f',`spawnz` = '%.4f',`spawnvw` = '%d',`spawnint` = '%d' WHERE `ID` = '%d'",pos[0],pos[1],pos[2],other[0],other[1],PlayerInfo[playerid][pID]);
		mysql_query(mysql, query, false);
	}
	if(GetPVarInt(playerid, "JailBreak"))
	{
		PlayerInfo[playerid][pJailTime] += 3600;
		PlayerInfo[playerid][pJB] = 1800;
	}
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Отключился от сервера",0,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
	if(GetPVarInt(playerid, "StoWaiting"))
	{
		new i = GetPVarInt(playerid, "StoWaiting")-1;
		TuningInfo[i][stoWait] = false;
	}
	new newstring[90];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	new Hour, Mon, Sec;
	gettime(Hour,Mon,Sec);
	format(newstring,sizeof(newstring),"%d.%d.%d - %02d:%02d:%02d",Day,Month,Year, Hour, Mon,Sec);
	SetString(PlayerInfo[playerid][pLastLogin],newstring);
	PlayerInfo[playerid][pAskBan]=0;
	if(SpecID[playerid] != INVALID_PLAYER_ID)
	{
		if(Spectate[SpecID[playerid]] == 1 && SpecAd[SpecID[playerid]] == playerid)
		{
			GameTextForPlayer(SpecID[playerid], "~r~PLAYER DISCONNECTED~n~~g~SPECTATING STOPPED", 5000, 4);
			StopSpectate(SpecID[playerid]);
			DisallowSpawn[playerid] = 0;
		}
	}	
	ResetTuningInfo(playerid);
	DestroyPlayerObject(playerid, GetPVarInt(playerid, "speedo_object"));
	DeletePVar(playerid, "speedo_object");
	KillCraftTD2(playerid);
	crafttry[playerid] = 0;
	if(SpecAd[playerid] != 65535)
	{
		SpecID[SpecAd[playerid]] = 65535;
		SpecAd[playerid] = 65535;
	}
	SpecID[playerid] = 65535; 
	if(FPlayerText[playerid] == true)
	{
		Delete3DTextLabel(PlayerFamily[playerid]);
		FPlayerText[playerid] = false;
	}
	if(kasmenu[playerid]==1)
    {
	    TextDrawDestroy(BetText[playerid]);
	    TextDrawDestroy(BalanceText[playerid]);
	    kasmenu[playerid]=0;
    }
  	if(GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID) CheckPlayerGoCuff(GotoInfo[playerid][gtGoID]);
	if(GotoInfo[playerid][gtID]!=INVALID_PLAYER_ID)//жіза
	{
	    Cuffed[GotoInfo[playerid][gtID]] = false;
		CuffedTime[GotoInfo[playerid][gtID]] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnims(GotoInfo[playerid][gtID]);
     	SendClientMessage(GotoInfo[playerid][gtID], COLOR_LIGHTBLUE, "Вы были отпущены");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	if(PlayerInfo[playerid][pScutes]!=-1)
	{
		new string[100];
		format(string,sizeof(string),"[ЖУЧЕК]: Игрок %s покинул сервер и жучек был удален",PlayerName[playerid]);
		SendClientMessage(PlayerInfo[playerid][pScutes],COLOR_BLUE,string);
	 	PlayerInfo[PlayerInfo[playerid][pScutes]][pMScutes]=-1;
		PlayerInfo[playerid][pScutes]=-1;
	}
	if(PlayerInfo[playerid][pMScutes]!=-1) PlayerInfo[PlayerInfo[playerid][pMScutes]][pScutes]=-1,PlayerInfo[playerid][pMScutes]=-1;
	ExitPlayerFromSlotMachine(playerid);
    if(SlotTimer[playerid] != -1) KillTimer(SlotTimer[playerid]);
	if(GetPlayerState(playerid)==2 && VehicleInfo[GetPlayerVehicleID(playerid)][vTeam] == TEAM_LICENSERS && VehicleInfo[GetPlayerVehicleID(playerid)][vPlayer] !=-1) VehicleInfo[GetPlayerVehicleID(playerid)][vPlayer] = -1;
	if(IsPlayerLogged[playerid])
	{
		DestroyPlayerCars(playerid);
		for(new i = 1; i < MAX_QUESTS; i++){
			SaveQuest(playerid, i);
			AcceptQuest[playerid][i] = 0;
			QuestShow[playerid][i] = 0;
			QuestProgress[playerid][i] = 0;
		}
		SaveOnlineInfo(playerid);
		if(!PlayerInfo[playerid][pAdmin])
		{
			if(!ConfirmIP(playerid))
			{
				SetString(PlayerCheckIP2[playerid], PlayerCheckIP1[playerid]);
				SetString(PlayerCheckIP1[playerid], PlayerInfo[playerid][pLastIP]);
				SetString(PlayerInfo[playerid][pLastIP], PlayerIp[playerid]);
			}
		}
		else if(ADuty[playerid] == 228)
		{
			if(!ConfirmIP(playerid))
			{
				SetString(PlayerCheckIP2[playerid], PlayerCheckIP1[playerid]);
				SetString(PlayerCheckIP1[playerid], PlayerInfo[playerid][pLastIP]);
				SetString(PlayerInfo[playerid][pLastIP], PlayerIp[playerid]);
			}
		}
	    if(PlayerInfo[playerid][pWanted])
		{
			new cops, str[256];
			foreach(new id:Player)
			{
				if((ProxDetectorS(10.0, playerid, id, 1) && IsACop(id) && IsPlayerConnected(id) && IsPlayerLogged[id] && TeamDuty[id]))
					cops++;
			}
			if((cops && (GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID || Cuffed[playerid] || CuffedTime[playerid] != 0)))
			{
				if(!PlayerInfo[playerid][pHeal])
				{
					PlayerInfo[playerid][pView] += (PlayerInfo[playerid][pWanted]+1) * 1200;
					PlayerInfo[playerid][pWanted]=0;
					SlotValue[playerid][14] = 0;
					SlotValue[playerid][11] = 0;
					if(PlayerInfo[playerid][pZKP]>1)PlayerInfo[playerid][pZKP]--;
					format(str, sizeof(str), "%s[%d] вышел при попытке избежать ареста и был наказан", PlayerName[playerid], playerid);
					SendClientMessageToAll(COLOR_LIGHTRED,str);
				}
			}
		}
		if(startlomka[playerid]==1)PlayerInfo[playerid][pOldRepl]=1001;
		SaveAccount(playerid);
		if(SlotValue[playerid][1]!=-1)SaveHouse(SlotValue[playerid][1]);
		if(SlotValue[playerid][3]!=-1)SaveBiz(SlotValue[playerid][3]);
		pSportZal[playerid] = 0;
		AddTimeMessages[playerid] = 0;
		CheckTir(playerid);
		RegTimeNumber[playerid]=0;
		RegCarNumber[playerid]=-1;
		RegCarID[playerid]=-1;
		new string[128];
		format(string,sizeof(string),"UPDATE `accounts` SET `Online_status` = '1001' WHERE `ID` = %d;",PlayerInfo[playerid][pID]);
		mysql_pquery(mysql, string);
		if(PlayerCar[playerid] != INVALID_VEHICLE_ID && IsPlayerInVehicle(playerid, PlayerCar[playerid])) VehicleSeat[PlayerCar[playerid]][PlayerSeat[playerid]] = INVALID_PLAYER_ID;
		EnterVehicle[playerid] = INVALID_VEHICLE_ID;
		PlayerSeat[playerid] = -1;
		PlayerCar[playerid] = INVALID_VEHICLE_ID;
		new NearCops;
		if(!IsAIP(Name(playerid)))
		{
			foreach(new i:Player)
			{
				if(!IsPlayerConnected(i)) continue;
				if(ArrestID[i] == playerid) ArrestID[i] = INVALID_PLAYER_ID;
				if( IsACop(i) && ProxDetectorS(25.0, playerid, i, 1) ) NearCops ++;
			}
		}
		DestroyAllTextDraws(playerid);
		DisablePlayerRaceCheckpoint(playerid);
		HouseNalog[playerid] = -1;
		HouseNalogState2[playerid] = 0;
		IsPlayerLogged[playerid] = false;
		if(ArendKey[playerid] != INVALID_VEHICLE_ID)
		{
			new car = ArendKey[playerid];
			if(ArendInfo[car][aRentID] == playerid)
			{
				ArendInfo[car][aRentID] = INVALID_PLAYER_ID;
				SetVehicleToRespawn(ArendCar[0] + car);
			}
			ArendKey[playerid] = INVALID_VEHICLE_ID;
		}
		CheckBed(playerid);
		if(TazerPlayer[playerid] != INVALID_PLAYER_ID)
		{
		    new id = TazerPlayer[playerid];
		    if(TazerPlayer[id] == playerid) TazerPlayer[id] = INVALID_PLAYER_ID;
		    TazerPlayer[playerid] = INVALID_PLAYER_ID;
		}
		if(LiveOffer[playerid] != INVALID_PLAYER_ID)
		{
			new id = LiveOffer[playerid];
			LiveOffer[playerid] = INVALID_PLAYER_ID;
			if(LiveOffer[id] == playerid)
			{
				LiveOffer[id] = INVALID_PLAYER_ID;
				SendInfo(id,"Интервью окончено, так как ваш собеседник покинул сервер");
				TogglePlayerControllable(id,true);
			}
		}
		if(TimetoReturn[playerid]>0 && pTemp[playerid][pArendaCar]!=-1)
		{
			new carsid = pTemp[playerid][pArendaCar];
		    if(carsid!=0)
		    {
		        GetVehicleHealth(carsid,VehicleHealth[carsid] );
			    if(VehicleHealth[carsid]<700)
			    {
			        new money = floatround(1000-VehicleHealth[carsid]);
					if(SlotValue[playerid][0]>=money)GiveMoney(playerid,-money);
					else if(PlayerInfo[playerid][pBank]>=money)	GiveBankMoney(playerid,-money);
					else if(PlayerInfo[playerid][pZKP]>=10)PlayerInfo[playerid][pZKP]-=10;
			    }
			    switch(VehicleInfo[carsid][vJob])
			    {
			        case 1: endrabavt(playerid);
					case 11:
					{
					    new vehsid = GetVehicleTrailer(carsid);
					    SetVehicleToRespawn(vehsid);
					    SetVehicleToRespawn(carsid);
					}
			        default: SetVehicleToRespawn(carsid);
			    }
			    TimetoReturn[playerid]=0;
			    pTemp[playerid][pArendaCar]=-1;
			}
		}
		///////
		if(IsPlayerInAnyVehicle(playerid))
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(IsATaxi(vehicleid))
			{
			    new PLAYER_SEAT = GetPlayerVehicleSeat(playerid);
				if(!PLAYER_SEAT)
				{
					if(PlayerInfo[playerid][pJob] == JOB_TAXI)
					{
						if(TaxiTarif[playerid] > 0)
						{
							TaxiTarif[playerid] = 0;
							PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
                            TextDrawShowForPlayer(playerid, Taximeter[0]);
							TextDrawShowForPlayer(playerid, Taximeter[1]);
							TextDrawShowForPlayer(playerid, Taximeter[2]);
							TextDrawShowForPlayer(playerid, Taximeter[3]);
							SetDynamicObjectMaterialText(VehObjects[vehicleid][3], 0, "ТАКСИ\n{D94141}АРЕНДОВАНА\n{FF0000}ЗВОНИ {FF4400}999", 130, "Calibri", 20, 0, 0xFFFF0000, 0, 1);
							for(new i; i < 4; i ++)
							{
							    new player = GetVehicleSeat(vehicleid, i);
							    if(player != INVALID_PLAYER_ID)
								{
								    SendInfo(player,"Таксист, который вез вас, теперь не на службе");
								    if(SlotValue[player][0] >= TaxiPrice[player]) GiveMoney(playerid,TaxiPrice[player],"Taxi+");
									GiveMoney(player,-TaxiPrice[player],"Taxi-");
									PlayerTextDrawHide(player,TaxiDraw[player]);
									PlayerTextDrawSetString(player, TaxiDraw[player],"$0");
	          						TextDrawHideForPlayer(player, Taximeter[0]);
									TextDrawHideForPlayer(player, Taximeter[1]);
									TextDrawHideForPlayer(player, Taximeter[2]);
									TextDrawHideForPlayer(player, Taximeter[3]);
									TaxiPrice[player] = 0;
									TaxiDistance[player] = 0;
								}
							}
						}
					}
				}
				else
				{
					new id = GetVehicleSeat(vehicleid, 0);
					if(id != INVALID_PLAYER_ID)
					{
						if(SlotValue[playerid][0] > TaxiPrice[playerid]) GiveMoney(id,TaxiPrice[playerid],"Taxi+");
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы взяли $%d с игрока %s за поездку",TaxiPrice[playerid],Name(playerid));
						SendClientMessage(id,COLOR_VALIK,string);
						new money;
						for(new i = 1; i < 4; i ++)
						{
							new seat = GetVehicleSeat(vehicleid, i);
							if(seat != INVALID_PLAYER_ID) money += TaxiPrice[seat];
						}
						format(string,sizeof(string),"%d",money);
						PlayerTextDrawSetString(id, TaxiDraw[id],string);
						GiveMoney(playerid,-TaxiPrice[playerid],"Taxi-");
						PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
					  	TextDrawHideForPlayer(playerid, Taximeter[0]);
						TextDrawHideForPlayer(playerid, Taximeter[1]);
						TextDrawHideForPlayer(playerid, Taximeter[2]);
						TextDrawHideForPlayer(playerid, Taximeter[3]);
						PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"$0");
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы отдали $%d таксисту %s за поездку",TaxiPrice[playerid],Name(id));
						SendClientMessage(playerid,COLOR_VALIK,string);
						TaxiPrice[playerid]=0;
						if(money > 100)PlayerInfo[id][Taxi_Skill]++;
						if(PlayerInfo[id][Taxi_Skill]){
							GiveMoney(id, PlayerInfo[id][Taxi_Skill], "Премия за навык таксиста");
							f(string, "[Информация] {FFFFFF}Вы получили бонус в размере $%d за навык таксиста", PlayerInfo[id][Taxi_Skill]);
							SendClientMessage(id, COLOR_VALIK, string);
						}
						if(QuestProgress[id][3] < QI[3][LastProgress] && AcceptQuest[id][3] == 1 && money > 100)QuestProgress[id][3]++;
						if(QuestProgress[id][3] >= QI[3][LastProgress] && QuestProgress[id][3] < 10000){
							GiveMoney(id, 80000, "Бонус квеста фермера");
							SendInfo(id, "Вы получили бонус за выполнение квеста {7396FB}'Настоящий бомбила'");
							QuestProgress[id][3] = 10000;
							getdate(logdate[2],logdate[1],logdate[0]);
							gettime(logtime[0],logtime[1],logtime[2]);
							f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
							WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[id][pID],Name(id),-1,"Система","Бонус за квест таксиста",80000,PlayerIp[id],"127.0.0.1",GetMoney(id));
						}						
					}
				}
				VehicleSeat[vehicleid][PLAYER_SEAT] = INVALID_PLAYER_ID;
				PlayerSeat[playerid] = -1;
				PlayerCar[playerid] = INVALID_VEHICLE_ID;
			}
		}
	}
	KillTimer(TimerP);
	if(Merrit[0]!=0 && (Merrit[1]==playerid || Merrit[2]==playerid || Merrit[3]==playerid))
	{
	    new string[30];
		Merrit[0] = 0;
		Merrit[1] = 0;
		Merrit[2] = 0;
		Merrit[3] = 0;
		format(string,sizeof(string),"Свадьба была сорвана");
		ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
	}
	new namez[25]; GetPlayerName(playerid, namez, 25);
	if(strcmp(Name(playerid), namez, true)!=0)
	{
	    BanName(Name(playerid), "server", 0, "Вышел не с тем ником с которым зашел");
	    BanName(namez, "server", 0, "Вышел не с тем ником с которым зашел");
	    new string[40];
		format(string, sizeof(string), "banip %s", PlayerIp[playerid]);
		SendRconCommand(string);
	}
	return true;
}
public UnFreeze(playerid)
{
	return TogglePlayerControllable(playerid, true);
}
forward OnPlayerFinishHarvest(playerid);
public OnPlayerFinishHarvest(playerid)
{
	new _plntID = PlayerHarvestID[playerid];
	InJob[playerid] = 3;
	PlayerHarvestID[playerid] = -1;
    ClearAnimations(playerid, 1);
    PlayerHarvestTimer[playerid] = 0;
	PlantInfo[_plntID][plantGived]--;
    PlantInfo[_plntID][plantHarvestedProcess] = 0;
    SetPlayerAttachedObject(playerid, 6, 1271, 17, -0.021000, 0.429000, -0.017999, -2.499999, 7.999998, 0.000000, 0.499999, 0.528999, 0.956000, 0, 0);
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	SendInfo(playerid, "Отнесите урожай на {7396FB}склад виноградника");
	TogglePlayerDynamicCP(playerid, WineCP, true);
	return 1;
}
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	new string[500];
	new team = GetTeamID(playerid);
	if(areaid == RingCP[1]) return Dialog_Open(playerid,188,0,"{43CD80}Покупка колец","\n\n\\c{ffffff}Вы хотите приобрести\n\\cобручальные кольца?\n\\cСтоимость которых 5 000$","Принять","Отклонить");
	if(InJob[playerid] == 1 && PlayerInfo[playerid][pJob] == 24){
		for(new i; i < 28; i++){
			if(!IsPlayerInDynamicArea(playerid, MinerInfo[i][1]))continue;
			switch(i){
			case 0..8:{
					if(PlayerInfo[playerid][Miner_Skill] < 9000)return SendError(playerid, "Ваш навык шахтёра недостаточно высок для добычи алмазов");
					SetPVarInt(playerid, "MineType", 3);
				}
			case 9..19:SetPVarInt(playerid, "MineType", 1);
			case 20..27:{
					if(PlayerInfo[playerid][Miner_Skill] < 4000)return SendError(playerid, "Ваш навык шахтёра недостаточно высок для добычи золота");
					SetPVarInt(playerid, "MineType", 2);
				}
			}
			StartMinerGame(playerid);
			channelfarm[playerid] = i;
			return 1;
		}
	}
	foreach(new plantid : TotalPlants)
	{
        if(areaid == PlantInfo[plantid][plantHarvestCP][1])
		{
			if(PlayerInfo[playerid][pJob]!= 22)return SendError(playerid,"Вы здесь не работаете");
			if(InJob[playerid] == 3 || !InJob[playerid]) return 1;
			if(GetPVarInt(playerid,"WinePlant"))return SendError(playerid, "Саначала посадите то растение, которое в руках");
			PlantInfo[plantid][plantHarvestedProcess] = playerid + 1;
        	ApplyAnimation(playerid,"BSKTBALL","BBALL_def_jump_shot", 4.1, 1, 1, 1, 1, 0, 1);
			PlayerHarvestID[playerid] = plantid;
			PlayerHarvestTimer[playerid] = SetTimerEx("OnPlayerFinishHarvest", 20*1000, 0, "i", playerid);
			SendInfo(playerid, "Вы начали сбор урожая");
			return 1;
        }
	}
	for(new i; i <= Allpod; i++)
	{
		if(areaid == PodeezdInfo[i][pSquare][1]) 
		{ 
			SetPVarInt(playerid, "podeezd", i); 
			new str[64], varv[610];
			for(new f = 1; f <= PodeezdInfo[GetPVarInt(playerid, "podeezd")][podEtazi]; f++) 
			{ 
				format(str, sizeof str, "{ff4400}[%d]{ffffff} %d этаж\n", f, f); 
				strcat(varv,str); 
			} 
			return ShowPlayerDialogEx(playerid, 8011, 2, "{43CD80}Подъезд", varv, "Подняться", "Отмена");
		}
		if(areaid == PodeezdInfo[i][eSquare][1]) 
		{ 
			if(!GetPVarInt(playerid, "podeezd"))break;
			J_SetPlayerPos(playerid, PodeezdInfo[GetPVarInt(playerid, "podeezd")][podPic][0],PodeezdInfo[GetPVarInt(playerid, "podeezd")][podPic][1],PodeezdInfo[GetPVarInt(playerid, "podeezd")][podPic][2]); 
			SetPlayerInterior(playerid,0); 
			SetPlayerVirtualWorld(playerid,0); 
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid, "podeezd");
			return 1;
		}
	}
	for(new i; i < 4; i++)
	{
		if(areaid == BonesArea[i])
		{
			SetPVarInt(playerid,"BonesTable",i+1);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~USE~p~ ~k~~SNEAK_ABOUT~", 2000, 3);
			return 1;
		}
		if(areaid == RoulArea[i])
		{
			SetPVarInt(playerid,"RoulTable",i+1);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~USE~p~ ~k~~SNEAK_ABOUT~", 2000, 3);
			return 1;
		}
	}
	for(new i; i < MAX_FOOL; i++){
		if(areaid == FoolInfo[i][foolArea])
		{
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~USE~p~ ~k~~SNEAK_ABOUT~", 2000, 3);
			return 1;
		}
	}
	//if(areaid == PlayerRoute[playerid][GPS_Polygon])return PlayerRoute[playerid][IsInGPS_Polygon] = true;
	if(areaid == FactoryCP[0][1])
	{
		if(PlayerInfo[playerid][pJob] != 23)return SendError(playerid,"Вы здесь не работаете");
		if(!InJob[playerid])return SendError(playerid,"Сначала нужно переодеться");
		if(InJob[playerid] != 2)return SendError(playerid,"Сначала возьмите сырьё");
	    RemovePlayerAttachedObject(playerid, 6);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		if(ChanStatus)return 1;
		ferman[playerid]++;
		InJob[playerid] = 1;
		static _fmt_message[] = "Вы доставили сырьё. Заработано {7396FB}$%d";
     	new _message[sizeof(_fmt_message) + (6 - 4) + 2*(6 - 4)];
     	format(_message, sizeof(_message), _fmt_message, ferman[playerid]*GLS[4]);
		SendInfo(playerid, _message);
		GiveMoney(playerid, GLS[4]);
		ChanBalance += 5;
		format(string, sizeof(string), "{D94141}Котёл для варки\n\n{C9EAFF}Ожидает заполнения\n{43CD80}Загружено: %d/1000",ChanBalance);
		UpdateDynamic3DTextLabelText(ChanText, -1, string);
		InJob[playerid] = 1;
		GiveBizMoney(BIZ_ELECTRO_LS,12);
		if(ChanBalance == 1000)
		{
			ChanStatus++;
			ChanTime = 90;
			format(string, sizeof(string), "{D94141}Котёл для варки\n\n{C9EAFF}Процесс приготовления\n» %s «\n{43CD80}Загружено: %d/1000",Convert(ChanTime),ChanBalance);
			UpdateDynamic3DTextLabelText(ChanText, -1, string);
		}
	    return 1;
	}
	else if(areaid == TirEnter[1])return ShowPlayerDialogEx(playerid, 7974, 2, "Выбор зала","{FFCB8C}Зал №1\n{FF9900}Зал №2\n{FF4400}Зал №3", "Выбрать", "Отмена");
	else if(areaid == MatsDel_CP[1])return ShowFactoryDialog(playerid);
	else if(areaid == DownCP[1]){
		if(!GetPVarInt(playerid, "MineDobito"))return SendError(playerid, "Вы ещё ничего не добыли");
		switch(GetPVarInt(playerid, "MineType")){
		case 1:{
				FactoryInfo[fMaterials] += GetPVarInt(playerid, "MineDobito");
				GiveMoney(playerid, 200);
				SetPVarInt(playerid, "MineZarabotano", GetPVarInt(playerid, "MineZarabotano")+200);
			}
		case 2:{
				FactoryInfo[fAurum] += GetPVarInt(playerid, "MineDobito");
				GiveMoney(playerid, 320);
				SetPVarInt(playerid, "MineZarabotano", GetPVarInt(playerid, "MineZarabotano")+320);
			}
		case 3:{
				FactoryInfo[fDiamonds] += GetPVarInt(playerid, "MineDobito");
				GiveMoney(playerid, 460);
				SetPVarInt(playerid, "MineZarabotano", GetPVarInt(playerid, "MineZarabotano")+460);
			}
		}
		ClearAnim(playerid);
		ferman[playerid] += GetPVarInt(playerid, "MineDobito");
		PlayerInfo[playerid][Miner_Skill] += GetPVarInt(playerid, "MineDobito");
		if(QuestProgress[playerid][1] < QI[1][LastProgress] && AcceptQuest[playerid][1] == 1)QuestProgress[playerid][1] += GetPVarInt(playerid, "MineDobito");
		if(QuestProgress[playerid][1] >= QI[1][LastProgress] && QuestProgress[playerid][1] < 10000){
			GiveMoney(playerid, 200000, "Бонус квеста шахтёра");
			SendInfo(playerid, "Вы получили бонус за выполнение квеста {7396FB}'Сколотил состояние...'");
			QuestProgress[playerid][1] = 10000;
			SaveQuest(playerid, 1);
			new logtime[3],logdate[3],logtimestring[16];
			getdate(logdate[2],logdate[1],logdate[0]);
			gettime(logtime[0],logtime[1],logtime[2]);
			f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
			WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Бонус за квест шахтёра",200000,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		}
		f(string, "Всего добыто {ff9900}%d кг {ffffff}сырья. Заработано {ff9900}$%d", ferman[playerid], GetPVarInt(playerid, "MineZarabotano"));
		SendClientMessage(playerid, -1, string);
		f(string, "Текущий навык шахтёра: {ff9900}%d (+%d)", PlayerInfo[playerid][Miner_Skill], GetPVarInt(playerid, "MineDobito"));
		SendClientMessage(playerid, -1, string);
		ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		if(IsPlayerAttachedObjectSlotUsed(playerid,6)) RemovePlayerAttachedObject(playerid,6);
        if(IsPlayerAttachedObjectSlotUsed(playerid,7)) RemovePlayerAttachedObject(playerid,7);
		DeletePVar(playerid, "MineType");
		DeletePVar(playerid, "MineDobito");
		InJob[playerid] = 1;
		UpdateFactory();
		return 1;
	}
	else if(areaid == FactoryCP[1][1])
	{
		if(PlayerInfo[playerid][pJob] != 23)return SendError(playerid,"Вы здесь не работаете");
		if(!InJob[playerid])return SendError(playerid,"Сначала нужно переодеться");
		if(InJob[playerid] != 1)return SendError(playerid,"Сначала завершите то, что начали");
		if(ChanStatus)return SendError(playerid,"Котёл уже загружен");
		if(GLS[70] < 5)return SendError(playerid,"Склад фабрики пуст. Отправляйтесь на виноградное поле");
	    SetPlayerAttachedObject(playerid, 6, 1271, 17, -0.021000, 0.429000, -0.017999, -2.499999, 7.999998, 0.000000, 0.499999, 0.528999, 0.956000, 0, 0);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
		InJob[playerid] = 2;
		GLS[70] -= 5;
		format(string, sizeof(string), "Склад виноградника\n\n\n{D94141}%d{FFFFFF} килограмм урожая\n\n{D38A37}Сырьё для изготовления",GLS[70]);
		UpdateDynamic3DTextLabelText(WineText[0], -1, string);
		UpdateDynamic3DTextLabelText(WineText[1], -1, string);
		SendInfo(playerid, "Отнесите сырьё в {7396FB}котёл");
	    return 1;
	}
	else if(areaid == PaintArea[0][1]) 
    { 
        if(paintt[1] == 0) return SendError(playerid,"В данное время регистрация на соревнование закрыта"); 
        if(GetPVarInt(playerid, "napeinte") == 1)return SendError(playerid, "Вы уже зарегистрировались на соревнование"); 
        SetPVarInt(playerid, "napeinte", 1); 
        paintt[2]++; 
        format(string,sizeof(string), "Вы зарегистрировались на матч под номером: {FFFFFF}%d", paintt[2]); 
        SendClientMessage(playerid,COLOR_LIGHTGREEN,string); 
        return 1; 
    }
	else if(areaid == PaintArea[1][1])
	{
		strcat(string,"\n\n");
		new strrr[128];
		for(new i = 0; i < PaintList; i++)
		{
			format(strrr, sizeof(strrr), "\\c{C9EAFF}%s | {FFFFFF}Убийств: {C9EAFF}%d | {FFFFFF}Смертей: {C9EAFF}%d\n",PaintInfo[i][pbName],PaintInfo[i][pbKills],PaintInfo[i][pbDeaths]);
			strcat(string, strrr);
		}
		if(strlen(string) > 1)Dialog_Open(playerid, 0, DIALOG_STYLE_MSGBOX, "Список участников", string, "Скрыть", ""); 
		else SendError(playerid,"Список участников пуст"); 
		return 1;
	}
	else if(areaid == AlkCP[0][1])return ShowPlayerDialogEx(playerid, 1482, 2, "Тюремные блоки", "{7396FB}[1] {ffffff}Блок №1\n{7396FB}[2] {ffffff}Блок №2\n{7396FB}[3] {ffffff}Блок №3\n{7396FB}[4] {ffffff}Блок №4\n{7396FB}[5] {ffffff}Блок №5", "Войти", "Отмена");
	else if(areaid == AlkCP[1][1])
	{
		new h; gettime(h);
		if((h < 7 || h > 20) && PlayerInfo[playerid][pJailTime]) return SendClientMessage(playerid, COLOR_ORANGE, "Покидать тюремный блок можно с 7:00 до 20:00");
		J_SetPlayerPos(playerid, -2299.7527,1806.9664,34.8059);
		SetPlayerFacingAngle(playerid, 128.0);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(areaid == AlkCP[2][1])
	{
		if(!GetPVarInt(playerid, "JailBreak"))return ToCheat(1, playerid);
		J_SetPlayerPos(playerid, -2257.6702,1854.5844,36.7470);
		SetPlayerFacingAngle(playerid, 0.0);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		SendClientMessage(playerid, COLOR_ORANGE, "Найдите поломанную лестницу и почините её, используя клей");
		PlayerInfo[playerid][AlkatrazObject] = CreatePlayerObject(playerid, 1437, -2299.91675, 1872.53296, 36.09450,   100.40000, 0.00000, 120.00000);
		PlayerInfo[playerid][AlkatrazText] = CreateDynamic3DTextLabel("Поломанная лестница\n{ff4400}Нажмите N", -1, -2298.37793, 1873.42346, 36.11070, 10.0);
		return 1;
	}
	else if(areaid == FactoryCP[2][1])
	{
		if(PlayerInfo[playerid][pJob] != 23)return SendError(playerid,"Вы здесь не работаете");
		if(!InJob[playerid])return SendError(playerid,"Сначала нужно переодеться");
		if(InJob[playerid] != 3)return SendError(playerid,"Сначала возьмите ящик");
	    RemovePlayerAttachedObject(playerid, 6);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		InJob[playerid] = 1;
		ferman[playerid]++;
		static _fmt_message[] = "Вы доставили продукцию. Заработано {7396FB}$%d";
     	new _message[sizeof(_fmt_message) + (6 - 4) + 2*(6 - 4)];
     	format(_message, sizeof(_message), _fmt_message, ferman[playerid]*GLS[4]);
		SendInfo(playerid, _message);
		GiveMoney(playerid, GLS[4]);
	    return 1;
	}
	for(new i; i < 4; i++)
	{
		if(areaid == BoxCP[i][1])
		{
			if(PlayerInfo[playerid][pJob] != 23)return SendError(playerid,"Вы здесь не работаете");
			if(!InJob[playerid])return SendError(playerid,"Сначала нужно переодеться");
			if(InJob[playerid] != 1)return SendError(playerid,"Сначала завершите то, что начали");
			if(!FactoryTimer)return SendError(playerid,"Продукция ещё не готова");
			SetPlayerAttachedObject(playerid, 6, 1271, 17, -0.021000, 0.429000, -0.017999, -2.499999, 7.999998, 0.000000, 0.499999, 0.528999, 0.956000, 0, 0);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
			InJob[playerid] = 3;
			SendInfo(playerid, "Отнесите продукцию на {7396FB}склад");
			return 1;
		}
	}
	if(areaid == NomerCP[1])
	{
	    if(GetPlayerState(playerid)==2)
	    {
			if(IsPlayerInAnyVehicle(playerid))ShowPlayerDialogEx(playerid,8658,2,"{43CD80}Выберите действие","- Установить зарегистрированный номер [{3F93E6}$1000{FFFFFF}]\n- Изменить цвет номера [{3F93E6}$10 000{FFFFFF}]\n- Отремонтировать машину [{3F93E6}$500{FFFFFF}]","Принять","Отмена");
			else SendError(playerid,"Вы должны находиться в транспорте");
		}
	}
 	else if(areaid == Dorm_CP[team][1])
	{
		if(!IsPlayerInRangeOfPoint(playerid,20,DormPos[team][0],DormPos[team][1],DormPos[team][2]))return 1;
		new hour,minuite,second;
		gettime(hour,minuite,second);
		if(OrgInfo[team][oOb4ak]==1)return SendError(playerid,"Склад вашей организации закрыт");
		if(hour < 6 || hour > 23) return SendError(playerid,"Общак закрыт с 23.00 до 6 утра");
		if(PlayerInfo[playerid][pRank] < 3)return SendError(playerid, "Взять оружие можно с 3 ранга");
		new drs[80];
		f(drs, "На складе: %d материалов", FractionValue[team][0]);
		ShowPlayerDialogEx(playerid, 1480, 5, drs, "Оружие\tПатроны\tМатериалы\n\
						Desert Eagle\t{C9EAFF}14 патронов\t{D94141}42 материала\n\
						ShotGun\t{C9EAFF}10 патронов\t{D94141}30 материалов\n\
						MP5\t{C9EAFF}60 патронов\t{D94141}120 материалов\n\
						AK-47\t{C9EAFF}60 патронов\t{D94141}120 материалов\n\
						M4A1\t{C9EAFF}100 патронов\t{D94141}300 материалов\n\
						Sniper Rifle\t{C9EAFF}10 патронов\t{D94141}50 материалов", "Взять", "Отмена"); 
		return 1;
	}
	else if(areaid == BuyGun_CP[1])
	{
	    new biz = BizEntered[playerid];
		if(PlayerInfo[playerid][pGunLic] == YES_LICENSE)
		{
			if(biz != -1)
			{
			    if(BuyGuns[playerid] == -1)
	  			{
					PlayerTextDrawShow(playerid, InfoText[playerid]);
					SetPlayerFacingAngle(playerid, 180.0);
					J_SetPlayerPos(playerid, 295.1638,-37.8457,1001.5156);
					new gunid = BuyGunInfo[0][bgGunid];
					new model = GetWeaponModel(gunid);
					new price;
					price = BuyGunInfo[0][bgPrice];
					format(string, sizeof(string), "~w~Name: %s~n~Ammo: %d~n~Cost: $%d", WeaponNames[gunid], BuyGunInfo[0][bgAmmo][0], price);
					PlayerTextDrawSetString(playerid, InfoText[playerid], string);
					DestroyPlayerObject(playerid, TempBGObject[playerid]);
					BuyGuns[playerid] = 0;
					BuyGunAmmo[playerid] = 0;
	                TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, GUN_ROT);
                    SetBuyGunCamera(playerid);
                    for(new i; i < sizeof ActionMenu; i++)
						TextDrawShowForPlayer(playerid, ActionMenu[i]);
					SelectTextDraw(playerid, 0xFFFFFFAA);
				}
				else SendError(playerid,"Вы уже покупаете оружие");
			}
			else SendError(playerid,"Вы ни в 1 из бизнесов");
		}
		else SendBotMessage(playerid,"Нееет! Я не продам пушку человеку без лицензии");
	}
	else if(areaid == CarPound_CP[0][1] || areaid == CarPound_CP[1][1])
	{
		new str[120],cars;
  		foreach(OWNABLECARS, i)
		{
			new carid = OwnableCar[i];
			if(IsPlayerHaveCar(playerid, carid))
			{
				if(CarInfo[i][cShtraf] > 0)
				{
					strcat(string,"{FFFFFF}");
					ShowCar[playerid][cars] = carid;
					format(str,sizeof(str),"%s(%d)\n",VehicleName[GetVehicleModelEx(carid)-400],carid);
					strcat(string,str);
					cars ++;
					if(cars > 0) ShowPlayerDialogEx(playerid,171,2,"{43CD80}Мой транспорт",string,"Выбор","Отмена");
				}
			}
		}
		if(cars==0)return SendError(playerid,"У вас нет личного транспорта");
		return true;
	}
	else if(areaid == Zek_CP[1]) return ShowPlayerDialogEx(playerid,107,2,"{43CD80}Выберите пункт","Список заключенных\nСписок разыскиваемых","Выбор","Отмена");
	else if(areaid >= Eatery_CP[0][1] && areaid <= Eatery_CP[MAX_EATCP-1][1])
	{
	    if(BizEntered[playerid]!=-1) ShowPlayerDialogEx(playerid,2761,2,"","{42B02C}-{FFFFFF} Покушать на месте\n{42B02C}-{FFFFFF} Купить в дом","Принять","Отмена");
	    else ShowPlayerDialogEx(playerid,185,2,"{43CD80}Выберите еду","{42B02C}-{FFFFFF} Картофель-Фри \t\t220$\n{42B02C}-{FFFFFF} Сэндвич \t\t\t260$\n{42B02C}-{FFFFFF} Баскет \t\t\t300$\n{42B02C}-{FFFFFF} Крылышки \t\t\t340$\n{42B02C}-{FFFFFF} Салат \t\t\t380$\n{42B02C}-{FFFFFF} Курица \t\t\t420$\n{42B02C}-{FFFFFF} Комплексный Обед \t\t700$","Выбор","Отмена");
		return 1;
	}
	else if(areaid >= GovPic[0] && areaid <= GovPic[sizeof(GovPic)-1])
	{
		ShowGovInfo(playerid);
		return true;
	}
	else
	{
		if(!Fishing[playerid])
		{
			for(new i;i < sizeof(FishZone);i ++)
			{
		   		if(areaid == Fish_CP[i][1]) return Dialog_Open(playerid,212,0,"{43CD80}Место для рыбалки","\n\n\\c{FFFFFF}Вы действительно хотите порыбачить?\n\\cДля рыболовли вам необходима удочка, которую можно приобрести в любом 24/7\n\\cи наживка для рыбалки, ее так же можно там купить.\n\\cРыбу можно продать в магазин\n\n","да","Нет");
			}
		}
		if(PlayerTir[playerid] == -1)
		{
			for(new i;i < sizeof(TirInfo);i ++)
			{
			    if(areaid == Tir_CP[i][1])
					if(!TirBusy[i])return ShowTirTutDialog(playerid, i);
			}
		}
	    new forcount = MuchNumber( OWNABLEHOUSES, OWNABLEBIZES);
	    for(new i; i < forcount; i ++)
	    {
			if(i < MAX_TUNING && areaid == TuningCP[i][1])
			{
				InfoSTO[playerid] = i;
			    new IS_BIZZ_SELLING = GetString(TuningInfo[i][stoOwner], "None");
				format(string, sizeof(string), "Car service %i", TuningInfo[i][stoID]);
				PlayerTextDrawSetString(playerid, maininfo[playerid][2], string);
				if(IS_BIZZ_SELLING) PlayerTextDrawSetString(playerid, maininfo[playerid][5], "~p~Car service is selling");
				else
				{
					format(string, sizeof(string), "Owner: ~p~%s", TuningInfo[i][stoOwner]);
					PlayerTextDrawSetString(playerid, maininfo[playerid][5], string);
				}
				PlayerTextDrawSetString(playerid, maininfo[playerid][4], "Price: ~p~$2000000");
				format(string, sizeof(string), "Days: %d/30", TuningInfo[i][stoOplata]);
				PlayerTextDrawSetString(playerid, maininfo[playerid][3], string);
				PlayerTextDrawSetString(playerid, maininfo[playerid][6], "Tax: ~p~$10000");
				PlayerTextDrawSetString(playerid, maininfo[playerid][7], "~p~PRESS ~w~~k~~CONVERSATION_NO~~p~ TO BUY");
				new tax = (IS_BIZZ_SELLING) ? 8 : 7;
				for(new t; t < tax; t ++)
					PlayerTextDrawShow(playerid, maininfo[playerid][t]);
				return true;
			}
			if(i < OWNABLEBIZES && areaid == BizCP[i][1])
			{
			    new Open[10];
				InfoBiz[playerid] = i;
			    new IS_BIZZ_SELLING = GetString(BizInfo[i][bOwner], "The State");
			    new NOT_ENTER_BIZZ = IsNoEnterBiz(i);
				if(BizInfo[i][bLock] || NOT_ENTER_BIZZ) Open = "~p~Close";
				else Open = "~p~Open";
				format(string, sizeof(string), "Business %i", i);
				PlayerTextDrawSetString(playerid, maininfo[playerid][2], string);
				if(IS_BIZZ_SELLING) PlayerTextDrawSetString(playerid, maininfo[playerid][5], "~p~Business is selling");
				else
				{
					format(string, sizeof(string), "Owner: ~p~%s", BizInfo[i][bOwner]);
					PlayerTextDrawSetString(playerid, maininfo[playerid][5], string);
				}
				format(string, sizeof(string), "Price: ~p~$%d", BizInfo[i][bCost]);
				PlayerTextDrawSetString(playerid, maininfo[playerid][4], string);
				format(string, sizeof(string), "Status: %s", Open);
				PlayerTextDrawSetString(playerid, maininfo[playerid][3], string);
				format(string, sizeof(string), "Tax: ~p~$%d", BizInfo[i][bLevel]);
				PlayerTextDrawSetString(playerid, maininfo[playerid][6], string);
				for(new t; t < 8; t ++)
					PlayerTextDrawShow(playerid, maininfo[playerid][t]);
				if(IS_BIZZ_SELLING)PlayerTextDrawSetString(playerid, maininfo[playerid][7], "~p~PRESS ~w~~k~~CONVERSATION_NO~~p~ TO BUY");
				else if(!BizInfo[i][bLock] && !NOT_ENTER_BIZZ)PlayerTextDrawSetString(playerid, maininfo[playerid][7], "~p~PRESS ~w~~k~~SNEAK_ABOUT~~p~ TO ENTER");
				return true;
			}
			if(i < OWNABLEHOUSES && areaid == HouseCP[i][1])
            {
			 	if(HouseNalogState2[playerid] == 1 && HouseNalog[playerid] == i)
				{
				    HouseNalogState2[playerid] = 2;
				    HouseInfo[i][hNalog] += HouseInfo[i][hNalog2];
				    HouseInfo[i][hNalog2] = 0;
					format(string,sizeof(string),"Вы оставили чек на оплату комунальных услуг.\nОтправляйтесь в офис для получения зарплаты",HouseInfo[i][hCost]);
				    ShowPlayerDialogEx(playerid,0,0,"{43CD80}Налоговая",string,"Скрыть", "");
				    EnableGPSForPlayer(playerid,1530.8496,-1072.0752,25.0625);
				}
                new Open[10];
			    new IS_HOUSE_SELLING = GetString(HouseInfo[i][hOwner], "The State");
			    new s = GetHouseStyle(i);
				InfoHouse[playerid] = i;
				if(!HouseInfo[i][hLock]) Open = "~p~Open";
				else Open = "~p~Close";
				format(string, sizeof(string), "House %i", i);
				PlayerTextDrawSetString(playerid, maininfo[playerid][2], string);
				if(IS_HOUSE_SELLING)PlayerTextDrawSetString(playerid, maininfo[playerid][5], "~p~House is selling");
				else
				{
					format(string, sizeof(string), "Owner: ~p~%s", HouseInfo[i][hOwner]);
					PlayerTextDrawSetString(playerid, maininfo[playerid][5], string);
				}
				format(string, sizeof(string), "Price: ~p~$%d", HouseInfo[i][hCost]);
				PlayerTextDrawSetString(playerid, maininfo[playerid][4], string);
				format(string, sizeof(string), "Rooms: ~p~%d", HouseRooms[s]);
				PlayerTextDrawSetString(playerid, maininfo[playerid][6], string);
				format(string, sizeof(string), "Status: %s", Open);
				PlayerTextDrawSetString(playerid, maininfo[playerid][3], string);
				if(IS_HOUSE_SELLING)PlayerTextDrawSetString(playerid, maininfo[playerid][7], "~p~PRESS ~w~~k~~CONVERSATION_NO~~p~ TO BUY");
				else if(!HouseInfo[i][hLock])PlayerTextDrawSetString(playerid, maininfo[playerid][7], "~p~PRESS ~w~~k~~SNEAK_ABOUT~~p~ TO ENTER");
				for(new t; t < 8; t ++)
					PlayerTextDrawShow(playerid, maininfo[playerid][t]);
                return true;
		    }
		}
	}
	foreach(Player, i)
	{
		if(areaid == PlayerBBOX[i] && !GetPVarInt(playerid, "BBOX"))
		{
			PlayAudioStreamForPlayer(playerid, PlayerSound[i]);
			return 1;
		}
		if(areaid == RadarInfo[i][rArea] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(floatround(SpeedVehicle(playerid)) > RadarInfo[i][rSpeed])
			{
				new ticket = (floatround(SpeedVehicle(playerid)) - RadarInfo[i][rSpeed])*50;
				PlayerInfo[playerid][pCredit] += ticket;
				GiveMoney(i, 200);
				f(string, "[Радар] %s[%d] нарушил ПДД, превысив скорость на %d км/ч (Ограничение: %d км/ч) | Штраф: $%d",Name(playerid),playerid,floatround(SpeedVehicle(playerid)) - RadarInfo[i][rSpeed],RadarInfo[i][rSpeed],ticket);
				SendClientMessage(i, COLOR_LIGHTRED, string);
				f(string, "~y~Speed radar~n~~n~~w~Your speed:~r~%d km/h~n~~w~Speed limit: ~r~%d km/h~n~~w~Ticket: ~r~$%d",SpeedVehicle(playerid),RadarInfo[i][rSpeed],ticket);
				GameTextForPlayer(playerid, string, 3000, 3);
				OrgInfo[GLS[13]][oBank] += ticket;
				return 1;
			}
		}
	}
	return true;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	new house = InfoHouse[playerid];
	new biz = InfoBiz[playerid];
	new sto = InfoSTO[playerid];
	if(house != -1 && areaid == HouseCP[house][1])
	{
		for(new i; i < 8; i ++)
			PlayerTextDrawHide(playerid, maininfo[playerid][i]);
	}
	else if(biz != -1 && areaid == BizCP[biz][1])
	{
		for(new i; i < 8; i ++)
			PlayerTextDrawHide(playerid, maininfo[playerid][i]);
	}
	else if(sto != -1 && areaid == TuningCP[sto][1])
	{
		for(new i; i < 8; i ++)
			PlayerTextDrawHide(playerid, maininfo[playerid][i]);
	}
	for(new i; i < 4; i++)
	{
		if(areaid == BonesArea[i])
		{
			if(GetPVarInt(playerid,"showedbonesmenu"))return HideBonesMenu(playerid);
		}
		else if(areaid == RoulArea[i])
		{
			if(GetPVarInt(playerid,"showedroulmenu"))return HideRoulMenu(playerid);
			if(GetPVarInt(playerid,"RoulTable"))DeletePVar(playerid,"RoulTable");
		}
	}
	for(new i; i < MAX_FOOL; i++)
	{
		if(areaid == FoolInfo[i][foolArea])
			if(GetPVarInt(playerid,"showedfool"))return HideFoolMenu(playerid);
	}
	if(PlayerHarvestID[playerid] >= 0)
	{
		if(areaid == PlantInfo[PlayerHarvestID[playerid]][plantHarvestCP][1])
		{
		    SendError(playerid, "Вы отменили сбор урожая");
		    PlantInfo[PlayerHarvestID[playerid]][plantHarvestedProcess] = 0;
			ClearAnimations(playerid, 1);
			PlayerHarvestID[playerid] = -1;
			KillTimer(PlayerHarvestTimer[playerid]);
			PlayerHarvestTimer[playerid] = 0;
			return 1;
		}
	}
	if(areaid == newbiearea && GetPlayerVirtualWorld(playerid) > 0){
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	/*if(areaid == PlayerRoute[playerid][GPS_Polygon] && PlayerRoute[playerid][IsInGPS_Polygon]){
        if(!PlayerRoute[playerid][calculating]){
            new PlayerClosest = NearestPlayerNode(playerid);
            if(PlayerClosest != -1){
                if(CalculatePath(PlayerClosest, PlayerRoute[playerid][Destination], playerid, .CreatePolygon = true, .GrabNodePositions = true))
                {
                    DisableGPSForPlayer(playerid);
                    PlayerRoute[playerid][calculating] = true;
                }
            }
        }
        return PlayerRoute[playerid][IsInGPS_Polygon] = false;
    }*/
	for(new i;i < sizeof(TirInfo);i ++)
	{
		if(areaid == Tir_CP[i][1])
			if(PlayerTir[playerid] != -1)return CheckTir(playerid);
	}
	foreach(Player, i)
	{
		if(areaid == PlayerBBOX[i] && !GetPVarInt(playerid, "BBOX"))
		{
			StopAudioStreamForPlayer(playerid);
			return 1;
		}
	}
	return true;
}
public ReloadAllAnims(playerid)
{
    PreloadAnimLib(playerid,"BASEBALL");
   	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BD_FIRE");
   	PreloadAnimLib(playerid,"BOMBER");
   	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"COP_AMBIENT");
 	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"DAM_JUMP");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"HEIST9");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"PED");
	PreloadAnimLib(playerid,"RYDER");
   	PreloadAnimLib(playerid,"RAPPING");
   	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"SHOP");
   	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"SNM");
	PreloadAnimLib(playerid,"STRIP");
	PreloadAnimLib(playerid,"SUNBATHE");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"goggles");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"SPRAYCAN");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"POLICE");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"CRIB");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"KNIFE");
	PreloadAnimLib(playerid,"CHAINSAW");
	ClearAnims(playerid);
	spaned[playerid]=1;
	return true;
}

public OnPlayerSpawn(playerid)
{
	if(IsPlayerNPC(playerid))return 1;
    if(!IsPlayerLogged[playerid]) Kick(playerid);
	SettingSpawn(playerid);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	AntiCheatsOFF(playerid,3);
	if(GetPVarInt(playerid, "BBOX"))callcmd::bbox(playerid, "");
	SetPlayerSkills(playerid);
	DeletePVar(playerid, "Matspos_X");
	DeletePVar(playerid, "Matspos_Y");
	DeletePVar(playerid, "Matspos_Z");
	KillTimer(marktimer[playerid]);
	if(DisallowSpawn[playerid])
	{
		DisallowSpawn[playerid] = 0;
		TogglePlayerSpectating(playerid, 1);
		return 1;
	}
	if(Spectate[playerid])
	{
		Spectate[playerid] = 0;
		SetPlayerPos(playerid,SpecPlayer[playerid][0],SpecPlayer[playerid][1],SpecPlayer[playerid][2]);
		SetPlayerInterior(playerid,SpecPlayerInt[playerid]);
		SetPlayerVirtualWorld(playerid,SpecPlayerWorld[playerid]);
		tm_FreezePlayer(playerid);
		SetPlayerFacingAngle(playerid, SpecPlayerAngle[playerid]);
		J_SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
		SetPlayerSkinEx(playerid,GetSkinOfPlayer(playerid));
		return 1;
	}
	PlayerInfo[playerid][pLastGun]=0;
	PlayerInfo[playerid][pLastAmmo]=0;
	for(new x; x < 13; x ++) _SetGun(playerid, PlayerInfo[playerid][pGuns][x], PlayerInfo[playerid][pAmmos][x]);
	PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
	StopAudioStreamForPlayer(playerid);
    if(!IsPlayerLogged[playerid])
	{
		J_Kick(playerid);
		return true;
	}
	CheckTir(playerid);
  	gunmute[playerid] = gettime()+5;
 	if(GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID) CheckPlayerGoCuff(GotoInfo[playerid][gtGoID]);
	if(GotoInfo[playerid][gtID]!=INVALID_PLAYER_ID)//жіза
	{
	    Cuffed[GotoInfo[playerid][gtID]] = false;
		CuffedTime[GotoInfo[playerid][gtID]] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnims(GotoInfo[playerid][gtID]);
     	SendClientMessage(GotoInfo[playerid][gtID],COLOR_GRAY,"Вы были отпущены из под конвоя");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	SpectatePlayer[playerid] = INVALID_PLAYER_ID;
	if(TempBGObject[playerid] != -1)
	{
	    DestroyPlayerObject(playerid, TempBGObject[playerid]);
	    TempBGObject[playerid] = -1;
	}
	SetPlayerWantedLevelEx(playerid, PlayerInfo[playerid][pWanted]);
	GangZoneHideForPlayer(playerid, HideMapZone);
	PlayerTextDrawHide(playerid, InfoText[playerid]);
	J_SetPlayerDrunkLevel(playerid, 0);
	PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
	ResetDynamicCPs(playerid);
	DisableAllRaceCPs(playerid);
	CheckPlayerGoCuff(playerid);
	CheckFuelDraws(playerid);
	PlayerInfo[playerid][pShowName]     = 1;
	KindFuel[playerid]          = -1;
	CountFuel[playerid]         = 0.0;
	DamageWarning[playerid] 	= 0;
	BuyGuns[playerid] 			= -1;
    HouseEntered[playerid] 		= -1;
	PlayerInfo[playerid][oInTir]= 0;
    BizEntered[playerid] 		= -1;
    Controllable[playerid] 		= true;
    Clother[playerid] 			= -1;
    Buyitem[playerid]			= -1;
	BuyInt[playerid] 			= -1;
	InJob[playerid] 			= 0;
	PlayerInfo[playerid][pBomb] = 0;
    Cuffed[playerid] 			= false;
    CuffedTime[playerid] 		= 0;
    CheckBreakCuff(playerid);
    SetFullness(playerid, Fullness[playerid]);
	SetCameraBehindPlayer(playerid);
	if(IsAtGang(playerid) || IsAtMafia(playerid))
	{
		SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
		TeamDuty[playerid] = true;
	}
	if(TeamDuty[playerid])SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	else if(PlayerInfo[playerid][pJailTime])SetPlayerColor(playerid,0xFF4400FF);
	else SetPlayerColor(playerid,0xEFEFF710);
	if(!PlayerInfo[playerid][pJailTime])SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
	UsingShield[playerid] = false;
 	if(IsANews(playerid)) _SetGun(playerid,43,200);
    PlayerSpawned[playerid] = true;
	tm_FreezePlayer(playerid);
	if(IsAtGang(playerid) && !PlayerInfo[playerid][pJailTime] && !PlayerInfo[playerid][pHeal])_SetGun(playerid, 5, 1);
    if(PlayerInfo[playerid][pMember]==TEAM_LCN && !PlayerInfo[playerid][pJailTime] && !PlayerInfo[playerid][pHeal])_SetGun(playerid, 2, 1);
    if(PlayerInfo[playerid][pMember]==TEAM_BIKERS && !PlayerInfo[playerid][pJailTime] && !PlayerInfo[playerid][pHeal])_SetGun(playerid, 7, 1);
    if(PlayerInfo[playerid][pMember]==TEAM_YAKUZA && !PlayerInfo[playerid][pJailTime] && !PlayerInfo[playerid][pHeal])_SetGun(playerid, 8, 1);
    if(PlayerInfo[playerid][pMember]==TEAM_RM && !PlayerInfo[playerid][pJailTime] && !PlayerInfo[playerid][pHeal])_SetGun(playerid, 15, 1);
	if(PlayerInfo[playerid][pExp] < 15)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2, 1774.8228,-1647.9200,20.1919))
			SetPlayerVirtualWorld(playerid, 1);
	}
	new tutmessage[516], stroka[128];
	strcat(tutmessage, "\n\n{C9EAFF}");
	if(SlotValue[playerid][1] != -1 && HouseInfo[SlotValue[playerid][1]][hNalog] > 30000)
	{
		PlayerInfo[playerid][pNeedMessage] = 1;
		f(stroka, "\\cЗадолженность по квартплате составляет $%d\n",HouseInfo[SlotValue[playerid][1]][hNalog]);
		strcat(tutmessage, stroka);
	}
	if(SlotValue[playerid][2] != -1 && kvartinfo[SlotValue[playerid][2]][kvPlata] < 2)
	{
		PlayerInfo[playerid][pNeedMessage] = 1;
		f(stroka, "\\cОплаченных дней проживания в квартире осталось %d/30\n",kvartinfo[SlotValue[playerid][2]][kvPlata]);
		strcat(tutmessage, stroka);
	}
	if(SlotValue[playerid][3] != -1 && BizInfo[SlotValue[playerid][3]][bLevel] > 80000)
	{
		PlayerInfo[playerid][pNeedMessage] = 1;
		f(stroka, "\\cНалог вашего предприятия составляет $%d\n",BizInfo[SlotValue[playerid][3]][bLevel]);
		strcat(tutmessage, stroka);
	}
	if(SlotValue[playerid][4] != -1 && TuningInfo[SlotValue[playerid][4]][stoOplata] < 2)
	{
		PlayerInfo[playerid][pNeedMessage] = 1;
		f(stroka, "\\cНалог за станцию технического обслуживания оплачен за %d/30 дней\n",TuningInfo[SlotValue[playerid][4]][stoOplata]);
		strcat(tutmessage, stroka);
	}
	if(PlayerInfo[playerid][pNeedMessage] == 1)
	{
		strcat(tutmessage, "\n\\c{D94141}Если вы не внесёте вовремя оплату по задолженностям, ваше имущество\n\\cбудет конфисковано в счёт государства\n\n");
		Dialog_Open(playerid, 0, 0, "{43CD80}Выписка",tutmessage, "Скрыть","");
		PlayerInfo[playerid][pNeedMessage] = 0;
	}
	if(PlayerInfo[playerid][pItems] && !GetPVarInt(playerid, "QuickItems"))ShowQuickItems(playerid);
	return true;
}
stock ShowQuickItems(playerid){
	SetPVarInt(playerid, "QuickItems", 1);
	QuickItems[playerid][0] = CreatePlayerTextDraw(playerid, 611.722229, 190.000000, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, QuickItems[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, QuickItems[playerid][0], 28.222236, 147.342224);
	PlayerTextDrawAlignment(playerid, QuickItems[playerid][0], 1);
	PlayerTextDrawColor(playerid, QuickItems[playerid][0], 0x22222299);
	PlayerTextDrawSetShadow(playerid, QuickItems[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, QuickItems[playerid][0], 0);
	PlayerTextDrawFont(playerid, QuickItems[playerid][0], 4);
	PlayerTextDrawSetPreviewModel(playerid, QuickItems[playerid][0], 0);
	PlayerTextDrawSetPreviewRot(playerid, QuickItems[playerid][0], 0.000000, 0.000000, 0.000000, 0.000000);
	PlayerTextDrawShow(playerid, QuickItems[playerid][0]);
	QuickItems[playerid][1] = CreatePlayerTextDraw(playerid, 613.500000, 191.500000, "item");
	PlayerTextDrawLetterSize(playerid, QuickItems[playerid][1], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, QuickItems[playerid][1], 25.000000, 25.000000);
	PlayerTextDrawAlignment(playerid, QuickItems[playerid][1], 1);
	PlayerTextDrawColor(playerid, QuickItems[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, QuickItems[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, QuickItems[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, QuickItems[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, QuickItems[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, QuickItems[playerid][1], -3437313);
	PlayerTextDrawFont(playerid, QuickItems[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid, QuickItems[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, QuickItems[playerid][1], true);
	PlayerTextDrawSetPreviewModel(playerid, QuickItems[playerid][1], (!PlayerInfo[playerid][pItem][0]) ? FREE_SLOT_OBJECT : ItemsInfo[PlayerInfo[playerid][pItem][0]][invObj]);
	PlayerTextDrawSetPreviewRot(playerid, QuickItems[playerid][1], USED_SLOT_FLOAT);
	PlayerTextDrawShow(playerid, QuickItems[playerid][1]);
	QuickItems[playerid][2] = CreatePlayerTextDraw(playerid, 613.500000, 218.000000, "item");
	PlayerTextDrawLetterSize(playerid, QuickItems[playerid][2], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, QuickItems[playerid][2], 25.000000, 25.000000);
	PlayerTextDrawAlignment(playerid, QuickItems[playerid][2], 1);
	PlayerTextDrawColor(playerid, QuickItems[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, QuickItems[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, QuickItems[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, QuickItems[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, QuickItems[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, QuickItems[playerid][2], -3437313);
	PlayerTextDrawFont(playerid, QuickItems[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, QuickItems[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, QuickItems[playerid][2], true);
	PlayerTextDrawSetPreviewModel(playerid, QuickItems[playerid][2], (!PlayerInfo[playerid][pItem][1]) ? FREE_SLOT_OBJECT : ItemsInfo[PlayerInfo[playerid][pItem][1]][invObj]);
	PlayerTextDrawSetPreviewRot(playerid, QuickItems[playerid][2], USED_SLOT_FLOAT);
	PlayerTextDrawShow(playerid, QuickItems[playerid][2]);
	QuickItems[playerid][3] = CreatePlayerTextDraw(playerid, 613.500000, 244.500000, "item");
	PlayerTextDrawLetterSize(playerid, QuickItems[playerid][3], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, QuickItems[playerid][3], 25.000000, 25.000000);
	PlayerTextDrawAlignment(playerid, QuickItems[playerid][3], 1);
	PlayerTextDrawColor(playerid, QuickItems[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, QuickItems[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, QuickItems[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, QuickItems[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, QuickItems[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, QuickItems[playerid][3], -3437313);
	PlayerTextDrawFont(playerid, QuickItems[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, QuickItems[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, QuickItems[playerid][3], true);
	PlayerTextDrawSetPreviewModel(playerid, QuickItems[playerid][3], (!PlayerInfo[playerid][pItem][2]) ? FREE_SLOT_OBJECT : ItemsInfo[PlayerInfo[playerid][pItem][2]][invObj]);
	PlayerTextDrawSetPreviewRot(playerid, QuickItems[playerid][3], USED_SLOT_FLOAT);
	PlayerTextDrawShow(playerid, QuickItems[playerid][3]);
	QuickItems[playerid][4] = CreatePlayerTextDraw(playerid, 613.500000, 271.000000, "item");
	PlayerTextDrawLetterSize(playerid, QuickItems[playerid][4], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, QuickItems[playerid][4], 25.000000, 25.000000);
	PlayerTextDrawAlignment(playerid, QuickItems[playerid][4], 1);
	PlayerTextDrawColor(playerid, QuickItems[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, QuickItems[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, QuickItems[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, QuickItems[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, QuickItems[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, QuickItems[playerid][4], -3437313);
	PlayerTextDrawFont(playerid, QuickItems[playerid][4], 5);
	PlayerTextDrawSetProportional(playerid, QuickItems[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, QuickItems[playerid][4], true);
	PlayerTextDrawSetPreviewModel(playerid, QuickItems[playerid][4], (!PlayerInfo[playerid][pItem][3]) ? FREE_SLOT_OBJECT : ItemsInfo[PlayerInfo[playerid][pItem][3]][invObj]);
	PlayerTextDrawSetPreviewRot(playerid, QuickItems[playerid][4], USED_SLOT_FLOAT);
	PlayerTextDrawShow(playerid, QuickItems[playerid][4]);
	QuickItems[playerid][5] = CreatePlayerTextDraw(playerid, 613.500000, 297.500000, "item");
	PlayerTextDrawLetterSize(playerid, QuickItems[playerid][5], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, QuickItems[playerid][5], 25.000000, 25.000000);
	PlayerTextDrawAlignment(playerid, QuickItems[playerid][5], 1);
	PlayerTextDrawColor(playerid, QuickItems[playerid][5], -1);
	PlayerTextDrawUseBox(playerid, QuickItems[playerid][5], true);
	PlayerTextDrawBoxColor(playerid, QuickItems[playerid][5], 0);
	PlayerTextDrawSetShadow(playerid, QuickItems[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, QuickItems[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, QuickItems[playerid][5], -3437313);
	PlayerTextDrawFont(playerid, QuickItems[playerid][5], 5);
	PlayerTextDrawSetProportional(playerid, QuickItems[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, QuickItems[playerid][5], true);
	PlayerTextDrawSetPreviewModel(playerid, QuickItems[playerid][5], (!PlayerInfo[playerid][pItem][4]) ? FREE_SLOT_OBJECT : ItemsInfo[PlayerInfo[playerid][pItem][4]][invObj]);
	PlayerTextDrawSetPreviewRot(playerid, QuickItems[playerid][5], USED_SLOT_FLOAT);
	PlayerTextDrawShow(playerid, QuickItems[playerid][5]);
	QuickItems[playerid][6] = CreatePlayerTextDraw(playerid, 615.555541, 324.302215, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, QuickItems[playerid][6], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, QuickItems[playerid][6], 20.666687, 0.746673);
	PlayerTextDrawAlignment(playerid, QuickItems[playerid][6], 1);
	PlayerTextDrawColor(playerid, QuickItems[playerid][6], -3437313);
	PlayerTextDrawSetShadow(playerid, QuickItems[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, QuickItems[playerid][6], 0);
	PlayerTextDrawFont(playerid, QuickItems[playerid][6], 4);
	PlayerTextDrawShow(playerid, QuickItems[playerid][6]);
	QuickItems[playerid][7] = CreatePlayerTextDraw(playerid, 626.000000, 327.500000, Translate(Language[30][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, QuickItems[playerid][7], 0.101111, 0.679111);
	PlayerTextDrawTextSize(playerid, QuickItems[playerid][7], 6.888890, 23.146667);
	PlayerTextDrawAlignment(playerid, QuickItems[playerid][7], 2);
	PlayerTextDrawColor(playerid, QuickItems[playerid][7], 255);
	PlayerTextDrawUseBox(playerid, QuickItems[playerid][7], true);
	PlayerTextDrawBoxColor(playerid, QuickItems[playerid][7], -3437313);
	PlayerTextDrawSetShadow(playerid, QuickItems[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, QuickItems[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, QuickItems[playerid][7], -3437313);
	PlayerTextDrawFont(playerid, QuickItems[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, QuickItems[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, QuickItems[playerid][7], true);
	PlayerTextDrawShow(playerid, QuickItems[playerid][7]);
	SendInfo(playerid,"Нажмите клавишу {7396FB}'N'{ffffff}, чтобы достать курсор и использовать меню быстрого доступа");
}
stock GetSkinOfPlayer(playerid)
{
	new skin;
	if(!GetTeamID(playerid)) skin = PlayerInfo[playerid][pSkin];
	else
	{
	    if(TeamDuty[playerid] || IsAtGang(playerid) || IsAtMafia(playerid)) skin = PlayerInfo[playerid][pFracSkin];
		else skin = PlayerInfo[playerid][pSkin];
	}
	return skin;
}
stock GetSkinForPlayer(playerid)
{
	new skin;
	skin = (PlayerInfo[playerid][pSex] == 2)?GOrgSkins[GetTeamID(playerid)][0]:MOrgSkins[GetTeamID(playerid)][0];
	return skin;
}
stock Float:floatrand(Float:maxrand)
{
	new rand = random(floatround(maxrand * 10.0)); //rand = 0 - 9
	return float(rand) / 10.0;
}
stock SettingSpawn(playerid)
{
    if(IsPlayerNPC(playerid)) return true;
    TogglePlayerControllable(playerid, true);
	J_SetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]);
	new skin = GetSkinOfPlayer(playerid);
 	if(PlayerInfo[playerid][pJailTime] > 0)
	{
		new check[6];
		foreach(Player, i)
		{
			if(PlayerInfo[i][pJailTime] < 120)continue;
			if(IsPlayerInRangeOfPoint(i, 100.0, -2220.2839,1817.5861,1058.9449))check[GetPlayerVirtualWorld(i)]++;
		}
		new world = FreeBlock(check[0],check[1],check[2],check[3],check[4]);
		new rand = random(33);
		SetPlayerVirtualWorld(playerid, world+1);
		SetSpawnInfoEx(playerid, (PlayerInfo[playerid][pSex] == 1) ? 42 : 69, AlkatrazToogle[rand][0]-2.0, AlkatrazToogle[rand][1]+2.2, AlkatrazToogle[rand][2], 270.0);
		SetPlayerInterior(playerid, 1);
		J_SetPlayerHealth(playerid,MAX_PLAYER_HEALTH(playerid));
		Dialog_Open(playerid, 0, 0, "Информация", "\n\n\\c{FF4400}Вы попали в тюрьму Алькатрас. Выбраться отсюда можно отсидев срок или совершив побег\n\n\\c{FFCB8C}Чтобы совершить побег, Вам нужно собрать определённые предметы, которые можно\n\\cнайти во дворе тюрьмы или в тюремных блоках. Предметы появляются каждый час и их очень сложно\n\\cнайти. Собрав комплект из отвёртки/вилки, маски и клея, вы сможете вскрыть решётку вентиляционной шахты\n\\cи выбраться на свободу. Желаем удачи!\n\n", "Скрыть","");
		return 1;
	}
	else if(PlayerInfo[playerid][pView]>0)
	{
		SetSpawnInfoEx(playerid, skin, 2200.0, 2500.0, 1489.0, 180.0);
		J_SetPlayerHealth(playerid,MAX_PLAYER_HEALTH(playerid));
		SetPlayerInterior(playerid, 6);
		SetPlayerVirtualWorld(playerid,6);
		return 1;
	}
 	else if(PlayerInfo[playerid][pHeal] > 0)//Если чувак спавниться в больничке
	{
	    if(!IsAArmy(playerid))//если чувак не в армии
	    {
	        switch(random(6))//spawn больнички
			{
				case 0: SetSpawnInfoEx(playerid, skin, 2276.9587,32.8418,1040.7554,359.5482);
				case 1: SetSpawnInfoEx(playerid, skin, 2274.3667,33.0627,1040.7603,359.5482);
				case 2: SetSpawnInfoEx(playerid, skin, 2275.1279,30.7880,1040.7554,359.5482);
				case 3: SetSpawnInfoEx(playerid, skin, 2276.7520,31.6683,1040.7554,359.5482);
				case 4: SetSpawnInfoEx(playerid, skin, 2278.8213,32.1249,1040.7554,359.5482);
				case 5: SetSpawnInfoEx(playerid, skin, 2279.7070,31.3714,1040.7554,89.9144);
			}
			switch(PlayerInfo[playerid][pCheepses])//spawn больнички
			{
			    case 1:
			    {
			        SetPlayerVirtualWorld(playerid, 1);
			    	SetPlayerInterior(playerid, 2);
			    }
			    case 2:
			    {
			        SetPlayerVirtualWorld(playerid, 2);
			    	SetPlayerInterior(playerid, 2);
			    }
			    default:
				{
				 	SetPlayerVirtualWorld(playerid, 3);
			    	SetPlayerInterior(playerid, 2);
				}
			}
        }
		else
		{
			SetSpawnInfoEx(playerid, skin, SpawnInfo[PlayerInfo[playerid][pMember]][0], SpawnInfo[PlayerInfo[playerid][pMember]][1], SpawnInfo[PlayerInfo[playerid][pMember]][2], SpawnInfo[PlayerInfo[playerid][pMember]][3]);
			SetPlayerVirtualWorld(playerid, 0);
  			SetPlayerInterior(playerid, 0);
			return 1;
		}
	    if(startlomka[playerid]==1)PlayerInfo[playerid][pOldRepl]=0;
	    return 1;
	}
	else if(GetPVarInt(playerid, "napeinte") == 2 && paintt[1] == 2) 
    { 
        _SetGun(playerid, PaintGun[random(sizeof(PaintGun))], 300); 
        new rand = random(sizeof(PaintballSpawns)); 
        SetSpawnInfoEx(playerid, skin, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2], (random(360)*1.0)); 
        SetPlayerInterior(playerid,0); 
        return 1; 
    }  
	else
	{
		if(GetPVarInt(playerid, "NewPlayer") == 1){
			switch(random(4)){
			case 0:
			{
				new rand = random(4);
				SetSpawnInfoEx(playerid, skin, randspawn[rand][0], randspawn[rand][1], randspawn[rand][2],180.0000);
				SetPlayerVirtualWorld(playerid, 1);
				return SetPlayerInterior(playerid, 0);
			}
			case 1:SetSpawnInfoEx(playerid, skin, 1142.4077,-1756.4156,13.6110,270.0);
			case 2:SetSpawnInfoEx(playerid, skin, 1754.3916,-1890.7527,13.5569,180.0);
			case 3:SetSpawnInfoEx(playerid, skin, 2230.7366,-1159.8866,25.8227,36.0507);
			}
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			DeletePVar(playerid, "NewPlayer");
			return 1;
		}
	    else if(PlayerInfo[playerid][pDCTime]==0 || (PlayerInfo[playerid][pDCTime]==4 && GetPVarInt(playerid,"DCSPAWNED")))
		{
		    if(PlayerInfo[playerid][pExp] < 15)
			{
				new rand = random(4);
				SetSpawnInfoEx(playerid, skin, randspawn[rand][0], randspawn[rand][1], randspawn[rand][2],180.0000);
				SetPlayerVirtualWorld(playerid, 1);
				return SetPlayerInterior(playerid, 0);
			}
			else if(PlayerInfo[playerid][pExp] >= 15 && PlayerInfo[playerid][pExp] < 70)
				SetSpawnInfoEx(playerid, skin, 2232.1931,-1159.4896,25.8906, 90.0);
			else if(PlayerInfo[playerid][pExp] >= 70 && PlayerInfo[playerid][pExp] < 150)
				SetSpawnInfoEx(playerid, skin, -1967.2679,115.1929,27.6875, 0.0);
			else if(PlayerInfo[playerid][pExp] >= 150)
				SetSpawnInfoEx(playerid, skin, 2850.0898,1290.9177,11.3906,90.0000);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			return 1;
		}
		else if(SlotValue[playerid][2] != -1 && PlayerInfo[playerid][pDCTime]==1) 
		{ 
			SetPVarInt(playerid, "podeezd", kvartinfo[SlotValue[playerid][2]][podeezd]); 
			SetSpawnInfoEx(playerid, skin, kvartinfo[SlotValue[playerid][2]][kvExit][0],kvartinfo[SlotValue[playerid][2]][kvExit][1],kvartinfo[SlotValue[playerid][2]][kvExit][2],0.0);
			SetPlayerInterior(playerid,11); 
			SetPlayerVirtualWorld(playerid, SlotValue[playerid][2]); 
			return 1;
		}
		else if(PlayerInfo[playerid][pDCTime]==2 && SlotValue[playerid][1] != -1)
		{
			if(GetString(HouseInfo[SlotValue[playerid][1]][hOwner],Name(playerid)))
			{
			    HouseEntered[playerid] = SlotValue[playerid][1];
				InfoHouse[playerid] = SlotValue[playerid][1];
				SetSpawnInfoEx(playerid, skin, HouseInfo[SlotValue[playerid][1]][hExit][0],HouseInfo[SlotValue[playerid][1]][hExit][1],HouseInfo[SlotValue[playerid][1]][hExit][2],0.0);
				SetPlayerInterior(playerid,HouseInfo[SlotValue[playerid][1]][hInt]);
				SetPlayerVirtualWorld(playerid,SlotValue[playerid][1]+50);
				return 1;
			}
			else
			{
				new s = GetHouseStyle(SlotValue[playerid][1]);
				for(new i;i < HouseRooms[s];i ++)
				{
					if(GetString(HRoomOwner[SlotValue[playerid][1]][i],Name(playerid)))
					{
					    HouseEntered[playerid] = SlotValue[playerid][1];
						SetSpawnInfoEx(playerid, skin, HouseInfo[SlotValue[playerid][1]][hExit][0],HouseInfo[SlotValue[playerid][1]][hExit][1],HouseInfo[SlotValue[playerid][1]][hExit][2],0.0);
						SetPlayerInterior(playerid,HouseInfo[SlotValue[playerid][1]][hInt]);
						SetPlayerVirtualWorld(playerid,SlotValue[playerid][1]+50);
						InfoHouse[playerid] = SlotValue[playerid][1];
						return 1;
					}
				}
			}
		}
		else if(PlayerInfo[playerid][pDCTime]==3 && GetTeamID(playerid) != 0)
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
			SetSpawnInfoEx(playerid, skin, SpawnInfo[PlayerInfo[playerid][pMember]][0], SpawnInfo[PlayerInfo[playerid][pMember]][1], SpawnInfo[PlayerInfo[playerid][pMember]][2], SpawnInfo[PlayerInfo[playerid][pMember]][3]);
			return 1;
		}
		else if(PlayerInfo[playerid][pDCTime]==4 && !GetPVarInt(playerid,"DCSPAWNED"))
		{
			new query[256];
			format(query, sizeof query,"SELECT `spawnx`,`spawny`,`spawnz`,`spawnvw`,`spawnint` FROM `accounts` WHERE `ID` = '%d'",PlayerInfo[playerid][pID]);
			new Cache:result = mysql_query(mysql, query);
			new Float:pos[3], other[2];
			pos[0] = cache_get_row_float(0, 0, mysql);
			pos[1] = cache_get_row_float(0, 1, mysql);
			pos[2] = cache_get_row_float(0, 2, mysql);
			other[0] = cache_get_field_content_int(0, "spawnvw", mysql);
			other[1] = cache_get_field_content_int(0, "spawnint", mysql);
		    SetPlayerInterior(playerid, other[1]);
			SetPlayerVirtualWorld(playerid, other[0]);
			SetPVarInt(playerid,"DCSPAWNED",1);
		    SetSpawnInfoEx(playerid, skin, pos[0],pos[1],pos[2],(random(360)*1.0));
			cache_delete(result, mysql);
			return 1;
		}
		else if(PlayerInfo[playerid][pDCTime]==5)
		{
		    SetPlayerInterior(playerid,1);
		    SetPlayerVirtualWorld(playerid,random(5)+1);
			SetSpawnInfoEx(playerid, skin, -2214.4011,1788.9244,1054.9576,270.0);
			return 1;
		}
		else if(PlayerInfo[playerid][pDCTime] >= 400)
		{
			for(new s = 5; s <= 9; s++){
				if(GetVehicleModelEx(SlotValue[playerid][s]) == PlayerInfo[playerid][pDCTime] && IsPlayerHaveCar(playerid, SlotValue[playerid][s])){
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(SlotValue[playerid][s]));
					SetSpawnInfoEx(playerid, skin, -2214.4011,1788.9244,1054.9576,270.0);
					if(IsABoat(SlotValue[playerid][s]))PutPlayerInVehicle(playerid, SlotValue[playerid][s], 0);
					else PutPlayerInVehicle(playerid, SlotValue[playerid][s], 1);
					return 1;
				}
			}
		}
	}
	SetSpawnInfoEx(playerid, skin, 167.5974,-109.2371,1.5501,272.6516);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	PlayerInfo[playerid][pDCTime] = 0;
	return true;
}
stock InStandartSpawn(playerid)
{
    new org = GetTeamID(playerid);
    J_SetPlayerFacingAngle(playerid,SpawnInfo[org][3]);
    SetPlayerInterior(playerid,SpawnIntWorld[org][0]);
    SetPlayerVirtualWorld(playerid,SpawnIntWorld[org][1]);
	return true;
}
stock CreateDeathTextDraw(playerid)
{
    if(DeathDraw[playerid] != PlayerText:-1) DestroyPlayerTD(playerid, DeathDraw[playerid]);
    DeathDraw[playerid] = CreatePlayerTextDraw(playerid,300,0,"New TextDraw");
    PlayerTextDrawUseBox(playerid, DeathDraw[playerid],1);
    PlayerTextDrawAlignment(playerid, DeathDraw[playerid],2);
    PlayerTextDrawSetOutline(playerid, DeathDraw[playerid],1);
	PlayerTextDrawLetterSize(playerid, DeathDraw[playerid],0.0,60.0);
	PlayerTextDrawSetProportional(playerid, DeathDraw[playerid],0);
	PlayerTextDrawTextSize(playerid, DeathDraw[playerid],-180.0,700.0);
	PlayerTextDrawBoxColor(playerid, DeathDraw[playerid],0x00000066);
	PlayerTextDrawFont(playerid, DeathDraw[playerid],3);
	return true;
}
stock UpdateCarInfo(vehicleid)
{
    if(IsAOwnableCar(vehicleid))
	{
		if(GetVehicleModelEx(vehicleid) == 437 || GetVehicleModelEx(vehicleid) == 508){
			new number = GetVehicleID(vehicleid);
			new string[200];
			if(IsASellCar(vehicleid)) format(string,sizeof(string),"\
			{56A85E}Дом на колёсах продаётся{FFFFFF}\n\n\
			Модель: {FFCB8C}%s [%d]{FFFFFF}\n\
			Стоимость: {FFCB8C}$%d", VehicleName[GetVehicleModelEx(vehicleid)-400],GetVehicleModelEx(vehicleid),CarInfo[number][cCost]);
			else format(string,sizeof(string)," ");
			UpdateDynamic3DTextLabelText(CarText[number],COLOR_WHITE,string);
		}else{
			new number = GetVehicleID(vehicleid);
			new string[200];
			if(IsASellCar(vehicleid)) format(string,sizeof(string),"\
			{7396FB}Транспорт продаётся{FFFFFF}\n\n\
			Модель: {C9EAFF}%s [%d]{FFFFFF}\n\
			Стоимость: {C9EAFF}$%d", VehicleName[GetVehicleModelEx(vehicleid)-400],GetVehicleModelEx(vehicleid),CarInfo[number][cCost]);
			else format(string,sizeof(string)," ");
			UpdateDynamic3DTextLabelText(CarText[number],COLOR_WHITE,string);
		}
	}
	return true;
}
stock DestroyDeathTextDraw(playerid)
{
	if(DeathDraw[playerid] != PlayerText:-1)
	{
	    PlayerTextDrawHide(playerid,DeathDraw[playerid]);
		DestroyPlayerTD(playerid, DeathDraw[playerid]);
		DeathDraw[playerid] = PlayerText:-1;
		return true;
	}
	return false;
}
stock ClearChatForPlayer(playerid)
{
	for(new i; i < 20; i ++)SendClientMessage(playerid, -1, " ");
	return true;
}
stock ClearChatToAll()
{
	for(new i; i < 20; i ++) SendClientMessageToAll(-1, " ");
	return true;
}
stock CheckBreakCuff(playerid)
{
	if(pTemp[playerid][BreakKey] != 0)
	{
	    pTemp[playerid][BreakKey] = 0;
	    pTemp[playerid][BreakTime] = 0;
	    pTemp[playerid][BreakCount] = 0;
	    HidePlayerActionText(playerid);
	    HidePlayerActionBand(playerid);
    }
    return true;
}
public OnPlayerDeath(playerid, killerid, reason)
{
    if(IsPlayerNPC(playerid))return 1;
    if(IsPlayerLogged[playerid])
    {
        if(!PlayerSpawned[playerid]) return false;
		DestroyPlayerObject(playerid, GetPVarInt(playerid, "speedo_object"));
		if(GetPVarInt(playerid, "BBOX"))callcmd::bbox(playerid, "");
		KillTimer(marktimer[playerid]);
		DeletePVar(playerid, "speedo_object");
		if(GetPVarInt(playerid,"showedbonesmenu"))HideBonesMenu(playerid);
		if(GetPVarInt(playerid,"showedfool"))HideFoolMenu(playerid);
		if(GetPVarInt(playerid,"showedroulmenu"))HideRoulMenu(playerid);
		if(GetPVarInt(playerid, "showedinv"))HideInventory(playerid);
		if(GetPVarInt(playerid, "showedtarget"))delmenutext(playerid);
		PlayerSpawned[playerid] = false;
		DeletePVar(playerid, "Matspos_X");
		DeletePVar(playerid, "Matspos_Y");
		DeletePVar(playerid, "Matspos_Z");
		if(GetPVarInt(playerid, "StoWaiting"))
		{
			new i = GetPVarInt(playerid, "StoWaiting")-1;
			new carid = GetPlayerVehicleID(playerid);
			SetVehiclePos(carid, TuningInfo[i][stoGarage][0], TuningInfo[i][stoGarage][1], TuningInfo[i][stoGarage][2]);
			SetVehicleZAngle(carid, TuningInfo[i][stoGarage][3]);
			SetVehicleVirtualWorld(carid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			TuningInfo[i][stoWait] = false;
		}
		if(GetPVarInt(playerid, "JailBreak"))
		{
			for(new z; z < sizeof AlkMenu; z++)
			{
				if(z <= 6)DestroyPlayerTD(playerid, AlkTD[playerid][z]);
				TextDrawHideForPlayer(playerid, AlkMenu[z]);
			}
			Dialog_Open(playerid, 0, 0, "", "\n\n\
			\\c{ff4400}Вы не успели покинуть территорию тюрьмы и были пойманы. Срок вашего заключения был увеличен\n\
			\\c{C9EAFF}Повторить побег можно будет через 2 часа при наличии необходимых предметов", "Скрыть", "");
			PlayerInfo[playerid][pJailTime] += 3600;
			PlayerInfo[playerid][pJB] = 1800;
			DeletePVar(playerid, "JailBreak");
		}
		if(PlayerInfo[playerid][pLastGun] > 0)
		{
		    if(!IsPlayerInAnyVehicle(playerid))
		    {//нычка
			    new Float:x, Float:y, Float:z,Float:eagle;
				GetPlayerPos(playerid, x, y, z);
				GetPlayerFAngle(playerid,eagle);
		        new idgun;
		        switch(PlayerInfo[playerid][pLastGun])
		        {
		            case 3:idgun=334;
		            case 4:idgun=335;
		            case 5:idgun=336;
					case 6:idgun=337;
					case 8:idgun=339;
					case 17:idgun=343;
					case 22:idgun=346;
					case 23:idgun=347;
					case 24:idgun=348;
					case 25:idgun=349;
					case 28:idgun=352;
					case 29:idgun=353;
					case 30:idgun=355;
					case 31:idgun=356;
					case 32:idgun=372;
					case 33:idgun=357;
					case 34:idgun=358;
					case 42:idgun=366;
					case 43:idgun=367;
					case 46:idgun=371;
					default:
					{
					    PlayerInfo[playerid][pLastGun]=0;
		 				PlayerInfo[playerid][pLastAmmo]=0;
					}
		        }
		        if(idgun>0)
		        {
			        new idobject=-1;
			        for(new i;i<MAX_DGUNS;i++)
				    {
				        if(dguns[i]==-1)
						{
				 			idobject=i;
					 		break;
						}
				    }
			        if(idobject==-1)
				    {
				        new min1=gettime();
				        for(new i;i<MAX_DGUNS;i++)
				        {
				            if(dguntime[i]<min1)
				            {
				                min1=dguntime[i];
				                idobject=i;
				            }
				        }
				        DestroyDynamicObject(dguns[idobject]);
				    }
		            dguntime[idobject]=gettime();
		            dpatrons[idobject]=PlayerInfo[playerid][pLastAmmo];
			        dgunn[idobject]=PlayerInfo[playerid][pLastGun];
			        dguns[idobject] = CreateDynamicObject(idgun, x, y, z-0.97, 96, 110, eagle, GetPlayerVirtualWorld(playerid));
					PlayerInfo[playerid][pLastGun]=0;
					PlayerInfo[playerid][pLastAmmo]=0;
				}
			}
		}
		CheckTir(playerid);
		_ResetGun(playerid);
		if(GetPVarInt(playerid,"napeinte") == 2) 
		{ 
			SetPVarInt(playerid,"paintdeaths",GetPVarInt(playerid,"paintdeaths")+1); 
			if(killerid != INVALID_PLAYER_ID) 
			{ 
				GameTextForPlayer(killerid, "~w~Kills ~g~+1", 5000, 3); 
				if(playerid != killerid)SetPVarInt(killerid,"paintkills",GetPVarInt(killerid,"paintkills")+1);
			} 
		} 
		AntiCheatsOFF(playerid,3);
		StopAudioStreamForPlayer(playerid);
	    Smoke[playerid] = 0;
	    pSportZal[playerid] = 0;
	    SellGzone[playerid] = 0;
	    SellPGzone[playerid] = 0;
	    SetFullness(playerid, 40);

		new string[450];
		Vnedren[playerid]=0;
		J_SetPlayerHealth(playerid,15);
	 	if(GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID)CheckPlayerGoCuff(GotoInfo[playerid][gtGoID]);
		if(GotoInfo[playerid][gtID]!=INVALID_PLAYER_ID)//жіза
		{
		    Cuffed[GotoInfo[playerid][gtID]] = false;
			CuffedTime[GotoInfo[playerid][gtID]] = 0;
			TogglePlayerControllable(GotoInfo[playerid][gtID],true);
			SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
		    ClearAnims(GotoInfo[playerid][gtID]);
	     	SendInfo(GotoInfo[playerid][gtID],"Вы были выпущены из под конвоя");
	        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
	        CheckPlayerGoCuff(playerid);
		}
		if(PlayerInfo[playerid][pMaskON]>0)
		{
		    PlayerInfo[playerid][pMaskON]=0;
	        if(TeamDuty[playerid]) SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
			else SetPlayerColor(playerid,0xEFEFF710);
		}
	    gunmute[playerid] = gettime()+5;
		for(new i; i < sizeof ActionMenu; i++)
			TextDrawHideForPlayer(playerid,ActionMenu[i]);
	    PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
		TextDrawHideForPlayer(playerid, Taximeter[0]);
		TextDrawHideForPlayer(playerid, Taximeter[1]);
		TextDrawHideForPlayer(playerid, Taximeter[2]);
		TextDrawHideForPlayer(playerid, Taximeter[3]);
		PlayerTextDrawHide(playerid,InfoText[playerid]);
		CheckBed(playerid);

		if(!PlayerInfo[playerid][pJailTime] && !PlayerInfo[playerid][pView])
		{
	        if(!IsAArmy(playerid))
		    {
				if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) PlayerInfo[playerid][pCheepses]=1;
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) PlayerInfo[playerid][pCheepses]=3;
				else PlayerInfo[playerid][pCheepses]=2;
				if(PlayerInfo[playerid][pHospital]>0)PlayerInfo[playerid][pHospital]--;
				PlayerInfo[playerid][pHeal] = 1;
				PlayerInfo[playerid][pHealTime] = 0;
				TogglePlayerControllable(playerid,true);
			}
		}
		if(Merrit[0]!=0 && (Merrit[1]==playerid || Merrit[2]==playerid || Merrit[3]==playerid))
		{
			Merrit[0] = 0;
			Merrit[1] = 0;
			Merrit[2] = 0;
			Merrit[3] = 0;
			format(string,sizeof(string),"Свадьба была сорвана");
			ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
		}
		if(killerid != INVALID_PLAYER_ID)
	    {
			LastDeath(playerid, killerid, reason);
			LastKill(killerid, playerid, reason);
	        if(!IsPlayerInAnyVehicle(killerid))
			{
			    if(!IsPlayerInRangeOfPlayer(150.0, playerid, killerid) && GetPlayerWeapon(killerid) == 0)ToCheat(1,playerid);
			}

	        if(IsPlayerInRangeOfPoint(playerid, 110.0, 2760.7742,-2447.1958,13.5360) && IsPlayerInRangeOfPoint(killerid, 110.0, 2760.7742,-2447.1958,13.5360) ||
			IsPlayerInRangeOfPoint(playerid, 190.0, 255.7347,1837.5056,17.6991) && IsPlayerInRangeOfPoint(killerid, 190.0, 255.7347,1837.5056,17.6991) ||
			IsPlayerInRangeOfPoint(playerid, 250.0, -1368.9514,499.1776,11.1953) && IsPlayerInRangeOfPoint(killerid, 250.0, -1368.9514,499.1776,11.1953) ) if(IsAtGang(playerid) && IsAArmy(killerid))
			{
		 		GiveMoney(killerid,GLS[18]);
		 		SendClientMessage(killerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы получили премию за пойманого бандита");
			}
			if(IsACop(killerid) && TeamDuty[killerid] && PlayerInfo[playerid][pWanted]>0)
			{
			    if(ProxDetectorS(30.0, playerid, killerid, 1))
	            {
					PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pWanted] * 3600;
					PlayerInfo[playerid][pBailPrice] = PlayerInfo[playerid][pWanted] * 300000;
					if(SlotValue[playerid][14] >0 || SlotValue[playerid][11] >0) SendError(playerid,"У вас отобрали наркотики и материалы");
					_ResetGun(playerid);
					PlayerInfo[playerid][pWanted] = 0;
					SetPlayerWantedLevelEx(playerid,0);
					SlotValue[playerid][14] = 0;
					SlotValue[playerid][11] = 0;
					format(string, sizeof(string), "Вы были посажены в тюрьму на %d минут", (PlayerInfo[playerid][pJailTime]/60));
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					TogglePlayerControllable(playerid, true);
					format(string,sizeof(string),"[%s] %s %s[%d] нейтрализовал %s[%i]",OrgInfo[PlayerInfo[killerid][pMember]][oName], GetRankName(GetTeamID(killerid),PlayerInfo[killerid][pRank]), Name(killerid), killerid, Name(playerid), playerid);
					SendCopsMessage(COLOR_LIGHTBLUE,string);
				}
			}
			for(new i; i < 3; i++){
				if(i < 2){
					if((CaptureTime[i] > 0)&&((GetTeamID(playerid) == CaptureAtac[i] && GetTeamID(killerid) == CaptureDef[i]) || (GetTeamID(playerid) == CaptureDef[i] && GetTeamID(killerid) == CaptureAtac[i]))){
						if(GetTeamID(playerid) == CaptureAtac[i] && GetTeamID(killerid) == CaptureDef[i])CaptureDefKill[i]++;
						if(GetTeamID(playerid) == CaptureDef[i] && GetTeamID(killerid) == CaptureAtac[i]) CaptureAtacKill[i]++;
						TextDrawSetString(CaptureTD[11][i], IntToStr(CaptureAtacKill[i]));
						TextDrawSetString(CaptureTD[12][i], IntToStr(CaptureDefKill[i]));
						foreach(new p:Player){
							if(GetTeamID(p)==CaptureDef[i] || GetTeamID(p)==CaptureAtac[i])
							SendDeathMessageToPlayer(p, killerid, playerid, reason);
						}
					}
				}
				if(i == 2){
					if(BizTime > 0 && ((GetTeamID(playerid) == BizAtack && GetTeamID(killerid) == BizDeff) || (GetTeamID(playerid) == BizDeff && GetTeamID(killerid) == BizAtack))){
						if(GetTeamID(playerid) == BizAtack && GetTeamID(killerid) == BizDeff) BizDeffkill++;
						if(GetTeamID(playerid) == BizDeff && GetTeamID(killerid) == BizAtack) BizAtakkill++;
						TextDrawSetString(CaptureTD[11][i], IntToStr(BizAtakkill));
						TextDrawSetString(CaptureTD[12][i], IntToStr(BizDeffkill));
						foreach(new p:Player){
							if(GetTeamID(p)==BizDeff || GetTeamID(p)==BizAtack)
								SendDeathMessageToPlayer(p, killerid, playerid, reason);
						}
					}
				}
			}
			if(!IsACop(killerid) && !IsAArmy(killerid))
		    {
                if(!IsPlayerInRangeOfPoint(playerid,100,-518.5075,-92.3690,62.2983))
                {
			        if(PlayerInfo[killerid][pZKP]>1)PlayerInfo[killerid][pZKP] --;
					if(PlayerInfo[killerid][pWanted]<6) PlayerInfo[killerid][pWanted]+=1;
					SendClientMessage(killerid,COLOR_LIGHTRED,"[Информация] {FFFFFF}Вы были объявлены в розыск! Причина: нападение/убийство");
					format(string,sizeof(string),"Ваш текущий уровень розыска: %d",PlayerInfo[killerid][pWanted]);
					SendClientMessage(killerid,COLOR_YELLOW,string);
					format(string,sizeof(string),"{DF0101}Внимание! %s[%d] был(а) объявлен(a) в розыск! Причина: убийство | Уровень розыска: %d",Name(killerid),killerid,PlayerInfo[killerid][pWanted]);
					SendCopsMessage(COLOR_RED,string);
					if(GetPVarInt(playerid,"kilaar")>gettime())ToCheat(1,playerid);
					SetPVarInt(playerid,"kilaar",gettime()+5);
					SetPlayerWantedLevelEx(killerid, PlayerInfo[killerid][pWanted]);
				}
			}
		}
		SetPlayerTimer(playerid,"PlayerSpawn",200,0);
	}
	return true;
}
cmd:mmtest(playerid){
	
	MMPTD[playerid][0] = CreatePlayerTextDraw(playerid, 317.714233, 174.933349, Translate(Language[36][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][0], 0.185238, 1.066666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][0], 1939274751);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][0], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][0], 1);
	MMPTD[playerid][1] = CreatePlayerTextDraw(playerid, 365.190368, 191.293334, Translate(Language[37][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][1], 0.185238, 1.066666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][1], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][1], 255);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][1], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][1], 1);
	MMPTD[playerid][2] = CreatePlayerTextDraw(playerid, 264.500000, 207.000000, "player_1");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][2], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, MMPTD[playerid][2], 40.000000, 40.000000);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, MMPTD[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, MMPTD[playerid][2], true);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][2], 0x00000000);
	PlayerTextDrawBoxColor(playerid, MMPTD[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][2], 0);
	PlayerTextDrawFont(playerid, MMPTD[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][2], 1);
	PlayerTextDrawSetPreviewModel(playerid, MMPTD[playerid][2], 293);
	PlayerTextDrawSetPreviewRot(playerid, MMPTD[playerid][2], 0.000000, 0.000000, 30.000000, 1.000000);
	MMPTD[playerid][3] = CreatePlayerTextDraw(playerid, 317.500000, 207.000000, "player_2");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][3], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, MMPTD[playerid][3], 40.000000, 40.000000);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, MMPTD[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, MMPTD[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, MMPTD[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][3], 0x00000000);
	PlayerTextDrawFont(playerid, MMPTD[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][3], 1);
	PlayerTextDrawSetPreviewModel(playerid, MMPTD[playerid][3], 46);
	PlayerTextDrawSetPreviewRot(playerid, MMPTD[playerid][3], 0.000000, 0.000000, 30.000000, 1.000000);
	MMPTD[playerid][4] = CreatePlayerTextDraw(playerid, 370.500000, 207.000000, "player_3");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][4], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, MMPTD[playerid][4], 40.000000, 40.000000);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, MMPTD[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, MMPTD[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, MMPTD[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][4], 0x00000000);
	PlayerTextDrawFont(playerid, MMPTD[playerid][4], 5);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][4], 1);
	PlayerTextDrawSetPreviewModel(playerid, MMPTD[playerid][4], 255);
	PlayerTextDrawSetPreviewRot(playerid, MMPTD[playerid][4], 0.000000, 0.000000, 30.000000, 1.000000);
	MMPTD[playerid][5] = CreatePlayerTextDraw(playerid, 423.500000, 207.000000, "player_4");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][5], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, MMPTD[playerid][5], 40.000000, 40.000000);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][5], 1);
	PlayerTextDrawColor(playerid, MMPTD[playerid][5], -1);
	PlayerTextDrawUseBox(playerid, MMPTD[playerid][5], true);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][5], 0x00000000);
	PlayerTextDrawBoxColor(playerid, MMPTD[playerid][5], 0);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][5], 0);
	PlayerTextDrawFont(playerid, MMPTD[playerid][5], 5);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][5], 1);
	PlayerTextDrawSetPreviewModel(playerid, MMPTD[playerid][5], 215);
	PlayerTextDrawSetPreviewRot(playerid, MMPTD[playerid][5], 0.000000, 0.000000, 30.000000, 1.000000);
	MMPTD[playerid][6] = CreatePlayerTextDraw(playerid, 284.000000, 245.500000, "Lance_Harris");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][6], 0.139142, 0.849066);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][6], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][6], 255);
	PlayerTextDrawUseBox(playerid, MMPTD[playerid][6], true);
	PlayerTextDrawBoxColor(playerid, MMPTD[playerid][6], 0);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][6], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][6], 1);
	MMPTD[playerid][7] = CreatePlayerTextDraw(playerid, 337.000000, 245.500000, "John_Higgins");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][7], 0.139142, 0.849066);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][7], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][7], 255);
	PlayerTextDrawUseBox(playerid, MMPTD[playerid][7], true);
	PlayerTextDrawBoxColor(playerid, MMPTD[playerid][7], 0);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][7], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][7], 1);
	MMPTD[playerid][8] = CreatePlayerTextDraw(playerid, 390.000000, 245.500000, "Aleksandr_Sakharov");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][8], 0.139142, 0.849066);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][8], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][8], 255);
	PlayerTextDrawUseBox(playerid, MMPTD[playerid][8], true);
	PlayerTextDrawBoxColor(playerid, MMPTD[playerid][8], 0);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][8], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][8], 1);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][8], 1);
	MMPTD[playerid][9] = CreatePlayerTextDraw(playerid, 443.000000, 245.500000, "Tommy_Fox");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][9], 0.139142, 0.849066);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][9], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][9], 255);
	PlayerTextDrawUseBox(playerid, MMPTD[playerid][9], true);
	PlayerTextDrawBoxColor(playerid, MMPTD[playerid][9], 0);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][9], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][9], 1);
	MMPTD[playerid][10] = CreatePlayerTextDraw(playerid, 284.190429, 258.133331, "255 ELO");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][10], 0.147142, 0.981333);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][10], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][10], 255);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][10], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][10], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][10], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][10], 1);
	MMPTD[playerid][11] = CreatePlayerTextDraw(playerid, 337.500000, 259.130004, "1230 ELO");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][11], 0.147142, 0.981333);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][11], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][11], 255);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][11], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][11], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][11], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][11], 1);
	MMPTD[playerid][12] = CreatePlayerTextDraw(playerid, 390.500000, 259.130004, "0 ELO");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][12], 0.147142, 0.981333);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][12], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][12], 255);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][12], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][12], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][12], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][12], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][12], 1);
	MMPTD[playerid][13] = CreatePlayerTextDraw(playerid, 443.500000, 259.130004, "25 ELO");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][13], 0.147141, 0.981333);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][13], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][13], 255);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][13], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][13], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][13], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][13], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][13], 1);
	MMPTD[playerid][14] = CreatePlayerTextDraw(playerid, 170.000000, 257.299987, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][14], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, MMPTD[playerid][14], 83.500000, 13.573333);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][14], 1);
	PlayerTextDrawColor(playerid, MMPTD[playerid][14], -1976026881);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][14], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][14], 0);
	PlayerTextDrawFont(playerid, MMPTD[playerid][14], 4);
	PlayerTextDrawSetSelectable(playerid, MMPTD[playerid][14], true);
	MMPTD[playerid][15] = CreatePlayerTextDraw(playerid, 211.904708, 195.706665, Translate(Language[38][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][15], 0.139523, 0.938666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][15], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][15], -1);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][15], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][15], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][15], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][15], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][15], 1);
	MMPTD[playerid][16] = CreatePlayerTextDraw(playerid, 212.000000, 211.699996, Translate(Language[39][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][16], 0.139523, 0.938666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][16], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][16], -1);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][16], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][16], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][16], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][16], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][16], 1);
	MMPTD[playerid][17] = CreatePlayerTextDraw(playerid, 212.000000, 227.699996, Translate(Language[40][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][17], 0.139523, 0.938666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][17], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][17], -1);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][17], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][17], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][17], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][17], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][17], 1);
	MMPTD[playerid][18] = CreatePlayerTextDraw(playerid, 212.000000, 243.699996, Translate(Language[41][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][18], 0.139523, 0.938666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][18], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][18], -1);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][18], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][18], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][18], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][18], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][18], 1);
	MMPTD[playerid][19] = CreatePlayerTextDraw(playerid, 212.000000, 259.700012, Translate(Language[42][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][19], 0.139523, 0.938666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][19], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][19], 255);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][19], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][19], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][19], 255);
	PlayerTextDrawFont(playerid, MMPTD[playerid][19], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][19], 1);
	MMPTD[playerid][20] = CreatePlayerTextDraw(playerid, 319.857086, 277.906616, Translate(Language[43][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][20], 0.185238, 1.066666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][20], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][20], 1939274751);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][20], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][20], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][20], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][20], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][20], 1);
	MMPTD[playerid][21] = CreatePlayerTextDraw(playerid, 169.904769, 291.413330, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][21], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, MMPTD[playerid][21], 145.142868, 46.506652);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][21], 1);
	PlayerTextDrawColor(playerid, MMPTD[playerid][21], -650034825);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][21], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][21], 0);
	PlayerTextDrawFont(playerid, MMPTD[playerid][21], 4);
	PlayerTextDrawSetSelectable(playerid, MMPTD[playerid][21], true);
	MMPTD[playerid][22] = CreatePlayerTextDraw(playerid, 324.047668, 291.133331, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][22], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, MMPTD[playerid][22], 145.142868, 46.506652);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][22], 1);
	PlayerTextDrawColor(playerid, MMPTD[playerid][22], 572662391);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][22], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][22], 0);
	PlayerTextDrawFont(playerid, MMPTD[playerid][22], 4);
	PlayerTextDrawSetSelectable(playerid, MMPTD[playerid][22], true);
	MMPTD[playerid][23] = CreatePlayerTextDraw(playerid, 236.600006, 323.799987, Translate(Language[44][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][23], 0.185238, 1.066666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][23], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][23], 255);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][23], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][23], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][23], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][23], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][23], 1);
	MMPTD[playerid][24] = CreatePlayerTextDraw(playerid, 319.476135, 344.893280, Translate(Language[10][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][24], 0.185238, 1.066666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][24], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][24], 255);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][24], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][24], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][24], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][24], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][24], 1);
	MMPTD[playerid][25] = CreatePlayerTextDraw(playerid, 395.000000, 323.799987, Translate(Language[45][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, MMPTD[playerid][25], 0.185238, 1.066666);
	PlayerTextDrawAlignment(playerid, MMPTD[playerid][25], 2);
	PlayerTextDrawColor(playerid, MMPTD[playerid][25], 255);
	PlayerTextDrawSetShadow(playerid, MMPTD[playerid][25], 0);
	PlayerTextDrawSetOutline(playerid, MMPTD[playerid][25], 0);
	PlayerTextDrawBackgroundColor(playerid, MMPTD[playerid][25], 51);
	PlayerTextDrawFont(playerid, MMPTD[playerid][25], 2);
	PlayerTextDrawSetProportional(playerid, MMPTD[playerid][25], 1);
	for(new i; i < 26; i++){
		if(i < 23)TextDrawShowForPlayer(playerid, MMTD[i]);
		PlayerTextDrawShow(playerid, MMPTD[playerid][i]);
	}
	return 1;
}
cmd:profilerdump(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 9)return 1;
	#if defined PROFILER_INC
		Profiler_Dump();
		SendInfo(playerid, "Дамп выгружен");
	#endif
	return 1;
}
cmd:setorgbank(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7)return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"ii",params[0], params[1])) return SendInfo(playerid,"Используйте: {7396FB}/setorgbank [id] [amount]");
	if(params[0] > 27 || params[0] < 1) return SendError(playerid,"От 1 до 27");
	if(params[0] == 25)return SendError(playerid, "Фракция недоступна");
	OrgInfo[params[0]][oBank] = params[1];
	SendInfo(playerid, "Значение изменено");
	return 1;
}
cmd:setfactory(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7)return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"ii",params[0], params[1]) || params[0] < 0 || params[0] > 4){
		ShowPlayerDialogEx(playerid, 0, 0, "", "{ffffff}0 - Материалы на шахте\n1 - Золото на шахте\n2 - Алмазы на шахте\n3 - Слитки в банке на продаже\n4 - Бриллианты в банке на продаже", "Скрыть", "");
		return SendInfo(playerid,"Используйте: {7396FB}/setfactory [type] [amount]");
	}
	if(params[1] < 0)return SendError(playerid, "Неверное значение");
	switch(params[0]){
	case 0:FactoryInfo[fMaterials] = params[1];
	case 1:FactoryInfo[fAurum] = params[1];
	case 2:FactoryInfo[fDiamonds] = params[1];
	case 3:FactoryInfo[fSlitkov] = params[1];
	case 4:FactoryInfo[fBrilliantov] = params[1];
	}
	UpdateFactory();
	SendInfo(playerid, "Значение изменено");
	return 1;
}
cmd:phone(playerid)
{
	if(SlotValue[playerid][19] == 0 || SlotValue[playerid][19] == 1) return SendError(playerid,"У вас нет мобильного телефона или SIM-карты");
	if(GetPVarInt(playerid, "showedinv"))HideInventory(playerid);
	if(PlayerInfo[playerid][pCalling]!=-1) return false;
	SelectTextDraw(playerid, 0x0099FFAA);
	if(PlayerInfo[playerid][pONPhoneTalk])return 1;
	foreach(Player, id)
	{
		if(PlayerInfo[id][pCalling] == playerid && IsPlayerLogged[id])
			return 1;
	}
	new h,m,s,time[8];
	gettime(h,m,s);
	format(time, sizeof time, "%d:%02d",h,m);
	TextDrawSetString(Sphone[3], time);
	TextDrawSetString(Sphone[4], Mode_City);
	for(new i;i<13;i++)TextDrawShowForPlayer(playerid,Sphone[i]);
	if(PlayerInfo[playerid][pZa_Skill])for(new i;i<7;i++)TextDrawShowForPlayer(playerid,SphoneKey[i]);
	else
	{
		TextDrawShowForPlayer(playerid,SphoneKey[5]);
		TextDrawShowForPlayer(playerid,SphoneKey[6]);
	}
	return true;
}
cmd:vr(playerid, const params[])
{
	if(PlayerInfo[playerid][pVIP] < 5) return SendError(playerid, "Вы не игрок со статусом GG+");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	new result[150], string[200];
	if(sscanf(params,"s[150]",result)) return SendInfo(playerid,"Используйте: {7396FB}/vr [text]");
	format(string,sizeof(string),"[GG+] %s[%d]:{FFFFFF} %s",Name(playerid),playerid,result);
	SendVIPMessage(COLOR_LIGHTBLUE,string);
	return true;
}
cmd:fixcar(playerid, const params[])
{
	if(PlayerInfo[playerid][pVIP] < STATUS_PLATIN) return SendError(playerid,"Эта функция доступна только для игроков с VIP статусом выше GG PRO");
	new car;
	if(sscanf(params,"d",car)) return SendInfo(playerid,"Используйте: {7396FB}/fixcar [id]");
	if(!IsPlayerHaveCar(playerid,car)) return  SendError(playerid,"Это не ваш транспорт");
	if(GetMoney(playerid) < 1000)return SendError(playerid,"У вас не достаточно денег! Необходимо 1000$");
	GiveMoney(playerid,-1000);
	GHealth[playerid] = 1000;
	J_SetVehicleHealth(car,GHealth[playerid]);
	SendInfo(playerid,"Вы починили личный транспорт");
	return true;
}
cmd:fixcar_tal(playerid){
	new string[64];
	if(Talent_KD[playerid][1] > gettime()){
		f(string, "Способность перезаряжается. Осталось %d секунд", gettime() - Talent_KD[playerid][1]);
		return SendError(playerid, string);
	}
	new Float:carhp;
	if(!IsPlayerInAnyVehicle(playerid))return SendError(playerid, "Вы должны находиться в транспорте");
	GetVehicleHealth(GetPlayerVehicleID(playerid), carhp);
	GHealth[playerid] = carhp+50;
	J_SetVehicleHealth(GetPlayerVehicleID(playerid),GHealth[playerid]);
	SendInfo(playerid,"Вы починили транспорт");
	Talent_KD[playerid][1] = gettime()+240;
	return 1;
}
stock SendVIPMessage(color,const text[])
{
	foreach(Player, i)
	{
 		if(PlayerInfo[i][pVIP]==5)
	    {
			if(IsPlayerConnected(i))
			{
			    SendClientMessage(i,color,text);
			}
	 	}
    }
    return true;
}
stock IsABoat(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_BOAT);
}
stock IsAVelik(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_VELIK);
}
stock IsAPlane(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_PLANE);
}
stock IsABike(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_BIKE);
}
stock IsAMoped(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_MOPED);
}
stock IsACar(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_CAR);
}

stock OwnCarNumber(carid)
{
    new Number[40];
	if(IsAOwnableCar(carid)) format(Number,sizeof(Number),"SP %d",carid);
	return Number;
}
public OnVehicleSpawn(vehicleid){
	for(new i; i < 25; i++)DestroyDynamicObject(VehObjects[vehicleid][i]);
	if(GetVehicleModelEx(vehicleid)==431 && VehicleInfo[vehicleid][vJob]==1)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][0], 0, "{FFCB8C}Городской автобус\n\n{56A85E}НЕ АРЕНДОВАН", 130, "Calibri", 29, 1, -1, 0, 0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, -1.300, 1.681, 0.489, 0.000, 0.000, 180.000);
		VehObjects[vehicleid][1] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][1], 0, "{FFCB8C}Городской автобус\n\n{56A85E}НЕ АРЕНДОВАН", 130, "Calibri", 29, 1, -1, 0, 2);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][1], vehicleid, 1.300, 1.681, 0.489, 0.000, 0.000, 0.000);
	}
	if(GetVehicleModelEx(vehicleid)==469 && VehicleInfo[vehicleid][vJob]==JOB_TAXI)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19310,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, 1.361, 0.929, 0.000, 0.000, 90.000);
		VehObjects[vehicleid][1] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][1], 0, "n n n n n\nn n n n n n\nn n n n n", 120, "Wingdings", 5, 1, -16777216, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][1], vehicleid, -0.830, 1.349, -0.040, 0.000, 0.000, 1.500);
		VehObjects[vehicleid][2] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][2], 0, "n n n n n\nn n n n n n\nn n n n n", 120, "Wingdings", 5, 1, -16777216, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][2], vehicleid, 0.830, 1.351, -0.060, 0.000, 0.000, -0.399);
	}
	if(GetVehicleModelEx(vehicleid)==451 && VehicleInfo[vehicleid][vJob]==JOB_TAXI)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, -0.540, 0.670, 0.000, 0.000, 180.000);
		VehObjects[vehicleid][1] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][1], 0, "n n n n n\nn n n n n n\nn n n n n", 120, "Wingdings", 7, 1, -16777216, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][1], vehicleid, -0.009, 1.633, 0.083, 0.000, 98.099, 90.000);
	}
	if(GetVehicleModelEx(vehicleid)==551 && VehicleInfo[vehicleid][vJob]==JOB_TAXI)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, -0.270, 0.990, 0.000, 0.000, 90.000);
		VehObjects[vehicleid][1] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][1], 0, "n n n n n n n n n n n n n n n n n\nn n n n n n n n n n n n n n n n n n n\nn n n n n n n n n n n n n n n n n", 120, "Wingdings", 7, 1, -16777216, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][1], vehicleid, -1.141, -0.150, -0.140, 0.000, 0.000, 0.000);
		VehObjects[vehicleid][2] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][2], 0, "n n n n n n n n n n n n n n n n n\nn n n n n n n n n n n n n n n n n n n\nn n n n n n n n n n n n n n n n n", 120, "Wingdings", 7, 1, -16777216, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][2], vehicleid, 1.140, -0.150, -0.120, 0.000, 0.000, 0.000);
		VehObjects[vehicleid][3] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][3], 0, "ТАКСИ\n{56A85E}НЕ АРЕНДОВАНА\n{FF0000}ЗВОНИ {FF4400}999", 130, "Calibri", 20, 0, 0xFFFF0000, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][3], vehicleid, 0.000, -1.859, 0.604, 0.000, -62.099, 270.000);
	}
	if(GetVehicleModelEx(vehicleid)==426 && VehicleInfo[vehicleid][vTeam]==TEAM_LICENSERS)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(2722,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][0], 0, "УЧЕБНЫЙ ТРАНСПОРТ", 130, "Calibri", 55, 1, -2539199, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, -0.360, -1.536, 0.662, -55.599, 0.000, 0.000);
		VehObjects[vehicleid][1] = CreateDynamicObject(2722,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][1], 0, "АВТОШКОЛА\nSAN-FIERRO", 130, "Calibri", 50, 0, -1, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][1], vehicleid, -0.360, -1.794, 0.505, -54.599, 0.000, 0.000);
	}
	if(GetVehicleModelEx(vehicleid)==541 && VehicleInfo[vehicleid][vTeam]==TEAM_FBI)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, 2.320, -0.250, 17.300, 0.000, 180.000);
	}
	if(GetVehicleModelEx(vehicleid)==400 && VehicleInfo[vehicleid][vTeam]==TEAM_MERIALS)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(2614,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, -2.311, 0.453, -9.700, 0.000, 0.000);
	}
	if(GetVehicleModelEx(vehicleid)==409 && VehicleInfo[vehicleid][vTeam]==TEAM_MERIALS)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(2614,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, -2.655, 0.612, -39.399, 0.000, 0.000);
	}
	if(GetVehicleModelEx(vehicleid)==421 && VehicleInfo[vehicleid][vTeam]==TEAM_MERIALS)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(2614,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, -1.696, 0.520, -54.199, 0.000, 0.000);
	}
	if(GetVehicleModelEx(vehicleid)==491 && IsACopCar(vehicleid))
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, 2.528, -0.170, 180.000, 0.000, 0.000);
		VehObjects[vehicleid][1] = CreateDynamicObject(2722,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][1], 0, "p", 130, "Webdings", 170, 0, -1, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][1], vehicleid, -0.391, -1.749, 0.453, -50.900, 0.000, 720.000);
	}
	if(GetVehicleModelEx(vehicleid)==525 && IsACopCar(vehicleid))
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(2722,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][0], 0, "p", 130, "Webdings", 199, 0, -16777216, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.360, 2.230, 0.800, -86.700, 0.000, 180.000);
	}
	if(GetVehicleModelEx(vehicleid)==415 && VehicleInfo[vehicleid][vTeam] == TEAM_LSPD)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, 2.630, -0.220, 180.000, 0.000, 0.000);
		VehObjects[vehicleid][1] = CreateDynamicObject(2722,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][1], 0, "LOS-SANTOS\n{0099FF}ПОЛИЦЕЙСКИЙ УЧАСТОК", 130, "Calibri", 29, 1, -1, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][1], vehicleid, -0.380, -1.087, 0.412, -21.300, 0.000, 0.000);
	}
	if(GetVehicleModelEx(vehicleid)==415 && VehicleInfo[vehicleid][vTeam] == TEAM_RCPD)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, 2.630, -0.220, 180.000, 0.000, 0.000);
		VehObjects[vehicleid][1] = CreateDynamicObject(2722,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][1], 0, "RED COUNTY\n{56A85E}УЧАСТОК ШЕРИФА", 130, "Calibri", 29, 1, -1, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][1], vehicleid, -0.380, -1.087, 0.412, -21.300, 0.000, 0.000);
	}
	if(GetVehicleModelEx(vehicleid)==415 && VehicleInfo[vehicleid][vTeam] == TEAM_SFPD)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, 2.630, -0.220, 180.000, 0.000, 0.000);
		VehObjects[vehicleid][1] = CreateDynamicObject(2722,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][1], 0, "SAN-FIERRO\n{ACACAC}ПОЛИЦЕЙСКИЙ УЧАСТОК", 130, "Calibri", 29, 1, -1, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][1], vehicleid, -0.380, -1.087, 0.412, -21.300, 0.000, 0.000);
	}
	if(GetVehicleModelEx(vehicleid)==415 && VehicleInfo[vehicleid][vTeam] == TEAM_PDLV)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000, 2.630, -0.220, 180.000, 0.000, 0.000);
		VehObjects[vehicleid][1] = CreateDynamicObject(2722,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][1], 0, "LAS-VENTURAS\n{0099FF}ПОЛИЦЕЙСКИЙ УЧАСТОК", 130, "Calibri", 29, 1, -1, 0, 1);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][1], vehicleid, -0.380, -1.087, 0.412, -21.300, 0.000, 0.000);
	}
	if(GetVehicleModelEx(vehicleid)==497 || GetVehicleModelEx(vehicleid)==487 || GetVehicleModelEx(vehicleid)==488)
	{
		VehObjects[vehicleid][0] = CreateDynamicObject(19362,0.0, 0.0, 0, 0.0, 0.0, 0.0, -1,  -1, -1,100.0);
		SetDynamicObjectMaterialText(VehObjects[vehicleid][0], 0, " ", 80, "Calibri", 20, 1, 0x00000000, 0x00000000, 0);
		AttachDynamicObjectToVehicle(VehObjects[vehicleid][0], vehicleid, 0.000000, 0.020000, -1.200000, 0.000000, 90.0, 0.000000);
	}
	VehicleInfo[vehicleid][vPlayer]=-1;
 	if(VehicleInfo[vehicleid][vJob]>0)
	{
		foreach(new i:Player)
		{
		    if(pTemp[i][pArendaCar]==vehicleid)
			{
				pTemp[i][pArendaCar] = -1;
				TimetoReturn[i]=0;
				DisablePlayerRaceCheckpoint(i);
		    	break;
			}
		}
		if(VehicleInfo[vehicleid][vJob] == 12 || (VehicleInfo[vehicleid][vJob]>=17 && VehicleInfo[vehicleid][vJob]<=20)) Fuel[vehicleid] = 100.0;
	}

	if(IsAPlane(vehicleid)) J_SetVehicleHealth(vehicleid,3000);
	else if(IsACopCar(vehicleid)) J_SetVehicleHealth(vehicleid,3000);
	else J_SetVehicleHealth(vehicleid,1000);

	if(IsAArendCar(vehicleid)) Fuel[vehicleid] = 100.0;
	if(VehicleInfo[vehicleid][vJob]==JOB_MECHANIC)
	{
		BenzinCena[vehicleid]=0.0;
		if(BenzinCount[vehicleid]>0)
		{
		    BizInfo[Contracter[vehicleid]][bProducts]+=BenzinCount[vehicleid];
		    UpdateFuels(Contracter[vehicleid]);
		    BenzinCount[vehicleid] =0;
		}
		Contracter[vehicleid]=-1;
		UpdateDynamic3DTextLabelText(Benzin[vehicleid], 0xFFFFFFFF, "{57B22C}Заправка $0\n{FFFFFF}Бензина: 0/1000");
	}
	if((VehicleInfo[vehicleid][vTeam] >=1 && VehicleInfo[vehicleid][vTeam]<11) || VehicleInfo[vehicleid][vTeam]>19) Fuel[vehicleid] = 100.0;
	if(IsAStripCar(vehicleid)) CarStrips[vehicleid] = 10;

	if(IsAVelik(vehicleid) || GetVehicleVirtualWorld(vehicleid) == 1228) SetEngineStatus(vehicleid,true, -1);
	else SetEngineStatus(vehicleid,false, -1);

	new vehid = GetVehicleID(vehicleid);

	if(!VehicleInfo[vehicleid][vTeam] && !VehicleInfo[vehicleid][vJob] && !IsAArendCar(vehicleid) && GetVehicleID(vehicleid) >= 0) SetTimerEx("ModCar", 2000, false, "i", vehicleid);

 	if(IsAOwnableCar(vehicleid))
	{
	    UpdateCarInfo(vehicleid);
		new carnnum[64];
		format(carnnum,sizeof(carnnum),"%s%s",NumberColors[CarInfo[vehid][cNumberColor]],CarInfo[vehid][cNumber]);
	    SetVehicleNumberPlate(vehicleid,carnnum);
		if(IsASellCar(vehicleid))CarInfo[vehid][cLock] = 0;
		ChangeVehicleColor(vehicleid, CarInfo[vehid][cColor_1], CarInfo[vehid][cColor_2]);
		ResetDoorsStatus(vehicleid);
		SetVehicleVirtualWorld(vehicleid, CarInfo[vehid][cVirt]);
	}
	else
	{
		SetVehicleNumberPlate(vehicleid, "ggrp.ru");
		SetDoorsStatus(vehicleid, 0);
		if(VehicleInfo[vehicleid][vJob]!=0)VehicleInfo[vehicleid][vLock]=0;
	}
	if(CarScrap[vehicleid] != -1)
	{
	    DestroyDynamicObject(CarScrap[vehicleid]);
	    CarScrap[vehicleid] = -1;
	}
	return 1;
}
public OnVehicleDeath(vehicleid, killerid)
{
    if(CarScrap[vehicleid] != -1)
	{
	    DestroyDynamicObject(CarScrap[vehicleid]);
	    CarScrap[vehicleid] = -1;
	}
	return true;
}
stock DestroyVehicleEx(vehicleid)
{
	DestroyVehicle(vehicleid);
	return true;
}
stock LastMessage(playerid, text[]){
	new string[128];
	new query[256];
	new time[3];
	gettime(time[0], time[1], time[2]);
	f(string, "{ffffff}%s - %02d:%02d:%02d", text, time[0], time[1], time[2]);
	f(query, "INSERT INTO `chatlog` (`name`, `text`) VALUES ('%s', '%s')", Name(playerid), string);
	mysql_pquery(mysql, query);
	return 1;
}
stock LastDeath(playerid, killerid, reason){
	new string[128];
	new query[256];
	new time[3];
	gettime(time[0], time[1], time[2]);
	f(string, "{ffffff}Умер от %s (оружие %d) - %02d:%02d:%02d", Name(killerid), reason, time[0], time[1], time[2]);
	f(query, "INSERT INTO `deathlog` (`name`, `log`) VALUES ('%s', '%s')", Name(playerid), string);
	mysql_pquery(mysql, query);
	return 1;
}
stock LastKill(killerid, playerid, reason){
	new string[128];
	new query[256];
	new time[3];
	gettime(time[0], time[1], time[2]);
	f(string, "{ffffff}Убил %s (оружие %d) - %02d:%02d:%02d", Name(playerid), reason, time[0], time[1], time[2]);
	f(query, "INSERT INTO `killlog` (`name`, `log`) VALUES ('%s', '%s')", Name(killerid), string);
	mysql_pquery(mysql, query);
	return 1;
}
public OnPlayerText(playerid, text[])
{
	new string[150];
	if(IsPlayerLogged[playerid])
	{
	    if(TextReset[playerid] > 0)return !SendClientMessage(playerid,0x878787FF,"Пожалуйста, подождите немного...");
	    if(PlayerInfo[playerid][pMuteTime] > 0)
		{
 			SetPlayerChatBubble(playerid, "Пытается что-то сказать", COLOR_RED, 10.0, 5000);
   			SendMuteMessage(playerid, 0);
			return false;
		}
		LastMessage(playerid, text);
		SetString(OldMessage[playerid],text);
		TextReset[playerid] = 1;
		if( IsAIP(text) )
		{
			format(string,sizeof(string),"[Подозрение на рекламу] %s[%d]: [%s]",Name(playerid),playerid,text);
			SendAdminsMessage(COLOR_RED,string,1);
			ReplaceText(text);
			return false;
		}
		if(PlayerInfo[playerid][pONPhoneTalk])
		{
		    if(PlayerInfo[playerid][pCalling]!=-1 && IsPlayerLogged[PlayerInfo[playerid][pCalling]])
			{
				format(string, sizeof(string), "{7396FB}[Телефон] %s: %s", PlayerName[playerid], text);
				SendClientMessage(playerid, -1, string);
				SendClientMessage(PlayerInfo[playerid][pCalling], -1, string);
				SetPlayerChatBubble(playerid, string, COLOR_WHITE, 10.0, 10000);
				if(PlayerInfo[playerid][pScutes]!=-1)
				{
					format(string, sizeof(string), "[ЖУЧЕК]: %s говорит по телефону: %s", PlayerName[playerid], text);
					SendClientMessage(PlayerInfo[playerid][pScutes], COLOR_BLUE, string);
				}
				if(PlayerInfo[PlayerInfo[playerid][pCalling]][pScutes]!=-1)
				{
					format(string, sizeof(string), "[ЖУЧЕК]: %s говорит по телефону: %s", PlayerName[playerid], text);
					SendClientMessage(PlayerInfo[PlayerInfo[playerid][pCalling]][pScutes], COLOR_BLUE, string);
				}
			}
		    return 0;
		}
		if(Merrit[0] == 1 && Merrit[2] == playerid)
		{
 			if(!IsPlayerInRangeOfPoint(Merrit[3], 10.0, 1234.2189,-1564.9213,3277.1960 )) return 0;
			if(!IsPlayerInRangeOfPoint(Merrit[2], 10.0, 1234.2189,-1564.9213,3277.1960 )) return 0;
			format(string,sizeof(string)," - %s (%s) [%d]", text, PlayerName[playerid],playerid);
			ProxDetector(25.0,playerid,string,COLOR_CHAT,COLOR_CHAT,COLOR_CHAT,COLOR_CHAT,COLOR_CHAT);
			if(GetString(text,"да"))
			{
			    Merrit[0] = 2;
				format(string,sizeof(string),"%s: %s, согласны ли вы стать женой %s?",PlayerName[Merrit[1]],PlayerName[Merrit[3]],PlayerName[Merrit[2]]);
				ProxDetector(20,playerid,string,COLOR_SCHAT,1);
				SendInfo(Merrit[3],"Чтобы сделать свой выбор, напишите в игровой чат да/нет");
			}
			if(GetString(text,"нет"))
			{
			    SendClientMessage(Merrit[3],COLOR_VALIK,"[Информация] {FFFFFF}Ваш жених отклонил предложение поженится");
			    format(string,sizeof(string),"%s тихо передал пистолет невесте",PlayerName[Merrit[1]]);
				ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			    _SetGun(Merrit[3], 24, 10);
			    Merrit[0] = 0;
			}
			return 0;
		}
  		if(Merrit[0] == 2 && Merrit[3] == playerid)
		{
 			if(!IsPlayerInRangeOfPoint(Merrit[3], 10.0, 1234.2189,-1564.9213,3277.1960 )) return SendError(playerid,"Жених не в церкви");
			if(!IsPlayerInRangeOfPoint(Merrit[2], 10.0, 1234.2189,-1564.9213,3277.1960 )) return SendError(playerid,"Невеста не в церкви");
			format(string,sizeof(string)," - %s (%s) [%d]", text, PlayerName[playerid],playerid);
			ProxDetector(25.0,playerid,string,COLOR_CHAT,COLOR_CHAT,COLOR_CHAT,COLOR_CHAT,COLOR_CHAT);
			if(GetString(text,"да"))
			{
			    SendClientMessage(Merrit[2],COLOR_VALIK,"[Информация] {FFFFFF}Вы приняли помолвку, теперь вы можете поцеловаться");
			    SendClientMessage(Merrit[3],COLOR_VALIK,"[Информация] {FFFFFF}Вы приняли помолвку, теперь вы можете поцеловаться");
				format(PlayerInfo[playerid][pMerrit], 25, "%s", PlayerName[Merrit[2]]);
				format(PlayerInfo[Merrit[2]][pMerrit], 25, "%s", PlayerName[Merrit[3]]);
			    Merrit[0] = 0;
			    format(string,sizeof(string),"Поздравляем: %s[%d] и %s[%d] теперь они муж и жена",PlayerName[Merrit[2]],Merrit[2],PlayerName[Merrit[3]],Merrit[3]);
			    SendClientMessageToAll(COLOR_GOLD,string);
			    GiveMoney(Merrit[1],GLS[20]);
			    format(string,sizeof(string),"[Информация] {FFFFFF}Вы получили $%d за проведение свадьбы",GLS[20]);
				SendClientMessage(Merrit[1],COLOR_VALIK,string);
			}
			if(GetString(text,"нет"))
			{
			    SendClientMessage(Merrit[2],COLOR_VALIK,"[Информация] {FFFFFF}Ваша жена отклонила предложение поженится");
			    Merrit[0] = 0;
			    format(string,sizeof(string),"[Информация] {FFFFFF}Свадьба была сорвана");
				ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			}
			return 0;
		}
		if(GetString(text,")"))
		{
		    format(string,sizeof(string)," %s[%d] улыбается",PlayerName[playerid],playerid);
			ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			return false;
		}
		if(GetString(text,"))"))
		{
		    format(string,sizeof(string)," %s[%d] смеется",PlayerName[playerid],playerid);
			ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			return false;
		}
		if(GetString(text,"("))
		{
		    format(string,sizeof(string)," %s[%d] грустит",PlayerName[playerid],playerid);
			ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			return false;
		}
		if(GetString(text,"(("))
		{
		    format(string,sizeof(string)," %s[%d] сильно расстроился",PlayerName[playerid],playerid);
			ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			return false;
		}
		if(GetString(text,"xD"))
		{
		    format(string,sizeof(string)," %s[%d] валяется от смеха",PlayerName[playerid],playerid);
			ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			return false;
		}
		if(GetString(text,":D"))
		{
		    format(string,sizeof(string)," %s[%d] хохочет во весь голос",PlayerName[playerid],playerid);
			ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			return false;
		}
		if(GetString(text,"O_o"))
		{
		    format(string,sizeof(string)," %s[%d] очень удивлен",PlayerName[playerid],playerid);
			ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			return false;
		}
		if(GetString(text,">_<"))
		{
		    format(string,sizeof(string)," %s[%d] сморщился от злости",PlayerName[playerid],playerid);
			ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			return false;
		}
		if(GetString(text,";)"))
		{
		    format(string,sizeof(string)," %s[%d] подмигивает",PlayerName[playerid],playerid);
			ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			return false;
		}
		if(GetString(text, "q"))
		{
		    if(!PlayerLie[playerid])
		    {
			    if(PlayerInfo[playerid][pAdmin] > ADM_MODER)
			    {
		            format(string,sizeof(string)," %s[%d] показал(а) распальцовку {D94141}администраторов Good Game",PlayerName[playerid],playerid);
					ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
					ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1);
					return false;
				}
				if(IsAtGang(playerid))
				{
					new member[32];
					switch(PlayerInfo[playerid][pMember])
					{
					case TEAM_GROOVE: member = "Grove Street Gang";
					case TEAM_VAGOS: member = "The Vagos Gang";
					case TEAM_BALLAS: member = "East Side Ballas Gang";
					case TEAM_WOLFS: member = "Deathrow MC";
					case TEAM_CORONOS: member = "Varrios Los Aztecas Gang";
					case TEAM_RIFA: member = "The Rifa Gang";
					}
					format(string,sizeof(string)," %s показал(а) распальцовку %s",PlayerName[playerid],member);
					ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
					ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,1,1);
					return false;
				}
			}
		}

		if(LiveOffer[playerid] != INVALID_PLAYER_ID)
		{
		    new id = LiveOffer[playerid];
	        if(IsPlayerConnected(id))
	        {
		        if(LiveOfferID[id] == playerid || LiveOfferID[playerid] == id)
		        {
		            new getradio[3],type;
		            switch(LiveStation[playerid])
		            {
		                case TEAM_RADIO: getradio = "LS",type=0;
						case TEAM_RADIOSF: getradio = "SF",type=1;
						case TEAM_RADIOLV: getradio = "LV",type=2;
		            }
		            if(!IsANews(playerid)) format(string,sizeof(string),"Гость %s[%d]: %s",Name(playerid),playerid,text);
		        	else format(string,sizeof(string),"Ведущий %sFM %s[%d]: %s",getradio,Name(playerid),playerid,text);
			       	RsendClientMessageToAll(COLOR_LIGHTGREEN,type,string);
				}
				else LiveOffer[playerid] = INVALID_PLAYER_ID;
			}
			else LiveOffer[playerid] = INVALID_PLAYER_ID;
			return false;
		}
		if(IsAMg(text))
	    {
	        format(string,sizeof(string),"(( %s[%d]: %s ))",PlayerName[playerid],playerid,text);
			ProxDetector(10,playerid,string,0xFFE6E6AA,0xFFE6E6AA,0xFFE6E6AA,0xFFE6E6AA,0xFFE6E6AA);
			return false;
	    }
		ProxDetector(30.0, playerid, text, 0xFFFFFFFF, 0xCCCCCCFF, 0x999999FF, 0x666666FF, 0x333333FF, 1);
		if(!IsANotControllable(playerid) && CreteBomb[playerid]==0 && animan[playerid]!=1)
		{
			ApplyAnimation(playerid, "PED", "IDLE_CHAT",4.1,0,1,1,1,1,1);
			SetTimerEx("ClearAnim", 100*strlen(text), false, "d", playerid);
		}
		SetPlayerChatBubble(playerid, text, COLOR_WHITE, 20.0, 10000);
	}
	return false;
}
forward ClearAnim(playerid);
public ClearAnim(playerid) return ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
public J_ApplyAnimation(playerid, const animlib[], const animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync)
{
    ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
    return true;
}
stock CheckColor(color)
{
	if(!color)color = 0xFFFFFF00;
	new str[8];
	format(str,8,"%06x",color >>> 8);
	return str;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(!Controllable[playerid]) return ClearAnimations(playerid);
	if(GetVehicleModelEx(vehicleid)==538 ) ExitCar(playerid);
	new Float:x,Float:y,Float:z;
	GetVehiclePos(vehicleid,x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid,20,x,y,z) && VehicleSpeed(vehicleid)<50) return ToCheat(1,playerid);
	VehicleID[playerid]=vehicleid;
	new string[150];
	EnterVehicle[playerid] = vehicleid;
	new driver = 0;
	for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
	{
	    if(!IsPlayerLogged[i]) continue;
	    if(EnterVehicle[i] == vehicleid)
	    {
	        driver++;
			break;
	    }
	}
	if(GetVehicleSeat(vehicleid, 0) != INVALID_PLAYER_ID && VehicleInfo[vehicleid][vTeam]>0 && !ispassenger)
	{
	     ExitCar(playerid),SendClientMessage(playerid,COLOR_ORANGE,"Место водителя занято");
	     return 1;
	}
	if(driver==0 && !ispassenger)
	{
		format(string,sizeof(string),"[A] %s[%d] возможно использует чит-программы",PlayerName[playerid],playerid);
		SendAdminsMessage(COLOR_GRAY,string);
	}
	if(!ispassenger)
	{
	    AntiCheatOFF[playerid][VEH_ROOT_HACK] = 2;
	    GetVehicleZAngle(vehicleid,vRut[playerid][0]);
	    CheckEnterCar(playerid, vehicleid);
	}
	if(IsAOwnableCar(vehicleid))
	{
	    new number = GetVehicleID(vehicleid);
	    if(CarInfo[number][cLock] == 1)
		{
		    ClearAnims(playerid);
		    SendError(playerid,"Этот транспорт закрыт");
			if(CarInfo[number][cAlarmON])
	   		{
				SetAlarmStatus(vehicleid,true);
				AlarmTime[vehicleid] = 20;
				foreach(new i:Player)
				{
					if(!IsPlayerConnected(i)) continue;
					if(IsPlayerHaveCar(i,vehicleid))
					{
						new Float:X,Float:Y,Float:Z;
						GetVehiclePos(vehicleid, X,Y,Z);
						SendClientMessage(i,COLOR_YELLOW,"На Вашем транспорте сработала сигнализация");
						format(string,sizeof(string),"%d",vehicleid);
						callcmd::findcar(playerid,string);
						break;
					}
				}
			}
		}
	}
	return true;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
    VehicleID[playerid]=INVALID_VEHICLE_ID;
	SetCameraBehindPlayer(playerid);
	if(VehicleInfo[vehicleid][vPlayer]==playerid &&  GetVehicleModelEx(vehicleid)==512 && VehicleInfo[vehicleid][vTeam] == TEAM_LICENSERS) VehicleInfo[vehicleid][vPlayer] = -1;
	return true;
}
stock IsAOwnableCar(carid){
	if(carid >= ADD_VEHICLES && GetVehicleID(carid) >= 0 && CarInfo[GetVehicleID(carid)][cID] > 0)return 1;
	else return 0;
}
stock IsASellCar(carid)
{
    if(IsAOwnableCar(carid))
	{
	    new number = GetVehicleID(carid);
	    if(GetString(CarInfo[number][cOwner],"The State")) return true;
	}
	return false;
}
stock GetString(const param1[],const param2[])
{
	return !strcmp(param1, param2, false);
}
stock IsATaxi(carid)
{
	return (VehicleInfo[carid][vJob] == 5);
}
stock CheckEnterCar(playerid, vehicleid)
{
	if(GetPlayerVirtualWorld(playerid)!=1228)
	{
		if(VehicleInfo[vehicleid][vJob] != 0)
		{
		    new hour,minuite,second;
		    gettime(hour,minuite,second);
		    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 18 ))
			{
		 		SendError(playerid,"Гос.организации могут работать с 18:00 до 10:00");
		 		ExitCar(playerid);
		 		return 1;
			}
			if(PlayerInfo[playerid][pJob] != VehicleInfo[vehicleid][vJob])
			{
			    SendError(playerid,"У вас нет ключей от этого транспорта");
				ExitCar(playerid);
			}
			else if(!InJob[playerid] && VehicleInfo[vehicleid][vJob] == JOB_COLLECTOR)
			{
				Dialog_Open(playerid,INVALID_DIALOG_ID,0,"{43CD80}Информация","\n\n\\c{FFFFFF}Сначала переоденьтесь в здании центрального банка\n\n","Скрыть","");
				ExitCar(playerid);
			}
		}
		else if(VehicleInfo[vehicleid][vTeam] != 0)
		{
			if(!TeamDuty[playerid] && VehicleInfo[vehicleid][vTeam] != TEAM_LICENSERS && (!InJob[playerid] && VehicleInfo[vehicleid][vJob] == JOB_COLLECTOR))
			{
		        SendError(playerid,"Служебный транспорт доступен только во время работы");
	   			ExitCar(playerid);
				return false;
			}
			if(VehicleInfo[vehicleid][vJob] == JOB_TAXI){
				if(GetVehicleModelEx(vehicleid) == 469 && PlayerInfo[playerid][Taxi_Skill] < 500){
					SendError(playerid,"Ваш навык таксиста недостаточно высок. Необходимо перевезти 500 клиентов");
					return ExitCar(playerid);
				}
				if(GetVehicleModelEx(vehicleid) == 451 && PlayerInfo[playerid][Taxi_Skill] < 200){
					SendError(playerid,"Ваш навык таксиста недостаточно высок. Необходимо перевезти 200 клиентов");
					return ExitCar(playerid);
				}
			}
			if(GetTeamID(playerid) != VehicleInfo[vehicleid][vTeam] && (VehicleInfo[vehicleid][vTeam] != TEAM_LICENSERS || CarTest[playerid] == -1))
			{
				SendError(playerid,"У вас нет ключей от этого транспорта");
				ExitCar(playerid);
			}
			else
			{
			    if(PlayerInfo[playerid][pRank] < VehicleInfo[vehicleid][vRank] && (VehicleInfo[vehicleid][vTeam] != TEAM_LICENSERS || CarTest[playerid] == -1))
			    {
			        SendError(playerid,"Ваш ранг недостаточно высок");
					ExitCar(playerid);
			    }
			}
		}

		if(IsAPlane(vehicleid))
		{
		    if(CarTest[playerid] == -1 || VehicleInfo[vehicleid][vTeam] != TEAM_LICENSERS)
		    {
				if(PlayerInfo[playerid][pFlyLic] < YES_LICENSE)
				{
				    SendError(playerid,"Возможно у вас нет лицензии на полеты, поэтому вы не можете водить этот транспорт");
					ExitCar(playerid);
					return true;
				}
			}
		}
		if(IsABoat(vehicleid))
		{
			if(PlayerInfo[playerid][pBoatLic] < YES_LICENSE)
			{
				SendError(playerid,"Возможно у вас нет лицензии на вождение водного транспорта, поэтому вы не можете водить на этой лодке");
				ExitCar(playerid);
				return true;
			}
		}
		if(IsABike(vehicleid))
		{
			if(PlayerInfo[playerid][pBikeLic] < YES_LICENSE)
			{
	   			SendError(playerid,"Возможно у вас нет лицензии на вождение мотоцикла, поэтому вы не можете водить этот транспорт");
				ExitCar(playerid);
				return true;
			}
		}
		if(!IsABike(vehicleid) && !IsAPlane(vehicleid) && !IsABoat(vehicleid) && !IsAVelik(vehicleid) && !IsAMoped(vehicleid))
		{
			if(CarTest[playerid] == -1 || VehicleInfo[vehicleid][vTeam] != TEAM_LICENSERS)
			{
				if(PlayerInfo[playerid][pCarLic] < YES_LICENSE)
				{
					SendError(playerid,"Возможно у вас нет лицензии на вождение, поэтому вы не можете управлять этим транспортом");
					ExitCar(playerid);
					return true;
				}
			}
		}
	}
	return true;
}
stock ExitCar(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))RemovePlayerFromVehicle(playerid);
	else ClearAnimations(playerid);
	return true;
}
stock SetPlayerMoney(playerid, money)
{
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, money);
	SlotValue[playerid][0] = money;
	return true;
}
forward AntiCheatsOFF(playerid,time);
public AntiCheatsOFF(playerid,time)
{
    AntiCheatOFF[playerid][SPEED_HACK] = time;
	AntiCheatOFF[playerid][MONEY_HACK] = time;
	AntiCheatOFF[playerid][VEH_ROOT_HACK] = time;
	AntiCheatOFF[playerid][HEALTH_HACK] = time;
	AntiCheatOFF[playerid][ARMOUR_HACK] = time;
	AntiCheatOFF[playerid][CAR_HEALTH_HACK] = time;
	return true;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
    if(IsPlayerNPC(playerid)) return true;
	new string[400];
	new vehid = GetPlayerVehicleID(playerid);
	if(oldstate == PLAYER_STATE_DRIVER && GetPVarInt(playerid, "speedo_object"))
	{
        DestroyPlayerObject(playerid, GetPVarInt(playerid, "speedo_object"));
        DeletePVar(playerid, "speedo_object");
    }
	if(newstate == 9)
	{
	    if(pTemp[playerid][SPECTPLAYER] == false && !PlayerInfo[playerid][pAdmin]) ToCheat(1,playerid);
	}
	if(oldstate == PLAYER_STATE_PASSENGER && newstate == PLAYER_STATE_PASSENGER )
	{
		format(string,sizeof(string),"%s[%d] возможно читерит",PlayerName[playerid],playerid);
  		SendAdminsMessage(COLOR_GREEN,string);
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    if(oldstate == PLAYER_STATE_PASSENGER)
	    {
	        format(string,sizeof(string),"%s[%d] возможно читерит",PlayerName[playerid],playerid);
	        SendAdminsMessage(COLOR_GREEN,string);
	    }
	}
    if(oldstate == 2)
    {
        if(TimetoReturn[playerid]==0)
        {
	        if(pTemp[playerid][pArendaCar]==pTemp[playerid][pcarid])
			{
				TimetoReturn[playerid]=120;
				SendError(playerid,"У вас есть 2 минуты чтобы вернуться обратно в транспорт");
			}
		}
		pTemp[playerid][pcarid] = INVALID_VEHICLE_ID;

    }
	if((newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER) && IsACop(playerid)){
		if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID)CallLocalFunction("callcmd::put", "is", playerid, IntToStr(GotoInfo[playerid][gtID]));
	}
	//начало невстате
	if(newstate==2)
	{
		new carid = GetPlayerVehicleID(playerid);
		if(IsAVelik(carid))
		{
			GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot, objective);
			SetVehicleParamsEx(carid,true,lights,alarm,doors,bonnet,boot,objective);
			new Float:pos[3];
			SetPVarInt(playerid, "speedo_object", CreatePlayerObject(playerid, 19482,0.0,0.0,0.0,0.0,0.0,0.0));
			GetVehicleModelInfo(GetVehicleModelEx(carid),VEHICLE_MODEL_INFO_SIZE,pos[0],pos[1],pos[2]);
			AttachPlayerObjectToVehicle(playerid, GetPVarInt(playerid, "speedo_object"),carid,pos[0]-(pos[0]*0.1),pos[1]-(pos[1]*1.7),pos[2]/2,0.0,0.0,230.0);
		}
	    if(IsAVelik(carid)) SetEngineStatus(carid,true, playerid);
	    if(VehicleInfo[vehid][vJob]>0)
	    {
	        if(PlayerInfo[playerid][pJob]!=VehicleInfo[vehid][vJob]) ToCheat(1,playerid);
		    switch(VehicleInfo[vehid][vJob])
		    {
		        case 1..5: VehicleInfo[vehid][vFilled]=1;
		        case 11:VehicleInfo[vehid][vFilled]=1;
		        case 13..14:VehicleInfo[vehid][vFilled]=1;
				default: VehicleInfo[vehid][vFilled]=0;
			}
		}
		if(VehicleInfo[vehid][vFilled]>0)
		{
		    if((VehicleInfo[vehid][vPlayer]!=-1) && VehicleInfo[vehid][vPlayer]!=playerid)return SendError(playerid,"Этот транспорт уже арендуют"),RemovePlayerFromVehicle(playerid);
		    if(PlayerInfo[playerid][pJob] != VehicleInfo[vehid][vJob]) return RemovePlayerFromVehicle(playerid);
			if(PlayerInfo[playerid][pJob] == VehicleInfo[vehid][vJob] && pTemp[playerid][pArendaCar] != vehid)
			{
			    if(pTemp[playerid][pArendaCar]!=-1)
				{
				    SendError(playerid,"Вы уже арендуете рабочий транспорт");
			 		return RemovePlayerFromVehicle(playerid);
				}
			    format(string,sizeof(string),"\n\n\\c{FFFFFF}Стоимость аренды этого транспорта составляет {42B02C}$%d{FFFFFF}\n\\c{FAAC58}Вы получите бесплатную заправку при аренде\n\n\\c{FFFFFF}Обратите внимание, что этот транспорт необходимо вернуть в том состоянии, в котором вы его арендовали\n\\cВ ином случае вам будет выписан чек за порчу государственного имущества\n\n",GLS[15]);
				Dialog_Open(playerid,RABOTABUS+1,DIALOG_STYLE_MSGBOX,"{43CD80}Аренда транспорта",string,"Согласен","Отмена");
			}
		}
	    pTemp[playerid][pcarid] = vehid;
	    GameTextForPlayer(playerid,VehicleName[GetVehicleModelEx(carid)-400],3000,1);
	    VehicleSeat[carid][0] = playerid;
		GetVehicleHealth(carid,VehicleHealth[carid]);
	    GetVehicleZAngle(carid,vRut[playerid][0]);
	    if(pTemp[playerid][pArendaCar]!=-1 && VehicleInfo[carid][vJob]==PlayerInfo[playerid][pJob]) TimetoReturn[playerid]=0;
	    if(PlayerInfo[playerid][pJob] == JOB_COLLECTOR)
	    {
		    if(IsPlayerInIncVehicle(playerid))
		    {
			    if(InJob[playerid] == 1)
			    {
					new rand = random(sizeof(IncCP));
					TogglePlayerDynamicCP(playerid, IncCP[rand][0], true);
					SendInfo(playerid,"Едьте в обозначенное на карте место");
					NumInc_CP[playerid] = rand;
					SetPlayerColor(playerid,0xBFC0C2FF);
					InJob[playerid] = 2;
			    }
			    else if(InJob[playerid] == 2)
			    {
			        new rand = NumInc_CP[playerid];
					TogglePlayerDynamicCP(playerid, IncCP[rand][0], true);
					SetPlayerColor(playerid,0xBFC0C2FF);
			    }
			    else if(InJob[playerid] == 4)
			    {
					TogglePlayerDynamicCP(playerid, BankCP[0], true);
			        InJob[playerid] = 5;
			    }
		    }
	    }
	    PlayerCar[playerid] = carid;
	    PlayerSeat[playerid] = 0;
	    SetCameraBehindPlayer(playerid);
		if(!IsAVelik(carid) && !IsAPlane(carid))
		{
            if(PlayerInfo[playerid][pGold])
            {
				new number = GetVehicleID(carid);
			    new color;
			    if(IsAOwnableCar(carid))
				{
					if(CarInfo[number][cLock])color=-6749953;
					else color=-1;
				}
				else
				{
				    if(VehicleInfo[carid][vJob]!=0 || IsAArendCar(carid) )
				    {
				        if(VehicleInfo[carid][vLock])color=-6749953;
						else color=-1;
				    }
					else color=-1;
				}
				speeddraw[playerid][0] = CreatePlayerTextDraw(playerid, 559.891174, 374.763397, "usebox");
				PlayerTextDrawLetterSize(playerid, speeddraw[playerid][0], 0.000000, 3.859426);
				PlayerTextDrawTextSize(playerid, speeddraw[playerid][0], 435.539550, 0.000000);
				PlayerTextDrawAlignment(playerid, speeddraw[playerid][0], 1);
				PlayerTextDrawColor(playerid, speeddraw[playerid][0], 0);
				PlayerTextDrawUseBox(playerid, speeddraw[playerid][0], true);
				PlayerTextDrawBoxColor(playerid, speeddraw[playerid][0], 572662425);
				PlayerTextDrawSetShadow(playerid, speeddraw[playerid][0], 0);
				PlayerTextDrawSetOutline(playerid, speeddraw[playerid][0], 0);
				PlayerTextDrawFont(playerid, speeddraw[playerid][0], 0);
				
				speeddraw[playerid][1] = CreatePlayerTextDraw(playerid, 439.789306, 362.766510, VehicleName[GetVehicleModelEx(carid)-400]);
				PlayerTextDrawLetterSize(playerid, speeddraw[playerid][1], 0.230887, 0.903108);
				PlayerTextDrawTextSize(playerid, speeddraw[playerid][1], 21.370819, 20.153717);
				PlayerTextDrawAlignment(playerid, speeddraw[playerid][1], 1);
				PlayerTextDrawColor(playerid, speeddraw[playerid][1], -1);
				PlayerTextDrawSetShadow(playerid, speeddraw[playerid][1], 0);
				PlayerTextDrawSetOutline(playerid, speeddraw[playerid][1], 0);
				PlayerTextDrawBackgroundColor(playerid, speeddraw[playerid][1], 255);
				PlayerTextDrawFont(playerid, speeddraw[playerid][1], 0);
				PlayerTextDrawSetProportional(playerid, speeddraw[playerid][1], 1);

				speeddraw[playerid][2] = CreatePlayerTextDraw(playerid, 538.395202, 376.622375, "ENGINE");
				PlayerTextDrawLetterSize(playerid, speeddraw[playerid][2], 0.164680, 0.903015);
				PlayerTextDrawAlignment(playerid, speeddraw[playerid][2], 2);
				PlayerTextDrawColor(playerid, speeddraw[playerid][2], color);
				PlayerTextDrawUseBox(playerid, speeddraw[playerid][2], true);
				PlayerTextDrawBoxColor(playerid, speeddraw[playerid][2], 0);
				PlayerTextDrawSetShadow(playerid, speeddraw[playerid][2], 0);
				PlayerTextDrawSetOutline(playerid, speeddraw[playerid][2], 0);
				PlayerTextDrawBackgroundColor(playerid, speeddraw[playerid][2], 51);
				PlayerTextDrawFont(playerid, speeddraw[playerid][2], 2);
				PlayerTextDrawSetProportional(playerid, speeddraw[playerid][2], 1);

				speeddraw[playerid][3] = CreatePlayerTextDraw(playerid, 538.395202, 388.119049, "LIGHTS");
				PlayerTextDrawLetterSize(playerid, speeddraw[playerid][3], 0.164680, 0.903015);
				PlayerTextDrawAlignment(playerid, speeddraw[playerid][3], 2);
				PlayerTextDrawColor(playerid, speeddraw[playerid][3], color);
				PlayerTextDrawUseBox(playerid, speeddraw[playerid][3], true);
				PlayerTextDrawBoxColor(playerid, speeddraw[playerid][3], 0);
				PlayerTextDrawSetShadow(playerid, speeddraw[playerid][3], 0);
				PlayerTextDrawSetOutline(playerid, speeddraw[playerid][3], 0);
				PlayerTextDrawBackgroundColor(playerid, speeddraw[playerid][3], 51);
				PlayerTextDrawFont(playerid, speeddraw[playerid][3], 2);
				PlayerTextDrawSetProportional(playerid, speeddraw[playerid][3], 1);

				speeddraw[playerid][4] = CreatePlayerTextDraw(playerid, 538.395202, 398.776031, "DOORS");
				PlayerTextDrawLetterSize(playerid, speeddraw[playerid][4], 0.164680, 0.903015);
				PlayerTextDrawAlignment(playerid, speeddraw[playerid][4], 2);
				PlayerTextDrawColor(playerid, speeddraw[playerid][4], color);
				PlayerTextDrawUseBox(playerid, speeddraw[playerid][4], true);
				PlayerTextDrawBoxColor(playerid, speeddraw[playerid][4], 0);
				PlayerTextDrawSetShadow(playerid, speeddraw[playerid][4], 0);
				PlayerTextDrawSetOutline(playerid, speeddraw[playerid][4], 0);
				PlayerTextDrawBackgroundColor(playerid, speeddraw[playerid][4], 51);
				PlayerTextDrawFont(playerid, speeddraw[playerid][4], 2);
				PlayerTextDrawSetProportional(playerid, speeddraw[playerid][4], 1);
				
				format(string, sizeof(string), "FUEL: ~p~%.0f", Fuel[carid]);
				speeddraw[playerid][5] = CreatePlayerTextDraw(playerid, 490.031982, 369.545257, string);
				PlayerTextDrawLetterSize(playerid, speeddraw[playerid][5], 0.164680, 0.903015);
				PlayerTextDrawAlignment(playerid, speeddraw[playerid][5], 1);
				PlayerTextDrawColor(playerid, speeddraw[playerid][5], -1);
				PlayerTextDrawSetShadow(playerid, speeddraw[playerid][5], 0);
				PlayerTextDrawSetOutline(playerid, speeddraw[playerid][5], 0);
				PlayerTextDrawBackgroundColor(playerid, speeddraw[playerid][5], 51);
				PlayerTextDrawFont(playerid, speeddraw[playerid][5], 2);
				PlayerTextDrawSetProportional(playerid, speeddraw[playerid][5], 1);

				speeddraw[playerid][6] = CreatePlayerTextDraw(playerid, 477.656555, 379.141357, "0");
				PlayerTextDrawLetterSize(playerid, speeddraw[playerid][6], 0.589847, 2.498517);
				PlayerTextDrawAlignment(playerid, speeddraw[playerid][6], 2);
				PlayerTextDrawColor(playerid, speeddraw[playerid][6], -1);
				PlayerTextDrawUseBox(playerid, speeddraw[playerid][6], true);
				PlayerTextDrawBoxColor(playerid, speeddraw[playerid][6], 0);
				PlayerTextDrawSetShadow(playerid, speeddraw[playerid][6], 0);
				PlayerTextDrawSetOutline(playerid, speeddraw[playerid][6], 1);
				PlayerTextDrawBackgroundColor(playerid, speeddraw[playerid][6], 255);
				PlayerTextDrawFont(playerid, speeddraw[playerid][6], 3);
				PlayerTextDrawSetProportional(playerid, speeddraw[playerid][6], 1);

				speeddraw[playerid][7] = CreatePlayerTextDraw(playerid, 518.274047, 383.160736, "razdelitel");
				PlayerTextDrawLetterSize(playerid, speeddraw[playerid][7], -0.001872, 2.250502);
				PlayerTextDrawTextSize(playerid, speeddraw[playerid][7], 568.638671, -1.259606);
				PlayerTextDrawAlignment(playerid, speeddraw[playerid][7], 2);
				PlayerTextDrawColor(playerid, speeddraw[playerid][7], 0);
				PlayerTextDrawUseBox(playerid, speeddraw[playerid][7], true);
				PlayerTextDrawBoxColor(playerid, speeddraw[playerid][7], COLOR_LIGHTBLUE);
				PlayerTextDrawSetShadow(playerid, speeddraw[playerid][7], 0);
				PlayerTextDrawSetOutline(playerid, speeddraw[playerid][7], 0);
				PlayerTextDrawFont(playerid, speeddraw[playerid][7], 0);

				new temptext[56];
	            if(IsAOwnableCar(carid)) format(temptext, sizeof(temptext), "MILEAGE: ~p~%.1f", CarInfo[number][cMilage]);
				else format(temptext, sizeof(temptext), "00000000");
				speeddraw[playerid][8] = CreatePlayerTextDraw(playerid, 477.907623, 405.827789, temptext);
				PlayerTextDrawLetterSize(playerid, speeddraw[playerid][8], 0.153053, 0.919811);
				PlayerTextDrawAlignment(playerid, speeddraw[playerid][8], 2);
				PlayerTextDrawColor(playerid, speeddraw[playerid][8], -1);
				PlayerTextDrawSetShadow(playerid, speeddraw[playerid][8], 0);
				PlayerTextDrawSetOutline(playerid, speeddraw[playerid][8], 0);
				PlayerTextDrawBackgroundColor(playerid, speeddraw[playerid][8], 51);
				PlayerTextDrawFont(playerid, speeddraw[playerid][8], 2);
				PlayerTextDrawSetProportional(playerid, speeddraw[playerid][8], 1);
				new iand = (IsAOwnableCar(carid))?9:8;
			    for(new i; i < iand ; i++)PlayerTextDrawShow(playerid, speeddraw[playerid][i]);
			}
  		}
     	CheckEnterCar(playerid, carid);
		if(IsACar(carid))
		{
	        if(GetEngineStatus(carid) <= 0)
	        {
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чтобы завести двигатель, введите {FFFFFF}'/en'{7396FB} или нажмите {FFFFFF}'2'");
				SetEngineStatus(carid,false, playerid);
			}
		}
		if(newstate == 2 && GetVehicleModelEx(GetPlayerVehicleID(playerid)) == 433 || GetVehicleModelEx(GetPlayerVehicleID(playerid)) ==548) SendInfo(playerid,"Чтобы начать развозку оборудования, введите {7396FB}'/carm'");
	    new model = GetVehicleModelEx(carid);
		if(model == 528 || (model >= 596 && model <= 599) && IsACop(playerid) && PlayerInfo[playerid][pRank] > 5) SendInfo(playerid,"Используйте {7396FB}'CTRL'{ffffff}, чтобы выбросить полосу с шипами");
	    if(IsAOwnableCar(carid))
	    {
	        new number = GetVehicleID(carid);
	        if(CarInfo[number][cLock])
	        {
	            RemovePlayerFromVehicle_Ex(playerid);
	            return true;
	        }
		    if(IsASellCar(carid))
		    {
				format(string,sizeof(string),"\n\n\\c{7396FB}Этот транспорт продаётся\n\n\\c{FFFFFF}Модель: {C9EAFF}%s [ID %d]{FFFFFF}\n\\cНомер: {C9EAFF}%s{FFFFFF}\n\\cСтоимость: {C9EAFF}$%d{FFFFFF}\n\n\\c{FF4400}Чтобы купить нажмите 'Купить'\n\n",
				VehicleName[GetVehicleModelEx(carid)-400],GetVehicleModelEx(carid),OwnCarNumber(carid),CarInfo[number][cCost]);
				Dialog_Open(playerid,11,0,"{43CD80}Транспорт продаётся",string,"Купить","Отмена");
			}
		    else
		    {
			    if(CarInfo[number][cAlarmON])
			    {
				    SetAlarmStatus(carid,true);
				    AlarmTime[carid] = 20;
					foreach(new i:Player)
					{
					    if(!IsPlayerConnected(i)) continue;
					    if(IsPlayerHaveCar(i,carid))
					    {
							new Float:X,Float:Y,Float:Z;
							GetVehiclePos(carid, X,Y,Z);
							format(string,sizeof(string),"[Информация] {FFFFFF}На транспорте [%s] сработала сигнализация",OwnCarNumber(carid));
							SendClientMessage(i,COLOR_YELLOW,string);
							SendClientMessage(i,COLOR_RED,"[Информация] {FFFFFF}Местоположение транспорта указано на карте");
							EnableGPSForPlayer(i,X,Y,Z);
							break;
						}
					}
				}
				if(CarInfo[number][cShtraf] > 0)
				{
				    format(string,sizeof(string),"\n\n\\c{FFFFFF}Этот транспорт находится на штрафстоянке\n\n\\cВладелец должен внести за него залог\n\\cРазмер залога: $%d\n\n",CarInfo[number][cShtraf]);
				    Dialog_Open(playerid,INVALID_DIALOG_ID,0,"{43CD80}Информация",string,"Скрыть","");
				    RemovePlayerFromVehicle(playerid);
				}
		    }
	    }
		if(IsAArendCar(vehid))
		{
			if(ArendKey[playerid] == INVALID_VEHICLE_ID)
			{
				if(!IsAArended(vehid))
				{
					new jstr[300];
					new cost;
					switch(GetVehicleModel(vehid))
					{
					case 454: cost = 10000;
					case 484: cost = 12000;
					case 558: cost = 9000;
					case 541: cost = 22000;
					case 560: cost = 13000;
					case 409: cost = 10000;
					case 462: cost = 250;
					case 469: cost = 15000;
					case 487: cost = 20000;
					default: cost = GLS[14];
					}
					format(jstr,sizeof(jstr),"\n\n\\c{FFFFFF}Транспорт для аренды\n\n\\c{7396FB}Модель: %s\n\\cСтоимость: $%d\n\n\\c{AFAFAF}Чтобы арендовать нажмите 'Аренда'\n\n",VehicleName[GetVehicleModelEx(vehid)-400], cost);
					Dialog_Open(playerid, AREND_DIALOG, 0, "{43CD80}Аренда", jstr, "Аренда", "Отмена");
				}
				else
				{
				    SendError(playerid,"Этот транспорт уже арендуют");
					RemovePlayerFromVehicle(playerid);
				}
			}
			else
			{
				if(ArendKey[playerid] != GetArendCarID(vehid))
				{
					SendError(playerid,"Вы уже арендуете транспорт! Используйте [/unrentcar], чтобы отказаться от аренды");
					RemovePlayerFromVehicle(playerid);
				}
			}
		}
	    if(VehicleInfo[carid][vTeam] != 0)
	    {
	        if(VehicleInfo[carid][vTeam] == TEAM_LICENSERS && CarTest[playerid] != -1 && GetVehicleModelEx(carid)== 426)
	        {
	            TogglePlayerDynamicRaceCP(playerid,Test_CP[0],true);
	            J_RepairVehicle(GetPlayerVehicleID(playerid));
	            Dialog_Open(playerid,0,0,"{43CD80}Информация","{FFFFFF}\n\n\\cЕдьте по чекпоинтам не нарушая ПДД, иначе вы провалите тест\n\\c{B2D63B}Ни в коем случае не выходите из автомобиля, иначе вы также провалите тест!\n\n","Скрыть","");
			}
	        else if(GetTeamID(playerid) != VehicleInfo[carid][vTeam])
	        {
		        SendError(playerid,"У вас нет ключей от этого транспорта");
				RemovePlayerFromVehicle(playerid);
	        }
	    }
	    if(PlayerInfo[playerid][pJob] == 17 )
		{
		    if(InJob[playerid] == 3)
		    {
				TogglePlayerDynamicCP(playerid, MinerDownCP, false);
				SendError(playerid,"Вы уронили сено");
				InJob[playerid] = 1;
				crafttry[playerid] = 0;
			    RemovePlayerAttachedObjectEx(playerid, 6);
				channelfarm[playerid] = random(40);
				SetPlayerMapIcon(playerid, 97, MinPos[channelfarm[playerid]][0], MinPos[channelfarm[playerid]][1], MinPos[channelfarm[playerid]][2], 56, 0, MAPICON_LOCAL);
				TogglePlayerDynamicCP(playerid, MinerCP[channelfarm[playerid]], true);
			}
		}
		IsDropBomb(playerid);
        if(vehid==INVALID_VEHICLE_ID || VehicleID[playerid]!=vehid)
		{
		    if(GetVehicleModelEx(vehid)!=538 && GetVehicleModelEx(vehid)!=449 && GetVehicleModelEx(vehid)!=570) ToCheat(1,playerid);
		}
	   // if(IsAVelik(vehid) || IsABike(vehid)) PTick[playerid] = GetTickCount() + 250;
	    if(vehid == pTemp[playerid][pArendaCar] && BusTime[playerid] != 0)
	    {
	        BusTime[playerid]=0;
	        SendError(playerid,"Продолжайте движение в том же направлении");
	    }

	}
	///конец невстате
	if(newstate == PLAYER_STATE_DRIVER)
    {
        if(GetVehicleModelEx(GetPlayerVehicleID(playerid))!=538 && GetVehicleModelEx(GetPlayerVehicleID(playerid))!=449 && GetVehicleModelEx(GetPlayerVehicleID(playerid))!=570 && GetVehicleModelEx(GetPlayerVehicleID(playerid))!=483)
		{
	        new model = GetPlayerVehicleSeat(playerid);
	        if(model != 128)
	        {
	            if(!model)
	            {
	                model = GetVehicleModelEx(GetPlayerVehicleID(playerid));
	                if(!(400 <= model <= 611) || Pb[model - 400 >>> 3] >>> ((model - 400 & 7) << 2) & 0xF == 15) ToCheat(1,playerid);
	            }
	            else ToCheat(1,playerid);
	        }
		}
    }
    else if(newstate == PLAYER_STATE_PASSENGER)
    {
        new model = GetVehicleModelEx(vehid);
        if(GetVehicleModelEx(GetPlayerVehicleID(playerid))!=538 && GetVehicleModelEx(GetPlayerVehicleID(playerid))!=449 && GetVehicleModelEx(GetPlayerVehicleID(playerid))!=570 && GetVehicleModelEx(GetPlayerVehicleID(playerid))!=483)
        {
	        if(400 <= model <= 611)
	        {
	            model -= 400;
	            new seat = GetPlayerVehicleSeat(playerid);
	            if(seat != 128)
	            {
	                model = (Pb[model >>> 3] >>> ((model & 7) << 2)) & 0xF;
	                if(!model || model == 15) ToCheat(1,playerid);
	                else if(!(0 < seat <= model)) ToCheat(1,playerid);
	            }
	        }
	        else ToCheat(1,playerid);
		}
        if(Vehs[vehid][vCena] != 0)
	    {
	        new idvoditel = GetVehicleSeat(vehid,0);
	        if(idvoditel != INVALID_PLAYER_ID)
		        {
		        if(SlotValue[playerid][0] < Vehs[vehid][vCena])
				{
				    SetPlayerChatBubble(playerid, "Показал(а) водителю проездной", COLOR_PURPLE, 15.0, 5000);
				    ProxDetector(25.0, playerid, "Показал(а) водителю проездной", COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
	            else
				{
				    strring = "";
					GiveMoney(playerid,-Vehs[vehid][vCena]);
					GiveMoney(idvoditel, Vehs[vehid][vCena]);
					format(strring,93,"[Информация] {FFFFFF}Пассажир %s оплатил билет, добавлено к зарплате",Name(playerid));
					SendClientMessage(idvoditel,0x6495EDFF,strring);
				}
			}
	    }
		////
	    new seat = GetPlayerVehicleSeat(playerid);
	    if(PlayerCar[playerid] != INVALID_VEHICLE_ID) VehicleSeat[PlayerCar[playerid]][PlayerSeat[playerid]] = -1;
	    VehicleSeat[vehid][seat] = playerid;
	    PlayerCar[playerid] = vehid;
	    PlayerSeat[playerid] = seat;
	    SetCameraBehindPlayer(playerid);
	    if(IsATaxi(vehid))
	    {
	        new id = GetVehicleSeat(vehid, 0);
	        if(id != INVALID_PLAYER_ID && PlayerInfo[id][pJob] == JOB_TAXI)
	        {
	            if(TaxiTarif[id] > 0)
				{
		            Taxi_GO[playerid] = 0;
		            TaxiPrice[playerid] = 0;
		            TaxiDistance[playerid] = 0;
		            PlayerTextDrawShow(playerid,TaxiDraw[playerid]);
					TextDrawShowForPlayer(playerid, Taximeter[0]);
					TextDrawShowForPlayer(playerid, Taximeter[1]);
					TextDrawShowForPlayer(playerid, Taximeter[2]);
					TextDrawShowForPlayer(playerid, Taximeter[3]);
		            PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"$0");
		            format(string,sizeof(string),"%s сел к вам в такси",Name(playerid));
		            SendClientMessage(id,COLOR_VALIK,string);
		            if(SlotValue[playerid][0]<=TaxiTarif[id])
					{
						SendInfo(id,"У игрока, который к вам сел, не хватит денег, чтобы оплатить за проезд");
						SendError(playerid,"У вас не достаточно денег чтобы ездить на такси");
						RemovePlayerFromVehicle(playerid);
					}
		            ShowPlayerDialogEx(playerid, 247, 2, "{43CD80}Куда ехать?", "Выбрать пункт в GPS\nОтметить точку на карте\nОбъяснить маршрут самостоятельно", "Выбор", "Отмена");
				}
				else SendInfo(id,"К вам в такси сел пассажир, но вы не получите с него прибыли, потому что не установили тариф");
	        }
	    }
	    ////

    }
	AntiCheatsOFF(playerid, 2);
	if(oldstate == 2 || oldstate == PLAYER_STATE_PASSENGER)
	{
	    new vehicleid = PlayerCar[playerid];
		new seat = PlayerSeat[playerid];
		Controllable[playerid] = true;
		SetCameraBehindPlayer(playerid);
		if(!IsAPlane(vehicleid) && !IsAVelik(vehicleid))
		{
            if(PlayerInfo[playerid][pGold])
				for(new i; i < 9; i++)
					DestroyPlayerTD(playerid, speeddraw[playerid][i]);
		}
		if(vehicleid != INVALID_VEHICLE_ID && GetVehicleSeat(vehicleid, seat) == playerid) VehicleSeat[vehicleid][seat] = INVALID_PLAYER_ID;
		EnterVehicle[playerid] = INVALID_VEHICLE_ID;
		if(CarTest[playerid] != -1 && VehicleInfo[vehicleid][vTeam] == TEAM_LICENSERS)
		{
		    new i = CarTest[playerid];
			TogglePlayerDynamicRaceCP(playerid, Test_CP[i], false);
			SendError(playerid,"Вы провалили тест, поскольку вышли из авто");
			CarTest[playerid] = -1;
		}

		if(VehicleInfo[vehicleid][vJob] == JOB_COLLECTOR)
	    {
   			if(InJob[playerid] == 2 && InJob[playerid] != 5 )
		    {
          		new rand = NumInc_CP[playerid];
		        NumInc_CP[playerid]=-1;
		        InJob[playerid]=1;
				TogglePlayerDynamicCP(playerid, IncCP[rand][0], false);
		        SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
		    }
	    }
		if(IsATaxi(vehicleid))
		{
			if(!PlayerSeat[playerid])
			{
    			if(PlayerInfo[playerid][pJob] == JOB_TAXI)
				{
					if(TaxiTarif[playerid] > 0)
					{
						TaxiTarif[playerid] = 0;
					//	SendError(playerid,"Вы теперь не на службе");
						PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
						//====такси новая
					  	TextDrawHideForPlayer(playerid, Taximeter[0]);
						TextDrawHideForPlayer(playerid, Taximeter[1]);
						TextDrawHideForPlayer(playerid, Taximeter[2]);
						TextDrawHideForPlayer(playerid, Taximeter[3]);
						SetDynamicObjectMaterialText(VehObjects[vehicleid][3], 0, "ТАКСИ\n{D94141}АРЕНДОВАНА\n{FF0000}ЗВОНИ {FF4400}999", 130, "Calibri", 20, 0, 0xFFFF0000, 0, 1);
						for(new i;i < 4;i ++)
						{
						    new player = GetVehicleSeat(vehicleid, i);
						    if(!IsPlayerConnected(player)) continue;
							if(player != INVALID_PLAYER_ID)
							{
								SendClientMessage(player,COLOR_GRAY,"[Информация] {FFFFFF}Таксист, который вез вас теперь не на службе");
								PlayerTextDrawHide(player,TaxiDraw[player]);
								//====такси новая
							  	TextDrawHideForPlayer(player, Taximeter[0]);
								TextDrawHideForPlayer(player, Taximeter[1]);
								TextDrawHideForPlayer(player, Taximeter[2]);
								TextDrawHideForPlayer(player, Taximeter[3]);
						      	if(SlotValue[player][0] > TaxiPrice[player]) GiveMoney(playerid,TaxiPrice[player],"Taxi+");
        						GiveMoney(player,-TaxiPrice[player],"Taxi-");
								PlayerTextDrawHide(player,TaxiDraw[player]);
								PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"0");
								PlayerTextDrawSetString(player, TaxiDraw[player],"0");
								TaxiPrice[player] = 0;
								TaxiDistance[player] = 0;
							}
						}
					}
				}
			}
			else if(PlayerSeat[playerid] > 0)
			{
				new id = GetVehicleSeat(vehicleid, 0);
				if(id != INVALID_PLAYER_ID)
				{
 			    	if(SlotValue[playerid][0] > TaxiPrice[playerid]) 	GiveMoney(playerid,-TaxiPrice[playerid]);
 			    	GiveMoney(id,TaxiPrice[playerid]);
					PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
					TextDrawHideForPlayer(playerid, Taximeter[0]);
					TextDrawHideForPlayer(playerid, Taximeter[1]);
					TextDrawHideForPlayer(playerid, Taximeter[2]);
					TextDrawHideForPlayer(playerid, Taximeter[3]);
					PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"$0");
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы взяли $%d с игрока %s за поездку",TaxiPrice[playerid],Name(playerid));
					SendClientMessage(id,COLOR_VALIK,string);
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы отдали $%d таксисту %s за поездку",TaxiPrice[playerid],Name(id));
					SendClientMessage(playerid,COLOR_GRAY,string);
					TaxiPrice[playerid]=0;
					new money;
					for(new i = 1; i < 4; i ++)
					{
						new pseat = GetVehicleSeat(vehicleid, i);
						if(pseat != INVALID_PLAYER_ID) money += TaxiPrice[pseat];
					}
					format(string,sizeof(string),"%d",money);
					PlayerTextDrawSetString(id, TaxiDraw[id],string);
					if(money > 100)PlayerInfo[id][Taxi_Skill]++;
					if(PlayerInfo[id][Taxi_Skill]){
						GiveMoney(id, PlayerInfo[id][Taxi_Skill], "Премия за навык таксиста");
						f(string, "[Информация] {FFFFFF}Вы получили бонус в размере $%d за навык таксиста", PlayerInfo[id][Taxi_Skill]);
						SendClientMessage(id, COLOR_VALIK, string);
					}
					if(QuestProgress[id][3] < QI[3][LastProgress] && AcceptQuest[id][3] == 1 && money > 100)QuestProgress[id][3]++;
					if(QuestProgress[id][3] >= QI[3][LastProgress] && QuestProgress[id][3] < 10000){
						GiveMoney(id, 80000, "Бонус квеста таксиста");
						SendInfo(id, "Вы получили бонус за выполнение квеста {7396FB}'Настоящий бомбила'");
						QuestProgress[id][3] = 10000;
						SaveQuest(id, 3);
						new logtime[3],logdate[3],logtimestring[16];
						getdate(logdate[2],logdate[1],logdate[0]);
						gettime(logtime[0],logtime[1],logtime[2]);
						f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
						WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[id][pID],Name(id),-1,"Система","Бонус за квест таксиста",80000,PlayerIp[id],"127.0.0.1",GetMoney(id));
					}
				}
			}
		}
 	}
	/*
	if(newstate==PLAYER_STATE_PASSENGER || newstate==PLAYER_STATE_DRIVER)
    {
        new vehicleid=GetPlayerVehicleID(playerid);
        if(GetVehicleModelEx(vehicleid)!=538 && GetVehicleModelEx(vehicleid)!=449 && GetVehicleModelEx(vehicleid)!=570)
        {
	        if(vehicleid==INVALID_VEHICLE_ID || VehicleID[playerid]!=vehicleid)
	        {
	            J_Kick(playerid);
	            return 1;
	        }
	 	}
    }
    */
	return true;
}
stock IsAArended(carid)
{
    if(IsAArendCar(carid))
	{
	    new rentid = GetArendCarID(carid);
	    if(ArendInfo[rentid][aRentID]!=INVALID_PLAYER_ID)
	    {
	        return true;
	    }
	}
	return false;
}
public CreateGate(gateid)
{
    gGate[gateid] = CreateDynamicObject(GateInfo[gateid][gObID],GateInfo[gateid][gClose_X],GateInfo[gateid][gClose_Y],GateInfo[gateid][gClose_Z],0,0,GateInfo[gateid][gClose_A],GateInfo[gateid][gWorld]);
	GateInfo[gateid][gCreated] = true;
    return true;
}
public SetBuyGunCamera(playerid)
{
	SetPlayerCameraPos(playerid, 295.1925, -36.7806, 1002.9);
	SetPlayerCameraLookAt(playerid, 295.1925, -39.7806, 1002.9);
	InterpolateCameraPos(playerid, 295.1925, -35.7806, 1002.9, 295.1925, -38.7, 1002.9, 1000);
	InterpolateCameraLookAt(playerid, 295.1925, -38.7, 1002.9, 295.20001221, -39.29999924, 1001.59997559, 1000, CAMERA_MOVE);
	return true;
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	new string[800];
	new rand = NumInc_CP[playerid];
	new gopost = PlayerGoPost[playerid];
	new jail = PlayerJailCP[playerid];
	if(checkpointid == MinerCP[channelfarm[playerid]])
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
		    if(!IsANotControllable(playerid))
		    {
				if(PlayerInfo[playerid][pJob] == 17)
				{
					if(InJob[playerid] == 1)
					{
						new mes[144];
						SendInfo(playerid,"Вы начали сборку урожая. У вас есть {7396FB}15 секунд");
						format(mes,sizeof(mes),"Нажимайте {7396FB}~k~~SNEAK_ABOUT~{FFFFFF}, когда крестик будет в центре");
						SendInfo(playerid,mes);
						TogglePlayerControllable(playerid,0);
						timerkc1[playerid] = SetTimerEx("KillCraftTD1",16500,false,"d",playerid);
						ApplyAnimation(playerid,"BOMBER", "BOM_Plant",1.0,1,1,1,1,4000,1);
						SetPVarInt(playerid,"SPAMTIMER", 1);
						CraftTD1(playerid);
					}
				}
			}
		}
		return true;
	}
	else if(jail != -1 && checkpointid == JailCP[jail])
	{
	    new num=0;
		if(!IsPlayerInAnyVehicle(playerid))return SendInfo(playerid,"Вы должны быть в одном транспорте с задержанным");
		if(IsPlayerInAnyVehicle(playerid))
		{
			new carid = GetPlayerVehicleID(playerid);
			foreach(new i:Player)
			{
			    if(i != playerid)
			    {
					if(IsPlayerConnected(i))
					{
						if(PlayerInfo[i][pWanted] > 0)
						{
						    if(IsPlayerInVehicle(i,carid))
							{
								GiveMoney(playerid, GLS[16],"Prison");
								PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
								PlayerInfo[i][pJailTime] = PlayerInfo[i][pWanted] * 3600;
								PlayerInfo[i][pBailPrice] = PlayerInfo[i][pWanted] * 300000;
								ArrestID[i] = playerid;
								if(SlotValue[i][14] >0 || SlotValue[i][11] >0) SendClientMessage(i,COLOR_RED,"[Информация] {FFFFFF}У вас отобрали наркотики и материалы");
								SettingSpawn(i);
								_ResetGun(i);
								PlayerInfo[i][pWanted] = 0;
								SetPlayerWantedLevelEx(i,0);
								PlayerSpawn(i);
								SlotValue[i][14] = 0;
								SlotValue[i][11] = 0;
								format(string, sizeof(string), "Вы были посажены в тюрьму на %d минут", (PlayerInfo[i][pJailTime]/60));
								SendClientMessage(i, COLOR_LIGHTRED, string);
								SendClientMessage(i, COLOR_LIGHTBLUE, "Используйте /advokats, чтобы найти адвоката, который вам поможет выйти отсюда");
								format(string, sizeof(string), "Вы посадили %s в тюрьму на %d минут", PlayerName[i],(PlayerInfo[i][pJailTime]/60));
								SendClientMessage(playerid, COLOR_GREEN, string);
								format(string,sizeof(string),"[%s] %s %s[%d] посадил %s[%i] в тюрьму на %d минут",OrgInfo[PlayerInfo[playerid][pMember]][oName], GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), Name(playerid), playerid, Name(i), i, (PlayerInfo[i][pJailTime]/60));
								SendCopsMessage(COLOR_LIGHTBLUE,string);
								SetPlayerVirtualWorld(i, 0);
								SetPlayerInterior(i, 0);
								TogglePlayerControllable(i, true);
								num = 4;
								break;
							}
                            else if(num!=4)num = 2;
						}
						else if(num!=4)num = 1;
					}
				}
			}
		}
		if(num==1) SendError(playerid,"Вы не можете посадить игрока который не находится в розыске");
		if(num ==2) SendError(playerid,"Игрок которого вы хотите посадить должен находиться у вас в машине");
		num=0;
		TogglePlayerDynamicCP(playerid, JailCP[jail], false);
		return true;
	}
	else if(checkpointid == MinerDownCP)
	{
	    if(PlayerInfo[playerid][pJob] == 17)
		{
            if(GetPlayerVirtualWorld(playerid)!=0)SetPlayerVirtualWorld(playerid, 0);
			if(InJob[playerid] == 3)
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
			        if(JobHack[playerid]>gettime()) ToCheat(1,playerid);
				    ferman[playerid]++;
                    JobHack[playerid]=gettime()+20;
        			format(string,sizeof(string), "Сена перетащено: {7396FB}%d тюков{ffffff}. Заработано: {7396FB}$%d", ferman[playerid],ferman[playerid]*GLS[4]); //сучка
        			SendInfo(playerid,string);
					GiveMoney(playerid, GLS[4], "Ферма");
				    InJob[playerid] = 1;
				    RemovePlayerAttachedObjectEx(playerid, 6);
				    ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 1, 1, 0, 0, 1);
				    if(GLS[27]<10000)GLS[27] +=1;
				    else GLS[27] +=2;
					if(QuestProgress[playerid][2] < QI[2][LastProgress] && AcceptQuest[playerid][2] == 1)QuestProgress[playerid][2]++;
					if(QuestProgress[playerid][2] >= QI[2][LastProgress] && QuestProgress[playerid][2] < 10000){
						GiveMoney(playerid, 50000, "Бонус квеста фермера");
						SendInfo(playerid, "Вы получили бонус за выполнение квеста {7396FB}'Колхозник'");
						QuestProgress[playerid][2] = 10000;
						SaveQuest(playerid, 3);
						new logtime[3],logdate[3],logtimestring[16];
						getdate(logdate[2],logdate[1],logdate[0]);
						gettime(logtime[0],logtime[1],logtime[2]);
						f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
						WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Бонус за квест фермера",80000,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
					}
				    GiveBizMoney(BIZ_ELECTRO_LS,12);
			    	format(string, sizeof(string), "Склад фермы\n\n\n{D94141}%d{FFFFFF} продуктов\nСтоимость закупки: {D94141}$%d\n\n{D38A37}Для загрузки посигнальте",GLS[27],GLS[31]);
					UpdateDynamic3DTextLabelText(FactoryText[1], COLOR_WHITE, string);
				    TogglePlayerDynamicCP(playerid, MinerDownCP, false);
					channelfarm[playerid] = random(40);
					SetPlayerMapIcon(playerid, 97, MinPos[channelfarm[playerid]][0], MinPos[channelfarm[playerid]][1], MinPos[channelfarm[playerid]][2], 56, 0, MAPICON_LOCAL);
				    TogglePlayerDynamicCP(playerid, MinerCP[channelfarm[playerid]], true);
			    }
			}
		}
		return true;
	}
	else if(checkpointid == Binko_CP) return GameTextForPlayer(playerid, "~g~Press ~k~~SNEAK_ABOUT~", 1000, 3);
	else if(checkpointid == WineCP)
	{
	    TogglePlayerDynamicCP(playerid, WineCP, false);
	    RemovePlayerAttachedObject(playerid, 6);
	    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		ferman[playerid]++;
		GLS[70] += random(10)+20;
     	static _fmt_message[] = "Вы доставили урожай. Заработано {7396FB}$%d";
     	new _message[sizeof(_fmt_message) + (6 - 4) + 2*(6 - 4)];
     	format(_message, sizeof(_message), _fmt_message, ferman[playerid]*GLS[4]);
		SendInfo(playerid, _message);
		GiveMoney(playerid, GLS[4]);
		format(string, sizeof(string), "Склад виноградника\n\n\n{D94141}%d{FFFFFF} килограмм урожая\n\n{D38A37}Сырьё для изготовления",GLS[70]);
		UpdateDynamic3DTextLabelText(WineText[0], -1, string);
		UpdateDynamic3DTextLabelText(WineText[1], -1, string);
		InJob[playerid] = 1;
		GiveBizMoney(BIZ_ELECTRO_LS,12);
	    return 1;
	}
	else if(checkpointid == BankCP[0])
	{
	    if(PlayerInfo[playerid][pJob] == JOB_COLLECTOR)
	    {
			if(InJob[playerid] == 5)
			{
				if(IsPlayerInIncVehicle(playerid))
	    	    {
					TogglePlayerDynamicCP(playerid, BankCP[0], false);
					TogglePlayerDynamicCP(playerid, BankCP[1], true);
		    	    TogglePlayerControllable(playerid, true);
			    	SendInfo(playerid,"Отнесите мешки с деньгами в банк");
			    	InJob[playerid] = 6;
			    	RemovePlayerFromVehicle(playerid);
	    	    }
			}
		}
		return true;
	}
	else if(checkpointid == BankCP[1])
	{
	    if(PlayerInfo[playerid][pJob] == JOB_COLLECTOR)
	    {
			if(InJob[playerid] == 6)
			{
				if(!IsPlayerInAnyVehicle(playerid))
	    	    {
	    	        RemovePlayerAttachedObjectEx(playerid, 6);
	    	        SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	    	        new money = GLS[11];
					GiveMoney(playerid,money,"Inc");
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы получили {7396FB}$%d{FFFFFF} за проделанную работу",money);
					SendClientMessage(playerid, COLOR_WHITE, string);
	    	    }
	    	    InJob[playerid] = 1;
	    	    TogglePlayerDynamicCP(playerid, BankCP[1], false);

			}
	    }
	    return true;
	}
	else if(checkpointid == ScrapCP)
	{
	    if(PlayerInfo[playerid][pJob] == JOB_SCRAPER)
	    {
	        if(IsPlayerInAnyVehicle(playerid))
	        {
				new money = GLS[10];
	        	new carid = GetPlayerVehicleID(playerid);
				if(VehicleInfo[carid][vJob] == JOB_SCRAPER)
				{
		        	if(CarScrap[carid] != -1)
		        	{
		        	    if(GetPVarInt(playerid,"metal")>gettime())return SendError(playerid,"Вы были кикнуты за использование читов"),Kick(playerid);
		        	    SetPVarInt(playerid,"metal",gettime()+150);
						GiveMoney(playerid,money,"Scrap");
						format(string, sizeof(string), "[Информация] {FFFFFF}Вы получили {7396FB}$%d{FFFFFF} за доставленый металлолом", money);
						SendClientMessage(playerid, COLOR_WHITE, string);
						DestroyDynamicObject(CarScrap[carid]);
						CarScrap[carid] = -1;
						TogglePlayerDynamicCP(playerid, ScrapCP, false);
						FactoryInfo[fMaterials] += 800;
						RemovePlayerMapIcon(playerid, 98);
      					format(string, sizeof(string), "На продаже {FF9900}%d материалов\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryInfo[fMaterials]);
						UpdateDynamic3DTextLabelText(FactoryText[0], COLOR_WHITE, string);
					}
				}
				else SendError(playerid,"Вы должны быть в эвакуаторе");
			}
	    }
	    else SendError(playerid,"Вы не развозчик металлолома");
	}
	else if(gopost != -1)
	{
	    if(PlayerInfo[playerid][pJob] == JOB_TRUCKER)
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				new carid = GetPlayerVehicleID(playerid);
				new money = GLS[9];
				new Float:X = VehicleInfo[carid][vPos][0];
				new Float:Y = VehicleInfo[carid][vPos][1];
		        new postid = SelectPost[playerid];
				if(VehicleInfo[carid][vJob] == JOB_TRUCKER )
				{
				    new Float:Pos[3];
					GetPlayerPos(playerid, Pos[0],Pos[1], Pos[2]);
					if(InJob[playerid] == 1)
					{
						if(IsTrailerAttachedToVehicle(carid))
						{
							if(checkpointid == GoFuelCP[gopost])
							{
							    new bizid = GoFuel[postid][gfBizzID];
							    if(BizInfo[bizid][bProducts] < 50000) BizInfo[bizid][bProducts] += 1000;
				            	else BizInfo[bizid][bProducts] = 50000;
				            	if(BizInfo[bizid][bMoney] >= money) GiveBizMoney(bizid,-money);
						        TogglePlayerDynamicCP(playerid, GoFuelCP[gopost], false);
						    	UpdateFuels(bizid);
						    	GiveMoney(playerid,money,"Trucker");
								format(string,sizeof(string),"[Информация] {FFFFFF}Вы получили процент от выручки в размере: {7396FB}$%d",money);
								SendClientMessage(playerid, COLOR_VALIK, string);
								ShiftCords(0,X,Y,VehicleInfo[carid][vPos][3],8.0);
								PlayerGoPost[playerid]=-1;
								InJob[playerid] = 0;

					    	}
					    	else if(checkpointid == GoGunShopCP[gopost])
							{
							    new bizid = GoGunShop[postid][gsBizzID];
							    if(BizInfo[bizid][bProducts] < 50000) BizInfo[bizid][bProducts] += 1000;
				            	else BizInfo[bizid][bProducts] = 50000;
				            	if(BizInfo[bizid][bMoney] >= money)GiveBizMoney(bizid,-money);
						        TogglePlayerDynamicCP(playerid, GoGunShopCP[gopost], false);
						        GiveMoney(playerid,money,"Trucker");
								format(string,sizeof(string),"[Информация] {FFFFFF}Вы получили процент от выручки в размере: {7396FB}$%d",money);
								SendClientMessage(playerid, COLOR_VALIK, string);
								ShiftCords(0,X,Y,VehicleInfo[carid][vPos][3],8.0);
								InJob[playerid] = 0;
								PlayerGoPost[playerid]=-1;
					    	}
					    }
					}
				}
			}
		}
		return true;
	}
	else if(rand != -1 && checkpointid == IncCP[rand][0])
	{
		if(PlayerInfo[playerid][pJob] == JOB_COLLECTOR)
		{
			if(InJob[playerid] == 2)
			{
				TogglePlayerDynamicCP(playerid, IncCP[rand][0], false);
                InJob[playerid] = 3;
	   			TogglePlayerDynamicCP(playerid, IncCP[rand][1], true);
	   			SendInfo(playerid,"Возьмите мешки с деньгами");
				TogglePlayerControllable(playerid, true);
				RemovePlayerFromVehicle(playerid);
			}
		}
	}
	else if(rand != -1 && checkpointid == IncCP[rand][1])
	{
		if(PlayerInfo[playerid][pJob] == JOB_COLLECTOR)
		{
			if(InJob[playerid] == 3)
			{
				if(!IsPlayerInAnyVehicle(playerid))
				{
					SetPlayerColor(playerid,0x43CD8000);
					SetPlayerAttachedObjectEx(playerid, 6, 1550, 5, 0.2, 0.0, 0.0, -50.0, 180.0, 70.0, 0.6, 0.6, 0.6);
					SendInfo(playerid,"Садитесь в грузовик и едьте в банк");
					new inccp = NumInc_CP[playerid];
					TogglePlayerDynamicCP(playerid, IncCP[inccp][1], false);
					InJob[playerid] = 4;
				}
			}
		}
	}
	return false;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
	return true;
}
stock SetPlayerBuyItem(playerid)
{
	new string[50];
    new race = PlayerInfo[playerid][pType];
    //J_SetPlayerFacingAngle(playerid,180.0);
	SetPlayerCameraPos(playerid, 2563.5469, 1784.4794, 1060.7563);
	SetPlayerCameraLookAt(playerid, 2563.9248, 1785.4039, 1059.8933);
	//DestroyPlayerObject(playerid, TempBGObject[playerid]);
	Buyitem[playerid] = 0;
	ClearChatForPlayer(playerid);
    format(string,sizeof(string),"~g~Cost: ~r~$%d",ItemsCost[race][0]);
    switch(ItemsId[race][0])
	{
		//наушники
		case 19421: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.5407,0.0000, 0.0000, 198.9623);
		//шапки
		case 19069: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.5606,360.0000, 30.0000, 93.3478);
		//панамки
		case 18968: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.5606,360.0000, 11.0000, 215.0000);
		//кепки
		case 18955: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.5406,360.0000, -328.0000, 153.0000);
		//каски
		case 19104: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.6004,349.0000, 271.0000, 153.0000);
		//береты
		case 18925: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.6004,349.0000, 271.0000, 342.2888);
		//парики
		case 19519: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.5004,269.0000, 345.0000, 86.1028);
		//очки
		case 19011: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.5604,360.0000, -2.0000, 213.3229);
		//банданы
		case 18911: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.6166,61.0000, 10.0000, 226.0000);
		//шляпы
		case 18947: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.5564,350.0000, 270.0000, 107.3994);
		//case 18947: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.5564,354.0000, 270.0000, 227.0000);
		//часы
		case 19042: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.5364,158.0000, 360.0000, 278.0000);
		//портфели
		case 3026: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0],2564.1163, 1785.7730, 1059.5604,270.0000, -76.0000, 105.0000);
		case 18970: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0], 2564.1163, 1785.7730, 1059.5350, -0.3000, 11.7600, -24.9600 );

        case 18910: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0], 2564.1163, 1785.7730, 1059.5122, 106.1400, -2.6400, -110.5800 );
		case 11704: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][0], 2564.1163, 1785.7730, 1059.6166,61.0000, 10.0000, 226.0000);
		default: return SendError(playerid,"Произошла ошибка");
	}
	PlayerTextDrawSetString(playerid, InfoText[playerid],string);
	PlayerTextDrawShow(playerid,InfoText[playerid]);
	BuyInt[playerid] = -1;
	TogglePlayerControllable(playerid, false);
	for(new i; i < sizeof ActionMenu; i++)
		TextDrawShowForPlayer(playerid, ActionMenu[i]);
 	SelectTextDraw(playerid, -16776961);
	return true;
}
////////
stock SetPlayerBuySkin(playerid, shop = 0)
{
	new string[50];
	PlayerInfo[playerid][pNeedMessage]=1;
    new race = PlayerInfo[playerid][pRace];
	if(shop)
	{
		GetPlayerSkin(playerid);
		ClearChatForPlayer(playerid);
		SendError(playerid,"Для отмены нажмите {FFFFFF}Cancel");
	    TogglePlayerDynamicCP(playerid, Binko_CP, false);
	    J_SetPlayerFacingAngle(playerid,180.0);
		J_SetPlayerPos(playerid,199.1063, -128.3574, 1003.5152);
		SetPlayerCameraPos(playerid,199.2,-134.3,1003.5);
		SetPlayerCameraLookAt(playerid,199.1,-131.6,1003.5);
		if(PlayerInfo[playerid][pSex] <= 1)
		{
		    format(string,sizeof(string),"~g~Cost: ~r~$%d",MSkinCost[0]);
			SetPlayerSkinEx(playerid,MSkins[race][0]);
		}
		else
		{
		    format(string,sizeof(string),"~g~Cost: ~r~$%d",GSkinCost[0]);
			SetPlayerSkinEx(playerid,GSkins[race][0]);
		}
		PlayerTextDrawSetString(playerid, InfoText[playerid],string);
		PlayerTextDrawShow(playerid,InfoText[playerid]);
	}
	BuyInt[playerid] = -1;
	Clother[playerid] = 0;
	OldWorld[playerid] = GetPlayerVirtualWorld(playerid);
	PlayerInfo[playerid][pOldSkin] = GetPlayerSkin(playerid);
	SetPlayerVirtualWorld(playerid,playerid + 5);
	TogglePlayerControllable(playerid, false);
	for(new i; i < sizeof ActionMenu; i++)
		TextDrawShowForPlayer(playerid, ActionMenu[i]);
 	SelectTextDraw(playerid, -16776961);
 	PlayerInfo[playerid][pNeedMessage]=0;
	return true;
}
public OnPlayerEnterDynamicRaceCP(playerid, checkpointid)
{
	new test = CarTest[playerid];
	if(test != -1 && checkpointid == Test_CP[test])
	{
		TogglePlayerDynamicRaceCP(playerid,Test_CP[test],false);
		if(Errors[playerid]>=3)
		{
		    TogglePlayerDynamicRaceCP(playerid, Test_CP[test], false);
		    SendError(playerid,"Вы провалили экзамен из-за нарушения ПДД");
		    ExitCar(playerid);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			CarTest[playerid] = -1;
			return 1;
		}
		if( (test+1) == sizeof(Test_CP)-1)
		{
  			SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно сдали практический экзамен по вождению");
  			PlayerInfo[playerid][pCarLic] = YES_LICENSE;
  			ExitCar(playerid);
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			CarTest[playerid] = -1;
			if(QuestProgress[playerid][7] < QI[7][LastProgress] && AcceptQuest[playerid][7] == 1)QuestProgress[playerid][7] ++;
			if(QuestProgress[playerid][7] >= QI[7][LastProgress] && QuestProgress[playerid][7] < 10000){
				PlayerInfo[playerid][pTalents][1]++;
				SendInfo(playerid, "У Вас появились новые очки талантов");
				QuestProgress[playerid][7] = 10000;
			}
  		}
  		else
  		{
  			CarTest[playerid] ++;
  			new i = CarTest[playerid];
  			TogglePlayerDynamicRaceCP(playerid,Test_CP[i],true);
		}
	}
	return true;
}
public OnPlayerLeaveDynamicRaceCP(playerid, checkpointid)
{
	return true;
}
public OnRconCommand(cmd[])
{
	return true;
}
public OnPlayerObjectMoved(playerid, objectid)
{
	return true;
}
stock SellCar(carid)
{
	new number = GetVehicleID(carid);
	CarInfo[number][cPos][0] = CarInfo[number][cSell][0];
	CarInfo[number][cPos][1] = CarInfo[number][cSell][1];
	CarInfo[number][cPos][2] = CarInfo[number][cSell][2];
	CarInfo[number][cPos][3] = CarInfo[number][cSell][3];
	CarInfo[number][cColor_1] = 1;
	CarInfo[number][cColor_2] = 1;
	SetString(CarInfo[number][cOwner], "The State");
	SetString(CarInfo[number][cKeyer], "The State");
	CarInfo[number][cShtrafer] = 0;
	SetString(CarInfo[number][cNumber],"SA");
 	ReSetCarPrice(number);
	CarInfo[number][cLock] = 0;
	CarInfo[number][cShtraf] = 0;
	CarInfo[number][cKeyIN] = 0;
	CarInfo[number][cAlarmON] = 0;
	CarInfo[number][cMilage] = 0;
	CarInfo[number][cVirt] = 0;
	CarInfo[number][cNumberColor] = 0;
	SetString(CarInfo[number][cOnNumber],"The State");
	SetString(CarInfo[number][cOnRegister],"The State");
    SetString(CarInfo[number][cRegister],"The State");
	DestroyVehicleEx(carid);
	J_AddStaticVehicleEx(CarInfo[number][cModel],CarInfo[number][cPos][0],CarInfo[number][cPos][1],CarInfo[number][cPos][2],CarInfo[number][cPos][3],CarInfo[number][cColor_1],CarInfo[number][cColor_1],0);
	VehicleInfo[carid][vAntiRepair]=2;
	VehicleHealth[carid] = 1000;
	SetVehicleVirtualWorld(number, 0);
	SetVehicleToRespawn(carid);
	SaveOwnableCar(number);
	return true;
}
stock addlistitem(playerid, const string[], siz, const str[], list, &listitem)
{
	strcat(string, str, siz);
	DListitem[playerid][list] = listitem;
	listitem ++;
	return true;
}
stock ShowBankMenu(playerid)
{
	if(PlayerInfo[playerid][pOOC]==0) return Dialog_Open(playerid,0,0,"{43CD80}Информация","\n\n\\c{7396FB}Вы не можете воспользоваться банком/банкоматом{FFFFFF}\n\\cУ вас нет банковской карты. Получить ее можно в\n\\cцентральном банке Los-Santos\n\n","Скрыть", "");
	else if(PlayerInfo[playerid][pOOC]!=0 && PlayerInfo[playerid][pKlogin]==0) return Dialog_Open(playerid,991,1,"{43CD80}Подтверждение","\n\n\\c{ffffff}Вы должны подтвердить свой PIN-код к карточке\n\\cВведите свой код в ниже указаную строку\n\n","Принять","Закрыть");
	new bankstr[390], Bank[40];
	new listitem = 0;
	new siz = sizeof(bankstr);
	new isatbank = 	IsPlayerInRangeOfPoint(playerid, 2.5, 1463.7428,655.6723,979.1730) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 1466.2533,655.6681,979.1730) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 1480.5974,655.6681,979.1730) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 1478.0747,655.6681,979.1730);
	if(isatbank) Bank = "{43CD80}Банк";
	else Bank = "{43CD80}Банкомат";
	for(new i; i < 16; i ++) DListitem[playerid][i] = -1;
	addlistitem(playerid, bankstr, siz, "Узнать счет\n", 0, listitem);
	addlistitem(playerid, bankstr, siz, "Снять со счета\n", 1, listitem);
	if(isatbank)
	{
		addlistitem(playerid, bankstr, siz, "Пополнить счет\n", 2, listitem);
	    addlistitem(playerid, bankstr, siz, "Перевести деньги\n", 3, listitem);
		if(PlayerInfo[playerid][pCredit]) addlistitem(playerid, bankstr, siz, "Погасить кредит\n", 5, listitem);
		if(PlayerInfo[playerid][pRank] >0 )addlistitem(playerid, bankstr, siz, "Счет моей организации\n", 7, listitem);
		if(PlayerInfo[playerid][pRank] >=9 || PlayerInfo[playerid][pLeader] >0) addlistitem(playerid, bankstr, siz, "Снять со счета организации\n", 8, listitem);
		addlistitem(playerid, bankstr, siz, "{7396FB}Оплатить налог на транспорт{FFFFFF}\n", 11, listitem);
		if(SlotValue[playerid][2]!=-1) addlistitem(playerid, bankstr, siz, "{7396FB}Оплатить налоги на квартиру{FFFFFF}\n", 9, listitem);
		if(SlotValue[playerid][1]!=-1) addlistitem(playerid, bankstr, siz, "{7396FB}Оплатить налоги на дом{FFFFFF}\n", 10, listitem);
		if(SlotValue[playerid][3]!=-1)addlistitem(playerid, bankstr, siz, "{7396FB}Оплатить налоги на бизнес{FFFFFF}\n", 12, listitem);
		if(SlotValue[playerid][4]!=-1)addlistitem(playerid, bankstr, siz, "{7396FB}Оплатить налог на СТО{FFFFFF}\n", 4, listitem);
	}
	if(PlayerInfo[playerid][pMember]!=0) addlistitem(playerid, bankstr, siz, "Пополнить счет организации\n", 14, listitem);
	if(SlotValue[playerid][19]>1) addlistitem(playerid, bankstr, siz, "Пополнить счет мобильного\n", 15, listitem);
	ShowPlayerDialogEx(playerid,33,2,Bank,bankstr,"Выбор","Отмена");
	return true;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    new string[300];
	for(new i;i<91;i++)
	{
	    if(GribInfo[i][gribCreat]!=pickupid)continue;
	    if(!IsPlayerInRangeOfPoint(playerid,5,GribInfo[i][gribPos][0],GribInfo[i][gribPos][1],GribInfo[i][gribPos][2])) return false;
	    if(!IsAtGang(playerid)) return SendError(playerid,"Вы не наркодиллер");
	    GribInfo[i][gribCreat]=-1;
	    DestroyDynamicPickup(pickupid);
		format(string, sizeof(string), "%s срезал(а) растение", Name(playerid));
		ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pD_Packets] += 1;
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);
		format(string,sizeof(string),"[Информация] {FFFFFF}Вы нашли семена для посадки наркотиков");
		SendClientMessage(playerid,COLOR_VALIK,string);
		format(string,sizeof(string),"[Информация] {FFFFFF}У вас уже {7396FB}%d шт",PlayerInfo[playerid][pD_Packets]);
		SendClientMessage(playerid,COLOR_VALIK,string);
		return true;
	}
	if(pickupid == CasinoBar)
	{
		if(Getemer[playerid]>gettime())return false;
	    Getemer[playerid]=gettime()+5;
		BarList(playerid, 1);
		return 1;
	}
	if(pickupid == TirExit){
		J_SetPlayerPos(playerid, -2267.4307,-155.6890,35.3203);
		SetPlayerFacingAngle(playerid, 270.0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);		
		return 1;
	}
	if(pickupid == AlkatrazPickup)
	{
		if(!IsACop(playerid))return SendError(playerid, "Вы не полицейский");
	    ShowPlayerDialogEx(playerid,581,2,"{43CD80}Выберите действие","{42B02C}-{FFFFFF} Переодеться\n{42B02C}-{FFFFFF} Взять боеприпасы","Принять","Отклонить");
		return 1;
	}
	if(pickupid == CoinsPick)
	{
		if(Getemer[playerid]>gettime())return false;
		if(GetPVarInt(playerid, "CoinsGet"))return SendClientMessage(playerid, COLOR_ORANGE, "Вы уже брали монетки для игры");
	    Getemer[playerid]=gettime()+5;
		SetPVarInt(playerid, "CoinsGet", 1);
		SendInfo(playerid, "Для игры в монетку используйте {7396FB}'/coins'");
		return 1;
	}
	else if(pickupid >= TeleportPickup[0] && pickupid <= TeleportPickup[sizeof(TeleportInfo)-1])
	{
	    if(Getemer[playerid]>gettime())return false;
	    if(GetPlayerSkin(playerid)==80)
		{
			if(PlayerInfo[playerid][pOldSkin]==0) PlayerInfo[playerid][pOldSkin] = GetSkinOfPlayer(playerid);
			SetPlayerSkinEx(playerid,PlayerInfo[playerid][pOldSkin]);
			pSportZal[playerid]=0;
			SendError(playerid,"На улицу запрещено выходить в форме для тренировок");
		}
		CanUse[playerid]=0;
		new tp = pickupid - TeleportPickup[0];
		new zone = GetPlayerGangZone(playerid);
		if(GetString(TeleportInfo[tp][tpName], "Drugs house"))
		{
		    if((GZInfo[zone][gzFracID]==PlayerInfo[playerid][pMember]))
		    {
				if(PlayerInfo[playerid][pRank]>=9)
				{
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid,COLOR_ORANGE,"Этот наркопритон принадлежит вашей банде");
			        SendClientMessage(playerid,-1,"Для управления наркопритоном используйте команды:");
			        SendClientMessage(playerid,-1,"/getmoney /putmoney /setdsell /setdbuy");
			        SendClientMessage(playerid,COLOR_ORANGE,"Необходимо подойти к вашему барыге");
			        CanUse[playerid]=1;
			    }
			    else SendClientMessage(playerid,COLOR_ORANGE,"Этот наркопритон принадлежит вашей банде");
			}
		}
		if(GetString(TeleportInfo[tp][tpName], "San Andreas | Miner depo"))
			if(!InJob[playerid] || PlayerInfo[playerid][pJob] != 24)return SendError(playerid, "Сначала переоденьтесь в рабочую форму");
		if(GetString(TeleportInfo[tp][tpName], "Outside depo"))
			if(InJob[playerid] == 2)return SendError(playerid, "Сначала отнесите на склад добытое сырьё");
		if(GetString(TeleportInfo[tp][tpName], "Outside factory"))
			if(InJob[playerid])return SendError(playerid, "Сначала переоденьтесь в гражданское");
		if(HouseEntered[playerid]!=-1) HouseEntered[playerid]=-1;
		if(GetPlayerVirtualWorld(playerid)==0 && GetPlayerInterior(playerid)==0)
		{
			NoEnterPickup[playerid] =2;
	 		TogglePlayerControllable(playerid,false);
 		}
 		SetPlayerInterior(playerid, TeleportInfo[tp][tpExitInt]);
		SetPlayerVirtualWorld(playerid, TeleportInfo[tp][tpExitWorld]);
		J_SetPlayerFacingAngle(playerid, TeleportInfo[tp][tpExitPos_A]);
		J_SetPlayerPos(playerid, TeleportInfo[tp][tpExitPos_X], TeleportInfo[tp][tpExitPos_Y], TeleportInfo[tp][tpExitPos_Z]);
		Getemer[playerid]=gettime()+4;
		return true;
	}
	return true;
}
stock CreatePickupEx(model,type,Float:X,Float:Y,Float:Z, Virtualworld)
{
        new pickupid = CreatePickup(model,type,X,Y,Z,Virtualworld);
        Pickups[pickupid][0] = X;
        Pickups[pickupid][1] = Y;
        Pickups[pickupid][2] = Z;
        return pickupid;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
    new tickcount1 = GetTickCount();
	new string[3200];
	if(GetPlayerVirtualWorld(playerid)==1228)return 1;
	//new Float:X,Float:Y,Float:Z;
	if(!IsPlayerInRangeOfPoint(playerid,4,Pickups[pickupid][0],Pickups[pickupid][1],Pickups[pickupid][2])) return 1;
    if(pickupid == HealExitPickup[0])
	{
 		if(PlayerInfo[playerid][pHeal]) return SendError(playerid,"Вы находитесь на лечении");
		new world = GetPlayerVirtualWorld(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		switch(world)
		{
			case 1:
			{
				J_SetPlayerFacingAngle(playerid, 270.0000);
				J_SetPlayerPos(playerid, 1177.1873,-1326.2905,14.0584);
			}
			case 2:
			{
				J_SetPlayerFacingAngle(playerid, 0.0000);
				J_SetPlayerPos(playerid, 1609.5172,1820.9020,10.8203);
			}
			default:
			{
				J_SetPlayerFacingAngle(playerid, 180.0);
				J_SetPlayerPos(playerid, -2661.7510,635.2245,14.4531);
			}
		}
		return true;
 	}
	else if(pickupid == HealExitPickup[1])
	{
 		if(PlayerInfo[playerid][pHeal]) return SendError(playerid,"Вы находитесь на лечении");
		new world = GetPlayerVirtualWorld(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		switch(world)
		{
			case 1:
			{
				J_SetPlayerFacingAngle(playerid, 270.0000);
				J_SetPlayerPos(playerid, 1177.1873,-1321.0193,14.0439);
			}
			case 2:
			{
				J_SetPlayerFacingAngle(playerid, 0.0000);
				J_SetPlayerPos(playerid, 1605.2539,1820.9020,10.8203);
			}
			default:
			{
				J_SetPlayerFacingAngle(playerid, 180.0);
				J_SetPlayerPos(playerid, -2658.3682,635.2245,14.4531);
			}
		}
		return true;
 	}
	else if(pickupid == WinePic)
	{
		if(PlayerInfo[playerid][pJob]!= 22)return SendError(playerid,"Вы здесь не работаете");
		if(!InJob[playerid])return SendError(playerid,"Сначала переоденьтесь в рабочую одежду");
		if(InJob[playerid] == 3)return SendError(playerid,"Сначала доставьте урожай на склад");
		if(Iter_Count(TotalPlants) == MAX_PLANTS-1)return SendError(playerid, "На поле достаточно урожая. Займитесь его сборкой");
		if(GetPVarInt(playerid,"WinePlant"))return SendError(playerid, "Саначала посадите то растение, которое в руках");
		SetPVarInt(playerid,"WinePlant",1);
		SendInfo(playerid,"Вы взяли саженец. Посадите его на поле, используя {7396FB}/plant");
		SetPlayerAttachedObject(playerid, 6, 738, 6, 0.050000, 0.050000, -0.100000, 0.000000, 0.000000, 0.000000, 0.100000, 0.100000, 0.100000);
		return 1;
	}
 	else if(pickupid >= healthpd[0] && pickupid <= healthpd[6])
 	{
 	    if(!IsACop(playerid) && PlayerInfo[playerid][pMember]!= TEAM_MERIALS && !IsANews(playerid))return SendError(playerid,"Вы не полицейский и не состоите в правительстве/новостном агенстве");
 	    J_SetPlayerHealth(playerid,MAX_PLAYER_HEALTH(playerid));
        GameTextForPlayer(playerid, "Health restored", 0, 1);
        return true;
	}
	else if(pickupid == prost)
	{
	    if(Getemer[playerid]>gettime())return false;
	    Getemer[playerid]=gettime()+4;
	    format(string,sizeof(string),"Сумма залога составляет $%d",GLS[21]);
	    SendBotMessage(playerid,string);
	    return true;
	}
	else if(pickupid >= Bar_CP[0] && pickupid <= Bar_CP[MAX_BARSs-1])
	{
	    if(Getemer[playerid]>gettime())return false;
	    Getemer[playerid]=gettime()+4;
	  	BarList(playerid);
	  	return true;
	}
 	if(pickupid == MeriaGun)
	{
	    if(!IsAMeria(playerid)) return false;

		_SetGun(playerid, 3, 30);
		if(PlayerInfo[playerid][pRank]>4)
		{
			J_SetPlayerArmour(playerid, 100);
			SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы получили дубинку и бронежилет");
		}
		format(string,sizeof(string)," %s берет табельное оружие",PlayerName[playerid]);
		ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return true;
	}
	/////////
	else if(pickupid == nalogoffise[0])
	{
	    SetPlayerVirtualWorld(playerid,1);
		SetPlayerInterior(playerid,3);
		J_SetPlayerPos(playerid,1493.8759,1305.5491,1093.2891);
		J_SetPlayerFacingAngle(playerid, 84.0490);
		return true;
	}
	else if(pickupid == nalogoffise[1])
	{
	    SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
		J_SetPlayerPos(playerid,1530.8074,-1070.4329,25.0625);
		J_SetPlayerFacingAngle(playerid, 339.1004);
		return true;
	}
	else if(pickupid == amybank)
 	{
		if(GetTeamID(playerid) != TEAM_BANK) return SendError(playerid,"Вы не сотрудник банка");
		_SetGun(playerid, 3, 100);
		format(string,sizeof(string),"%s берет оружие",PlayerName[playerid]);
		ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return true;
	}
	else if(pickupid >= HealSG[0]&& pickupid <= HealSG[sizeof(HealSG)-1]) return GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~USE~p~ ~k~~SNEAK_ABOUT~", 1000, 3);
 	else if(pickupid == Inc_CP)
	{
		if(PlayerInfo[playerid][pJob] != JOB_COLLECTOR) return SendError(playerid,"Вы не инкассатор");
		if(InJob[playerid]) ShowPlayerDialogEx(playerid,149,0,"{43CD80}Работа 'Инкассатор'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
		else ShowPlayerDialogEx(playerid,149,0,"{43CD80}Работа 'Инкассатор'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
		return true;
	}
	else if(pickupid == Yakydzapick)
	{
	    if(Getemer[playerid]>gettime())return false;
	    Getemer[playerid]=gettime()+5;
		ShowPlayerDialogEx(playerid,1666,2,"{43CD80}Меню ресторана","Курица в соусе Терияки\t\t\t 600$\nМисо-суп\t\t\t\t\t 500$\nПрозрачная лапша с говядиной\t\t 700$\nУдон в сливочном соусе с говядиной\t\t 800$\nКани спайси \t\t\t\t\t 600$","Скрыть", "");
		return true;
	}
	else if(pickupid >= shopeat[0] && pickupid <= shopeat[30])
	{
		SetFullness(playerid, 100);
		ClearAnimations(playerid);
		ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		SendClientMessage(playerid, COLOR_VALIK,"Вы немного перекусили");
   	 	return true;
	}
  	else if(pickupid == EnterBankPickup)
 	{
        SetPlayerInterior(playerid, 1);
        SetPlayerVirtualWorld(playerid, 1);
        J_SetPlayerFacingAngle(playerid,180.0000);
        J_SetPlayerPos(playerid, 1481.1082,673.1198,979.1759);
        return true;
 	}
 	else if(pickupid == ExitBankPickup)
 	{
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		J_SetPlayerFacingAngle(playerid, 223.9972);
        J_SetPlayerPos(playerid, 1415.0336,-1701.8790,13.5395);
        return true;
 	}
 	if(pickupid == TeamDutyCP[PlayerInfo[playerid][pMember]])
	{
		if(Getemer[playerid]>gettime())return false;
	    Getemer[playerid]=gettime()+5;
		if(pSportZal[playerid] == 1) return SendError(playerid,"Вы не можете пользоваться этой раздевалкой пока не переоденетесь в служебную форму");
		if(IsAArmy(playerid)) return ShowPlayerDialogEx(playerid,581,2,"{43CD80}Выберите действие","{42B02C}-{FFFFFF} Переодеться\n{42B02C}-{FFFFFF} Взять боеприпасы","Принять","Отклонить");
		if(IsACop(playerid)) return ShowPlayerDialogEx(playerid,581,2,"{43CD80}Выберите действие","{42B02C}-{FFFFFF} Переодеться\n{42B02C}-{FFFFFF} Взять боеприпасы\n{ff4400}Взять радар для установки","Принять","Отклонить");
		else 
		{
			if(!TeamDuty[playerid])ShowPlayerDialogEx(playerid,7551,2,"{43CD80}Информация","- Переодется в {31853A}рабочую{FFFFFF} форму","Принять","Отмена");
			else ShowPlayerDialogEx(playerid,7551,2,"{43CD80}Информация","- Переодется в {31853A}свою{FFFFFF} одежду","Принять","Отмена");
		}
	    return true;
	}
   	time_pickup = GetTickCount() - tickcount1;
	return true;
}
stock ResetTuning(carid)
{
	new string[500];
	format(string, sizeof(string), "UPDATE `tuning` SET \
	`Spoiler` = '0',`Hood` = '0',`Sides` = '0', `Nitro` = '0',`Exhaust` = '0',`Wheels` = '0',`Roof` = '0',\
	`Hydraulics` = '0',`FBumper` = '0',`RBumper` = '0',`PaintJob` = '-1',`Neon` = '0',`Sticker_1` = '0',\
	`Sticker_2` = '0',`Sticker_3` = '0',`Sticker_4` = '0',`Sticker_5` = '0',\
	`Model` = '%i' WHERE `ID` = '%i'",
	GetVehicleModelEx(OwnableCar[carid]), CarInfo[carid][cID]);
	mysql_pquery(mysql, string);
	return true;
}
stock ResetTuningC(carid)
{
	new string[500];
	format(string,sizeof(string),"UPDATE `tuning` SET \
	`Spoiler` = '0',`Hood` = '0',`Sides` = '0', `Nitro` = '0',`Exhaust` = '0',`Wheels` = '0',`Roof` = '0',\
	`Hydraulics` = '0',`FBumper` = '0',`RBumper` = '0',`PaintJob` = '-1',`Neon` = '0',`Model` = '0',`Sticker_1` = '0',\
	`Sticker_2` = '0',`Sticker_3` = '0',`Sticker_4` = '0',`Sticker_5` = '0' WHERE `ID` = '%i'",CarInfo[carid][cID]);
	mysql_pquery(mysql, string);
	print("Reset all tuning");
	return true;
}
public OnVehicleMod(playerid, vehicleid, componentid)
{
	return true;
}
public UnDamaged(playerid)
{
    Damaged[playerid] = -1;
    return true;
}
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
	if(GetPlayerWeapon(playerid)!=43 && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_DRINK_SPRUNK &&  GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_DRINK_WINE && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_SMOKE_CIGGY && GetPlayerSpecialAction(playerid)!=SPECIAL_ACTION_DRINK_BEER){
		if(!IsACop(playerid)){
			for(new i;i<15;i++){
				if(IsPlayerInRangeOfPoint(playerid, antidm[i][3], antidm[i][0],antidm[i][1],antidm[i][2])){
					if(NoEnterPickup[playerid]==0){
						SetPVarInt(playerid,"antidmnew",(GetPVarInt(playerid,"antidmnew")+1));
						Dialog_Open(playerid,0,0,"{43CD80}Предупреждение","\n\n\\c{7396FB}- {FFFFFF}В этом месте нельзя драться. Если вы продолжите попытки, то будете кикнуты {7396FB}-\n\n","Скрыть","");
						if(GetPVarInt(playerid,"antidmnew")>=3) SendError(playerid,"Вы были кикнуты за драку в общественном месте"),J_Kick(playerid);
					}
					NoEnterPickup[playerid] = 7;
					ApplyAnimation(playerid,"FAT","IDLE_tired",4.0,0,0,0,1,0);
					return true;
				}
			}
		}
	}
	if(TalentsInfo[playerid][2][0] == 2)PlayerPlaySound(playerid, 6401, 0, 0, 0);	
	OnPlayerAntiCheat(damagedid, playerid, amount, weaponid, bodypart);
	return true;
}
stock OnPlayerAntiCheat(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	new string[144],Float:Health;
	if(amount > 0)
 	{
		if(CaptureTime[0] > 0 || CaptureTime[1] > 0){
			new zone = GetPlayerGangZone(playerid);
			new iszone = GetPlayerGangZone(issuerid);
			if(zone != -1 && iszone != -1){
				if(zone != iszone){
					SendError(issuerid, "Этот игрок находится в другом квадрате, урон не прошёл");
					return SetDamage(playerid, issuerid, 0);
				}
				else if(!IsAtGang(issuerid) || (PlayerInfo[issuerid][pMember] != CaptureAtac[0] && PlayerInfo[issuerid][pMember] != CaptureDef[0] && PlayerInfo[issuerid][pMember] != CaptureAtac[1] && PlayerInfo[issuerid][pMember] != CaptureDef[1]))return SetDamage(playerid, issuerid, 0);
			}
		}	
		if(TalentsInfo[playerid][0][1] == 1){
			switch(random(20)){
			case 7:
				{
					amount = amount/2.0;
					GameTextForPlayer(playerid, "~g~damage reduced (talent)", 1, 1);
					SetPlayerChatBubble(playerid, "Снизил полученный урон (талант)", COLOR_LIGHTBLUE, 10.0, 5000);
				}
			}
		}
		if(TalentsInfo[playerid][0][2] == 2){
			switch(random(20)){
			case 7:
				{
					Health = PlayerInfo[playerid][pHealth];
					J_SetPlayerHealth(playerid, Health+10.0);
					GameTextForPlayer(playerid, "~g~+10 HP (talent)", 1, 1);
					SetPlayerChatBubble(playerid, "Восстановил 10% здоровья (талант)", COLOR_LIGHTBLUE, 10.0, 5000);
				}
			}
		}
		if(TalentsInfo[issuerid][3][0] == 2){
			switch(random(20)){
			case 7:
				{
					Health = PlayerInfo[playerid][pHealth];
					J_SetPlayerHealth(playerid, Health+2.0);
					GameTextForPlayer(playerid, "~g~+2 HP (talent)", 1, 1);
					SetPlayerChatBubble(playerid, "Восстановил 2% здоровья (талант)", COLOR_LIGHTBLUE, 10.0, 5000);
				}
			}
		}
		if(TalentsInfo[playerid][3][0] == 2){
			switch(random(20)){
			case 7:
				{
					Health = PlayerInfo[playerid][pHealth];
					J_SetPlayerHealth(playerid, Health+2.0);
					GameTextForPlayer(playerid, "~g~+2 HP (talent)", 1, 1);
					SetPlayerChatBubble(playerid, "Восстановил 2% здоровья (талант)", COLOR_LIGHTBLUE, 10.0, 5000);
				}
			}
		}
		if(TalentsInfo[playerid][3][1] == 3 && weaponid == 0){
			switch(random(5)){
			case 3:
				{
					GameTextForPlayer(playerid, "~g~Demage evaded (talent)", 1, 1);
					SetPlayerChatBubble(playerid, "Уклонился от удара (талант)", COLOR_LIGHTBLUE, 10.0, 5000);
					return SetDamage(playerid, issuerid, 0);
				}
			}
		}
		if(TalentsInfo[issuerid][2][2] == 2 && bodypart == 9){
			switch(random(5)){
			case 0..3:
				{
					GameTextForPlayer(issuerid, "~g~HeadShot", 1200, 4);
					GameTextForPlayer(playerid, "~r~HeadShot", 1200, 4);
					amount += 40.0;
				}
			}
		}
		if(UsingShield[playerid])
		{
	        if(PlayerInfo[playerid][pShield] >= 10.0)
	        {
	   			GetPlayerHealth(playerid,Health);
	            Health += 10;
				if(Health > MAX_PLAYER_HEALTH(playerid)) Health = MAX_PLAYER_HEALTH(playerid);
			    J_SetPlayerHealth(playerid,Health);
				PlayerInfo[playerid][pShield] -= 10.0;
			}
			else
			{
			    RemovePlayerAttachedObjectEx(playerid, 6);
				UsingShield[playerid] = false;
				PlayerInfo[playerid][pShield] = 0.0;
				ClearAnims(playerid);
			}
		}
		if(weaponid == 0 && TalentsInfo[issuerid][3][0] == 1)amount += 4.0;
		new Float:aX, Float:aY, Float:aZ;
		GetPlayerPos(playerid, aX, aY, aZ);
		new Float:distance = GetPlayerDistanceFromPoint(playerid, aX, aY, aZ) / 10.0;
		if(distance < 1.0) distance = 1.0;
		if(TalentsInfo[issuerid][2][0] == 3){
			format(string, sizeof(string), "- %d HP", floatround(Float:amount, floatround_ceil));
			SetPlayerChatBubble(playerid, string, COLOR_RED, 30.0, 1200);
		}
		if(ProxDetectorS(20.0, playerid, issuerid, 1))
		{
			switch(weaponid)
			{
			    case 3:
			    {
					if(IsACop(issuerid) || IsAMeria(issuerid) || PlayerInfo[issuerid][pMember]==TEAM_BANK)
					{
						if(GetPlayerWeapon(issuerid) == 3)
						{
							if(!CuffedTime[playerid])
							{
							    if(Controllable[playerid])
							    {
							        ClearAnims(playerid);
							        CheckBreakCuff(playerid);
	        						SetDamage(playerid, issuerid, amount+amount);
									format(string,sizeof(string),"%s оглушил %s дубинкой",PlayerName[issuerid],PlayerName[playerid]);
									ProxDetector(25,issuerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									TazerPlayer[playerid] = issuerid;
									TazerPlayer[issuerid] = playerid;
	        						if(IsACop(issuerid))SendClientMessage(issuerid, COLOR_WHITE, "[Информация] {FFFFFF}Нажмите {FF0000}\"N\"{FFFFFF} около человека чтобы сковать его");
									switch(GetPlayerAnimationIndex(issuerid))
									{
										case 17: CuffedPlayer(playerid, 15);
										case 18: CuffedPlayer(playerid, 20);
										case 19: CuffedPlayer(playerid, 25);
										default: CuffedPlayer(playerid, 30);
									}
									if(GetPVarInt(playerid, "JailBreak"))
									{
										for(new z; z < sizeof AlkMenu; z++)
										{
											if(z <= 6)DestroyPlayerTD(playerid, AlkTD[playerid][z]);
											TextDrawHideForPlayer(playerid, AlkMenu[z]);
										}
										Dialog_Open(playerid, 0, 0, "", "\n\n\
										\\c{ff4400}Вы не успели покинуть территорию тюрьмы и были пойманы. Срок вашего заключения был увеличен\n\
										\\c{C9EAFF}Повторить побег можно будет через 2 часа при наличии необходимых предметов", "Скрыть", "");
										PlayerInfo[playerid][pJailTime] += 3600;
										PlayerInfo[playerid][pJB] = 1800;
										DeletePVar(playerid, "JailBreak");
										SettingSpawn(playerid);
										SpawnPlayer(playerid);
									}
								}
							}
						}
						return true;
					}
					SetDamage(playerid, issuerid, amount);
				}
				case 23:
				{
                    if(IsACop(issuerid) || PlayerInfo[issuerid][pMember]==TEAM_MERIALS)
					{
						if(GetPlayerWeapon(issuerid) == 23)
						{
							if(!CuffedTime[playerid])
							{
							    if(Controllable[playerid])
							    {
							        ClearAnims(playerid);
							        CheckBreakCuff(playerid);
	        						SetDamage(playerid, issuerid, amount+amount);
									format(string,sizeof(string),"%s оглушил %s выстрелом с тазера",PlayerName[issuerid],PlayerName[playerid]);
									ProxDetector(25,issuerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									TazerPlayer[playerid] = issuerid;
									TazerPlayer[issuerid] = playerid;
									if(IsACop(issuerid))SendClientMessage(issuerid, COLOR_WHITE, "[Информация] {FFFFFF}Нажмите {FF0000}\"N\"{FFFFFF} около человека чтобы сковать его");
									switch(GetPlayerAnimationIndex(issuerid))
									{
										case 17: CuffedPlayer(playerid, 15);
										case 18: CuffedPlayer(playerid, 20);
										case 19: CuffedPlayer(playerid, 25);
										default: CuffedPlayer(playerid, 30);
									}
									if(GetPVarInt(playerid, "JailBreak"))
									{
										for(new z; z < sizeof AlkMenu; z++)
										{
											if(z <= 6)DestroyPlayerTD(playerid, AlkTD[playerid][z]);
											TextDrawHideForPlayer(playerid, AlkMenu[z]);
										}
										Dialog_Open(playerid, 0, 0, "", "\n\n\
										\\c{ff4400}Вы не успели покинуть территорию тюрьмы и были пойманы. Срок вашего заключения был увеличен\n\
										\\c{C9EAFF}Повторить побег можно будет через 2 часа при наличии необходимых предметов", "Скрыть", "");
										PlayerInfo[playerid][pJailTime] += 3600;
										PlayerInfo[playerid][pJB] = 1800;
										DeletePVar(playerid, "JailBreak");
										SettingSpawn(playerid);
										SpawnPlayer(playerid);
									}
								}
							}
						}
						return true;
					}
				}
				case 0:
				{
					if(!CuffedTime[playerid] && TalentsInfo[issuerid][3][2] == 3)
					{
						if(Controllable[playerid])
						{
							switch(random(10)){
							case 7:
								{
									ClearAnims(playerid);
									CheckBreakCuff(playerid);
									format(string,sizeof(string),"%s оглушил %s ударом",PlayerName[issuerid],PlayerName[playerid]);
									ProxDetector(25,issuerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									TazerPlayer[playerid] = issuerid;
									TazerPlayer[issuerid] = playerid;
									if(IsACop(issuerid))SendClientMessage(issuerid, COLOR_WHITE, "[Информация] {FFFFFF}Нажмите {FF0000}\"N\"{FFFFFF} около человека чтобы сковать его");
									CuffedPlayer(playerid, 2);
								}
							}
						}
					}
				}
				default: SetDamage(playerid, issuerid, amount);
			}
		}
		else SetDamage(playerid, issuerid, amount);
	}
	else SetDamage(playerid,INVALID_PLAYER_ID,amount);
	return 1;
}
public SetDamage(playerid, issuerid, Float:damage)
{
	new Float:Health = PlayerInfo[playerid][pHealth];
	if(Health-damage < 30.0 && TalentsInfo[playerid][0][0] == 3){
		if(Fullness[playerid] >= 20){
			switch(random(8)){
			case 7:
				{
					GiveFullness(playerid, Fullness[playerid]-20);
					J_SetPlayerHealth(playerid, Health+20.0);
					GameTextForPlayer(playerid, "~g~+20 HP~n~~r~-20 satiety~n~~y~(talent)", 1, 1);
					SetPlayerChatBubble(playerid, "Восстановил 20% здоровья за счёт сытости", COLOR_LIGHTBLUE, 10.0, 5000);
				}
			}
		}
	}
	if(issuerid != INVALID_PLAYER_ID){
		if(PlayerInfo[playerid][pArmour] > 0.0){
			if((PlayerInfo[playerid][pArmour]-damage) <= 0.0)J_SetPlayerArmour(playerid, 0);
			else if((PlayerInfo[playerid][pArmour]-damage) > 0.0)J_SetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]-damage);
		}else{
			if((PlayerInfo[playerid][pHealth]-damage) <= 0.0)J_SetPlayerHealth(playerid, 0);
			else if((PlayerInfo[playerid][pHealth]-damage) > 0.0)J_SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]-damage);
		}
	}
    return true;
}
stock SetPlayerSkills(playerid)
{
    SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL,			PlayerInfo[playerid][pPistol_Skill]*10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_PISTOL_SILENCED,	PlayerInfo[playerid][pSDPistol_Skill]*10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_DESERT_EAGLE,		PlayerInfo[playerid][pEagle_Skill]*10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SHOTGUN,			PlayerInfo[playerid][pShotGun_Skill]*10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_MICRO_UZI,			PlayerInfo[playerid][pUZI_Skill]*10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_MP5,				PlayerInfo[playerid][pMP5_Skill]*10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_AK47,				PlayerInfo[playerid][pAK47_Skill]*10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_M4,				PlayerInfo[playerid][pM4_Skill]*10);
	SetPlayerSkillLevel(playerid,WEAPONSKILL_SNIPERRIFLE,		PlayerInfo[playerid][pSniper_Skill]*10);
	return true;
}
stock MuchNumber(...)
{
	new count = numargs(), maxnum;
	for(new i; i < count; i ++)
	{
	    new temp = getarg(i);
	    if(temp > maxnum) maxnum = temp;
	}
	return maxnum;
}
stock FreeBlock(...)
{
	new count = numargs(), maxnum, num;
	for(new i; i < count; i ++)
	{
	    new temp = getarg(i);
	    if(temp > maxnum)
		{
			maxnum = temp;
			num = i;
		}
	}
	return num;
}
public DestroyTempStrip(strip, carid)
{
	DestroyDynamicObject(TempStripObject[carid]);
	TempStripObject[carid] = -1;
	if(StripCount > 1)
	{
		for(new i = strip; i < StripCount; i ++)
		{
		    TStripPos[i][0] = TStripPos[i+1][0];
			TStripPos[i][1] = TStripPos[i+1][1];
			TStripPos[i][2] = TStripPos[i+1][2];
		}
	}
	StripCount --;
	return true;
}
public PlayerUnStrip(playerid)
{
    NoStrip[playerid] = -1;
    return true;
}
stock IsAStripCar(carid)
{
	new model = GetVehicleModelEx(carid);
	switch(model)
	{
	    case 528, 596..599: return true;
	    default: return false;
	}
	return false;
}
stock bool:bollean(value)
{
	return value?true:false;
}
stock CuffedPlayer(playerid, cuffedtime)
{
	TogglePlayerControllable(playerid, true);
	CuffedTime[playerid] = cuffedtime;
	Crack[playerid] = bollean(cuffedtime > 0);
	Cuffed[playerid] = bollean(cuffedtime == 0);
	if(PlayerInfo[playerid][pJob] == 17 && InJob[playerid] == 2)
	{
	    for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], false);
	    TogglePlayerDynamicCP(playerid, MinerDownCP, false);
	}
	if(pTemp[playerid][BreakKey] != 0)
	{
		pTemp[playerid][BreakKey] = 0;
		pTemp[playerid][BreakTime] = 0;
		pTemp[playerid][BreakCount] = 0;
  		HidePlayerActionText(playerid);
	    HidePlayerActionBand(playerid);
		PlayerInfo[playerid][pClip] --;
	}
	if(IsACop(playerid))
	{
	    new cuffid = PlayerOfCuff[playerid];
	    if(cuffid != INVALID_PLAYER_ID)
	    {
	        if(PlayerOfCuff[cuffid] == playerid) PlayerOfCuff[cuffid] = INVALID_PLAYER_ID;
	        PlayerOfCuff[playerid] = INVALID_PLAYER_ID;
	        TimeOfCuff[playerid] = 0;
	    }
	}
	if(cuffedtime <= 0)
	{
	    new tazer = TazerPlayer[playerid];
		if(tazer != INVALID_PLAYER_ID)
  		{
 			TazerPlayer[playerid] = INVALID_PLAYER_ID;
 			TazerPlayer[tazer] = INVALID_PLAYER_ID;
  		}
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
	}
	CancelCuff(playerid);
	return true;
}
stock UnCuffPlayer(playerid)
{
	Cuffed[playerid] = false;
	CuffedTime[playerid] = 0;
	SetPlayerSpecialAction(playerid, 0);
    TogglePlayerControllable(playerid, true);
    pTemp[playerid][BreakKey] = 0;
	pTemp[playerid][BreakTime] = 0;
	pTemp[playerid][BreakCount] = 0;
 	HidePlayerActionText(playerid);
	HidePlayerActionBand(playerid);
	ClearAnimations(playerid);
	return true;
}
stock PreloadAnimLib(playerid, const animlib[])
{   
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return true;
}
public OnPlayerShootDynamicObject(playerid, weaponid, objectid, Float:x, Float:y, Float:z)
{
	if(PlayerTir[playerid] != -1){
		for(new i; i < sizeof TirInfo; i++){
			if(objectid == Target_Object[i]){
				TargetShots[playerid]++;
				if(TargetShots[playerid] <= 6)TextDrawShowForPlayer(playerid, TirDraw[TargetShots[playerid]-1]);
				else DestroyTarget(playerid, PlayerTir[playerid], 1);
			}
		}
	}
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    new tickcount1 = GetTickCount();
	new string[1024];
	if(GetPlayerVirtualWorld(playerid)==1228)return 1;
	if(newkeys & KEY_SECONDARY_ATTACK && Spectate[playerid])
	{
		DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
		return SelectTextDraw(playerid, 0xF1AEF2AA);
	}
	if(PRESSED(KEY_JUMP))
	{
	    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && TalentsInfo[playerid][1][1] == 3)
	    {
			SetPlayerChatBubble(playerid, "Применил навык экстренного торможения (талант)", COLOR_LIGHTBLUE, 10.0, 5000);
			SetVehicleSpeed(GetPlayerVehicleID(playerid),GetPlayerVehicleSpeedZ(playerid)-15);
		}
	}
	if(newkeys & KEY_HORN && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new carid = GetPlayerVehicleID(playerid);
		if(IsPlayerInRangeOfPoint(playerid, 10, 289.6989, 1821.9396, 17.1344))return J_SetVehiclePos(carid, 282.1989, 1821.9396, 17.1344);
		else if(IsPlayerInRangeOfPoint(playerid, 10, 282.1989, 1821.9396, 17.1344))return J_SetVehiclePos(carid, 289.6989, 1821.9396, 17.1344);
		for(new i; i < MAX_TUNING; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 10.0, TuningInfo[i][stoGarage][0], TuningInfo[i][stoGarage][1], TuningInfo[i][stoGarage][2]))
			{
				if(!IsAOwnableCar(GetPlayerVehicleID(playerid)))
				{
					ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{ff4400}Тюнинговать можно только личный транспорт","Скрыть","");
					return 1;
				}
				if(GetString(TuningInfo[i][stoOwner], "None"))return SendError(playerid, "Эта автомастерская не работает");
				if(TuningInfo[i][stoWait] == true)return SendError(playerid, "В мастерской сейчас обслуживается клиент. Подождите, пожалуйста...");
				TuningInfo[i][stoWait] = true;
				J_SetVehiclePos(carid, TuningInfo[i][stoGarageEx][0], TuningInfo[i][stoGarageEx][1], TuningInfo[i][stoGarageEx][2]);
				SetVehicleZAngle(carid, TuningInfo[i][stoGarageEx][3]);
				SetVehicleVirtualWorld(carid, TuningInfo[i][stoWorld]);
				SetPlayerVirtualWorld(playerid, TuningInfo[i][stoWorld]);
				ShowTuning(playerid);
				SetEngineStatus(carid, false, playerid);
				SetCameraBehindPlayer(playerid);
				TuningInfo[i][stoVisit]++;
				SetPVarInt(playerid, "StoWaiting", i+1);
				return 1;
			}
		}
		for(new i; i < MAX_PARKING; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 10.0, ParkInfo[i][parkPos][0], ParkInfo[i][parkPos][1], ParkInfo[i][parkPos][2]))
			{
				J_SetVehiclePos(carid, ParkInfo[i][parkExit][0], ParkInfo[i][parkExit][1], ParkInfo[i][parkExit][2]);
				SetVehicleZAngle(carid, ParkInfo[i][parkExit][3]);
				SetVehicleVirtualWorld(carid, ParkInfo[i][parkWorld]);
				SetPlayerVirtualWorld(playerid, ParkInfo[i][parkWorld]);
				SendInfo(playerid, "Используйте {7396FB}'/park'{FFFFFF}, чтобы припарковать свой транспорт");
				GameTextForPlayer(playerid, "~g~PARKING ZONE", 3000, 5);
				SetCameraBehindPlayer(playerid);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 10.0, ParkInfo[i][parkExit][0], ParkInfo[i][parkExit][1], ParkInfo[i][parkExit][2]) && GetPlayerVirtualWorld(playerid) == ParkInfo[i][parkWorld])
			{
				J_SetVehiclePos(carid, ParkInfo[i][parkPos][0], ParkInfo[i][parkPos][1], ParkInfo[i][parkPos][2]);
				SetVehicleZAngle(carid, ParkInfo[i][parkPos][3]);
				SetVehicleVirtualWorld(carid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
				return 1;
			}
		}
	}
	if(newkeys & KEY_SPRINT)
	{
		if(Spectate[playerid])
		{
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelect[playerid]]);
			else OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelectSub[playerid]]);
			return 1;
		}
		for(new i = 1; i <= ALLKVARTIRI; i++) 
		{
			if(IsPlayerInRangeOfPoint(playerid, 3,kvartinfo[i][kvExit][0],kvartinfo[i][kvExit][1],kvartinfo[i][kvExit][2]))
			{
				if(SlotValue[playerid][1] != -1)return SendError(playerid, "Сначала нужно продать дом"); 
				if(SlotValue[playerid][2] != -1)return SendError(playerid, "У вас уже есть квартира"); 
				if(strcmp(kvartinfo[GetPlayerVirtualWorld(playerid)][vladelec],"None",true))return SendError(playerid, "Эта квартира уже куплена");
				new str[128];
				format(str,sizeof str, "{ffffff}_________________________\n\n\\cЭта квартира продаётся\n\\c{7396FB}Цена: $%d\n{ffffff}_________________________\n",kvartinfo[GetPlayerVirtualWorld(playerid)][pCount]);
				Dialog_Open(playerid, 8008, 0, "{43CD80}Покупка квартиры", str, "Купить", "Отмена");
				return 1;
			}
		}
	}
	if(PlayerInfo[playerid][pSlotItem][5] == 19878 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) 
    { 
        static bool:act; 
        if(newkeys & KEY_HANDBRAKE) 
        {
			SetPlayerArmedWeapon(playerid, 0);
            ApplyAnimation(playerid, "SKATE","skate_run",4.1,1,1,1,1,1,1);
            if(!act) 
            { 
                act = true; 
                RemovePlayerAttachedObject(playerid,5); 
				SkateObj[playerid] = CreateObject(19878,0,0,0,0,0,0); 
                AttachObjectToPlayer(SkateObj[playerid],playerid, -0.2,0,-0.9,0,0,90); 
            } 
        } 
        if(oldkeys & KEY_HANDBRAKE) 
        { 
            ApplyAnimation(playerid, "CARRY","crry_prtial",4.0,0,0,0,0,0); 
            if(act) 
            { 
                act = false; 
                DestroyObject(SkateObj[playerid]); 
				GiveItem(playerid, 19878);
            } 
        } 
    }
	if(newkeys & KEY_YES){
		if(GetPVarInt(playerid, "showedinv") || GetPVarInt(playerid,"PlayingRoulette") || GetPVarInt(playerid,"showedcoins") || GetPVarInt(playerid,"showedtrade") || GetPVarInt(playerid,"showedbonesmenu") || GetPVarInt(playerid,"showedroulmenu") || GetPVarInt(playerid,"showedfool") || GetPVarInt(playerid,"SPAMTIMER") || GetPVarInt(playerid,"showedaction"))return 1;
		return ShowInventory(playerid);
	}
 	if(newkeys == 16)
	{
	    if(animan[playerid]==1)
		{
		    ClearAnims(playerid);
		    animan[playerid]=0;
		    TextDrawHideForPlayer(playerid, StopAnimation);
		}
	}
    new Float:XYZ[3];
    if(newkeys & KEY_JUMP)
    {
		if(PlayerInfo[playerid][pJob] == 22)
		{
		    if(GetPVarInt(playerid, "WinePlant"))
		    {
				DeletePVar(playerid, "WinePlant");
				SendError(playerid, "Вы уронили саженец");
			    RemovePlayerAttachedObjectEx(playerid, 6);
			    ApplyAnimation(playerid, "PED", "GETUP_FRONT", 4.0, 0, 1, 1, 0, 0, 1);
			}
		}
		if(PlayerInfo[playerid][pJob] == 24)
		{
		    if(InJob[playerid] == 2)
		    {
				ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 6))
					RemovePlayerAttachedObject(playerid, 6);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 7))
					RemovePlayerAttachedObject(playerid, 7);
				PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
				crafttry[playerid] = 0;
				InJob[playerid] = 1;
				DeletePVar(playerid, "MineType");
				DeletePVar(playerid, "MineDobito");
				SendError(playerid,"Вы уронили тележку");
			}
		}
		IsDropBomb(playerid);
	}
	if((oldkeys & 128 && newkeys & 16))
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0,773.86719, -64.71880, 1002.59381) || IsPlayerInRangeOfPoint(playerid, 3.0,776.15631, -64.72660, 1002.59381)|| IsPlayerInRangeOfPoint(playerid, 3.0,773.35162, -59.25000, 1002.59381)|| IsPlayerInRangeOfPoint(playerid, 3.0,773.35162, -61.53130, 1002.59381))
		{
			if(PlayerInfo[playerid][pONPhoneTalk] || GetPlayerWeapon(playerid) || GetPVarInt(playerid, "GrushaShot") > gettime())return false;
			if(pSportZal[playerid] != 1) return SendError(playerid,"Вы не переоделись в спортивную форму");
			switch(random(3))
			{
			case 1:
				{
					switch(random(3))
					{
					case 0: PlayerPlaySound(playerid, 17805, 0.0, 0.0, 0.0);
					case 1: PlayerPlaySound(playerid, 17806, 0.0, 0.0, 0.0);
					}
					new iskill;
					if(PlayerInfo[playerid][pSnow]<=5000) iskill = 5000;
					if(PlayerInfo[playerid][pSnow]<=10000 && PlayerInfo[playerid][pSnow]>5000) iskill = 10000;
					if(PlayerInfo[playerid][pSnow]<=20000 && PlayerInfo[playerid][pSnow]>10000) iskill = 20000;
					if(PlayerInfo[playerid][pSnow]<=30000 && PlayerInfo[playerid][pSnow]>20000) iskill = 30000;
					PlayerInfo[playerid][pSnow]++;
					if(TalentsInfo[playerid][3][2] == 2)PlayerInfo[playerid][pSnow]++;
					format(string,32,"~y~%d/~g~%d shots",PlayerInfo[playerid][pSnow],iskill);
					GameTextForPlayer(playerid,string,500,6);
					if(PlayerInfo[playerid][pSnow] == 5000)
					{
						SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы изучили новый стиль боя");
						PlayerInfo[playerid][pBoxing] = 1;
						SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Осталось открыть 3 стиля боя, требуется еще 5000 ударов");
					}
					if(PlayerInfo[playerid][pSnow] == 10000)
					{
						SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы изучили новый стиль боя");
						PlayerInfo[playerid][pKungfu] = 1;
						SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Осталось открыть 2 стиля боя, требуется еще 10000 ударов");
					}
					if(PlayerInfo[playerid][pSnow] == 20000)
					{
						SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы изучили новый стиль боя");
						PlayerInfo[playerid][pKneehead] = 1;
						SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Осталось открыть 1 стиль боя, требуется еще 10000 ударов");
					}
					if(PlayerInfo[playerid][pSnow] == 30000)
					{
						SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы изучили новый стиль боя");
						PlayerInfo[playerid][pElbow] = 1;
						SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы выучили все стили боя! Поздравляем");
					}
					if(PlayerInfo[playerid][pBoxing] || PlayerInfo[playerid][pKungfu] ||
							PlayerInfo[playerid][pKneehead] || PlayerInfo[playerid][pElbow] && QuestProgress[playerid][12] < 10000 && AcceptQuest[playerid][12] == 1){
						PlayerInfo[playerid][pTalents][3] += 3;
						SendInfo(playerid, "У Вас появились новые очки талантов");
						QuestProgress[playerid][12] = 10000;
					}	
					SetPVarInt(playerid, "GrushaShot", gettime()+2);
				}
			}
		}
	}
	if(newkeys == 2)
	{
	    for(new i;i<OWNABLEBIZES;i++)
		{
		    if(!GetString(BizInfo[i][bOwner],"The State"))
	    	{
			    if(BizInfo[i][bState] == 7 || BizInfo[i][bState] == 1 || BizInfo[i][bState] == 2 || BizInfo[i][bState] == 3 || BizInfo[i][bState] == 9)
				{
				    if(BizInfo[i][bBuyCost]>0 && BizInfo[i][bNeedItem]>0)
				    {
				        if(IsPlayerInRangeOfPoint(playerid,10,BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]))
				        {
				            if(PlayerInfo[playerid][pJob]==3)
				            {
								if(VehicleInfo[GetPlayerVehicleID(playerid)][vJob]==3)
								{
						            format(string,sizeof(string),"{FFFFFF}Бизнес закупает {B7A51B}%d{FFFFFF} едениц товара. Стоимость 1-го продукта: {B7A51B}$%d.{FFFFFF}\nВведите количество товара которое хотите продать бизнесу",BizInfo[i][bNeedItem],BizInfo[i][bBuyCost]);
						            ShowPlayerDialogEx(playerid,8762,1,"{43CD80}Подтверждение",string,"Принять","Отмена");
						            dBiz[playerid]=i;
						            break;
								}
							}
				        }
					}
				}
			}
		}
		if(PlayerInfo[playerid][pJob]==3 && VehicleInfo[GetPlayerVehicleID(playerid)][vJob]==3 &&IsPlayerInRangeOfPoint(playerid, 6.0, -382.9761,-1426.3553,26.3189)) //ферма
		{
		    ShowPlayerDialogEx(playerid,2281,2,"{43CD80}Выберите действие","{42B02C}-{FFFFFF} Закупить продукты\n{42B02C}-{FFFFFF} Вернуть продукты","Принять","Отмена");
   			return 1;
		}
		if(PlayerInfo[playerid][pJob]==3 && VehicleInfo[GetPlayerVehicleID(playerid)][vJob]==3 &&IsPlayerInRangeOfPoint(playerid, 6.0, 1976.6340,-2029.4700,13.5469)) //тюнинг
		{
		    ShowPlayerDialogEx(playerid,2291,2,"{43CD80}Выберите действие","{42B02C}-{FFFFFF} Закупить груз\n{42B02C}-{FFFFFF} Вернуть груз","Принять","Отмена");
   			return 1;
		}
		//////////////развозщик металла
		else if(IsPlayerInRangeOfPoint(playerid, 5.0, SCRAP_POS_X,SCRAP_POS_Y,SCRAP_POS_Z) || IsPlayerInRangeOfPoint(playerid, 5.0, 1124.2776,1962.4742,10.8203)) //тюнинг
		{
			if(PlayerInfo[playerid][pJob] == JOB_SCRAPER)
		    {
		        if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
		        {
		        	new carid = GetPlayerVehicleID(playerid);
					if(VehicleInfo[carid][vJob] == JOB_SCRAPER)
					{
			        	if(CarScrap[carid] == -1)
			        	{
						    DestroyDynamicObject(CarScrap[carid]);
							CarScrap[carid] = CreateDynamicObject(3594, 0, 0, 0, 0, 0, 0);
							AttachDynamicObjectToVehicle(CarScrap[carid], carid, 0, -2, 1.4, -15, 0, 183);
							TogglePlayerDynamicCP(playerid, ScrapCP, true);
							Streamer_Update(playerid);
							ShowPlayerDialogEx(playerid, INVALID_DIALOG_ID, 0, "{43CD80}Перевозка металлолома", "{FFFFFF}Едьте на фабрику по переработке маталлолома.\nОна отмечена на карте красным маркером или используйте:\n{B2D63B}/gps - Работы для начинающих - Завод", "Скрыть","");
							SetPVarInt(playerid,"metal",gettime()+150);
						}
						else
						{
							ShowPlayerDialogEx(playerid, INVALID_DIALOG_ID, 0, "{43CD80}Перевозка металлолома", "{FFFFFF}Едьте на фабрику по переработке маталлолома.\nОна отмечена на карте красным маркером или используйте:\n{B2D63B}/gps - Работы для начинающих - Завод", "Скрыть","");
							TogglePlayerDynamicCP(playerid, ScrapCP, true);
						}
						return 1;
					}
				}
		    }
		    else SendError(playerid,"Вы не развозчик металлолома");
		}
	}
	if(newkeys == 2) return callcmd::opengate(playerid);
	if(PRESSED(262144))return callcmd::opengate(playerid);
	if(newkeys == KEY_WALK && !IsPlayerInAnyVehicle(playerid))
	{
		if(GetPVarInt(playerid, "SPAMTIMER") == 1 && PlayerInfo[playerid][pJob] == 17)craft_menu(playerid);
	    new Float:x, Float:y, Float:z;
		for(new i;i<MAX_DMATS;i++)
		{
		    if(dmats[i]!=-1)
		    {
		        GetDynamicObjectPos(dmats[i],x,y,z);
				if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
				{
				    if((SlotValue[playerid][11]+500)<2000)
				    {
					    DestroyDynamicObject(dmats[i]);
					    dmats[i]=-1;
					    SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы подобрали ящик, в котором {FFFFFF}500{7396FB} готовых материалов");
					    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
					    SlotValue[playerid][11]+=500;
				 	   	format(string,sizeof(string),"Подобрал что-то с земли");
						SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
					}
					else SendError(playerid,"Вы можете переносить максимум 2000 материалов");
				    return 1;
				}
			}
		}
		for(new i = 1; i <= ALLKVARTIRI; i++) 
		{ 
			if(IsPlayerInRangeOfPoint(playerid, 2, kvartinfo[i][kvPic][0],kvartinfo[i][kvPic][1],kvartinfo[i][kvPic][2]) && kvartinfo[i][kvWorld] == GetPlayerVirtualWorld(playerid)) 
			{ 
				if(kvartinfo[i][kvLock] == 1 && SlotValue[playerid][2] != i)return GameTextForPlayer(playerid, "~r~Close", 5000, 6); 
				J_SetPlayerPos(playerid,kvartinfo[i][kvExit][0],kvartinfo[i][kvExit][1],kvartinfo[i][kvExit][2]); 
				SetPlayerInterior(playerid,11); 
				SetPlayerVirtualWorld(playerid, i); 
				return 1; 
			} 
			else if(IsPlayerInRangeOfPoint(playerid, 3, kvartinfo[i][kvExit][0],kvartinfo[i][kvExit][1],kvartinfo[i][kvExit][2])) 
			{ 
				J_SetPlayerPos(playerid, kvartinfo[GetPlayerVirtualWorld(playerid)][kvPic][0],kvartinfo[GetPlayerVirtualWorld(playerid)][kvPic][1],kvartinfo[GetPlayerVirtualWorld(playerid)][kvPic][2]); 
				SetPlayerInterior(playerid,1); 
				SetPlayerVirtualWorld(playerid, kvartinfo[GetPlayerVirtualWorld(playerid)][kvWorld]); 
				return 1; 
			} 
		} 
		for(new i;i<MAX_DGUNS;i++)
		{
		    if(dguns[i]!=-1)
		    {
		        GetDynamicObjectPos(dguns[i],x,y,z);
				if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
				{
				    DestroyDynamicObject(dguns[i]);
				    dguns[i]=-1;
				    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
				    _SetGun(playerid,dgunn[i],dpatrons[i]);
				    format(string,sizeof(string),"[Информация] {FFFFFF}Вы подобрали оружие:{FFFFFF} %s[%d]",GunName(dgunn[i]),dpatrons[i]);
				    SendClientMessage(playerid,COLOR_VALIK,string);
			 	   	format(string,sizeof(string),"Подобрал оружие с земли");
					SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
					dpatrons[i]=-1;
					dgunn[i]=-1;
				    return 1;
				}
			}
		}
		for(new i; i < 4; i++)
		{
			if(IsPlayerInDynamicArea(playerid, BonesArea[i]))
			{
				if(GetPVarInt(playerid, "showedbonesmenu"))return 1;
				if(PlayerInfo[playerid][pJob] == JOB_GUIDE && InJob[playerid])
				{
					if(StolCrupe[i] != INVALID_PLAYER_ID)return SendError(playerid,"За этим столиком уже есть крупье");
					StolCrupe[i] = playerid;
				}
				if(StolInfo[i][bPlayers] == 5)return SendError(playerid,"За этим столиком нет свободных мест");
				ShowBonesMenu(playerid, i);
				return 1;
			}
		}
		foreach(Player, i)
		{
			if(IsPlayerInDynamicArea(playerid, RadarInfo[i][rRemove]))
				if(ADuty[playerid] == 228 || (IsACop(playerid) && PlayerInfo[playerid][pRank] > 3))
				{
					if(i == playerid)SetPVarInt(playerid, "TempRadar", 1);
					return DeleteRadar(i);
				}
		}
		if(GetPVarInt(playerid,"RoulTable"))
		{
			if(GetPVarInt(playerid, "showedroulmenu"))return 1;
			if(PlayerInfo[playerid][pJob] == JOB_GUIDE && InJob[playerid])SendInfo(playerid,"Используйте: {FFA500}/roll");
			if(RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rPlayers] == 10 && !(PlayerInfo[playerid][pJob] == JOB_GUIDE && InJob[playerid]))return SendClientMessage(playerid,COLOR_GRAY,"За этим столиком нет свободных мест");
			ShowRoulMenu(playerid);
			return 1;
		}
		if(GetPlayerVirtualWorld(playerid)==0)
		{
			for(new i;i<MAX_NARKO;i++)
			{
			    if(ddrugs[i]!=-1)
			    {
			        GetDynamicObjectPos(ddrugs[i],x,y,z);
					if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
					{
					    if(ddTimer[i]==0)
			    		{
			    		    Timerak[playerid]=17;
						    return 1;
						}
						else
						{
							if(GetPVarInt(playerid,"timeas")>gettime())
							{
							    if(!IsAtGang(playerid))return SendError(playerid,"Вы не можете испортить этот саженец");
							    Timerak[playerid]=17;
							    return 1;
							}
							SetPVarInt(playerid,"timeas",gettime()+4);
							SendError(playerid,"Конопля еще не созрела, нажмите ~k~~SNEAK_ABOUT~ еще раз чтобы вырвать саженец");
							return 1;
						}
					}
				}
			}
		}
		for(new i; i < MAX_FOOL; i++)
		{
			if(IsPlayerInDynamicArea(playerid, FoolInfo[i][foolArea]))//return SendError(playerid, "Игра временно недоступна");
				if(!GetPVarInt(playerid, "showedfool"))
				{
					if(FoolInfo[i][foolPlayers] == 4)return SendError(playerid,"За этим столиком нет свободных мест");
					if(FoolInfo[i][foolGamestart])return SendError(playerid, "За этим столом уже начата игра");
					SetPVarInt(playerid, "FoolTable", i+1);
					return ShowFoolMenu(playerid);
				}
		}
		for(new i; i < MAX_PARKING; i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 1.0, ParkInfo[i][parkPos][0], ParkInfo[i][parkPos][1], ParkInfo[i][parkPos][2]))
			{
				SetPlayerPos(playerid, ParkInfo[i][parkExit][0], ParkInfo[i][parkExit][1], ParkInfo[i][parkExit][2]);
				SetPlayerFacingAngle(playerid, ParkInfo[i][parkExit][3]);
				SetPlayerVirtualWorld(playerid, ParkInfo[i][parkWorld]);
				GameTextForPlayer(playerid, "~g~PARKING ZONE", 3000, 5);
				SetCameraBehindPlayer(playerid);
				return 1;
			}
			else if(IsPlayerInRangeOfPoint(playerid, 1.0, ParkInfo[i][parkExit][0], ParkInfo[i][parkExit][1], ParkInfo[i][parkExit][2]) && GetPlayerVirtualWorld(playerid) == ParkInfo[i][parkWorld])
			{
				SetPlayerPos(playerid, ParkInfo[i][parkPos][0], ParkInfo[i][parkPos][1], ParkInfo[i][parkPos][2]);
				SetPlayerFacingAngle(playerid, ParkInfo[i][parkPos][3]);
				SetPlayerVirtualWorld(playerid, 0);
				SetCameraBehindPlayer(playerid);
				return 1;
			}
		}
		//////////
		for(new i;i<sizeof(phonepos);i++)
		{
		    if(IsPlayerInRangeOfPoint(playerid, 2, phonepos[i][0],phonepos[i][1],phonepos[i][2]))
			{
 				SetPlayerChatBubble(playerid, "Использует телефон", COLOR_PURPLE, 10.0, 5000);
 				ShowPlayerDialogEx(playerid,2261,0,"{43CD80}Выберите действие","{FAAC58}- Телефонная будка{FFFFFF}\n\nСтоимость вызова такси составляет 75$, если наша компания найдет свободное\nтакси мы вас сразу оповестим.\n{FAAC58}Желаете продолжить?","Принять","Отмена");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 770.8220,-77.3209,1000.6563 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 681.4680,-1652.4188,871.2896))ShowPlayerDialogEx(playerid,6446,DIALOG_STYLE_MSGBOX,"{43CD80}Раздевалка","Вы хотите надеть/снять форму и начать/закончить тренировку?","Надеть","Снять");
  		if(Clother[playerid] != -1)
	    {
	        if(PlayerInfo[playerid][pSkin] != 0)
	        {
		        if(!IsPlayerInRangeOfPoint(playerid, 1.0, 199.1063, -128.3574, 1003.5152))
		        {
			        Clother[playerid] = -1;
					TogglePlayerControllable(playerid, true);
     				SetPlayerSkinEx(playerid,PlayerInfo[playerid][pOldSkin]);
					TogglePlayerDynamicCP(playerid, Binko_CP, true);
					SetCameraBehindPlayer(playerid);
					return 1;
				}
			}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1774.8309,-1654.0077,20.3739 )){
			ShowPlayerDialogEx(playerid,1339,2,"{43CD80}Задать вопрос","- Что ты тут делаешь?\n- Куда ты сейчас направляешся?\n- Как найти автошколу?\n- Что делать если нет паспорта?\n- Сложно ли тут получить права?\n- Где взять телефон?\n- У меня нет мед.карты, где ее получить?","Выбрать", "");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1781.2798,-1650.7191,20.1869 )){
			new num;
			for(new i = 1;i < MAX_QUESTS;i++)
			{
				new skr[32];
				if(AcceptQuest[playerid][i] == 0) skr = "{56A85E}[Доступен]{FFFFFF}";
				else if(QuestProgress[playerid][i] >= QI[i][LastProgress] && AcceptQuest[playerid][i] != 0) skr = "{7396FB}[Завершён]{FFFFFF}";
				else if(QuestProgress[playerid][i] < QI[i][LastProgress] && AcceptQuest[playerid][i] != 0) skr = "{FFCB8C}[В процессе]{FFFFFF}";
				format(string,sizeof(string),"%s\n%s %s",string,QI[i][QuestName],skr);
				QuestShow[playerid][num]=i;
				num++;
			}
			ShowPlayerDialogEx(playerid,7971,2,"Квесты",string,"Принять","Отмена");
			return 1;
		}
		///////////
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, -382.9610,-1438.8756,26.3290))
		{
		    if(PlayerInfo[playerid][pJob]== 17 || PlayerInfo[playerid][pJob]== 18 || PlayerInfo[playerid][pJob]== 19 || PlayerInfo[playerid][pJob]== 20)format(string,sizeof(string),"{43CD80}Текущая должность: %s",GetJobName(PlayerInfo[playerid][pJob]));
		    else format(string,sizeof(string),"");
			ShowPlayerDialogEx(playerid,3919,2,string,"{7396FB}-{FFFFFF} Информация\n{7396FB}-{FFFFFF} Переодеться и начать/закончить работу\n{7396FB}-{43CD80} Устроиться на работу фермера","Принять","Отмена");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -138.8487,-83.6043,3.1172))
		{
		    if(PlayerInfo[playerid][pJob]== 22)format(string,sizeof(string),"{43CD80}Текущая должность: %s",GetJobName(PlayerInfo[playerid][pJob]));
		    else format(string,sizeof(string),"");
			ShowPlayerDialogEx(playerid,3921,2,string,"{7396FB}-{FFFFFF} Информация\n{7396FB}-{FFFFFF} Переодеться и начать/закончить работу\n{7396FB}-{43CD80} Устроиться на работу в винограднике","Принять","Отмена");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1195.0355,1273.6887,1051.7373))
		{
		    if(PlayerInfo[playerid][pJob]== 23)format(string,sizeof(string),"{43CD80}Текущая должность: %s",GetJobName(PlayerInfo[playerid][pJob]));
		    else format(string,sizeof(string),"");
			ShowPlayerDialogEx(playerid,3922,2,string,"{7396FB}-{FFFFFF} Информация\n{7396FB}-{FFFFFF} Переодеться и начать/закончить работу\n{7396FB}-{43CD80} Устроиться на работу в цеху","Принять","Отмена");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -1902.7009,-1673.3423,21.7513))
		{
		    if(PlayerInfo[playerid][pJob]== 24)format(string,sizeof(string),"{43CD80}Текущая должность: %s",GetJobName(PlayerInfo[playerid][pJob]));
		    else format(string,sizeof(string),"");
			ShowPlayerDialogEx(playerid,3923,2,string,"{7396FB}-{FFFFFF} Информация\n{7396FB}-{FFFFFF} Переодеться и начать/закончить работу\n{7396FB}-{43CD80} Устроиться на работу в шахте","Принять","Отмена");
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1471.0629,659.3188,979.1759))return ShowForexDialog(playerid);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1720.4006,2279.5247,1422.9221))
		{
            if(PlayerInfo[playerid][pWanted] > 0)
			{
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pWanted] * 1800;
				PlayerInfo[playerid][pBailPrice] = PlayerInfo[playerid][pWanted] * 150000;
				if(SlotValue[playerid][14] >0 || SlotValue[playerid][11] >0) SendError(playerid,"У вас отобрали наркотики и материалы");
				_ResetGun(playerid);
				PlayerInfo[playerid][pWanted] = 0;
				SetPlayerWantedLevelEx(playerid,0);
				PlayerSpawn(playerid);
				SlotValue[playerid][14] = 0;
				SlotValue[playerid][11] = 0;
				format(string, sizeof(string), "Вы добровольно сели в тюрьму на %d минут", (PlayerInfo[playerid][pJailTime]/60));
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Используйте /advokats, чтобы найти адвоката, который вам поможет выйти отсюда");
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
				TogglePlayerControllable(playerid, true);
			}
			else SendBotMessage(playerid,"Интересно в каком же вы собрались преступлении сознаваться, если вас нет в списке разыскиваемых?");
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 3.5, 9.5227,-20.9149,1231.0688 ))
		{
			ShowPlayerDialogEx(playerid,8721,2,"{43CD80}Выберите действие","- Сколько сейчас слушателей Радио ЛС?\n- Сколько сейчас слушателей Радио СФ?\n- Сколько сейчас слушателей Радио ЛВ?","Принять","Отмена");
			SendBotMessage(playerid,"Что пожелаете?");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2766.8298,-2517.4626,13.6418 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 2733.4961,-2513.3254,13.6641 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 2720.8320,-2487.6189,13.7089)  || IsPlayerInRangeOfPoint(playerid, 1.0, 2720.8445,-2417.5535,13.6280)  || IsPlayerInRangeOfPoint(playerid, 1.0, 2726.2590,-2384.1726,13.6328))
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, GetPVarFloat(playerid, "Matspos_X"), GetPVarFloat(playerid, "Matspos_Y"), GetPVarFloat(playerid, "Matspos_Z")))return SendError(playerid,"Этот тайник пуст");
		    if(FractionValue[TEAM_ARMY][0] < 2000) return SendClientMessage(playerid, 0xAFAFAFFF, "На складе недостаточно материалов");
			if(!IsAtGang(playerid)) return SendError(playerid,"Вы не состоите в банде ");
			if(SlotValue[playerid][11] + 500 > 2000) return SendError(playerid,"У вас уже нет места для хранения материалов");
		    SlotValue[playerid][11] += 500;
		    FractionValue[TEAM_ARMY][0] -= 500;
		    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	 	   	format(string,sizeof(string),"Своровал материалы");
			SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы успешно своровали 500 материалов");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "Matspos_X", pos[0]);
			SetPVarFloat(playerid, "Matspos_Y", pos[1]);
			SetPVarFloat(playerid, "Matspos_Z", pos[2]);
		    return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1548.2480,460.4911,7.1975) || IsPlayerInRangeOfPoint(playerid, 1.0, -1513.8723,422.4987,7.1846) || IsPlayerInRangeOfPoint(playerid, 1.0, -1500.0229,384.3810,7.1846) || IsPlayerInRangeOfPoint(playerid, 1.0, -1495.1292,406.3829,3.0847))
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, GetPVarFloat(playerid, "Matspos_X"), GetPVarFloat(playerid, "Matspos_Y"), GetPVarFloat(playerid, "Matspos_Z")))return SendError(playerid,"Этот тайник пуст");
		    if(FractionValue[TEAM_ARMYSF][0] < 2000) return SendClientMessage(playerid, 0xAFAFAFFF, "На складе недостаточно материалов");
			if(!IsAtGang(playerid)) return SendError(playerid,"Вы не состоите в банде");
			if(SlotValue[playerid][11] + 500 > 2000) return SendError(playerid,"У вас уже нет места для хранения материалов");
		    SlotValue[playerid][11] += 500;
		    FractionValue[TEAM_ARMY][0] -= 500;
		    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	 	   	format(string,sizeof(string),"Своровал материалы");
			SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы успешно своровали 500 материалов");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "Matspos_X", pos[0]);
			SetPVarFloat(playerid, "Matspos_Y", pos[1]);
			SetPVarFloat(playerid, "Matspos_Z", pos[2]);
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 154.3891,1903.3417,18.7570 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 141.1707,1875.4081,17.8434 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 115.3891,1875.2244,17.8359 ) ||
		IsPlayerInRangeOfPoint(playerid, 1.0, 117.9125,1871.2745,17.8359 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 141.1704,1875.4607,17.8434 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 137.3782,1879.5315,17.8359 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 193.3672,1931.5112,17.6406 ) || IsPlayerInRangeOfPoint(playerid, 1.0, 202.5459,1861.9189,13.1406 ))
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, GetPVarFloat(playerid, "Matspos_X"), GetPVarFloat(playerid, "Matspos_Y"), GetPVarFloat(playerid, "Matspos_Z")))return SendError(playerid,"Этот тайник пуст");
		    if(FractionValue[TEAM_ARMYLV][0] < 2000) return SendClientMessage(playerid, 0xAFAFAFFF, "На складе недостаточно материалов");
			if(!IsAtGang(playerid)) return SendError(playerid,"Вы не состоите в банде");
			if(SlotValue[playerid][11] + 500 > 2000) return SendError(playerid,"У вас уже нет места для хранения материалов");
		    SlotValue[playerid][11] += 500;
		    FractionValue[TEAM_ARMY][0] -= 500;
		    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	 	   	format(string,sizeof(string),"Своровал материалы");
			SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы успешно своровали 500 материалов");
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "Matspos_X", pos[0]);
			SetPVarFloat(playerid, "Matspos_Y", pos[1]);
			SetPVarFloat(playerid, "Matspos_Z", pos[2]);
			return 1;
		}
		///
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2564.4939, 1778.0359, 1059.7586 ))
		{
		    if(Clother[playerid] != -1 || BuyInt[playerid] != -1  || BuyGuns[playerid] != -1 || Buyitem[playerid]!=-1) return false;
			ShowPlayerDialogEx(playerid,1653,5,"{43CD80}Магазин аксессуаров","Предмет\tСлот\n\
			{FFFFFF}Наушники\t{FFCB8C}[5]\n\
			{FFFFFF}Шапка\t{FFCB8C}[1]\n\
			{FFFFFF}Панамка\t{FFCB8C}[1]\n\
			{FFFFFF}Кепка\t{FFCB8C}[1]\n\
			{FFFFFF}Каска\t{FFCB8C}[1]\n\
			{FFFFFF}Берет\t{FFCB8C}[1]\n\
			{FFFFFF}Парик\t{FFCB8C}[1]\n\
			{FFFFFF}Очки\t{FFCB8C}[2]\n\
			{FFFFFF}Бандана\t{FFCB8C}[4]\n\
			{FFFFFF}Шляпа\t{FFCB8C}[1]\n\
			{FFFFFF}Наручные часы\t{FFCB8C}[3]\n\
			{FFFFFF}Предметы на спину\t{FFCB8C}[6]\n\
			{FF9900}Редкие шляпы\t{FFCB8C}[1]\n\
			{FF9900}Редкие банданы\t{FFCB8C}[1]","Принять","Отмена");// \n\{FF9900}Редкие маски\t{FFCB8C}[1/4]
		}
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, 1547.6816,-1623.1069,13.3725 )) return J_SetPlayerPos(playerid,1547.7014,-1622.3954,13.5366);
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, 1547.7014,-1622.3954,13.5366 )) return J_SetPlayerPos(playerid,1547.6816,-1623.1069,13.3725);
		//Алькатрас
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, -2328.2952,1781.1470,33.2797))
		{
			if(!IsACop(playerid))return SendError(playerid, "У Вас нет пропуска");
			return J_SetPlayerPos(playerid,-2327.5176,1781.1763,33.2740);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, -2327.5176,1781.1763,33.2740))
		{
			if(!IsACop(playerid))return SendError(playerid, "У Вас нет пропуска");
			return J_SetPlayerPos(playerid,-2328.2952,1781.1470,33.2797);
		}
		//
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, -1358.5747,541.0541,1045.9476))
		{
			if(!IsAMeria(playerid))return SendError(playerid, "У Вас нет пропуска");
			return J_SetPlayerPos(playerid,-1357.8256,541.1177,1045.9414);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, -1357.8256,541.1177,1045.9414))
		{
			if(!IsAMeria(playerid))return SendError(playerid, "У Вас нет пропуска");
			return J_SetPlayerPos(playerid,-1358.5747,541.0541,1045.9476);
		}
		//
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, -1361.0114,551.9227,1045.9265))return Dialog_Open(playerid,492,1,"{43CD80}Создание семей","\n\n\\c{ffffff}Вы собираетесь создать семью. Цена: 3.000.000$\n\n\\cНапишите название вашей будущей семьи\n\n","Создать","Отмена");
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, -1364.3469,548.8475,1045.9324)){
			if(PlayerInfo[playerid][pExp] < 24) return SendError(playerid, "Заказ рекламного баннера доступен после 24 отыгранных часов");
			strcat(string, "{7396FB}Место размещения\t{7396FB}Статус\t{7396FB}Владелец\n");
			new str[128];
			for(new ss; ss < MAX_BILLBORDS; ss++){
				if(strlen(BildInfo[ss][bOwner]) < 4) f(str,"%s\t{43CD80}Свободен\t{43CD80}Нет владельца\n",BildInfo[ss][bPosText]);
				else f(str,"%s\t{D94141}Арендован\t{D94141}%s\n",BildInfo[ss][bPosText],BildInfo[ss][bOwner]);
				strcat(string,str);
			}
			return ShowPlayerDialogEx(playerid,1171,DIALOG_STYLE_TABLIST_HEADERS,"{43CD80}Заказ билборда",string,"Выбрать","Закрыть");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, -2322.4248,1812.6958,33.2521))return Dialog_Open(playerid, 0,0,"Переводной дурак | Правила игры","\n\n\
		\\c{ff4400}Цель игры в переводного дурака\n\
		\\c{FFFFFF}Цель игры – первым избавиться от всех своих карт, как и во всех видах дурака. Игрок, который\n\
		\\cпоследний остался с картами \"на руках\", считается проигравшим\n\n\
		\\c{ff4400}Порядок и правила ходов в переводном дураке\n\
		\\c{FFFFFF}• ход делается всегда налево от игрока, который ходит\n\
		\\c• за один раз можно ходить одной картой или несколькими одного ранга (например 3 шестерки или 2 короля)\n\
		\\c• подбрасывать можно все карты того же ранга, которые участвуют в данном заходе\n\
		\\c• подбрасывать карты того же ранга могут все игроки в порядке очереди, по кругу\n\
		\\c• отбой должен составлять не больше 6 карт\n\
		\\c• побить карту противника можно либо старшей картой той же масти, либо козырем\n\
		\\c• если защищающийся не может побить хотя бы одну карту - он забирает все карты себе, включая те, которые он смог побить\n\
		\\c• защищающийся может сразу взять карты атакующего, даже не пытаясь их побить или при наличии карты такого же ранга - перевести их следующему по кругу игроку\n\
		\\c• в случае, если игрок смог отбить все карты - эти карты переходят в отбой\n\
		\\c• после отбоя все игроки берут недостающие карты по кругу от сдающего в порядке очереди, у каждого игрока опять должно быть по 6 карт\n\
		\\c• если в колоде не хватает карт - игрок остается с теми картами, которые у него есть на данный момент\n\
		\\c• если игрок отбился всеми своими картами и при этом в колоде еще остались карты, он берет карты\n\
		\\c• если игрок отбился всеми своими картами и при этом в колоде карт больше нет:\n\
		\\c    {C9EAFF}a) если играют два играка - игрок, у которого остались карты проигрывает\n\
		\\c    б) если играет больше двух игроков - он выбывает из игры, остальные игроки продолжают играть\n\n\
		\\c{ff4400}Как правильно переводить карты\n\
		\\c{FFFFFF}• переводить можно карты только того же ранга, которым \"атаковал\" (заходил на вас) игрок\n\
		\\c• нельзя переводить карты, если вы уже начали отбиваться\n\
		\\c• игрок, которому перевели карты, может их перевести дальше по кругу, карты даже могут вернуться игроку, который первый начал переводить\n\
		\\c• нельзя переводить больше карт, чем у игрока, которому вы собираетесь переводить\n\
		\\c• когда переведенные карты оказались у игрока, который не может или не хочет их переводить дальше - тогда этот игрок должен \"отбить\" все карты или забрать их себе\n\n", "Скрыть", "");
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, -2306.2517,1786.0886,33.1264))return Dialog_Open(playerid, 0,0,"Подкидной дурак | Правила игры","\n\n\
		\\c{ff4400}Цель игры в переводного дурака\n\
		\\c{FFFFFF}Цель игры – первым избавиться от всех своих карт, как и во всех видах дурака. Игрок, который\n\
		\\cпоследний остался с картами \"на руках\", считается проигравшим\n\n\
		\\c{ff4400}Порядок и правила ходов в переводном дураке\n\
		\\c{FFFFFF}• ход делается всегда налево от игрока, который ходит\n\
		\\c• за один раз можно ходить одной картой или несколькими одного ранга (например 3 шестерки или 2 короля)\n\
		\\c• подбрасывать можно все карты того же ранга, которые участвуют в данном заходе\n\
		\\c• подбрасывать карты того же ранга могут все игроки в порядке очереди, по кругу\n\
		\\c• отбой должен составлять не больше 6 карт\n\
		\\c• побить карту противника можно либо старшей картой той же масти, либо козырем\n\
		\\c• если защищающийся не может побить хотя бы одну карту - он забирает все карты себе, включая те, которые он смог побить\n\
		\\c• в случае, если игрок смог отбить все карты - эти карты переходят в отбой\n\
		\\c• после отбоя все игроки берут недостающие карты по кругу от сдающего в порядке очереди, у каждого игрока опять должно быть по 6 карт\n\
		\\c• если в колоде не хватает карт - игрок остается с теми картами, которые у него есть на данный момент\n\
		\\c• если игрок отбился всеми своими картами и при этом в колоде еще остались карты, он берет карты\n\
		\\c• если игрок отбился всеми своими картами и при этом в колоде карт больше нет:\n\
		\\c    {C9EAFF}a) если играют два играка - игрок, у которого остались карты проигрывает\n\
		\\c    б) если играет больше двух игроков - он выбывает из игры, остальные игроки продолжают играть\n\n\
		\\c{ff4400}Ограничения при подкидывании карт\n\
		\\c{FFFFFF}• нельзя атаковать бОльшим количеством карт, чем есть у отбивающегося (если у игрока три карты, ему положили одну, и он решил ее принять, то ему можно добавить только две вдогонку)\n\
		\\c• нельзя подкидывать более пяти карт, даже если у игрока на руках больше карт, то есть максимальное количество карт для отбоя – шесть\n\n", "Скрыть", "");
		//
		for(new i=0;i<OWNABLECASINO;i++)
		{
		    if(GLS[30]==1)return SendError(playerid,"Казино закрыто");
		    if(IsPlayerInRangeOfPoint(playerid, 1.0, CasinoInfo[i][casPos][0],CasinoInfo[i][casPos][1],CasinoInfo[i][casPos][2] ) && GetString(CasinoInfo[i][casOwner],"The State" ))
			{
				ShowPlayerDialogEx(playerid,3411,2,"{43CD80}Выберите действие","Информация о казино\n{C9963E}Купить казино","Принять","Отмена");
				return 1;
			}
			if(IsPlayerInRangeOfPoint(playerid, 1.0, CasinoInfo[i][casPos][0],CasinoInfo[i][casPos][1],CasinoInfo[i][casPos][2] ) && !GetString(CasinoInfo[i][casOwner],"The State" ))
			{
       			if(GLS[30]==1)return SendError(playerid,"Казино закрыто");
				new hour,minuite,second;
			    gettime(hour,minuite,second);
				if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 18 ))
				{
					SendError(playerid,"Гос.организации могут играть в казино с 18:00 до 10:00");
					return 1;
				}
				if(CasinoInfo[i][casLock]==0)
				{
				    if(CasinoInfo[i][casEnter]!=228) format(string,sizeof(string),"Войти в казино {43CD80}[Открыто] | {C9EAFF}Стоимость входа $%d{FFFFFF}\nИнформация о казино",CasinoInfo[i][casEnter]);
				    else format(string,sizeof(string),"Войти в казино {43CD80}[Открыто] | {D94141}Доступно только VIP игрокам{FFFFFF}\nИнформация о казино");
					ShowPlayerDialogEx(playerid,3412,2,"{43CD80}Выберите действие",string,"Принять","Отмена");
					return 1;
				}
				else ShowPlayerDialogEx(playerid,3412,2,"{43CD80}Выберите действие","Войти в казино {D94141}[Закрыто]{FFFFFF}\nИнформация о казино","Принять","Отмена");
			}
			if(IsPlayerInRangeOfPoint(playerid, 1.0, CasinoInfo[i][casExit][0],CasinoInfo[i][casExit][1],CasinoInfo[i][casExit][2]) && GetPlayerVirtualWorld(playerid) == CasinoInfo[i][casWorld])
			{
			    SetPlayerVirtualWorld(playerid,0);
			    SetPlayerInterior(playerid,0);
			    J_SetPlayerPos(playerid,CasinoInfo[i][casPos][0],CasinoInfo[i][casPos][1],CasinoInfo[i][casPos][2]);
			    return 1;
			}
		}
		for(new i;i < 14;i++)
		{
		    if(IsPlayerInRangeOfPoint(playerid, 3.0, bandos[i][0],bandos[i][1],bandos[i][2]))
			{
				ShowPlayerDialogEx(playerid,654,2,"{43CD80}Выберите действие","- {7396FB}Играть{FFFFFF}\n- {7396FB}Информация","Принять","Закрыть");
				break;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1, 2073.8965,-1369.1693,1007.1063 ))
		{
		    J_SetPlayerPos(playerid,2342.5989,-673.4814,1055.4230);
		    J_SetPlayerFacingAngle(playerid,269.5394);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 2342.5989,-673.4814,1055.4230 ))
		{
      		J_SetPlayerPos(playerid,2073.8965,-1369.1693,1007.1063);
		    J_SetPlayerFacingAngle(playerid,91.2718);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 483.0550,246.8815,3197.7139 )) return J_SetPlayerPos(playerid,474.5011,216.2406,3194.6360);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 474.5011,216.2406,3194.6360 ))return  J_SetPlayerPos(playerid,483.0550,246.8815,3197.7139);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 481.3205,216.2760,3194.6360 ))return  J_SetPlayerPos(playerid,461.6805,223.6825,3197.7139);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 461.6805,223.6825,3197.7139 ))return  J_SetPlayerPos(playerid,481.3205,216.2760,3194.6360);
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1583.3033,-1637.5920,13.3905 ))
	    {
			if(PlayerInfo[playerid][pMember] !=1)return SendError(playerid,"У вас нет ключей от двери");
	        J_SetPlayerPos(playerid,1583.3656,-1638.4817,13.3333);
	        return true;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1583.3656,-1638.4817,13.3333 ))
	    {
	        if(PlayerInfo[playerid][pMember] !=1)return SendError(playerid,"У вас нет ключей от двери");
            J_SetPlayerPos(playerid,1583.3033,-1637.5920,13.3905);
            return true;
	    }
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1473.5546,659.3191,979.1759))
	    {
	        if(PlayerInfo[playerid][pOOC]!=0)return SendBotMessage(playerid,"У вас уже есть банковская карта");
	        if(SlotValue[playerid][0]<1000)return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
	        ShowPlayerDialogEx(playerid,779,0,"{43CD80}Информация","{FFA500}Приветствуем Вас в центральном банке города Los-Santos!\n\n{FFFFFF}Вы действительно хотите получить банковскую карту?\nПри получении банковской карты вы принимаете все условия в использовании наших услуг","Принять","Отмена");
	        return true;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1411.2351,-1705.3066,13.5395))
	    {
			format(string,sizeof(string),"{7396FB}Центральный банк Los-Santos{FFFFFF}\n\nНалог на авто: {7396FB}%d{FFFFFF}\nНалог на дом: {7396FB}%d{FFFFFF}\nНалог на бизнес: {7396FB}%d{43CD80}\n\nНалоги могут измениться в любой момент\nСледите за новостями",GLS[1],GLS[2],GLS[3]);
			ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
			return true;
	    }
	    ////////
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1114.9540,-2586.3728,1221.5060 )) return  J_SetPlayerPos(playerid,1056.6017,-2579.2100,1223.9309);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1056.6017,-2579.2100,1223.9309 ))return J_SetPlayerPos(playerid,1114.9540,-2586.3728,1221.5060);
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, 592.9380,1428.2743,1900.7980 ))return J_SetPlayerPos(playerid,592.8829,1426.6675,1900.7980);
		else if(IsPlayerInRangeOfPoint(playerid, 0.5, 592.8829,1426.6675,1900.7980 ))return J_SetPlayerPos(playerid,592.9380,1428.2743,1900.7980);
		////rcpd
		//LVA
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 153.5847, 1944.6009, 19.9951)) return  J_SetPlayerPos(playerid,140.0786, 1939.7599, 19.6785);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 140.0786, 1939.7599, 19.6785)) return  J_SetPlayerPos(playerid,153.5847, 1944.6009, 19.9951);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 291.7215, 1834.0690, 18.2331)) return  J_SetPlayerPos(playerid,279.0815, 1833.0690, 18.2331);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 279.0815, 1833.0690, 18.2331)) return  J_SetPlayerPos(playerid,291.7215, 1834.0690, 18.2331);
		//LVA
		else if(IsPlayerInRangeOfPoint(playerid, 1, 618.9825,-568.0446,26.1432 ))
		{
		    SetPlayerInterior(playerid,6);
	 		SetPlayerVirtualWorld(playerid,11);
	 		J_SetPlayerPos(playerid,246.4067,88.0055,1003.6406);
	 		J_SetPlayerFacingAngle(playerid,180.9066);
	 		return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 1478.3495,649.6915,979.1730))
		{
			if(GetTeamID(playerid) != 21)return SendError(playerid, "Вы не сотрудник банка");
	 		J_SetPlayerPos(playerid,1485.3514,649.6918,979.1730);
	 		J_SetPlayerFacingAngle(playerid,0.0);
	 		return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 1485.3514,649.6918,979.1730))
		{
			if(GetTeamID(playerid) != 21)return SendError(playerid, "Вы не сотрудник банка");
	 		J_SetPlayerPos(playerid,1478.3495,649.6915,979.1730);
	 		J_SetPlayerFacingAngle(playerid,0.0);
	 		return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1, 246.4067,88.0055,1003.6406))
		{
			if(GetPlayerVirtualWorld(playerid)==11)
			{
			    SetPlayerInterior(playerid,0);
		 		SetPlayerVirtualWorld(playerid,0);
				J_SetPlayerPos(playerid,618.9825,-568.0446,26.1432);
				J_SetPlayerFacingAngle(playerid,84.4441);
				return true;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1165.4773,1346.2273,10.9219 ))return J_SetPlayerPos(playerid,1165.4714,1344.7832,10.8125);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1165.4714,1344.7832,10.8125 ))return J_SetPlayerPos(playerid,1165.4773,1346.2273,10.9219);
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1288.3657,-1267.7411,20.6199 ))return ShowPlayerDialogEx(playerid,189,2,"{43CD80}Пожертвовать","{FFFFFF}Пожертвовать: 10 000$\nПожертвовать: 50 000$\nПожертвовать: 200 000$\nПожертвовать: 1 000 000$\nПожертвовать: 5 000 000$","Принять","Отклонить");
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1219.9004,-1270.2891,2053.6570))
	 	{
	 	    foreach(new i:Player)
	 	    {
	 	        if(PlayerInfo[i][pCredit]>0 && IsPlayerLogged[i])
	 	        {
	 	            format(string,sizeof(string),"- %s\t\t\t - Должен: %d\t\tУровень розыска: %d",PlayerName[i],PlayerInfo[i][pCredit],PlayerInfo[i][pWanted]);
	 	            ShowPlayerDialogEx(playerid,0,0,"{43CD80}Должники банка",string,"Принять","");
	 	        }
	 	    }
		}

		if(IsPlayerInRangeOfPoint(playerid, 1.0, 199.1063, -128.3574, 1003.5152 ))
		{
			if(PlayerInfo[playerid][pSkin]!= GetPlayerSkin(playerid)) return SendClientMessage (playerid,COLOR_VALIK,"Вы не можете переодеться,  так как вы сейчас в служебной одежде!{FFFFFF}");

			if(Clother[playerid] == -1) SetPlayerBuySkin(playerid, 1);
			return true;
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2046.7076,-123.9330,1035.6184))
		{
	        if(CuffedTime[playerid] > 0) return SendClientMessage(playerid,COLOR_LIGHTRED,"Вы обездвижены и не можете двигаться");
			if(DrivingTest[playerid] == 0)
			{
			    PddState[playerid] = 0;
				SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 1: Общие положения ____|");
		  		SendClientMessage(playerid, COLOR_WHITE, "1.1. Настоящие Правила дорожного движения устанавливают единый порядок дорожного движения на всей территории San Andreas");
		  		SendClientMessage(playerid, COLOR_WHITE, " 1.2. Лица, нарушившие Правила, несут ответственность в соответствии с действующим законодательством");
				ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Выход\"", "Далее", "Выход");
				return true;
			}
			else SendError(playerid,"В данный момент вы сдаете тест на права");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1626.2545,-1137.5186,23.9063 ))
	 	{
			if(PlayerInfo[playerid][pJob]!=JOB_MECHANIC )return SendError(playerid,"Вы не работаете механиком");
			if(mehan[playerid]!=2) return SendError(playerid,"Вы не переоделись");
            ShowPlayerDialogEx(playerid,381,2,"{43CD80}Выбор работы","1. Отремонтировать авто\n2. Починить двигатель","Принять","Отмена");
            return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1627.8707,-1139.1649,23.9063 ))
	 	{
	 	    if(PlayerInfo[playerid][pJob] != JOB_MECHANIC) return SendError(playerid,"Вы здесь не работаете");
		    if(!InJob[playerid]) ShowPlayerDialogEx(playerid,661,0,"{43CD80}Работа 'Механик'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
			else ShowPlayerDialogEx(playerid,662,0,"{43CD80}Работа 'Механик'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2258.63330, 1800.81921, 1028.86426))
	 	{
   			new hour,minuite,second;
		    gettime(hour,minuite,second);
		    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 18 ))
			{
		 		SendError(playerid,"Гос.организации могут работать с 18:00 до 10:00");
		 		return 1;
			}
	 	    if(PlayerInfo[playerid][pJob] != JOB_GUIDE) return SendError(playerid,"Вы здесь не работаете");
		    if(!InJob[playerid]) ShowPlayerDialogEx(playerid,663,0,"{43CD80}Работа 'Крупье'","{FFFFFF}Вы хотите переодеться чтобы начать работу?","Да","Нет");
			else ShowPlayerDialogEx(playerid,664,0,"{43CD80}Работа 'Крупье'","{FFFFFF}Вы хотите переодеться чтобы завершить работу?","Да","Нет");
			return true;
		}
	  	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2277.6079,50.8652,1040.7622)|| IsPlayerInRangeOfPoint(playerid, 1.0, -1609.7928,-110.7104,1501.0859) || IsPlayerInRangeOfPoint(playerid, 1.0, 661.5717,-1644.2955,871.2830)|| IsPlayerInRangeOfPoint(playerid, 1.0, 550.3827,1472.2921,1900.7980))
		{
			if(!PlayerInfo[playerid][pHeal])
			{
				new Float:Health;
				GetPlayerHealth(playerid,Health);
				if(Health < 100.0)ShowPlayerDialogEx(playerid,186,0,"{43CD80}Курс лечения","{FFFFFF}Вы хотите пройти курс лечения?","Да","Нет");
				else SendBotMessage(playerid,"Не вижу явных признаков какой-либо болезни *улыбается*");
			}
			else SendBotMessage(playerid,"Вы уже проходите лечение. Вернитесь в свою палату");
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -1369.2617,543.1968,1042.1315))
		{
			if(!IsValidPassport(playerid))Dialog_Open(playerid, 148, 1, "{43CD80}Дата рождения", "\n\n\\c{FFFFFF}Укажите дату рождения вашего персонажа\n\\c{E64444}Пример: 2/5/1992\n\n", "Выбор", "Отмена");
			else SendBotMessage(playerid,"У вас уже есть паспорт");
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 246.4129,71.6503,1003.6406))
			{
				J_SetPlayerPos(playerid, 246.4379,73.7743,1003.6406);
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
				return true;
			}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 246.4379,73.7743,1003.6406))
			{//кагада
				J_SetPlayerPos(playerid, 246.4129,71.6503,1003.6406);
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Exit", 3000, 3);
				return true;
			}
        else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2847.9468,-2519.4592,11.9786))
		{
			J_SetPlayerPos(playerid, 2842.3452,-2523.9382,17.7489);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2842.3452,-2523.9382,17.7489))
		{
			J_SetPlayerPos(playerid, 2847.9468,-2519.4592,11.9786);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~EXIT", 3000, 3);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -1360.3853,525.5770,1045.9207))
		{
			return ShowPlayerDialogEx(playerid, 233, 5, "{43CD80}Выберите действие","Должность\n\
			Механик\n\
			Таксист\n\
			Крупье\n\
			Работник налоговой\n\
			Инкассатор\n\
			Дальнобойщик\n\
			Металлоломщик\n\
			Водитель автобуса\n\
			Развозчик продуктов\n\
			Адвокат","Выбор","Отмена");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -1619.9810,649.4741,-5.2422)) return callcmd::findnumb(playerid,"");
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -1619.8113,653.5823,-5.2422))
		{
		    new trt[2000];
			format(trt,sizeof(trt),"\n\n\\c{B8AB1E}Чтобы подать заявку на регистрацию номера, используйте команду /reg\n\n\\c{FFFFFF}После отправки на обработку, вам необходимо ждать пока кто-то из работников SFPD одобрит или отклонит вашу заявку!\n\\cЕсли рядом никого из сотрудников нет, вы не сможете получить разрешение на установку номера для автомобиля!");
			format(trt,sizeof(trt),"%s\n\\cЕсли вы получите разрешение на установку определенного номера, вам необходимо\n\\cзаехать в нашу мастерскую (Она в этом же месте), и установить номер\n\n",trt);
			Dialog_Open(playerid,0,0,"{43CD80}Информация",trt,"Принять","");
		}

		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2033.3712,-117.4146,1035.1719))
		{
		   if(TimetoReturn[playerid]>0)return SendError(playerid,"Подождите пока арендованную машину заберут на стоянку");
		   if(CarTest[playerid] != -1)
		   {
	 			CarTest[playerid] = -1;
	 			SendError(playerid,"Вы отменили практическую часть экзамена");
	 			DisablePlayerRaceCheckpoint(playerid);
				return 1;
		   }
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2048.5449,-121.3634,1035.6184))
		{
		    if(PlayerInfo[playerid][pCarLic] == 1) return SendError(playerid,"Ваша лицензия на авто обнулена. Теперь её можно получить только у лицензеров");
		    if(PlayerInfo[playerid][pCarLic]) return SendError(playerid,"У вас уже есть водительские права");
			if(DrivingTest[playerid] == 0 && CarTest[playerid] == -1)
			{
				ShowPlayerDialogEx(playerid,48,0,"{43CD80}Вступление","{FFFFFF}Вас приветствует школа вождения San-Fierro\nДля продолжения нажмите 'Далее'","Далее","Отмена");
				DrivingTest[playerid] = 1;
				Question[playerid] = 0;
				Errors[playerid] = 0;
				TestASKMassive[playerid] = { 0, 1, 2, 3 };
				RandomMassive(TestASKMassive[playerid], 4);
			}
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1713.4481,-1641.3649,20.2225) && GetPlayerVirtualWorld(playerid)==1)
		{
	 		SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			J_SetPlayerPos(playerid, 1659.1163,-1640.2465,57.1529);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1659.1163,-1640.2465,57.1529))
		{
		    SetPlayerInterior(playerid, 18);
			SetPlayerVirtualWorld(playerid, 1);
			J_SetPlayerPos(playerid, 1713.4481,-1641.3649,20.2225);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Exit", 3000, 3);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1243.5242,-1275.9985,2058.7649))
		{
		    J_SetPlayerFacingAngle(playerid,3.1076);
			J_SetPlayerPos(playerid, 1243.5079,-1275.9948,2053.6570);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Exit", 3000, 3);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1243.5079,-1275.9948,2053.6570))
		{
		    J_SetPlayerFacingAngle(playerid,5.3010);
			J_SetPlayerPos(playerid, 1243.5242,-1275.9985,2058.7649);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
			return true;
  		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1147.9972,-1343.0070,13.6483))
		{
		    SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 1);
			J_SetPlayerPos(playerid, 2070.8188,-1363.2648,1001.3094);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
			NoEnterPickup[playerid] =2;
	    	TogglePlayerControllable(playerid,false);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2594.7959,642.3338,14.4531))
		{
		    SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 3);
			J_SetPlayerPos(playerid, 2070.8188,-1363.2648,1001.3094);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Enter", 3000, 3);
			NoEnterPickup[playerid] =2;
	    	TogglePlayerControllable(playerid,false);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1489.8192,-1662.7606,1516.2263))
		{
		    if(GetTeamID(playerid) != TEAM_FBI) return SendError(playerid, "У Вас нет доступа");
		    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
		    ShowPlayerDialogEx(playerid, 240, 2, "{43CD80}Выберите действие", "{7396FB}-{FFFFFF} Стандарт [4+]\n{7396FB}-{FFFFFF} Средний [6+]\n{7396FB}-{FFFFFF} Высший [9]\n{7396FB}-{FFFFFF} Переодеться в служебную одежду", "Выбор", "Отмена");
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2721.2869,-2380.0461,17.3403))
		{
		    SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 20);
			J_SetPlayerPos(playerid, 90.6645,54.3722,1002.2188);
			SetPlayerFacingAngle(playerid, 83.5908);
			SetCameraBehindPlayer(playerid);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, -1508.0974,460.1775,7.1846))
		{
		    SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 27);
			J_SetPlayerPos(playerid, 90.6645,54.3722,1002.2188);
			SetPlayerFacingAngle(playerid, 83.5908);
			SetCameraBehindPlayer(playerid);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 340.5760,1949.1917,22.0172))
		{
		    SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 7);
			J_SetPlayerPos(playerid, 90.6645,54.3722,1002.2188);
			SetPlayerFacingAngle(playerid, 83.5908);
			SetCameraBehindPlayer(playerid);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 90.6645,54.3722,1002.2188)) //Столовка
		{
			switch(GetPlayerVirtualWorld(playerid))
			{
			case 20:
				{
					J_SetPlayerPos(playerid, 2721.2869,-2380.0461,17.3403);
					SetPlayerFacingAngle(playerid, 180.000);
				}
			case 27:
				{
					J_SetPlayerPos(playerid, -1508.9364,460.2805,7.1846);
					SetPlayerFacingAngle(playerid, 90.000);
				}
			case 7:
				{
					J_SetPlayerPos(playerid, 338.1841,1948.5125,22.01893);
					SetPlayerFacingAngle(playerid, 90.000);
				}
			}
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1462.9194,-1638.6376,1518.1765)) //Столовка
		{
		    if(!IsAtFrakcia(playerid, 1)) return SendError(playerid,"Дверь заперта");
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
			J_SetPlayerPos(playerid, 279.5766,-1619.0736,114.6778);
			SetPlayerFacingAngle(playerid, 261.7703);
			NoEnterPickup[playerid] =2;
 			TogglePlayerControllable(playerid,false);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 279.5766,-1619.0736,114.6778)) //кукурику
		{
		    if(!IsAtFrakcia(playerid, 1)) return SendError(playerid,"Дверь заперта");
		    SetPlayerInterior(playerid, 3);
		    SetPlayerVirtualWorld(playerid, 0);
			J_SetPlayerPos(playerid, 1462.9194,-1638.6376,1518.1765);
			SetPlayerFacingAngle(playerid, 180.0000);
			NoEnterPickup[playerid] =2;
 			TogglePlayerControllable(playerid,false);
			return true;
		}
		//
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 368.4228,194.0216,1008.3828)) //Столовка
		{
		    if(!IsAtFrakcia(playerid, 1)) return SendError(playerid,"Дверь заперта");
		    SetPlayerInterior(playerid, 0);
		    SetPlayerVirtualWorld(playerid, 0);
			J_SetPlayerPos(playerid, 287.3401,-1611.8865,17.8593);
			SetPlayerFacingAngle(playerid, 170.8995);
			NoEnterPickup[playerid] =2;
 			TogglePlayerControllable(playerid,false);
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 287.3401,-1611.8865,17.8593)) //кукурику
		{
		    if(!IsAtFrakcia(playerid, 1)) return SendError(playerid,"Дверь заперта");
		    SetPlayerInterior(playerid, 3);
		    SetPlayerVirtualWorld(playerid, 0);
			J_SetPlayerPos(playerid, 366.0320,193.1542,1008.3828);
			SetPlayerFacingAngle(playerid, 180.0000);
			NoEnterPickup[playerid] =2;
 			TogglePlayerControllable(playerid,false);
			return true;
		}
		/////тютя
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1492.7451,1308.4236,1093.2927)) //Столовка
		{
  			new hour,minuite,second;
		    gettime(hour,minuite,second);
		    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 18 ))
			{
		 		SendError(playerid,"Гос.организации могут работать с 18:00 до 10:00");
		 		return 1;
			}
		    if(GetPlayerVirtualWorld(playerid) == 1)
		    {
		        if(HouseNalogState2[playerid] == 2)
				{
		            format(string,sizeof(string),"[Информация] {FFFFFF}Вы получили {7396FB}$%d{FFFFFF} за проделанную работу",GLS[12]);
		            SendClientMessage(playerid,COLOR_WHITE,string);
		            GiveMoney(playerid,GLS[12]);
		            HouseNalogState2[playerid] = 0;
				}
			    if(PlayerInfo[playerid][pJob] != JOB_NALOG) return SendError(playerid,"Вы не работаете в Налоговой");
				new sstr[3000],rte[3500],numik;
				for(new houseid=random(MAX_HOUSES);houseid< MAX_HOUSES;houseid++)
				{
				    if(HouseInfo[houseid][hNalog2] < 200 || strcmp(HouseInfo[houseid][hOwner],"The State",true) == 0 ) continue;
				    numik++;
					format(sstr,sizeof(sstr),"%s%s\t\t\t{40B02F}$%d{FFFFFF}\n",sstr,HouseInfo[houseid][hOwner],HouseInfo[houseid][hNalog2]);
					if(numik>=20)break;
				}
				if(strlen(sstr) > 0 )
				{
				    format(rte,sizeof(rte),"Имя/Фамилия\tДолжен\t\n%s",sstr);
					ShowPlayerDialogEx(playerid,982,5,"{43CD80}Должники",rte,"Выбрать","Отмена");
				}
				else ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{FFFFFF}На данный момент доступной работы нет!\n\n{40B02F}Попробуйте поискать работу еще раз","Скрыть", "");
			}
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 76.5662,62.6399,1002.2188) || IsPlayerInRangeOfPoint(playerid, 1.0, -1543.1743,461.8521,7.1975))
		{
		    if(Getemer[playerid]>gettime())return false;
	    	Getemer[playerid]=gettime()+5;
		    if(!IsAtFrakcia(playerid)) return SendError(playerid,"Вы не состоите в гос. структурах");
		    GiveFullness(playerid,50);
			ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
			SendClientMessage(playerid, COLOR_VALIK,"Вы немного перекусили");
			return true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1241.6412,-1262.8788,2058.7649)) ShowPlayerDialogEx(playerid,185,2,"{43CD80}Выберите еду","{42B02C}-{FFFFFF} Картофель-Фри \t\t220$\n{42B02C}-{FFFFFF} Сэндвич \t\t\t260$\n{42B02C}-{FFFFFF} Баскет \t\t\t300$\n{42B02C}-{FFFFFF} Крылышки \t\t\t340$\n{42B02C}-{FFFFFF} Салат \t\t\t380$\n{42B02C}-{FFFFFF} Курица \t\t\t420$\n{42B02C}-{FFFFFF} Комплексный Обед \t\t700$","Выбор","Отмена");
	}
	if(PRESSED(KEY_FIRE)) //балончик
	{
	    IsDropBomb(playerid);
	    for(new car = 1; car <= GetVehiclePoolSize(); car++)
	    {
			GetVehiclePos(car,XYZ[0],XYZ[1],XYZ[2]);
		    if(IsPlayerInRangeOfPoint(playerid,2,XYZ[0],XYZ[1],XYZ[2]))
		    {
			    if(GetPlayerWeapon(playerid) == 41)
				{
				    if(VehicleInfo[car][vTeam]!=0)return SendError(playerid,"Вы не можете покрасить эту машину");
					if(IsPlayerInAnyVehicle(playerid))return false;
				    if(GetPVarInt(playerid,"balon") == 0 || GetPVarInt(playerid,"balon1") == 0 ) return SendError(playerid,"Вы не выбрали цвет для покраски или у вас нет балончика");
			 		Process[playerid][car] +=1;
			 		format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~w~Complete ~y~%d~w~/~y~30",Process[playerid][car]);
			 		GameTextForPlayer(playerid, string, 700, 3);
					if(Process[playerid][car] == 30)
					{
				        new carid = GetVehicleID(car);
				        Process[playerid][carid] = 0;
						PlayerInfo[playerid][pRepBan]--;
				        Process[playerid][car] = 0;
						ChangeVehicleColor(car,GetPVarInt(playerid,"balon"),GetPVarInt(playerid,"balon1"));
						CarInfo[carid][cColor_1] = GetPVarInt(playerid,"balon");
						CarInfo[carid][cColor_2] = GetPVarInt(playerid,"balon1");
		            	SaveOwnableCar(carid);
					}
					return true;
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(mehan[playerid]==2)
	    {
	        if(!IsPlayerInAnyVehicle(playerid))
	        {
		        new Float: Health;
		        for(new car = 1; car <= GetVehiclePoolSize(); car++)
			    {
			        new carid = GetVehicleID(car);
			        GetVehiclePos(car,XYZ[0],XYZ[1],XYZ[2]);
			        if((IsPlayerInRangeOfPoint(playerid,20,214.7567,-231.1590,1.7749) || IsPlayerInRangeOfPoint(playerid,20,2107.3054,898.5052,10.9149)) && IsPlayerInRangeOfPoint(playerid,3,XYZ[0],XYZ[1],XYZ[2]))
			        {
			            if(dilo[playerid]==0) return ShowPlayerDialogEx(playerid,381,2,"{43CD80}Выбор работы","1. Отремонтировать авто\n2. Починить двигатель","Принять","Отмена");
			            if(dilo[playerid]==2 && !IsAOwnableCar(car)) return SendError(playerid,"Отремонтировать двигатель можно только личному транспорту");
			            if(GetVehicleSeat(car, 0) == INVALID_PLAYER_ID) return SendError(playerid,"Вы не можете отремонтировать эту машину,  потому что в ней никто не сидит");
			            if(dilo[playerid]==1 && SlotValue[GetVehicleSeat(car, 0)][0]<600)return SendError(playerid,"У игрока недостаточно денег чтобы оплатить работу");
			            if(dilo[playerid]==2 && SlotValue[GetVehicleSeat(car, 0)][0]<22000)return SendError(playerid,"У игрока недостаточно денег чтобы оплатить работу");
			            if(dilo[playerid]==1)
			            {
							GetVehicleHealth(car,Health);
							if(Health > 950.0)return SendError(playerid,"Эта машина не сломана");
						}
						if(IsAPlane(car)) return SendError(playerid,"Вы не можете починить воздушный транспорт");
						if(dilo[playerid]==2 && CarInfo[carid][cMilage] < 100) return SendError(playerid,"Двигатель этого авто в полном порядке");
				        SeccureAnimation(playerid, "SWORD", "sword_block");
						MProcess[playerid][car] +=1;
	     				if(dilo[playerid]==1)
						{
							format(string,sizeof(string),"Чинит машину %d/45",MProcess[playerid][car]);
					 		SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
							format(string,sizeof(string),"Complated %d/45",MProcess[playerid][car]);
				 			GameTextForPlayer(playerid, string, 700, 3);
				 		}
				 		if(dilo[playerid]==2)
						{
						    format(string,sizeof(string),"Ремонтирует двигатель %d/90",MProcess[playerid][car]);
					 		SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
					 		////
					 		format(string,sizeof(string),"Complated %d/90",MProcess[playerid][car]);
				 			GameTextForPlayer(playerid, string, 700, 3);
						}
						if(dilo[playerid]==1 && MProcess[playerid][car] == 45)
						{
	     					foreach(new i:Player)
	     					{
	     					   if(GetPlayerState(i)==2 && (IsPlayerInRangeOfPoint(playerid,20,214.7567,-231.1590,1.7749) || IsPlayerInRangeOfPoint(playerid,20,2107.3054,898.5052,10.9149)) )
	     					   {
	     					    	if(GetPlayerVehicleID(i) == car)
	     					    	{
										if(GetVehicleSeat(car, 0) != INVALID_PLAYER_ID) GiveMoney(playerid,600);
										GiveMoney(i,-600);
		     					        SendClientMessage(i,COLOR_GRAY,"[Информация] {FFFFFF}Двигатель вашего автомобиля успешно починили за $600");
									}
	     					   }
	     					}
							dilo[playerid]=0;
					        MProcess[playerid][carid] = 0;
					        MProcess[playerid][car] = 0;
					        SetPlayerChatBubble(playerid, "Починил машину", COLOR_PURPLE, 10.0, 5000);
					        SendError(playerid,"Вы починили машину");
					        J_RepairVehicle(car);
						}
      					else if(MProcess[playerid][car] == 90 && dilo[playerid]==2)
						{
	     					foreach(new i:Player)
	     					{
	     					   if(GetPlayerState(i)==2 && (IsPlayerInRangeOfPoint(playerid,20,214.7567,-231.1590,1.7749) || IsPlayerInRangeOfPoint(playerid,20,2107.3054,898.5052,10.9149)) )
	     					   {
	     					    	if(GetPlayerVehicleID(i) == car)
	     					    	{
	     					    	    if(GetVehicleSeat(car, 0) != INVALID_PLAYER_ID) GiveMoney(playerid,20000);
										GiveMoney(i,-22000);
		     					        SendClientMessage(i,COLOR_RED,"[Информация] {FFFFFF}Двигатель вашего автомобиля успешно отремонтировали за $22 000");
		     					        SendClientMessage(i,COLOR_VALIK,"[Информация] {FFFFFF}Пробег вашего авто уменьшился на 100 км");
		     					        SetEngineStatus(car,false, playerid);
										//SpeedOFF(i, car, 2);
									}
	     					   }
	     					}
	     					dilo[playerid]=0;
					        MProcess[playerid][car] = 0;
					        MProcess[playerid][carid] = 0;
					        SetPlayerChatBubble(playerid, "Починил двигатель", COLOR_PURPLE, 10.0, 5000);
					        SendError(playerid,"Вы починили двигатель автомобиля");
					        CarInfo[carid][cMilage] -=100.0;
						}
					}
				}
		    }
		}
	}
	if(Cuffed[playerid])
	{
	    if(!CuffedTime[playerid])
		{
			if(!pTemp[playerid][BreakTime])
			{
				if(pTemp[playerid][BreakKey] != 0)
				{
					if(PRESSED(pTemp[playerid][BreakKey]))
					{
						pTemp[playerid][BreakCount] ++;
						ShowPlayerActionText(playerid, "~g~Success");
	    				ShowPlayerActionBand(playerid, pTemp[playerid][BreakCount], 10);
						if(pTemp[playerid][BreakCount] >= 10)
						{
							PlayerInfo[playerid][pClip] --;
							SendClientMessage(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы взломали наручники");
							UnCuffPlayer(playerid);
							//діра
					        if(GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID)
					        {
	                            CheckPlayerGoCuff(GotoInfo[playerid][gtGoID]);
								CheckPlayerGoCuff(playerid);
							}
						}
						else pTemp[playerid][BreakTime] = 2;
					}
					else
					{
						pTemp[playerid][BreakTime] = 2;
						ShowPlayerActionText(playerid, "~r~Fail");
					}
				}
			}
		}
	}
 	if(newkeys & KEY_WALK && !IsPlayerInAnyVehicle(playerid))
	{
		if(CuffedTime[playerid] > 0) return SendClientMessage(playerid,COLOR_LIGHTRED,"Вы обездвижены и не можете двигаться");
	    if(InfoHouse[playerid] != -1)
	    {
	        new i = InfoHouse[playerid];
	        if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[i][hEnter][0],HouseInfo[i][hEnter][1],HouseInfo[i][hEnter][2]))
		    {
      			if(HouseInfo[i][hLock]>0 && !IsACop(playerid)) return SendClientMessage(playerid,COLOR_LIGHTRED,"Дверь закрыта, невозможно зайти");
      			SendInfo(playerid,"Используйте инвентарь для управления домом");
      			SendInfo(playerid,"Используйте /med чтобы использовать аптечку из дома");
		      	HouseEntered[playerid] = i;
		      	InfoHouse[playerid] = -1;
				for(new j; j < 8; j ++)
					PlayerTextDrawHide(playerid, maininfo[playerid][j]);
		      	SetPlayerInterior(playerid,HouseInfo[i][hInt]);
		      	SetPlayerVirtualWorld(playerid,(i+50));
		      	J_SetPlayerPos(playerid,HouseInfo[i][hExit][0],HouseInfo[i][hExit][1],HouseInfo[i][hExit][2]);
				return true;
  			}
  			else InfoHouse[playerid] = -1;
	    }
	    if(HouseEntered[playerid] != -1)
	    {
	        new i = HouseEntered[playerid];
	        if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[i][hExit][0],HouseInfo[i][hExit][1],HouseInfo[i][hExit][2]))
	        {
         		if(GetPlayerVirtualWorld(playerid) == (i+50))
         		{
		         	HouseEntered[playerid] = -1;
		         	SetPlayerInterior(playerid,0);
		         	SetPlayerVirtualWorld(playerid,0);
		         	J_SetPlayerPos(playerid,HouseInfo[i][hEnter][0],HouseInfo[i][hEnter][1],HouseInfo[i][hEnter][2]);
		         	return true;
         		}
	        }
	    }
	    if(InfoBiz[playerid] != -1)
	    {
	        new i = InfoBiz[playerid];
	        if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]))
			{
				EnterBiz(playerid, i);
				InfoBiz[playerid] = -1;
				for(new j; j < 8; j ++)
					PlayerTextDrawHide(playerid, maininfo[playerid][j]);
				return true;
			}
			else InfoBiz[playerid] = -1;
	    }
	    if(BizEntered[playerid] != -1)
	    {
	        new i = BizEntered[playerid];
	        if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[i][bExit][0],BizInfo[i][bExit][1],BizInfo[i][bExit][2]))
			{
				BizEntered[playerid] = -1;
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				J_SetPlayerPos(playerid,BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]);
				return true;
			}
	    }
	}
	if(PRESSED(1032))
	{
	    if(PlayerInfo[playerid][pShield] > 0)
		{
		    if(!UsingShield[playerid])
			{
			    ResetShield[playerid] = 20;
			    UsingShield[playerid] = true;
			    SetPlayerAttachedObjectEx(playerid, 6, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
				ApplyAnimation(playerid, "PED", "WEAPON_CROUCH", 4.1, 0, 1, 1, 1, 0, 0);
			}
			else
			{
			    SetPlayerAttachedObjectEx(playerid, 6, 18637, 1, 0.15, -0.05, 0.18, 90, 0, 270);
			    UsingShield[playerid] = false;
			    ClearAnims(playerid);
			}
		}
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new carid = GetPlayerVehicleID(playerid);
		if(IsAVelik(carid))return 1;
	    if(GetPlayerState(playerid) == 2)
		{
			if(newkeys & 1)
			{
				switch(VehicleInfo[carid][vJob])
				{
				case 1:
					{
						if(rabden[playerid] == 1) ShowPlayerDialogEx(playerid,RABOTABUS+5,0,"{43CD80}Работодатель","Вы действительно хотите начать?","Да","Нет");
						else ShowPlayerDialogEx(playerid,RABOTABUS+5,0,"{43CD80}Работодатель","Вы действительно хотите завершить?","Да","Нет");
					}
				case 5:
					{
						if(!TaxiTarif[playerid])callcmd::taxi(playerid);
						else ShowPlayerDialogEx(playerid,541,0,"{43CD80}Работодатель","Вы действительно хотите завершить?","Да","Нет");
					}
				case 6:if(BenzinCena[carid])ShowPlayerDialogEx(playerid,541,0,"{43CD80}Работодатель","Вы действительно хотите завершить?","Да","Нет");
				}
				if(IsACopCar(carid) && IsACop(playerid))
				{
					if(CarStrips[carid] > 0)
					{
						if(StripCount < 50)
						{
							if(TempStripObject[carid] == -1)
							{
								TempStripObject[carid] = CreateDynamicObject(2899,0,0,0,0,0,0);
								AttachDynamicObjectToVehicle(TempStripObject[carid], carid, 0.0, -2.2, -0.3, 0.0, 0.0, 90.0);
								SendError(playerid,"Сбрасывание шипов...");
								if(IsPlayerInVehicle(playerid, carid))
								{
									if(CarStrips[carid] > 0)
									{
										if(StripCount < MAX_STRIPS)
										{
											new Float:X,Float:Y,Float:Z,Float:A;
											GetVehicleShiftPos(carid, 1, X, Y, Z, 3.0);
											GetVehicleZAngle(carid, A);
											DestroyDynamicObject(TempStripObject[carid]);
											TempStripObject[carid] = CreateDynamicObject(2899, X, Y, Z-0.5, 0, 0, A-90);
											TempStripTimer[carid] = SetTimerEx("DestroyTempStrip", 10000, false, "ii", StripCount, carid);
											TStripPos[StripCount][0] = X;
											TStripPos[StripCount][1] = Y;
											TStripPos[StripCount][2] = Z-0.5;
											NoStrip[playerid] = StripCount;
											SetPlayerTimer(playerid,"PlayerUnStrip",1000,false);
											SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы сбросили полосу с шипами");
											PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
											CarStrips[carid] --;
											format(string,sizeof(string),"[Информация] {FFFFFF}Осталось шипов: %d",CarStrips[carid]);
											SendClientMessage(playerid,COLOR_GRAY,string);
											StripCount ++;
										}
										else
										{
											DestroyDynamicObject(TempStripObject[carid]);
											SendError(playerid,"По всему штату становлено более "#StripCount#" шипов, подождите немного..");
										}
									}
									else
									{
										SendError(playerid,"На этом транспорте нет шипов");
										DestroyDynamicObject(TempStripObject[carid]);
									}
								}
								else DestroyDynamicObject(TempStripObject[carid]);
							}
							else SendError(playerid,"Интервал сбрасывания полосы с шипами 10 секунд..");
						}
						else SendError(playerid,"По всему штату установлено более 50 шипов, подождите немного..");
					}
					else SendError(playerid,"На этом транспорте нет шипов");
				}
				return true;
			}
			if(newkeys & 512)callcmd::en(playerid);
		}
		if(PRESSED(KEY_NO)){
			if(PlayerInfo[playerid][pExp] < 20)SendInfo(playerid,"Чтобы убрать мышку, нажмите {7396FB}клавишу 'ESC'");
			return SelectTextDraw(playerid, 0x82CFFFAA);
		}
	}
	else
	{
	    if(PRESSED(KEY_NO))
	    {
			if(CuffedTime[playerid] > 0) return SendClientMessage(playerid,COLOR_LIGHTRED,"Вы обездвижены и не можете двигаться");
			if(TazerPlayer[playerid] != INVALID_PLAYER_ID)
			{
			    new target = TazerPlayer[playerid];
			    if(IsPlayerConnected(target))
			    {
				    if(ProxDetectorS(2.5, playerid, target, 1))
				    {
				        callcmd::cuff(playerid, IntToStr(target));
				        return true;
				    }
			    }
			    else TazerPlayer[playerid] = INVALID_PLAYER_ID;
			}
			if(GetPlayerWeapon(playerid) == 0)
			{
				if(GetPlayerTargetPlayer(playerid) != INVALID_PLAYER_ID)
				{
					if(ProxDetectorS(3.0, playerid, GetPlayerTargetPlayer(playerid), 1)){
						ClickedPlayerID[playerid] = GetPlayerTargetPlayer(playerid);
						showmenutext(playerid, GetPlayerTargetPlayer(playerid));
					}
					else SendError(playerid,"Вы далеко от игрока");
				}
			}
			if(GetPVarInt(playerid, "JailBreak") && IsPlayerInRangeOfPoint(playerid, 2, -2298.37793, 1873.42346, 36.11070))
			{
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
				PlayerInfo[playerid][pGlue]--;
				DestroyPlayerObject(playerid, PlayerInfo[playerid][AlkatrazObject]);
				DestroyDynamic3DTextLabel(PlayerInfo[playerid][AlkatrazText]);
				SendClientMessage(playerid, COLOR_ORANGE, "Перебирайтесь через забор и плывите в сторону берега");
				SendClientMessage(playerid, COLOR_ORANGE, "До истечения таймера Вам нужно покинуть красную зону");
				CreatePlayerObject(playerid, 1437, -2301.2197, 1872.5553, 36.8694, -45.00000, 0.00000, -6.50000);
			}
         	if(PlayerInfo[playerid][pHeal] > 0)
	        {
             	if(Healttime[playerid]>gettime())return SendError(playerid,"Не флуди");
	            if(!PlayerLie[playerid])
	            {
                    for(new i; i < sizeof(HealInfo); i ++)
                    {
		                if(IsPlayerInRangeOfPoint(playerid,1,HealInfo[i][hCP][0],HealInfo[i][hCP][1],HealInfo[i][hCP][2]) && GetPlayerVirtualWorld(playerid)==HealInfo[i][hWorld])
				        {
				            if(!GetString(HealInfo[i][hName],"The State")) return SendError(playerid,"Эта койка занята");
							format(string,sizeof(string),"{D94141}Койка занята\n\n{FFFFFF}Пациент: {43CD80}%s", Name(playerid));
							UpdateDynamic3DTextLabelText(HealText[i],COLOR_WHITE,string);
                            PlayerBed[playerid] = i;
							PlayerLie[playerid] = true;
							SetString(HealInfo[i][hName],PlayerName[playerid]);
							Healttime[playerid]=gettime()+5;
							break;
				        }
			        }
	            }
	            else
	            {
	                Healttime[playerid]=gettime()+5;
	                Controllable[playerid] = true;
					TogglePlayerControllable(playerid, true);
     				CheckBed(playerid);
					SetPlayerTimer(playerid, "ClearAnim", (GetPlayerPing(playerid)*2)+100, false);
	            }
	        }
	        else if(InfoHouse[playerid] != -1)
	        {
	            new house = InfoHouse[playerid];
	            if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[house][hEnter][0],HouseInfo[house][hEnter][1],HouseInfo[house][hEnter][2]))
		    	{
	           	 	if(IsValidPassport(playerid))
			    	{
				        if(SlotValue[playerid][1] == -1)
				        {
					        if(GetString(HouseInfo[house][hOwner],"The State"))
				     	    {
				     	        if(GetMoney(playerid) >= HouseInfo[house][hCost])
				     	        {
			     	                HouseEntered[playerid] = house;
			     	                HouseInfo[house][hNoOwner] = 0;
			     	                InfoHouse[playerid] = -1;
			     	                PlayerInfo[playerid][pDCTime]=2;
			     	                SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ваш дом. Изменить место спавна >> /setspawn");
			     	                GiveMoney(playerid,-HouseInfo[house][hCost],"BuyHouse");
									new logtime[3],logdate[3],logtimestring[16],housestr[24];
									f(housestr, "Покупка дома (%d)",house);
									getdate(logdate[2],logdate[1],logdate[0]);
									gettime(logtime[0],logtime[1],logtime[2]);
									f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
									WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система",housestr,-HouseInfo[house][hCost],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
			     	                SlotValue[playerid][1] = house;
									foreach(new i:Player)if(HouseNalog[i] == house)
									{
									    callcmd::stopjob(i);
								        SendClientMessage(i,COLOR_RED,"[Информация] {FFFFFF}Дом над которым вы работаете был выкуплен. Начните работу заново");
									}
			     	                SetPlayerInterior(playerid,HouseInfo[house][hInt]);
				               	 	SetPlayerVirtualWorld(playerid,house+50);
									for(new i; i < 8; i ++)
										PlayerTextDrawHide(playerid, maininfo[playerid][i]);
			     	                J_SetPlayerPos(playerid,HouseInfo[house][hExit][0],HouseInfo[house][hExit][1],HouseInfo[house][hExit][2]);
				               	 	SetString(HouseInfo[house][hOwner],PlayerName[playerid]);
				               	 	UpdateHouse(house);
			     	                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Поздравляем! Теперь этот дом ваш");
			     	                PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			     	                SaveAccount(playerid);
			     	                //SaveHouse(house);
									return true;
				     	        }
				     	        else SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			     	        }
			     	        else SendError(playerid,"Этот дом уже куплен");
						}
						else SendError(playerid,"У вас уже есть дом/либо вы арендуете чей то");
					}
	     	        else SendError(playerid,"У вас нет паспорта, получить его можно в мэрии");
	     	    }
	     	    else InfoHouse[playerid] = -1;
	        }
	        else if(InfoBiz[playerid] != -1)
	        {
	            new biz = InfoBiz[playerid];
	            if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[biz][bEnter][0],BizInfo[biz][bEnter][1],BizInfo[biz][bEnter][2]))
		    	{
		        	if(SlotValue[playerid][3] == -1)
		        	{
				        if(GetString(BizInfo[biz][bOwner],"The State"))
			     	    {
			     	        if(GetMoney(playerid) >= BizInfo[biz][bCost])
			     	        {
		     	                GiveMoney(playerid,-BizInfo[biz][bCost],"BuyBiz0");
		     	                SlotValue[playerid][3] = biz;
								new logtime[3],logdate[3],logtimestring[16],bizstr[24];
								f(bizstr, "Покупка бизнеса (%d)",biz);
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система",bizstr,-BizInfo[biz][bCost],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		     	                BizInfo[biz][bLevel]=0;
			               	 	SetString(BizInfo[biz][bOwner],PlayerName[playerid]);
		     	                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Поздравляем! Теперь этот бизнес ваш");
		     	                PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
		     	                UpdateBiz(biz,1);
		     	                SaveAccount(playerid);
			     	        }
			     	        else SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		     	        }
		     	        else SendError(playerid,"Этот бизнес уже кем то куплен");
	     	        }
					else SendError(playerid,"У вас уже есть бизнес");
	     	    }
	     	    else InfoBiz[playerid] = -1;
	        }
			else if(InfoSTO[playerid] != -1)
	        {
	            new biz = InfoSTO[playerid];
	            if(IsPlayerInRangeOfPoint(playerid,2.0,TuningInfo[biz][stoPos][0],TuningInfo[biz][stoPos][1],TuningInfo[biz][stoPos][2]))
		    	{
		        	if(SlotValue[playerid][4] == -1)
		        	{
				        if(GetString(TuningInfo[biz][stoOwner],"None"))
			     	    {
			     	        if(GetMoney(playerid) >= 2000000)
			     	        {
		     	                GiveMoney(playerid,-2000000,"BuyCarService");
		     	                SlotValue[playerid][4] = biz;
								new logtime[3],logdate[3],logtimestring[16],bizstr[24];
								f(bizstr, "Покупка СТО (№ %d)",biz);
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система",bizstr,-2000000,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
			               	 	SetString(TuningInfo[biz][stoOwner],PlayerName[playerid]);
		     	                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Поздравляем! Теперь эта СТО ваша");
		     	                PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
		     	                UpdateSTO(biz);
		     	                SaveAccount(playerid);
			     	        }
			     	        else SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		     	        }
		     	        else SendError(playerid,"Эта СТО уже кем-то куплена");
	     	        }
					else SendError(playerid,"У вас уже есть СТО");
	     	    }
	     	    else InfoSTO[playerid] = -1;
	        }
	        else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1463.7428,655.6723,979.1730) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 1466.2533,655.6681,979.1730) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 1480.5974,655.6681,979.1730) ||
					IsPlayerInRangeOfPoint(playerid, 2.5, 1478.0747,655.6681,979.1730)) return ShowBankMenu(playerid);
			else if(IsAtBankomat(playerid,2.0)) return ShowBankMenu(playerid);
			else
			{
   				new biz = BizEntered[playerid];
   				if(biz != -1 && BizInfo[biz][bState] == B_BUY)
				{
        			for(new i; i < sizeof(BuyPos); i ++)
					{
        			 	if(IsPlayerInRangeOfPoint(playerid, 2.0, BuyPos[i][0], BuyPos[i][1], BuyPos[i][2]))callcmd::shopss(playerid);
					}
				}
				else if(IsPlayerInRangeOfPoint(playerid, 3.0, -2237.0293,130.1837,1035.4141)) ShowPlayerDialogEx(playerid,93,5,"{43CD80}Магазин механики",BUY_MENU_MEHAN,"Купить","Назад");
				else
				{
					if(Clother[playerid] != -1 || BuyInt[playerid] != -1  || BuyGuns[playerid] != -1 || Buyitem[playerid]!=-1 || !IsPlayerLogged[playerid]) return false;
					if(CuffedTime[playerid] > 0) return SendError(playerid,"Вы обездвижены и не можете двигаться");
					if(Cuffed[playerid]) return SendError(playerid,"Вы скованы и не можете двигаться");
					if(IsACop(playerid) && GetPlayerVirtualWorld(playerid) && TeamDuty[playerid])
					{
						if(IsPlayerInRangeOfPoint(playerid, 1.2, -2208.7266,1789.3815,1054.9576))return ShowPlayerDialogEx(playerid, 1481, 2, "Пульт управления камерами","{56A85E}Принудительно открыть все камеры\n{D94141}Принудительно закрыть все камеры", "Выбрать", "Отмена");
						else{
							if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
							{
								for(new i; i < 165;i ++)
								{
									if(IsPlayerInRangeOfPoint(playerid,1.0,AlkatrazDoors[i][alClose_X],AlkatrazDoors[i][alClose_Y]-1.1,AlkatrazDoors[i][alClose_Z]))
									{
										if(GetPlayerVirtualWorld(playerid) == AlkatrazDoors[i][alWorld])
										{
											if(IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 4)
											{
												AlkMove(i);
												SetPlayerChatBubble(playerid, "Открыл камеру", COLOR_GREEN, 10.0, 5000);
												return 1;
											}
											else return SendError(playerid, "У вас нет ключей от этой камеры");
										}
									}
								}
							}
						}
					}
					if(PlayerInfo[playerid][pExp] < 20)SendInfo(playerid,"Чтобы убрать мышку, нажмите {7396FB}клавишу 'ESC'");
					return SelectTextDraw(playerid, 0x82CFFFAA);
				}
	        }
	        return true;
	    }
	}
	if(newkeys & KEY_SPRINT && newkeys & KEY_JUMP && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid, "PED", "GETUP_FRONT", 4.0, 0, 1, 1, 0, 0, 1);
	if(!PlayerLie[playerid] && GotoInfo[playerid][gtGoID]==INVALID_PLAYER_ID)
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
	        if(( newkeys & KEY_FIRE || (oldkeys & 128 && newkeys & 16)))
			{
				if(GetPlayerWeapon(playerid)==9)
				{
				    if(!IsPlayerInRangeOfPoint(playerid,100,585.11108, 246.06941, 16.49663) && !IsPlayerInRangeOfPoint(playerid,20,1045.4690,-312.4203,73.9931))
				    {
				        NoEnterPickup[playerid] =7;
						TogglePlayerControllable(playerid,false);
						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{FFFFFF}Вы используете бензопилу не по назначению! Использовать ее вы можете в месте где растут ёлки","Принять","");
				    }
				}
			}
		}
	}
	time_newkeys = GetTickCount() - tickcount1;
	return true;
}
stock EnterBiz(playerid,bizid)
{
    if(!IsNoEnterBiz(bizid))
	{
		if(!BizInfo[bizid][bLock])
		{
		    if(GetPlayerVirtualWorld(playerid)!=0)return 1;
			BizEntered[playerid] = bizid;
			SetPlayerInterior(playerid,BizInfo[bizid][bInt]);
			SetPlayerVirtualWorld(playerid,(bizid+100));
			J_SetPlayerPos(playerid,BizInfo[bizid][bExit][0],BizInfo[bizid][bExit][1],BizInfo[bizid][bExit][2]);
			NoEnterPickup[playerid] =2;
	    	TogglePlayerControllable(playerid,false);
	    	SetCameraBehindPlayer(playerid);
			BizInfo[bizid][bVisit] ++;
		}
		else SendClientMessage(playerid,COLOR_LIGHTRED,"Дверь закрыта, невозможно зайти");
	}
	return true;
}
public ClearAnims(playerid)
{
	return ApplyAnimation(playerid, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1, 1);
}

stock IsNoEnterBiz(bizid)
{
	if(BizInfo[bizid][bExit][0] == 0.0 && BizInfo[bizid][bExit][1] == 0.0 && BizInfo[bizid][bExit][2] == 0.0) return true;
	return false;
}
public OnRconLoginAttempt(ip[], password[], success)
{
    printf("RCON Login: Wrong try to autorize from %s. Tried password: %s",ip, password);
    new pip[16],text[128];
    foreach(new i:Player)
    {
        GetPlayerIp(i, pip, sizeof(pip));
        if(!strcmp(ip, pip, true))
        {
        	if(PlayerInfo[i][pAdmin]<5)
        	{
				format(text,sizeof text,"[A] %s[%d] попытался авторизоваться как RCON администратор и был кикнут",Name(i));
				SendAdminsMessage(COLOR_RED,text,1);
	            SendClientMessage(i, COLOR_RED, "Попытка RCON авторизации");
	            J_Kick(i);
				break;
			}
        }
    }
    return 1;
}
public OnPlayerUpdate(playerid)
{
	new time_update = GetTickCount();
	if(IsPlayerConnected(playerid)&& IsPlayerLogged[playerid])
	{
		if(PlayerAFKTime[playerid][0] > 10)SetPlayerChatBubble(playerid, " ", COLOR_WHITE, 30.0, 1);
		PlayerAFK[playerid] ++;
		PlayerAFKTime[playerid][0] = 0;
		new pCurWeap = GetPlayerWeapon(playerid);
		if(pCurWeap != pCurrentWeapon[playerid])
		{
			SetPlayerWeaponPrint(playerid, pCurWeap);
			pCurrentWeapon[playerid] = pCurWeap;
		}
		if(GetPlayerTargetPlayer(playerid) != INVALID_PLAYER_ID)GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~PRESS ~g~N", 3000, 3);
		if(GetPlayerState(playerid) == 2)
		{
			new Float:VHealth,Float: A;
			new carid = GetPlayerVehicleID(playerid);

			if(GetVehicleModelEx(carid) != 494 && GetVehicleModelEx(carid) != 433 && GetVehicleModelEx(carid) != 548)
			{
				new Float:hpveh; GetVehicleHealth(carid, hpveh);
				new Float:Coord[4];
				if(hpveh <= 260)
				{
					J_SetVehicleHealth(carid, 300.0);
					GetVehicleRotationQuat(carid, Coord[0], Coord[1], Coord[2], Coord[3]); 
					if(Coord[1])
					{
						GetVehicleZAngle(carid, Coord[0]); 
						SetVehicleZAngle(carid, Coord[0]); 
					}	
				}
			}
			new model = GetVehicleModelEx(carid);
			new speed = SpeedVehicle(playerid);
			GetVehicleHealth(carid, VHealth);
			GetVehicleZAngle(carid, A);
			if(speed > 10)
			{
				new Float:distance;
				if(speed < 50) distance = 0.7;
				else
				{
					distance = speed/50;
					distance += float(GetPlayerPing(playerid)) / 100;
				}
				new Float:X[2], Float:Y[2], Float:Z[2], Float:sX[2];
				GetVehicleModelInfo(model, VEHICLE_MODEL_INFO_WHEELSFRONT, X[0], Y[0], Z[0]);
				GetVehicleModelInfo(model, VEHICLE_MODEL_INFO_WHEELSREAR, X[1], Y[1], Z[1]);
				GetVehicleShiftPos(carid, 0, X[0], Y[0], Z[0], sX[0]);
				GetVehicleShiftPos(carid, 1, X[1], Y[1], Z[1], sX[1]);
				Z[0] -= 0.5, Z[1] -= 0.5;
				new c_panels, c_doors, c_lights, c_tires, set_tires;
				GetVehicleDamageStatus(carid, c_panels, c_doors, c_lights, c_tires);
				for(new i;i < StripCount;i ++)
				{
					if(i != NoStrip[playerid])
					{
						if(c_tires < 15)
						{
							if(PointToPoint(X[0],Y[0],Z[0],TStripPos[i][0],TStripPos[i][1],TStripPos[i][2]) <= distance)
							{
								switch(c_tires)
								{
								case 0, 2, 8:	set_tires = 10;
								case 1, 3, 9: 	set_tires = 11;
								case 4, 6,12: 	set_tires = 14;
								case 5, 7,13: 	set_tires = 15;
								default: continue;
								}
								if(c_tires != set_tires) UpdateVehicleDamageStatus(carid, c_panels, c_doors, c_lights, set_tires);
							}
							if(PointToPoint(X[1],Y[1],Z[1],TStripPos[i][0],TStripPos[i][1],TStripPos[i][2]) <= distance)
							{
								switch(c_tires)
								{
								case  0, 1, 4:	set_tires = 5;
								case  2, 3, 6:	set_tires = 7;
								case  8, 9,12:	set_tires = 13;
								case 10,11,14:	set_tires = 15;
								default: continue;
								}
								if(c_tires != set_tires) UpdateVehicleDamageStatus(carid, c_panels, c_doors, c_lights, set_tires);
							}
						}
					}
				}
			}
			if(IsAVelik(carid))
			{
				new str[64];
				format(str, sizeof(str), "\n{43CD80}%d КМ/Ч\n\n{FFFFFF}СОСТОЯНИЕ: {D94141}%d%", floatround(SpeedVehicle(playerid)),floatround(VehicleHealth[GetPlayerVehicleID(playerid)])/10);
				SetPlayerObjectMaterialText(playerid, GetPVarInt(playerid, "speedo_object"),str,0,OBJECT_MATERIAL_SIZE_512x256, "Calibri", 20, 0, 0xFF000000, 0x00000000, 1);
			}
			if(!IsAVelik(carid) && !IsAPlane(carid))
			{
				new temptext[256];
				format(temptext, sizeof(temptext), "%d", speed);
				PlayerTextDrawSetString(playerid, speeddraw[playerid][6], temptext);
				format(temptext, sizeof(temptext), "FUEL: ~p~%.0f%", Fuel[carid]);
				PlayerTextDrawSetString(playerid, speeddraw[playerid][5], temptext);
				if(IsAOwnableCar(carid))
				{
					VehicleMilage[carid] += float(speed)/20.0;
					if(VehicleMilage[carid] >= 300.0)
					{
						VehicleMilage[carid] = 0.0;
						new vehid = GetVehicleID(carid);
						CarInfo[vehid][cMilage] += 0.1;
						if(PlayerInfo[playerid][pGold])
						{
							format(temptext, sizeof(temptext), "MILEAGE: ~p~%.1f", CarInfo[vehid][cMilage]);
							PlayerTextDrawSetString(playerid, speeddraw[playerid][8], temptext);
						}
						if(CarInfo[vehid][cMilage] > 400.0)
						{
							switch(random(76))
							{
							case 0..55: SendError(playerid,"Требуется кап.ремонт двигателя. Возможна поломка (( Используйте /gps » важные места ))");
							case 56..60:
								{
									SendError(playerid,"Требуется кап.ремонт двигателя. Возможна поломка (( Используйте /gps » важные места ))");
									J_SetVehicleHealth(carid,250);
								}
							case 61..75: SendError(playerid,"Требуется кап.ремонт двигателя. Возможна поломка (( Используйте /gps » важные места ))");
							}
						}
					}
				}
			}
		}
	}
	time_update = GetTickCount() - time_update;
	if(time_update > time_update_max) time_update_max = time_update;
	if(IsPlayerConnected(playerid) && Spectate[playerid])
	{
		new Keys,ud,lr;
		GetPlayerKeys(playerid,Keys,ud,lr);
		if(LastReconClick[playerid][0] != ud) LastReconClick[playerid][0] = 0;
		if(LastReconClick[playerid][1] != lr) LastReconClick[playerid][1] = 0;
		if(Spectate[playerid] && lr == KEY_LEFT && !LastReconClick[playerid][1])
		{
			LastReconClick[playerid][1] = lr;
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			SubTextDelete(playerid);
			DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
			return 1;
		}
		if(Spectate[playerid] && lr == KEY_RIGHT && !LastReconClick[playerid][1])
		{
			LastReconClick[playerid][1] = lr;
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)
			OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelect[playerid]]);
			else
			OnPlayerClickPlayerTextDraw(playerid, ReconPlayer[ReconSelectSub[playerid]]);
			return 1;
		}
		if(Spectate[playerid] && ud == KEY_UP && !LastReconClick[playerid][0])
		{
			PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
			LastReconClick[playerid][0] = ud;
			if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)
			{
				DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
				if(ReconSelect[playerid] <= 7)
				{
					ReconSelect[playerid] = 15;
					DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
				}
				else
				{
					ReconSelect[playerid]--;
					DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
				}
				return 1;
			}
			else
			{
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 0);
				if(ReconSelectSub[playerid] <= ReconBounds[playerid][0])
				{
					ReconSelectSub[playerid] = ReconBounds[playerid][1];
					DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
				}
				else
				{
					ReconSelectSub[playerid]--;
					DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
				}
			}
		}
		if(Spectate[playerid] && ud == KEY_DOWN && !LastReconClick[playerid][0])
		{
			PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
			LastReconClick[playerid][0] = ud;
			if(ReconSelectSub[playerid] == INVALID_TEXT_DRAW)
			{
				DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
				if(ReconSelect[playerid] >= 15)
				{
					ReconSelect[playerid] = 7;
					DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
				}
				else
				{
					ReconSelect[playerid]++;
					DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
				}
				return 1;
			}
			else
			{
				DisableEnableReconButton(playerid, ReconSelectSub[playerid], 0);
				if(ReconSelectSub[playerid] >= ReconBounds[playerid][1])
				{
					ReconSelectSub[playerid] = ReconBounds[playerid][0];
					DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
				}
				else
				{
					ReconSelectSub[playerid]++;
					DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
				}
			}
		}
	}
	if(Spectate[playerid] && SpecAd[playerid] != INVALID_PLAYER_ID)PlayerTextDrawShow(playerid, ReconPlayer[31]); 
	return true;
}
stock CheckBed(playerid)
{
	if(PlayerInfo[playerid][pHeal] > 0)
	{
	    if(PlayerLie[playerid])
	    {
	    	new bed = PlayerBed[playerid];
	    	PlayerLie[playerid] = false;
	    	TogglePlayerControllable(playerid,true);
	    	SetString(HealInfo[PlayerBed[playerid]][hName],"The State");
			PlayerBed[playerid] = -1;
			new str[150];
			format(str,sizeof(str),"{43CD80}Койка свободна\n\n{C9EAFF}Нажмите N, чтобы занять\nНеобходимо начать лечение");
			UpdateDynamic3DTextLabelText(HealText[bed],COLOR_WHITE,str);
		}
	}
	return true;
}
stock ShowLoginDialog(playerid)
{
    new str[250],string[350];
    //DRotTick[playerid]=60;
	DisableAllRaceCPs(playerid);
	ResetDynamicCPs(playerid);
	format(str,sizeof(str),"\n\n\\c{FFFFFF}Добро пожаловать на {EBA225}Good Game Role Play{FFFFFF}\n\n");
	strcat(string,str);
	strcat(string,"\\cВведите свой пароль\n");
	format(str,sizeof(str),"\\c{FFFFFF}Попыток для ввода пароля: {28910B}%d\n\n",gPlayerLogTries[playerid]);
	strcat(string,str);
    Dialog_Open(playerid,2,DIALOG_STYLE_PASSWORD,"{43CD80}Авторизация",string,"Готово","");
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	new pip[24];
	GetPlayerIp(playerid,pip,16);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Неудачная попытка авторизации",0,pip,"127.0.0.1",GetMoney(playerid));
	return true;
}
public OnPlayerStreamIn(playerid, forplayerid)
{
	return true;
}
public OnPlayerStreamOut(playerid, forplayerid)
{
	return true;
}
stock GetPlayerSex(playerid)
{
   return PlayerInfo[playerid][pSex];
}
public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return true;
}
stock ShowJobInfo(playerid = INVALID_PLAYER_ID, job = 1)
{
    new str[2500];
    ShowJobID[playerid] = job;
	switch(job)
	{
		case 1:
		{
			strcat(str,"{4F943D}Работа 'Водитель автобуса'{FFFFFF}\n");
			strcat(str,"Для начала вам надо арендовать свободный автобус. Стоимость его аренды\n");
			strcat(str,"зависит от установленой цены губернатором штата.\n");
			strcat(str,"После того как вы арендуете автобус, вам необходимо установить цену за проезд и\n");
			strcat(str,"выбрать рейс по какому будете передвигаться. После того как вы выбрали рейс\n");
			strcat(str,"вам надо будет ездить по чекпойнтам и останавлеватся на остановках.\n");
			strcat(str,"За 1 чекпойнт вы будете получать столько денег, сколько установит губернатор!\n\n");
			strcat(str,"Удачной работы");
		}
		case 3:
		{
			strcat(str,"{4F943D}Работа 'Развозчик продуктов'{FFFFFF}\n");
			strcat(str,"Для начала вам необходимо найти свободный транспорт для перевозки продуктов, для этого введите /gps - По работе - Продуктовозы.\n");
			strcat(str,"После того как вы нашли свободный автомобиль вам необходимо закупить продукты. Закупить их можно на складе фермы - даст возможность развозить продукты по закусочным,\n");
			strcat(str,"или на складе разгрузочной станции, что даст возможность развозить продукты по магазинам 24/7,  магазинам аксесуаров, магазинам одежды и другим.\n");
			strcat(str,"Стоимость закупки и перепродажи может быть разная, так как их стоимость регулирует губернатор и владельцы бизнесов, которые в свою очередь делают заказы на закупку.\n");
			strcat(str,"Чтобы найти заказчика продуктов используйте /orderlist и выберите нужный вам бизнес. Обратите внимание что некоторые бизнесы могут быть не богаты, и они не смогут оплатить\n");
			strcat(str,"заказ, по этому следите за состоянием их банка. Так же будьте внимательны, ведь закусочные не принимают груз из разгрузочных станций!\nСледите за выгодой при продажи, ибо вы можете уйти в минус");
			strcat(str,"Для того чтобы заработать еще, закупайте продукты заново и ищите предпринимателей!\n\n");
			strcat(str,"Удачной работы!\n");
		}
		case 4:
		{
			strcat(str,"{4F943D}Работа 'Механик' - на фирме{FFFFFF}\n");
			strcat(str,"Суть работы заключается в починке, ремонте двигателя,  а также доставки транспорта в автомастерскую.\n");
			strcat(str,"Для того чтобы начать свою работу,  вам необходимо добратся в автомастерскую,  ее можно найти с \n");
			strcat(str,"помощью команды /gps. После того переодеться и ждать клиентов для начала работы.\n");
			strcat(str,"При нажатии клавищи ~k~~SNEAK_ABOUT~ у машины в которой сидит игрок,  вы начнете ее чинить. Если там не будет игрока,\n");
			strcat(str,"то у вас ничего не получится. Ремонт двигателя сбивает пробег автомобиля и уменьшит шанс поломки авто в дальнейшем.\n");
			strcat(str,"Для того чтобы чинить двигатель,  станьте у капота авто и жмите клавишу ~k~~SNEAK_ABOUT~.\n");
			strcat(str,"С ремонта авто вы получите $1000, за ремонт двигателя $20.000.\n\n");
			strcat(str,"{4F943D}Работа 'Механик' - по городу{FFFFFF}\n");
			strcat(str,"Суть работы заключается в ремонте и заправке транспорта автомобилям, которые застряли в дороге.\n");
			strcat(str,"Для того чтобы начать работу необходимо найти авто махаников, после чего направится в одну из АЗС\n");
			strcat(str,"и заключить с ней контракт, продавая бензин в 2 раза дешевле и получая 50 процентов от прибыли.\n\n");
			strcat(str,"{4F943D}Команды: /filscar - заправить авто. /repare - отремонтировать авто. /contractfill - заключить контракт на работу\n/azsmonitor - Мониторинг заправок");
		}
		case 5:
		{
			strcat(str,"{4F943D}Работа 'Таксист'{FFFFFF}\n");
			strcat(str,"Суть работы заключается в развозке игроков в заданую точку.\n");
			strcat(str,"Чтобы работать вы должны сесть в 1 из авто такси и ввести трафик.\n");
			strcat(str,"После подтверждения все получат сообщение о том, что вы вышли на работу.\n");
			strcat(str,"Если игрок закажет такси{FFFFFF} всем таксистам поступит заказ.\n");
			strcat(str,"Чтобы принять заказ нужно ввести {10F441}/gotaxi [id игрока]{FFFFFF}.\n");
			strcat(str,"После принятия вызова игрок будет отмечен на карте красным маркером.\n");
			strcat(str,"Когда игрок сядет к вам в такси вы будете оповещены об этом.\n");
			strcat(str,"По ходу перевозке будет начисляться сумма проезда.\n");
			strcat(str,"Как только игрок выйдет из такси вы получите деньги\n\n");
			f(str,"%s{FFD700}Для доступа к Turismo %d/200 клиентов\n", str, PlayerInfo[playerid][Taxi_Skill]);
			f(str,"%s{83A8EB}Для доступа к Sparrow %d/500 клиентов\n\n\n", str, PlayerInfo[playerid][Taxi_Skill]);
			strcat(str,"Удачной работы");
		}
		case JOB_ADVOKAT:
		{
			strcat(str,"{4F943D}Работа 'Адвокат'{FFFFFF}\n");
			strcat(str,"Основная цель вашей работы заключается в помощи игрокам которые\n");
			strcat(str,"попали в тюрьму. Вы можете помочь им с сокращением срока за определенную\n");
			strcat(str,"сумму денег, собственно с этого и идет ваша прибыль. Найти заключенных\n");
			strcat(str,"можно в 4 полицейских участках, а именно LSPD RCSD, LVPD и SFPD.\n");
			strcat(str,"У вас есть возможность просмотреть базу заключенных чтобы узнать уровень\n");
			strcat(str,"их преступления (чем выше их уровень преступления тем больше плата за сокращение срока)\n");
			strcat(str,"и их местоположение чтобы приехать и помочь им в освобождении.\n\n");
			strcat(str,"{E4AE25}База заключенных - /prisoners.\nСократить срок заключенному - /free.\n\n");
			strcat(str,"{4F943D}Удачной работы");
		}
		case 8:
		{
			strcat(str,"{4F943D}Работа 'Крупье'{FFFFFF}\n");
			strcat(str,"Для начала вам надо отправится в само казино,\n");
			strcat(str,"найти его можно с помощью /gps развлечения - казино.\n");
			strcat(str,"В здании будет раздевалка,  где вы сможете начать рабочий день.\n");
			strcat(str,"После начала работы,  ваша цель будет заключатся в том что,  бы\n");
			strcat(str,"следить за игроками которые играют в кости( Cтоять у игрального стола ).\n");
			strcat(str,"За каждую проведенную игру в кости, вы будете получать деньги которые установит казино.\n");
			strcat(str,"Забрать зарплату вы сможете в специальном месте, не подалеку от раздевалки.\n\n");
			strcat(str,"Удачной работы!\n\n");
		}
		case 9:
		{
			strcat(str,"{4F943D}Работа 'Инкассатор'{FFFFFF}\n");
			strcat(str,"Суть работы заключается в сборе денег из определенных точек.\n");
			strcat(str,"Чтобы начать работать переоденьтесь и сядьте в один из грузовиков.\n");
			strcat(str,"Далее едьте на маркер обозначеный на карте.\n");
			strcat(str,"Заберите деньги и положите их в багажник грузовика.\n");
			strcat(str,"Далее едьте на маркер обозначеный на карте (Банк).\n");
			strcat(str,"Заберие деньги из багажника и отнесите их на чекпоинт.\n");
			strcat(str,"Во время работы на вас могут напасть и убить.\n");
			strcat(str,"Если это случится, то убийца сможет забрать деньги.\n\n");
			strcat(str,"Удачной работы");
		}
		case 11:
		{
		    strcat(str,"{4F943D}Работа 'Дальнобойщик'{FFFFFF}\n");
		    strcat(str,"Суть этой работы заключается в перевозке груза из одной точки в другую.\n");
		    strcat(str,"Садьте в 1 из грузовиков и подъедьте задом к 1 из трейлеров.\n");
		    strcat(str,"Трейлер прицеплен, направляйтесь в точку указаную на карте.\n");
		    strcat(str,"Далее отвозите грузовик назад и получаете деньги.\n\n");
		    strcat(str,"Удачной работы");
		}
		case 12:
		{
		    strcat(str,"{4F943D}Работа 'Развозчик пиццы'{FFFFFF}\n");
		    strcat(str,"Суть этой работы заключается в перевозке пиццы в жилые дома и другие места.\n");
		    strcat(str,"Для начала переоденьтесь, а потом возьмите пиццу в пункте выдачи.\n");
		    strcat(str,"После сядьте на мопед, положите пиццу в багажник и следуйте указаниям.\n");
		    strcat(str,"За каждую отвезенную пиццу вы будете получать зарплату в размере 550$\n\n");
		    strcat(str,"Удачной работы");
		}
		case 13:
		{
		    strcat(str,"{4F943D}Работа 'Развозчик металлолома'{FFFFFF}\n");
		    strcat(str,"Суть работы заключается в перевозе спресованного металлолома.\n");
		    strcat(str,"Сядьте в 1 из эвакуаторов и подъедте задом к металлолому.\n");
		    strcat(str,"Отвезите его на отмеченую на карте точку.\n");
		    strcat(str,"Удачной работы");
		}
		case 15:
		{
		    strcat(str,"{4F943D}Работа 'Грузчик'{FFFFFF}\n");
	    	strcat(str,"Суть работы заключается в переносе груза с одной точки в другую.\n");
			strcat(str,"В этой работе не используются команды, все выполняется по чекпоинтам.\n");
			strcat(str,"Чтобы начать работу переоденьтесь в раздевалке и идите к вагонам.\n");
			strcat(str,"После станьте на пикап и возьмите мешок, который вы должны отнести на склад.\n");
			strcat(str,"Чтобы получить заработанные деньги нужно переодеться.\n\n");
			strcat(str,"Удачной работы");
		}
		case 16:
		{
		    strcat(str,"{4F943D}Работа 'Налоговая'{FFFFFF}\n");
		    strcat(str,"Суть работы заключается в сборе налогов с \n");
		    strcat(str,"Недвижемого имущества,  Подписания соответствующих документов\n");
		    strcat(str,"и оформления выплат.\n");
		    strcat(str,"Для начала направляйтесь в первый офис налоговой(/gps/Важные места)\n");
		    strcat(str,"После чего вы сможете выбрать работу для себя\n");
		    strcat(str,"Удачной работы");
		}

		case 17:
		{
		    strcat(str,"{4F943D}Работа 'Начинающий фермер'{FFFFFF}\n");
	    	strcat(str,"В этой работе не используются команды.\n");
			strcat(str,"Все выполняется по чекпоинтам.\n");
			strcat(str,"Чтобы начать работу переоденьтесь в раздевалке.\n");
			strcat(str,"Далее идите на точку обозначеную на мини-карте.\n");
			strcat(str,"Ваша цель переносить обработаные продукты на склад нашей\n");
			strcat(str,"фермы, для того чтобы развозчики продуктов могли их закупить.\n");
			strcat(str,"{4F943D}Удачной работы");
		}

		case 18:
		{
		    strcat(str,"{4F943D}Работа 'Тракторист'{FFFFFF}\n");
	    	strcat(str,"Для начала вам надо найти свободный трактор в одном из ангаров фермы.\n");
			strcat(str,"После того как вы его найдете, вам надо будет начать работу и\n");
			strcat(str,"передвигаться на показаных вам чекпоинтам на мини-карте.\n");
			strcat(str,"С каждого чекпоинта вы будете получать определенную сумму денег, которые\n");
			strcat(str,"вы сможете забрать в здании фермы, при окончании работы.\n\n");
  			strcat(str,"{99E05A}Обратите внимание! Для доступа к этой работе вам необходисо набрать 500 очк.\n");
			strcat(str,"работы фермера, работая начинающим фермером. Набрав 3200 очк. роботы вы откроете доступ\n");
			strcat(str,"к новому виду работы на ферме, под названием 'Комбайнер'\n\n\n");
			strcat(str,"{4F943D}Удачной работы");
		}

		case 19:
		{
		    strcat(str,"{4F943D}Работа 'Комбайнер'{FFFFFF}\n");
	    	strcat(str,"Для начала вам надо найти свободный комбайн в одном из ангаров фермы.\n");
			strcat(str,"После того как вы его найдете, вам надо будет начать работу и\n");
			strcat(str,"передвигаться на показаных вам чекпоинтам на мини-карте.\n");
			strcat(str,"С каждого чекпоинта вы будете получать определенную сумму денег, которые\n");
			strcat(str,"вы сможете забрать в здании фермы, при окончании работы.\n\n");
			strcat(str,"{99E05A}Обратите внимание! Для доступа к этой работе вам необходисо набрать 3200 очк.\n");
			strcat(str,"работы фермера, работая начинающим фермером или трактористом. Набрав 7000 очк. роботы вы откроете доступ\n");
			strcat(str,"к новому виду работы на ферме, под названием 'Водитель кукурузника'\n\n\n");
			strcat(str,"{4F943D}Удачной работы");
		}

		case 20:
		{
		    strcat(str,"{4F943D}Работа 'Водитель кукурузника'{FFFFFF}\n");
	    	strcat(str,"Для начала вам надо найти свободный кукурузник в одном из ангаров фермы.\n");
			strcat(str,"После того как вы его найдете, вам надо будет начать работу и\n");
			strcat(str,"передвигаться на показаных вам чекпоинтам на мини-карте, латая над фермами всего штата, удобряя их землю.\n");
			strcat(str,"С каждого чекпоинта вы будете получать определенную сумму денег, которые\n");
			strcat(str,"вы сможете забрать в здании фермы, при окончании работы.\n\n");
			strcat(str,"{99E05A}Обратите внимание! Для доступа к этой работе вам необходисо набрать 7000 очк.\n");
			strcat(str,"работы фермера, работая начинающим фермером или трактористом или комбайнером.\n");
			strcat(str,"Эта работа является вершиной ветки, работника фермы, и она является самой оплачеваемой в нашем штате.\n\n\n");
			strcat(str,"{4F943D}Удачной работы");
		}
		case 21:
		{
		    strcat(str,"{4F943D}Работа 'Строитель'{FFFFFF}\n");
		    strcat(str,"Для начала работы необходимо переодеться, в том месте где вы устроились на работу.\n");
	    	strcat(str,"Эта работа предназначена для профилактических работ, нарушителей порядка,\n");
			strcat(str,"но на этой работе можно и не плохо подзаработать, помогая в строительстве!\n");
			strcat(str,"Суть вашей работы очень проста, брать материалы, заниматся строительством,\n");
			strcat(str,"ну и если у вас закончились материалы, взять их заново.\n");
			strcat(str,"Чтобы забрать зарплату, необходимо подойти к месту где вы начинали работу и закончить ее.\n\n\n");
			strcat(str,"{4F943D}Удачной работы");
		}
		case 22:
		{
		    strcat(str,"{4F943D}Работа в винограднике{FFFFFF}\n");
		    strcat(str,"Для начала работы необходимо переодеться, в том месте где вы устроились на работу.\n");
	    	strcat(str,"Эта работа предназначена для сбора и производства сырья для переработки,\n");
			strcat(str,"но на этой работе можно и неплохо подзаработать!\n");
			strcat(str,"Суть вашей работы очень проста, сажать кусты винограда, собирать урожай и\n");
			strcat(str,"относить его на склад.\n");
			strcat(str,"Чтобы забрать зарплату, необходимо подойти к месту где вы начинали работу и закончить ее.\n\n\n");
			strcat(str,"{4F943D}Удачной работы");
		}
		case 23:
		{
		    strcat(str,"{4F943D}Работа в цеху{FFFFFF}\n");
		    strcat(str,"Для начала работы необходимо переодеться, в том месте где вы устроились на работу.\n");
	    	strcat(str,"Эта работа предназначена для производства и упаковки переработанной продукции,\n");
			strcat(str,"но на этой работе можно и неплохо подзаработать!\n");
			strcat(str,"Суть вашей работы очень проста, загружать сырьё, упаковывать продукцию\n");
			strcat(str,"относить его на склад.\n");
			strcat(str,"Чтобы забрать зарплату, необходимо подойти к месту где вы начинали работу и закончить ее.\n\n\n");
			strcat(str,"{4F943D}Удачной работы");
		}
		case 24:
		{
		    strcat(str,"{4F943D}Работа в шахте{FFFFFF}\n");
		    strcat(str,"Для начала работы необходимо переодеться, в том месте где вы устроились на работу.\n");
	    	strcat(str,"Эта работа предназначена для добычи и переработки драг.металлов и камней,\n");
			strcat(str,"но на этой работе можно и неплохо подзаработать!\n");
			strcat(str,"Вам нужно спуститься в шахту, выбрать ветку, на которой Вам больше нравится работать\n");
			strcat(str,"и отправиться добывать ресурсы. Добывая сырьё, вы прокачиваете навык шахтёра, который\n");
			strcat(str,"позволяет добывать новые ресурсы, за которые больше платят.\n\n");
			f(str,"%s{FFD700}Для добычи золота необходимый навык %d/4000 очков\n", str, PlayerInfo[playerid][Miner_Skill]);
			f(str,"%s{83A8EB}Для добычи алмазов необходимый навык %d/9000 очков\n\n\n", str, PlayerInfo[playerid][Miner_Skill]);
			strcat(str,"{4F943D}Удачной работы");
		}
		default: return SendError(playerid,"Вы нигде не работаете");
	}
	ShowPlayerDialogEx(playerid,INVALID_DIALOG_ID,0,"{43CD80}Информация о работе",str,"Дальше","");
	return true;
}
stock TextFind(const text[], const findtext[])
{
    return strfind(text, findtext) != -1;
}
stock ShowUpdateSettings(playerid)
{
    new key[60],hangr[60],speed[60],scase[60], chat[60],
	loading[60],nick[60],cfgstring[1120], language[60], fast[60];
    if(PlayerInfo[playerid][pKey] == 0) key = "{ffffff}[{7396FB}Не привязан{ffffff}]";
	else key = "{ffffff}[{43CD80}Настроить{ffffff}]";
    if(PlayerInfo[playerid][pBuyWalent]) hangr = "{ffffff}[{43CD80}Включено{ffffff}]";
    else hangr = "{ffffff}[{D94141}Выключено{ffffff}]";
    if(PlayerInfo[playerid][pGold]) speed = "{ffffff}[{43CD80}Включено{ffffff}]";
    else speed = "{ffffff}[{D94141}Выключено{ffffff}]";
	if(PlayerInfo[playerid][pShowName]) nick = "{ffffff}[{43CD80}Включено{ffffff}]";
    else nick = "{ffffff}[{D94141}Выключено{ffffff}]";
	if(PlayerInfo[playerid][pCase]) scase = "{ffffff}[{43CD80}Включено{ffffff}]";
    else scase = "{ffffff}[{D94141}Выключено{ffffff}]";
	if(!PlayerInfo[playerid][pChat]) chat = "{ffffff}[{43CD80}Good Game{ffffff}]";
    else chat = "{ffffff}[{7396FB}Стандартный{ffffff}]";
	if(!PlayerInfo[playerid][pLoading]) loading = "{ffffff}[{D94141}Выключено{ffffff}]";
    else loading = "{ffffff}[{43CD80}Включено{ffffff}]";
	if(!PlayerInfo[playerid][pLanguage]) language = "{ffffff}[{D94141}Английский{ffffff}]";
    else language = "{ffffff}[{43CD80}Русский{ffffff}]";
	if(!PlayerInfo[playerid][pItems]) fast = "{ffffff}[{D94141}Выключено{ffffff}]";
    else fast = "{ffffff}[{43CD80}Включено{ffffff}]";
	format(cfgstring,sizeof(cfgstring),"\
	{FFFFFF}Код безопасности: %s\n\
	{FFFFFF}Никнеймы над головой: %s\n\
	{FFFFFF}E-mail: {ffffff}[{7396FB}%s{ffffff}]\n\
	{FFFFFF}Отображение сытости: %s\n\
	{FFFFFF}Спидометр: %s\n\
	{FFFFFF}Кейс с деньгами: %s\n\
	{FFFFFF}Стиль чата: %s\n\
	{FFFFFF}Загрузка текстур: %s\n\
	{FFFFFF}Язык интерфейса: %s\n\
	{FFFFFF}Меню быстрого доступа: %s\n \n\
	{43CD80}Сменить пароль от аккаунта\n\
	{43CD80}Сменить пароль от банковской карты\n\
	{43CD80}Изменить место появления в игре\n\
	{D94141}Настройки Google Authenticator",key,nick, PlayerMail[playerid],hangr,speed,scase,chat,loading,language,fast);
 	return Dialog_Open(playerid,154,2,"{43CD80}Выберите пункт",cfgstring,"Выбор","Отмена");
}
stock Show3UpdateSettings(playerid)
{
    new have[60],racio[60],depor[60],adma[60],cfgstring[400];
    if(PlayerInfo[playerid][pMy_Skill]) have = "{ffffff}[{D94141}Выключено{ffffff}]";
    else have = "{ffffff}[{43CD80}Включено{ffffff}]";
    if(PlayerInfo[playerid][pBy_Skill]) racio = "{ffffff}[{D94141}Выключено{ffffff}]";
    else racio = "{ffffff}[{43CD80}Включено{ffffff}]";
    if(PlayerInfo[playerid][pP_Skill]) depor = "{ffffff}[{D94141}Выключено{ffffff}]";
    else depor = "{ffffff}[{43CD80}Включено{ffffff}]";
    if(PlayerInfo[playerid][pF_Skill]) adma = "{ffffff}[{D94141}Выключено{ffffff}]";
    else adma = "{ffffff}[{43CD80}Включено{ffffff}]";
	format(cfgstring,sizeof(cfgstring),"{FFFFFF}Объявления (/ad): %s\n{FFFFFF}Рация (/r): %s\n\
	{FFFFFF}Департамент (/d): %s\n{FFFFFF}Действия администраторов: %s\n",have,racio,depor,adma);
 	return Dialog_Open(playerid,800,2,"{43CD80}Выберите пункт",cfgstring,"Выбор","Отмена");
}
stock ResetSpawnInfo(playerid, team)
{
	new skin = GetSkinOfPlayer(playerid);
	SetSpawnInfo( playerid, 255, skin, SpawnInfo[team][0], SpawnInfo[team][1], SpawnInfo[team][2], SpawnInfo[team][3], 0, 0, 0, 0, 0, 0);
	return true;
}
stock ValidChar(mailchar)
{
	if(
	(mailchar >= 'A' && mailchar <= 'Z') 	||
	(mailchar >= 'a' && mailchar <= 'z') 	||
	(mailchar >= '0' && mailchar <= '9') 	||
	(mailchar == '-') || (mailchar == '_') 	||
	(mailchar == '@') || (mailchar == '.'))return true;
	return false;
}
stock IsValidEMail(const email[])
{
	new bool:Succes = true;
	new bool:Good;
	for(new i;i < strlen(email);i ++)
	{
	    if(email[i] == '@')
		{
		    if(!Good) Good = true;
		    else
			{
				Good = false;
		    	break;
			}
		}
	    if(!ValidChar(email[i])) Succes = false;
	}
	if(!Good) Succes = false;
	if(!TextFind(email,".ru") && !TextFind(email,".com") && !TextFind(email,".ua") && !TextFind(email,".su")) Succes = false;
	if(!TextFind(email,"@")) Succes = false;
  	return Succes;
}
stock ValidSym(mailchar)
{
	if(
	(mailchar >= 'A' && mailchar <= 'Z') 	||
	(mailchar >= 'a' && mailchar <= 'z') 	||
	(mailchar >= 'А' && mailchar <= 'Я') 	||
	(mailchar >= 'а' && mailchar <= 'я') 	||
	(mailchar == ' ') || (mailchar == '-') || (mailchar == '`'))return true;
	return false;
}
stock IsValidName(const email[])
{
	new bool:Succes = true;
	for(new i;i < strlen(email);i ++)
	{
	    if(!ValidSym(email[i])) Succes = false;
	}
  	return Succes;
}
stock EvenNumber(const text[])
{
	return !(strlen(text) % 2);
}
stock ShowGrandRegiserDialog(playerid)
{
    PlayerPlaySound(playerid, 1185, 0, 0, 0);
	ResetDynamicCPs(playerid);
	DisableAllRaceCPs(playerid);
	new str[100],string[400];
	format(str,sizeof(str),"\\cЛогин: {C9EAFF}%s{FFFFFF}\n",Name(playerid));
	strcat(string,"\n\n\\c{FFFFFF}Добро пожаловать на Good Game Role Play\n");
	strcat(string,"\\cРегистрация нового персонажа\n\n");
	strcat(string,str);
	strcat(string,"\\cДля продолжения введите пароль\n\n");
	return Dialog_Open(playerid,1,DIALOG_STYLE_INPUT,"{43CD80}Регистрация",string,"Далее","Отмена");
}
stock ShowRegisterDialog(playerid, rstate)
{
	switch(rstate)
	{
	    case 1: ShowGrandRegiserDialog(playerid);
	    case 2: ShowPlayerDialogEx(playerid,542,0,"{43CD80}Регистрация","{FFFFFF}Выберите пол вашего персонажа","{0099FF}Мужской","{ff6bc1}Женский");
		case 3: ShowPlayerDialogEx(playerid,542,0,"{43CD80}Регистрация","{FFFFFF}Выберите цвет кожи вашего персонажа","{ffe9d4}Светлый","{ad8257}Тёмный");
	    case 4: ShowPlayerDialogEx(playerid,1,1,"{43CD80}Регистрация","{FFFFFF}Введите никнейм игрока, пригласившего вас на наш проект","Далее","Отмена");
        default: return false;
	}
	return true;
}
forward OnPlayerChangedState(playerid, oldstate, newstate);
public OnPlayerChangedState(playerid, oldstate, newstate)
{
	return true;
}
stock CheckPassword(const pass[])
{
	for(new i; i < strlen(pass); i ++)
	{
	    if( (pass[i] >= 'a' && pass[i] <= 'z') ||
		(pass[i] >= 'A' && pass[i] <= 'Z') ||
		(pass[i] >= 'а' && pass[i] <= 'я') ||
		(pass[i] >= 'А' && pass[i] <= 'Я') ||
		(pass[i] >= '0' && pass[i] <= '9')  ) continue;
		else return false;
	}
	return true;
}
stock ShowFactoryDialog(playerid){
	new string[256];
	f(string, "\n\n\\c{ffffff}Доступно {ff9900}%d материалов {ffffff}для покупки\n\\cЦена 1 материала: {ff9900}$5\n\n\\c{ffcb8c}Введите количество материалов для покупки\n\n",FactoryInfo[fMaterials]);
	Dialog_Open(playerid, 128, 1, "Покупка материалов", string, "Купить", "Отмена");
	return 1;
}
stock ShowSlitokDialog(playerid){
	new string[256];
	f(string, "\n\n\\c{ffffff}Доступно {ff9900}%d грамм золота {ffffff}для покупки\n\\cЦена 1 грамма: {ff9900}$%d\n\n\\c{ffcb8c}Введите количество грамм для покупки\n\n",FactoryInfo[fSlitkov],FactoryInfo[gold_Sell]);
	Dialog_Open(playerid, 1434, 1, "Покупка золота", string, "Купить", "Отмена");
	return 1;
}
stock ShowBrilliantDialog(playerid){
	new string[256];
	f(string, "\n\n\\c{ffffff}Доступно {ff9900}%d бриллиантов {ffffff}для покупки\n\\cЦена 0.1 карат: {ff9900}$%d\n\n\\c{ffcb8c}Введите количество бриллиантов для покупки\n\n",FactoryInfo[fBrilliantov],FactoryInfo[diamond_Sell]);
	Dialog_Open(playerid, 1433, 1, "Покупка бриллиантов", string, "Купить", "Отмена");
	return 1;
}
stock ShowSellGoldDialog(playerid){
	new string[256];
	f(string, "\n\n\\c{ffffff}Доступно {ff9900}%d грамм золота {ffffff}для продажи\n\\cЦена 1 грамма: {ff9900}$%d\n\n\\c{ffcb8c}Введите количество грамм для продажи\n\n",PlayerInfo[playerid][pBirja][0],FactoryInfo[gold_Buy]);
	Dialog_Open(playerid, 1432, 1, "Продажа золота", string, "Купить", "Отмена");
	return 1;
}
stock ShowSellDiamondDialog(playerid){
	new string[256];
	f(string, "\n\n\\c{ffffff}Доступно {ff9900}%d бриллиантов {ffffff}для продажи\n\\cЦена 0.1 карат: {ff9900}$%d\n\n\\c{ffcb8c}Введите количество бриллиантов для продажи\n\n",PlayerInfo[playerid][pBirja][1],FactoryInfo[diamond_Buy]);
	Dialog_Open(playerid, 1431, 1, "Продажа бриллиантов", string, "Купить", "Отмена");
	return 1;
}
stock ShowForexDialog(playerid){
	new string[1024];
	strcat(string, "Предмет\tКоличество\tЦена\n");
	f(string, "%s{56A85E}[Купить] Материалы\t{ffcb8c}%d\t{D94141}$5 / шт.\n", string, FactoryInfo[fMaterials]);
	f(string, "%s{56A85E}[Купить] Золото\t{ffcb8c}%d гр.\t{D94141}$%d / гр.\n", string, FactoryInfo[fSlitkov], FactoryInfo[gold_Sell]);
	f(string, "%s{56A85E}[Купить] Бриллианты\t{ffcb8c}%d\t{D94141}$%d / 0.1 карат\n \n", string, FactoryInfo[fBrilliantov], FactoryInfo[diamond_Sell]);
	f(string, "%s{D94141}[Продать] Золото\t{ffcb8c}%d гр.\t{56A85E}$%d / гр.\n", string, PlayerInfo[playerid][pBirja][0], FactoryInfo[gold_Buy]);
	f(string, "%s{D94141}[Продать] Бриллианты\t{ffcb8c}%d\t{56A85E}$%d / 0.1 карат", string, PlayerInfo[playerid][pBirja][1], FactoryInfo[diamond_Buy]);
	Dialog_Open(playerid, 129, 5, "Биржа драгоценностей", string, "Купить", "Отмена");
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	new inputtextsave[256];
	if(strlen(inputtext) &&
			(strfind(inputtext,"`") != -1 ||
				strfind(inputtext,"=") != -1 ||
				strfind(inputtext,"{") != -1 ||
				strfind(inputtext,"}") != -1)) return SendClientMessage(playerid,COLOR_GRAY,"Вы использовали запрещённые символы");
	if(strlen(inputtext)>0)mysql_real_escape_string(inputtext, inputtextsave);
	new string[2024], bool:olddialog=true,  str1[256];
	if(dialogid != OldDialogID[playerid]) olddialog=false;
	if(!olddialog) format(str1, sizeof(str1), "<!> "); else format(str1, sizeof(str1), "");
	if(!olddialog) return 1;
	OldDialogID[playerid] = INVALID_DIALOG_ID;
	TogglePlayerControllable(playerid, true);
	if(response == 1)PlayerPlaySound(playerid, 14405, 0.0, 0.0, 0.0);
	else PlayerPlaySound(playerid, 14404, 0.0, 0.0, 0.0);
	for(new i;i < strlen(inputtextsave);i ++)
	{
     	if(inputtextsave[i] == '%') inputtextsave[i] = '#';
     	else if(inputtextsave[i] == '{' && inputtextsave[i+7] == '}') strdel(inputtextsave,i,i+8);
	}
    switch(dialogid)
	{
		case 7974:
		{
			if(!response)return 1;
			J_SetPlayerPos(playerid, 286.0793,-26.8969,1001.5156);
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerVirtualWorld(playerid, listitem);
			SetPlayerInterior(playerid, 1);
			SetCameraBehindPlayer(playerid);
		}
		case 7971:
		{
			if(response)
			{
				new id = QuestShow[playerid][listitem];
				if(QuestProgress[playerid][id]>=QI[id][LastProgress]) return SendBotMessage(playerid,"Извини, приятель, но два раза не прокатит...");
				if(AcceptQuest[playerid][id] == 0)
				{
					format(string,sizeof(string),"%s\n\\c{D94141}Вы действительно хотите принять квест?",QI[id][QuestText]);
					Dialog_Open(playerid,7972,0,"",string,"Принять","Отмена");
					QuestClick[playerid]=id;
				}
			}
			return 1;
		}
		case 7972:
		{
			if(response)
			{
				new id = QuestClick[playerid];
				if(QuestProgress[playerid][id]>=QI[id][LastProgress]) return SendBotMessage(playerid,"Извини, приятель, но два раза не прокатит...");
				if(QuestProgress[playerid][id]>=0 && AcceptQuest[playerid][id]!=0) return SendBotMessage(playerid,"Вы уже приняли это задание!");
				if(AcceptQuest[playerid][id]==0)
				{
					new query[256];
					format(query, sizeof(query), "INSERT IGNORE INTO `quests` (`idquest`, `name`, `progress`, `accept`) VALUES ('%d', '%s', '%d', '%d')", id, Name(playerid), 0, 1);
					mysql_pquery(mysql, query);
					AcceptQuest[playerid][id] = 1;
					QuestProgress[playerid][id] = 0;
					SendBotMessage(playerid,"Удачи, она тебе понадобится");
				}
				switch(id){
				case 1:
					{
						QuestProgress[playerid][1] = PlayerInfo[playerid][Miner_Skill];
						if(QuestProgress[playerid][1] >= QI[id][LastProgress] && QuestProgress[playerid][1] < 10000){
							GiveMoney(playerid, 200000, "Бонус квеста шахтёра");
							SendInfo(playerid, "Вы получили бонус за выполнение квеста {7396FB}'Сколотил состояние...'");
							QuestProgress[playerid][1] = 10000;
						}
					}							
				case 3:
					{
						QuestProgress[playerid][3] = PlayerInfo[playerid][Taxi_Skill];
						if(QuestProgress[playerid][3] >= QI[id][LastProgress] && QuestProgress[playerid][3] < 10000){
							GiveMoney(playerid, 80000, "Бонус квеста шахтёра");
							SendInfo(playerid, "Вы получили бонус за выполнение квеста {7396FB}'Настоящий бомбила'");
							QuestProgress[playerid][3] = 10000;
						}
					}
				case 7:
					{
						if(PlayerInfo[playerid][pCarLic] == YES_LICENSE && QuestProgress[playerid][7] < 10000){
							QuestProgress[playerid][7] = 1;
							PlayerInfo[playerid][pTalents][1]++;
							SendInfo(playerid, "У Вас появились новые очки талантов");
							QuestProgress[playerid][7] = 10000;
						}
					}
				case 9:
					{
						if(PlayerInfo[playerid][pGunLic] == YES_LICENSE && QuestProgress[playerid][9] < 10000){
							QuestProgress[playerid][9] = 1;
							PlayerInfo[playerid][pTalents][2]++;
							SendInfo(playerid, "У Вас появились новые очки талантов");
							QuestProgress[playerid][9] = 10000;
						}
					}
				case 11:
					{
						if(PlayerInfo[playerid][pPistol_Skill] + PlayerInfo[playerid][pSDPistol_Skill] +
						PlayerInfo[playerid][pEagle_Skill] + PlayerInfo[playerid][pShotGun_Skill] +
						PlayerInfo[playerid][pUZI_Skill] + PlayerInfo[playerid][pMP5_Skill] + 
						PlayerInfo[playerid][pAK47_Skill] + PlayerInfo[playerid][pM4_Skill] + 
						PlayerInfo[playerid][pSniper_Skill] >= 8000 && QuestProgress[playerid][11] < 10000){
							QuestProgress[playerid][11] = 8000;
							PlayerInfo[playerid][pTalents][2]++;
							SendInfo(playerid, "У Вас появились новые очки талантов");
							QuestProgress[playerid][11] = 10000;
						}
					}
				case 12:
					{
						if(PlayerInfo[playerid][pBoxing] || PlayerInfo[playerid][pKungfu] ||
						PlayerInfo[playerid][pKneehead] || PlayerInfo[playerid][pElbow] && QuestProgress[playerid][12] < 10000){
							QuestProgress[playerid][12] = 1;
							PlayerInfo[playerid][pTalents][3]++;
							SendInfo(playerid, "У Вас появились новые очки талантов");
							QuestProgress[playerid][12] = 10000;
						}		
					}
				}
			}
			return 1;
		}
		case 7650:
		{
			if(response)
			{
				new id = QuestShow[playerid][listitem];
				if(QuestProgress[playerid][id]>=QI[id][LastProgress]) return ShowPlayerDialogEx(playerid,0,0,"","{56A85E}Этот квест уже выполнен","Скрыть","");
				format(string,sizeof(string),"%s\n\\c{FFCB8C}Выполнение: %d/%d",QI[id][QuestText],QuestProgress[playerid][id],QI[id][LastProgress]);
				Dialog_Open(playerid,0,0,QI[id][QuestName],string,"Скрыть","");
				QuestClick[playerid]=id;
			}
			else ShowMenu(playerid);
		}
		case 542:
		{
			if(response){
				PlayerPlaySound(playerid, 1136, 0.0, 0.0, 0.0);
			    switch(RegisterState[playerid])
			    {
				case 2:
					{
					    RegisterState[playerid] = 3;
				        ShowRegisterDialog(playerid,RegisterState[playerid]);
				        RegSex[playerid] = 1;
					}
				case 3:
					{
					    RegisterState[playerid] = 4;
				        ShowRegisterDialog(playerid, RegisterState[playerid]);
				        RegRace[playerid] = 0;
					}
				}
			}
			else
			{
		        PlayerPlaySound(playerid, 1136, 0.0, 0.0, 0.0);
			    switch(RegisterState[playerid])
			    {
				case 2:
					{
					    RegisterState[playerid] = 3;
				        ShowRegisterDialog(playerid,RegisterState[playerid]);
				        RegSex[playerid] = 2;
					}
				case 3:
					{
					    RegisterState[playerid] = 4;
				        ShowRegisterDialog(playerid, RegisterState[playerid]);
				        RegRace[playerid] = 1;
					}
				}
			}
		}
		case 541:
		{
			if(!response)return 1;
			new carsid = pTemp[playerid][pArendaCar];
			GetVehicleHealth(carsid,VehicleHealth[carsid] );
			if(VehicleHealth[carsid]<700)
			{
				new money = floatround(1000.0-VehicleHealth[carsid]);
				if(SlotValue[playerid][0]>=money)
				{
					GiveMoney(playerid,-money);
					format(string,sizeof(string),"Вы заплатили {FFFFFF}$%d{7396FB} за порчу государственного имущества! {FFFFFF}(( {7396FB}Вы сильно побили машину{FFFFFF} ))",money);
					SendClientMessage(playerid,COLOR_LIGHTRED,string);
				}
				else if(PlayerInfo[playerid][pBank]>=money)
				{
					GiveBankMoney(playerid,-money);
					format(string,sizeof(string),"С банковского счета было изьято {FFFFFF}$%d{7396FB} за порчу гос. имущества! {FFFFFF}(( {7396FB}Вы сильно побили машину{FFFFFF} ))",money);
					SendClientMessage(playerid,COLOR_LIGHTRED,string);
				}
				else if(PlayerInfo[playerid][pZKP]>=10)
				{
					PlayerInfo[playerid][pZKP]-=10;
					SendClientMessage(playerid,COLOR_LIGHTRED,"У вас не достаточно денег чтобы заплатить за разбитое авто. Ваша законопослушность была снижена");
				}
			}
			SetVehicleToRespawn(carsid);
			pTemp[playerid][pArendaCar] = -1;
			SendInfo(playerid,"Ваш рабочий транспорт был отбуксирован на стоянку");
			return 1;
		}
		//GPS
		case 538:
		{
			if(!response)return ShowUpdateSettings(playerid);
			PlayerInfo[playerid][pGPS] = listitem;
			ShowUpdateSettings(playerid);
			SendInfo(playerid, "Цвет маршрута GPS навигатора изменён");
		}
		//talents
		case 537:
		{
			if(!response)return 1;
			new update;
			if(TalentsInfo[playerid][SelectedBrunch[playerid]][0]){
				PlayerInfo[playerid][pTalents][SelectedBrunch[playerid]]++;
				update = TalentsInfo[playerid][SelectedBrunch[playerid]][0]-1;
				TalentsInfo[playerid][SelectedBrunch[playerid]][0] = 0;
				UpdateTalent(playerid, update);
			}
			if(TalentsInfo[playerid][SelectedBrunch[playerid]][1]){
				PlayerInfo[playerid][pTalents][SelectedBrunch[playerid]]++;
				update = TalentsInfo[playerid][SelectedBrunch[playerid]][1]+2;
				TalentsInfo[playerid][SelectedBrunch[playerid]][1] = 0;
				UpdateTalent(playerid, update);
			}
			if(TalentsInfo[playerid][SelectedBrunch[playerid]][2]){
				PlayerInfo[playerid][pTalents][SelectedBrunch[playerid]]++;
				update = TalentsInfo[playerid][SelectedBrunch[playerid]][2]+5;
				TalentsInfo[playerid][SelectedBrunch[playerid]][2] = 0;
				UpdateTalent(playerid, update);
			}
			SendInfo(playerid, "Ветка талантов была сброшена");
			new amount[32];
			f(amount, Translate(Language[32][PlayerInfo[playerid][pLanguage]]), PlayerInfo[playerid][pTalents][SelectedBrunch[playerid]]);
			PlayerTextDrawSetString(playerid, PlayerTalents[playerid][5], amount);
		}
		//quick
		case 534:
		{
			if(!response)return 1;
			SetPVarInt(playerid, "QuickSelected", listitem);
			new num;
			for(new i = 12; i < 25; i++){
				if(!ItemsInfo[i][invUse])continue;
				strcat(string, QuickInfo[i]);
				QuickList[num] = i;
				num++;
			}
			ShowPlayerDialogEx(playerid, 535, 2, "Выбор действия", string, "Выбрать","Отмена");
			return 1;
		}
		case 535:
		{
			if(response){
				PlayerInfo[playerid][pItem][GetPVarInt(playerid, "QuickSelected")] = QuickList[listitem];
				f(string, "Вы выбрали действие для %d слота", GetPVarInt(playerid, "QuickSelected")+1);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
				DeletePVar(playerid, "QuickItems");
				for(new i; i < 8; i++){
					PlayerTextDrawHide(playerid, QuickItems[playerid][i]);
					DestroyPlayerTD(playerid, QuickItems[playerid][i]);
				}
			}
			string = "";
			new str[64];
			for(new i; i < 5; i++){
				if(!PlayerInfo[playerid][pItem][i])f(str, "Слот №%d\t{D94141}Не назначено\n", i+1);
				else f(str, "Слот №%d\t{FFCB8C}%s", i+1, QuickInfo[PlayerInfo[playerid][pItem][i]]);
				strcat(string, str);
			}
			return ShowPlayerDialogEx(playerid, 534, 4, "Выбор слота", string, "Далее", "Отмена");
		}
		//trade
		case 533:
		{
			new player = TradeOffer[playerid];
			if(!response){
				TradeOffer[player] = INVALID_PLAYER_ID;
				TradeOffer[playerid] = INVALID_PLAYER_ID;
				f(string, "Вы отказались от предложения обмена с %s[%d]", Name(player), player);
				SendError(playerid, string);
				f(string, "%s[%d] отказался от предложения обмена", Name(playerid), playerid);
				return SendError(player, string);
			}
			if(player == INVALID_PLAYER_ID)return SendError(playerid, "Отправьте повторное предложение обмена");
			if(GetPVarInt(playerid, "showedinv"))HideInventory(playerid);
			if(GetPVarInt(player, "showedinv"))HideInventory(player);
			ShowItems(player);
			ShowItems(playerid);
			ShowTrade(player);
			ShowTrade(playerid);
			f(string, "Вы приняли предложение обмена от %s[%d]", Name(player), player);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
			f(string, "%s[%d] принял предложение обмена", Name(playerid), playerid);
			SendClientMessage(player, COLOR_LIGHTGREEN, string);
			return 1;
		}
		case 536:
		{
			if(!response)return 1;
			new value = strval(inputtext);
			if(SlotValue[playerid][SelectedSlot[playerid]] < value || value < 0){
				f(string, "{FFFFFF}Доступно для обмена: {ffcb8c}%d", SlotValue[playerid][SelectedSlot[playerid]]);
				return ShowPlayerDialogEx(playerid, 536, 1, "Количество для обмена", string, "Положить", "Отмена");
			}
			new im = GetFreeSlot(playerid, 5);
			TradeSelected[playerid][im] = SelectedSlot[playerid];
			ValueTrade[playerid][im] = value;
			UpdateTrade(playerid, im);
			return 1;
		}
		//drop
		case 532:
		{
			if(!response)return 1;
			new value = strval(inputtext);
			switch(SelectedSlot[playerid] + ListSlot[playerid]){
			case 0:
				{
					if(GetMoney(playerid) < value || value < 0){
						SendError(playerid, "У Вас нет столько средств");
						f(string, "{ffffff}Вы собираетесь пожертвовать(выбросить) наличку\nДоступно: {ffcb8c}$%d", GetMoney(playerid));
						return Dialog_Open(playerid, 532, 1, "Подтверждение", string, "Выбросить","Отмена");
					}
					GiveMoney(playerid, -value,"Пожертвование");
					OrgInfo[GLS[13]][oBank] += value;
					f(string, "Вы пожертвовали на развитие экономики $%d. Государство было уведомлено", value);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					f(string, "%s[%d] пожертвовал на развитие экономики $%d", Name(playerid), playerid, value);
					SendGosMessage(COLOR_LIGHTGREEN, string);
					UpdateInventory(playerid, 0);
					return 1;
				}
			default:
				{
					if(SlotValue[playerid][SelectedSlot[playerid]] < value || value < 0){
						SendError(playerid, "У Вас нет столько ресурсов");
						f(string, "{ffffff}Вы собираетесь выбросить предмет\nДоступно: {ffcb8c}%d", SlotValue[playerid][SelectedSlot[playerid]]);
						return Dialog_Open(playerid, 532, 1, "Подтверждение", string, "Выбросить","Отмена");
					}
					SendInfo(playerid, "Вы выбросили ресурсы");
					SlotValue[playerid][SelectedSlot[playerid]] -= value;
					UpdateInventory(playerid, SelectedSlot[playerid]);
					return 1;
				}
			}
		}
		case 540:
		{
			if(!response)return 1;
			switch(SelectedSlot[playerid] + ListSlot[playerid]){
			case 19:
				{
					SendInfo(playerid, "Вы выбросили SIM-карту");
					SlotValue[playerid][SelectedSlot[playerid]] = 1;
					UpdateInventory(playerid, 19);
				}
			default:
				{
					SendInfo(playerid, "Вы выбросили предмет");
					SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]] = 0;
					new im = SelectedSlot[playerid] + ListSlot[playerid];
					if(im >= 0 && im < 25)UpdateInventory(playerid, im);
					else if(im >= 25 && im < 50)UpdateInventory(playerid, im-25);
					else if(im >= 50)UpdateInventory(playerid, im-50);
				}
			}
		}
		//window
		case 531:
		{
			if(!response)return 1;
			switch(GetPVarInt(playerid, "showedwindow")){
			case 1:
				{
					new family = PlayerInfo[playerid][FamilyID];
					if(SelectedSlot[playerid] < 25){
						switch(SelectedSlot[playerid] + ListSlot[playerid]){
						case 0:
							{
								if(GetMoney(playerid) < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько денег");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}$%d", GetMoney(playerid));
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить деньги на склад семьи", string, "Положить", "Отмена");
								}
								FamilyValue[family][0] += strval(inputtext);
								GiveMoney(playerid, -strval(inputtext), "Положил на склад семьи");
								UpdateInventory(playerid, 0);
								format(string,sizeof(string),"{%s}[%s] %s[%d] положил $%d",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Money` = '%d' WHERE `ID` = '%d'",FamilyValue[family][0],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								new logtime[3],logdate[3],logtimestring[16];
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Пополнение склада семьи",-strval(inputtext),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
								return UpdateFamilyWindow(playerid, 0);
							}
						case 11:
							{
								if(SlotValue[playerid][11] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][11]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы на склад семьи", string, "Положить", "Отмена");
								}
								FamilyValue[family][1] += strval(inputtext);
								SlotValue[playerid][11] -= strval(inputtext);
								UpdateInventory(playerid, 11);
								format(string,sizeof(string),"{%s}[%s] %s[%d] положил %d материалов",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Mats` = '%d' WHERE `ID` = '%d'",FamilyValue[family][1],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								return UpdateFamilyWindow(playerid, 1);
							}
						case 13:
							{
								if(SlotValue[playerid][13] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько масок");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][13]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить маски на склад семьи", string, "Положить", "Отмена");
								}
								FamilyValue[family][3] += strval(inputtext);
								SlotValue[playerid][13] -= strval(inputtext);
								UpdateInventory(playerid, 13);
								format(string,sizeof(string),"{%s}[%s] %s[%d] положил %d масок",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Maska` = '%d' WHERE `ID` = '%d'",FamilyValue[family][3],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								return UpdateFamilyWindow(playerid, 3);
							}
						case 14:
							{
								if(SlotValue[playerid][14] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][14]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить наркотики на склад семьи", string, "Положить", "Отмена");
								}
								FamilyValue[family][2] += strval(inputtext);
								SlotValue[playerid][14] -= strval(inputtext);
								UpdateInventory(playerid, 14);
								format(string,sizeof(string),"{%s}[%s] %s[%d] положил %dгр. наркотиков",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Drugs` = '%d' WHERE `ID` = '%d'",FamilyValue[family][2],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								return UpdateFamilyWindow(playerid, 2);
							}
						case 20:
							{
								if(SlotValue[playerid][20] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько канистр");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][20]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить канистру на склад семьи", string, "Положить", "Отмена");
								}
								FamilyValue[family][4] += strval(inputtext);
								SlotValue[playerid][20] -= strval(inputtext);
								UpdateInventory(playerid, 20);
								format(string,sizeof(string),"{%s}[%s] %s[%d] положил %d канистр",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Benz` = '%d' WHERE `ID` = '%d'",FamilyValue[family][4],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								return UpdateFamilyWindow(playerid, 4);
							}
						case 17:
							{
								if(SlotValue[playerid][17] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько рем.комплектов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][17]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить рем.комплекты на склад семьи", string, "Положить", "Отмена");
								}
								FamilyValue[family][5] += strval(inputtext);
								SlotValue[playerid][17] -= strval(inputtext);
								UpdateInventory(playerid, 17);
								format(string,sizeof(string),"{%s}[%s] %s[%d] положил %d рем.комплектов",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Remote` = '%d' WHERE `ID` = '%d'",FamilyValue[family][5],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								return UpdateFamilyWindow(playerid, 5);
							}
						}
					}else{
						switch(SelectedSlot[playerid]-25){
						case 0:
							{
								if(FamilyValue[family][0] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе семьи нет столько денег");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}$%d", FamilyValue[family][0]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять деньги со склада семьи", string, "Взять", "Отмена");
								}
								FamilyValue[family][0] -= strval(inputtext);
								GiveMoney(playerid, strval(inputtext), "Взял со склада семьи");
								UpdateInventory(playerid, 0);
								format(string,sizeof(string),"{%s}[%s] %s[%d] взял $%d",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Money` = '%d' WHERE `ID` = '%d'",FamilyValue[family][0],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								new logtime[3],logdate[3],logtimestring[16];
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Взял со склада семьи",strval(inputtext),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
								return UpdateFamilyWindow(playerid, 0);
							}
						case 1:
							{
								if(FamilyValue[family][1] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе семьи нет столько материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы со склада семьи", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][11] + strval(inputtext) > 2000){
									SendError(playerid, "Вы не сможете унести более 2000 материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы со склада семьи", string, "Взять", "Отмена");
								}
								FamilyValue[family][1] -= strval(inputtext);
								SlotValue[playerid][11] += strval(inputtext);
								UpdateInventory(playerid, 11);
								format(string,sizeof(string),"{%s}[%s] %s[%d] взял %d материалов",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Mats` = '%d' WHERE `ID` = '%d'",FamilyValue[family][1],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								return UpdateFamilyWindow(playerid, 1);
							}
						case 3:
							{
								if(FamilyValue[family][3] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе семьи нет столько масок");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][3]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять маски со склада семьи", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][13] + strval(inputtext) > 10){
									SendError(playerid, "Вы не сможете унести более 10 масок");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][3]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять маски со склада семьи", string, "Взять", "Отмена");
								}
								FamilyValue[family][3] -= strval(inputtext);
								SlotValue[playerid][13] += strval(inputtext);
								UpdateInventory(playerid, 13);
								format(string,sizeof(string),"{%s}[%s] %s[%d] взял %d масок",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Maska` = '%d' WHERE `ID` = '%d'",FamilyValue[family][3],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								return UpdateFamilyWindow(playerid, 3);
							}
						case 2:
							{
								if(FamilyValue[family][2] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе семьи нет столько наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики со склада семьи", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][14] + strval(inputtext) > 500){
									SendError(playerid, "Вы не сможете унести более 500гр. наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики со склада семьи", string, "Взять", "Отмена");
								}
								FamilyValue[family][2] -= strval(inputtext);
								SlotValue[playerid][14] += strval(inputtext);
								UpdateInventory(playerid, 14);
								format(string,sizeof(string),"{%s}[%s] %s[%d] взял %dгр. наркотиков",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Drugs` = '%d' WHERE `ID` = '%d'",FamilyValue[family][2],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								return UpdateFamilyWindow(playerid, 2);
							}
						case 4:
							{
								if(FamilyValue[family][4] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе семьи нет столько канистр");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][4]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять канистру со склада семьи", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][20] + strval(inputtext) > 10){
									SendError(playerid, "Вы не можете взять больше 10 канистр");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][4]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять канистру со склада семьи", string, "Взять", "Отмена");
								}
								FamilyValue[family][4] -= strval(inputtext);
								SlotValue[playerid][20] += strval(inputtext);
								UpdateInventory(playerid, 20);
								format(string,sizeof(string),"{%s}[%s] %s[%d] взял %d канистр",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Benz` = '%d' WHERE `ID` = '%d'",FamilyValue[family][4],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								return UpdateFamilyWindow(playerid, 4);
							}
						case 5:
							{
								if(FamilyValue[family][5] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе семьи нет столько рем.комплектов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][5]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять рем.комплекты со склада семьи", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][17] + strval(inputtext) > 10){
									SendError(playerid, "Вы не можете взять больше 10 рем.комплектов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][5]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять рем.комплекты со склада семьи", string, "Взять", "Отмена");
								}
								FamilyValue[family][5] -= strval(inputtext);
								SlotValue[playerid][17] += strval(inputtext);
								UpdateInventory(playerid, 17);
								format(string,sizeof(string),"{%s}[%s] %s[%d] взял %d рем.комплектов",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,strval(inputtext));
								SendFama(playerid,-1,string);
								format(string, sizeof(string), "UPDATE `family` SET `Remote` = '%d' WHERE `ID` = '%d'",FamilyValue[family][5],PlayerInfo[playerid][FamilyID]);
								mysql_pquery(mysql, string);
								return UpdateFamilyWindow(playerid, 5);
							}
						}
					}
				}
			case 2:
				{
					new team = PlayerInfo[playerid][pMember];
					if(SelectedSlot[playerid] < 25){
						switch(SelectedSlot[playerid] + ListSlot[playerid]){
						case 11:
							{
								if(SlotValue[playerid][11] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][11]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы на склад организации", string, "Положить", "Отмена");
								}
								FractionValue[team][0] += strval(inputtext);
								SlotValue[playerid][11] -= strval(inputtext);
								UpdateInventory(playerid, 11);
								f(string, "%s[%d] положил на склад %d материалов", Name(playerid), playerid, strval(inputtext));
								SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
								UpdateDorm(team);
								SaveOrg(team);
								return UpdateFractionWindow(playerid, 0);
							}
						case 13:
							{
								if(SlotValue[playerid][13] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько масок");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][13]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить маски на склад организации", string, "Положить", "Отмена");
								}
								FractionValue[team][2] += strval(inputtext);
								SlotValue[playerid][13] -= strval(inputtext);
								UpdateInventory(playerid, 13);
								f(string, "%s[%d] положил на склад %d масок", Name(playerid), playerid, strval(inputtext));
								SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
								UpdateDorm(team);
								SaveOrg(team);
								return UpdateFractionWindow(playerid, 2);
							}
						case 14:
							{
								if(SlotValue[playerid][14] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][14]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить наркотики на склад организации", string, "Положить", "Отмена");
								}
								FractionValue[team][1] += strval(inputtext);
								SlotValue[playerid][14] -= strval(inputtext);
								UpdateInventory(playerid, 14);
								f(string, "%s[%d] положил на склад %dгр. наркотиков", Name(playerid), playerid, strval(inputtext));
								SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
								UpdateDorm(team);
								SaveOrg(team);
								return UpdateFractionWindow(playerid, 1);
							}
						case 20:
							{
								if(SlotValue[playerid][20] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько канистр");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][20]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить канистру на склад организации", string, "Положить", "Отмена");
								}
								FractionValue[team][3] += strval(inputtext);
								SlotValue[playerid][20] -= strval(inputtext);
								UpdateInventory(playerid, 20);
								f(string, "%s[%d] положил на склад %d канистр", Name(playerid), playerid, strval(inputtext));
								SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
								UpdateDorm(team);
								SaveOrg(team);
								return UpdateFractionWindow(playerid, 3);
							}
						case 17:
							{
								if(SlotValue[playerid][17] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько рем.комплектов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][17]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить рем.комплекты на склад организации", string, "Положить", "Отмена");
								}
								FractionValue[team][4] += strval(inputtext);
								SlotValue[playerid][17] -= strval(inputtext);
								UpdateInventory(playerid, 17);
								f(string, "%s[%d] положил на склад %d рем.комплектов", Name(playerid), playerid, strval(inputtext));
								SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
								UpdateDorm(team);
								SaveOrg(team);
								return UpdateFractionWindow(playerid, 4);
							}
						}
					}else{
						switch(SelectedSlot[playerid]-25){
						case 0:
							{
								if(FractionValue[team][0] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе организации нет столько материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][0]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы со склада организации", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][11] + strval(inputtext) > 2000){
									SendError(playerid, "Вы не сможете унести более 2000 материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][0]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы со склада организации", string, "Взять", "Отмена");
								}
								FractionValue[team][0] -= strval(inputtext);
								SlotValue[playerid][11] += strval(inputtext);
								UpdateInventory(playerid, 11);
								f(string, "%s[%d] взял со склада %d материалов", Name(playerid), playerid, strval(inputtext));
								SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
								UpdateDorm(team);
								SaveOrg(team);
								return UpdateFractionWindow(playerid, 0);
							}
						case 2:
							{
								if(FractionValue[team][2] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе организации нет столько масок");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять маски со склада организации", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][13] + strval(inputtext) > 10){
									SendError(playerid, "Вы не сможете унести более 10 масок");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять маски со склада организации", string, "Взять", "Отмена");
								}
								FractionValue[team][2] -= strval(inputtext);
								SlotValue[playerid][13] += strval(inputtext);
								UpdateInventory(playerid, 13);
								f(string, "%s[%d] взял со склада %d масок", Name(playerid), playerid, strval(inputtext));
								SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
								UpdateDorm(team);
								SaveOrg(team);
								return UpdateFractionWindow(playerid, 2);
							}
						case 1:
							{
								if(FractionValue[team][1] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе организации нет столько наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики со склада организации", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][14] + strval(inputtext) > 500){
									SendError(playerid, "Вы не сможете унести более 500гр. наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики со склада организации", string, "Взять", "Отмена");
								}
								FractionValue[team][1] -= strval(inputtext);
								SlotValue[playerid][14] += strval(inputtext);
								UpdateInventory(playerid, 14);
								f(string, "%s[%d] взял со склада %dгр. наркотиков", Name(playerid), playerid, strval(inputtext));
								SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
								UpdateDorm(team);
								SaveOrg(team);
								return UpdateFractionWindow(playerid, 1);
							}
						case 3:
							{
								if(FractionValue[team][3] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе организации нет столько канистр");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][3]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять канистру со склада организации", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][20] + strval(inputtext) > 10){
									SendError(playerid, "Вы не можете взять больше 10 канистр");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][3]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять канистру со склада организации", string, "Взять", "Отмена");
								}
								FractionValue[team][3] -= strval(inputtext);
								SlotValue[playerid][20] += strval(inputtext);
								UpdateInventory(playerid, 20);
								f(string, "%s[%d] взял со склада %d канистр", Name(playerid), playerid, strval(inputtext));
								SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
								UpdateDorm(team);
								SaveOrg(team);
								return UpdateFractionWindow(playerid, 3);
							}
						case 4:
							{
								if(FractionValue[team][4] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "На складе организации нет столько рем.комплектов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][4]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять рем.комплекты со склада организации", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][17] + strval(inputtext) > 10){
									SendError(playerid, "Вы не можете взять больше 10 рем.комплектов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][4]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять рем.комплекты со склада организации", string, "Взять", "Отмена");
								}
								FractionValue[team][4] -= strval(inputtext);
								SlotValue[playerid][17] += strval(inputtext);
								UpdateInventory(playerid, 17);
								f(string, "%s[%d] взял со склада %d рем.комплектов", Name(playerid), playerid, strval(inputtext));
								SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
								UpdateDorm(team);
								SaveOrg(team);
								return UpdateFractionWindow(playerid, 4);
							}
						}
					}
				}
			case 3:
				{
					new house = SlotValue[playerid][1];
					if(house == -1)return SendError(playerid, "У Вас нет дома");
					if(SelectedSlot[playerid] < 25){
						switch(SelectedSlot[playerid] + ListSlot[playerid]){
						case 0:
							{
								if(GetMoney(playerid) < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько денег");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}$%d", GetMoney(playerid));
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить деньги в шкаф", string, "Положить", "Отмена");
								}
								ClosetValue[house][0] += strval(inputtext);
								GiveMoney(playerid, -strval(inputtext), "Положил в шкаф");
								UpdateInventory(playerid, 0);
								new logtime[3],logdate[3],logtimestring[16];
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Пополнение шкафа",-strval(inputtext),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
								return UpdateClosetWindow(playerid, 0);
							}
						case 11:
							{
								if(SlotValue[playerid][11] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][11]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы в шкаф", string, "Положить", "Отмена");
								}
								if(ClosetValue[house][1] + strval(inputtext) > 5000){
									SendError(playerid,"Вы не можете положить в шкаф больше 5000 материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][11]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы в шкаф", string, "Положить", "Отмена");
								}
								ClosetValue[house][1] += strval(inputtext);
								SlotValue[playerid][11] -= strval(inputtext);
								UpdateInventory(playerid, 11);
								return UpdateClosetWindow(playerid, 1);
							}
						case 14:
							{
								if(SlotValue[playerid][14] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][14]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить наркотики в шкаф", string, "Положить", "Отмена");
								}
								if(ClosetValue[house][2] + strval(inputtext) > 5000){
									SendError(playerid,"Вы не можете положить в шкаф больше 5000гр. наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][14]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить наркотики в шкаф", string, "Положить", "Отмена");
								}
								ClosetValue[house][2] += strval(inputtext);
								SlotValue[playerid][14] -= strval(inputtext);
								UpdateInventory(playerid, 14);
								return UpdateClosetWindow(playerid, 2);
							}
						}
					}else{
						switch(SelectedSlot[playerid]-25){
						case 0:
							{
								if(ClosetValue[house][0] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "В шкафу нет столько денег");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", ClosetValue[house][0]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять деньги из шкафа", string, "Взять", "Отмена");
								}
								ClosetValue[house][0] -= strval(inputtext);
								GiveMoney(playerid, strval(inputtext), "Достал из шкафа");
								UpdateInventory(playerid, 0);
								new logtime[3],logdate[3],logtimestring[16];
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Достал из шкафа",strval(inputtext),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
								return UpdateClosetWindow(playerid, 0);
							}
						case 2:
							{
								if(ClosetValue[house][2] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "В шкафу нет столько наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", ClosetValue[house][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики из шкафа", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][14] + strval(inputtext) > 500){
									SendError(playerid, "Вы не сможете унести более 500гр. наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", ClosetValue[house][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики из шкафа", string, "Взять", "Отмена");
								}
								ClosetValue[house][2] -= strval(inputtext);
								SlotValue[playerid][14] += strval(inputtext);
								UpdateInventory(playerid, 14);
								return UpdateClosetWindow(playerid, 2);
							}
						case 1:
							{
								if(ClosetValue[house][1] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "В шкафу нет столько материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", ClosetValue[house][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы из шкафа", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][11] + strval(inputtext) > 2000){
									SendError(playerid, "Вы не сможете унести более 2000 материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", ClosetValue[house][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы из шкафа", string, "Взять", "Отмена");
								}
								ClosetValue[house][1] -= strval(inputtext);
								SlotValue[playerid][20] += strval(inputtext);
								UpdateInventory(playerid, 20);
								return UpdateClosetWindow(playerid, 1);
							}
						}
					}
				}
			case 4:
				{
					new car = idaofcar[playerid];
					if(SelectedSlot[playerid] < 25){
						switch(SelectedSlot[playerid] + ListSlot[playerid]){
						case 0:
							{
								if(GetMoney(playerid) < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько денег");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}$%d", GetMoney(playerid));
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить деньги в багажник", string, "Положить", "Отмена");
								}
								TrunkValue[car][0] += strval(inputtext);
								GiveMoney(playerid, -strval(inputtext), "Положил в багажник");
								UpdateInventory(playerid, 0);
								new logtime[3],logdate[3],logtimestring[16];
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Пополнение багажника",-strval(inputtext),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
								ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								return UpdateTrunkWindow(playerid, 1);
							}
						case 11:
							{
								if(SlotValue[playerid][11] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][11]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы в багажник", string, "Положить", "Отмена");
								}
								if(TrunkValue[car][1] + strval(inputtext) > 5000){
									SendError(playerid,"Вы не можете положить в багажник больше 5000 материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][11]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы в багажник", string, "Положить", "Отмена");
								}
								TrunkValue[car][1] += strval(inputtext);
								SlotValue[playerid][11] -= strval(inputtext);
								UpdateInventory(playerid, 11);
								ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								return UpdateTrunkWindow(playerid, 2);
							}
						case 12:
							{
								if(SlotValue[car][12] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько аптечек");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][12]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы в багажник", string, "Положить", "Отмена");
								}
								if(TrunkValue[car][3] + strval(inputtext) > 50){
									SendError(playerid,"Вы не можете положить в багажник больше 50 аптечек");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][12]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить аптечки в багажник", string, "Положить", "Отмена");
								}
								TrunkValue[car][3] += strval(inputtext);
								SlotValue[playerid][12] -= strval(inputtext);
								UpdateInventory(playerid, 12);
								ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								return UpdateTrunkWindow(playerid, 4);
							}
						case 14:
							{
								if(SlotValue[playerid][14] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][14]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить наркотики в багажник", string, "Положить", "Отмена");
								}
								if(TrunkValue[car][2] + strval(inputtext) > 5000){
									SendError(playerid,"Вы не можете положить в багажник больше 5000гр. наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][14]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить наркотики в багажник", string, "Положить", "Отмена");
								}
								TrunkValue[car][2] += strval(inputtext);
								SlotValue[playerid][14] -= strval(inputtext);
								UpdateInventory(playerid, 14);
								ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								return UpdateTrunkWindow(playerid, 3);
							}
						case 20:
							{
								if(SlotValue[playerid][20] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "У Вас нет столько канистр");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][20]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить канистры в багажник", string, "Положить", "Отмена");
								}
								if(TrunkValue[car][4] + strval(inputtext) > 10){
									SendError(playerid,"Вы не можете положить в багажник больше 10 канистр");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][20]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить канистры в багажник", string, "Положить", "Отмена");
								}
								TrunkValue[car][4] += strval(inputtext);
								SlotValue[playerid][20] -= strval(inputtext);
								UpdateInventory(playerid, 20);
								ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								return UpdateTrunkWindow(playerid, 5);
							}
						}
					}else{
						switch(SelectedSlot[playerid]-25){
						case 1:
							{
								if(TrunkValue[car][0] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "В багажнике нет столько денег");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][0]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять деньги из багажника", string, "Взять", "Отмена");
								}
								TrunkValue[car][0] -= strval(inputtext);
								GiveMoney(playerid, strval(inputtext), "Достал из багажника");
								UpdateInventory(playerid, 0);
								new logtime[3],logdate[3],logtimestring[16];
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Достал из багажника",strval(inputtext),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
								ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								return UpdateTrunkWindow(playerid, 1);
							}
						case 3:
							{
								if(TrunkValue[car][2] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "В багажнике нет столько наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики из багажника", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][14] + strval(inputtext) > 500){
									SendError(playerid, "Вы не сможете унести более 500гр. наркотиков");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики из багажника", string, "Взять", "Отмена");
								}
								TrunkValue[car][2] -= strval(inputtext);
								SlotValue[playerid][14] += strval(inputtext);
								UpdateInventory(playerid, 14);
								ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								return UpdateTrunkWindow(playerid, 3);
							}
						case 2:
							{
								if(TrunkValue[car][1] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "В багажнике нет столько материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы из багажника", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][11] + strval(inputtext) > 2000){
									SendError(playerid, "Вы не сможете унести более 2000 материалов");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы из багажника", string, "Взять", "Отмена");
								}
								TrunkValue[car][1] -= strval(inputtext);
								SlotValue[playerid][11] += strval(inputtext);
								UpdateInventory(playerid, 11);
								ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								return UpdateTrunkWindow(playerid, 2);
							}
						case 4:
							{
								if(TrunkValue[car][3] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "В багажнике нет столько аптечек");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][3]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять аптечки из багажника", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][11] + strval(inputtext) > 5){
									SendError(playerid, "Вы не сможете унести более 5 аптечек");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][3]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять аптечки из багажника", string, "Взять", "Отмена");
								}
								TrunkValue[car][3] -= strval(inputtext);
								SlotValue[playerid][12] += strval(inputtext);
								UpdateInventory(playerid, 12);
								ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								return UpdateTrunkWindow(playerid, 4);
							}
						case 5:
							{
								if(TrunkValue[car][4] < strval(inputtext) || strval(inputtext) <= 0){
									SendError(playerid, "В багажнике нет столько канистр");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][4]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять канистры из багажника", string, "Взять", "Отмена");
								}
								if(SlotValue[playerid][20] + strval(inputtext) > 10){
									SendError(playerid, "Вы не сможете унести более 10 канистр");
									f(string, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][4]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять канистры из багажника", string, "Взять", "Отмена");
								}
								TrunkValue[car][4] -= strval(inputtext);
								SlotValue[playerid][20] += strval(inputtext);
								UpdateInventory(playerid, 20);
								ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								return UpdateTrunkWindow(playerid, 5);
							}
						}
					}
				}
			}
		}
		//factory mats
		case 128:
		{
			if(!response){
				if(GetPlayerVirtualWorld(playerid))return ShowForexDialog(playerid);
				return 1;
			}
			if(FactoryInfo[fMaterials] < strval(inputtext) || strval(inputtext) <= 0){
				SendError(playerid, "На шахте нет столько материалов для продажи");
				return ShowFactoryDialog(playerid);
			}
			if(GetMoney(playerid) < strval(inputtext)*5 || strval(inputtext) <= 0){
				SendError(playerid, "У Вас недостаточно средств");
				return ShowFactoryDialog(playerid);
			}
			if(SlotValue[playerid][11] + strval(inputtext) > 2000){
				SendError(playerid, "У Вас нет столько места (( Лимит 2000 материалов ))");
				return ShowFactoryDialog(playerid);
			}
			FactoryInfo[fMaterials] -= strval(inputtext);
			SlotValue[playerid][11] += strval(inputtext);
			GiveMoney(playerid, -strval(inputtext)*5, "Покупка материалов");
			f(string, "Вы приобрели %d материалов за $%d", strval(inputtext), strval(inputtext)*5);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
			OrgInfo[21][oBank] += strval(inputtext)*5;
			format(string, sizeof(string), "На продаже {FF9900}%d материалов\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryInfo[fMaterials]);
			UpdateDynamic3DTextLabelText(FactoryText[0], COLOR_WHITE, string);
			if(GetPlayerVirtualWorld(playerid))return ShowForexDialog(playerid);
			return 1;
		}
		case 129:
		{
			if(!response)return 1;
			switch(listitem){
			case 0:return ShowFactoryDialog(playerid);
			case 1:return ShowSlitokDialog(playerid);
			case 2:return ShowBrilliantDialog(playerid);
			case 3:return ShowForexDialog(playerid);
			case 4:return ShowSellGoldDialog(playerid);
			case 5:return ShowSellDiamondDialog(playerid);
			}
			return 1;
		}
		case 1434:
		{
			if(!response)return ShowForexDialog(playerid);
			if(FactoryInfo[fSlitkov] < strval(inputtext) || strval(inputtext) <= 0){
				SendError(playerid, "В банке нет столько золота для продажи");
				return ShowSlitokDialog(playerid);
			}
			if(GetMoney(playerid) < strval(inputtext)*FactoryInfo[gold_Sell] || strval(inputtext) <= 0){
				SendError(playerid, "У Вас недостаточно средств");
				return ShowSlitokDialog(playerid);
			}
			if(PlayerInfo[playerid][pBirja][0] + strval(inputtext) > 20000){
				SendError(playerid, "У Вас нет столько места (( Лимит 20 килограмм золота ))");
				return ShowSlitokDialog(playerid);
			}
			FactoryInfo[fSlitkov] -= strval(inputtext);
			PlayerInfo[playerid][pBirja][0] += strval(inputtext);
			GiveMoney(playerid, -strval(inputtext)*FactoryInfo[gold_Sell], "Покупка золота");
			f(string, "Вы приобрели %d грамм золота за $%d", strval(inputtext), strval(inputtext)*FactoryInfo[gold_Sell]);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
			OrgInfo[21][oBank] += strval(inputtext)*FactoryInfo[gold_Sell];
			UpdateFactory();
			ShowForexDialog(playerid);
			return 1;
		}
		case 1433:
		{
			if(!response)return ShowForexDialog(playerid);
			if(FactoryInfo[fBrilliantov] < strval(inputtext) || strval(inputtext) <= 0){
				SendError(playerid, "В банке нет столько бриллиантов для продажи");
				return ShowBrilliantDialog(playerid);
			}
			if(GetMoney(playerid) < strval(inputtext)*FactoryInfo[diamond_Sell] || strval(inputtext) <= 0){
				SendError(playerid, "У Вас недостаточно средств");
				return ShowBrilliantDialog(playerid);
			}
			if(PlayerInfo[playerid][pBirja][1] + strval(inputtext) > 1000){
				SendError(playerid, "У Вас нет столько места (( Лимит 1000 бриллиантов ))");
				return ShowBrilliantDialog(playerid);
			}
			FactoryInfo[fBrilliantov] -= strval(inputtext);
			PlayerInfo[playerid][pBirja][1] += strval(inputtext);
			GiveMoney(playerid, -strval(inputtext)*FactoryInfo[diamond_Sell], "Покупка бриллиантов");
			f(string, "Вы приобрели %d бриллиантов за $%d", strval(inputtext), strval(inputtext)*FactoryInfo[diamond_Sell]);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
			OrgInfo[21][oBank] += strval(inputtext)*FactoryInfo[diamond_Sell];
			UpdateFactory();
			ShowForexDialog(playerid);
			return 1;
		}
		case 1432:
		{
			if(!response)return ShowForexDialog(playerid);
			if(PlayerInfo[playerid][pBirja][0] < strval(inputtext) || strval(inputtext) <= 0){
				SendError(playerid, "У Вас нет столько золота для продажи");
				return ShowSellGoldDialog(playerid);
			}
			if(OrgInfo[21][oBank] < strval(inputtext)*FactoryInfo[gold_Buy] || strval(inputtext) <= 0){
				SendError(playerid, "У банка недостаточно средств");
				return ShowSellGoldDialog(playerid);
			}
			if(PlayerInfo[playerid][pBirja][0] < 10000){
				SendError(playerid, "Продажа происходит от 10000 грамм");
				return ShowSellGoldDialog(playerid);
			}
			FactoryInfo[fSlitkov] += strval(inputtext);
			PlayerInfo[playerid][pBirja][0] -= strval(inputtext);
			GiveMoney(playerid, strval(inputtext)*FactoryInfo[gold_Buy], "Продажа золота");
			f(string, "Вы продали %d грамм золота за $%d", strval(inputtext), strval(inputtext)*FactoryInfo[gold_Buy]);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
			OrgInfo[21][oBank] -= strval(inputtext)*FactoryInfo[gold_Buy];
			UpdateFactory();
			ShowForexDialog(playerid);
			return 1;
		}
		case 1431:
		{
			if(!response)return ShowForexDialog(playerid);
			if(PlayerInfo[playerid][pBirja][1] < strval(inputtext) || strval(inputtext) <= 0){
				SendError(playerid, "У Вас нет столько бриллиантов для продажи");
				return ShowSellDiamondDialog(playerid);
			}
			if(OrgInfo[21][oBank] < strval(inputtext)*FactoryInfo[diamond_Buy] || strval(inputtext) <= 0){
				SendError(playerid, "У банка недостаточно средств");
				return ShowSellDiamondDialog(playerid);
			}
			if(PlayerInfo[playerid][pBirja][1] < 500){
				SendError(playerid, "Продажа происходит от 500 карат");
				return ShowSellDiamondDialog(playerid);
			}
			FactoryInfo[fBrilliantov] += strval(inputtext);
			PlayerInfo[playerid][pBirja][1] -= strval(inputtext);
			GiveMoney(playerid, strval(inputtext)*FactoryInfo[diamond_Buy], "Продажа бриллиантов");
			f(string, "Вы продали %d бриллиантов за $%d", strval(inputtext), strval(inputtext)*FactoryInfo[diamond_Buy]);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
			OrgInfo[21][oBank] -= strval(inputtext)*FactoryInfo[diamond_Buy];
			UpdateFactory();
			ShowForexDialog(playerid);
			return 1;
		}
		///ad
		case 8455:
		{
			if(!response)return 1;
			SendClientMessage(playerid,COLOR_YELLOW,"Ваше сообщение зарегистрировано в системе и будет опубликовано после редакции");
			format(string,sizeof(string),"На обработку объявлений пришло сообщение от %s[%d]",PlayerName[playerid], playerid);
			SendTeamMessage(TEAM_RADIO,COLOR_YELLOW,string);
			SendTeamMessage(TEAM_RADIOLV,COLOR_YELLOW,string);
			SendTeamMessage(TEAM_RADIOSF,COLOR_YELLOW,string);
			AddTimeMessages[playerid] = gettime();
			GiveMoney(playerid, -500);
			TimeMessage[playerid]=gettime()+20;
		}
		//СТО
		case 7000:
		{
	        if(response)
			{
				new vehicleid = GetPlayerVehicleID(playerid), Float:Pos[6];
				TPInfo[playerid][tID] = -1;
				if(!GetPVarInt(playerid, "StoWaiting"))return 1;
				switch(listitem)
				{
	                case 0:
					{
						
						for(new i = 0; i < NUMBER_TYPE_PAINTJOB; i++)
						{
			                if(pjInfo[i][vehID] == GetVehicleModel(vehicleid))
							{
				            	TPInfo[playerid][tID] = i;
								break;
							}
			           	}
						if(TPInfo[playerid][tID] == -1)
						{
							ShowTuning(playerid);
							return SendError(playerid, "Для модели вашего транспорта нет покрасочных работ");
						}
						new pid = TPInfo[playerid][tID];
						TPInfo[playerid][tPaintjob] = true;
                        ChangeVehicleColor(vehicleid, 1, 1);
                        ChangeVehiclePaintjob(vehicleid, pjInfo[pid][pjNumber]);
						f(string, "%s~n~price: $%d", pjInfo[pid][pjName], pjInfo[pid][pjPrice]);
						PlayerTextDrawSetString(playerid, InfoText[playerid], string);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 4, 0, 5);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
					}
	                case 1: Dialog_Open(playerid, 7001, 1, "Перекраска кузов", "\n\n\\c{ffffff}Введите ID основного и ID дополнительного цвета через пробел\n\n\\c{C9EAFF}Например: 0 128\n\\c{FFCB8C}Стоимость покраски $8000\n\n", "Перекрасить", "Отмена");
	                case 2:
					{

	                    for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == CARMODTYPE_EXHAUST)
							{
			                    if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
								{
				                    TPInfo[playerid][tID] = i;
									break;
								}
			                }
						}
	                    if(TPInfo[playerid][tID] == -1) 
						{
							ShowTuning(playerid);
							return SendError(playerid, "Для модели вашего транспорта нет выхлопных труб");
						}
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = CARMODTYPE_EXHAUST;
						TPInfo[playerid][tPaintjob] = false;
						f(string, "%s~n~price: $%d", ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString(playerid, InfoText[playerid], string);
                        AddVehicleComponent( vehicleid, ComponentInfo[cid][cID]);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], -2, -5, 0);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
	                }
	                case 3:
					{

	                    for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == CARMODTYPE_FRONT_BUMPER)
							{
			                    if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
								{
				                    TPInfo[playerid][tID] = i;
									break;
								}
			                }
						}
	                    if(TPInfo[playerid][tID] == -1)
						{
							ShowTuning(playerid);
							return SendError(playerid, "Для модели вашего транспорта нет передних бамперов");
						}
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = CARMODTYPE_FRONT_BUMPER;
						TPInfo[playerid][tPaintjob] = false;
						f(string, "%s~n~price: $%d", ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString( playerid, InfoText[playerid], string);
                        AddVehicleComponent(vehicleid, ComponentInfo[cid][cID]);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 0, 6, 0.5);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
	                }
	                case 4:
					{ 

	                    for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == CARMODTYPE_REAR_BUMPER)
							{
			                    if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
								{
				                    TPInfo[playerid][tID] = i;
									break;
								}
			                }
						}
	                    if(TPInfo[playerid][tID] == -1)
						{
							ShowTuning(playerid);
							return SendError(playerid, "Для модели вашего транспорта нет задних бамперов");
						}
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = CARMODTYPE_REAR_BUMPER;
						TPInfo[playerid][tPaintjob] = false;
						f(string, "%s~n~price: $%d",ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString( playerid, InfoText[playerid], string);
                        AddVehicleComponent(vehicleid, ComponentInfo[cid][cID]);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 0, -6, 0.5);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
	                }
	                case 5:
					{

	                    for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == CARMODTYPE_HOOD)
							{
			                    if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
								{
				                    TPInfo[playerid][tID] = i;
									break;
								}
			                }
						}
	                    if(TPInfo[playerid][tID] == -1)
						{
							ShowTuning(playerid);
							return SendError(playerid, "Для модели вашего транспорта нет кастомных крыш");
						}
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = CARMODTYPE_HOOD;
						TPInfo[playerid][tPaintjob] = false;
	                    f(string, "%s~n~price: $%d",ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString( playerid, InfoText[playerid], string);
                        AddVehicleComponent(vehicleid, ComponentInfo[cid][cID]);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 0, 6, 2);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
	                }
					case 6:
					{

	                    for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == CARMODTYPE_ROOF)
							{
			                    if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
								{
				                    TPInfo[playerid][tID] = i;
									break;
								}
			                }
						}
	                    if(TPInfo[playerid][tID] == -1)
						{
							ShowTuning(playerid);
							return SendError(playerid, "Для модели вашего транспорта нет кастомных крыш");
						}
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = CARMODTYPE_ROOF;
						TPInfo[playerid][tPaintjob] = false;
	                    f(string, "%s~n~price: $%d",ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString( playerid, InfoText[playerid], string);
                        AddVehicleComponent(vehicleid, ComponentInfo[cid][cID]);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 0, 6, 2);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
	                }
	                case 7:
					{
	                    for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == CARMODTYPE_SPOILER)
							{
			                    if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
								{
				                    TPInfo[playerid][tID] = i;
									break;
								}
			                }
						}
	                    if(TPInfo[playerid][tID] == -1)
						{
							ShowTuning(playerid);
							return SendError(playerid, "Для модели вашего транспорта нет спойлеров");
						}
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = CARMODTYPE_SPOILER;
						TPInfo[playerid][tPaintjob] = false;
	                    f(string, "%s~n~price: $%d",ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString( playerid, InfoText[playerid], string);
                        AddVehicleComponent(vehicleid, ComponentInfo[cid][cID]);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 0, -6, 2);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
	                }
	                case 8:
					{
	                    for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == CARMODTYPE_SIDESKIRT)
							{
			                    if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
								{
				                    TPInfo[playerid][tID] = i;
									break;
								}
			                }
						}
						if(TPInfo[playerid][tID] == -1)
						{
							ShowTuning(playerid);
							return SendError(playerid, "Для модели вашего транспорта нет боковых юбок");
						}
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = CARMODTYPE_SIDESKIRT;
						TPInfo[playerid][tPaintjob] = false;
						f(string, "%s~n~price: $%d",ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString( playerid, InfoText[playerid], string);
                        AddVehicleComponent(vehicleid, ComponentInfo[cid][cID]);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 4, 0, 0.5);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
	                }
	                case 9:
					{
	                    for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == CARMODTYPE_WHEELS)
							{
			                    if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
								{
				                    TPInfo[playerid][tID] = i;
									break;
								}
			                }
						}
	                    if(TPInfo[playerid][tID] == -1 || IsABike(GetPlayerVehicleID(playerid)))
						{
							ShowTuning(playerid);
							return SendError(playerid, "Для модели вашего транспорта нет кастомных дисков");
						}
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = CARMODTYPE_WHEELS;
						TPInfo[playerid][tPaintjob] = false;
						f(string, "%s~n~price: $%d",ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString( playerid, InfoText[playerid], string);
                        AddVehicleComponent(vehicleid, ComponentInfo[cid][cID]);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 4, 0, 0.5);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
	                }
	                case 10:
					{
	                    for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == CARMODTYPE_HYDRAULICS)
							{
			                    if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
								{
				                    TPInfo[playerid][tID] = i;
									break;
								}
			                }
						}
	                    if(TPInfo[playerid][tID] == -1 || IsABike(GetPlayerVehicleID(playerid)))
						{
							ShowTuning(playerid);
							return SendError(playerid, "Модель вашего транспорта не поддерживает установку гидравлической подвески");
						}
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = CARMODTYPE_HYDRAULICS;
						TPInfo[playerid][tPaintjob] = false;
						f(string, "%s~n~price: $%d",ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString( playerid, InfoText[playerid], string);
                        AddVehicleComponent(vehicleid, ComponentInfo[cid][cID]);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 2, 2, 2);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
	                }
	                case 11:
					{
	                    for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == CARMODTYPE_NITRO)
							{
			                    if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
								{
				                    TPInfo[playerid][tID] = i;
									break;
								}
			                }
						}
	                    if(TPInfo[playerid][tID] == -1 || IsABike(GetPlayerVehicleID(playerid)))
						{
							ShowTuning(playerid);
							return SendError(playerid, "Модель вашего транспорта не поддерживает установку нитроускорителя");
						}
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = CARMODTYPE_NITRO;
						TPInfo[playerid][tPaintjob] = false;
						f(string, "%s~n~price: $%d",ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString( playerid, InfoText[playerid], string);
                        AddVehicleComponent(vehicleid, ComponentInfo[cid][cID]);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 0, -6, 2);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
	                }
					case 12:
					{
						for(new i = 0; i < MAX_COMPONENTS; i++)
						{
			                if(ComponentInfo[i][cType] == 2281488)
							{
				                TPInfo[playerid][tID] = i;
								break;
			                }
						}
						if(IsABike(GetPlayerVehicleID(playerid)))
						{
							ShowTuning(playerid);
							return SendError(playerid, "Модель вашего транспорта не поддерживает установку неоновой подсветки");
						}
						DestroyDynamicObject(VehObjects[vehicleid][23]);
						DestroyDynamicObject(VehObjects[vehicleid][24]);
						new cid = TPInfo[playerid][tID];
						TPInfo[playerid][tType] = 2281488;
						TPInfo[playerid][tPaintjob] = false;
						f(string, "%s~n~price: $%d",ComponentInfo[cid][cName], ComponentInfo[cid][cPrice]);
						PlayerTextDrawSetString( playerid, InfoText[playerid], string);
                        VehObjects[vehicleid][23] = CreateDynamicObject(ComponentInfo[TPInfo[playerid][tID]][cID],0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
						VehObjects[vehicleid][24] = CreateDynamicObject(ComponentInfo[TPInfo[playerid][tID]][cID],0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
						AttachDynamicObjectToVehicle(VehObjects[vehicleid][23], vehicleid, -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
						AttachDynamicObjectToVehicle(VehObjects[vehicleid][24], vehicleid, 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
						GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 3, 2, -0.5);
						SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
						GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
						SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
						PlayerTextDrawShow(playerid, InfoText[playerid]);
						for(new i; i < sizeof ActionMenu; i++)
							TextDrawShowForPlayer(playerid, ActionMenu[i]);
						SelectTextDraw(playerid, COLOR_ORANGE);
					}
					case 13:
					{
						for(new i; i < MAX_STICKERS; i++){
							f(string, "%s{FFFFFF}%s {56A85E}[$%d]\n", string, StickersInfo[i][st_Name], StickersInfo[i][st_Price]);
						}
						ShowPlayerDialogEx(playerid, 7002, 2, "Список стикеров", string, "Выбрать", "Отмена");
					}
	            }
	        }
	        else if(!response)
			{
				if(!GetPVarInt(playerid, "StoWaiting"))return 1;
				new i = GetPVarInt(playerid, "StoWaiting")-1;
				DeletePVar(playerid, "StoWaiting");
	            TuningInfo[i][stoWait] = false;
				new carid = GetPlayerVehicleID(playerid);
				SetVehiclePos(carid, TuningInfo[i][stoGarage][0], TuningInfo[i][stoGarage][1], TuningInfo[i][stoGarage][2]);
				SetVehicleZAngle(carid, TuningInfo[i][stoGarage][3]);
				SetVehicleVirtualWorld(carid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				PutPlayerInVehicle(playerid, carid, 0);
				SetCameraBehindPlayer(playerid);
				CancelSelectTextDraw(playerid);
				ModCar(carid);
				return 1;
	        }
	    }
		case 7002:
		{
			if(!response)return ShowTuning(playerid);
			new vehicleid = GetPlayerVehicleID(playerid), Float:Pos[6];
			new carid = GetVehicleID(vehicleid);
			if(TunInfo[carid][nSticker][listitem] != 0){
				ShowTuning(playerid);
				return SendError(playerid, "У вас уже есть этот стикер");
			}
			GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
			TPInfo[playerid][tID] = listitem;
			new cid = TPInfo[playerid][tID];
			f(string, "%s~n~price: $%d",StickersInfo[cid][st_Name], StickersInfo[cid][st_Price]);
			PlayerTextDrawSetString( playerid, InfoText[playerid], string);
			PlayerTextDrawShow(playerid, InfoText[playerid]);
			StickerPos[carid][listitem][0] = Pos[0];
			StickerPos[carid][listitem][1] = Pos[1];
			StickerPos[carid][listitem][2] = Pos[2];
			SetPVarInt(playerid, "tempstick", 1);
			CreateSticker(vehicleid, cid);
			CancelSelectTextDraw(playerid);
			SetCameraBehindPlayer(playerid);
			SelectObject(playerid);
			SendInfo(playerid, "{FFCB8C}Выставите стикер так, как вам нравится, и нажмите кнопку сохранения для покупки");
			SendInfo(playerid, "Для отмены покупки нажмите {7396FB}'ESC'");
			SendInfo(playerid, "Для того, чтобы вращать камеру, зажмите клавишу {7396FB}'Вперёд'");
			EditDynamicObject(playerid, VehObjects[GetPlayerVehicleID(playerid)][4]);
			return 1;
		}
		case 7001:
		{
	        if(!response) return ShowTuning(playerid);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetMoney(playerid) < 8000)
			{
				SendError(playerid, "У Вас недостаточно средств для перекраски кузова");
				return ShowTuning(playerid);
			}
			new b1, b2;
			if(sscanf(inputtext, "ii", b1, b2)) return Dialog_Open(playerid, 7001, 1, "Перекраска кузов", "\n\n\\c{ffffff}Введите ID основного и ID дополнительного цвета через пробел\n\n\\c{C9EAFF}Например: 0 128\n\\c{FFCB8C}Стоимость покраски $8000\n\n", "Перекрасить", "Отмена");
			if(b1 < 0 || b2 < 0 || b1 > 255 || b2 > 255)
			{
				Dialog_Open(playerid, 7001, 1, "Перекраска кузов", "\n\n\\c{ffffff}Введите ID основного и ID дополнительного цвета через пробел\n\n\\c{C9EAFF}Например: 0 128\n\\c{FFCB8C}Стоимость покраски $8000\n\n", "Перекрасить", "Отмена");
				return SendError(playerid, "Неверно указаны ID цветов. От 0 до 255");
			}
			CarInfo[GetVehicleID(GetPlayerVehicleID(playerid))][cColor_1] = b1;
			CarInfo[GetVehicleID(GetPlayerVehicleID(playerid))][cColor_2] = b2;
			ChangeVehicleColor(vehicleid, b1, b2);
			GiveMoney(playerid, -8000);
			TuningInfo[GetPVarInt(playerid, "StoWaiting")-1][stoBalance] += 800;
			TuningInfo[GetPVarInt(playerid, "StoWaiting")-1][stoWin] += 800;
			return ShowTuning(playerid);
		}
		case 8012: 
		{ 
			if(!response)return 1; 
			new query[190];
			format(query, sizeof(query),"{FFFFFF}Оплата счёта за СТО.\n\nВаша СТО оплачена на %d/30 дней.\nЕжедневная аредная плата за Вашу СТО составляет: {93C722}10000${FFFFFF}\n\n{0099FF}Введите на сколько дней Вы хотите продлить аренду:",TuningInfo[SlotValue[playerid][4]][stoOplata]);
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 8012, DIALOG_STYLE_INPUT, "{43CD80}Оплата за СТО", query, "Оплатить", "Закрыть");
			if(GetMoney(playerid) < strval(inputtext)*10000) return SendError(playerid, "У Вас недостаточно средств");
			if(strval(inputtext) < 1 || strval(inputtext) > 30) SendError(playerid, "Кол-во дней оплаты не может быть меньше 1 дня или больше 30 дней");
			if(strval(inputtext) < 1 || strval(inputtext) > 30) return ShowPlayerDialogEx(playerid, 8012, DIALOG_STYLE_INPUT, "{43CD80}Оплата за СТО", query, "Оплатить", "Закрыть");
			if(TuningInfo[SlotValue[playerid][4]][stoOplata]+strval(inputtext) > 30) SendError(playerid, "Кол-во дней оплаты не может быть меньше 1 дня или больше 30 дней.");
			if(TuningInfo[SlotValue[playerid][4]][stoOplata]+strval(inputtext) > 30) return ShowPlayerDialogEx(playerid, 8012, DIALOG_STYLE_INPUT, "{43CD80}Оплата за СТО", query, "Оплатить", "Закрыть");
			TuningInfo[SlotValue[playerid][4]][stoOplata] += strval(inputtext);
			GiveMoney(playerid,-strval(inputtext)*10000);
			format(query, sizeof(query),"Вы продлили аренду на %d дней, с рук снято: {93C722}%d$",strval(inputtext),strval(inputtext)*10000);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, query);
			UpdateSTO(SlotValue[playerid][4]);
			return 1; 
		}
		case 8013:
	 	{
	 	    if(response)
	 	    {
	 	        if(SlotValue[playerid][4] != -1)
	 	        {
	 	        	ShowPlayerDialogEx(playerid,8014,2,"{43CD80}Управление СТО","Снять со счета\nПополнить баланс СТО\n{7396FB}Отметить в GPS","Выбор","Отмена");
				}
			 }
		}
		case 8014:
	 	{
	 	    new biz = SlotValue[playerid][4];
	 	    if(SlotValue[playerid][4] == -1) return 1;
	 	    if(response)
	 	    {
				switch(listitem)
				{
					case 0: ShowPlayerDialogEx(playerid,8015,1,"{43CD80}Управление СТО","\n\n{FFFFFF}Введите сумму, которую хотите снять\n\n","Далее","Отмена");
					case 1: ShowPlayerDialogEx(playerid,8016,1,"{43CD80}Управление СТО","\n\n{FFFFFF}Введите сумму, которую хотите положить на баланс вашей СТО\n\n","Далее","Отмена");
					case 2:
					{
					    EnableGPSForPlayer(playerid, TuningInfo[biz][stoPos][0], TuningInfo[biz][stoPos][1], TuningInfo[biz][stoPos][2]);
					    SendInfo(playerid,"Вы отметили вашу СТО в GPS");
					}
				}
	 	    }
		}
		case 8015:
		{
		    if(response)
		    {
		        new biz = SlotValue[playerid][4];
				new cost = strval(inputtextsave);
				if(cost < 1 || cost > TuningInfo[biz][stoBalance]) return ShowPlayerDialogEx(playerid,8015,1,"{43CD80}Управление СТО","\n\n{FFFFFF}Введите сумму, которую хотите снять\n\n","Далее","Отмена");
				TuningInfo[biz][stoBalance] -= cost;
				GiveMoney(playerid,cost,"TakeMoney (STO)");
				UpdateSTO(biz);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Снятие с баланса СТО",cost,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
				SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы сняли деньги со счета");
		    }
		}
		case 8016:
		{
		    if(response)
		    {
		        new biz = SlotValue[playerid][4];
				new cost = strval(inputtextsave);
				if(cost < 1 || cost > SlotValue[playerid][0]) return ShowPlayerDialogEx(playerid,8016,1,"{43CD80}Управление СТО","\n\n{FFFFFF}Введите сумму, которую хотите положить на баланс вашей СТО\n\n","Далее","Отмена");
				TuningInfo[biz][stoBalance] += cost;
				GiveMoney(playerid,-cost,"PutMoney (STO)");
				UpdateSTO(biz);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Пополнение баланса СТО",-cost,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
				SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы пополнили баланс вашей СТО");
		    }
		}
		case 8017:
		{
		    if(response)
		    {
		        if(SlotValue[playerid][4] != -1)
				{
				    new biz = SlotValue[playerid][4];
				    if(!IsPlayerInRangeOfPoint(playerid, 15.0, TuningInfo[biz][stoPos][0],TuningInfo[biz][stoPos][1],TuningInfo[biz][stoPos][2])) return SendError(playerid,"Вы должны находиться возле своей СТО");
				    if(GetString(TuningInfo[biz][stoOwner],Name(playerid)))
				    {
			         	SetString(TuningInfo[biz][stoOwner],"None");
					    GiveMoney(playerid,1000000,"SellCarService");
				     	SlotValue[playerid][4] = -1;
						TuningInfo[biz][stoBalance] = 0;
						TuningInfo[biz][stoOplata] = 0;
				     	SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы продали вашу СТО государству");
						UpdateSTO(biz);
						UpdateInventory(playerid, 4);
						new logtime[3],logdate[3],logtimestring[16];
						getdate(logdate[2],logdate[1],logdate[0]);
						gettime(logtime[0],logtime[1],logtime[2]);
						f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
						WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Продажа СТО государству",1000000,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
						SaveAccount(playerid);
					}
				}
		    }
		}
		//Квартиры
		case 8010: 
		{ 
			if(!response)return 1; 
			new query[190];
			format(query, sizeof(query),"{FFFFFF}Оплата счёта за квартплату.\n\nВаша квартира оплачена на %d/30 дней.\nЕжедневная квартплата составляет: {93C722}%d${FFFFFF}\n\n{0099FF}Введите на сколько дней Вы хотите продлить квартплату:",kvartinfo[SlotValue[playerid][2]][kvPlata],kvartinfo[SlotValue[playerid][2]][pDay]);
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 8010, DIALOG_STYLE_INPUT, "{43CD80}Оплата за квартиру", query, "Оплатить", "Закрыть");
			if(GetMoney(playerid) < strval(inputtext)*kvartinfo[SlotValue[playerid][2]][pDay]) return SendError(playerid, "У Вас недостаточно средств");
			if(strval(inputtext) < 1 || strval(inputtext) > 30) SendError(playerid, "Кол-во дней оплаты не может быть меньше 1 дня или больше 30 дней");
			if(strval(inputtext) < 1 || strval(inputtext) > 30) return ShowPlayerDialogEx(playerid, 8010, DIALOG_STYLE_INPUT, "{43CD80}Оплата за квартиру", query, "Оплатить", "Закрыть");
			if(kvartinfo[SlotValue[playerid][2]][kvPlata]+strval(inputtext) > 30) SendError(playerid, "Кол-во дней оплаты не может быть меньше 1 дня или больше 30 дней.");
			if(kvartinfo[SlotValue[playerid][2]][kvPlata]+strval(inputtext) > 30) return ShowPlayerDialogEx(playerid, 8010, DIALOG_STYLE_INPUT, "{43CD80}Оплата за квартиру", query, "Оплатить", "Закрыть");
			kvartinfo[SlotValue[playerid][2]][kvPlata] += strval(inputtext);
			GiveMoney(playerid,-strval(inputtext)*kvartinfo[SlotValue[playerid][2]][pDay]);
			format(query, sizeof(query),"Вы продлили квартплату на %d дней, с рук снято: {93C722}%d$",strval(inputtext),strval(inputtext)*kvartinfo[SlotValue[playerid][2]][pDay]);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, query);
			savekvart(SlotValue[playerid][2]);
			return 1; 
		}
		case 8002:
		{
			if(response)
			{
				format(string, sizeof(string), "{ffffff}Открыть/закрыть квартиру\nОтметить подъезд на карте");
				ShowPlayerDialogEx(playerid, 8003, DIALOG_STYLE_LIST, "{43CD80}Управление квартирой", string, "Выбрать", "Отмена");
			}
		}
		case 8003: 
		{ 
			new i = SlotValue[playerid][2];
			if(response) 
			{ 
				switch(listitem) 
				{ 
				case 0:
					{
						if(kvartinfo[i][kvLock] == 1)
						{
							kvartinfo[i][kvLock] = 0;
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							GameTextForPlayer(playerid, "~g~Opened", 5000, 5);
						}
						else
						{
							kvartinfo[i][kvLock] = 1;
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							GameTextForPlayer(playerid, "~r~Closed", 5000, 5);
						}
					}
				case 1:
					{
						for(new b; b < Allpod; b++)
						{
							if(PodeezdInfo[b][HOUSE] == kvartinfo[i][pID])
							{
								if(PodeezdInfo[b][podeezd] == kvartinfo[i][podeezd])
								{
									EnableGPSForPlayer(playerid, PodeezdInfo[b+1][podPic][0], PodeezdInfo[b+1][podPic][1], PodeezdInfo[b+1][podPic][2]);
									break;
								}
							}
						}
					}
				} 
			} 
		} 
		case 8008: 
		{ 
			if(!response) return 1; 
			if(!strcmp(kvartinfo[GetPlayerVirtualWorld(playerid)][vladelec],"None",true)) 
			{
				if(SlotValue[playerid][1] != -1)return SendError(playerid, "Сначала нужно продать дом"); 
				if(SlotValue[playerid][2] != -1)return SendError(playerid, "У вас уже есть квартира"); 
				if(GetMoney(playerid) < kvartinfo[GetPlayerVirtualWorld(playerid)][pCount]) return SendError(playerid, "Недостаточно средств"); 
				format(kvartinfo[GetPlayerVirtualWorld(playerid)][vladelec], MAX_PLAYER_NAME,"%s", PlayerName[playerid]); 
				SendClientMessage(playerid, 0x66cc00AA, "Поздравляем! Вы приобрели квартиру!"); 
				SendClientMessage(playerid, 0x66cc00AA, "Внимание! Вас могут выселить если квартира не будет вовремя оплачена"); 
				GiveMoney(playerid, -kvartinfo[GetPlayerVirtualWorld(playerid)][pCount], "Buy Kvartira"); 
				SlotValue[playerid][2] = GetPlayerVirtualWorld(playerid); 
				kvartinfo[SlotValue[playerid][2]][kvPlata] = 2;
				updatekvar(SlotValue[playerid][2]); 
				savekvart(SlotValue[playerid][2]); 
				SaveAccount(playerid);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Покупка квартиры",-kvartinfo[GetPlayerVirtualWorld(playerid)][pCount],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
				return 1; 
			} 
			else return SendError(playerid, "Эта квартира уже куплена"); 
		} 
		case 8009: 
		{ 
			if(!response) return 1; 
			strmid(kvartinfo[SlotValue[playerid][2]][vladelec], "None", 0, strlen("None"), 5); 
			kvartinfo[SlotValue[playerid][2]][kvLock] = 0; 
			GiveMoney(playerid,kvartinfo[SlotValue[playerid][2]][pCount]/2, "Sell Kvartira");
			SendClientMessage(playerid, COLOR_LIME, "Вы продали свою квартиру"); 
			updatekvar(SlotValue[playerid][2]); 
			SlotValue[playerid][2] = -1; 
			SaveAccount(playerid);
			UpdateInventory(playerid, 2);
			new logtime[3],logdate[3],logtimestring[16];
			getdate(logdate[2],logdate[1],logdate[0]);
			gettime(logtime[0],logtime[1],logtime[2]);
			f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
			WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Продажа квартиры государству",kvartinfo[SlotValue[playerid][2]][pCount]/2,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
			return 1; 
		} 
		case 8011: 
		{ 
			if(!response) return 1; 
			J_SetPlayerPos(playerid, 2268.5310,1648.0154,1084.2344); 
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerVirtualWorld(playerid, PodeezdInfo[GetPVarInt(playerid, "podeezd")][podMir][listitem]); 
			SetPlayerInterior(playerid,1); 
			SetCameraBehindPlayer(playerid);
		}
		//CASINO
		case 8023:
		{
			if(!response)return 1;
			if(strval(inputtext) < 1000 || strval(inputtext) > 2500000)
			{
				SendClientMessage(playerid,COLOR_GRAY,"Сумма должна быть от $1000 до $2500000");
				return Dialog_Open(playerid,8023,1,"{43CD80}Ставка на игру","\n\n\\c{FFFFFF}Введите сумму ставки для предстоящей игры\n\n\\c{7396FB}Сумма должна быть от $1000 до $2500000\n\n","Готово","Отмена");
			}
			StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBet] = strval(inputtext);
			UpdateBonesInfo(GetPVarInt(playerid,"BonesTable")-1);
		}
		case 8024:
		{
			if(!response)return SelectTextDraw(playerid,0x0099FFFF);
			HideBonesMenu(playerid);
		}
		case 8026:
		{
			if(!response)return DeletePVar(playerid,"RoulVar");
			if(strval(inputtext) < 1000 || strval(inputtext) > 100000)
			{
				SendClientMessage(playerid,COLOR_GRAY,"Сумма ставки должна быть от $1000 до $100000");
				return Dialog_Open(playerid,8026,1,"{43CD80}Ставка на рулетку","\n\n\\c{FFFFFF}Введите сумму ставки для предстоящей игры\n\n\\c{7396FB}Сумма должна быть от $1000 до $100000\n\n","Готово","Отмена");
			}
			if(GetMoney(playerid) < strval(inputtext))return SendError(playerid,"У Вас недостаточно средств");
			if(RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rGameStart])return SendError(playerid,"Дождитесь окончания ролла");
			SetPVarInt(playerid,"RoulPoint",GetPVarInt(playerid,"RoulVar"));
			DeletePVar(playerid,"RoulVar");
			RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rBets]++;
			SetPVarInt(playerid,"RoulBet",strval(inputtext));
			GiveMoney(playerid, -strval(inputtext), "Roulette Bet");
			Fishka[playerid] = CreateDynamicObject(rl_fishka[random(12)],
			rl_coord[GetPVarInt(playerid,"RoulTable")-1][0]+rl_fishpos[GetPVarInt(playerid,"RoulPoint")][0],
			rl_coord[GetPVarInt(playerid,"RoulTable")-1][1]+rl_fishpos[GetPVarInt(playerid,"RoulPoint")][1],
			rl_coord[GetPVarInt(playerid,"RoulTable")-1][2]-rl_fishpos[GetPVarInt(playerid,"RoulPoint")][2],
			0.00000, 0.00000, 0.00000, -1, -1, -1);
			SendClientMessage(playerid,COLOR_PURPLE,"Ставка сделана. Дождитесь окончания приёма ставок");
			new logtime[3],logdate[3],logtimestring[16];
			getdate(logdate[2],logdate[1],logdate[0]);
			gettime(logtime[0],logtime[1],logtime[2]);
			f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
			WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Ставка на рулетку",-strval(inputtext),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		}
		case 8027:
		{
			if(!response)return 1;
			HideRoulMenu(playerid);
		}
		//Fool
		case 1485:
		{
			if(!response)return SelectTextDraw(playerid,0x82CFFFFF);
			HideFoolMenu(playerid);
		}
		case 1484:
		{
			if(!response)return 1;
			if(strval(inputtext) < 1000 || strval(inputtext) > 500000)
			{
				SendClientMessage(playerid,COLOR_GRAY,"Сумма должна быть от $1000 до $500000");
				return Dialog_Open(playerid,1484,1,"{43CD80}Ставка на игру","\n\n\\c{FFFFFF}Введите сумму ставки для предстоящей игры\n\n\\c{7396FB}Сумма должна быть от $1000 до $500000\n\n","Готово","Отмена");
			}
			if(FoolInfo[GetPVarInt(playerid,"FoolTable")-1][foolTotal] > 0)return SendError(playerid, "Кто-то из игроков уже согласился играть на эту сумму");
			FoolInfo[GetPVarInt(playerid,"FoolTable")-1][foolBet] = strval(inputtext);
			f(string, "Bet: $%d", strval(inputtext));
			TextDrawSetString(FoolMenuTD[GetPVarInt(playerid,"FoolTable")-1][2], string);
		}
		//Billboards
		case 1171:
  		{
	   		if(!response) return true;
		   	SetPVarInt(playerid,"SelectBildID",listitem);
		   	if(strlen(BildInfo[listitem][bOwner]) < 4)
		   	{
		       	new z, query[256];
		       	for(new x; x<MAX_BILLBORDS; x++) if(strfind(PlayerName[playerid],BildInfo[x][bOwner],false) == 0) z++;
		    	BildIntro(playerid, listitem, -30);
		    	format(query, sizeof(query),"{FFFFFF}Вы уверены что хотите арендовать данный рекламный щит на 7 дней?\n{43CD80}Цена: $5000");
		       	ShowPlayerDialogEx(playerid,1172,DIALOG_STYLE_MSGBOX,"{43CD80}Аренда билборда",query,"Да","Нет");
		   	}
		   	else if(GetString(BildInfo[listitem][bOwner], PlayerName[playerid])) ShowPlayerEditMenu(playerid);
  		}
		case 1172:
		{
		    if(!response)
			{
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				SetPlayerInterior(playerid, 1);
				return true;
			}
		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    if(SlotValue[playerid][0] < 5000)
			{
				SendError(playerid,"У вас нет требуемой суммы");
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 1);
				SetPlayerInterior(playerid, 1);
				return true;
			}
		    SlotValue[playerid][0] -= 5000;
			format(BildInfo[p_var][bOwner],MAX_PLAYER_NAME,Name(playerid));
			format(query,sizeof query,"Вы взяли в аренду рекламный билборд #%i за 5000$ на 7 дней",p_var);
			SendClientMessage(playerid,COLOR_LIME,query);
			SendClientMessage(playerid, COLOR_LIME, "Воспользуйтесь меню для установки или изменения параметров Вашей рекламы");
			format(query, sizeof(query), "~r~-5000$~n~~g~+7 days");
			GameTextForPlayer(playerid, query, 1000, 1);
			ShowPlayerEditMenu(playerid);
			format(query,96,"UPDATE `billboards` SET `bDay` = 7, `bOwner` = '%s' WHERE `id` = '%i'",Name(playerid),p_var);
			mysql_function_query(mysql,query,false,"","");
		}
		case 1173:
		{
		    if(!response)
			{
				SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, 2);
				SetPlayerInterior(playerid, 2);
				return true;
			}
		    switch(listitem)
		    {
		        case 0:ShowPlayerDialogEx(playerid,1182,DIALOG_STYLE_INPUT,"{43CD80}Редактирование текста","{ffffff}Настоятельно рекомендуем прочитать {43CD80}помощь по размещению рекламы{ffffff}, которая находится слева от Вас\nВведите текст объявления в поле ниже","Изменить","Назад");
		        case 1:
				{
					new str[128];
				    for(new i, z = sizeof(Colors_LOW); i<z; i++) format(str,sizeof str,"{%s}Цвет фона\n",Colors_LOW[i]), strcat(string, str);
					ShowPlayerDialogEx(playerid,1183,DIALOG_STYLE_LIST,"{43CD80}Цвет фона",string,"Изменить","Назад");
				}
				case 2: ShowPlayerDialogEx(playerid,1184,DIALOG_STYLE_LIST,"{43CD80}Шрифт","Arial\nCalibri\nTahoma\nVerdana","Выбрать","Назад");
				case 3: ShowPlayerDialogEx(playerid,1185,DIALOG_STYLE_INPUT,"{43CD80}Размер текста","{ffffff}Укажите размер текста от 1 до 255 символов","Выбрать","Назад");
				case 4: ShowPlayerDialogEx(playerid,1189,DIALOG_STYLE_LIST,"{43CD80}Выравнивания текста","{ffffff}По левому краю\nПо центру\nПо правому краю","Выбрать","Назад");
				case 5: ShowPlayerDialogEx(playerid,1187,DIALOG_STYLE_MSGBOX,"{43CD80}Расторжение договора","{ffffff}Вы действительно хотите расторгнуть договор с этим билбордом?","Да","Нет");
		    }
		}
		case 1182:
		{
            if(!response) return ShowPlayerEditMenu(playerid);
            new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			for(new i; i<5; i++)
			{
				new pos = strfind(inputtext,"/",false);
				if(pos != -1) strdel(inputtext, pos, pos+1), strins(inputtext, "\n", pos, 2);
			}
			format(BildInfo[p_var][bText],144,inputtext);
			SendClientMessage(playerid,COLOR_LIME,"Текст рекламного билборда успешно изменён");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
			format(query,144+64,"UPDATE `billboards` SET `bText` = '%s' WHERE `id` = %i",inputtext,p_var);
			mysql_function_query(mysql,query,false,"","");
  		}
		case 1183:
		{
  		    if(!response) return ShowPlayerEditMenu(playerid);
  		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			BildInfo[p_var][bBackColor] = listitem;
			SendClientMessage(playerid,COLOR_LIME,"Цвет фона рекламного билборда успешно изменён");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
			format(query,96,"UPDATE `billboards` SET `bBackColor` = %i WHERE `id` = %i",listitem,p_var);
			mysql_function_query(mysql,query,false,"","");
		}
		case 1184:
		{
            if(!response) return ShowPlayerEditMenu(playerid);
            new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
            BildInfo[p_var][bFontFace] = listitem;
            SendClientMessage(playerid,COLOR_LIME,"Шрифт текста рекламного билборда успешно изменён");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
			format(query,96,"UPDATE `billboards` SET `bFontFace` = %i WHERE `id` = %i",listitem,p_var);
			mysql_function_query(mysql,query,false,"","");
		}
		case 1185:
		{
		    if(!response) return ShowPlayerEditMenu(playerid);
			new size = strval(inputtext), query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    if(size < 0 || size > 255)
			{
				SendError(playerid,"Минимальный размер 0, а максимальный 255 символов");
				ShowPlayerDialogEx(playerid,1185,DIALOG_STYLE_INPUT,"{43CD80}Размер текста","{ffffff}Укажите размер текста от 1 до 255 символов","Готово","Назад");
				return 1;
			}
		    BildInfo[p_var][bFontSize] = size;
		    SendClientMessage(playerid,COLOR_LIME,"Размер текста рекламного билборда успешно изменён");
		    ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
		    format(query,96,"UPDATE `billboards` SET `bFontSize` = %i WHERE `id` = %i",size,p_var);
			mysql_function_query(mysql,query,false,"","");
		}
		case 1189:
		{
		    if(!response) return ShowPlayerEditMenu(playerid);
		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    BildInfo[p_var][bAligment] = listitem;
		    SendClientMessage(playerid,COLOR_LIME,"Выравнивание текста рекламного билборда успешно изменено");
		    ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
			format(query,96,"UPDATE `billboards` SET `bAligment` = %i WHERE `id` = %i",listitem,p_var);
			mysql_function_query(mysql,query,false,"","");
		}
		case 1187:
		{
		    if(!response) return ShowPlayerEditMenu(playerid);
		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    BildInfo[p_var][bFontSize] = 0;
		    BildInfo[p_var][bBackColor] = 0;
			BildInfo[p_var][bFontFace] = 0;
			format(BildInfo[p_var][bOwner],1,"-");
		    SendClientMessage(playerid,COLOR_LIME,"Вы расторгли договор с одним из рекламных билбордов");
		    UpdateBuildText(p_var);
            SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
			SetPlayerInterior(playerid, 1);
		    format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",p_var);
			mysql_function_query(mysql,query,false,"","");
		}
		case 721:
        {
            if(!response) return true;
            if(response)
            {
                new query[256], bilbid = GetPVarInt(playerid,"UseBilb");
				format(query, sizeof query,"Рекламный билборд номер %i был очищен. Владелец: %s",bilbid, BildInfo[bilbid][bOwner]);
			    SendClientMessage(playerid,COLOR_SYSTEM,query);
			    BildInfo[bilbid][bFontSize] = 0;
			    BildInfo[bilbid][bBackColor] = 0;
				BildInfo[bilbid][bFontFace] = 0;
			 	format(BildInfo[bilbid][bOwner],1,"-");
			 	format(BildInfo[bilbid][bText],1,"-");
			 	UpdateBuildText(bilbid);
			    format(query, sizeof(query), "[A] Администратор %s очистил рекламный щит под номером %d",Name(playerid),bilbid);
                SendAdminsMessage(COLOR_GRAY,query, 1);
				format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",bilbid);
				return mysql_function_query(mysql,query,false,"","");
        	}
        }
		//Recon
		case 967:
		{
			if(!response) return 1;
			if(SpecAd[playerid] != INVALID_PLAYER_ID) SpecID[SpecAd[playerid]] = 65535;
			SpecAd[playerid] = 65535;
			callcmd::spec(playerid, inputtextsave);
		}
		case 1489:
		{
			if(!response)return 1;
			switch(listitem)
			{
			case 0: PlayAudioStreamForPlayer(playerid, "http://air.radiorecord.ru:8102/deep_320");
			case 1: PlayAudioStreamForPlayer(playerid, "http://air.radiorecord.ru:805/rapclassics_320");
			case 2: PlayAudioStreamForPlayer(playerid, "http://air.radiorecord.ru:805/sd90_320");
			case 3: PlayAudioStreamForPlayer(playerid, "https://icecast-studio21.cdnvideo.ru/S21_2");
			default: return 1;
			}
			SendClientMessage(playerid, 0x66CC00ff, "Онлайн радио включено");
			if(!IsPlayerInAnyVehicle(playerid))ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
			PlayerPlayed[playerid]=true;
			SetPlayerAttachedObject(playerid, 6, 19422, 2, 0.030000, -0.017000, -0.004000, -90.199958, 6.199999, -95.299995, 0.996999, 1.003000, 0.862999);
		}
		case 1486:
		{
			if(!response)return 1;
			switch(listitem)
			{
			case 0:RadarInfo[playerid][rSpeed] = 30;
			case 1:RadarInfo[playerid][rSpeed] = 60;
			case 2:RadarInfo[playerid][rSpeed] = 90;
			case 3:RadarInfo[playerid][rSpeed] = 130;
			}
			SetPVarInt(playerid, "TempRadar", 2);
			new Float:pos[4];
			GetPlayerPos(playerid, pos[0],pos[1],pos[2]);
			GetPlayerFacingAngle(playerid, pos[3]);
			ShiftCords(0, pos[0],pos[1],pos[3], 1.0);
			RadarInfo[playerid][rObject] = CreateDynamicObject(18880, pos[0], pos[1], pos[2]-2.5, 0.0, 0.0, pos[3]);
			RadarInfo[playerid][rArea] = CreateDynamicSphere(pos[0], pos[1], pos[2], 50.0, 0, 0);
			RadarInfo[playerid][rRemove] = CreateDynamicSphere(pos[0], pos[1], pos[2], 2.0, 0, 0);
			SetString(RadarInfo[playerid][rOwner], Name(playerid));
			new date[3],datestr[16];
			gettime(date[0],date[1],date[2]);
			f(datestr, "%02d:%02d:%02d",date[0],date[1],date[2]);
			f(string, "\
			Скоростной радар\n\n\
			{FFFFFF}Установил: {43CD80}%s[%d]\n\
			{FFFFFF}Ограничение: {43CD80}%d км/ч\n\
			{FFFFFF}Время установки: {43CD80}%s\n\n\
			{C9EAFF}~k~~SNEAK_ABOUT~ чтобы убрать радар",Name(playerid),playerid,RadarInfo[playerid][rSpeed],datestr);
			RadarInfo[playerid][rText] = CreateDynamic3DTextLabel(string, 0xD94141FF, pos[0]+1.5, pos[1]+1.0, pos[2]+1.0, 10.0);
			f(string, "%s[%d] установил скоростной радар. Ограничение: %d км/ч",Name(playerid),playerid,RadarInfo[playerid][rSpeed]);
			SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		}
		case 1487:
		{
			if(!response)return callcmd::gps(playerid);
			new Float:distance = 20000.0,id;
			switch(listitem)
			{
			case 0:
				{
					for(new i; i < OWNABLEBIZES; i++)
					{
						if(BizInfo[i][bState] == 7)
						{
							if(GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]) < distance)
							{
								distance = GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]);
								id = i;
							}
						}
						if(i == OWNABLEBIZES-1)EnableGPSForPlayer(playerid, BizInfo[id][bEnter][0],BizInfo[id][bEnter][1],BizInfo[id][bEnter][2]);
					}
				}
			case 1:
				{
					for(new i; i < OWNABLEBIZES; i++)
					{
						if(BizInfo[i][bState] == 2)
						{
							if(GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]) < distance)
							{
								distance = GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]);
								id = i;
							}
						}
						if(i == OWNABLEBIZES-1)EnableGPSForPlayer(playerid, BizInfo[id][bEnter][0],BizInfo[id][bEnter][1],BizInfo[id][bEnter][2]);
					}
				}
			case 2:
				{
					for(new i; i < sizeof(GoFuel); i++)
					{
						if(GetPlayerDistanceFromPoint(playerid, GoFuel[i][gfPos_X],GoFuel[i][gfPos_Y],GoFuel[i][gfPos_Z]) < distance)
						{
							distance = GetPlayerDistanceFromPoint(playerid, GoFuel[i][gfPos_X],GoFuel[i][gfPos_Y],GoFuel[i][gfPos_Z]);
							id = i;
						}
						if(i == sizeof(GoFuel)-1)EnableGPSForPlayer(playerid, GoFuel[id][gfPos_X],GoFuel[id][gfPos_Y],GoFuel[id][gfPos_Z]);
					}
				}
			case 3:
				{
					for(new i; i < OWNABLEBIZES; i++)
					{
						if(BizInfo[i][bState] == 9)
						{
							if(GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]) < distance)
							{
								distance = GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]);
								id = i;
							}
						}
						if(i == OWNABLEBIZES-1)EnableGPSForPlayer(playerid, BizInfo[id][bEnter][0],BizInfo[id][bEnter][1],BizInfo[id][bEnter][2]);
					}
				}
			case 4:
				{
					for(new i; i < OWNABLEBIZES; i++)
					{
						if(BizInfo[i][bState] == 3)
						{
							if(GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]) < distance)
							{
								distance = GetPlayerDistanceFromPoint(playerid, BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]);
								id = i;
							}
						}
						if(i == OWNABLEBIZES-1)EnableGPSForPlayer(playerid, BizInfo[id][bEnter][0],BizInfo[id][bEnter][1],BizInfo[id][bEnter][2]);
					}
				}
			case 5:
				{
					for(new i = 1; i <= Allpod; i++)
					{
						if(GetPlayerDistanceFromPoint(playerid, PodeezdInfo[i][podPic][0],PodeezdInfo[i][podPic][1],PodeezdInfo[i][podPic][2]) < distance)
						{
							distance = GetPlayerDistanceFromPoint(playerid, PodeezdInfo[i][podPic][0],PodeezdInfo[i][podPic][1],PodeezdInfo[i][podPic][2]);
							id = i;
						}
						if(i == Allpod)EnableGPSForPlayer(playerid, PodeezdInfo[id][podPic][0],PodeezdInfo[id][podPic][1],PodeezdInfo[id][podPic][2]);
					}
				}
			case 6:
				{
					for(new i; i < MAX_PARKING; i++)
					{
						if(GetPlayerDistanceFromPoint(playerid, ParkInfo[i][parkPos][0],ParkInfo[i][parkPos][1],ParkInfo[i][parkPos][2]) < distance)
						{
							distance = GetPlayerDistanceFromPoint(playerid, ParkInfo[i][parkPos][0],ParkInfo[i][parkPos][1],ParkInfo[i][parkPos][2]);
							id = i;
						}
						if(i == MAX_PARKING-1)EnableGPSForPlayer(playerid, ParkInfo[id][parkPos][0],ParkInfo[id][parkPos][1],ParkInfo[id][parkPos][2]);
					}
				}
			case 7:
				{
					for(new i = ArendCar[0]; i <= ArendCar[ARENDCARS-1]; i++)
					{
						new Float:pos[3];
						GetVehiclePos(i, pos[0], pos[1], pos[2]);
						if(GetPlayerDistanceFromPoint(playerid, pos[0], pos[1], pos[2]) < distance)
						{
							distance = GetPlayerDistanceFromPoint(playerid, pos[0], pos[1], pos[2]);
							id = i;
						}
						if(i == ArendCar[ARENDCARS-1]){
							GetVehiclePos(id, pos[0], pos[1], pos[2]);
							EnableGPSForPlayer(playerid, pos[0], pos[1], pos[2]);
						}
					}
				}
			}
		}
		case 1488:
		{
			if(response)
			{
				new time,reason[50],mess[128];
				sscanf(inputtext, "ds", time,reason);
				format(mess, sizeof(mess), "%d %d %s",SpecAd[playerid], time,reason);
				callcmd::mute(playerid, mess);
			}
		} 
		case 962:
		{
			if(response)
			{
				new mess[50];
				format(mess,sizeof mess,"%d %s",SpecAd[playerid], inputtextsave);
				callcmd::kick(playerid, mess);
			}
		}
		case 1337:
		{
			if(response)
			{
				new mess[50];
				format(mess,sizeof mess,"%d %s",SpecAd[playerid], inputtextsave);
				callcmd::warn(playerid, mess);
			}
		}
		case 964:
		{
			if(response)
			{
				new time,reason[50],mess[128];
				sscanf(inputtextsave, "ds",time,reason);
				format(mess, sizeof(mess), "%d %d %s",SpecAd[playerid],time,reason);
				callcmd::ban(playerid, mess);
			}
		}
		case 965:
		{
			if(response)
			{
				new time,reason[50],mess[128];
				sscanf(inputtextsave, "ds",SpecAd[playerid],time,reason);
				format(mess,sizeof mess,"%d %d %s",SpecAd[playerid],time,reason);
				callcmd::jail(playerid, mess);
			}
		} 	
		case 966:
		{
			if(response)
			{
				new mess[50];
				format(mess,sizeof mess,"%d %s",SpecAd[playerid], inputtextsave);
				callcmd::iban(playerid, mess);
			}
		}
		//Family
		case 492:
		{
	        if(response)
			{
				if(GetMoney(playerid) < 1000000)return ShowPlayerDialogEx(playerid,492,1,"{43CD80}Создание семей","{ffffff}Вы собираетесь создать семью\nНалог: {7396FB}1.000.000$\n{FFFFFF}\nНапишите название вашей будущей семьи","Создать","Отмена");
				if(strlen(inputtext) < 4 || strlen(inputtext) > 40)return ShowPlayerDialogEx(playerid,492,1,"{43CD80}Создание семей","{ffffff}Вы собираетесь создать семью\nНалог: {7396FB}1.000.000$\n{FFFFFF}\nНапишите название вашей будущей семьи\n\n{D94141}Слишком короткое/длинное название","Создать","Отмена");
				new query[156];
				mysql_format(mysql, query, sizeof(query), "SELECT * FROM `family` WHERE `FamilyName` = '%s'", inputtext);
				mysql_pquery(mysql, query, "MysqlCheckFamily", "ds", playerid, inputtext);
			}
		}
		case 491:
		{
	        if(response)
			{
			    switch(listitem)
				{
					case 0:
					{
						if(GetString(FamilyInfo[playerid][famZam],PlayerName[playerid]) || GetString(FamilyInfo[playerid][famLider],PlayerName[playerid]))
						{
							ShowPlayerDialogEx(playerid,493,2,"{43CD80}Цвет семьи","{af9a5b}Пример\n\
							 {b1b7f1}Пример\n\
							 {5ba8a4}Пример\n\
							 {b9378f}Пример\n\
							 {1028f4}Пример\n\
							 {5054ec}Пример\n\
							 {01ff23}Пример\n\
							 {f29527}Пример\n\
							 {6c4559}Пример\n\
							 {f2dafe}Пример\n\
							 {7eadff}Пример\n\
							 {c95eec}Пример\n\
							 {852048}Пример\n\
							 {76b3f2}Пример\n\
							 {dcb72b}Пример\n\
							 {31d166}Пример\n\
							 {3969cd}Пример\n\
							 {c9e8f2}Пример","Выбор","Отмена");
						}
						else SendError(playerid,"Эта функция недоступна");
					}
					case 1:
					{
						if(GetString(FamilyInfo[playerid][famZam],PlayerName[playerid]) || GetString(FamilyInfo[playerid][famLider],PlayerName[playerid]))
							ShowPlayerDialogEx(playerid,494,1,"{43CD80}Название семьи","{ffffff}На складе должно быть 200.000$, чтобы можно было изменить название{FFFFFF}\n\nВведите новое название семьи","Далее","Отмена");
						else SendError(playerid,"Эта функция недоступна");
					}
					case 2:callcmd::fammute(playerid);
					case 3:callcmd::unfammute(playerid);
					case 4:callcmd::faminvite(playerid);
					case 5:callcmd::unfaminvite(playerid);
					case 6:ShowPlayerDialogEx(playerid,505,0,"{43CD80}Расформировать семью","{FFFFFF}Вы собираетесь уйти из семьи\nСемья будет расформирована\n\n{7396FB}Вы уверены, что хотите это сделать?","Да","Нет");
					case 7:
					{
                    	if(GetString(FamilyInfo[playerid][famLider],PlayerName[playerid]))
						{
							if(!GetString(FamilyInfo[playerid][famZam], "-1"))return SendError(playerid,"Сначала нужно снять старого заместителя");
      						ShowPlayerDialogEx(playerid,506,1,"{43CD80}Новый заместитель","{FFFFFF}Введите ID нового заместителя","Назначить","Отмена");
						}
						else SendError(playerid,"Эта функция недоступна");
					}
					case 8:
					{
                    	if(GetString(FamilyInfo[playerid][famLider],PlayerName[playerid]))
						{
						    if(GetString(FamilyInfo[playerid][famZam], "-1"))return SendError(playerid,"Сначала нужно назначить заместителя");
						    format(string,sizeof(string),"{FFFFFF}Вы уверены, что хотите снять %s с поста заместителя?",FamilyInfo[playerid][famZam]);
						    ShowPlayerDialogEx(playerid,507,0,"{43CD80}Снять заместителя",string,"Да","Отмена");
						}
						else SendError(playerid,"Эта функция недоступна");
					}
					case 9:callcmd::famonline(playerid);
				}
			}
		}
		case 507:
		{
		    if(response)
			{
			    format(string,sizeof(string),"{%s}[%s] %s[%d] снял заместителя %s",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,FamilyInfo[playerid][famZam]);
    			SendFama(playerid,-1,string);
    			foreach(Player, i)
    			{
					if(PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
					{
						SetString(FamilyInfo[i][famZam],"-1");
  					}
				}
			    new query[80];
				format(query, sizeof(query), "UPDATE `family` SET `FamilyZam` = '-1' WHERE `ID` = '%d'",PlayerInfo[playerid][FamilyID]);
				mysql_pquery(mysql, query);
			}
            else callcmd::family(playerid);
		}
		case 506:
		{
		    if(response)
			{
			    new id = strval(inputtext);
			    if(!IsPlayerLogged[id])return SendError(playerid, "Игрок не авторизован");
				if(PlayerInfo[playerid][FamilyID] != PlayerInfo[id][FamilyID])return SendError(playerid,"Игрок не состоит в вашей семье");
				foreach(Player, i)
    			{
					if(PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
					{
						SetString(FamilyInfo[i][famZam],PlayerName[id]);
  					}
				}
				format(string,sizeof(string),"{%s}[%s] %s[%d] назначил новым заместителем %s[%d]",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,PlayerName[id],id);
    			SendFama(playerid,-1,string);
    			new query[90];
				format(query, sizeof(query), "UPDATE `family` SET `FamilyZam` = '%s' WHERE `ID` = '%d'",FamilyInfo[playerid][famZam],PlayerInfo[playerid][FamilyID]);
				mysql_pquery(mysql, query);
			}
            else callcmd::family(playerid);
		}
		case 505:
		{
		    if(response)
			{
				if(GetString(FamilyInfo[playerid][famLider],PlayerName[playerid]))
				{
				    format(string,sizeof(string),"{%s}[%s] %s[%d] покинул семью и семья расформирована",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid);
    				SendFama(playerid,-1,string);
    				new query[128];
					format(query, sizeof(query), "DELETE FROM `family` WHERE `ID` = '%d'",PlayerInfo[playerid][FamilyID]);
					mysql_pquery(mysql, query);
    				foreach(Player, i)
				    {
						if(PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
						{
					    	PlayerInfo[i][FamilyID] = -1;
						    SetString(FamilyInfo[i][famName],"0");
							SetString(FamilyInfo[i][famLider],"-1");
							FamilyInfo[i][famZam] = -1;
							FamilyInfo[i][famColor] = 0;
							FamilyValue[i][0] = 0;
							FamilyInfo[i][famSkladZam] = -1;
							FamilyInfo[i][famStatusSklad] = 0;
							FamilyValue[i][1] = 0;
							FamilyValue[i][2] = 0;
							FamilyValue[i][3] = 0;
							FamilyValue[i][4] = 0;
							FamilyValue[i][5] = 0;
							for(new x = 6; x < 25; x++)FamilyValue[playerid][x] = 0;
							FamilyInfo[i][famSpawn][0] = 0;
							FamilyInfo[i][famSpawn][1] = 0;
							FamilyInfo[i][famSpawn][2] = 0;
							FamilyInfo[i][famSpawn][3] = 0;
							FamilyInfo[i][famVirtalWorld] = 0;
							FamilyInfo[i][famInterior] = 0;
							FamilyInfo[i][famAmount] = 1;
							FamilyInfo[i][famHouse] = 0;
			    			return false;
						}
					}
				}
   				foreach(Player, i)
				{
					if(PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
					{
						FamilyInfo[i][famAmount] --;
					}
				}
				new query[128];
				format(query, sizeof(query), "UPDATE `family` SET `Amount` = '%d' WHERE `ID` = '%d'",FamilyInfo[playerid][famAmount],PlayerInfo[playerid][FamilyID]);
				mysql_pquery(mysql, query);
			    format(string,sizeof(string),"{%s}[%s] %s[%d] покинул семью по собственному желанию",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid);
    			SendFama(playerid,-1,string);
			    PlayerInfo[playerid][FamilyID] = -1;
			    SetString(FamilyInfo[playerid][famName],"0");
				SetString(FamilyInfo[playerid][famLider],"-1");
				FamilyInfo[playerid][famZam] = -1;
				FamilyInfo[playerid][famColor] = 0;
				FamilyValue[playerid][0] = 0;
				FamilyInfo[playerid][famSkladZam] = -1;
				FamilyInfo[playerid][famStatusSklad] = 0;
				FamilyValue[playerid][1] = 0;
				FamilyValue[playerid][2] = 0;
				FamilyValue[playerid][3] = 0;
				FamilyValue[playerid][4] = 0;
				FamilyValue[playerid][5] = 0;
				for(new x = 6; x < 25; x++)FamilyValue[playerid][x] = 0;
				FamilyInfo[playerid][famSpawn][0] = 0;
				FamilyInfo[playerid][famSpawn][1] = 0;
				FamilyInfo[playerid][famSpawn][2] = 0;
				FamilyInfo[playerid][famSpawn][3] = 0;
				FamilyInfo[playerid][famVirtalWorld] = 0;
				FamilyInfo[playerid][famInterior] = 0;
				FamilyInfo[playerid][famAmount] = 1;
				FamilyInfo[playerid][famHouse] = 0;
				SaveAccount(playerid);
			}
            else callcmd::family(playerid);
		}
		case 499:
		{
	        if(response)
			{
			    new id, prichina[68];
				sscanf(inputtext,"p<,>ds[68]",id,prichina);
				if(id == playerid)return false;
				if(strlen(inputtext) < 3 || strlen(inputtext) > 68)return ShowPlayerDialogEx(playerid,499,1,"{43CD80}Изгнание из семьи","{FFFFFF}Введите ID игрока и через запятую причину\nНапример: 0,По С/Ж\n\n{D94141}Укажите нормальную причину","Изгнать","Отмена");
				if(PlayerInfo[playerid][FamilyID] != PlayerInfo[id][FamilyID])return SendError(playerid,"Игрок не состоит в вашей семье");
				if(GetString(FamilyInfo[id][famLider],PlayerName[id]))return false;
				if(!GetString(FamilyInfo[id][famLider],PlayerName[id]))
				{
					if(GetString(FamilyInfo[playerid][famZam],PlayerName[playerid]))
					{
						return false;
					}
				}
				format(string,sizeof(string),"{%s}[%s] %s[%d] выгнал из семьи %s[%d]. Причина: %s",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,PlayerName[id],id,prichina);
    			SendFama(playerid,-1,string);
				PlayerInfo[id][FamilyID] = -1;
			    SetString(FamilyInfo[id][famName],"0");
				SetString(FamilyInfo[id][famLider],"-1");
				FamilyInfo[id][famZam] = -1;
				FamilyInfo[id][famColor] = 0;
				FamilyValue[id][0] = 0;
				FamilyInfo[id][famSkladZam] = -1;
				FamilyInfo[id][famStatusSklad] = 0;
				FamilyValue[id][1] = 0;
				FamilyValue[id][2] = 0;
				FamilyValue[id][3] = 0;
				FamilyValue[id][4] = 0;
				FamilyValue[id][5] = 0;
				for(new x = 6; x < 25; x++)FamilyValue[playerid][x] = 0;
				FamilyInfo[id][famSpawn][0] = 0;
				FamilyInfo[id][famSpawn][1] = 0;
				FamilyInfo[id][famSpawn][2] = 0;
				FamilyInfo[id][famSpawn][3] = 0;
				FamilyInfo[id][famVirtalWorld] = 0;
				FamilyInfo[id][famInterior] = 0;
				FamilyInfo[id][famAmount] = 1;
				FamilyInfo[id][famHouse] = 0;
				foreach(Player, i)
				{
					if(PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
					{
						FamilyInfo[i][famAmount] --;
					}
				}
				new query[128];
				format(query, sizeof(query), "UPDATE `family` SET `Amount` = '%d' WHERE `ID` = '%d'",FamilyInfo[playerid][famAmount],PlayerInfo[playerid][FamilyID]);
				mysql_pquery(mysql, query);
			}
            else callcmd::family(playerid);
		}
		case 497:
		{
	        if(response)
			{
			    new id = strval(inputtext);
			    if(!ProxDetectorS(10.0, playerid, id, 1)) return ShowPlayerDialogEx(playerid,497,1,"{43CD80}Приглашение в семью","{FFFFFF}Введите ID игрока\n\n{D94141}Вы далеко от игрока","Пригласить","Отмена");
			    if(PlayerInfo[id][FamilyID]!=-1)return SendError(playerid,"Игрок состоит в другой семье");
			    SetPVarInt(id,"IDInvite",playerid);
			    format(string,sizeof(string),"{FFFFFF}%s приглашает вас в семью",PlayerName[playerid]);
			    ShowPlayerDialogEx(id,498,0,"{43CD80}Приглашение в семью",string,"Принять","Отказаться");
			}
            else callcmd::family(playerid);
		}
		case 498:
		{
            if(response)
			{
			    if(!ProxDetectorS(10.0, playerid, GetPVarInt(playerid,"IDInvite"), 1)) return SendError(playerid,"Игрок далеко от вас");
			    PlayerInfo[playerid][FamilyID] = PlayerInfo[GetPVarInt(playerid,"IDInvite")][FamilyID];
			    format(string,sizeof(string),"{%s}[Семья] %s[%d] пригласил %s[%d] в семью",GetFamColor(playerid),PlayerName[GetPVarInt(playerid,"IDInvite")],GetPVarInt(playerid,"IDInvite"),PlayerName[playerid],playerid);
    			SendFama(playerid,-1,string);
			    SetPVarInt(playerid,"IDInvite",0);
				foreach(Player, i)
				{
					if(PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
					{
						FamilyInfo[i][famAmount] ++;
					}
				}
    			new query[128];
				format(query, sizeof(query), "UPDATE `family` SET `Amount` = '%d' WHERE `ID` = '%d'",FamilyInfo[playerid][famAmount],PlayerInfo[playerid][FamilyID]);
				mysql_pquery(mysql, query);
			    mysql_format(mysql, query, sizeof(query), "SELECT * FROM `family` WHERE `ID` = '%d'", PlayerInfo[playerid][FamilyID]);
				mysql_pquery(mysql, query, "MysqlLoadFamily", "d", playerid);
			}
			else
			{
			    format(string,sizeof(string),"%s[%d] отказался стать членом вашей семьи",PlayerName[playerid],playerid);
			    SendClientMessage(GetPVarInt(playerid,"IDInvite"),0x1BF3EEFF,string);
			    SetPVarInt(playerid,"IDInvite",0);
			}
		}
		case 496:
		{
	        if(response)
			{
			    new id = strval(inputtext);
			    if(!IsPlayerLogged[id])return SendError(playerid, "Игрок не авторизован");
				PlayerInfo[id][FamilyMute] = 0;
				format(string,sizeof(string),"{%s}[%s] %s[%d] снял мут с %s[%d]",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,PlayerName[id],id);
    			SendFama(playerid,-1,string);
			}
            else callcmd::family(playerid);
		}
		case 495:
		{
	        if(response)
			{
			    new id, prichina[68], time;
				sscanf(inputtext,"p<,>dds[68]",id,time,prichina);
				if(PlayerInfo[id][FamilyMute] > 0)return SendError(playerid,"У данного игрока уже есть мут");
				if(PlayerInfo[playerid][FamilyID] != PlayerInfo[id][FamilyID])return SendError(playerid,"Игрок не состоит в вашей семье");
				if(time < 10 || time > 60)return SendError(playerid,"От 10 до 60 минут");
				if(playerid == id)return ShowPlayerDialogEx(playerid,495,1,"{43CD80}Выдача мута","{FFFFFF}Введите ID игрока,время и причину через запятую.\nНапример: 0,30,Неадекват","Выдать","Отмена");
			    if(!IsPlayerLogged[id])return SendError(playerid, "Игрок не авторизован");
				if(strlen(inputtext) < 3 || strlen(inputtext) > 68)return ShowPlayerDialogEx(playerid,495,1,"{43CD80}Выдача мута","{FFFFFF}Введите ID игрока,время и причину через запятую.\nНапример: 0,30,Неадекват\n\n{D94141}Укажите нормальную причину","Выдать","Отмена");
                PlayerInfo[id][FamilyMute] = time*60;
                format(string,sizeof(string),"{%s}[%s] %s[%d] выдал мут %s[%d] на %d мин.Причина: %s",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,PlayerName[id],id,time,prichina);
    			SendFama(playerid,-1,string);
			}
            else callcmd::family(playerid);
		}
		case 494:
		{
	        if(response)
			{
				if(FamilyValue[playerid][0]<200000)return SendError(playerid,"На складе недостаточно денег");
				if(strlen(inputtext) < 4 || strlen(inputtext) > 40)return ShowPlayerDialogEx(playerid,494,1,"{43CD80}Название семьи","{ffffff}На складе должно быть 200.000$, чтобы можно было изменить название{FFFFFF}\n\nВведите новое название семьи","Далее","Отмена");
				new query[156];
				mysql_format(mysql, query, sizeof(query), "SELECT * FROM `family` WHERE `FamilyName` = '%s'", inputtext);
				mysql_pquery(mysql, query, "MysqlCheckFamily3", "ds", playerid, inputtext);
			}
            else callcmd::family(playerid);
		}
		case 493:
		{
	        if(response)
			{
			    switch(listitem)
				{
				    case 0..18:
				    {
				        foreach(Player, i)
					    {
							if(PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
							{
								FamilyInfo[i][famColor] = listitem;
							}
						}
						new query[60];
						format(query, sizeof(query), "UPDATE `family` SET `Color` = '%d' WHERE `ID` = '%d'",FamilyInfo[playerid][famColor],PlayerInfo[playerid][FamilyID]);
						mysql_pquery(mysql, query);
						format(string,sizeof(string),"{%s}[%s] %s[%d] изменил цвет семьи",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid);
                        SendFama(playerid,-1,string);
						foreach(Player, i)
						{
							if(PlayerInfo[i][FamilyID] != -1 && PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
							{
								if(FPlayerText[i] == true)
								{
									new str11[128],fammmm[16];
									switch(FamilyInfo[i][famAmount])
									{
									case 1..4:fammmm = "Family";
									case 5..10:fammmm = "Group";
									case 11..15:fammmm = "Community";
									case 16..25:fammmm = "Gang";
									case 26..30:fammmm = "Corporation";
									case 31..3500:fammmm = "Industries";
									}
									format(str11,sizeof(str11),"{%s}%s {ffffff}%s",GetFamColor(i),FamilyInfo[i][famName],fammmm);
									Update3DTextLabelText(PlayerFamily[i], -1, str11);
								}
							}
						}
					}
				}
			}
            else callcmd::family(playerid);
		}
		//
	    case 1:
	    {
			if(response)
			{
				new __tmpl = strlen(inputtext);
			    PlayerPlaySound(playerid, 1136, 0.0, 0.0, 0.0);
			    switch(RegisterState[playerid])
			    {
				    case 1:
				    {
						if(__tmpl < 6 || __tmpl > 24)
						{
							return ShowRegisterDialog(playerid,RegisterState[playerid]);
						}
						else if(!CheckPassword(inputtextsave))
						{
						    return ShowRegisterDialog(playerid,RegisterState[playerid]);
						}
						RegisterState[playerid] = 2;
						new MyHash[65];
						SHA256_PassHash(inputtext, SALT, MyHash, sizeof MyHash);
						format(RegPass[playerid],65,"%s",MyHash);
						ShowRegisterDialog(playerid,RegisterState[playerid]);
					}
				    case 4:
				    {
				        new query[256];
				        mysql_format(mysql, query, sizeof(query), "SELECT `ID` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1", inputtextsave);
				        mysql_pquery(mysql, query, "MysqlCheckNickReferal", "ds", playerid, inputtextsave);
				    }
				    default: return false;
				}
			}
			else
			{
		        if(RegisterState[playerid] > 1)
		        {
		       	 	RegisterState[playerid] --;
					ShowRegisterDialog(playerid,RegisterState[playerid]);
				}
				else ShowPlayerDialogEx(playerid,3,0,"{43CD80}Информация","{FFFFFF}Вы собрались покинуть сервер\nЕсли хотите сделать это, нажмите 'Принять'\nВ ином случае нажмите 'Отмена'","Принять","Отмена");
			}
			return true;
		}
		case 3411:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
					{
						f(string,"\n\n\\c{ffffff}Стоимость: {7396FB}$%d\n\
						\n\\c{C9EAFF}Покупая это казино, вы становитесь его владельцем и человеком, который отвечает за все махинации в нем\
						\n\\cВсю информацию об управлении казино вы можете прочитать (( /help ))\n\n",CasinoInfo[0][casCost]);
						Dialog_Open(playerid,3413,0,"{43CD80}Информация",string,"Скрыть", "");
					}
					case 1:
					{
					    for(new i;i<MAX_OWNABLECASINO;i++)
						{
							if(GetString(CasinoInfo[i][casOwner],PlayerName[playerid])) return SendError(playerid,"Вы уже владеете казино");
						}
					    if(SlotValue[playerid][0]< CasinoInfo[0][casCost])return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
					    ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{8BB527}Поздравляем!\n\n{FFFFFF}Вы приобрели своё предприятие.\nДля того чтобы понять его суть работы и разобратся в управлении, ищите\nпомощь с помощью (( /help ))","Скрыть", "");
					    SetString(CasinoInfo[0][casOwner],PlayerName[playerid]);
					    GiveMoney(playerid,-CasinoInfo[0][casCost]);
					    CasinoInfo[0][casEnter]=0;
                        CasinoInfo[0][casVisit]=0;
                        CasinoInfo[0][casNum]=0;
					    SaveCasino(0);
						new logtime[3],logdate[3],logtimestring[16];
						getdate(logdate[2],logdate[1],logdate[0]);
						gettime(logtime[0],logtime[1],logtime[2]);
						f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
						WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Покупка казино",-CasinoInfo[0][casCost],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
					}
		        }
		    }
		}
		case 3861:
		{
		    if(response)
		    {
		        new hotworld = listitem + 11;
				SetPlayerVirtualWorld(playerid,hotworld);
				SetPlayerInterior(playerid,1);
				J_SetPlayerPos(playerid,1121.4690,-2590.3865,1221.5060);
				J_SetPlayerFacingAngle(playerid,91.1574);
			}
		}
		case 3412:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(GLS[30]==1)return SendError(playerid,"Казино закрыто");
		                if(CasinoInfo[0][casEnter]!=228) if(SlotValue[playerid][0]< CasinoInfo[0][casEnter])return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		                if(CasinoInfo[0][casEnter]==228 && PlayerInfo[playerid][pVIP]<1)return SendError(playerid,"Вход доступен только VIP игрокам");
		                if(CasinoInfo[0][casLock]!=0) return SendError(playerid,"Вы не можете войти в казино, так как оно закрыто");
		                SetPlayerVirtualWorld(playerid,CasinoInfo[0][casWorld]);
		                J_SetPlayerPos(playerid,CasinoInfo[0][casExit][0], CasinoInfo[0][casExit][1], CasinoInfo[0][casExit][2]);
		                J_SetPlayerFacingAngle(playerid,90.0);
						if(CasinoInfo[0][casEnter]!=228)
						{
							GiveMoney(playerid,-CasinoInfo[0][casEnter]);
	                        CasinoInfo[0][casBalance]+=CasinoInfo[0][casEnter];
	                        CasinoInfo[0][casWin]+=CasinoInfo[0][casEnter];
						}
                        CasinoInfo[0][casVisit]++;
		            }
		            case 1:
		            {
					 	new lock[45];
						switch(CasinoInfo[0][casLock])
						{
						    case 0: format(lock,sizeof(lock),"{1A9C38}Открыто{FFFFFF}");
						    case 1: format(lock,sizeof(lock),"{9C381A}Закрыто{FFFFFF}");
						}
               			f(string,"\n\n{FFFFFF}____________________________\n\n\\cВладелец: %s\n\\cБаланс: $%d\n\\cСтатус: %s\n\\cСтоимость входа: {1A9C38}$%d{FFFFFF}\n\n",CasinoInfo[0][casOwner],CasinoInfo[0][casBalance],lock,CasinoInfo[0][casEnter]);
      					Dialog_Open(playerid,3413,0,"{43CD80}Информация",string,"Скрыть", "");
		            }
		        }
			}
		}
		case 3413:
		{
		    if(response)
			{
			    if(mycasino[playerid]==-1) return false;
			    new ttop =mycasino[playerid];
			    if(!IsPlayerInRangeOfPoint(playerid,20.0,CasinoInfo[ttop][casPos][0],CasinoInfo[ttop][casPos][1],CasinoInfo[ttop][casPos][2]) && !IsPlayerInRangeOfPoint(playerid,20.0,CasinoInfo[ttop][casExit][0],CasinoInfo[ttop][casExit][1],CasinoInfo[ttop][casExit][2]))return false;
			    if(!GetString(CasinoInfo[ttop][casOwner],PlayerName[playerid])) return false;
			    switch(listitem)
			    {
			        case 0:
					{
					    if(CasinoInfo[ttop][casLock]==0)
					    {
					        CasinoInfo[ttop][casLock]=1;
                            callcmd::casinoinfo(playerid);
					    }
					    else
					    {
					        CasinoInfo[ttop][casLock]=0;
                            callcmd::casinoinfo(playerid);
						}
					}
					case 1: ShowPlayerDialogEx(playerid,3414,1,"{43CD80}Информация","{7396FB}Введите сумму на которую хотите пополнить баланс своего казино","Принять","Отмена");
					case 2:
					{
					    if(CasinoInfo[ttop][casBalance]<1)return ShowPlayerDialogEx(playerid,0,0,"Информация","{7396FB}В казино недостаточно денег","Принять","");
					    format(string,sizeof(string),"{FFFFFF}Введите сумму которую хотите снять с баланса вашего казино.\n{7396FB}Обратите внимание! Если в вашем казино не будет денег игроки не смогут получить свой выигрыш!\n\n\n{FFFFFF}Введите сумму от 1$ до $%d{FFFFFF}",CasinoInfo[ttop][casBalance]);
					    ShowPlayerDialogEx(playerid,3415,1,"{43CD80}Информация",string,"Принять","Отмена");
					}
					case 3:
					{
					    format(string,sizeof(string),"{588B2E}Статистика казино за 24 часа\n\nДенег заработано: {588B2E}$%d{FFFFFF}\nДенег выплачено {8B392E}$%d{FFFFFF}\n\nПосещений: {588B2E}%d{FFFFFF} раз/a",CasinoInfo[ttop][casWin],CasinoInfo[ttop][casLose],CasinoInfo[ttop][casVisit]);
					    ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
						return true;
					}
					case 4:
					{
						if(response)
						{
						 	new lock[45];

							switch(CasinoInfo[ttop][casLock])
							{
							    case 0: format(lock,sizeof(lock),"{1A9C38}открыто{FFFFFF}");
							    case 1: format(lock,sizeof(lock),"{9C381A}закрыто{FFFFFF}");
							}

							f(string,"\n\n{ffffff}____________________________\n\n\\cВладелец: %s\n\\cБаланс: $%d\n\\cСтатус: %s\n\\cСтоимость входа: {1A9C38}$%d{FFFFFF}\n\n",CasinoInfo[0][casOwner],CasinoInfo[0][casBalance],lock,CasinoInfo[0][casEnter]);
							Dialog_Open(playerid,3413,0,"{43CD80}Информация",string,"Скрыть", "");
			            }
					}
					case 5: ShowPlayerDialogEx(playerid,3417,2,"{43CD80}Изменить стоимость входа","Установить {588B2E}0${FFFFFF}\nУстановить {588B2E}50${FFFFFF}\nУстановить {588B2E}100${FFFFFF}\nУстановить {588B2E}500${FFFFFF}\nУстановить {588B2E}1000${FFFFFF}\nДать возможность входить только {588B2E}VIP{FFFFFF} игрокам","Принять","Отмена");
					case 6: ShowPlayerDialogEx(playerid,3418,2,"{43CD80}Изменить зарплату крупье","Установить {588B2E}25${FFFFFF}\nУстановить {588B2E}30${FFFFFF}\nУстановить {588B2E}40${FFFFFF}\nУстановить {588B2E}50${FFFFFF}\nУстановить {588B2E}100${FFFFFF}\n\nУстановить {588B2E}120${FFFFFF}\n{7396FB}Читать информацию","Принять","Отмена");
					case 7:
					{
					    if(CasinoInfo[ttop][casNalog]==0)return SendError(playerid,"Вы не можете оплатить налоги на казино, так как их сумма ровна 0");
						if(CasinoInfo[ttop][casBalance]<CasinoInfo[ttop][casNalog])return SendError(playerid,"На балансе казино недостаточно средств");
						CasinoInfo[ttop][casBalance]-=CasinoInfo[ttop][casNalog];
						CasinoInfo[ttop][casNalog]=0;
						format(string,sizeof(string),"{59903C}Вы оплатили $%d налогов за своё казино.\nТеперь баланс вашего казино составляет $%d",CasinoInfo[ttop][casNalog],CasinoInfo[ttop][casBalance]);
						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
					}
			    }
			}
		}
		case 3418:
		{
		    if(response)
		    {
		        new ttop =mycasino[playerid];
		        switch(listitem)
		        {
		            case 0:
		            {
		                CasinoInfo[ttop][casDeal]=25;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Теперь крупье работающие в вашем казино будут зарабатывать по {FFFFFF}25$");
		            }
		            case 1:
		            {
		                CasinoInfo[ttop][casDeal]=30;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Теперь крупье работающие в вашем казино будут зарабатывать по {FFFFFF}30$");
		            }
		            case 2:
		            {
		                CasinoInfo[ttop][casDeal]=40;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Теперь крупье работающие в вашем казино будут зарабатывать по {FFFFFF}40$");
		            }
		            case 3:
		            {
		                CasinoInfo[ttop][casDeal]=50;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Теперь крупье работающие в вашем казино будут зарабатывать по {FFFFFF}50$");
		            }
		            case 4:
		            {
		                CasinoInfo[ttop][casDeal]=100;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Теперь крупье работающие в вашем казино будут зарабатывать по {FFFFFF}100");
		            }
		            case 5:
		            {
		                CasinoInfo[ttop][casDeal]=120;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Теперь крупье работающие в вашем казино будут зарабатывать по {FFFFFF}120$");
		            }
		            case 6:
		            {
		                format(string,sizeof(string),"{59903C}Информация:{FFFFFF}\n\nУважаемый владелец казино, обратите внимание что если вы установите\nзарплату крупье, которые будут у вас работать, вам придётся выплачивать им зарплату с\nбюджета вашего казино, в случае нехватки денег, вы не сможете ее выплатить и от вас уйдут работники!\n\nСледите за бюджетом");
						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
		            }
				}
			}
		}
		case 3417:
		{
		    if(response)
		    {
		        new ttop =mycasino[playerid];
		        switch(listitem)
		        {
		            case 0:
		            {
		                CasinoInfo[ttop][casEnter]=0;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы установили стоимость входа на: {FFFFFF}0$");
		            }
		            case 1:
		            {
		                CasinoInfo[ttop][casEnter]=50;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы установили стоимость входа на: {FFFFFF}50$");
		            }
		            case 2:
		            {
		                CasinoInfo[ttop][casEnter]=100;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы установили стоимость входа на: {FFFFFF}100$");
		            }
		            case 3:
		            {
		                CasinoInfo[ttop][casEnter]=500;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы установили стоимость входа на:{FFFFFF} 500$");
		            }
		            case 4:
		            {
		                CasinoInfo[ttop][casEnter]=1000;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы установили стоимость входа на:{FFFFFF} 1000$");
		            }
		            case 5:
		            {
		                CasinoInfo[ttop][casEnter]=228;
		                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Теперь в ваше казино могут входить только:{FFFFFF} VIP игроки");
		            }
		        }
		    }
		}
		case 3414:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
		        if(SlotValue[playerid][0]<money)return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        if(money < 1) return ShowPlayerDialogEx(playerid,3414,1,"{43CD80}Информация","{7396FB}Введите сумму на которую хотите пополнить баланс своего казино","Принять","Отмена");
		        GiveMoney(playerid,-money);
		        CasinoInfo[mycasino[playerid]][casBalance] +=money;
		        format(string,sizeof(string),"{FFFFFF}Вы пополнили баланс казино\n{7396FB}Теперь его баланс: %d",CasinoInfo[mycasino[playerid]][casBalance]);
		        ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Пополнение баланса казино",-money,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		    }
		}
		case 3415:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
		        if(money> CasinoInfo[mycasino[playerid]][casBalance])return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}В казино нет столько денег","Принять","");
		        if(money < 1) return false;
		        GiveMoney(playerid,money);
		        CasinoInfo[mycasino[playerid]][casBalance] -=money;
		        format(string,sizeof(string),"{FFFFFF}Вы сняли с балансa казино\n{7396FB}Теперь его баланс: %d",CasinoInfo[mycasino[playerid]][casBalance]);
		        ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Снятие с баланса казино",money,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		    }
		}
		case 3416:
		{
		    if(response)
		    {
		        format(string,sizeof(string),"{FFFFFF}Вы продали Casino Royal за $%d\n{7396FB}Баланс казино не будет обнулён",CasinoInfo[0][casCost]/2);
		        ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
		        GiveMoney(playerid,CasinoInfo[0][casCost]/2);
		        SetString(CasinoInfo[0][casOwner],"The State");
		        CasinoInfo[0][casLock]=0;
		        SaveCasino(0);
				GetPlayerCasino(playerid);
				UpdateInventory(playerid, 10);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Продажа казино государству",CasinoInfo[mycasino[playerid]][casCost]/2,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		    }
		}
		case 377:
		{
		    if(response)
		    {
		        if(SlotValue[playerid][0]< SellGzone[playerid])return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        new zone = GetPlayerGangZone(playerid);
		        GiveMoney(playerid,-SellGzone[playerid]);
		        GiveMoney(SellPGzone[playerid],SellGzone[playerid]);
      			GangZoneHideForAll(GangZone[zone]);
			    GangZoneShowForAll(GangZone[zone],TeamColors[PlayerInfo[playerid][pMember]]);
			    new lastgang = GZInfo[zone][gzFracID];
			    GZInfo[zone][gzFracID] = PlayerInfo[playerid][pMember];
			    SendTeamMessage(PlayerInfo[playerid][pMember],COLOR_VALIK,"Ваша банда захватила новую территорию");
                UpdateDorm(PlayerInfo[playerid][pMember]);
			    UpdateDorm(lastgang);
			    SaveGangZone(zone);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),PlayerInfo[SellPGzone[playerid]][pID],Name(SellPGzone[playerid]),"Покупка территории",-SellGzone[playerid],PlayerIp[playerid],PlayerIp[SellPGzone[playerid]],GetMoney(playerid));
		    }
		}
		case 1483:
		{
			if(!response)
			{
				SendClientMessage(CoinsOpponent[playerid], COLOR_LIGHTRED, "Оппонент отказался от игры в монетку");
				SendClientMessage(playerid, COLOR_ORANGE, "Вы отказались от игры в монетку");
				return ClearCoinsPlayers(CoinsOpponent[playerid], playerid);
			}
			new opponent = CoinsOpponent[playerid];
			if(GetMoney(playerid) < CoinsBet[playerid])
			{
				SendError(playerid, "У Вас недостаточно средств");
				return ClearCoinsPlayers(CoinsOpponent[playerid], playerid);
			}
			SendClientMessage(opponent, COLOR_LIGHTGREEN, "Оппонент согласился на игру с Вами");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы согласились на игру");
			ShowCoins(playerid);
			ShowCoins(opponent);
			return 1;
		}
		case 1482:
		{
			if(!response)return 1;
			J_SetPlayerPos(playerid, -2215.8972,1836.5310,1054.9347);
			SetPlayerFacingAngle(playerid, 180.0);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, listitem+1);
			SetCameraBehindPlayer(playerid);
			return 1;
		}
		case 1481:
		{
			if(!response)return 1;
			new bool:check = (listitem) ? false : true;
			for(new i; i < 165; i++)
			{
				if(AlkatrazDoors[i][alOpen] == check)continue;
				AlkMove(i);
			}
			return 1;
		}
		case 1480:
		{
			if(!response)return ShowPlayerDialogEx(playerid,217,2,"{43CD80}Общак","{56A85E}+ Положить наркотики\n{56A85E}+ Положить материалы\n{56A85E}+ Положить канистру\n{D94141}+ Положить наборы для починки\n{56A85E}+ Положить маски\n{D94141}- Достать наркотики\n{D94141}- Достать материалы\n{D94141}- Достать канистру\n{D94141}- Достать наборы для починки\n{D94141}- Достать маски\n \n{C9EAFF}Взять организационное оружие","Выбор","Назад");
			new team = GetTeamID(playerid);
			switch(listitem)
			{
			case 0:
				{
					if(FractionValue[team][0] <= 42) return SendError(playerid,"На складе организации недостаточно материалов");
					_SetGun(playerid,24,14);
					f(string, "%s[%d] взял со склада Desert Eagle (( -42 материала ))", Name(playerid), playerid);
					SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
					FractionValue[team][0] -= 42;
				}
			case 1:
				{
					if(FractionValue[team][0] <= 30) return SendError(playerid,"На складе организации недостаточно материалов");
					_SetGun(playerid,25,10);
					f(string, "%s[%d] взял со склада ShotGun (( -30 материалов ))", Name(playerid), playerid);
					SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
					FractionValue[team][0] -= 30;
				}
			case 2:
				{
					if(FractionValue[team][0] <= 120) return SendError(playerid,"На складе организации недостаточно материалов");
					_SetGun(playerid,29,60);
					f(string, "%s[%d] взял со склада MP5 (( -120 материалов ))", Name(playerid), playerid);
					SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
					FractionValue[team][0] -= 120;
				}
			case 3:
				{
					if(FractionValue[team][0] <= 120) return SendError(playerid,"На складе организации недостаточно материалов");
					_SetGun(playerid,30,60);
					f(string, "%s[%d] взял со склада AK-47 (( -120 материалов ))", Name(playerid), playerid);
					SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
					FractionValue[team][0] -= 120;
				}
			case 4:
				{
					if(FractionValue[team][0] <= 300) return SendError(playerid,"На складе организации недостаточно материалов");
					_SetGun(playerid,31,100);
					f(string, "%s[%d] взял со склада M4A1 (( -300 материалов ))", Name(playerid), playerid);
					SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
					FractionValue[team][0] -= 300;
				}
			case 5:
				{
					if(FractionValue[team][0] <= 50) return SendError(playerid,"На складе организации недостаточно материалов");
					_SetGun(playerid,33,10);
					f(string, "%s[%d] взял со склада M4A1 (( -50 материалов ))", Name(playerid), playerid);
					SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
					FractionValue[team][0] -= 50;
				}
			}
			new drs[80];
			f(drs, "На складе: %d материалов", FractionValue[team][0]);
			ShowPlayerDialogEx(playerid, 1480, 5, drs, "Оружие\tПатроны\tМатериалы\n\
			Desert Eagle\t{C9EAFF}14 патронов\t{D94141}42 материала\n\
			ShotGun\t{C9EAFF}10 патронов\t{D94141}30 материалов\n\
			MP5\t{C9EAFF}60 патронов\t{D94141}120 материалов\n\
			AK-47\t{C9EAFF}60 патронов\t{D94141}120 материалов\n\
			M4A1\t{C9EAFF}100 патронов\t{D94141}300 материалов\n\
			Sniper Rifle\t{C9EAFF}10 патронов\t{D94141}50 материалов", "Взять", "Отмена"); 
			UpdateDorm(team);
		}
		case 1479:
		{
			if(!response)return 1;
			new actplayerid = GetPVarInt(playerid,"PlayerChange");
			new fractionid = PlayerInfo[actplayerid][pMember];
			new skinid = (PlayerInfo[actplayerid][pSex] == 2)?GOrgSkins[fractionid][listitem]:MOrgSkins[fractionid][listitem];
			if(skinid == PlayerInfo[actplayerid][pFracSkin]) return 1;
			new mes[128];
			format(mes,sizeof(mes),"Ваша внешность была изменена %s", Name(playerid));
			SendClientMessage(actplayerid, COLOR_BLUE,mes);
			PlayerInfo[actplayerid][pFracSkin] = skinid;
			SetPlayerSkinEx(actplayerid,GetSkinOfPlayer(actplayerid));
			DeletePVar(playerid, "PlayerChange");
		}
		case 1478:
		{
			if(!response)return callcmd::apanel(playerid);
			if(strlen(inputtext) < 3 || strlen(inputtext) > 16)return ShowPlayerDialogEx(playerid,1478,DIALOG_STYLE_INPUT,"{D94141}Удаление промо-кода","Введите существующий промо-код, чтобы удалить его","Далее","Отмена");
			f(string, "SELECT * FROM `promo` WHERE `code` = '%s'", inputtext);
			new Cache:result = mysql_query(mysql, string, true);
			if(cache_num_rows())
			{
				f(string, "DELETE FROM `promo` WHERE `code` = '%s'", inputtext);
				mysql_pquery(mysql, string);
				SendInfo(playerid,"Промо-код успешно удалён");
				for(new i; i < TotalPromo; i++)
				{
					SavePromo(i);
					ClearPromo(i);
				}
				LoadPromo();
			}
			else ShowPlayerDialogEx(playerid,1478,DIALOG_STYLE_INPUT,"{D94141}Удаление промо-кода","Введите существующий промо-код, чтобы удалить его\n{ff4400}Данный промо не найден","Далее","Отмена");
			cache_delete(result, mysql);
			return 1;
		}
		//======RACE case 5001:  case 5002:  case 5003:  case 5004:  case 5005:
        case 556:
        {
        	if(response)
        	{
				new num;
				if(PlayerInfo[playerid][pMuteTime]>0)return SendError(playerid,"Вы не можете редактировать объявления, так как у вас бан чата");
                foreach(new i:Player)
                {
                    if(AddTimeMessages[i] > 0 && PlayerInfo[playerid][pVIP])
                    {
                		if(num == listitem)
  						{
  						    new time = gettime() - AddTimeMessages[i];
  						    AddId[playerid] = i;
							if(TimeMessage[playerid] > gettime()) return SendError(playerid,"Обрабатывать объявления можно раз в 10 секунд");
  						    AddTimeMessages[AddId[playerid]] = 0;
							format(string,sizeof(string),"\n\n\\c{FFFFFF}Объявление от %s\n\\cОтправлено %s назад\n\n\\c{43CD80}%s\n\n{FFFFFF}Отредактируйте сообщение в нужный формат\n\n",PlayerName[i],Convert(time),AddMessages[i]);
							Dialog_Open(playerid,557,1,"{43CD80}Редактирование",string,"Отправить","Отклонить");
							return 1;
  						}
  						num ++;
					}
				}
				foreach(new i:Player)
                {
                    if(AddTimeMessages[i] > 0)
                    {
                		if(num == listitem)
  						{
  						    new time = gettime() - AddTimeMessages[i];
  						    AddId[playerid] = i;
							if(TimeMessage[playerid] > gettime()) return SendError(playerid,"Обрабатывать объявления можно раз в 10 секунд");
  						    AddTimeMessages[AddId[playerid]] = 0;
							format(string,sizeof(string),"\n\n\\c{FFFFFF}Объявление от %s\n\\cОтправлено %s назад\n\n\\c{43CD80}%s\n\n{FFFFFF}Отредактируйте сообщение в нужный формат\n\n",PlayerName[i],Convert(time),AddMessages[i]);
							Dialog_Open(playerid,557,1,"{43CD80}Редактирование",string,"Отправить","Отклонить");
							return 1;
						}
  						num ++;
					}
				}
			}
			return true;
		}
		case 557:
		{
			new getradio[40];
			switch(PlayerInfo[playerid][pMember])
			{
			case TEAM_RADIO: getradio = "Los-Santos";
			case TEAM_RADIOSF: getradio = "San-Fierro";
			case TEAM_RADIOLV: getradio = "Las-Venturas";
			default: getradio = "";
			}
			if(response)
			{
				foreach(Player, i)
				{
					new drt[400];
					if(!IsPlayerLogged[AddId[playerid]])return SendError(playerid,"Игрок, который отправил объявление, вышел из игры");
					if(SlotValue[AddId[playerid]][19]<=1) return SendError(playerid,"Игрок, который отправил объявление, вышел из игры");
					if(PlayerInfo[i][pMy_Skill]==0)
					{
						if(PlayerInfo[playerid][pVIP]){
							format(drt,sizeof(drt),"{ffcb8c}[VIP] %s | Прислал %s[%d] | Телефон: %d",inputtext,PlayerName[AddId[playerid]],AddId[playerid],SlotValue[AddId[playerid]][19]);
							SendClientMessage(i,0xffcb8cAA,drt);
							format(drt,sizeof(drt),"          Отредактировал сотрудник %s FM %s[%d]",getradio,PlayerName[playerid],playerid);
							SendClientMessage(i,0xdb9948AA,drt);
						}else{
							format(drt,sizeof(drt),"{00b006}%s | Прислал %s[%d] | Телефон: %d",inputtext,PlayerName[AddId[playerid]],AddId[playerid],SlotValue[AddId[playerid]][19]);
							SendClientMessage(i,0x00b006AA,drt);
							format(drt,sizeof(drt),"          Отредактировал сотрудник %s FM %s[%d]",getradio,PlayerName[playerid],playerid);
							SendClientMessage(i,0x008204AA,drt);
						}
					}
				}
				GiveMoney(playerid,GLS[19]);
				OrgInfo[PlayerInfo[playerid][pMember]][oBank] += (500-GLS[19]);
				format(string,sizeof(string),"Вы получили $%d за отредактированое вами объявление",GLS[19]);
				SendClientMessage(playerid,COLOR_LIGHTGREEN,string);
				AddTimeMessages[AddId[playerid]] = 0;
				callcmd::edit(playerid);
				TimeMessage[playerid]=gettime()+10;
			}else{
				AddTimeMessages[AddId[playerid]] = 0;
				format(string,sizeof(string),"[%s FM] %s[%d] отклонил объявление %s[%d]. Причина: %s", getradio,PlayerName[playerid],playerid,Name(AddId[playerid]),AddId[playerid],inputtext);
				SendTeamMessage(TEAM_RADIO,COLOR_YELLOW,string);
				SendTeamMessage(TEAM_RADIOLV,COLOR_YELLOW,string);
				SendTeamMessage(TEAM_RADIOSF,COLOR_YELLOW,string);
				SendClientMessage(AddId[playerid],COLOR_RED,string);
				f(string, "[%s FM] Исходный текст: %s", getradio, AddMessages[AddId[playerid]]);
				SendTeamMessage(TEAM_RADIO,COLOR_YELLOW,string);
				SendTeamMessage(TEAM_RADIOLV,COLOR_YELLOW,string);
				SendTeamMessage(TEAM_RADIOSF,COLOR_YELLOW,string);
				SendClientMessage(AddId[playerid],COLOR_RED,string);
				callcmd::edit(playerid);
			}
		}
		case 9653:
		{
			if(response)
			{
			    new carid = GetPlayerVehicleID(playerid);
				if(GetVehicleModelEx(GetPlayerVehicleID(playerid)) != 433) return    SendError(playerid,"Вы не в матовозе");
				switch(listitem)
				{
					case 0:
					{
      					if(FractionValue[PlayerInfo[playerid][pMember]][0] < 2000) return SendClientMessage(playerid, 0xAFAFAFFF, "В организации недостаточно материалов");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 335.9255,1994.7932,17.6406) || IsPlayerInRangeOfPoint(playerid, 20.0, 2745.2368,-2463.9832,13.6484) || IsPlayerInRangeOfPoint(playerid, 20.0, -1516.6138,343.0721,6.6946))
					    {
         					if(CarMusorCount[carid] >= 100) return SendClientMessage(playerid, 0xAFAFAFFF, "[Информация] {FFFFFF}Матовоз уже переполнен");
					        ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Вы загрузили грузовик.\nВведите /carm для того чтобы выбрать организацию\nв которую надо отвезти материалы","Скрыть", "");
					        CarMusorCount[carid] = 100;
				        	format(string, sizeof(string), "Загружено: %d%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, string);
                            DisablePlayerRaceCheckpoint(playerid);
                            foreach(new i:Player)
                            {
                                if(IsAtMafia(i) || IsAtGang(i))
								{
								    if(PlayerInfo[playerid][pMember]==TEAM_ARMY) SendClientMessage(i,COLOR_BLUE,"Со склада Army Los-Santos выехал матовоз");
									if(PlayerInfo[playerid][pMember]==TEAM_ARMYLV) SendClientMessage(i,COLOR_BLUE,"Со склада Army Las-Venturas выехал матовоз");
									if(PlayerInfo[playerid][pMember]==TEAM_ARMYSF) SendClientMessage(i,COLOR_BLUE,"Со склада Army San-Fierro выехал матовоз");
								}
                            }
					    }
						else
						{
						    if(CarMusorCount[carid] >= 100) return SendClientMessage(playerid, 0xAFAFAFFF, "[Информация] {FFFFFF}Матовоз уже переполнен, отвезите эти материалы");
						    ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Для разгрузки материалов отправляйтесь по красному чекпоинту и  введите /carm, \nПосле чего и выберите нужный вам пункт","Скрыть", "");
       						if(PlayerInfo[playerid][pMember]==TEAM_ARMY) EnableGPSForPlayer(playerid,2745.2368,-2463.9832,13.6484);
       						if(PlayerInfo[playerid][pMember]==TEAM_ARMYSF) EnableGPSForPlayer(playerid,-1516.6138,343.0721,6.6946);
       						if(PlayerInfo[playerid][pMember]==TEAM_ARMYLV) EnableGPSForPlayer(playerid,331.9012,1963.2441,17.6406);
						}
					}
					case 1:
					{
					    if(OrgInfo[TEAM_LSPD][oBank] < GLS[17]) return SendError(playerid,"Организация не может принять/оплатить вашу работу");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 1591.2311,-1607.0784,13.8266))
					    {
					        if(FractionValue[TEAM_LSPD][0] > 30000) return SendError(playerid,"Склад организации переполнен");
					        if(CarMusorCount[carid] < 1) return SendClientMessage(playerid, 0xAFAFAFFF, "В вашем матовозе недостаточно материалов");
					        format(string,sizeof(string),"[Информация] {FFFFFF}Вы получили премию в размере: $%d",GLS[17]);
							SendClientMessage(playerid, COLOR_VALIK, string);
							ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Вы перевезли 2 000 материалов на склад Полиции ЛС","Скрыть", "");
							GiveMoney(playerid,GLS[17]);
							FractionValue[TEAM_LSPD][0] += CarMusorCount[carid]*20;
							OrgInfo[TEAM_LSPD][oBank] -= GLS[17];
							SaveOrg(TEAM_LSPD);
							CarMusorCount[carid] = 0;
					        format(string, sizeof(string), "Загружено: %d%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, string);
    						DisablePlayerRaceCheckpoint(playerid);
    						RemovePlayerMapIcon(playerid, 98);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SendClientMessage(playerid, 0xAFAFAFFF, "[Информация] {FFFFFF}В вашем матовозе недостаточно материалов");
							ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Для разгрузки материалов отправляйтесь по красному чекпоинту и  введите /carm, \nПосле чего и выберите нужный вам пункт","Скрыть", "");
          					EnableGPSForPlayer(playerid,1591.2311,-1607.0784,13.8266);
						}
					}
					case 2:
					{
					    if(OrgInfo[TEAM_RCPD][oBank] < GLS[17]) return SendError(playerid,"Организация не может принять/оплатить вашу работу");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 633.8635,-571.5131,16.7726))
					    {
					        if(FractionValue[TEAM_RCPD][0] > 30000) return SendClientMessage(playerid, 0xAFAFAFFF, "Склад организации переполнен");
					        if(CarMusorCount[carid] < 1) return SendClientMessage(playerid, 0xAFAFAFFF, "В вашем матовозе недостаточно материалов");
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы получили премию в размере: $%d",GLS[17]);
							SendClientMessage(playerid, COLOR_VALIK, string);
							ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Вы перевезли 2 000 материалов на склад RCSD","Скрыть", "");
							GiveMoney(playerid,GLS[17]);
							FractionValue[TEAM_RCPD][0] += CarMusorCount[carid]*20;
							OrgInfo[TEAM_RCPD][oBank] -= GLS[17];
							SaveOrg(TEAM_RCPD);
							CarMusorCount[carid] = 0;
					        format(string, sizeof(string), "Загружено: %d%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, string);
    						DisablePlayerRaceCheckpoint(playerid);
    						RemovePlayerMapIcon(playerid, 98);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SendClientMessage(playerid, 0xAFAFAFFF, "[Информация] {FFFFFF}В вашем матовозе недостаточно материалов");
    						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Для разгрузки материалов отправляйтесь по красному чекпоинту и  введите /carm, \nПосле чего и выберите нужный вам пункт","Скрыть", "");
       						EnableGPSForPlayer(playerid,633.8635,-571.5131,16.7726);
						}
					}
					case 3:
					{
					    if(OrgInfo[TEAM_FBI][oBank] < GLS[17]) return SendError(playerid,"Организация не может принять/оплатить вашу работу");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 289.8648,-1630.2656,33.7695))
					    {
					        if(FractionValue[TEAM_FBI][0] > 30000) return SendClientMessage(playerid, 0xAFAFAFFF, "Склад организации переполнен");
          					if(CarMusorCount[carid] < 1) return SendClientMessage(playerid, 0xAFAFAFFF, "В вашем матовозе недостаточно материалов");
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы получили премию в размере: $%d",GLS[17]);
							SendClientMessage(playerid, COLOR_VALIK, string);
							ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Вы перевезли 2 000 материалов на склад FBI","Скрыть", "");
							GiveMoney(playerid,GLS[17]);
							FractionValue[TEAM_FBI][0] += CarMusorCount[carid]*20;
							OrgInfo[TEAM_FBI][oBank] -= GLS[17];
							SaveOrg(TEAM_FBI);
							CarMusorCount[carid] = 0;
					        format(string, sizeof(string), "Загружено: %d%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, string);
							DisablePlayerRaceCheckpoint(playerid);
							RemovePlayerMapIcon(playerid, 98);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SendClientMessage(playerid, 0xAFAFAFFF, "В вашем матовозе недостаточно материалов");
    						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Для разгрузки материалов отправляйтесь по красному чекпоинту и  введите /carm, \nПосле чего и выберите нужный вам пункт","Скрыть", "");
       						EnableGPSForPlayer(playerid,289.8648,-1630.2656,33.7695);
						}
					}
					case 4:
					{
					    if(OrgInfo[TEAM_SFPD][oBank] < GLS[17]) return SendError(playerid,"Организация не может принять/оплатить вашу работу");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, -1570.3193,663.1941,7.1875))
					    {
					        if(FractionValue[TEAM_SFPD][0] > 30000) return SendClientMessage(playerid, 0xAFAFAFFF, "Склад организации переполнен");
					        if(CarMusorCount[carid] < 1) return SendClientMessage(playerid, 0xAFAFAFFF, "В вашем матовозе недостаточно материалов");
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы получили премию в размере: $%d",GLS[17]);
							SendClientMessage(playerid, COLOR_VALIK, string);
							ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Вы перевезли 2 000 материалов на склад SFPD","Скрыть", "");
							GiveMoney(playerid,GLS[17]);
							FractionValue[TEAM_SFPD][0] += CarMusorCount[carid]*20;
							OrgInfo[TEAM_SFPD][oBank] -= GLS[17];
							SaveOrg(TEAM_SFPD);
							CarMusorCount[carid] = 0;
					        format(string, sizeof(string), "Загружено: %d%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, string);
    						DisablePlayerRaceCheckpoint(playerid);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SendClientMessage(playerid, 0xAFAFAFFF, "В вашем матовозе недостаточно материалов");
    						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Для разгрузки материалов отправляйтесь по красному чекпоинту и  введите /carm, \nПосле чего и выберите нужный вам пункт","Скрыть", "");
       						EnableGPSForPlayer(playerid,-1570.3193,663.1941,7.1875);
						}
					}
					case 5:
					{
					    if(OrgInfo[TEAM_PDLV][oBank] < GLS[17]) return SendError(playerid,"Организация не может принять/оплатить вашу работу");
					    if(IsPlayerInRangeOfPoint(playerid, 20.0, 2234.3909,2453.2590,10.5299))
					    {
					        if(FractionValue[TEAM_PDLV][0] > 30000) return SendClientMessage(playerid, 0xAFAFAFFF, "Склад организации переполнен");
					        if(CarMusorCount[carid] < 1) return SendClientMessage(playerid, 0xAFAFAFFF, "В вашем матовозе недостаточно материалов");
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы получили премию в размере: $%d",GLS[17]);
							SendClientMessage(playerid, COLOR_VALIK, string);
							ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Вы перевезли 2 000 материалов на склад LVPD","Скрыть", "");
							GiveMoney(playerid,GLS[17]);
							FractionValue[TEAM_PDLV][0] += CarMusorCount[carid]*20;
							OrgInfo[TEAM_PDLV][oBank] -= GLS[17];
							SaveOrg(TEAM_PDLV);
							CarMusorCount[carid] = 0;
					        format(string, sizeof(string), "Загружено: %d%/100%", CarMusorCount[carid]);
							UpdateDynamic3DTextLabelText(MusorCarText[carid], 0xFFFFFFFF, string);
    						DisablePlayerRaceCheckpoint(playerid);
						}
						else
						{
						    if(CarMusorCount[carid] < 1) return SendClientMessage(playerid, 0xAFAFAFFF, "В вашем матовозе недостаточно материалов");
    						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{928989}Для разгрузки материалов отправляйтесь по красному чекпоинту и  введите /carm, \nПосле чего и выберите нужный вам пункт","Скрыть", "");
       						EnableGPSForPlayer(playerid,2234.3909,2453.2590,10.5299);
						}
					}
				}
			}
		}
		case 252:
		{
		    if(response)
		    {
		        new query[256];
		        format(query, sizeof(query), "SELECT `Key` FROM `accounts` WHERE `NickName`='%s'", PlayerName[playerid]);
		        mysql_pquery(mysql, query, "MysqlCheckKey", "dd", playerid, strval(inputtextsave));
		    }
		    else J_Kick(playerid);
		}
		case 2:
		{
			if(response)
			{
				if(!strlen(inputtextsave))
				{
					return ShowLoginDialog(playerid);
				}
				new MyHash[65];
				SHA256_PassHash(inputtextsave, SALT, MyHash, 65);
				format(string, sizeof(string), "SELECT `CheckIP1`, `CheckIP2`, `KeyCheck`, `LastIP`, `Key`, `AuthAct`, `AuthCode` FROM `accounts` WHERE `NickName` = '%s' AND `Password` = '%s' LIMIT 1", PlayerName[playerid],MyHash);
			 	mysql_pquery(mysql, string, "LoginDialogMysql", "d", playerid);
			}
   			else ShowPlayerDialogEx(playerid,3,0,"{43CD80}Информация","{FFFFFF}Вы собрались покинуть сервер\nЕсли хотите сделать это, нажмите 'Принять'\nВ ином случае нажмите 'Отмена'","Принять","Отмена");
			return true;
		}
		case 3:
		{
		    if(response) J_Kick(playerid);
		    else Autorisation(playerid);
		}
		case 4:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0: ShowPlayerDialogEx(playerid,3,0,"{43CD80}Информация","{FFFFFF}Вы собрались покинуть сервер\nЕсли хотите сделать это, нажмите 'Принять'\nВ ином случае нажмите 'Отмена'","Принять","Отмена");
					case 2: ShowLoginDialog(playerid);
					default: return false;
				}
			}
			else Autorisation(playerid);
		}
		case 381:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
						dilo[playerid]=1;
				        SendError(playerid,"Вы выбрали пункт: ремонт транспорта. Нажимайте клавишу ~k~~SNEAK_ABOUT~, чтобы ремонтировать авто");
			 			SetPlayerChatBubble(playerid, "Взял инструменты для ремонта транспорта", COLOR_PURPLE, 10.0, 5000);
				    }
				    case 1:
				    {
            			dilo[playerid]=2;
				        SendError(playerid,"Вы выбрали пункт: ремонт двигателя. Нажимайте клавишу ~k~~SNEAK_ABOUT~, чтобы ремонтировать двигатель");
				        SetPlayerChatBubble(playerid, "Взял инструменты для ремонта двигателя", COLOR_PURPLE, 10.0, 5000);
				    }
				}
			}
		}
		case 982:
		{
		    if(response)
			{
			    if(PlayerInfo[playerid][pJob] != JOB_NALOG) return SendError(playerid,"Вы не работаете в Налоговой");
			    new num;
			    for(new houseid;houseid< MAX_HOUSES;houseid++)
				{
				    if(HouseInfo[houseid][hNalog2] < 200 || strcmp(HouseInfo[houseid][hOwner],"The State",true) == 0 ) continue;
				    if(num == listitem)
				    {
						HouseNalog[playerid] = houseid;
						HouseNalogState2[playerid] = 1;
				        EnableGPSForPlayer(playerid, HouseInfo[houseid][hEnter][0], HouseInfo[houseid][hEnter][1], HouseInfo[houseid][hEnter][2]);
				        ShowPlayerDialogEx(playerid,0,0,"{43CD80}Налоговая","Отправляйтесь по отметке на карте для выдачи счета на оплату комунальных услуг","Принять","");
	       				return 1;
					}
					num++;
				}
			}
		}
		case 783:
		{
		    if(response)
			{
				if(SlotValue[playerid][0] < HouseInfo[SlotValue[playerid][1]][hNalog])return SendBotMessage(playerid,"Извините, но у вас нет нужной суммы денег");
				if(TalentsInfo[playerid][2][1] == 3)
				{
					GiveMoney(playerid,-HouseInfo[SlotValue[playerid][1]][hNalog]/2);
				}
				else
				{
					GiveMoney(playerid,-HouseInfo[SlotValue[playerid][1]][hNalog]);
				}
				OrgInfo[GLS[13]][oBank]+=HouseInfo[SlotValue[playerid][1]][hNalog];
				SaveOrg(GLS[13]);
				HouseInfo[SlotValue[playerid][1]][hNalog] = 0;
				SendClientMessage(playerid,COLOR_GREEN,"Вы погасили неоплаченые счета за комунальные услуги");
				if(TalentsInfo[playerid][2][1] != 3)SendClientMessage(playerid,COLOR_GREEN,"Обратите внимание что имея навык халявщик, вы будете платить в 2 раза меньше");
       			SendBankBot(playerid);
   				return 1;
			}
		}
		case 784:
		{
		    if(response)
			{
				if(SlotValue[playerid][0] < BizInfo[SlotValue[playerid][3]][bLevel])return SendBotMessage(playerid,"Извините, но у вас нет нужной суммы денег");
				if(TalentsInfo[playerid][2][1] == 3)
				{
					GiveMoney(playerid,-BizInfo[SlotValue[playerid][3]][bLevel]/2);
				}
				else
				{
					GiveMoney(playerid,-BizInfo[SlotValue[playerid][3]][bLevel]);
				}
				OrgInfo[GLS[13]][oBank]+=BizInfo[SlotValue[playerid][3]][bLevel];
				SaveOrg(GLS[13]);
				BizInfo[SlotValue[playerid][3]][bLevel] = 0;
       			SendClientMessage(playerid,COLOR_GREEN,"Вы погасили неоплаченые счета за бизнес");
       			if(TalentsInfo[playerid][2][1] != 3)SendClientMessage(playerid,COLOR_GREEN,"Обратите внимание что имея навык халявщик, вы будете платить в 2 раза меньше");
       			SendBankBot(playerid);
   				return 1;
			}
		}
		case 713:
    	{
			if(response)
	  		{
		    	new para1 = PanelPlayerID[playerid];
	    		switch(listitem)
				{
					case 0:
					{
						if(GetTeamID(playerid) == TEAM_BANK && PlayerInfo[playerid][pRank]>=6)
					 	{
					        if(PlayerInfo[para1][pCredit] == 0)
							{
								if(!ProxDetectorS(10,playerid,para1)) return SendError(playerid, "Вы далеко от игрока");
								if(PlayerInfo[para1][pCredit_KD] > gettime())return SendError(playerid, "Недавно банк уже отказал этому клиенту в выдаче кредита");
								ShowPlayerDialogEx(playerid,227,1,"{43CD80}Кредит","{FFFFFF}Какую сумму вы хотите выдать?\n\nПримечание: максимальная сумма от $5000 до $5000000","Далее","Отмена");
	       						format(string, sizeof(string), "%s достал банковские документы", PlayerName[playerid]);
								ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							}
							else SendError(playerid,"У этого человека уже есть задолженность в банке");
				 		}
				 		else SendError(playerid,"Либо вы не состоите в банке, либо ваш ранг ниже 6-го");
			 		}
					case 1:
					{
						if(GetTeamID(playerid) == TEAM_BANK)
					 	{
						 	format(string,sizeof(string),"{FFFFFF}Долг %s составляет {33CCFF}$%d\n",PlayerName[para1],PlayerInfo[para1][pCredit]);
							ShowPlayerDialogEx(para1,INVALID_DIALOG_ID,0,"{43CD80}Банк",string,"Принять","");
							ShowPlayerDialogEx(playerid,INVALID_DIALOG_ID,0,"{43CD80}Банк",string,"Принять","");
							format(string, sizeof(string), "%s что то показывает ", PlayerName[playerid]);
							ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
					}
					case 2:
					{
						if(GetTeamID(playerid) == TEAM_BANK)
					 	{
						 	format(string,sizeof(string),"{FFFFFF}На Cчету: {33CCFF}%d\n",PlayerInfo[para1][pBank]);
							ShowPlayerDialogEx(para1,INVALID_DIALOG_ID,0,"{43CD80}Банк",string,"Принять","");
							ShowPlayerDialogEx(playerid,INVALID_DIALOG_ID,0,"{43CD80}Банк",string,"Принять","");
							format(string, sizeof(string), "%s что то показывает ", PlayerName[playerid]);
							ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
					}
					case 3:
					{
						if(PlayerInfo[para1][pOOC] !=0) return SendError(playerid,"У этого человека уже есть банковская карта");
						if(SlotValue[para1][0]<3000)return SendError(playerid,"У этого человека недостаточно средств! [3 000$]");
						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{A99E9E}Вы показали(а) форму оформления банковской карты","Скрыть", "");
						ShowPlayerDialogEx(para1,779,0,"{43CD80}Информация","{FFFFFF}Вы действительно хотите получить банковскую карту?\nПри получении банковской карты вы принимаете все условия в использовании наших услуг.\nВы установите пароль на карту, чтобы защитить ее от злоумышлеников,\nа следующие подробности вы можете узнать в работников банка","Принять","Отмена");
   						format(string, sizeof(string), "%s передал документы для получения банковской карты игроку %s", PlayerName[playerid],PlayerName[para1]);
						ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        PanelPlayerID[para1]=playerid;
					}
					case 4:
					{
					    if(PlayerInfo[para1][pOOC] ==0) return SendError(playerid,"У этого человека нет банковской карты");
					    if(SlotValue[para1][0]<30000)return SendError(playerid,"У этого человека недостаточно средств! [30 000$]");
						///
						if(!ProxDetectorS(3.0, playerid, para1, 1)) return SendError(playerid,"Вы далеко от игрока");
					    format(string, sizeof(string), "%s предложил %s восстановить пароль на получение банковской карты", PlayerName[playerid],PlayerName[para1]);
						ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}Вы отправили предложение на смену пароля","Скрыть", "");
						PanelPlayerID[para1]=playerid;
						format(string,sizeof(string),"{FFFFFF}Банкир {7396FB}%s{FFFFFF} предложил вам восстановить пароль от банковской карты.\n\t\t\t\tСтоимость услуги: {7396FB}30 000${FFFFFF}",PlayerName[playerid]);
						ShowPlayerDialogEx(para1,887,0,"{43CD80}Информация",string,"Принять","Отмена");
					}
				}
			}
			else PanelPlayerID[playerid] = -1;
	 	}
	 	case 1651:
	 	{
	 	    if(response)
	  		{
				new NName[20],para1 = PanelPlayerID[playerid];
				if(para1==-1)return false;
				if(GetTeamID(playerid) == TEAM_LICENSERS) NName = "Инструктор";
				else if(PlayerInfo[playerid][pAdmin] > ADM_NONE) NName = "Администратор";
				switch(Ingatre[playerid])
				{
                    case 1:
				    {
			            if(SlotValue[playerid][0]<1000)return false;
						PlayerInfo[playerid][pCarLic] = YES_LICENSE;
						GiveMoney(playerid,-1000);
						OrgInfo[TEAM_LICENSERS][oBank] += 1000;
						GiveMoney(para1,100);
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы продали лицензию на авто игроку %s",Name(playerid));
						SendClientMessage(para1,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s выдал вам лицензию на авто со стоимостью 1000$",NName,Name(para1));
						SendClientMessage(playerid,COLOR_VALIK,string);
				 	}
				 	case 2:
					{
					    if(SlotValue[playerid][0]<2000)return false;
						PlayerInfo[playerid][pBikeLic] = YES_LICENSE;
						GiveMoney(playerid,-2000);
						OrgInfo[TEAM_LICENSERS][oBank] += 2000;
						GiveMoney(para1,200);
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы продали лицензию на мото игроку %s",Name(playerid));
						SendClientMessage(para1,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s выдал вам лицензию на мото со стоимостью 2000$",NName,Name(para1));
						SendClientMessage(playerid,COLOR_VALIK,string);
				 	}
				 	case 3:
					{
					    if(SlotValue[playerid][0]<1000)return false;
						PlayerInfo[playerid][pFishLic] = YES_LICENSE;
						GiveMoney(playerid,-1000);
						OrgInfo[TEAM_LICENSERS][oBank] += 1000;
						GiveMoney(para1,100);
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы продали лицензию на рыбалку игроку %s",Name(playerid));
						SendClientMessage(para1,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s выдал вам лицензию на рыбалку со стоимостью 1000$",NName,Name(para1));
						SendClientMessage(playerid,COLOR_VALIK,string);

					}
				  	case 4:
					{
					    if(SlotValue[playerid][0]<5000)return false;
						PlayerInfo[playerid][pBoatLic] = YES_LICENSE;
						GiveMoney(playerid,-5000);
						OrgInfo[TEAM_LICENSERS][oBank] += 5000;
						GiveMoney(para1,500);
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы продали лицензию на водный транспорт игроку %s",Name(playerid));
						SendClientMessage(para1,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s выдал вам лицензию на водный транспорт со стоимостью 5000$",NName,Name(para1));
						SendClientMessage(playerid,COLOR_VALIK,string);
					}
				 	case 5:
					{
					    if(SlotValue[playerid][0]<10000)return false;
						PlayerInfo[playerid][pGunLic] = YES_LICENSE;
						GiveMoney(playerid,-10000);
						OrgInfo[TEAM_LICENSERS][oBank] += 10000;
						GiveMoney(para1,1000);
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы продали лицензию на оружие игроку %s",Name(playerid));
						SendClientMessage(para1,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s выдал вам лицензию на оружие со стоимостью 10000$",NName,Name(para1));
						SendClientMessage(playerid,COLOR_VALIK,string);
						if(QuestProgress[playerid][9] < QI[9][LastProgress] && AcceptQuest[playerid][9] == 1)QuestProgress[playerid][9] ++;
						if(QuestProgress[playerid][9] >= QI[9][LastProgress] && QuestProgress[playerid][9] < 10000){
							PlayerInfo[playerid][pTalents][2]++;
							SendInfo(playerid, "У Вас появились новые очки талантов");
							QuestProgress[playerid][9] = 10000;
						}
					}
					case 6:
					{
					    if(SlotValue[playerid][0]<10000)return false;
						PlayerInfo[playerid][pFlyLic] = YES_LICENSE;
						GiveMoney(playerid,-10000);
						OrgInfo[TEAM_LICENSERS][oBank] += 10000;
						GiveMoney(para1,1000);
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы продали лицензию на полёты игроку %s",Name(playerid));
						SendClientMessage(para1,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s выдал вам лицензию на полёты со стоимостью 10000$",NName,Name(para1));
						SendClientMessage(playerid,COLOR_VALIK,string);
					}
					default: return false;
				}
				PanelPlayerID[para1]=-1;
				PanelPlayerID[playerid]=-1;
			}
	 	}
		case 6:
	    {
			if(response)
	  		{
	  		    new para1 = PanelPlayerID[playerid];
				new NName[20];
				if(GetTeamID(playerid) == TEAM_LICENSERS) NName = "Инструктор";
				else if(PlayerInfo[playerid][pAdmin] > ADM_NONE) NName = "Администратор";
				if(para1 == INVALID_PLAYER_ID)return SendError(playerid,"Повторите действие");
				switch(listitem)
			 	{
				    case 0:
				    {
				        if(PlayerInfo[para1][pCarLic] < YES_LICENSE)
				        {
				            Ingatre[para1]=1;
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на авто за 1000$",PlayerName[para1]);
				            SendClientMessage(playerid,COLOR_GRAY,string);
				            format(string,sizeof(string),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на вождение за {52A32A}1000${FFFFFF}",PlayerName[playerid]);
				            ShowPlayerDialogEx(para1,1651,0,"{43CD80}Информация",string,"Согласен","Нет");
						}
						else SendError(playerid,"У этого игрока уже есть лицензия на авто");
				 	}
				 	case 1:
					{
					    if(PlayerInfo[para1][pBikeLic] < YES_LICENSE)
					    {
				            Ingatre[para1]=2;
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на мото за 2000$",PlayerName[para1]);
				            SendClientMessage(playerid,COLOR_GRAY,string);
				            format(string,sizeof(string),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на мото за {52A32A}2000${FFFFFF}",PlayerName[playerid]);
				            ShowPlayerDialogEx(para1,1651,0,"{43CD80}Информация",string,"Согласен","Нет");
						}
						else SendError(playerid,"У этого игрока уже есть лицензия на мото");
				 	}
				 	case 2:
					{
					    if(PlayerInfo[para1][pFlyLic] < YES_LICENSE)
					    {
				            Ingatre[para1]=6;
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на полёты за 10000$",PlayerName[para1]);
				            SendClientMessage(playerid,COLOR_GRAY,string);
				            format(string,sizeof(string),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на полёты за {52A32A}10000${FFFFFF}",PlayerName[playerid]);
				            ShowPlayerDialogEx(para1,1651,0,"{43CD80}Информация",string,"Согласен","Нет");
						}
						else SendError(playerid,"У этого игрока уже есть лицензия на полёты");
				 	}
				 	case 3:
					{
					    if(PlayerInfo[para1][pFishLic] < YES_LICENSE)
					    {
							Ingatre[para1]=3;
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на рыбалку за 1000$",PlayerName[para1]);
				            SendClientMessage(playerid,COLOR_GRAY,string);
				            format(string,sizeof(string),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на рыбалку за {52A32A}1000${FFFFFF}",PlayerName[playerid]);
				            ShowPlayerDialogEx(para1,1651,0,"{43CD80}Информация",string,"Согласен","Нет");
						}
						else SendError(playerid,"У этого игрока уже есть лицензия на рыбалку");
					}
				  	case 4:
					{
					    if(PlayerInfo[para1][pBoatLic] < YES_LICENSE)
					    {
							Ingatre[para1]=4;
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на водный транспорт за 5000$",PlayerName[para1]);
				            SendClientMessage(playerid,COLOR_GRAY,string);
				            format(string,sizeof(string),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на водный транспорт за {52A32A}5000${FFFFFF}",PlayerName[playerid]);
				            ShowPlayerDialogEx(para1,1651,0,"{43CD80}Информация",string,"Согласен","Нет");
						}
						else SendError(playerid,"У этого игрока уже есть лицензия на водный транспорт");
					}
				 	case 5:
					{
					    if(PlayerInfo[para1][pGunLic] < YES_LICENSE)
					    {
							Ingatre[para1]=5;
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы предложили %s купить лицензию на оружие за 10000$",PlayerName[para1]);
				            SendClientMessage(playerid,COLOR_GRAY,string);
				            format(string,sizeof(string),"{FFFFFF}Лицензер: {52A32A}%s{FFFFFF} предлагает вам купить у него лицензию на оружие за {52A32A}10000${FFFFFF}",PlayerName[playerid]);
				            ShowPlayerDialogEx(para1,1651,0,"{43CD80}Информация",string,"Согласен","Нет");
						}
						else SendError(playerid,"У этого игрока уже есть лицензия на оружие");
					}
					default: return false;
				}
			}
			return true;
		}

		case 7: Autorisation(playerid);
		case 8:
		{
		    if(response)
		    {
		        new invite = InviteOffer[playerid];
		        if(invite != INVALID_PLAYER_ID)
		        {
			        PlayerInfo[playerid][pMember] = GetTeamID(invite);
			        PlayerInfo[playerid][pDCTime]=3;
			        SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначена организация. Изменить место спавна >> /setspawn");
			        PlayerInfo[playerid][pRank] = 1;
			        PlayerInfo[playerid][pFWarns] = 0;
			        format(string,sizeof(string),"[Информация] {FFFFFF}%s принял ваше предложение вступить к вам в организацию",Name(playerid));
			        SendClientMessage(invite,COLOR_VALIK,string);
			        format(string,sizeof(string),"[Информация] {FFFFFF}Вы приняли предложение %s вступить в организацию",Name(invite));
			        SendClientMessage(playerid,COLOR_VALIK,string);
			        format(string,sizeof(string),"Приветствуем нового члена нашей организации %s[%d], которого пригласил %s[%d]",Name(playerid),playerid,Name(invite),invite);
			        SendTeamMessage(GetTeamID(playerid),COLOR_VALIK,string);
			        InviteOffer[playerid] = INVALID_PLAYER_ID;
					ResetSpawnInfo(playerid, GetTeamID(invite));
					PlayerInfo[playerid][pNeedMessage]=1;
					PlayerInfo[playerid][pFWarns] = 0;
					PlayerInfo[playerid][pFMuteTime] = 0;
					PlayerInfo[playerid][pFracSkin] = GetSkinForPlayer(playerid);
					if(IsAtGang(invite) || IsAtMafia(invite))
					{
					    TeamDuty[playerid] = true;
					    SetPlayerSkinEx(playerid,GetSkinOfPlayer(playerid));
					    SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
					    TogglePlayerControllable(playerid,true);
					}
					PlayerInfo[playerid][pNeedMessage]=0;
		        }
		    }
		    else
		    {
		        new invite = InviteOffer[playerid];
		        if(invite != INVALID_PLAYER_ID)
		        {
			        format(string,sizeof(string),"[Информация] {FFFFFF}%s отклонил ваше предложение вступить к вам в организацию",Name(playerid));
			        SendClientMessage(invite,COLOR_VALIK,string);
			        format(string,sizeof(string),"[Информация] {FFFFFF}Вы отклонили предложение %s вступить к нему в организацию",Name(invite));
			        SendClientMessage(playerid,COLOR_VALIK,string);
					InviteOffer[playerid] = INVALID_PLAYER_ID;
					InviteOffer[invite] = INVALID_PLAYER_ID;
				}
		    }
		    return true;
		}
		case 11:
		{
		    new carid = GetPlayerVehicleID(playerid);
			if(response)
			{
       			if(IsASellCar(carid))
			    {
			        if(IsValidPassport(playerid))
			        {
				        new number = GetVehicleID(carid);
					    if(GetMoney(playerid) >= CarInfo[number][cCost])
					    {
					        if(IsValidNumberCars(playerid))
					        {
						        SetCarOwner(carid, Name(playerid));
								SetCarKeyer(carid, Name(playerid));
								PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
								SendClientMessage(playerid,COLOR_LIGHTGREEN,"Поздравляем с приобритением этого транспорта");
								GetNumberCars(playerid, PlayerInfo[playerid][pCars]);
								GiveMoney(playerid, -CarInfo[number][cCost],"BuyCar");
								format(string,sizeof(string),"[A] %s[%d] Купил %s по госу за $%d",PlayerName[playerid], playerid, VehicleName[GetVehicleModelEx(carid)-400],CarInfo[number][cCost]);
								SendAdminsMessage(COLOR_LIGHTRED,string);
								GetPlayerCars(playerid);
								SaveOwnableCar(carid);
								UpdateCarInfo(carid);
								CarInfo[number][cVirt] = 0;
								new logtime[3],logdate[3],logtimestring[16];
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Покупка транспорта",-CarInfo[number][cCost],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
							}
							else
							{
								if( (PlayerInfo[playerid][pCars]+2) <= ValidNumberCars(playerid))
								{
								    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
									RemovePlayerFromVehicle(playerid);
									SendError(playerid,"Ваш уровень VIP недостаточно высок чтобы иметь столько авто");
								}
						  		else
								{
								    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
									RemovePlayerFromVehicle(playerid);
									SendError(playerid,"Ваш уровень VIP недостаточно высок чтобы иметь столько авто");
								}
							}
					    }
					    else
					    {
					        PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
							RemovePlayerFromVehicle(playerid);
					        SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
					    }
				    }
				    else
					{
					    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
						RemovePlayerFromVehicle(playerid);
					    SendError(playerid,"У вас нет паспорта для покупки этого транспорта, получить его можно в мэрии");
					}
			    }
			    else
				{
				    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
					RemovePlayerFromVehicle(playerid);
				    SendError(playerid,"Этот транспорт не для продажи");
				}
			}
			else
			{
				PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				RemovePlayerFromVehicle(playerid);
			}
			return true;
		}
		case 14:
		{
		    if(response)
		    {
		        switch(PlayerBuyState[playerid])
		        {
		            case 0:
		            {
		                switch(listitem)
						{
					        case 0:
					        {
					            if(PlayerInfo[playerid][pCheeps] < 5) Buying(playerid,5,PlayerInfo[playerid][pCheeps],1,400,"Чипсы"," Используйте {7396FB}/eat{FFFFFF} чтобы перекусить");
						        else SendError(playerid,"Нельзя унести больше 5-и пачек чипсов");
						    }
		           			case 1:
					        {
					            if(PlayerInfo[playerid][pSprunk] < 5) Buying(playerid,2,PlayerInfo[playerid][pSprunk],1,100,"Спранк"," Используйте {7396FB}/sprunk{FFFFFF} чтобы выпить его");
						        else SendError(playerid,"Нельзя унести больше 5-и банок спранка");
					        }
					        case 2:
					        {
					            if(PlayerInfo[playerid][pBeer] < 5) Buying(playerid,7,PlayerInfo[playerid][pBeer],1,300," Пиво"," Используйте {7396FB}/beer{FFFFFF} чтобы выпить");
						        else SendError(playerid,"Нельзя унести больше 5-и бутылок пива");
					        }
				        }
		            }
		            case 1:
		            {
		                switch(listitem)
				        {
				            case 0:
					        {
								if(PlayerInfo[playerid][pPhoneBook])
								{
									SendError(playerid,"У вас уже есть тел. книга");
									callcmd::shopss(playerid);
								}
								else Buying(playerid,8,PlayerInfo[playerid][pPhoneBook],1,650,"Телефонную книгу"," Используйте {7396FB}/number{FFFFFF} чтобы найти номер. ");
					        }
					        case 1: Buying(playerid,1,PlayerInfo[playerid][pClip],(20-PlayerInfo[playerid][pClip]),90,"пачку скрепок"," Используйте {7396FB}/break{FFFFFF} чтобы вскрыть наручники");
				        }
		            }
		            case 2:
		            {
		                switch(listitem)
				        {
				        	case 0:
					        {
					            if(SlotValue[playerid][13]>=10)
								{
									SendError(playerid,"Вы не можете носить больше 10-ти масок одновременно");
									callcmd::shopss(playerid);
								}
								else Buying(playerid,15,SlotValue[playerid][13],1,600,"маску"," Используйте инвентарь, чтобы надеть маску");
					        }
						}
		            }
					case 3:
					{
						switch(listitem)
						{
						case 0:
							{
								if(SlotValue[playerid][19] == 0)
								{
									if(SlotValue[playerid][0]<700)return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
									if(BizInfo[BizEntered[playerid]][bProducts]<15)return SendError(playerid,"В магазине нет продуктов");
									new telephone = 1000000 + random(8999999);

									new query[256];
									format(query, sizeof(query), "SELECT NickName FROM accounts WHERE `TelNum`='%d';", telephone);
									mysql_pquery(mysql, query, "MysqlCheckTelNum", "dd", playerid, telephone);
								}
								else
								{
									SendError(playerid,"У вас уже есть мобильный телефон");
									callcmd::shopss(playerid);
								}
								return 1;
							}
						case 1:
							{
								if(PlayerInfo[playerid][pRadio])
								{
									SendError(playerid,"У вас уже есть бумбокс");
									callcmd::shopss(playerid);
								}
								else Buying(playerid,5,PlayerInfo[playerid][pRadio],1,400,"Бумбокс"," Используйте {ABFFCD}/bbox{FFFFFF}, чтобы слушать музыку");
							}
						case 2:
							{
								if(SlotValue[playerid][0]<100)return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
								GiveMoney(playerid,-100);
								_SetGun(playerid,43,100);
							}
						case 3:
							{
								if(SlotValue[playerid][19]==0)return SendError(playerid,"У вас нет мобильного телефона");
								if(SlotValue[playerid][0]<400)return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								if(BizInfo[BizEntered[playerid]][bProducts]<5)return SendError(playerid,"В магазине нет продуктов");
								new num=0,telephone = 1000000 + random(8999999);
								foreach(Player, i)//mitka
								{
									if((SlotValue[i][19] == telephone) && (i != playerid) )
									{
										SendError(playerid, "Произошла ошибка при покупке SIM карты, попробуйте ещё раз");
										num++;
										break;
									}
								}

								if(num==0)
								{
									format(string, sizeof(string), "[Информация] {FFFFFF}Вы купили новую SIM карту. Ваш новый номер телефона: {0AD6FF}%d", telephone);
									SendClientMessage(playerid, COLOR_VALIK, string);
									SlotValue[playerid][19]=telephone;
									GiveBizMoney(BizEntered[playerid],400);
									BizInfo[BizEntered[playerid]][bProducts] -= 5;
									GiveMoney(playerid,-400);
									switch(random(4))
									{
									case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще");
									case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего!");
									case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата");
									case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня");
									}
								}
							}
						}
					}
		            case 4:
		            {
		                PlayerBuyState[playerid] = listitem;
				        switch(listitem)
						{
					       	case 0: ShowPlayerDialogEx(playerid,15,5,"{43CD80}24/7 (Сигареты)",BUY_MENU_SMOKES2,"Купить","Назад");
							case 1: ShowPlayerDialogEx(playerid,15,5,"{43CD80}24/7 (Зажигалки)",BUY_MENU_LIGHTS2,"Купить","Назад");
						}
		            }
		            case 5:
		            {
		                switch(listitem)
						{
							case 0:
							{
							    if(!PlayerInfo[playerid][pSpining]) Buying(playerid,5,PlayerInfo[playerid][pSpining],1,500,"удочку для рыбалки"," {7396FB}Ловить рыбу можно на пирсе LS.{FFFFFF}");
								else
								{
									SendError(playerid,"У вас уже есть удочка");
									callcmd::shopss(playerid);
								}
							}
							case 1: Buying(playerid,0,PlayerInfo[playerid][pWorms],(15-PlayerInfo[playerid][pWorms]),20,"{7396FB}баночку червей{FFFFFF}","");
						}
		            }
              		case 6:
		            {
		                switch(listitem)
						{
					        case 0:
					        {
					            if(PlayerInfo[playerid][pArmours]>=5)
								{
									SendError(playerid,"У вас уже есть 5 бронежилетов");
									callcmd::shopss(playerid);
								}
								else Buying(playerid,30,PlayerInfo[playerid][pArmours],1,2000,"Бронежилет"," Используйте {7396FB}/armour{FFFFFF} чтобы надеть бронежилет");
					        }
					        case 1:
					        {
					            Buying(playerid,10,SlotValue[playerid][18],5-SlotValue[playerid][18],500,"яд"," Используйте инвентарь, чтобы употребить яд");
					        }
					        case 2:
					        {
					            if(PlayerDrunkLevel[playerid]!=1)return SendError(playerid,"Аптечки можно купить только если у вас есть рецепт от врача");
					            if(SlotValue[playerid][12] >= 5)
								{
									SendError(playerid,"У вас уже есть 5 аптечек");
									callcmd::shopss(playerid);
								}
								else
								{
									Buying(playerid,10,SlotValue[playerid][12],1,600,"Аптечка"," Используйте инвентарь, чтобы использовать аптечку");
									PlayerDrunkLevel[playerid]=0;
								}
					        }
					        case 3://рецепт
					        {
					            if(PlayerDrunkLevel[playerid]!=1)return SendError(playerid,"Эти таблетки можно купить только если у вас есть рецепт от врача");
					            if(TruckReset[playerid] >= 20)
								{
									SendError(playerid,"У вас уже есть 20 шт. этих таблеток");
									callcmd::shopss(playerid);
								}
								else
								{
									Buying(playerid,200,TruckReset[playerid],1,10000,"Таблетки"," Используйте {7396FB}/usebad{FFFFFF} чтобы употребить лекарство от наркозависимости");
									PlayerDrunkLevel[playerid]=0;
								}
					        }
					        case 4:
					        {
					            if(SlotValue[playerid][0]<50)return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
					            GiveMoney(playerid,-50);
					            _SetGun(playerid,14,1);
					            switch(random(4))
						        {
						            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще");
						            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего");
						            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата");
						            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня");
						        }
					        }
							case 5:
							{
							    if(SlotValue[playerid][0]<550)return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
							    if(SlotValue[playerid][1]==-1)return SendBotMessage(playerid,"Вы не проживаете ни в одном из домов");
								new house = SlotValue[playerid][1],bized= BizEntered[playerid];
								if(BizInfo[bized][bProducts] < 10) SendBotMessage(playerid,"Извините, но у нас закончились продукты");
								//бюбю
								
								BizInfo[bized][bProducts]-=10;
								GiveBizMoney(bized,450);
					            GiveMoney(playerid,-650);
					            HouseInfo[house][hMed]++;
					            
					            switch(random(4))
						        {
						            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще");
						            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего");
						            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата");
						            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня");
						        }
						        format(string,sizeof(string),"<< {FFFFFF}В вашем доме теперь {DEAF79}%d{FFFFFF} аптечек",HouseInfo[house][hMed]);
						        SendClientMessage(playerid,COLOR_GREEN,string);
							}
				        }
		            }
		            default: return false;
				}
		    }
		    else callcmd::shopss(playerid);
		}
		case 15:
		{
	        if(response)
	        {
	            switch(PlayerBuyState[playerid])
	            {
	                case 0:
	                {
			            switch(listitem)
						{
				            case 0: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),100,"пачку LM'а","Используйте инвентарь, чтобы закурить");
				            case 1: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),100,"пачку BOND'а","Используйте инвентарь, чтобы закурить");
				            case 2: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),100,"пачку Русского Стиля","Используйте инвентарь, чтобы закурить");
				            case 3: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),100,"пачку Kent'а","Используйте инвентарь, чтобы закурить");
				           	case 4: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),100,"пачку Оптимы","Используйте инвентарь, чтобы закурить");
				            case 5: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),200,"пачку Chesterfield'а","Используйте инвентарь, чтобы закурить");
				            case 6: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),200,"пачку Marllboro","Используйте инвентарь, чтобы закурить");
				            case 7: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),200,"пачку Parlament'а","Используйте инвентарь, чтобы закурить");
				            case 8: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),500,"упаковку сигар","Используйте инвентарь, чтобы закурить");
				            case 9: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),100,"пачку примы без фльтра","Используйте инвентарь, чтобы закурить");
				            case 10: Buying(playerid,0,SlotValue[playerid][15],(20-SlotValue[playerid][15]),100,"пачку беломора канала","Используйте инвентарь, чтобы закурить");
			            }
					}
					case 1:
					{
					    switch(listitem)
						{
						    case 0: Buying(playerid,3,SlotValue[playerid][16],75,200," автогеновую зажигалку ","{7396FB} Теперь вы сможете подкурить сигарету");
						    case 1: Buying(playerid,3,SlotValue[playerid][16],100,300,"зажигалку ' Zippo '","{7396FB} Теперь вы сможете подкурить сигарету");
						    case 2: Buying(playerid,3,SlotValue[playerid][16],50,100," зажигалку ' Cricket '","{7396FB} Теперь вы сможете подкурить сигарету");
						}
					}
					default: printf("Error! %s select 3rd case", Name(playerid));
				}
			}
		}
  case 16:
		{
		    if(response)
		    {
		        new biz = InfoBiz[playerid];
	         	if(biz != -1)
		        {
			        switch(listitem)
			        {
			            case 0:
			            {
			                if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[biz][bEnter][0],BizInfo[biz][bEnter][1],BizInfo[biz][bEnter][2])) EnterBiz(playerid, biz);
							else InfoBiz[playerid] = -1;
			            }
			            case 1:
			            {
							if(IsPlayerInRangeOfPoint(playerid, 2.0, BizInfo[biz][bEnter][0], BizInfo[biz][bEnter][1], BizInfo[biz][bEnter][2]))
			                {
			                	if(GetString(BizInfo[biz][bOwner],"The State"))
								{
									format(string,sizeof(string), "\
									{FFFFFF}Номер бизнеса: [{43CD80}%d{ffffff}]\n\
									{FFFFFF}Тип бизнеса: [{43CD80}%s{ffffff}]\n\
									{FFFFFF}Цена: [{43CD80}%d{ffffff}]\n\n\
									{FFFFFF}Для покупки нажмите {43CD80}'Купить'",biz,BizInfo[biz][bName],BizInfo[biz][bCost]);
									return ShowPlayerDialogEx(playerid,98,0,"{43CD80}Бизнес продаётся",string,"Купить","Отмена");
								}
								else
								{
									format(string,sizeof(string), "\
									{FFFFFF}Номер бизнеса: [{43CD80}%d{ffffff}]\n\
									{FFFFFF}Тип бизнеса: [{43CD80}%s{ffffff}]\n\
									{FFFFFF}Владелец: [{43CD80}%s{ffffff}]",biz,BizInfo[biz][bName],BizInfo[biz][bOwner]);
									return ShowPlayerDialogEx(playerid,INVALID_DIALOG_ID,0,"{43CD80}Информация",string,"Скрыть","");
								}
							}
							else InfoBiz[playerid] = -1;
			            }
			            default: return false;
					}
		        }
		    }
		}
		case 17:
		{
		    if(response)
		    {
		        new house = InfoHouse[playerid];
		        if(house != -1)
		        {
		            switch(listitem)
		            {
		                case 0:
		                {
		                    if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[house][hEnter][0],HouseInfo[house][hEnter][1],HouseInfo[house][hEnter][2]))
					        {
					            if(HouseInfo[house][hLock]>0 && !IsACop(playerid)) return SendClientMessage(playerid,COLOR_LIGHTRED,"Дверь закрыта, невозможно зайти");
				                HouseEntered[playerid] = house;
				                SetPlayerInterior(playerid,HouseInfo[house][hInt]);
				                SetPlayerVirtualWorld(playerid, (house+50) );
				                J_SetPlayerPos(playerid,HouseInfo[house][hExit][0],HouseInfo[house][hExit][1],HouseInfo[house][hExit][2]);

					        }
					        else InfoHouse[playerid] = -1;
		                }
		                case 1:
		                {
		                    if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[house][hEnter][0],HouseInfo[house][hEnter][1],HouseInfo[house][hEnter][2]))
					        {
			                    if(GetString(HouseInfo[house][hOwner],"The State"))
								{
									format(string,sizeof(string),"\
									{FFFFFF}Номер дома: [{43CD80}%d{ffffff}]\n\
									{FFFFFF}Цена дома: [{43CD80}$%d{ffffff}]\n\n\
									{FFFFFF}Для покупки нажмите {43CD80}'Купить'",house,HouseInfo[house][hCost]);
									return ShowPlayerDialogEx(playerid,29,0,"{43CD80}Дом продаётся",string,"Купить","Отмена");
								}
								else
								{
									format(string,sizeof(string), "\
									{FFFFFF}Номер дома: [{43CD80}%d{ffffff}]\n\
									{FFFFFF}Владелец: [{43CD80}%s{ffffff}]\n\
									{FFFFFF}Аренда: [{43CD80}%d{ffffff}]\n\n\
									{FFFFFF}Для входа нажмите {43CD80}'Войти'",house,HouseInfo[house][hOwner],HouseInfo[house][hRent]);
								    return ShowPlayerDialogEx(playerid,30,0,"{43CD80}Вход",string,"Войти","Отмена");
								}
							}
							else InfoHouse[playerid] = -1;
		                }
		                default: return false;
		            }
		        }
		    }
		}
		case 23:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowStats(playerid,playerid);
		            case 1: ShowLicenses(playerid, playerid, INVALID_DIALOG_ID);
		            case 2: ShowSkills(playerid, playerid, INVALID_DIALOG_ID);
              		case 3: ShowStyles(playerid, playerid, INVALID_DIALOG_ID);
		            default: return false;
		        }
		    }
		    else ShowMenu(playerid);
		}
  		case 24:
		{
			if(response)
			{
			    new id = SGunOffer[playerid];
			    if(GetMoney(playerid) >= SGunPrice[playerid])
			    {
			        if(SlotValue[id][11] >= SGunMats[playerid])
					{
					    if(ProxDetectorS(3, playerid, id, 1))
						{
							if(GetMoney(playerid) >= SGunPrice[playerid])
						 	{
						 		if(SlotValue[id][11] >= SGunMats[playerid])
								{
								    format(string,sizeof(string),"%s[%d] cделал себе оружие",PlayerName[playerid],playerid);
								    SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 15.0, 5000);
								    ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								    _SetGun(playerid,SGunID[playerid],SGunAmmo[playerid]);
								   	GiveMoney(playerid,-SGunPrice[playerid],"SellGun-");
								   	GiveMoney(id,SGunPrice[playerid],"SellGun+");
									if(TalentsInfo[id][2][1] == 1)SlotValue[id][11] -= SGunMats[playerid]-floatround(SGunMats[playerid]/95);
								   	else SlotValue[id][11] -= SGunMats[playerid];
								   	SGunOffer[playerid] = INVALID_PLAYER_ID;
								   	SGunPrice[playerid] = 0;
								   	SGunAmmo[playerid] = 0;
								   	SGunID[playerid] = 0;
									if(id != playerid)
									{
										SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы приобрели оружие у бандита");
										SendClientMessage(id,COLOR_VALIK,"[Информация] {FFFFFF}Вы успешно продали оружие");
									}
								}
								else SendError(playerid,"У вас не хватает материалов");
							}
							else SendClientMessage(id,COLOR_RED,"У вас не хватает денег");
							SGunOffer[playerid] = INVALID_PLAYER_ID;
						}
			    	}
			    }
			    else SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
			}
			return true;
		}
		case 26:
		{
		    if(response)
		    {
		        new id = MLPlayer[playerid];
				if(listitem+1 == 25){
					SendError(playerid, "Данная организация недоступна");
					return callcmd::makeleader(playerid, IntToStr(id));
				}
          		if(GetString(OrgInfo[listitem+1][oLeader],"Свободна"))
		        {
		            if(PlayerInfo[id][pLeader] > 0)SetString(OrgInfo[PlayerInfo[id][pLeader]][oLeader],"Свободна");
		            SetString(OrgInfo[listitem+1][oLeader],Name(id));
		            PlayerInfo[id][pMember] = listitem+1;
		            PlayerInfo[id][pLeader] = listitem+1;
		            PlayerInfo[id][pDCTime]=3;
			        SendClientMessage(id,COLOR_LIGHTBLUE,"Местом спавна автоматически назначена организация. Изменить место спавна >> /setspawn");
		            PlayerInfo[id][pRank] = OrgInfo[listitem+1][Max_Rang];
		            format(string,sizeof(string),"Администратор %s назначил вас лидером организации '%s'",Name(playerid),OrgInfo[listitem+1][oName]);
		            SendClientMessage(id,COLOR_VALIK,string);
		            format(string,sizeof(string),"[A] %s назначил игрока %s лидером организации '%s'",Name(playerid),Name(id),OrgInfo[listitem+1][oName]);
		            SendAdminsMessage(COLOR_VALIK,string);
		            ResetSpawnInfo(id, listitem+1);
					PlayerInfo[id][pFracSkin] = GetSkinForPlayer(id);
		            SaveOrg(listitem+1);
                    SaveAccount(id);
		        }
		        else
		        {
		            if(!GetString(Name(id), OrgInfo[listitem+1][oLeader]))
		            {
						format(string,sizeof(string),"{FFFFFF}\
						Ошибка! У этой организации уже есть лидер!\n\
						Текущий лидер: {B83434}%s{FFFFFF}\n\
						Хотите его снять с лидерства и назначить лидером {B83434}%s?",OrgInfo[listitem+1][oLeader],Name(id));
						ShowPlayerDialogEx(playerid,27,0,"{43CD80}Подтверждение",string,"Да","Отмена");
						MLeader[playerid] = listitem+1;
					}
					else SendError(playerid,"Этот человек уже лидер этой организации");
		        }
		    }
		    return true;
		}
		case 27:
		{
		    if(response)
		    {
		        new leader = MLeader[playerid];
		        new id = MLPlayer[playerid];
		        new unleader;
		        new player = NameID(OrgInfo[leader][oLeader]);
			    if(player != INVALID_PLAYER_ID)
				{
					if(IsACop(player))
					{
						if(UsingShield[player])RemovePlayerAttachedObject(player, 7);
						PlayerInfo[player][pShield] = 0.0;
					}
		        	PlayerInfo[player][pLeader] = 0;
    				PlayerInfo[player][pMember] = 0;
    				PlayerInfo[player][pDCTime]=0;
        			PlayerInfo[player][pRank] = 0;
    				PlayerInfo[player][pJob] = 0;
    				TeamDuty[player] = false;
			    	format(string,sizeof(string),"[Информация] {FFFFFF}Администратор %s выгнал вас из организации",Name(playerid));
			    	SendClientMessage(player,COLOR_VALIK,string);
			    	SendClientMessage(player,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");

			    	format(string,sizeof(string),"[Информация] {FFFFFF}Администратор %s выгнал игрока %s из должности лидерства",Name(playerid),Name(player));
			    	SendAdminsMessage(COLOR_VALIK,string);

			    	PlayerUnleader(player, Name(player));
			    	SetBumSkin(player);
			   		unleader = 1;
		        }
		        if(!unleader)PlayerUnleader(INVALID_PLAYER_ID, OrgInfo[leader][oLeader]);
		        if(PlayerInfo[id][pLeader] > 0)
		        {
		            new led = PlayerInfo[id][pLeader];
		            SetString(OrgInfo[led][oLeader],"Свободна");
		        }
		        SetString(OrgInfo[leader][oLeader],Name(id));

		        PlayerInfo[id][pMember] = leader;
	            PlayerInfo[id][pLeader] = leader;
	            PlayerInfo[id][pDCTime]=3;
		        SendClientMessage(id,COLOR_LIGHTBLUE,"Местом спавна автоматически назначена организация. Изменить место спавна >> /setspawn");
	            PlayerInfo[id][pRank] = OrgInfo[leader][Max_Rang];
		        ResetSpawnInfo(id, leader);
		        format(string,sizeof(string),"Администратор %s назначил вас лидером организации '%s'",Name(playerid),OrgInfo[leader][oName]);
		        SendClientMessage(id,COLOR_VALIK,string);
		        format(string,sizeof(string),"Вы назначили игрока %s лидером организации '%s'",Name(id),OrgInfo[leader][oName]);
		        SendClientMessage(playerid,COLOR_VALIK,string);

		        format(string,sizeof(string),"[A] Администратор %s назначил игрока %s лидером организации '%s'",Name(playerid),Name(id),OrgInfo[leader][oName]);
		        SendAdminsMessage(COLOR_VALIK,string);

		        PlayerSpawn(id);
		        SaveOrg(leader);
		        SaveAccount(id);
		    }
		    return true;
		}
  		case 28:
		{
		    if(response)
		    {
     			new hour,minuite,second;
			    gettime(hour,minuite,second);
				if(PlayerInfo[playerid][pJob]== GetJob[playerid])return SendBotMessage(playerid,"Вы и так уже тут работаете");
				if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 18 ))
				{
					SendError(playerid,"Гос.организации могут работать с 18:00 до 10:00");
			 		return 1;
				}
		        PlayerInfo[playerid][pJob] = GetJob[playerid];
			    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			 	SendBotMessage(playerid,"Используйте '/jobhelp', '/help', чтобы изучить работу");
				ResetDynamicCPs(playerid);
				NumInc_CP[playerid]=-1;
			    return true;
			}
		}

		case 29:
		{
		    if(response)
		    {
		        if(IsValidPassport(playerid))
			    {
			        new house = InfoHouse[playerid];
			        if(SlotValue[playerid][1] == -1)
			        {
				        if(GetString(HouseInfo[house][hOwner],"The State"))
			     	    {
			     	        if(GetMoney(playerid) >= HouseInfo[house][hCost])
			     	        {
		     	                HouseEntered[playerid] = house;
		     	                PlayerInfo[playerid][pDCTime]=2;
		     	                SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ваш дом. Изменить место спавна >> /setspawn");
		     	                GiveMoney(playerid,-HouseInfo[house][hCost],"BuyHouse");
		     	                SlotValue[playerid][1] = house;
		     	                foreach(new i:Player)
							 	{
								 	if(HouseNalog[i] == house)
									{
									    callcmd::stopjob(i);
								        SendClientMessage(i,COLOR_RED,"Дом над которым вы работаете был выкуплен. Начните работу заново");
									}
								}
		     	                SetPlayerInterior(playerid,HouseInfo[house][hInt]);
			               	 	SetPlayerVirtualWorld(playerid,house+50);
		     	                J_SetPlayerPos(playerid,HouseInfo[house][hExit][0],HouseInfo[house][hExit][1],HouseInfo[house][hExit][2]);
			               	 	SetString(HouseInfo[house][hOwner],PlayerName[playerid]);
			               	 	UpdateHouse(house);
		     	                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Поздравляем! Теперь этот дом ваш");
		     	                PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
		     	                SaveAccount(playerid);
								new logtime[3],logdate[3],logtimestring[16];
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Покупка дома",-HouseInfo[house][hCost],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		     	                //SaveHouse(house);
								return true;
			     	        }
			     	        else SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		     	        }
		     	        else SendError(playerid,"Этот дом уже куплен");
	     	        }
	     	        else SendError(playerid,"У вас уже есть дом/либо вы арендуете чей то");
	     	    }
	     	    else SendError(playerid,"У вас нет паспорта, получить его можно в мэрии");
		    }
		    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		    return true;
		}
		case 30:
		{
		    if(response)
		    {
		        new house = InfoHouse[playerid];
		        if(HouseInfo[house][hLock]>0 && !IsACop(playerid)) return SendClientMessage(playerid,COLOR_LIGHTRED,"Дверь закрыта, невозможно зайти");
      			HouseEntered[playerid] = house;
      			SetPlayerInterior(playerid,HouseInfo[house][hInt]);
      			SetPlayerVirtualWorld(playerid, (house+50) );
      			J_SetPlayerPos(playerid,HouseInfo[house][hExit][0],HouseInfo[house][hExit][1],HouseInfo[house][hExit][2]);

		    }
		    else NoEnterPickup[playerid] = 3;
		    return true;
		}
		case 32:
		{
			if(!response){
				if(GetPVarInt(playerid, "showedinv"))return SelectTextDraw(playerid, 0x0099FFAA);
				return ShowMenu(playerid);
			}
			if(response)
			{
				if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
				while(strfind(inputtext,"%",true)!=-1)strdel(inputtext,strfind(inputtext,"%",true),strfind(inputtext,"%",true)+2);
				if(strlen(inputtext) < 1 || strlen(inputtext) > 100) return SendError(playerid,"Не менее 1 и не более 100 символов");
				new i = -1;
				for(new s; s < MAX_REPORTS; s++)
				{
					if(!ReportInfo[s][re_OwnerSQLID])
					{
						i = s;
						break;
					}
				}
				if(i == -1) return SendError(playerid, "К сожалению, очередь на сообщения занята, попробуйте позже");
				ReportInfo[i][re_OwnerID] = playerid;
				ReportInfo[i][re_OwnerSQLID] = PlayerInfo[playerid][pID];
				format(ReportInfo[i][re_Text], 100, inputtext);
				new temp[200];
				TotalReports++;
				format(temp,sizeof(temp),"{FFFFFF}Отправлено администрации: {43CD80}%s\n\n{7396FB}Администраторов онлайн: %d человек\nНе покидайте игру, если хотите получить ответ", inputtext, Iter_Count(Admins));
				ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",temp,"Скрыть","");
				format(temp,sizeof(temp),"[REPORT] %s[%d]: {ffffff}%s | Уже %d репортов!",PlayerName[playerid],playerid,inputtext, TotalReports);
				AdminChat(COLOR_LIME,temp);
				format(temp,sizeof(temp),"Используйте /pm %d для быстрого ответа | /ans - Очередь",playerid);
				AdminChat(0x43CD80ff,temp);
				PlayerPlaySound(playerid, 5205, 0.0, 0.0, 0.0);
				SetPVarInt(playerid,"reportdelay",gettime()+15);
				foreach(Admins, a)
				{
					if(ADuty[a]!=228 && !PlayerInfo[a][pHelper])continue;
					PlayerPlaySound(a, 45400, 0.0, 0.0, 0.0);
					GameTextForPlayer(a, "~n~~n~~n~~n~~n~~y~+Report", 3000, 5);
				}
			}
		}
		case 8020:
		{
			if(!response) return 1;
			if(!IsPlayerConnected(ReportInfo[ReportID[playerid]][re_OwnerID]) || PlayerInfo[ReportInfo[ReportID[playerid]][re_OwnerID]][pID] != ReportInfo[ReportID[playerid]][re_OwnerSQLID])
			{
				SendError(playerid, "Вопрос более не актуален");
				ClearReport(ReportID[playerid]);
				return 1;
			}
			new temp[200];
			new otvetil[16];
			if(PlayerInfo[playerid][pAdmin])SetString(otvetil, "Администратор");
			else SetString(otvetil, "Хелпер");
			if(!strlen(inputtextsave)){
				f(string, "[A] %s %s[%d] не смог ответить на репорт", otvetil, Name(playerid), playerid);
				SendAdminsMessage(COLOR_LIGHTRED, string);
				return 1;
			}
			format(temp, sizeof temp,"[A] %s %s[%d] для %s[%d]:{ffffff} %s",otvetil,PlayerName[playerid],playerid,PlayerName[ReportInfo[ReportID[playerid]][re_OwnerID]],ReportInfo[ReportID[playerid]][re_OwnerID],inputtext);
			AdminChat(COLOR_ORANGE,temp);
			format(temp, sizeof temp,"[A] %s %s[%d]:{ffffff} %s",otvetil,PlayerName[playerid],playerid,inputtext);
			if(!PlayerInfo[ReportInfo[ReportID[playerid]][re_OwnerID]][pAdmin])SendClientMessage(ReportInfo[ReportID[playerid]][re_OwnerID],COLOR_ORANGE,temp);
			PlayerPlaySound(ReportInfo[ReportID[playerid]][re_OwnerID], 5205, 0.0, 0.0, 0.0);
			ClearReport(ReportID[playerid]);
		}
		case 7811:
		{
		    if(response)
		    {
          		//new Float:x,Float:y,Float:z;
          		GetPlayerPos(playerid,PlayerInfo[playerid][pOld][0],PlayerInfo[playerid][pOld][1],PlayerInfo[playerid][pOld][2]);
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(PlayerInfo[playerid][pLeftPosx]==0)
		                {
			                PlayerInfo[playerid][pLeftPosx]=PlayerInfo[playerid][pOld][0];
			                PlayerInfo[playerid][pLeftPosy]=PlayerInfo[playerid][pOld][1];
						}
						else
						{
						    PlayerInfo[playerid][pLeftPosx]=0;
			                PlayerInfo[playerid][pLeftPosy]=0;
						}
		            }
		            case 1:
		            {
		                if(PlayerInfo[playerid][pRightPosx]==0)
		                {
			                PlayerInfo[playerid][pRightPosx] = PlayerInfo[playerid][pOld][0];
			                PlayerInfo[playerid][pRightPosy] = PlayerInfo[playerid][pOld][1];
						}
						else
						{
						    PlayerInfo[playerid][pRightPosx] = 0;
			                PlayerInfo[playerid][pRightPosy] = 0;
						}
		            }
		            case 2:
		            {
		                if(GetPVarInt(playerid,"kofecient")==0)
						{
							SetPVarInt(playerid,"kofecient",1);
							callcmd::housescost(playerid);
							return false;
						}
						else SetPVarInt(playerid,"kofecient",GetPVarInt(playerid,"kofecient")+1);
						if(GetPVarInt(playerid,"kofecient")>15) SetPVarInt(playerid,"kofecient",1);
		            }
		            case 3:
		            {
		                if(GetPVarInt(playerid,"naloger")==0)
		                {
                            SetPVarInt(playerid,"naloger",1);
                            callcmd::housescost(playerid);
							return false;
		                }
		                else SetPVarInt(playerid,"naloger",GetPVarInt(playerid,"naloger")*2);
						if(GetPVarInt(playerid,"naloger")>50000) SetPVarInt(playerid,"naloger",1);
					}
					case 4:
					{
					    for(new i = 0;i < OWNABLEHOUSES;i++)
						{
							if(HouseInfo[i][hCost]<120000)
							{
                                HouseInfo[i][hCost] = HouseInfo[i][hCost]*4;
                                UpdateHouse(i);
							}
						}
						SendError(playerid,"Готово");
					}
					case 5:
					{
					    if(PlayerInfo[playerid][pRightPosx]==0) return SendError(playerid,"Ты не установил левую нижнюю точку");
					    if(PlayerInfo[playerid][pRightPosx]==0) return SendError(playerid,"Ты не установил правую нижнюю точку");
					    if(GetPVarInt(playerid,"kofecient")==0) return SendError(playerid,"Коефициент не может быть 0");
					    new num;
					    for(new i = 0;i < OWNABLEHOUSES;i++)
						{
						    if((HouseInfo[i][hEnter][0] <= PlayerInfo[playerid][pRightPosx] && HouseInfo[i][hEnter][0] >= PlayerInfo[playerid][pLeftPosx]) && (HouseInfo[i][hEnter][1] <= PlayerInfo[playerid][pRightPosy] && HouseInfo[i][hEnter][1] >= PlayerInfo[playerid][pLeftPosy]))
							{
							    HouseInfo[i][hCost] = HouseInfo[i][hCost]*GetPVarInt(playerid,"kofecient");
							    if(GetPVarInt(playerid,"naloger")>0) HouseInfo[i][hNalog] = GetPVarInt(playerid,"naloger");
							    UpdateHouse(i);
    							//SaveHouse(i);
								num++;
							}
						}
						if(GetPVarInt(playerid,"naloger")==0)format(string,sizeof(string),"[INFO] {FFFFFF}Изменили стоимость %d домам",num);
						else format(string,sizeof(string),"[INFO] {FFFFFF}Изменили стоимость %d домам и налог на $%d",num,GetPVarInt(playerid,"naloger"));
						SendClientMessage(playerid,COLOR_RED,string);
					}
		        }
		        callcmd::housescost(playerid);
		    }
		}
		case 399:
		{
		    new Float:x, Float:y, Float:z, Float:angle;
		    GetPlayerPos(playerid, x, y, z);
		    GetPlayerFacingAngle(playerid, angle);
		    x += floatsin(-angle, degrees);
		    y += floatcos(-angle, degrees);
		    if(response)
		    {
		        new idobject;
		        for(idobject = 0;idobject<MAX_OGRAD;idobject++)
		        {
		            if(object[idobject]==-1) break;
		        }
		        if(GetPlayerVirtualWorld(playerid)!=0 || GetPlayerInterior(playerid)!=0)return SendError(playerid,"В здании нельзя положить обьект");
		        switch(listitem)
		        {
					case 0:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(1423, x, y, z-0.25, 0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;
					}
					case 1:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(1237, x,y,z-1.0,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 2:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(1238, x,y,z-0.65,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 3:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(1282, x,y,z-0.3,0, 0, angle-90);
						PlayerInfo[playerid][pObjikt]--;}
					case 4:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(1425, x,y,z-0.6,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 5:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(19425, x,y,z-0.9,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 6:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(983, x,y,z-0.3,0, 0, angle-90);
						PlayerInfo[playerid][pObjikt]--;}
					case 7:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(970, x,y,z-0.5,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 8:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(11699, x,y,z-1.1,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 9:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(19950, x,y,z-1.1,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 10:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(19967, x,y,z-1.1,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 11:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(19966, x,y,z-1.1,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 12:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(19976,  x,y,z-1.1,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 13:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(19974, x,y,z-1.1,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}

					case 14:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(19957, x,y,z-1.1,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 15:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(19955, x,y,z-1.1,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 16:
					{
					    if(PlayerInfo[playerid][pObjikt]==0)return SendError(playerid,"У вас не осталось обьектов для установки");
						object[idobject] = CreateDynamicObject(19956, x,y,z-1.1,0, 0, angle);
						PlayerInfo[playerid][pObjikt]--;}
					case 17:return callcmd::putobject(playerid);
					case 18:
					{
					    for(new i;i<MAX_OGRAD;i++)
					    {
					        if(object[i]!=-1)
					        {
						        GetDynamicObjectPos(object[i],x,y,z);
								if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
								{
								    DestroyDynamicObject(object[i]);
								    object[i]=-1;
								    SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы забрали обьект");
								    if(PlayerInfo[playerid][pObjikt]<10) PlayerInfo[playerid][pObjikt]++;
								    return 1;
								}
							}
						}
						SendError(playerid,"Возле вас нет обьектов");
						return false;
					}
		        }
          		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
				Streamer_Update(playerid);
		    }
		}

		case 401:
		{
		    if(response)
		    {
		        switch(listitem)
			    {
			        case 0: ShowPlayerDialogEx(playerid,402,2,"{43CD80}Править налоги","{7396FB}[1] Информация\n[2] Изменить часовую плату за дом\n[3] Изменить часовую плату за бизнес\n[4] Изменить часовую плату за авто","Принять","Отмена");
			        case 1: ShowPlayerDialogEx(playerid,404,2,"{43CD80}Править цены на аренду","{7396FB}[1] Информация\n[2] Изменить цену на аренду свободного транспорта\n[3] Изменить цены на аренду рабочего транспорта","Принять","Отмена");
			        case 2: ShowPlayerDialogEx(playerid,405,2,"{43CD80}Править премии","{7396FB}[1] Информация\n[2] Изменить премию полицейским\n[3] Изменить премию за доставку материалов\n[4] Изменить премию за убийство бандита в з.з.\n[5] Изменить премию за редакцию объявлений\n[6] Изменить премию за проведение помолвки","Принять","Отмена");
					case 3: ShowPlayerDialogEx(playerid,397,2,"{43CD80}Глобальные настройки","{7396FB}[1] Информация\n[2] Направление налогов\n[3] Пополнить баланс организации (за счет казны)\n[4] Изменить цену залога за заключённого\n[5] Изменить стоимость закупки продуктов на ферме\n[6] Изменить стоимость закупки предметов на грузчиках","Принять","Отмена");
			    }
		    }
		}
		case 397:
		{
		    new pole[400];
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                string = "";
	                 	strcat(string,"\n\n\\c{FF4400}Обратите внимание, что вы можете перенаправлять прием налогов на другие организации\n\\cчтобы пополнить их баланс или внести деньги лично из казны штата\n");
	                  	strcat(string,"\\cКаждой организации необходимо иметь деньги на счету банка, чтобы выплачивать\n\\cпремии своим работникам, а также закупать материалы и продукты у других предприятий и фракций\n\n");
						format(pole,sizeof(pole),"\\c{FFFFFF}%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n",
						OrgInfo[TEAM_LSPD][oName],OrgInfo[TEAM_LSPD][oBank],OrgInfo[TEAM_RCPD][oName],OrgInfo[TEAM_RCPD][oBank],OrgInfo[TEAM_FBI][oName],OrgInfo[TEAM_FBI][oBank],OrgInfo[TEAM_SFPD][oName],OrgInfo[TEAM_SFPD][oBank],OrgInfo[TEAM_M4C][oName],OrgInfo[TEAM_M4C][oBank]);
						strcat(string,pole);
						format(pole,sizeof(pole),"\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n",
						OrgInfo[TEAM_MERIALS][oName],OrgInfo[TEAM_MERIALS][oBank],OrgInfo[TEAM_MERIALV][oName],OrgInfo[TEAM_MERIALV][oBank],OrgInfo[TEAM_LICENSERS][oName],OrgInfo[TEAM_LICENSERS][oBank],OrgInfo[TEAM_RADIO][oName],OrgInfo[TEAM_RADIO][oBank],
						OrgInfo[TEAM_ARMY][oName],OrgInfo[TEAM_ARMY][oBank],OrgInfo[TEAM_BANK][oName],OrgInfo[TEAM_BANK][oBank],OrgInfo[TEAM_RADIOSF][oName],OrgInfo[TEAM_RADIOSF][oBank]);
						strcat(string,pole);
						format(pole,sizeof(pole),"\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\\c%s: {7396FB}$%d{FFFFFF}\n\n",
						OrgInfo[TEAM_MEDICLV][oName],OrgInfo[TEAM_MEDICLV][oBank],OrgInfo[TEAM_PDLV][oName],OrgInfo[TEAM_PDLV][oBank],OrgInfo[TEAM_RADIOLV][oName],OrgInfo[TEAM_RADIOLV][oBank],OrgInfo[TEAM_ARMYLV][oName],OrgInfo[TEAM_ARMYLV][oBank],OrgInfo[TEAM_ARMYSF][oName],OrgInfo[TEAM_ARMYSF][oBank]);
						strcat(string,pole);
      					format(pole,sizeof(pole),"\\c{FFFFFF}Получатель налогов: {7396FB}%s\n{FFFFFF}",OrgInfo[GLS[13]][oName]);
						strcat(string,pole);
						format(pole,sizeof(pole),"\\c{FFFFFF}Залог за заключённого: {7396FB}$%d\n{FFFFFF}",GLS[21]);
						strcat(string,pole);
						format(pole,sizeof(pole),"\\c{FFFFFF}Закупка продуктов на ферме: {7396FB}$%d\n\n",GLS[31]);
						strcat(string,pole);
		                Dialog_Open(playerid,0,0,"{43CD80}Информация",string,"Скрыть","");
		            }
		            case 1: ShowPlayerDialogEx(playerid,398,2,"{43CD80}Перенаправить налоги","\
					LSPD\n\
					RCSD\n\
					FBI\n\
					SFPD\n\
					Больница LS\n\
					Правительство\n\
					Больница SF\n\
					Центр лицензирования\n\
					LSFM\n\
					Army LS\n\
					Центральный банк\n\
					Больница LV\n\
					LVPD\n\
					LVFM\n\
					Army LV\n\
					SFFM\n\
					Army SF","Принять","Отмена");
					case 2: ShowPlayerDialogEx(playerid,396,2,"{43CD80}Пополнить баланс","\
					LSPD\n\
					RCSD\n\
					FBI\n\
					SFPD\n\
					Больница LS\n\
					Правительство\n\
					Больница SF\n\
					Центр лицензирования\n\
					LSFM\n\
					Army LS\n\
					Центральный банк\n\
					Больница LV\n\
					LVPD\n\
					LVFM\n\
					Army LV\n\
					SFFM\n\
					Army SF","Принять","Отмена");
					case 3:
					{
					    format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение суммы залога может повлиять на развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 90000");
		                ShowPlayerDialogEx(playerid,425,1,"{43CD80}Изменить цену залога",string,"Принять","Отмена");
					}
					case 4:
					{
					    format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение цены на закупку продуктов может повлиять на развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 10");
		                ShowPlayerDialogEx(playerid,426,1,"{43CD80}Изменить стоимость закупки продуктов",string,"Принять","Отмена");
					}
					case 5:
					{
					    format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение цены на закупку предметов может повлиять на развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 15");
		                ShowPlayerDialogEx(playerid,427,1,"{43CD80}Изменить стоимость закупки предметов",string,"Принять","Отмена");
					}
		        }
			}
		}
		case 396:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
          			case 0: selfrac[playerid]=1;
		            case 1: selfrac[playerid]=2;
		            case 2: selfrac[playerid]=3;
		            case 3: selfrac[playerid]=4;
		            case 4: selfrac[playerid]=5;
		            case 5: selfrac[playerid]=6;
		            case 6: selfrac[playerid]=8;
		            case 7: selfrac[playerid]=9;
		            case 8: selfrac[playerid]=10;
		            case 9: selfrac[playerid]=20;
		            case 10: selfrac[playerid]=21;
		            case 11: selfrac[playerid]=22;
		            case 12: selfrac[playerid]=23;
		            case 13: selfrac[playerid]=24;
		            case 14: selfrac[playerid]=7;
		            case 15: selfrac[playerid]=TEAM_RADIOSF;
		            case 16: selfrac[playerid]=TEAM_ARMYSF;
		        }
		        format(string,sizeof(string),"{7396FB}Вы действительно хотите пополнить баланс %s?\n{FFFFFF}Казна штата: $%d\n\nВведите в строку число от 1 до %d",OrgInfo[selfrac[playerid]][oName],OrgInfo[TEAM_MERIALS][oBank],OrgInfo[TEAM_MERIALS][oBank]);
          		ShowPlayerDialogEx(playerid,395,1,"{43CD80}Пополнить баланс организации",string,"Принять","Отмена");
			}
		}
		case 395:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || OrgInfo[TEAM_MERIALS][oBank]<money) return SendError(playerid,"Вы не можете перевести такую сумму");
				OrgInfo[selfrac[playerid]][oBank]+=money;
				SaveOrg(selfrac[playerid]);
				OrgInfo[TEAM_MERIALS][oBank]-=money;
				SaveOrg(TEAM_MERIALS);
				format(string,sizeof(string),"Губернатор %s[%d] пополнил баланс организации %s на $%d",PlayerName[playerid],playerid,OrgInfo[selfrac[playerid]][oName],money);
				SendGosMessage(0x73B461FF,string);
				selfrac[playerid]=0;
		    }
		}
		case 398:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: GLS[13] = 1;
		            case 1: GLS[13] = 2;
		            case 2: GLS[13] = 3;
		            case 3: GLS[13] = 4;
		            case 4: GLS[13] = 5;
		            case 5: GLS[13] = 6;
		            case 6: GLS[13] = 8;
		            case 7: GLS[13] = 9;
		            case 8: GLS[13] = 10;
		            case 9: GLS[13] = 20;
		            case 10: GLS[13] = 21;
		            case 11: GLS[13] = 22;
		            case 12: GLS[13] = 23;
		            case 13: GLS[13] = 24;
		            case 14: GLS[13] = 7;
		            case 15: GLS[13] = TEAM_RADIOSF;
		            case 16: GLS[13] = TEAM_ARMYSF;
				}
				format(string,sizeof(string),"Губернатор %s[%d] перенаправил прием налогов на %s",PlayerName[playerid],playerid,OrgInfo[GLS[13]][oName]);
				SendGosMessage(0x73B461FF,string);
			}
		}
		case 402:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                format(string,sizeof(string),"\n\n\\c{FFFFFF}Получатель налогов: {7396FB}%s\n\\cБаланс организации получателя: {FFFFFF}$%d{FFFFFF}\n\n\n\\cНалог на дом: {7396FB}$%d{FFFFFF}\n\\cНалог на бизнес: {7396FB}$%d{FFFFFF}\n\\cНалог на авто: {7396FB}$%d\n\n",OrgInfo[GLS[13]][oName],OrgInfo[GLS[13]][oBank],GLS[2],GLS[3],GLS[1]);
		                Dialog_Open(playerid,0,0,"{43CD80}Информация о налогах штата",string,"Принять","");
		            }
		            case 1:
		            {
		                format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение налогов на дома может повлиять на дальнейшее развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 200");
		                ShowPlayerDialogEx(playerid,406,1,"{43CD80}Изменить часовую плату за дом",string,"Принять","Отмена");
		            }
		            case 2:
		            {
		                format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение налогов на бизнес может повлиять на дальнейшее развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 1000");
		                ShowPlayerDialogEx(playerid,407,1,"{43CD80}Изменить часовую плату за бизнес",string,"Принять","Отмена");
		            }
		            case 3:
		            {
		                format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение налогов на авто может повлиять на дальнейшее развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 200");
		                ShowPlayerDialogEx(playerid,408,1,"{43CD80}Изменить часовую плату за авто",string,"Принять","Отмена");
		            }
		        }
		    }
		    else callcmd::economy(playerid);
		}
		case 118:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >SlotValue[playerid][0]) return SendBotMessage(playerid,"Уважаемый, укажите корректную сумму");
				OrgInfo[PlayerInfo[playerid][pMember]][oBank]+=money;
				GiveMoney(playerid,-money,"bank");
				format(string,sizeof(string),"%s пополнил счет организации на $%d",PlayerName[playerid],money);
				SendTeamMessage(PlayerInfo[playerid][pMember],0x73B461FF,string);
				SaveOrg(PlayerInfo[playerid][pMember]);
				SendBankBot(playerid);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Пополнение баланса организации",-money,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		    }
		}
		case 406:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >200) return SendError(playerid,"Вы не можете установить такой налог");
				GLS[2] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в налоги на оплату дома. Теперь почасовая плата за дом составляет $%d",PlayerName[playerid],playerid,money);
				SendClientMessageToAll(0x73B461FF,string);
		    }
		}
		case 407:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >1000) return SendError(playerid,"Вы не можете установить такой налог");
				GLS[3] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в налоги на оплату бизнеса. Теперь почасовая плата составляет $%d",PlayerName[playerid],playerid,money);
				SendClientMessageToAll(0x73B461FF,string);
		    }
		}
		case 408:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >200) return SendError(playerid,"Вы не можете установить такой налог");
				GLS[1] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в налоги на оплату авто. Теперь почасовая плата составляет $%d",PlayerName[playerid],playerid,money);
				SendClientMessageToAll(0x73B461FF,string);
		    }
		}
		case 404:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                format(string,sizeof(string),"\n\n\\c{7396FB}Получатель налогов: %s\n\\cСостояние организации получателя: {FFFFFF}$%d{FFFFFF}\n\n\n\\cСвободный транспорт: {7396FB}%d{FFFFFF}\n\\cАвтобусы: {7396FB}%d{FFFFFF}",OrgInfo[GLS[13]][oName],OrgInfo[GLS[13]][oBank],GLS[14],GLS[15]);
		                Dialog_Open(playerid,0,0,"{43CD80}Информация о аренде",string,"Принять","");
		            }
		            case 1:
		            {
		                format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение цен на аренду транспорта может повлиять на развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 1000");
		                ShowPlayerDialogEx(playerid,418,1,"{43CD80}Изменить цены на аренду транспорта",string,"Принять","Отмена");
		            }
		            case 2:
		            {
		                format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение цен на аренду транспорта может повлиять на развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 1000");
		                ShowPlayerDialogEx(playerid,419,1,"{43CD80}Изменить цены на аренду раб.транспорта",string,"Принять","Отмена");
		            }
		        }
			}
			else callcmd::economy(playerid);
		}
		case 418:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >1000) return SendError(playerid,"Вы не можете установить такую цену на аренду");
				GLS[14] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в аренду транспорта. Теперь стоимость аренды составляет $%d",PlayerName[playerid],playerid,money);
				SendClientMessageToAll(0x73B461FF,string);
		    }
		}
		case 419:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >1000) return SendError(playerid,"Вы не можете установить такую цену на аренду");
				GLS[15] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в аренду рабочего транспорта. Теперь стоимость аренды составляет $%d",PlayerName[playerid],playerid,money);
				SendClientMessageToAll(0x73B461FF,string);
		    }
		}
		case 405:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                format(string,sizeof(string),"\n\n\\c{7396FB}Получатель налогов: %s\n\\c{7396FB}Состояние организации получателя: {FFFFFF}$%d{FFFFFF}\n\n\n\\cПремия за поимку преступника: {7396FB}$%d{FFFFFF}\n\\cПремия за доставку материалов: {7396FB}$%d{FFFFFF}\n\\cПремия за убийство бандита: {7396FB}$%d{FFFFFF}\n\\cПремия за обработку объявлений: {7396FB}$%d{FFFFFF}\n\\cПремия за проведение помолвки: {7396FB}$%d\n\n",OrgInfo[GLS[13]][oName],OrgInfo[GLS[13]][oBank],GLS[16],GLS[17],GLS[18],GLS[19],GLS[20]);
						Dialog_Open(playerid,0,0,"{43CD80}Информация о премиях штата",string,"Принять","");
		            }
		            case 1:
		            {
		                format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение премии может быть слишком большое для бюджета организации и может повлиять на развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 2500");
		                ShowPlayerDialogEx(playerid,420,1,"{43CD80}Изменить премию в полиции",string,"Принять","Отмена");
		            }
		            case 2:
		            {
		                format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение премии может быть слишком большое для бюджета организации и может повлиять на развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 1000");
		                ShowPlayerDialogEx(playerid,421,1,"{43CD80}Изменить премию в армии",string,"Принять","Отмена");
		            }
		            case 3:
		            {
		                format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение премии может быть слишком большое для бюджета организации и может повлиять на развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 1000");
		                ShowPlayerDialogEx(playerid,422,1,"{43CD80}Изменить премию в армии",string,"Принять","Отмена");
		            }
		            case 4:
		            {
		                format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение премии может быть слишком большое для бюджета организации и может повлиять на развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 500");
		                ShowPlayerDialogEx(playerid,423,1,"{43CD80}Изменить премию за обработку объявлений",string,"Принять","Отмена");
		            }
		            case 5:
		            {
		                format(string,sizeof(string),"{FF4400}Обратите внимание, что изменение премии может быть слишком большое для бюджета организации и может повлиять на развитие штата\n\n{FFCB8C}Введите в строку число от 1 до 2000");
		                ShowPlayerDialogEx(playerid,424,1,"{43CD80}Изменить премию за проведения помолвки",string,"Принять","Отмена");
		            }
				}
			}
			else callcmd::economy(playerid);
		}
		case 420:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >2500) return SendError(playerid,"Вы не можете установить такую премию");
				GLS[16] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в премию полицейских. Теперь их премия за арест человека составляет $%d",PlayerName[playerid],playerid,money);
				SendGosMessage(0x73B461FF,string);
		    }
		}
		case 421:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >1000) return SendError(playerid,"Вы не можете установить такую премию");
				GLS[17] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в премию военнослужащих. Теперь их премия за доставку материалов составляет $%d",PlayerName[playerid],playerid,money);
				SendGosMessage(0x73B461FF,string);
		    }
		}
		case 422:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >1000) return SendError(playerid,"Вы не можете установить такую премию");
				GLS[18] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в премию военнослужащих. Теперь премия за убийство бандита составляет $%d",PlayerName[playerid],playerid,money);
				SendGosMessage(0x73B461FF,string);
		    }
		}
		case 423:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >500) return SendError(playerid,"Вы не можете установить такую премию");
				GLS[19] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в премию CNN. Теперь их премия за обработку объявлений составляет $%d",PlayerName[playerid],playerid,money);
				SendGosMessage(0x73B461FF,string);
		    }
		}
		case 424:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >2000) return SendError(playerid,"Вы не можете установить такую премию");
				GLS[20] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в премию за проведение помолвки. Теперь их премия составляет $%d",PlayerName[playerid],playerid,money);
				SendGosMessage(0x73B461FF,string);
		    }
		}
		case 425:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >90000) return SendError(playerid,"Вы не можете установить такую сумму залога");
				GLS[21] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в сумму залога. Теперь стоимость составляет $%d",PlayerName[playerid],playerid,money);
				SendClientMessageToAll(0x73B461FF,string);
		    }
		}

		case 426:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >10) return SendError(playerid,"Вы не можете установить такую цену для закупки");
				GLS[31] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в стоимость закупки продуктов на ферме. Теперь ее стоимость $%d",PlayerName[playerid],playerid,money);
				SendClientMessageToAll(0x73B461FF,string);
		    }
		}
		case 427:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money >15) return SendError(playerid,"Вы не можете установить такую цену для закупки");
				GLS[29] = money;
				format(string,sizeof(string),"Губернатор %s[%d] внес изменения в стоимость закупки предметов на грузчиках. Теперь ее стоимость $%d",PlayerName[playerid],playerid,money);
				SendClientMessageToAll(0x73B461FF,string);
				format(string, sizeof(string), "Склад разгрузочной станции\n\n\n{D38A37}%d{FFFFFF} предметов\nСтоимость закупки: {D38A37}$%d\n\n{D38A37}Для загрузки посигнальте",GLS[28],GLS[29]);
				UpdateDynamic3DTextLabelText(FactoryText[2], COLOR_WHITE, string);
		    }
		}
		///
		case 429:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money > (500-CarproductCount[GetPlayerVehicleID(playerid)])) return SendError(playerid,"Вы не можете закупить столько продуктов");
				if(SlotValue[playerid][0]<money*GLS[31]) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				if(GLS[27]<money)return SendError(playerid,"На складе фермы недостаточно продуктов");
				if(CarproductType[GetPlayerVehicleID(playerid)] != 0 && CarproductType[GetPlayerVehicleID(playerid)] != 1 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SendError(playerid,"Вы не можете смешивать продукты с ящиками с разгрузочной станции");
				CarproductCount[GetPlayerVehicleID(playerid)] += money;
				GiveMoney(playerid,-(money*GLS[31]));
				GiveBizMoney(BIZ_ELECTRO_LS,(money*GLS[31])/2);
				GLS[27]-=money;
				CarproductType[GetPlayerVehicleID(playerid)] = 1;
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы загрузили машину. Используйте /orderlist чтобы найти заказчика продуктов");
				format(string,sizeof(string),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %d/500",CarproductCount[GetPlayerVehicleID(playerid)]);
				UpdateDynamic3DTextLabelText(Product[GetPlayerVehicleID(playerid)], 0xFFFFFFFF, string);
				format(string, sizeof(string), "Склад фермы\n\n\n{D94141}%d{FFFFFF} продуктов\nСтоимость закупки: {D94141}$%d\n\n{D38A37}Для загрузки посигнальте",GLS[27],GLS[31]);
				UpdateDynamic3DTextLabelText(FactoryText[1], COLOR_WHITE, string);
		    }
		}
		case 33:
		{
		    if(response)
		    {
				if(listitem == DListitem[playerid][0])
				{
     				format(string,sizeof(string),"{FFFFFF}На вашем счету сейчас {7396FB}$%d",PlayerInfo[playerid][pBank]);
					SendBotMessage(playerid,string);
				}
				else if(listitem == DListitem[playerid][1])
				{
    				if(!IsAtBankomat(playerid,10.0)) ShowPlayerDialogEx(playerid,35,1,"{43CD80}Введите сумму","\n\n{FFFFFF}Введите сумму для снятия\n\n","Далее","Отмена");
    				else ShowPlayerDialogEx(playerid,35,1,"Введите сумму","\n\n{FFFFFF}Введите сумму для снятия\n{F69B2C}При снятии денег в банкомате комиссия составляет 1 процент\n","Далее","Отмена");

				}
				else if(listitem == DListitem[playerid][2])ShowPlayerDialogEx(playerid,34,1,"{43CD80}Введите сумму","\n\n{FFFFFF}Введите сумму для пополнения\n\n","Далее","Отмена");
				else if(listitem == DListitem[playerid][3])
				{
					if(PlayerInfo[playerid][pExp] >= 5){
						if(PlayerInfo[playerid][pCredit] > 15000)return SendError(playerid,"Вы не можете совершать переводы из-за долга в банке");
						ShowPlayerDialogEx(playerid,37,1,"{43CD80}Введите ID","\n\n{FFFFFF}Введите ID/Ник игрока которому хотите перевести деньги\n\n","Выбор","Отмена");
					}
					else SendError(playerid,"Переводить деньги можно только после 5 отыгранных часов");
				}
				else if(listitem == DListitem[playerid][5])
				{
					if(PlayerInfo[playerid][pCredit] > 0)
					{
					    format(string,sizeof(string),"\n\n{FFFFFF}Какую сумму вы хотите погасить?\nНа данный момент вы должны еще {42B02C}$%d{FFFFFF}\n\n",PlayerInfo[playerid][pCredit]);
						ShowPlayerDialogEx(playerid,229,1,"{43CD80}Кредит",string,"Далее","Отмена");
					}
					else SendError(playerid,"У вас нет кредита");
				}
				else if(listitem == DListitem[playerid][7])
				{
					if(PlayerInfo[playerid][pRank] > 0)
					{
						format(string,sizeof(string),"\n\n{FFFFFF}На счету вашей организации $%d\n\n",OrgInfo[GetTeamID(playerid)][oBank]);
						SendBotMessage(playerid,string);
					}
				}
				else if(listitem == DListitem[playerid][8])
				{
					if(PlayerInfo[playerid][pLeader] >0) ShowPlayerDialogEx(playerid,39,1,"{43CD80}Введите сумму","{FFFFFF}Введите сумму для снятия\n\n","Далее","Отмена");
					else SendError(playerid,"Данная функция доступна только лидеру");
				}
				else if(listitem == DListitem[playerid][9])
				{
					if(SlotValue[playerid][2] != -1)
					{
						format(string, sizeof(string),"{FFFFFF}Оплата счёта за квартиру.\n\nВаша квартира оплачена на %d/30 дней.\nЕжедневная аредная плата за Вашу квартиру составляет: {93C722}%d${FFFFFF}\n\n{0099FF}Введите на сколько дней Вы хотите продлить аренду:",kvartinfo[SlotValue[playerid][2]][kvPlata],kvartinfo[SlotValue[playerid][2]][pDay]);
						ShowPlayerDialogEx(playerid, 8010, DIALOG_STYLE_INPUT, "{43CD80}Оплата за квартиру", string, "Оплатить", "Закрыть");
					}
				}
				else if(listitem == DListitem[playerid][4])
				{
					if(SlotValue[playerid][4] != -1)
					{
						format(string, sizeof(string),"{FFFFFF}Оплата счёта за СТО.\n\nВаша СТО оплачена на %d/30 дней.\nЕжедневная аредная плата за Вашу СТО составляет: {93C722}10000${FFFFFF}\n\n{0099FF}Введите на сколько дней Вы хотите продлить аренду:",TuningInfo[SlotValue[playerid][4]][stoOplata]);
						ShowPlayerDialogEx(playerid, 8012, DIALOG_STYLE_INPUT, "{43CD80}Оплата за СТО", string, "Оплатить", "Закрыть");
					}
				}
				else if(listitem == DListitem[playerid][10])
				{
				    if(SlotValue[playerid][1] != -1)
					{
					    if(TalentsInfo[playerid][2][1] != 3) format(string,sizeof(string),"\n\n{FFFFFF}На оплату налогов вашего дома выставлено: {42B02C}$%d{FFFFFF}\nВы желаете погасить все счета?\n\n",HouseInfo[SlotValue[playerid][1]][hNalog]);
						else format(string,sizeof(string),"\n\n{FFFFFF}На оплату налогов вашего дома выставлено: {42B02C}$%d{FFFFFF}\nНо по скольку вы имеете улучшение: {42B02C}Халявщик{FFFFFF}, вы должны заплатить только: {42B02C}$%d{FFFFFF}\n\nВы желаете погасить все счета?\n\n",HouseInfo[SlotValue[playerid][1]][hNalog],HouseInfo[SlotValue[playerid][1]][hNalog]/2);
					    ShowPlayerDialogEx(playerid,783,0,"{43CD80}Налоговая",string,"Оплатить","Отмена");
					}
				}
				else if(listitem == DListitem[playerid][11])
				{
					new str[250],cars;
					foreach(OWNABLECARS, i)
					{
						new carid = OwnableCar[i];
						if(IsPlayerHaveCar(playerid, carid))
						{
							if(CarInfo[i][cShtrafer] > 0)
							{
								ShowCar[playerid][cars] = carid;
								format(string,sizeof(string),"%s %s(%d)\n",string,VehicleName[GetVehicleModelEx(carid)-400],carid);
								cars ++;
								if(cars > 0) ShowPlayerDialogEx(playerid,881,2,"{43CD80}Мой транспорт",string,"Выбор","Отмена");
							}
							else
							{
								format(str,sizeof(str),"На %s(%d) не выставлено налогов",VehicleName[GetVehicleModelEx(carid)-400],carid);
			    				SendClientMessage(playerid,COLOR_GRAY,str);
							}
						}
					}
					if(cars==0)return SendError(playerid,"У вас нет налога на личный транспорт");
				}
				else if(listitem == DListitem[playerid][12])
				{
				    if(SlotValue[playerid][3] != -1)
					{
					    if(TalentsInfo[playerid][2][1] != 3)    format(string,sizeof(string),"\n\nНа оплату налогов вашего бизнеса выставлено: {42B02C}$%d{FFFFFF}\nВы желаете погасить все счета?\n\n",BizInfo[SlotValue[playerid][3]][bLevel]);
					    else format(string,sizeof(string),"\n\nНа оплату налогов вашего бизнеса выставлено: {42B02C}$%d{FFFFFF}\nНо по скольку вы имеете улучшение: {42B02C}Халявщик{FFFFFF}, вы должны заплатить только: {42B02C}$%d{FFFFFF}\n\nВы желаете погасить все счета?\n\n",BizInfo[SlotValue[playerid][3]][bLevel],BizInfo[SlotValue[playerid][3]][bLevel]/2);
					    ShowPlayerDialogEx(playerid,784,0,"{43CD80}Налоговая",string,"Оплатить","Отмена");
					}
				}
				else if(listitem == DListitem[playerid][14])
				{
				    if(PlayerInfo[playerid][pMember] ==0) return false;
				    format(string,sizeof(string),"\n\n{FFFFFF}Введите сумму для пополнение на счет организации {7396FB}%s\n\n",OrgInfo[GetTeamID(playerid)][oName]);
				    ShowPlayerDialogEx(playerid,118,1,"{43CD80}Пополнение счета организации",string,"Оплатить","Отмена");
				}
				else if(listitem == DListitem[playerid][15])
				{
					if(SlotValue[playerid][19] ==0 || SlotValue[playerid][19] ==1) return false;
					format(string,sizeof(string),"\n\n{FFFFFF}Введите сумму для пополнение на баланс свого телефона\n\n");
					ShowPlayerDialogEx(playerid,119,1,"Пополнить баланс",string,"Оплатить","Отмена");
				}
			}
		}
		case 34:
		{
		    if(response)
		    {
		        if(!strlen(inputtextsave)) return ShowPlayerDialogEx(playerid,34,1,"{43CD80}Введите сумму","Введите сумму для пополнения","Далее","Отмена");
		        new money = strval(inputtextsave);
		        if((PlayerInfo[playerid][pBank]+money)>40000000)return SendBotMessage(playerid,"Приносим извинения, но в нашем банке ячейки не позволяют\nзапихнуть в них больше 40 миллионов");
		        if(money >= 1 && GetMoney(playerid) >= money)
		        {
		            GiveBankMoney(playerid, money);
		            GiveMoney(playerid,-money,"PutMoney (Bank)");
		            format(string,sizeof(string),"[Информация] {FFFFFF}Вы положили на свой банковский счет $%d",money);
		            SendClientMessage(playerid,COLOR_VALIK,string);
		            SendBankBot(playerid);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Пополнение банковского счёта",-money,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		        }
		        else SendBotMessage(playerid,"Уважаемый! Пытайтесь ввести все символы правильно");
			}
			else ShowBankMenu(playerid);
			return true;
		}
		case 35:
		{
		    if(response)
		    {
		        if(!strlen(inputtextsave)) return ShowPlayerDialogEx(playerid,35,1,"{43CD80}Введите сумму","Введите сумму для снятия","Далее","Отмена");
		        new money = strval(inputtextsave);
		        if(money >= 1 && PlayerInfo[playerid][pBank] >= money)
		        {
		            if(!IsAtBankomat(playerid,10.0))
		            {
			            GiveBankMoney(playerid, -money);
			            GiveMoney(playerid,money,"TakeMoney (Bank)");
			            format(string,sizeof(string),"[Информация] {FFFFFF}Вы сняли со своего банковского счета $%d",money);
			            SendClientMessage(playerid,COLOR_VALIK,string);
						new logtime[3],logdate[3],logtimestring[16];
						getdate(logdate[2],logdate[1],logdate[0]);
						gettime(logtime[0],logtime[1],logtime[2]);
						f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
						WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Снятие с банка",money,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
					}
					else
					{
					    new moni = money/100;
					    GiveBankMoney(playerid, -money);
			            GiveMoney(playerid,(money-moni),"TakeMoney (Bank)");
			            format(string,sizeof(string),"[Информация] {FFFFFF}Вы сняли со своего банковского счета $%d",money);
			            SendClientMessage(playerid,COLOR_VALIK,string);
			            SendClientMessage(playerid,COLOR_ORANGE,"[Информация] {FFFFFF}Вы потеряли 1 процент от снятых денег за использование банкомата");
						new logtime[3],logdate[3],logtimestring[16];
						getdate(logdate[2],logdate[1],logdate[0]);
						gettime(logtime[0],logtime[1],logtime[2]);
						f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
						WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Снятие с банка",money,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));

					}

                    SendBankBot(playerid);
		        }
		        else SendBotMessage(playerid,"Уважаемый! Пытайтесь ввести все символы правильно");
			}
			else ShowBankMenu(playerid);
			return true;
		}
		case 37:
		{
		    if(response)
		    {
		        if(!strlen(inputtextsave)) return ShowPlayerDialogEx(playerid,37,1,"{43CD80}Введите ID","{FFFFFF}Введите ID игрока которому хотите перевести деньги","Выбор","Отмена");
		        sscanf(inputtextsave,"u",TransferPlayer[playerid]);
		        if(IsPlayerConnected(TransferPlayer[playerid]))
		        {
			        format(string,sizeof(string),"{FFFFFF}Введите сумму которую хотите перевести игроку {B83434}%s",Name(TransferPlayer[playerid]));
			        ShowPlayerDialogEx(playerid,41,1,"{43CD80}Введите сумму",string,"Готово","Отмена");
		        }
		        else
				{
					SendError(playerid,"Этот игрок не в сети");
					ShowBankMenu(playerid);
				}
		    }
		    else ShowBankMenu(playerid);
		    return true;
		}
	 	case 39:
	    {
	    	if(response)
			{
				if(PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] < 6) return SendError(playerid,"Администратор не может снять деньги");
				new Number = PlayerInfo[playerid][pMember];
				if(strval(inputtextsave) < 1 || strval(inputtextsave) > 50000)return SendBotMessage(playerid,"Извините, но вы не можете снять больше $50000 в сутки");
				if(OrgInfo[Number][oBank] < strval(inputtextsave))return SendBotMessage(playerid,"Извините, но на счету вашей организации нет столько денег");
				if(DayLimit[Number] + strval(inputtextsave) > 50000)return SendError(playerid, "Дневной лимит составляет $50000");
				OrgInfo[Number][oBank] -= strval(inputtextsave);
				DayLimit[Number] += strval(inputtextsave);
				GiveMoney(playerid,strval(inputtextsave),"TakeMoney (Org)");
				format(string, sizeof(string), "Вы сняли $%d со счёта вашей организации. Теперь на счету вашей организации $%d",strval(inputtextsave),OrgInfo[Number][oBank]);
				ShowPlayerDialogEx(playerid,INVALID_DIALOG_ID,0,"{43CD80}Банк",string,"Скрыть","");
				format(string,sizeof(string),"{ECB534}%s снял с баланса организации $%d",PlayerName[playerid],strval(inputtextsave));
				SendTeamMessage(PlayerInfo[playerid][pMember],-1,string);
				SaveOrg(Number);
				SendBankBot(playerid);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Снятие с баланса организации",strval(inputtextsave),PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
			}
			else ShowBankMenu(playerid);
			return true;
		}
		case 41:
		{
		    if(response)
		    {
		        new id = TransferPlayer[playerid];
		        new money = strval(inputtextsave);
		        if(!strlen(inputtextsave))
				{
		        	format(string,sizeof(string),"{FFFFFF}Введите сумму которую хотите перевести игроку {B83434}%s",Name(TransferPlayer[playerid]));
		        	ShowPlayerDialogEx(playerid,41,1,"{43CD80}Введите сумму",string,"Готово","Отмена");
		        	return true;
		        }
		        if(id==playerid)return false;
		        if(money >= 1 && PlayerInfo[playerid][pBank] >= money)
		        {
					if((PlayerInfo[id][pBank]+money)>40000000)return SendBotMessage(playerid,"Приносим извинения, вместе с вашим переводом у этого человека получится\nбольше 40-ка миллионов, которые мы не можем поместить в его ячейку");
		            GiveBankMoney(playerid, -money);
		            GiveBankMoney(id, money);
		            format(string,sizeof(string),"Игрок %s[%d] [IP: %s] перевел игроку %s[%d] [IP: %s] на счет $%d [$%d]",Name(playerid),playerid,PlayerIp[playerid],Name(id),id,PlayerIp[id],money,PlayerInfo[id][pBank]);
					if(money > 3000) SendAdminsMessage(COLOR_RED, string, 1);
			        format(string,sizeof(string),"[Информация] {FFFFFF}Вы перевели $%d игроку %s(%d) на счет",money,Name(id),id);
			        SendClientMessage(playerid,COLOR_YELLOW,string);
			        format(string,sizeof(string),"Вам поступил перевод на ваш счет в размере $%d от жителя %s(%d)",money,Name(playerid),playerid);
			        SendClientMessage(id,COLOR_YELLOW,string);
			        SendBankBot(playerid);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),PlayerInfo[id][pID],Name(id),"Перевод на счёт",-money,PlayerIp[playerid],PlayerIp[id],GetMoney(playerid));
		        }
		        else SendBotMessage(playerid,"Уважаемый! Пытайтесь ввести все символы правильно");
			}
			else ShowPlayerDialogEx(playerid,37,1,"{43CD80}Введите ID","{FFFFFF}Введите ID игрока которому хотите перевести деньги","Выбор","Отмена");
			return true;
		}
		case 3920:
		{
		    if(response)
			{
			    format(string,sizeof(string),"{D38A37}- EasterBoard Farm. Часть 2{FFFFFF}\n\nВ чем же отличие между работами и должностями на ферме или зачем вообще нужна ферма?\nБлагодаря нашей ферме, развозчики продуктов могут поставлять товары на склады городов");
       			ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть","");
			}
		}
		case 3921:
		{
		    if(response)
			{
			    new hour,minuite,second;
			    gettime(hour,minuite,second);
			    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 18 ))
				{
					SendError(playerid,"Гос.организации могут работать с 18:00 до 10:00");
			 		return 1;
				}
			    switch(listitem)
			    {
			        case 0:
			        {
			            format(string,sizeof(string),"{D38A37}- Wine Farm.{FFFFFF}\n\nЯвляется самым вторым ведущим предприятием в нашем штате.\nздесь вы сможете начать работу самым обычным сборщиком урожая, исполняющим самую простую работу\n{D38A37}/plant - посадить растение\n\nУдачной работы");
			            ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть","");
			        }
			        case 1:
			        {
			            if(PlayerInfo[playerid][pJob]!= 22)return SendError(playerid,"Вы здесь не работаете");
			            if(PlayerInfo[playerid][pJob]==22)
			            {
			                if(!InJob[playerid])
			                {
			                    PlayerInfo[playerid][pOldSkin] = GetPlayerSkin(playerid);
	                            if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 133);
								if(PlayerInfo[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 131);
								InJob[playerid] = 1;
								SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы переоделись в форму работника виноградника");
								SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Если на поле нет урожая, возьмите саженец и посадите его");
								ferman[playerid] = 0;
							}
							else
							{
							    InJob[playerid] = 0;
							    SetPlayerSkinEx(playerid, PlayerInfo[playerid][pOldSkin]);
							    SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы закончили работу");
	            				TogglePlayerDynamicCP(playerid, WineCP, false);
								if(InJob[playerid]==3)RemovePlayerAttachedObjectEx(playerid, 6);
								format(string,sizeof(string),"[Информация] {FFFFFF}Вы забрали свою зарплату в размере:{FFFFFF} $%d",ferman[playerid]*GLS[4]);
								SendClientMessage(playerid,COLOR_RED,string);
								ferman[playerid] = 0;
							}
			            }
					}
			        case 2:
			        {
			            if(InJob[playerid])return SendError(playerid,"Для начала закончите нынешнюю работу");
			            if(PlayerInfo[playerid][pJob]==22)return SendError(playerid,"Вы и так уже работаете на виноградном поле");
			            PlayerInfo[playerid][pJob]=22;
			            ShowJobInfo(playerid, PlayerInfo[playerid][pJob]);
			            SendClientMessage(playerid,COLOR_VALIK,"Вы устроились на должность работника виноградника");
			        }
			    }
			}
		}
		case 3922:
		{
		    if(response)
			{
			    new hour,minuite,second;
			    gettime(hour,minuite,second);
			    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 18 ))
				{
					SendError(playerid,"Гос.организации могут работать с 18:00 до 10:00");
			 		return 1;
				}
			    switch(listitem)
			    {
			        case 0:ShowJobInfo(playerid, 23);
			        case 1:
			        {
			            if(PlayerInfo[playerid][pJob]!= 23)return SendError(playerid,"Вы здесь не работаете");
			            if(PlayerInfo[playerid][pJob]==23)
			            {
			                if(!InJob[playerid])
			                {
			                    PlayerInfo[playerid][pOldSkin] = GetPlayerSkin(playerid);
	                            if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 133);
								if(PlayerInfo[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 131);
								InJob[playerid] = 1;
								SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы переоделись в форму работника виноградника");
								SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Если конвейер остановлен, начните загружать котёл");
								ferman[playerid] = 0;
							}
							else
							{
							    InJob[playerid] = 0;
							    SetPlayerSkinEx(playerid, PlayerInfo[playerid][pOldSkin]);
							    SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы закончили работу");
								if(InJob[playerid]==3)RemovePlayerAttachedObjectEx(playerid, 6);
								format(string,sizeof(string),"[Информация] {FFFFFF}Вы забрали свою зарплату в размере:{FFFFFF} $%d",ferman[playerid]*GLS[4]);
								SendClientMessage(playerid,COLOR_RED,string);
								ferman[playerid] = 0;
							}
			            }
					}
			        case 2:
			        {
			            if(InJob[playerid])return SendError(playerid,"Для начала закончите нынешнюю работу");
			            if(PlayerInfo[playerid][pJob]==23)return SendError(playerid,"Вы и так уже работаете в цеху");
			            PlayerInfo[playerid][pJob]=23;
			            ShowJobInfo(playerid, PlayerInfo[playerid][pJob]);
			            SendClientMessage(playerid,COLOR_VALIK,"Вы устроились на должность разнорабочего");
			        }
			    }
			}
		}
		case 3923:
		{
		    if(response)
			{
			    new hour,minuite,second;
			    gettime(hour,minuite,second);
			    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 18 ))
				{
					SendError(playerid,"Гос.организации могут работать с 18:00 до 10:00");
			 		return 1;
				}
			    switch(listitem)
			    {
			        case 0:ShowJobInfo(playerid, 24);
			        case 1:
			        {
			            if(PlayerInfo[playerid][pJob]!= 24)return SendError(playerid,"Вы здесь не работаете");
			            if(PlayerInfo[playerid][pJob]==24)
			            {
			                if(!InJob[playerid])
			                {
			                    PlayerInfo[playerid][pOldSkin] = GetPlayerSkin(playerid);
	                            if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 16);
								if(PlayerInfo[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 157);
								InJob[playerid] = 1;
								SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы переоделись в рабочую форму шахтёра");
								SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Спускайтесь в шахту, чтобы начать работу");
								ferman[playerid] = 0;
							}
							else
							{
							    InJob[playerid] = 0;
							    SetPlayerSkinEx(playerid, PlayerInfo[playerid][pOldSkin]);
							    SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы закончили работу");
								ferman[playerid] = 0;
							}
			            }
					}
			        case 2:
			        {
			            if(InJob[playerid])return SendError(playerid,"Для начала закончите нынешнюю работу");
			            if(PlayerInfo[playerid][pJob]==24)return SendError(playerid,"Вы и так уже работаете в цеху");
			            PlayerInfo[playerid][pJob]=24;
			            ShowJobInfo(playerid, PlayerInfo[playerid][pJob]);
			            SendClientMessage(playerid,COLOR_VALIK,"Вы устроились на должность шахтёра");
			        }
			    }
			}
		}
		case 3919:
		{
		    if(response)
			{
			    new hour,minuite,second;
			    gettime(hour,minuite,second);
			    if(IsAtFrakcia(playerid, 1) && (hour > 10 && hour < 18 ))
				{
					SendError(playerid,"Гос.организации могут работать с 18:00 до 10:00");
			 		return 1;
				}
			    switch(listitem)
			    {
			        case 0:
			        {
			            format(string,sizeof(string),"{D38A37}- EasterBoard Farm.{FFFFFF}\n\nЯвляется самым большим предприятием в нашем штате.\nЗдесь вы сможете начать работу самым обычным фермером, исполняющим самую простую работу с урожаем\n\nУдачной работы");
			            ShowPlayerDialogEx(playerid,3920,0,"{43CD80}Информация",string,"Читать еще","Закрыть");
			        }
			        case 1:
			        {
			            if(PlayerInfo[playerid][pJob]!= 17 && PlayerInfo[playerid][pJob]!= 18 && PlayerInfo[playerid][pJob]!= 19 && PlayerInfo[playerid][pJob]!= 20)return SendError(playerid,"Вы здесь не работаете");
			            if(PlayerInfo[playerid][pJob]==17)
			            {
			                if(InJob[playerid]==0)
			                {
			                    PlayerInfo[playerid][pOldSkin] = GetPlayerSkin(playerid);
	                            if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 133);
								if(PlayerInfo[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 131);
								InJob[playerid]=1;
								SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы переоделись в форму фермера");
								SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Отправляйтесь по красному маркеру и переносите сено на склад");
								channelfarm[playerid] = random(40);
								SetPlayerMapIcon(playerid, 97, MinPos[channelfarm[playerid]][0], MinPos[channelfarm[playerid]][1], MinPos[channelfarm[playerid]][2], 56, 0, MAPICON_LOCAL);
								TogglePlayerDynamicCP(playerid, MinerCP[channelfarm[playerid]], true);
								ferman[playerid]=0;
							}
							else
							{
							    InJob[playerid]=0;
							    SetPlayerSkinEx(playerid, PlayerInfo[playerid][pOldSkin]);
							    SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы закончили работу");
							    for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], false);
	            				TogglePlayerDynamicCP(playerid, MinerDownCP, false);
								RemovePlayerMapIcon(playerid,97);
								ferman[playerid] = 0;
								crafttry[playerid] = 0;
								if(InJob[playerid]==3)RemovePlayerAttachedObjectEx(playerid, 6);
							}
			            }
			        }
			        case 2:
			        {
			            if(InJob[playerid]>0)return SendError(playerid,"Для начала, закончите нынешнюю работу");
			            if(PlayerInfo[playerid][pJob]==17)return SendError(playerid,"Вы и так уже работаете начальным фермером");
			            ferman[playerid]=0;
			            PlayerInfo[playerid][pJob]=17;
			            ShowJobInfo(playerid, PlayerInfo[playerid][pJob]);
			            SendClientMessage(playerid,COLOR_VALIK,"Вы устроились на должность фермера. Для того чтобы начать работу, выберите пункт Переодеться");
			            SendError(playerid,"Основные комманды которые помогут вам в изучения фермы: '/jobhelp | /help'");
			        }
			    }
			}
		}
		case 3331:
		{
		    if(response)
			{
			    if(SlotValue[playerid][0]<20000) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				ShowPlayerDialogEx(playerid, 771, 0, "{43CD80}Информация", "{FFFFFF}Тест представляет из себя 7 вопросов, которые вы можете прочитать (( /help ))\nЕсли вы провалите тест деньги вам не вернут. ( 20 000$ )\nНу, а если вы пройдете тест, вам дадут следующие указания.\n{9FC084}Нажмите кнопку 'Далле' чтобы начать собеседование", "Далее", "Отмена");
			}
		    else
		    {
		        CarTest[playerid] = -1;
		    }
		}
		case 48:
		{
		    if(response) ShowPlayerDialogEx(playerid, 49, 0, "{43CD80}Вступление", "{FFFFFF}В ходе теста вам будет задано 4 вопроса по правилам дорожного движения.\nПосле ответа на ВСЕ вопросы система выдаст количество правильных ответов.\nЧтобы приступить к практической части необходимо ответить правильно на все вопросы!\n\n\n{A7FC00}Для продолжения нажмите 'Далее'", "Далее", "Отмена");
		    else
		    {
		        CarTest[playerid] = -1;
		        DrivingTest[playerid] = 0;
		    }
		}
		case 49:
		{
		    if(response)
		    {
		        new question = TestASKMassive[playerid][0];
		        ShowPlayerDialogEx(playerid,70,QueInfo[question][dDialog],QueInfo[question][dQuestion],QueInfo[question][dAnswers],"Далее","Отмена");
		    }
		    else
		    {
		        CarTest[playerid] = -1;
		        DrivingTest[playerid] = 0;
		    }
		}
		case 51:
		{
		    if(response) PddState[playerid] ++;
		    else PddState[playerid] --;
		    new pdd = PddState[playerid];
		    switch(pdd)
		    {
			    case 1:
			    {
           			ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 2: Общие обязанности водителей ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 2.1. Водитель механического транспортного средства обязан:");
			        SendClientMessage(playerid, COLOR_WHITE, " 2.1.1. Иметь при себе и по требованию сотрудников полиции передавать им для проверки:");
					SendClientMessage(playerid, COLOR_WHITE, " - Паспорт гражданина SA и водительское удостоверение на право управления тс соответствующей категории");
			        SendClientMessage(playerid, COLOR_WHITE, " 2.1.2. Предоставлять транспортное средство:");
			        SendClientMessage(playerid, COLOR_WHITE, " сотрудникам полиции, федеральному бюро расследований, национальной гвардии в случаях, предусмотренных законодательством;");
			        SendClientMessage(playerid, COLOR_WHITE, " медицинским и фармацевтическим работникам для перевозки граждан в ближайшее лечебно-профилактическое учреждение в случаях, угрожающих их жизни");
			        SendClientMessage(playerid, COLOR_WHITE, " 2.1.3. Право остановки транспортных средств для проверки документов предоставлено: Полиции, ФБР,");
			        SendClientMessage(playerid, COLOR_WHITE, " Национальной Гвардии (только в случаях военного положения), а выписывать квитанции за нарушение ПДД только сотрудникам полиции");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 2:
			    {
           			ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 3: Применение специальных сигналов ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 3.1. При приближении транспортного средства с включенными проблесковым маячком синего и красного цвета и специальным");
			        SendClientMessage(playerid, COLOR_WHITE, " звуковым сигналом водители обязаны уступить");
			        SendClientMessage(playerid, COLOR_WHITE, " дорогу для обеспечения беспрепятственного проезда указанного транспортного средства, ");
			        SendClientMessage(playerid, COLOR_WHITE, " а также сопровождаемого им транспортного средства (сопровождаемых транспортных средств)");
			        SendClientMessage(playerid, COLOR_WHITE, " заведениям. (полицейские, скорые, пожарные машины, машины из картинга, трюковые самолеты, такси, военные хаммеры и т.д.)");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 3:
			    {
           			ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 4: Обязаности пешеходов ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 4.1. Пешеходы должны двигаться по тротуарам или пешеходным дорожкам, а при их отсутствии - по обочинам");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 4:
			    {
           			ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 5: Обязаности пассажиров ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 5.1. Пассажиры обязаны:");
			        SendClientMessage(playerid, COLOR_WHITE, " посадку и высадку производить со стороны тротуара или обочины и только после полной остановки транспортного средства");
			        SendClientMessage(playerid, COLOR_WHITE, " Если посадка и высадка невозможна со стороны тротуара или обочины, она может осуществляться со стороны проезжей части при условии, ");
			        SendClientMessage(playerid, COLOR_WHITE, " что это будет безопасно и не создаст помех другим участникам движения");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 5:
			    {
           			ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 6: Начало движения, маневрирование ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 6.1. Перед началом движения, перестроением, поворотом (разворотом) и остановкой водитель обязан ");
			        SendClientMessage(playerid, COLOR_WHITE, " осмотреться и убедится в отсутствии помех для движения тс");
			        SendClientMessage(playerid, COLOR_WHITE, " 6.2. Разворот запрещается:");
			        SendClientMessage(playerid, COLOR_WHITE, " на пешеходных переходах; в тоннелях; на мостах, путепроводах, эстакадах и под ними; на железнодорожных переездах;");
			        SendClientMessage(playerid, COLOR_WHITE, " в местах с видимостью дороги хотя бы в одном направлении менее 100 м;");
			        SendClientMessage(playerid, COLOR_WHITE, " 6.3. При повороте налево или развороте вне перекрестка водитель безрельсового транспортного");
			        SendClientMessage(playerid, COLOR_WHITE, " средства обязан уступить дорогу встречным транспортным средствам");
			        SendClientMessage(playerid, COLOR_WHITE, " 6.4. Если встречный разъезд затруднен то, водитель, на стороне которого имеется препятствие, должен уступить дорогу. ");
			        SendClientMessage(playerid, COLOR_WHITE, " А на уклонах, движущегося на спуск");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 6:
			    {
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 7: Расположение транспортных средств на проезжей части ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 7.1. Запрещается движение транспортных средств по разделительным полосам и обочинам, тротуарам и пешеходным дорожкам");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 7:
			    {
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 8: Скорость движения ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 8.1. Водитель должен вести транспортное средство со скоростью, не превышающей установленного ограничения,");
			        SendClientMessage(playerid, COLOR_WHITE, " учитывая при этом интенсивность движения, особенности и состояние транспортного средства и груза, дорожные и метеорологические условия,");
			        SendClientMessage(playerid, COLOR_WHITE, " в частности видимость в направлении движения. Скорость должна обеспечивать водителю возможность постоянного контроля за движением");
			        SendClientMessage(playerid, COLOR_WHITE, " выполнения требований Правил");
			        SendClientMessage(playerid, COLOR_WHITE, " При возникновении опасности для движения, которую водитель в состоянии обнаружить, он должен принять ");
			        SendClientMessage(playerid, COLOR_WHITE, " возможные меры к снижению скорости вплоть до остановки транспортного средства");
			        SendClientMessage(playerid, COLOR_WHITE, " 8.2. В населенных пунктах разрешается движение транспортных средств со скоростью не более 60 км/ч");
			        SendClientMessage(playerid, COLOR_WHITE, " 8.3. Вне населенных пунктов разрешается движение транспортных средств со скоростью не более 120 км/ч");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 8:
			    {
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 9: Обгон, встречный разъезд ____|");
			   		SendClientMessage(playerid, COLOR_WHITE, " 9.1. Обгон запрещен:");
			        SendClientMessage(playerid, COLOR_WHITE, " на перекрестках с выездом на полосу встречного движения; на пешеходных переходах при наличии на них пешеходов;");
			        SendClientMessage(playerid, COLOR_WHITE, " на железнодорожных переездах и ближе чем за 100 м перед ними; транспортного средства, производящего обгон или объезд:");
			        SendClientMessage(playerid, COLOR_WHITE, " в конце подъема и на других участках дорог с ограниченной видимостью с выездом на полосу встречного движения");
			        SendClientMessage(playerid, COLOR_WHITE, " 9.2. Обгон разрешен:");
			        SendClientMessage(playerid, COLOR_WHITE, " Если тс стоит на проезжей части или движется со скоростью менее 10 км/ч");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 9:
			    {
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 10: Остановка и стоянка ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 10.1.Остановка запрещается:");
			        SendClientMessage(playerid, COLOR_WHITE, " на железнодорожных переездах, в тоннелях, а также на эстакадах, мостах, путепроводах (если для движения ");
			        SendClientMessage(playerid, COLOR_WHITE, " в данном направлении имеется менее трех полос) и под ними;");
			        SendClientMessage(playerid, COLOR_WHITE, " 10.2. Стоянка с целью длительного отдыха, ночлега и тому подобное вне населенного пункта");
			        SendClientMessage(playerid, COLOR_WHITE, " разрешается только на предусмотренных для этого площадках или за пределами дороги");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 10:
			    {
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 11: Проезд перекрестков ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 11.1. На перекрестке равнозначных дорог водитель безрельсового транспортного средства ");
			        SendClientMessage(playerid, COLOR_WHITE, " обязан уступить дорогу транспортным средствам, приближающимся справа");
			        SendClientMessage(playerid, COLOR_WHITE, " 11.2. На перекрестке неравнозначных дорог водитель безрельсового транспортного средства обязан уступить дорогу транспортным средствам, ");
			        SendClientMessage(playerid, COLOR_WHITE, " приближающимся по главной дороге");
			        SendClientMessage(playerid, COLOR_WHITE, " 11.3. Запрещается выезжать на перекресток или пересечение проезжих частей, если образовался затор, ");
			        SendClientMessage(playerid, COLOR_WHITE, " который вынудит водителя остановиться, создав препятствие для движения транспортных средств в поперечном направлении");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 11:
			    {
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 12: Пешеходные переходы и места остановок маршрутных транспортных средтсв ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 12.1. Водитель транспортного средства обязан уступить дорогу пешеходам, переходящим проезжую часть, по нерегулируемому* пешеходному переходу");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 12:
			    {
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 13: Движение по автомагистралям ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 13.1. На автомагистралях запрещается:");
			        SendClientMessage(playerid, COLOR_WHITE, " движение, велосипедов, мопедов, тракторов и самоходных машин, иных транспортных средств,");
			        SendClientMessage(playerid, COLOR_WHITE, " скорость которых по технической характеристике или их состоянию менее 40 км/ч;");
			        SendClientMessage(playerid, COLOR_WHITE, " движение грузовых автомобилей далее второй полосы; остановка вне специальных площадок для стоянки:");
			        SendClientMessage(playerid, COLOR_WHITE, " разворот и въезд в технологические разрывы разделительной полосы; движение задним ходом; учебная езда");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 13:
			    {
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 14: Буксировка механических транспортных средств ____|");
			    	SendClientMessage(playerid, COLOR_WHITE, " 15.1. При буксировке запрещается перевозка людей в буксируемом транспортном средстве и в кузове буксируемого грузового автомобиля");
			        SendClientMessage(playerid, COLOR_WHITE, " 15.2. Буксировка запрещается:");
			        SendClientMessage(playerid, COLOR_WHITE, " - двух и более транспортных средств;");
			        SendClientMessage(playerid, COLOR_WHITE, " - транспортных средств с недействующей тормозной системой, если их фактическая масса ");
			        SendClientMessage(playerid, COLOR_WHITE, " более половины фактической массы буксирующего транспортного средства;");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Далее\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 14:
			    {
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "|____ Параграф 16: Перевозка людей ____|");
					SendClientMessage(playerid, COLOR_WHITE, " 16.1. Водитель обязан осуществлять посадку и высадку пассажиров только после полной остановки транспортного средства,");
			        SendClientMessage(playerid, COLOR_WHITE, " а начинать движение только с закрытыми дверями и не открывать их до полной остановки");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Выход\" или \"Назад\"", "Далее", "Назад");
			    }
			    case 15:
			    {
			        ClearChatForPlayer(playerid);
			        SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем! Вы прочли Правила дорожного движения");
			        ShowPlayerDialogEx(playerid, 51, 0, "{43CD80}Правила дорожного движения", "{FFFFFF}Используйте кнопки \"Выход\" или \"Назад\"", "Выход", "Назад");
			    }
			    default: return false;
		    }
		}
		//////////////
		case 1339:
		{
		    if(response)
			{
				switch(listitem)
				{
				    case 0: SendBotMessage(playerid,"Захотелось приключений и смены обстановки, вот мой выбор и пал на этот штат.\nКстати, тут ходят автобусы. Если не хочешь ждать, то можешь взять скутер на прокат, они\nнеподалеку тут стоят");
        			case 1: SendBotMessage(playerid,"Знаю о винодельне где можно неплохо подзаработать, а можно и винишко оттуда украсть *смеётся*.\nНо как на права пойдешь, не забудь, что лучше быть трезвым");
        			case 2: SendBotMessage(playerid,"Тебе, как и мне, должны были выдать GPS, там все\nнайдется, да и освоишься здесь быстро");
        			case 3: SendBotMessage(playerid,"Да не беда, тут проблем нет. В мэрии можно получить его бесплатно\nно учти, что во второй раз тебе его выдавать не будут.\nНу и улыбайся на фотографии *смеётся*");
        			case 4: SendBotMessage(playerid,"Знай теорию и будь адекватным водителем - главный залог получить\nправа, а права бесплатные!");
        			case 5: SendBotMessage(playerid,"Я, к примеру, без телефона не могу. Если ты тоже - ступай через дорогу и оставь мне свой номерочек *улыбается*");
        			case 6: SendBotMessage(playerid,"В любой больнице штата, главное приходи без букетов *улыбается*");
				}
			}
		}
		case 133:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
				case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
				case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
				case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
				case 4: ApplyAnimation(playerid, "DANCING", "DAN_Left_A" ,4.1,1,0,0,0,0,0);
				case 5: ApplyAnimation(playerid, "DANCING", "dnce_M_a" ,4.1,1,0,0,0,0,0);
				case 6: ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop" ,4.1,1,0,0,0,0,0);
				case 7: ApplyAnimation(playerid, "BEACH", "bather" ,4.1,1,0,0,0,0,0);
				case 8: ApplyAnimation(playerid, "ped", "WALK_drunk" ,4.1,1,1,1,0,0,0);
				case 9: ApplyAnimation(playerid, "ped", "Crouch_Roll_L" , 4.1,1,1,1,0,0,0);
				case 10: ApplyAnimation(playerid, "ped", "endchat_03" ,4.1,1,0,0,0,0,0);
				case 11: ApplyAnimation(playerid, "benchpress", "gym_bp_celebrate" ,4.1,1,0,0,0,0,0);
				case 12: ApplyAnimation(playerid, "ped", "cower" ,4.1,1,0,0,0,0,0);
				case 13: ApplyAnimation(playerid, "BOMBER", "BOM_Plant" ,4.1,0,0,0,0,0,0);
				case 14: ApplyAnimation(playerid, "SHOP", "ROB_Shifty" ,4.1,0,0,0,0,0,0);
				case 15: ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat" ,4.1,1,0,0,0,0,0);
				case 16: ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop" ,4.1,1,0,0,0,0,0);
				case 17: ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P" ,4.1,0,0,0,0,0,0);
				case 18: ApplyAnimation(playerid, "FOOD", "EAT_Burger" ,4.1,0,0,0,0,0,0);
				case 19: ApplyAnimation(playerid, "SWEET", "sweet_ass_slap" ,4.1,0,0,0,0,0,0);
				case 20: ApplyAnimation(playerid, "DEALER", "DEALER_DEAL" ,4.1,0,0,0,0,0,0);
				case 21: ApplyAnimation(playerid, "CRACK", "crckdeth2" ,4.1,1,0,0,0,0,0);
				case 22: ApplyAnimation(playerid, "LOWRIDER", "M_smklean_loop" ,4.1,1,0,0,0,0,0);
				case 23: ApplyAnimation(playerid, "LOWRIDER", "F_smklean_loop" ,4.1,1,0,0,0,0,0);
				case 24: ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop" ,4.1,1,0,0,0,0,0);
				case 25: ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop" ,4.1,1,0,0,0,0,0);
				case 26: ApplyAnimation(playerid, "BAR", "dnk_stndF_loop" ,4.1,1,0,0,0,0,0);
				case 27: ApplyAnimation(playerid, "DANCING", "DAN_Right_A" ,4.1,1,0,0,0,0,0);
				case 28: ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_loop" ,4.1,1,0,0,0,0,0);
				case 29: ApplyAnimation(playerid, "MISC", "plyr_shkhead" ,4.1,0,0,0,0,0,0);
				case 30: ApplyAnimation(playerid, "BSKTBALL", "BBALL_idle" ,4.1,0,0,0,0,0,0);
				case 31: ApplyAnimation(playerid, "CAMERA", "camstnd_cmon" ,4.1,1,0,0,0,0,0);
				case 32: ApplyAnimation(playerid, "SHOP", "SHP_Rob_HandsUP" ,4.1,1,0,0,0,0,0);
				case 33: ApplyAnimation(playerid, "CRACK", "crckidle2" ,4.1,1,0,0,0,0,0);
				case 34: ApplyAnimation(playerid, "CRACK", "crckidle4" ,4.1,1,0,0,0,0,0);
				case 35: ApplyAnimation(playerid, "DEALER", "DEALER_IDLE" ,4.1,1,0,0,0,0,0);
				case 36: ApplyAnimation(playerid, "GANGS", "leanIDLE" ,4.1,1,0,0,0,0,0);
				case 37: ApplyAnimation(playerid, "GANGS", "shake_carSH" ,4.1,0,0,0,0,0,0);
				case 38: ApplyAnimation(playerid, "GANGS", "smkcig_prtl" ,4.1,0,0,0,0,0,0);
				case 39: ApplyAnimation(playerid, "BEACH", "ParkSit_W_loop" ,4.1,1,0,0,0,0,0);
				case 40: ApplyAnimation(playerid, "INT_HOUSE", "LOU_Loop" ,4.1,1,0,0,0,0,0);
				case 41: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Bored_Loop" ,4.1,1,0,0,0,0,0);
				case 42: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Idle_Loop" ,4.1,1,0,0,0,0,0);
				case 43: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Type_Loop" ,4.1,1,0,0,0,0,0);
				case 44: ApplyAnimation(playerid, "INT_SHOP", "shop_shelf" ,4.1,1,0,0,0,0,0);
				case 45: ApplyAnimation(playerid, "JST_BUISNESS", "girl_02" ,4.1,1,0,0,0,0,0);
				case 46: ApplyAnimation(playerid, "KISSING", "GF_StreetArgue_02" ,4.1,0,0,0,0,0,0);
				case 47: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_01" ,4.1,0,0,0,0,0,0);
				case 48: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_02" ,4.1,0,0,0,0,0,0);
				case 49: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_03" ,4.1,0,0,0,0,0,0);
				case 50: ApplyAnimation(playerid, "LOWRIDER", "RAP_B_Loop" ,4.1,1,0,0,0,0,0);
				case 51: ApplyAnimation(playerid, "MEDIC", "CPR" ,4.1,1,0,0,0,0,0);
				case 52: ApplyAnimation(playerid, "MISC", "bitchslap" ,4.1,1,0,0,0,0,0);
				case 53: ApplyAnimation(playerid, "MISC", "bng_wndw" ,4.1,1,0,0,0,0,0);
				case 54: ApplyAnimation(playerid, "MISC", "KAT_Throw_K" ,4.1,0,0,0,0,0,0);
				case 55: ApplyAnimation(playerid, "MISC", "SEAT_LR" ,4.1,1,0,0,0,0,0);
				case 56: ApplyAnimation(playerid, "ped", "SEAT_idle" ,4.1,1,0,0,0,0,0);
				case 57: ApplyAnimation(playerid, "ON_LOOKERS", "lkup_loop" ,4.1,1,0,0,0,0,0);
				case 58: ApplyAnimation(playerid, "ON_LOOKERS", "Pointup_loop" ,4.1,1,0,0,0,0,0);
				case 59: ApplyAnimation(playerid, "ON_LOOKERS", "panic_loop" ,4.1,1,0,0,0,0,0);
				case 60: ApplyAnimation(playerid, "ON_LOOKERS", "shout_02" ,4.1,1,0,0,0,0,0);
				case 61: ApplyAnimation(playerid, "PAULNMAC", "Piss_loop" ,4.1,1,0,0,0,0,0);
				case 62: ApplyAnimation(playerid, "GHANDS", "gsign1LH" ,4.1,1,0,0,0,0,0);
				case 63: ApplyAnimation(playerid, "ped", "IDLE_taxi" ,4.1,1,0,0,0,0,0);
				case 64: ApplyAnimation(playerid, "POLICE", "Door_Kick" ,4.1,0,0,0,0,0,0);
				case 65: ApplyAnimation(playerid, "POLICE", "CopTraf_Stop" ,4.1,1,0,0,0,0,0);
				case 66: ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY_B" ,4.1,1,0,0,0,0,0);
				case 67: ApplyAnimation(playerid, "LOWRIDER", "RAP_C_Loop" ,4.1,1,0,0,0,0,0);
				case 68: ApplyAnimation(playerid, "SWAT", "gnstwall_injurd" ,4.1,1,0,0,0,0,0);
				case 69: ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop" ,4.1,1,0,0,0,0,0);
				case 70: ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY" ,4.1,1,0,0,0,0,0);
				case 71: ApplyAnimation(playerid, "GHANDS", "gsign2" ,4.1,1,0,0,0,0,0);
				case 72: ApplyAnimation(playerid, "GHANDS", "gsign4" ,4.1,1,0,0,0,0,0);
				case 73: ApplyAnimation(playerid, "GHANDS", "gsign5" ,4.1,1,0,0,0,0,0);
				default:return ShowPlayerDialogEx(playerid, 0, 0,"{43CD80}Информация", "{FFFFFF}Для быстрого запуска нужной анимации \
					можно использовать\n\n{7396FB}/anim [номер анимации из списка]", "Скрыть", "");
				}
				animan[playerid]=1;
				TextDrawShowForPlayer(playerid, StopAnimation);
			}
		}
		case 134:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        if(IsPlayerInRangeOfPoint(playerid,1,1285.9365,-1270.2250,13.5939))return SendError(playerid,"Вы и так уже на 1 этаже");
				        J_SetPlayerPos(playerid,1285.9365,-1270.2250,13.5939);
				    }
				    case 1:
				    {
				        if(IsPlayerInRangeOfPoint(playerid,1,1287.2783,-1261.7417,20.6199))return SendError(playerid,"Вы и так уже на 2 этаже");
				        J_SetPlayerPos(playerid,1287.2783,-1261.7417,20.6199);
				    }
				    case 2: J_SetPlayerPos(playerid,1289.0641,-1271.5160,13.5400);
				}
			}
		}
		case 56:
		{
			if(response)
			{
			    new tarif, name[10];
				sscanf(inputtextsave, "p<,>is[10]", tarif, name);
				new carid = GetPlayerVehicleID(playerid);
				if(tarif > 0 && tarif <= 100)
				{
				    if(strlen(name) <= 10)
				    {
						TaxiTarif[playerid] = tarif;
						PlayerTextDrawShow(playerid,TaxiDraw[playerid]);
						TextDrawShowForPlayer(playerid, Taximeter[0]);
						TextDrawShowForPlayer(playerid, Taximeter[1]);
						TextDrawShowForPlayer(playerid, Taximeter[2]);
						TextDrawShowForPlayer(playerid, Taximeter[3]);
						format(string,sizeof(string),"%s\n{D94141}ТАРИФ: $%d\n{FF0000}ЗВОНИ {FF4400}999", name, tarif);
						SetDynamicObjectMaterialText(VehObjects[carid][3], 0, string, 130, "Calibri", 20, 0, 0xFFFF0000, 0, 1);
					}
					else Dialog_Open(playerid,56,1,"{43CD80}Тариф","\n\n\\c{FFFFFF}Введите ваш тариф и слоган через запятую\n\n{7396FB}\\cТариф от $1 до $100\n\\cСлоган не более 10-и символов\n\n\\c{514FFB}Пример: 100,Форсаж\n\n","Далее","Отмена");
				}
				else Dialog_Open(playerid,56,1,"{43CD80}Тариф","\n\n\\c{FFFFFF}Введите ваш тариф и слоган через запятую\n\n{7396FB}\\cТариф от $1 до $100\n\\cСлоган не более 10-и символов\n\n\\c{514FFB}Пример: 100,Форсаж\n\n","Далее","Отмена");
			}
			return true;
		}
	  	case 58:
		{
	 		if(response)
			{
			    switch(listitem)
			    {
					case 0:
					{
		        		SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		        		SendClientMessage(playerid, COLOR_VALIK, "Вы изменили стиль боя на {AA3333}'Обычный'");
		        		return true;
		    		}
					case 1:
					{
						if(!PlayerInfo[playerid][pBoxing])
						{
							SendError(playerid,"Вы не знаете этот стиль");
							return true;
						}
		        		SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
		        		SendClientMessage(playerid, COLOR_VALIK, "Вы изменили стиль боя на {AA3333}'Boxing'");
		        		return true;
		 			}
		    		case 2:
					{
						if(!PlayerInfo[playerid][pKungfu])
						{
							SendError(playerid,"Вы не знаете этот стиль");
							return true;
						}
		        		SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
		        		SendClientMessage(playerid, COLOR_VALIK, "Вы изменили стиль боя на {AA3333}'Kungfu'");
		        		return true;
		    		}
		    		case 3:
					{
						if(!PlayerInfo[playerid][pKneehead])
						{
							SendError(playerid,"Вы не знаете этот стиль");
							return true;
						}
		        		SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		        		SendClientMessage(playerid, COLOR_VALIK, "Вы изменили стиль боя на {AA3333}'Kneehead'");
		        		return true;
		    		}
		    		case 4:
					{
						if(!PlayerInfo[playerid][pElbow])
						{
							SendError(playerid,"Вы не знаете этот стиль");
							return true;
						}
		        		SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
		        		SendClientMessage(playerid, COLOR_VALIK, "Вы изменили стиль боя на {AA3333}'Elbow'");
		        		return true;
		    		}
		    		case 5:
		    		{
		    		    new cfgstring[700];
					    format(cfgstring,sizeof(cfgstring),"\
						\t{7396FB}Для изучения стиля боя, вы должны отправиться в спортзал, найти его можно в /gps [Важные места]\n\
						\t{7396FB}Дальше вам нужно переодеться и начать тренировку. Бейте грушу чтобы улучшить навык владения стилем борьбы.\n\n\n\
						\t{1874cd}- Бокс{FFFFFF}- 5000 очк.\n\
						\t{1874cd}- Кунг-фу{FFFFFF}- 10000 очк.\n\
						\t{1874cd}- Kneehead{FFFFFF}- 20000 очк.\n\
						\t{1874cd}- Кикбоксинг{FFFFFF}- 30000 очк");
						return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Помощь",cfgstring,"Принять","");
		    		}
		    		default: return false;
	    		}
	    	}
	    }
		case 184:ShowHelpDialog(playerid);
		case 64:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                new str[1125] = "\n\n{FFFFFF}";
		                strcat(str,"\\cГде мне получить паспорт? - Паспорт можно получить в мэрии\n");
		                strcat(str,"\\cКак мне заработать немного денег? - Вы можете поработать на заводе/ферме/винограднике/шахте\n");
		                strcat(str,"\\cГде мне найти то или иное место? - /gps\n");
		                strcat(str,"\\cКак сменить пароль? - /mm > Параметры персонажа > Смена пароля\n");
		                strcat(str,"\\cКак изменить настройки аккаунта? - /mm > Параметры персонажа\n");
		                strcat(str,"\\cНа этом сервере выдают деньги, имущество, бонусы? - Нет, каждый игрок должен начинать с 0\n");
		                format(str,sizeof(str),"%s\\cКакой сайт у сервера? - %s\n", str, Mode_Site);
		                strcat(str,"\\cКак посмотреть список команд сервера? - /help\n");
		                strcat(str,"\\cКак быстро прокачать скилл оружия? - Прокачивая таланты или стреляя по мишеням\n");
		                strcat(str,"\\cГде найти мэрию? - /gps » Важные места\n");
		                strcat(str,"\\сКакой бонус для новичков? Никаких бонусов, кроме промо-кодов, нет\n");
		                strcat(str,"\\сПочему нет машин на авторынке? - На сервере единый оборот автомобилей, они там появляются если кто-то не платит налоги\n");
		                strcat(str,"\\cЧто такое недошедшие счета? - Это счета за дом которые вам еще не доставили. За недошедшие счета платить не надо\n");
		                strcat(str,"\\cГде получить медкарту? - Ее можно получить, пройдя мед.осмотр у врачей\n");
		                strcat(str,"\\cПродаются ли на сервере права администратора? - Нет, не продаются\n\n");
                        Dialog_Open(playerid,184,0,"Частые вопросы",str,"Скрыть","");
					}
			        case 1:
			        {
			            if(PlayerInfo[playerid][pPhone])
			            {
							ShowPlayerDialogEx(playerid,184,0,"Команды для телефона","{43CD80}/phone - {FFFFFF}Управление телефоном","Скрыть","");
						}
						else ShowPlayerDialogEx(playerid, 184, 0, "Команды (Телефон)", "{D94141}У вас нет телефона", "Скрыть", "");
			        }
			        case 2:
			        {
			            switch(PlayerInfo[playerid][pJob])
			            {
				            case JOB_GUNDEALER: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
							{43CD80}/jlock{FFFFFF} - Закрыть служебный транспорт\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
				            case JOB_DETECTIVE: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
        			  		case JOB_CARJACKER: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
							{43CD80}/orderlist{FFFFFF} - Найти бизнес для продажи продуктов\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
				            case JOB_MECHANIC: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
				            {43CD80}/gomechanik{FFFFFF} - Принять вызов\n\
				            {43CD80}/jlock{FFFFFF} - Закрыть служебный транспорт\n\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
       						case JOB_GUIDE: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
							case JOB_TAXI: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/gotaxi{FFFFFF} - Принять вызов\n\
							{43CD80}/jlock{FFFFFF} - Закрыть служебный транспорт\n\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
							{43CD80}/rt{FFFFFF} - Рация для таксистов\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
				            case JOB_ADVOKAT: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
							{43CD80}/zeks{FFFFFF} - База заключенных\n\
							{43CD80}/free{FFFFFF} - Сократить срок заключенному\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
							case JOB_MINER: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
							case JOB_COLLECTOR: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
							{43CD80}/jlock{FFFFFF} - Закрыть служебный транспорт\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
							case JOB_DRUGDEALER: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/selldrugs{FFFFFF} - Продать наркотики\n\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
							case JOB_TRUCKER: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
							{43CD80}/jlock{FFFFFF} - Закрыть служебный транспорт\n\
							{43CD80}/rt{FFFFFF} - Рация для дальнобойщик\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
       						case JOB_SCRAPER: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
							{43CD80}/jlock{FFFFFF} - Закрыть служебный транспорт\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
							case JOB_NALOG: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
							{43CD80}/jlock{FFFFFF} - Закрыть служебный транспорт\n\
							{43CD80}/stopjob{FFFFFF} - Закончить работу ( по желанию )\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
							
       						case 17: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");

       						case 18: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");

       						case 19: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jlock{FFFFFF} - Закрыть служебный транспорт\n\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");

       						case 20: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jlock{FFFFFF} - Закрыть служебный транспорт\n\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");

       						case 21: ShowPlayerDialogEx(playerid,184,0,"Команды для работ","{FFFFFF}\
							{43CD80}/jlock{FFFFFF} - Закрыть служебный транспорт\n\
							{43CD80}/jobhelp{FFFFFF} - Помощь по работе\n\
       						{43CD80}/quitjob{FFFFFF} - Уволиться с работы","Скрыть","");
				            default: SendError(playerid,"Вы нигде не работаете");
			            }
			        }
            		case 3:
			        {
			            if(GetTeamID(playerid) > 0)
			            {
			                new str[2000] = "{FFFFFF}";
							if(IsACop(playerid))
							{
								strcat(str,"{43CD80}/f{FFFFFF} - Полицейский чат\n");
							    strcat(str,"{43CD80}/su{FFFFFF} - Объявить игрока в розыск\n");
							    strcat(str,"{43CD80}/find{FFFFFF} - Найти игрока\n");
							    strcat(str,"{43CD80}/clear{FFFFFF} - Очистить розыск игрока\n");
							    strcat(str,"{43CD80}/take{FFFFFF} - Отобрать что либо\n");
							    strcat(str,"{43CD80}/frisk{FFFFFF} - Обыскать игрока\n");
							    strcat(str,"{43CD80}/cuff{FFFFFF} - Надеть/Снять наручиники\n");
							    strcat(str,"{43CD80}/putobject{FFFFFF} - Поставить ограждение/предмет\n");
							    strcat(str,"{43CD80}/put{FFFFFF} - Затащить игрока в транспорт\n");
							    strcat(str,"{43CD80}/wanted{FFFFFF} - Список разыскиваемых\n");
							    strcat(str,"{43CD80}/ticket{FFFFFF} - Выписать штраф\n");
							    strcat(str,"{43CD80}/arrest{FFFFFF} - Арестовать преступников\n");
							    strcat(str,"{43CD80}/m{FFFFFF} - Мегафон (В транспорте)\n");
							    strcat(str,"{43CD80}/cpark{FFFFFF} - Поставить машину на штрафстоянку\n");
							    strcat(str,"{43CD80}/tow{FFFFFF} - Прицепить машину (в эвакуаторе)\n");
							    strcat(str,"{43CD80}/demoute{FFFFFF} (8-10) [FBI] - Уволить гос.служащего\n");
							    strcat(str,"{43CD80}/d{FFFFFF} - Гос. чат\n");
							    strcat(str,"{43CD80}/bot{FFFFFF} - Отобрать скрепки\n");
							    strcat(str,"{43CD80}/gotome{FFFFFF} - Вести игрока за собой\n");
								strcat(str,"{43CD80}/setradar{FFFFFF} - Установить радар\n");
							}
							if(GetTeamID(playerid) == TEAM_FBI) strcat(str,"{43CD80}/scutes{FFFFFF} - Прикрепить жучек на мобильный\n");
							else if(GetTeamID(playerid) == TEAM_M4C || GetTeamID(playerid) ==  TEAM_MEDICLV)
							{
							    strcat(str,"{43CD80}/medcard{FFFFFF} - Выдать мед. карту\n");
							    strcat(str,"{43CD80}/heal{FFFFFF} - Вылечить пациента\n");
							    strcat(str,"{43CD80}/recept{FFFFFF} - выдать рецепт на лекарство\n");
							}
							else if(GetTeamID(playerid) == TEAM_MERIALS)
							{
								strcat(str,"{43CD80}/demoute{FFFFFF} (8-10) - Уволить гос.служащего\n");
								strcat(str,"{43CD80}/economy{FFFFFF} - Управление экономикой\n");
							}
							else if(GetTeamID(playerid) == TEAM_MERIALV)
							{
							    strcat(str,"{43CD80}/medcard{FFFFFF} - Выдать мед. карту\n");
							    strcat(str,"{43CD80}/heal{FFFFFF} - Вылечить пациента\n");
							}
							else if(GetTeamID(playerid) == TEAM_BANK)
							{
								strcat(str,"{43CD80}/bankmenu{FFFFFF} - Банковкое меню\n");
								strcat(str,"{43CD80}/credit{FFFFFF} - Изменить кредитную ставку\n");
							}
							else if(GetTeamID(playerid) == TEAM_LICENSERS) strcat(str,"{43CD80}/givelic{FFFFFF} - Выдать лицензию\n");
							else if(IsANews(playerid))
							{
								strcat(str,"{43CD80}/live{FFFFFF} - Взять интервью у игрока\n");
								strcat(str,"{43CD80}/endlive{FFFFFF} - Окончить интервью с игроком\n");
								strcat(str,"{43CD80}/news{FFFFFF} - Говорить в чат News\n");
								strcat(str,"{43CD80}/edit{FFFFFF} - Редактировать объявление\n");
							}
							else if(IsAMeria(playerid)) if(PlayerInfo[playerid][pRank] >= 4) strcat(str,"{43CD80}/wedding{FFFFFF} - Провести помолвку\n");
							if(IsAtFrakcia(playerid))
							{
							    if(PlayerInfo[playerid][pLeader]>0)
							    {
		         					strcat(str,"{43CD80}/blacklist{FFFFFF} - Добавить игрока в ЧС\n");
			        				strcat(str,"{43CD80}/unblacklist{FFFFFF} - Удалить игрока из ЧС\n");
							    }
			        			if(PlayerInfo[playerid][pRank]>8)strcat(str,"{43CD80}/gov{FFFFFF} - Подать государственную новость\n");
							}
							else if(IsAtFrakcia(playerid))strcat(str,"{43CD80}/blackplayers{FFFFFF} - Черный список закона\n");
							else if(IsAtMafia(playerid))
							{
							    strcat(str,"{43CD80}/f{FFFFFF} - Чат семьи\n");
							    strcat(str,"{43CD80}/mbiz{FFFFFF} - Бизнесы\n");
							    strcat(str,"{43CD80}/bizwar{FFFFFF} - Начать войну за Биз.\n");
							    strcat(str,"{43CD80}/givebiz{FFFFFF} - Добровольно отдать бизнес.\n");
							    strcat(str,"{43CD80}/createbomb{FFFFFF} - Сделать бомбу\n");
							    strcat(str,"{43CD80}/bomb{FFFFFF} - Заложить бомбу.\n");
							}
							else if(IsAtGang(playerid))
							{
							    strcat(str,"{43CD80}/f{FFFFFF} - Чат семьи\n");
						     	strcat(str,"{43CD80}/drug{FFFFFF} - Посадить наркотик\n");
						 		strcat(str,"{43CD80}/capture{FFFFFF} - Захватить зону\n");
						 		strcat(str,"{43CD80}/sellgun{FFFFFF} - Сделать оружие\n");
						 		strcat(str,"{43CD80}/sellgangzone{FFFFFF} - Продать територию\n");
						 		if(PlayerInfo[playerid][pRank]>=9)
						 		{
						 		    strcat(str,"{43CD80}/getmoney{FFFFFF} - Забрать деньги с наркопритона\n");
						 		    strcat(str,"{43CD80}/putmoney{FFFFFF} - Положить деньги на баланс наркопритона\n");
						 		    strcat(str,"{43CD80}/setdsell{FFFFFF} - Установить стоимость продажи наркотиков\n");
						 		    strcat(str,"{43CD80}/setdbuy{FFFFFF} - Установить стоимость покупки наркотиков\n");
						 		}
							}
							if(!IsAtGang(playerid) && !IsAtMafia(playerid)) strcat(str,"{43CD80}/r{FFFFFF} - Чат организации\n");
							strcat(str,"{43CD80}/opengate{FFFFFF} - Открыть ворота организации\n");
							strcat(str,"{43CD80}/invite{FFFFFF} - Принять игрока в организацию\n");
							strcat(str,"{43CD80}/skin{FFFFFF} - Выбрать скин для игрока\n");
							strcat(str,"{43CD80}/uninvite{FFFFFF} - Выгнать игрока из организации\n");
							strcat(str,"{43CD80}/uninviteoff{FFFFFF} - Выгнать игрока из организации offline\n");
							strcat(str,"{43CD80}/rang{FFFFFF} - Выдать игроку ранг\n");
							strcat(str,"{43CD80}/fwarn{FFFFFF} - Дать игроку выговор\n");
							strcat(str,"{43CD80}/unfwarn{FFFFFF} - Снять игроку выговор\n");
							strcat(str,"{43CD80}/fmute{FFFFFF} - Заглушить игрока\n");
							strcat(str,"{43CD80}/funmute{FFFFFF} - Снять мут игроку\n");
			                ShowPlayerDialogEx(playerid,184,0,"Команды для организаций",str,"Скрыть","");
			            }
			            else ShowPlayerDialogEx(playerid,184,0,"Команды для организаций","{D94141}Вы не состоите ни в одной из организаций","Скрыть","");
			        }
			        case 4:
			        {
			            if(SlotValue[playerid][1] != -1)
	            		{
							new str[50] = "{FFFFFF}";
			                strcat(str,"{43CD80}/exit{FFFFFF} - Выйти из дома\n");
			                ShowPlayerDialogEx(playerid,184,0,"Команды для дома",str,"Скрыть", "");
			            }
			            else ShowPlayerDialogEx(playerid,184,0,"Команды для дома","{D94141}У вас нет дома и вы не арендуете дом","Скрыть","");
					}
					case 5:
			        {
			            GetNumberCars(playerid,PlayerInfo[playerid][pCars]);
			            if(PlayerInfo[playerid][pCars] > 0)
			            {
							new str[900] = "{FFFFFF}";
							strcat(str,"{43CD80}/carpass{FFFFFF} - Показать техпаспорт\n");
							strcat(str,"{43CD80}/key{FFFFFF} - Вставить/Вытащить ключи\n");
							strcat(str,"{43CD80}/balon{FFFFFF} - Покрасить машину\n");
							strcat(str,"{43CD80}/park{FFFFFF} - Припарковать транспорт\n");
							strcat(str,"{43CD80}/lock{FFFFFF} - Закрыть/Открыть транспорт\n");
							strcat(str,"{43CD80}/givekey{FFFFFF} - Дать ключи от транспорта\n");
							if(PlayerInfo[playerid][pVIP] >= STATUS_VIP)strcat(str,"{43CD80}/deltun{FFFFFF} - Удалить тюнинг с транспорта\n");
							if(PlayerInfo[playerid][pVIP] >= 3)strcat(str,"{43CD80}/fixcar{FFFFFF} - Починить транспорт\n");
			                ShowPlayerDialogEx(playerid,184,0,"Команды для личного транспорта",str,"Скрыть","");
			            }
			            else ShowPlayerDialogEx(playerid,184,0,"Команды для личного транспорта","{D94141}У вас нет личного транспорта","Скрыть","");
			        }
			        case 6:
			        {
			            ShowPlayerDialogEx(playerid,184,0,"Команды для транспорта","{FFFFFF}\
						{43CD80}/en{FFFFFF} - Завести/Заглушить дивигатель\n\
						{43CD80}/eject{FFFFFF} - Выкинуть игрока из транспорта\n\
						{43CD80}/fill{FFFFFF} - Заправить транспорт", "Скрыть", "");

					}
					case 7: ShowPlayerDialogEx(playerid,184,0,"Команды для анимаций","{43CD80}/anim - Список анимаций","Скрыть","");
					case 8:
			        {
			            ShowPlayerDialogEx(playerid,184,0,"Команды для чата","{43CD80}/c{FFFFFF} - Сказать шепотом\n\
							{43CD80}/ad{FFFFFF} - Подать объявление\n\
							{43CD80}/s{FFFFFF} - Кричать\n\
							{43CD80}/b{FFFFFF} - Нон-РП(OOC) чат\n\
							{43CD80}/r{FFFFFF} - Чат организации\n\
							{43CD80}/m{FFFFFF} - Говорить в мегафон\n\
							{43CD80}/d{FFFFFF} - Чат департамента","Скрыть","");
			        }
					case 9:
					{
					    new str[500] = "{FFFFFF}";
					    strcat(str,"{43CD80}/put{FFFFFF} - Затащить игрока в транспорт\n");
					    strcat(str,"{43CD80}/tie{FFFFFF} - Связать игрока\n");
						strcat(str,"{43CD80}/untie{FFFFFF} - Развязать игрока\n");
					    ShowPlayerDialogEx(playerid,184,0,"Команды для похищений",str,"Скрыть","");
					}
					case 10:
			        {
						new str[1750] = "{FFFFFF}";
						strcat(str,"{43CD80}/satiety{FFFFFF} - Состояние голода\n");
						strcat(str,"{43CD80}/iznas{FFFFFF} - Изнасиловать жертву\n");
						strcat(str,"{43CD80}/piss{FFFFFF} - Справить нужду\n");
						strcat(str,"{43CD80}/leaders{FFFFFF} - Список лидеров онлайн\n");
						strcat(str,"{43CD80}/pay{FFFFFF} - Передать деньги игроку\n");
						strcat(str,"{43CD80}/hi{FFFFFF} - Поздороваться с игроком\n");
						strcat(str,"{43CD80}/drink{FFFFFF} - Пить что либо\n");
						strcat(str,"{43CD80}/usebad{FFFFFF} - Принять таблетку\n");
						strcat(str,"{43CD80}/bail{FFFFFF} - Внести залог за игрока\n");
						strcat(str,"{43CD80}/throwfish{FFFFFF} - Выбросить рыбу\n");
						strcat(str,"{43CD80}/fishes{FFFFFF} - Список рыбы\n");
						strcat(str,"{43CD80}/eat{FFFFFF} - Есть чипсы\n");
						strcat(str,"{43CD80}/beer{FFFFFF} - Пить пиво\n");
						strcat(str,"{43CD80}/sprunk{FFFFFF} - Пить спранк\n");
						strcat(str,"{43CD80}/number{FFFFFF} - Телефоная книга\n");
						strcat(str,"{43CD80}/break{FFFFFF} - Вскрыть наручники\n");
						strcat(str,"{43CD80}/radio{FFFFFF} - Включить радио\n");
						strcat(str,"{43CD80}/armour{FFFFFF} - Надеть бронежилет\n");
						strcat(str,"{43CD80}/setspawn{FFFFFF} - Сменить место спавна\n");
                        strcat(str,"{43CD80}/giveweapon{FFFFFF} - Передать оружие игроку\n");
                        strcat(str,"{43CD80}/dropgun{FFFFFF} - Положить оружие на землю\n");
                        strcat(str,"{43CD80}/flowers{FFFFFF} - Подарить цветы\n");
    	 				strcat(str,"{43CD80}/kiss{FFFFFF} - Поцеловать человека\n");
    	 				strcat(str,"{43CD80}/advokats{FFFFFF} - Адвокаты онлайна\n");
    	 				strcat(str,"{43CD80}/setradio{FFFFFF} - Выбрать радиостанцию\n");
    	 				strcat(str,"{43CD80}/delldrugs{FFFFFF} - Выкинуть наркотики\n");
			            ShowPlayerDialogEx(playerid,184,0,"Другие команды",str,"Скрыть","");
					}
					case 11:
			        {
			            Dialog_Open(playerid,184,0,"{43CD80}Навыки стрельбы","{FFFFFF}\n\n\
						\\cУ каждого оружия есть свой навык для его прокачки\n\
						\\cЧтобы лучше стрелять вам нужно повышать его\n\
						\\cПосмотреть навыки стрельбы можно с помощью команды '/skill'\n","Скрыть", "");
					}
					case 12: ShowRules(playerid, 184);
					case 13:
					{
					    new str[2000];
						strcat(str,"\n\n\\c{FFFFFF}Преимущества статуса GG START\n");
						strcat(str,"{43CD80}\\cБольше процент в банке\n");
						strcat(str,"\\cУдаление тюнинга с личного транспорта\n");
						strcat(str,"\\cВозможность иметь 2 личных транспорта\n");
						
						strcat(str,"\n\\c{FFFFFF}Преимущества статуса GG ADVANCE\n");
						strcat(str,"{43CD80}\\cВсе преимущества предыдущего статуса\n");
						strcat(str,"\\cВозможность иметь 3 личных транспорта\n");
						strcat(str,"\\cЛечение в больнице проходит в 2 раза быстрее\n");
						strcat(str,"\\cИспытывать чувство голода вы будете в 2 раза реже\n");
						
						strcat(str,"\n\\c{FFFFFF}Преимущества статуса GG PRO\n");
						strcat(str,"{43CD80}\\cВсе преимущества предыдущего статуса\n");
						strcat(str,"\\cКаждый PayDay вы будете получать 1 DP\n");
						strcat(str,"\\cВозможность иметь 4 личных транспорта\n");
						strcat(str,"\\cВозможность ремонтировать личный транспорт (( /fixcar ))\n");
						
						strcat(str,"\n\\c{FFFFFF}Преимущества статуса GG\n");
						strcat(str,"{43CD80}\\cВсе преимущества предыдущего статуса\n");
						strcat(str,"\\cКаждый PayDay вы будете получать 2 DP\n");
						strcat(str,"\\cВозможность иметь 5 личных транспортов\n");
						strcat(str,"\\cНамного больше процент депозита в банке\n");
						strcat(str,"\\cЛечение в больнице проходит в 2 раза быстрее.\n");
						
						strcat(str,"\n\\c{FFFFFF}Преимущества статуса GG+\n");
						strcat(str,"{43CD80}\\cВсе преимущества предыдущего статуса\n");
						strcat(str,"\\cКаждый payday вы будете получать 3 DP\n");
						strcat(str,"\\cVIP-Чат для всех игроков со статусом GG+ (( /vr ))\n");
						strcat(str,"\\cСтатус не нужно продлевать\n");
						strcat(str,"\\cБольше процент в банке\n");
						strcat(str,"\\cВ банке можно хранить больше 40 миллионов\n\n");
						Dialog_Open(playerid,184,0,"{43CD80}Преимущества статусов персонажа",str,"Скрыть","");
					}
					case 14:
					{
     					new str[1000];
					    strcat(str,"\n\n\\c{FFFFFF}Однорукий бандит\n");
						strcat(str,"{43CD80}\\cДля игры в эту игру вам необходимо найти казино, найти его можно\n");
						strcat(str,"\\cс помощью /gps - Разное. После подойти к свободному автомату и нажать клавишу ходьбы.\n");
						strcat(str,"\\cТам вы сможете посмотреть шанс победы и начать игру, вставив в автомат денежные средства\n\n");
						Dialog_Open(playerid,184,0,"{43CD80}Однорукий бандит",str,"Скрыть","");
					}
					case 15:
					{
					    new str[200];
						format(str,sizeof(str),"\n\n\
						\\c{FFFFFF}Наш сайт: {43CD80}%s{FFFFFF}\n\
						\\cНаш Форум: {43CD80}%s{FFFFFF}\n\
						\\cГруппа ВКонтакте: {43CD80}vk.com/goodgame\n\n",Mode_Site,Mode_Forum);
						Dialog_Open(playerid,184,0,"{43CD80}Наши интернет-источники",str,"Скрыть","");
					}
					case 16:
					{
					    new str[2500];
					    strcat(str,"\n\n\\c{FFFFFF}Воровство материалов\n");
					    strcat(str,"{43CD80}\\cДля начала вам надо запастись терпением и силой воли, ведь вам придётся воровать\n");
					    strcat(str,"\\cматериалы прямо с територии армий. Будьте осторожны, когда будете это делать!\n");
					    strcat(str,"\\cПосле того, как у Вас появятся материалы, из них можно сделать оружие командой (( /sellgun ))\n\n");
					    Dialog_Open(playerid,184,0,"{43CD80}Кража материалов",str,"Скрыть", "");
					}
					case 17:
					{
					    new str[2800];
					    strcat(str,"\n\n\\c{FFFFFF}Банковская карта\n");
					    strcat(str,"{43CD80}\\cПолучить банковскую карту вы можете в Центральном банке, найти его можно с помощью /gps - важные места, у сотрудника банка\n");
					    strcat(str,"\\cДля получения банковской карты необходимо с собой иметь 1000$. После того, как вы добрались к месту назначения, внимательно перечитайте условия банка.\n");
					    strcat(str,"\\cОбратите внимание, если вы неправильно введете пароль при регистрации банковской карты, его можно будет восстановить у сотрудника банка.\n");
					    strcat(str,"\\cВы не сможете пользоватся банком/банкоматом не имея банковской карты или пароля к ней. Вводить пароль вам придётся только 1 раз, при\n");
					    strcat(str,"\\cпервой попытке воспользоваться денежными средствами в вашем банке.\n\n");
					    Dialog_Open(playerid,184,0,"{43CD80}Банк",str,"Скрыть", "");
					}
					default: return false;
				}
		    }
		}
		case 65:
		{
		    if(response && IsPlayerLogged[playerid]) ShowUpdateSettings(playerid);
			return true;
		}
		case 69:
		{
		    if(response) FirstReferal[playerid] += 10;
		    else
		    {
		        if(FirstReferal[playerid] >= 10) FirstReferal[playerid] -= 10;
		        else return true;
		    }
		    new Name[24], level;
		    format(string, sizeof(string), "SELECT `NickName`FROM `accounts` WHERE `Referal` = '%s' LIMIT %i, 10", PlayerName[playerid], FirstReferal[playerid]);
		    new Cache:result = mysql_query(mysql, string);
			string = "";
      		new accounts = cache_get_row_count(mysql);
			if(accounts == 0) return SendError(playerid,"Больше вас никто не указывал как реферала");
			strcat(string,"{C9EAFF}••••••••••••••••••••••••••••••••••••••••••••••••••••\n\n");
			for(new i; i < accounts; i ++)
			{
				cache_get_row(i, 0, Name, mysql);
				level = cache_get_field_content_int(i, "Exp", mysql);
				if(level >= 30)format(string, sizeof(string), "%s\\c{7396FB}[%i] {ffffff}%s {C9EAFF}| Заработано $50000\n", string, i+1, Name);
				else format(string, sizeof(string), "%s\\c{7396FB}[%i] {ffffff}%s\n", string, i+1, Name);
			}
			strcat(string,"\n{C9EAFF}••••••••••••••••••••••••••••••••••••••••••••••••••••\n\n");
			cache_delete(result, mysql);
  			ShowPlayerDialogEx(playerid, 69, 0, "{43CD80}Приглашённые", string, "Далее", "Назад");
		}
		case 70:
		{
		    if(response)
		    {
		        if(DrivingTest[playerid] != 0)
		        {
		            new que, question;
		            que = Question[playerid];
		            question = TestASKMassive[playerid][que];
		            if(QueInfo[question][dSuccesQwe] != -1 && listitem != QueInfo[question][dSuccesQwe]) Errors[playerid] ++;
		            Question[playerid] ++;
		            que = Question[playerid];
		            if(que < 4)
		            {
		                question = TestASKMassive[playerid][que];
		          		ShowPlayerDialogEx(playerid,70,QueInfo[question][dDialog],QueInfo[question][dQuestion],QueInfo[question][dAnswers],"Далее","Отмена");
					}
					else
					{
						format(string,sizeof(string),"[Информация] {FFFFFF}Правильных ответов: %d/4",4-Errors[playerid]);
						SendClientMessage(playerid,COLOR_ORANGE,string);
						if(!Errors[playerid])
						{
							SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы ответили на все заданные вопросы! Для того чтобы приступить к");
							SendClientMessage(playerid,COLOR_WHITE,"следующей части экзамена, выйдите на улицу и сядьте в одно из учебных автомобилей. Внимательно читайте");
							SendClientMessage(playerid,COLOR_WHITE,"все подсказки, которые видите на экране");
							CarTest[playerid] = 0;
							DrivingTest[playerid] = 0;
							Question[playerid] = 0;
						}
						else
						{
							SendClientMessage(playerid,COLOR_LIGHTRED,"[Информация] {FFFFFF}Вы провалили тест. Необходимо ответить на все вопросы правильно");
							DrivingTest[playerid] = 0;
							CarTest[playerid] = -1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_LIGHTRED,"[Информация] {FFFFFF}Вы провалили тест");
				DrivingTest[playerid] = 0;
			}
			return true;
		}
		case 88:
		{
		    if(response)
		    {
		        if(ProxDetectorS(2.0,playerid,TakeOffer[playerid], 1) || listitem == 3)
		        {
		            new id = TakeOffer[playerid];
		            if(Cuffed[id] || CuffedTime[id] > 0 || listitem == 3)
		            {
						switch(listitem)
						{
				            case 0:
				            {
				                format(string,sizeof(string),"[Информация] {FFFFFF}Вы отобрали наркотики у %s",PlayerName[id]);
				            	SendClientMessage(playerid,COLOR_VALIK,string);
				            	format(string,sizeof(string),"[Информация] {FFFFFF}Полицейский %s отобрал у вас наркотики",PlayerName[playerid]);
				            	SendClientMessage(id,COLOR_RED,string);
				            	SlotValue[id][14] = 0;
				            	TakeOffer[playerid] = INVALID_PLAYER_ID;
				            }
				            case 1:
				            {
				                format(string,sizeof(string),"[Информация] {FFFFFF}Вы отобрали материалы у %s",Name(id));
				            	SendClientMessage(playerid,COLOR_VALIK,string);
				            	format(string,sizeof(string),"[Информация] {FFFFFF}Полицейский %s отобрал у вас материалы",Name(playerid));
				            	SendClientMessage(id,COLOR_RED,string);
				            	SlotValue[id][11] = 0;
				            	TakeOffer[playerid] = INVALID_PLAYER_ID;
				            }
				            case 2:
				            {
				                format(string,sizeof(string),"[Информация] {FFFFFF}Вы отобрали оружие у %s",Name(id));
				            	SendClientMessage(playerid,COLOR_VALIK,string);
				            	format(string,sizeof(string),"[Информация] {FFFFFF}Полицейский %s отобрал у вас оружие",Name(playerid));
				            	SendClientMessage(id,COLOR_RED,string);
				            	_ResetGun(id);
				            	TakeOffer[playerid] = INVALID_PLAYER_ID;
				            }
				            case 3: ShowPlayerDialogEx(playerid,89,2,"{43CD80}Что конфиксовать?","Лицензию на авто\nЛицензию на мото\nЛицензию на полеты\nЛицензию на ловлю рыбы\nЛицензию на водный транспорт\nЛицензию на оружие","Отобрать","Отмена");
						}
					}
					else SendError(playerid,"Человек должен быть обездвижен");
		        }
		        else SendError(playerid,"Вы далеко от игрока");
			}
		}
		case 89:
		{
		    if(response)
		    {
		        new id = TakeOffer[playerid];
		        new Zak[20];
		        if(IsACop(playerid)) Zak = "Полицейский";
		        else if(GetTeamID(playerid) == TEAM_LICENSERS) Zak = "Инструктор";
		        switch(listitem)
		        {
					case 0:
					{
					    if(PlayerInfo[id][pCarLic] < YES_LICENSE) return SendError(playerid,"У этого игрока нет лицензии на авто");
					    if(PlayerInfo[id][pCarLic] == NULLED_LIC) return SendError(playerid,"Лицензия на авто этого игрока уже обнулена");
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы обнулили лицензию на авто игрока %s",PlayerName[id]);
						SendClientMessage(playerid,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на авто",Zak,PlayerName[playerid]);
						SendClientMessage(id,COLOR_RED,string);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						PlayerInfo[id][pCarLic] = NULLED_LIC;
					}
					case 1:
					{
					    if(PlayerInfo[id][pBikeLic] < YES_LICENSE) return SendError(playerid,"У этого игрока нет лицензии на мото");
					    if(PlayerInfo[id][pBikeLic] == NULLED_LIC) return SendError(playerid,"Лицензия на мото этого игрока уже обнулена");
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы обнулили лицензию на мото игрока %s",PlayerName[id]);
						SendClientMessage(playerid,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на мото",Zak,PlayerName[playerid]);
						SendClientMessage(id,COLOR_RED,string);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						PlayerInfo[id][pBikeLic] = NULLED_LIC;
					}
					case 2:
					{
					    if(PlayerInfo[id][pFlyLic] < YES_LICENSE) return SendError(playerid,"У этого игрока нет лицензии на полеты");
					    if(PlayerInfo[id][pFlyLic] == NULLED_LIC) return SendError(playerid,"Лицензия на полеты этого игрока уже обнулена");
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы обнулили лицензию на полеты игрока %s",PlayerName[id]);
						SendClientMessage(playerid,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на полеты",Zak,PlayerName[playerid]);
						SendClientMessage(id,COLOR_RED,string);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						PlayerInfo[id][pFlyLic] = NULLED_LIC;
					}
					case 3:
					{
					    if(PlayerInfo[id][pFishLic] < YES_LICENSE) return SendError(playerid,"У этого игрока нет лицензии на рыбалку");
					    if(PlayerInfo[id][pFishLic] == NULLED_LIC) return SendError(playerid,"Лицензия на рыбалку этого игрока уже обнулена");
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы обнулили лицензию на ловлю рыбы игрока %s",PlayerName[id]);
						SendClientMessage(playerid,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на ловлю рыбы",Zak,PlayerName[playerid]);
						SendClientMessage(id,COLOR_RED,string);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						PlayerInfo[id][pFishLic] = NULLED_LIC;
					}
					case 4:
					{
					    if(PlayerInfo[id][pBoatLic] < YES_LICENSE) return SendError(playerid,"У этого игрока нет лицензии на плавиние");
					    if(PlayerInfo[id][pBoatLic] == NULLED_LIC) return SendError(playerid,"Лицензия на водный транспорт этого игрока уже обнулена");
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы обнулили лицензию на водный транспорт игрока %s",PlayerName[id]);
						SendClientMessage(playerid,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на водный транспорт",Zak,PlayerName[playerid]);
						SendClientMessage(id,COLOR_RED,string);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						PlayerInfo[id][pBoatLic] = NULLED_LIC;
					}
					case 5:
					{
					    if(PlayerInfo[id][pGunLic] < YES_LICENSE) return SendError(playerid,"У этого игрока нет лицензии на оружие");
					    if(PlayerInfo[id][pGunLic] == NULLED_LIC) return SendError(playerid,"Лицензия на оружие этого игрока уже обнулена");
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы обнулили лицензию на оружие игрока %s",PlayerName[id]);
						SendClientMessage(playerid,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s %s обнулил вашу лицензию на оружие",Zak,PlayerName[playerid]);
						SendClientMessage(id,COLOR_RED,string);
						TakeOffer[playerid] = INVALID_PLAYER_ID;
						PlayerInfo[id][pGunLic] = NULLED_LIC;
					}
				}
			}
			else if(IsACop(playerid)) ShowPlayerDialogEx(playerid,88,2,"{43CD80}Что конфиксовать?","Наркотики\nМатериалы\nОружие\nЛицензию","Забрать","Отмена");
		}
		case 91:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pAdmin] >= ADM_ADMIN)
		        {
				    if(IsBannedName(UnbanName[playerid]))
				    {
				        UnBanName(UnbanName[playerid]);
				        format(string,sizeof(string)," Администратор %s разбанил игрока %s",Name(playerid),UnbanName[playerid]);
				        SendAdminsMessage(COLOR_YELLOW,string,1);
						Adminlog(playerid, 0, "UNBAN", 0,UnbanName[playerid]);
				    }
				    else SendError(playerid,"Игрок уже разбанен");
		        }
		    }
		}
		case 93:
		{
		    if(response)
		    {
          		switch(listitem)
				{
			        case 0:
			        {
			            new w;
			            if(SlotValue[playerid][0]<700)return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
						if(BuyingMehan(playerid, w, 0, 700, "лопату", "")) _SetGun(playerid, 6, 1);
			        }
			        case 1:
			        {
			            if(SlotValue[playerid][17] >= 10)
						{
							SendError(playerid,"У вас уже есть наборы для починки авто");
							ShowPlayerDialogEx(playerid,93,5,"{43CD80}Магазин механики",BUY_MENU_MEHAN,"Купить","Назад");
						}
						else BuyingMehan(playerid,SlotValue[playerid][17],1,1500,"набор для починки"," Используйте инвентарь, чтобы починить машину");
			        }
			        case 2:
			        {
			            if(SlotValue[playerid][20] >= 10)
						{
							SendError(playerid,"У вас уже есть канистры");
							ShowPlayerDialogEx(playerid,93,5,"{43CD80}Магазин механики",BUY_MENU_MEHAN,"Купить","Назад");
						}
						else BuyingMehan(playerid,SlotValue[playerid][20],1,1500,"канистру"," Используйте инвентарь, чтобы заправить машину");
			        }
			        case 3:
			        {
			            if(PlayerInfo[playerid][pRepBan]>10)
			            {
			                SendError(playerid,"Вы не можете иметь одновременно больше 10-ти балончиков с краской");
			                ShowPlayerDialogEx(playerid,93,5,"{43CD80}Магазин механики",BUY_MENU_MEHAN,"Купить","Назад");
			            }
			            else BuyingMehan(playerid,PlayerInfo[playerid][pRepBan],1,1500,"балончик с краской"," Используйте {7396FB}/balon{FFFFFF} чтобы красить свой автомобиль ");
			        }
			        case 4:
			        {
			            new w;
			            if(SlotValue[playerid][0]<2000)return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
						if(BuyingMehan(playerid, w, 0, 2000, "бензопилу", ""))
						{
							_SetGun(playerid, 9, 1);
						}
			        }
		        }
		    }
		}
  		case 96:
		{
			if(response)
			{
			    if(listitem == 20 || listitem == 21) CheckBanned(playerid,listitem);
       			else
			    {
			        strmid(UnbanName[playerid], inputtextsave, 0, strlen(inputtextsave) );
			        if(GetString(inputtextsave, "<<< Назад")) return CheckBanned(playerid,21);
			        new seconds, reason[100], admin[24], Name[24];
				    format(string, sizeof(string), "SELECT * FROM `bannames` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
					new Cache:result = mysql_query(mysql, string);
					if(cache_get_row_count(mysql) > 0)
					{
						cache_get_row(0, 1, Name, mysql);
						cache_get_row(0, 2, admin, mysql);
						cache_get_row(0, 3, reason, mysql);
						seconds = cache_get_field_content_int(0, "BanSeconds", mysql);

						new times = gettime();

						new tima[20],dima;
						if(floatround((seconds-times)/60/60/24)> 1)
						{
							tima = "дней";
							dima =floatround((seconds-times)/60/60/24,floatround_ceil);
						}
						else
					 	{
				 			tima = "час(ов)";
				 			dima = floatround((seconds-times)/60/60,floatround_ceil);
						}

					    format(string,sizeof(string),"\
						{FFFFFF}Заблокировал: [{CC3B12}%s{ffffff}]\n\
						{FFFFFF}Причина: [{CC3B12}%s{ffffff}]\n\
						{FFFFFF}До разблокировки: [{CC3B12}%d %s{ffffff}]",
						admin, reason, dima, tima);
						ShowPlayerDialogEx(playerid,91,0,UnbanName[playerid],string,"Разбан","Отмена");
					}
					else
				    {
				        format(string, sizeof(string), "Игрок %s не забанен", UnbanName[playerid]);
				        SendClientMessage(playerid, COLOR_GRAY, string);
				    }
				    cache_delete(result, mysql);
			    }

			}
		}
	    case 98:
	    {
	        if(response)
		    {
		        new biz = InfoBiz[playerid];
		        if(SlotValue[playerid][3] == -1)
		        {
			        if(GetString(BizInfo[biz][bOwner],"The State"))
		     	    {
		     	        if(GetMoney(playerid) >= BizInfo[biz][bCost])
		     	        {
	     	                GiveMoney(playerid,-BizInfo[biz][bCost],"Покупка бизнеса");
	     	                SlotValue[playerid][3] = biz;
	     	                BizInfo[biz][bLevel]=0;
		               	 	SetString(BizInfo[biz][bOwner],Name(playerid));
	     	                SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Поздравляем! Теперь этот бизнес ваш");
	     	                PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
	     	                UpdateBiz(biz,1);
	     	                SaveAccount(playerid);
							new logtime[3],logdate[3],logtimestring[16];
							getdate(logdate[2],logdate[1],logdate[0]);
							gettime(logtime[0],logtime[1],logtime[2]);
							f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
							WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Покупка бизнеса",-BizInfo[biz][bCost],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		     	        }
	     	        }
	     	    }
		    }
		    else NoEnterPickup[playerid] = 3;
		    return true;
	    }
	    case 99:
	    {
	        if(response)
	        {
		        new i = InfoBiz[playerid];
				if(!IsNoEnterBiz(i))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[i][bExit][0],BizInfo[i][bExit][1],BizInfo[i][bExit][2]))
					{
					    BizEntered[playerid] = -1;
					    SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						J_SetPlayerPos(playerid,BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2]);
					}
				}
			}
			else NoEnterPickup[playerid] = 3;
			return true;
	    }
		case 103:
		{
			if(response)
			{
				PlayerBuyState[playerid] = listitem-2;
			    switch(listitem)
				{
				    case 0:
				    {
				        if(PlayerInfo[playerid][pVID]==0) PlayerInfo[playerid][pVID]=1;
				        else PlayerInfo[playerid][pVID]=0;
				        callcmd::shopss(playerid);
				    }
					case 1:
					{
						new cost;
				        for(new i; i < 5; i ++)
				        {
				            new fish = PlayerFish[playerid][i];
				            if(fish != 0) cost += FishMassa[playerid][i] * FishCost[fish];
				        }
				        if(cost < 1) return SendError(playerid,"Рыбу менее чем на $1 не принимаем");
                        for(new i; i < 5; i ++)
				        {
				            PlayerFish[playerid][i] = 0;
				            FishMassa[playerid][i] = 0;
				        }
				        GiveMoney(playerid, cost);
				        format(string, sizeof(string), "[Информация] {FFFFFF}Вы продали всю рыбу за {7396FB}$%d", cost);
				        SendClientMessage(playerid, COLOR_VALIK, string);
						callcmd::shopss(playerid);
					}
				    case 2: ShowPlayerDialogEx(playerid,14,5,"{43CD80}24/7 (Продукты)",BUY_MENU_PRODUCTS,"Купить","Назад");
					case 3: ShowPlayerDialogEx(playerid,14,5,"{43CD80}24/7 (Канцелярия)",BUY_MENU_CHANCERY,"Купить","Назад");
					case 4: ShowPlayerDialogEx(playerid,14,5,"{43CD80}24/7 (Аксессуары)",BUY_MENU_ACCSESSORY,"Купить","Назад");
					case 5: ShowPlayerDialogEx(playerid,14,5,"{43CD80}24/7 (Техника)",BUY_MENU_TEXNIKA,"Купить","Назад");
					case 6: ShowPlayerDialogEx(playerid,14,5,"{43CD80}24/7 (Табачные изделия)",BUY_MENU_SMOKE,"Купить","Назад");
		            case 7: ShowPlayerDialogEx(playerid,14,5,"{43CD80}24/7 (Рыбалка)",BUY_MENU_FISHED,"Купить","Назад");
		            case 8: ShowPlayerDialogEx(playerid,14,5,"{43CD80}24/7 (Разное)","Предмет\tСтоимость\t\nБронежилет\t{52A32A}$2000{FFFFFF}\nЯД\t{52A32A}$500{FFFFFF}\nАптечки\t{52A32A}$600{FFFFFF}\nТаблетки от наркозависимости\t{52A32A}$10000{FFFFFF}\nЦветы\t{52A32A}$50{FFFFFF}\nАптечки для дома\t{52A32A}$650{FFFFFF}","Купить","Назад");
			    }
			}
		}
		case 107:
		{
		    if(response)
		    {
		        switch(listitem)
				{
			       	case 0:
			        {
			            foreach(new i:Player)
						{
							if(IsPlayerConnected(i))
							{
								if(PlayerInfo[i][pJailTime] > 0)
								{
									format(string,sizeof(string),"%s(%i) | Время: %d мин | Залог: $%d",Name(i),i,PlayerInfo[i][pJailTime]/60,PlayerInfo[i][pBailPrice]);
									SendClientMessage(playerid,COLOR_GRAY,string);
								}
							}
						}
			        }
			        case 1:
			        {
						foreach(new i:Player)
						{
							if(IsPlayerConnected(i))
				   			{
								if(PlayerInfo[i][pWanted] > 0)
							    {
									format(string,sizeof(string),"%s(%i) - %d-й уровень розыска",Name(i),i,PlayerInfo[i][pWanted]);
									SendClientMessage(playerid,COLOR_GRAY,string);
				    			}
							}
						}
			        }
		        }
		    }
		}
		case 111:
		{
			if(response)
			{
				if(pTemp[playerid][SPECTPLAYER]==true) SpecPl(playerid,false);
			}
		}
		case 130:
		{
		    if(response)
		    {
			    if(!strlen(inputtextsave)) return ShowPlayerDialogEx(playerid,129,1,"{43CD80}Введите новый никнейм","{FFFFFF}Введите новый ник","Далее","Отмена");
			    format(string,sizeof(string),"%d %s",ClickedPlayerID[playerid],inputtextsave);
			    callcmd::setname(playerid,string);
		    }
		}
		case 131:
		{
		    if(response)
		    {
		        if(HealOffer[playerid] != INVALID_PLAYER_ID)
		        {
		            new offer = HealOffer[playerid];
		            new price = HealPrice[playerid];
		            HealOffer[playerid] = INVALID_PLAYER_ID;
				    HealPrice[playerid] = 0;
		            if(ProxDetectorS(5,playerid,offer, 1))
		            {
					    if(GetMoney(playerid) >= price)
					    {
				        	J_SetPlayerHealth(playerid, MAX_PLAYER_HEALTH(playerid));
				        	PlayerInfo[playerid][pHospital]=25;
				        	GiveMoney(playerid,-price,"HealPlayer-");
				        	GiveMoney(offer,price,"HealPlayer+");
				        	format(string,sizeof(string),"[Информация] {FFFFFF}Вы вылечили %s за $%d",Name(playerid),price);
				        	SendClientMessage(offer,COLOR_VALIK,string);
				        	format(string,sizeof(string),"[Информация] {FFFFFF}Вас вылечил медик %s за $%d",Name(offer),price);
				        	SendClientMessage(playerid,COLOR_VALIK,string);
			        	}
		        	}
		        }
		    }
		}
		case 132:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
			        case 0: callcmd::licensers(playerid);
			        case 1: callcmd::flist(playerid);
		        }
		    }
		}
		case 661:
		{
		    if(response)
	        {
	            InJob[playerid] = 1;
	            PlayerInfo[playerid][pOldSkin] = GetPlayerSkin(playerid);
	            if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 50);
				if(PlayerInfo[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 198);
				SendError(playerid,"Вы переоделись");
				SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Для того чтобы работать выберите работу и подойдите к машин и нажимайте клавишу ~k~~SNEAK_ABOUT~");
	            dilo[playerid]=0;
				mehan[playerid]=2;
	        }
		}
		case 662:
		{
		    if(response)
	        {
	        	InJob[playerid] = 0;
	            SetPlayerSkinEx(playerid,PlayerInfo[playerid][pOldSkin]);
	            SendError(playerid,"Вы переоделись");
	            dilo[playerid]=0;
	            mehan[playerid]=0;
	        }
		}
		case 663:
		{
		    if(response)
	        {
	            InJob[playerid] = 1;
	            PlayerInfo[playerid][pOldSkin] = GetPlayerSkin(playerid);
	            if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 171);
				if(PlayerInfo[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 11);
				SendError(playerid,"Вы переоделись");
				SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Используйте /help если вы впервые здесь");
	        }
		}
		case 664:
		{
		    if(response)
	        {
	        	InJob[playerid] = 0;
	            SetPlayerSkinEx(playerid,PlayerInfo[playerid][pOldSkin]);
	            if(CasinoInfo[0][casBalance]<deal[playerid]*CasinoInfo[0][casDeal])return SendError(playerid,"На балансе казино недостаточно средств, чтобы вам выплатить");
				GiveMoney(playerid,deal[playerid]*CasinoInfo[0][casDeal]);
				CasinoInfo[0][casBalance]-=deal[playerid]*CasinoInfo[0][casDeal];
				format(string,sizeof(string),"[Информация] {FFFFFF}Вы забрали свои заработанные $%d",deal[playerid]*CasinoInfo[0][casDeal]);
				SendClientMessage(playerid,COLOR_VALIK,string);
				CasinoInfo[0][casLose]+=deal[playerid]*CasinoInfo[0][casDeal];
				deal[playerid]=0;
	        }
		}
	    case 805:
	    {
     		if(response)
			{
				switch(listitem)
				{
					case 0: SendInfo(playerid, "Используйте:{7396FB} /report");
					case 1: callcmd::report(playerid);
				}
			}
			return true;
	    }
	    case 7551:
	    {
	        if(response)
	        {
	            switch(listitem)
	            {
	                case 0:
	                {
	                    if(!TeamDuty[playerid])
						{
							if(PlayerInfo[playerid][pSkin]!=GetPlayerSkin(playerid))return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","Вы не в своей одежде","Скрыть", "");
						    TeamDuty[playerid] = true;
						    format(string,sizeof(string)," %s переодевается в рабочую одежду",PlayerName[playerid]);
							ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
							SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
							TogglePlayerControllable(playerid,true);
							if(IsAMeria(playerid) && PlayerInfo[playerid][pRank] > 1 && PlayerInfo[playerid][pRank] < 5)
							{
								_SetGun(playerid, 3, 1);
								_SetGun(playerid, 23, 20);
							}
							if(IsAtFrakcia(playerid) && PlayerInfo[playerid][pRank] >= 8 && !GetPVarInt(playerid, "NeedAssistance"))
							{
								SetPVarInt(playerid, "NeedAssistance", 1);
								NeedAssistance[playerid] = CreatePlayerTextDraw(playerid, 90.000000, 307.000000, Translate(Language[29][PlayerInfo[playerid][pLanguage]]));
								PlayerTextDrawLetterSize(playerid, NeedAssistance[playerid], 0.139777, 0.843377);
								PlayerTextDrawTextSize(playerid, NeedAssistance[playerid], 14.222225, 50.271121);
								PlayerTextDrawAlignment(playerid, NeedAssistance[playerid], 2);
								PlayerTextDrawColor(playerid, NeedAssistance[playerid], -1);
								PlayerTextDrawUseBox(playerid, NeedAssistance[playerid], true);
								PlayerTextDrawBoxColor(playerid, NeedAssistance[playerid], 1449236223);
								PlayerTextDrawSetShadow(playerid, NeedAssistance[playerid], 0);
								PlayerTextDrawSetOutline(playerid, NeedAssistance[playerid], 0);
								PlayerTextDrawBackgroundColor(playerid, NeedAssistance[playerid], 51);
								PlayerTextDrawFont(playerid, NeedAssistance[playerid], 2);
								PlayerTextDrawSetProportional(playerid, NeedAssistance[playerid], 1);
								PlayerTextDrawSetSelectable(playerid, NeedAssistance[playerid], true);
								PlayerTextDrawShow(playerid, NeedAssistance[playerid]);
								SendInfo(playerid,"Нажмите клавишу {7396FB}'N'{ffffff}, чтобы достать курсор и вызывать подкрепление");
							}
						}
						else
						{
						    TeamDuty[playerid] = false;
						    SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkin]);
						    TogglePlayerControllable(playerid,true);
						    format(string,sizeof(string)," %s переодевается в гражданскую одежду",PlayerName[playerid]);
							ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			         		SetPlayerColor(playerid,0xEFEFF710);
						    if(IsACop(playerid) || IsAArmy(playerid) || IsAMeria(playerid))
							{
							    J_SetPlayerArmour(playerid, 0);
							    PlayerInfo[playerid][pShield] = 0.0;
								if(UsingShield[playerid])RemovePlayerAttachedObject(playerid, 6);
							 	_ResetGun(playerid);
							}
							if(GetPVarInt(playerid, "NeedAssistance"))
							{
								DeletePVar(playerid, "NeedAssistance");
								PlayerTextDrawHide(playerid, NeedAssistance[playerid]);
								DestroyPlayerTD(playerid, NeedAssistance[playerid]);
							}
						}
	                }
	                case 1:
	                {
	                    if(!IsACop(playerid) || !TeamDuty[playerid]) return 0;
	                    if(PlayerInfo[playerid][pRank]<6)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{A31919}\n\nДоступ к гардеробу S.W.A.T. имеют доступ только работники выше 6-го ранга!\n\n","Принять","");
	                    if(GetPlayerSkin(playerid)==285)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{A31919}\n\nВы и так уже одеты в форму S.W.A.T.\n\n","Принять","");
	                    SetPlayerSkinEx(playerid, 285);

						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{FFFFFF}\n\nВы переоделись в форму S.W.A.T.\n\n","Принять","");

	                }
	            }
	        }
	    }
		case 581:
		{
		    if(response)
			{
			    new team = GetTeamID(playerid);
			    switch(listitem)
				{
					case 0:
					{
					    if(!TeamDuty[playerid])ShowPlayerDialogEx(playerid,7551,2,"{43CD80}Информация","- Переодется в {31853A}рабочую{FFFFFF} форму","Принять","Отмена");
						else
						{
						    if(IsACop(playerid)) ShowPlayerDialogEx(playerid,7551,2,"{43CD80}Информация","- Переодется в {31853A}свою{FFFFFF} одежду.\n- Переодется в {31853A}S.W.A.T.{FFFFFF} форму","Принять","Отмена");
						    else ShowPlayerDialogEx(playerid,7551,2,"{43CD80}Информация","- Переодется в {31853A}свою{FFFFFF} одежду","Принять","Отмена");
						}
					}
					case 1:
					{
					    if(FractionValue[team][0] <= 500 && !IsAArmy(playerid)) return SendError(playerid,"На складе организации недостаточно материалов");
					    if(!TeamDuty[playerid]) return SendClientMessage(playerid,COLOR_VALIK,"Вы не на службе");
					    new dtr[80];
						if(!IsAArmy(playerid))format(dtr,sizeof(dtr),"{43CD80}На складе %d материалов",FractionValue[team][0]);
					    if(IsAArmy(playerid)) return ShowPlayerDialogEx(playerid,582,2,dtr,"{42B02C}-{FFFFFF} Взять оружие\n{42B02C}-{FFFFFF} Взять щит [5]\n{42B02C}-{FFFFFF} Взять бронежилет","Принять","Отклонить");
						else if(IsACop(playerid) && GetPlayerSkin(playerid)==285) return ShowPlayerDialogEx(playerid,582,2,dtr,"{42B02C}-{FFFFFF} Взять оружие\n{42B02C}-{FFFFFF} Взять щит [5]\n{42B02C}-{FFFFFF} Взять бронежилет\n{42B02C}-{FFFFFF} Взять набор обьектов [5]\n{42B02C}-{FFFFFF} Взять тазер\n{42B02C}-{FFFFFF} Взять набор {31853A}S.W.A.T.","Принять","Отклонить");
					    else if(IsACop(playerid))  return ShowPlayerDialogEx(playerid,582,2,dtr,"{42B02C}-{FFFFFF} Взять оружие\n{42B02C}-{FFFFFF} Взять щит [5]\n{42B02C}-{FFFFFF} Взять бронежилет\n{42B02C}-{FFFFFF} Взять набор обьектов [5]\n{42B02C}-{FFFFFF} Взять тазер","Принять","Отклонить");
					    SendError(playerid,"Вы не можете пользоваться этим разделом");
					}
					case 2:
					{
						if(PlayerInfo[playerid][pRank] < 3)return SendError(playerid, "Взять со склада радар можно с 3 ранга");
						if(FractionValue[team][0] <= 1000) return SendError(playerid,"На складе организации нет радаров (( Необходимо 1000 материалов ))");
						if(!TeamDuty[playerid]) return SendClientMessage(playerid,COLOR_VALIK,"Вы не на службе");
						if(GetPVarInt(playerid, "TempRadar"))return SendError(playerid, "Вы уже получали радар. Установите его, используя {cc3b12}'/setradar'");
						SetPVarInt(playerid, "TempRadar", 1);
						FractionValue[team][0] -= 1000;
						f(string, "%s[%d] взял со склада скоростной радар (( -1000 материалов ))", Name(playerid), playerid);
						SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
						SendInfo(playerid, "Используйте {7396FB}'/setradar'");
						return 1;
					}
				}
			}
		}
		case 582:
		{
		    if(response)
			{
			    new team = GetTeamID(playerid);
			    switch(listitem)
				{
					case 0:
					{
					    _SetGun(playerid,3,1);
						_SetGun(playerid,24,50);
						_SetGun(playerid,31,150);
						f(string, "%s[%d] взял со склада комплект оружия", Name(playerid), playerid);
						if(!IsAArmy(playerid))strcat(string, " (( -120 материалов ))");
						if(!IsAArmy(playerid))FractionValue[team][0] -= 120;
						SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
						if(GetTeamID(playerid) == TEAM_FBI || GetTeamID(playerid) == TEAM_SFPD) _SetGun(playerid,34,15);
						if(IsACop(playerid)) _SetGun(playerid,25,30);
						if(PlayerInfo[playerid][pMember]==4)_SetGun(playerid,17,10);
					}
					case 1:
					{
					    if(IsAArmy(playerid)) return SendError(playerid,"В армии нет щитов");
					    if(PlayerInfo[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_RED, "[Информация] {FFFFFF}Доступно с 5 ранга");
						PlayerInfo[playerid][pShield] = 100.0;
						if(!IsAArmy(playerid))FractionValue[team][0] -= 30;
						f(string, "%s[%d] взял со склада щит (( -30 материалов ))", Name(playerid), playerid);
						SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
						SetPlayerAttachedObjectEx(playerid, 6, 18637, 1, 0.15, -0.05, 0.18, 90, 0, 270);
						SendClientMessage(playerid, COLOR_WHITE, "[Информация] {FFFFFF}У вас есть щит. Зажмите клавижу {33CCFF}Быстрого бега{FFFFFF} и клавишу {33CCFF}медленной ходьбы{FFFFFF} чтобы его использовать");
					}
					case 2:
					{
					    J_SetPlayerArmour(playerid, 100);
					    if(!IsAArmy(playerid))FractionValue[team][0] -= 40;
						f(string, "%s[%d] взял со склада бронежилет (( -40 материалов ))", Name(playerid), playerid);
						SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
					}
					case 3:
					{
					    if(PlayerInfo[playerid][pRank]<5)return SendError(playerid,"Ваши возможности не позволяют взять обьекты");
					    PlayerInfo[playerid][pObjikt]=10;
					    if(!IsAArmy(playerid))FractionValue[team][0] -= 50;
						f(string, "%s[%d] взял со склада объекты (( -50 материалов ))", Name(playerid), playerid);
						SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
					    SendClientMessage(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы взяли 10 обьектов для установки (/putobject)");
					}
					case 4:
					{
					    if(PlayerInfo[playerid][pRank]<5)return SendError(playerid,"Ваши возможности не позволяют использовать тазер");
					    if(FractionValue[team][0]<60) return SendError(playerid,"На складе оргранизации не достаточно материалов");
					    if(!IsAArmy(playerid))FractionValue[team][0] -= 60;
					    _SetGun(playerid, 23, 11000);
						f(string, "%s[%d] взял со склада тазер (( -60 материалов ))", Name(playerid), playerid);
						SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
					}
					case 5:
					{
					    if(PlayerInfo[playerid][pRank]<6)return SendError(playerid,"Ваши возможности не позволяют взять этот комплект");
						if(GetPlayerSkin(playerid)!=285)return 0;
						if(!IsAArmy(playerid))FractionValue[team][0] -= 500;
						f(string, "%s[%d] взял со склада комплект для S.W.A.T. (( -500 материалов ))", Name(playerid), playerid);
						SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, string);
						_SetGun(playerid, 34, 15);
						_SetGun(playerid, 30, 120);
					}
				}
			}
		}//228
		case 705:
	    {
     		if(response)
			{
				switch(listitem)
				{
					case 0: ShowPlayerDialogEx(playerid, 1487, 2, "{43CD80}Найти рядом", "\
					Закусочная поблизости\n\
					24/7 магазин поблизости\n\
					АЗС поблизости\n\
					Магазин аксессуаров поблизости\n\
					Магазин одежды поблизости\n\
					Жилой дом поблизости\n\
					Подземная парковка поблизости\n\
					Транспорт в аренду поблизости", "Выбор", "Отмена");
					case 1: ShowPlayerDialogEx(playerid, 706, 2, "{43CD80}Важные места", "\
					Мэрия {C9EAFF}| Los-Santos{ffffff}\n\
					Больница {C9EAFF}| Los-Santos{ffffff}\n\
					Больница {C9EAFF}| San-Fierro{ffffff}\n\
					Центр лицензирования {C9EAFF}| San-Fierro{ffffff}\n\
					Вокзал {C9EAFF}| Los-Santos{ffffff}\n\
					Пирс {C9EAFF}| Los-Santos{ffffff}\n\
					Центральный банк {C9EAFF}| Los-Santos{ffffff}\n\
					Штрафстоянка (Забрать машину) {C9EAFF}| Los-Santos{ffffff}\n\
					Офис налоговой службы {C9EAFF}| Los-Santos{ffffff}\n\
					Военкомат {C9EAFF}| Las-Venturas{ffffff}\n\
					Черный рынок {C9EAFF}| Los-Santos{ffffff}\n\
					Спортивный зал {C9EAFF}| Los-Santos{ffffff}\n\
					Спортивный зал {C9EAFF}| Las-Venturas{ffffff}\n\
					Ювелирный магазин {C9EAFF}| Los-Santos{ffffff}\n\
					Церковь {C9EAFF}| Los-Santos{ffffff}\n\
					Полиция {C9EAFF}| Red County{ffffff}\n\
					{D94141}Следующая страница »»", "Выбор", "Отмена");
					case 2: ShowPlayerDialogEx(playerid, 707, 2, "{43CD80}Трудоустройство", "\
					[1] Найти ближайшую работу\n\
					{FDB24A}[2] Винодельное предприятие\n\
					{FDB24A}[3] Виноградная плантация\n\
					[4] Шахта\n\
					[5] Фермерское хозяйство\n\
					{FF4400}[6] Найти другую работу", "Выбор", "Отмена");
					case 3: ShowPlayerDialogEx(playerid, 708, 2, "{43CD80}По работе", "\
					Металловозы {C9EAFF}| Los-Santos{ffffff}\n\
					Металловозы {C9EAFF}| Las-Venturas{ffffff}\n\
					Дальнобойщики (оружейные) {C9EAFF}| Las-Venturas{ffffff}\n\
					Дальнобойщики (бензовозы) {C9EAFF}| Los-Santos{ffffff}\n\
					Дальнобойщики (бензовозы) {C9EAFF}| Las-Venturas{ffffff}\n\
					Машины механиков\n\
					Таксопарк{C9EAFF}| Los-Santos{ffffff}\n\
					Таксопарк{C9EAFF}| Las-Venturas{ffffff}\n\
					Стоянка инкассаторов{C9EAFF}| Los-Santos{ffffff}\n\
					Стоянка инкассаторов {C9EAFF}| Las-Venturas{ffffff}\n\
					Продуктовозы {C9EAFF}| Los-Santos{ffffff}\n\
					Продуктовозы {C9EAFF}| Las-Venturas{ffffff}\n\
					Таксопарк {C9EAFF}| San-Fierro{ffffff}\n\
					Стоянка автобусов {C9EAFF}| San-Fierro{ffffff}\n\
					Стоянка автобусов {C9EAFF}| Los-Santos{ffffff}\n\
					Стоянка автобусов {C9EAFF}| Las-Venturas{ffffff}", "Выбор", "Отмена");
					case 4: ShowPlayerDialogEx(playerid, 709, 2, "{43CD80}Авторынки", "\
					Яхт-клуб {C9EAFF}| Los-Santos{ffffff}\n\
					Авиарынок {C9EAFF}| Las-Venturas\n\
					Авторынок {C9EAFF}| Las-Venturas", "Выбор", "Отмена");
     				case 5: ShowPlayerDialogEx(playerid, 746, 2, "{43CD80}Разное", "\
					Свалка {C9EAFF}| Los-Santos{ffffff}\n\
					Свалка {C9EAFF}| Las-Venturas{ffffff}\n\
					Старый аэродром {C9EAFF}| Las-Venturas{ffffff}\n\
					Лодочная {C9EAFF}| Los-Santos{ffffff}\n\
					Лодочная {C9EAFF}| Las-Venturas{ffffff}\n\
					Склад фермы {C9EAFF}| Los-Santos{ffffff}\n\
					Склад разгрузочной станции {C9EAFF}| Los-Santos{ffffff}\n\
					{D94141}Завод К.А.А.С. (Пейнтбол) {C9EAFF}| Las-Venturas{ffffff}\n\
					{43CD80}Автобазар {C9EAFF}| Los-Santos{ffffff}\n\
					Casino Royal {C9EAFF}| Las-Venturas{ffffff}\n\
					Служба регистрации номеров {C9EAFF}| San-Fierro{ffffff}\n\
					Информационный центр {C9EAFF}| Los-Santos{FFFFFF}\n\
					Тир {C9EAFF}| San-Fierro", "Выбор", "Отмена");
					case 6: 
					{
						for(new i; i < MAX_TUNING; i++){
							f(string, "%s{7396FB}[%i] {FFFFFF}Автомастерская #%i {C9EAFF}| San-Andreas\n", string, i, TuningInfo[i][stoID]);
						}
						ShowPlayerDialogEx(playerid, 2541, 2, "{43CD80}Автомастерские", string, "Выбор", "Отмена");
					}
					case 7: ShowPlayerDialogEx(playerid, 2544, 2, "{43CD80}Положение организаций", "\
					The Rifa Gang\n\
					Groove Street Gang\n\
					The Vagos Gang\n\
					East Side Ballas Gang\n\
					Varrios Los Aztecas Gang\n\
					{FFCB8C}Warlocks MC\n\
					{FFCB8C}Yakuza\n\
					{FFCB8C}La Cosa Nostra\n\
					{FFCB8C}Russian Mafia\n \n\
					{D94141}Наркопритон #1\n\
					{D94141}Наркопритон #2\n\
					{D94141}Наркопритон #3\n\
					{D94141}Наркопритон #4\n\
					{D94141}Наркопритон #5", "Выбор", "Отмена");
				}
			}
			return true;
	    }
   	case 745:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,1308.3258,379.0888,19.5625);
				case 1: EnableGPSForPlayer(playerid,1037.2845,-1028.2238,32.1016);
				case 2: EnableGPSForPlayer(playerid,1839.9128,-1442.9911,13.5607);
				case 3: EnableGPSForPlayer(playerid,1933.6646,-1862.0732,13.5619);
			}
	    }
		else callcmd::gps(playerid);
	}
	case 747:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,1495.2252,-1586.9929,13.5469);
				case 1: EnableGPSForPlayer(playerid,1495.2252,-1586.9929,13.5469);
				case 2: EnableGPSForPlayer(playerid,2256.9734,-1754.9972,13.0574);
				case 3: EnableGPSForPlayer(playerid,2341.1382,-1754.9823,13.0576);
				case 4: EnableGPSForPlayer(playerid,2520.2896,-1537.2626,23.5152);
				case 5: EnableGPSForPlayer(playerid,2720.9924,-2011.8408,13.5547);
				case 6: EnableGPSForPlayer(playerid,2721.7598,-2028.3241,13.5472);
				case 7: EnableGPSForPlayer(playerid,2757.6208,-2056.7048,12.6243);
				case 8: EnableGPSForPlayer(playerid,2721.8391,-2115.0044,11.1386);
			 	case 9: EnableGPSForPlayer(playerid,1958.3979,953.4487,10.8203);

			}
	    }
		else callcmd::gps(playerid);
	}
	case 6446:
	{
		if(response)
		{
			if(pSportZal[playerid])
			{
				SendError(playerid,"Вы уже переоделись");
				return true;
			}
			pSportZal[playerid] = 1;
   			PlayerInfo[playerid][pOldSkin] = GetPlayerSkin(playerid);
			if(PlayerInfo[playerid][pSex]==1) SetPlayerSkinEx(playerid, 80);
			else SetPlayerSkinEx(playerid,192);
			SendInfo(playerid, "Вы начали тренировку, бейте по грушам для прокачки своего навыка");
			SendInfo(playerid, "Используйте клавиши {7396FB}ПKM + F{ffffff}, чтобы бить грушу");
		}
		else
		{
			if(pSportZal[playerid])
			{
				pSportZal[playerid] = 0;
				SetPlayerSkinEx(playerid,PlayerInfo[playerid][pOldSkin]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы закончили тренировку");
			}
			else SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы не начинали тренировку");
		}
	}
	case 749:
	{
	    if(response)
	    {
			switch(listitem)
			{
			    case 0: EnableGPSForPlayer(playerid,2193.1531,1676.9701,12.3672);
			    case 1: EnableGPSForPlayer(playerid,2021.8496,1007.7031,10.8203);
			    case 2: EnableGPSForPlayer(playerid,2235.3843,1285.6902,10.8203);
			    case 3: EnableGPSForPlayer(playerid,2087.3521,1450.7063,10.8203);
			    case 4: EnableGPSForPlayer(playerid,2331.9592,2162.7727,10.8260);
			    case 5: EnableGPSForPlayer(playerid,2637.4163,2349.4236,10.6719);
			}
		}
		else callcmd::gps(playerid);
	}
	case 748:
	{
	    if(response)
	    {
			switch(listitem)
			{
			    case 0: EnableGPSForPlayer(playerid,2088.9707,-1905.5059,13.5469);
				case 1: EnableGPSForPlayer(playerid,876.6775,-1567.1252,13.5391);
				case 2: EnableGPSForPlayer(playerid,2177.6282,961.0814,10.8203);
				case 3: EnableGPSForPlayer(playerid,-206.7107,1086.9602,19.7422);
			}
		}
	}
	case 2544://////syda
	{
	    if(response)
	    {
			switch(listitem)
			{
			    case 0:EnableGPSForPlayer(playerid,2186.7344,-1765.5979,13.0466);
			    case 1:EnableGPSForPlayer(playerid,2463.9795,-1661.3423,12.9700);
			    case 2:EnableGPSForPlayer(playerid,2796.6465,-1599.3337,10.6008);
			    case 3:EnableGPSForPlayer(playerid,2000.4108,-1114.4928,26.4501);
			    case 4:EnableGPSForPlayer(playerid,2501.9011,-2010.0476,12.9713);
			    case 5:EnableGPSForPlayer(playerid,681.7215,-477.4029,16.0072);
			    case 6:EnableGPSForPlayer(playerid,2517.3579,1823.4910,10.4497);
			    case 7:EnableGPSForPlayer(playerid,1515.0060,2773.2886,10.3456);
			    case 8:EnableGPSForPlayer(playerid,941.9240,1731.5309,8.5204);
			    case 9:ShowPlayerDialogEx(playerid, 2544, 2, "{43CD80}Положение организаций", "\
					The Rifa Gang\n\
					Groove Street Gang\n\
					The Vagos Gang\n\
					East Side Ballas Gang\n\
					Varrios Los Aztecas Gang\n\
					{FFCB8C}Warlocks MC\n\
					{FFCB8C}Yakuza\n\
					{FFCB8C}La Cosa Nostra\n\
					{FFCB8C}Russian Mafia\n \n\
					{D94141}Наркопритон #1\n\
					{D94141}Наркопритон #2\n\
					{D94141}Наркопритон #3\n\
					{D94141}Наркопритон #4\n\
					{D94141}Наркопритон #5", "Выбор", "Отмена");
				case 10: EnableGPSForPlayer(playerid,2166.9863,-1672.4226,15.0754);
			    case 11:EnableGPSForPlayer(playerid,2175.9934,-1503.9364,23.9520);
			    case 12:EnableGPSForPlayer(playerid,1814.4722,-1995.8588,13.5544);
			    case 13:EnableGPSForPlayer(playerid,2286.6912,-2012.8440,13.5447);
			    case 14:EnableGPSForPlayer(playerid,2333.4478,-1922.6251,12.2991);
			}
		}
		else callcmd::gps(playerid);
	}
	case 2541:
	{
	    if(response){
			EnableGPSForPlayer(playerid,TuningInfo[listitem][stoPos][0],TuningInfo[listitem][stoPos][1],TuningInfo[listitem][stoPos][2]);
		}
		else callcmd::gps(playerid);
	}
 	case 746:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,2200.9934,-1977.1194,13.5576);
				case 1: EnableGPSForPlayer(playerid,178.4099,1101.4073,16.4498);
				case 2: EnableGPSForPlayer(playerid,398.8276,2529.3464,16.5675);
				case 3: EnableGPSForPlayer(playerid,150.9107,-1812.6412,3.7416);
				case 4: EnableGPSForPlayer(playerid,2287.6665,607.6643,10.6760);
				case 5: EnableGPSForPlayer(playerid,-380.2647,-1426.3503,25.7266);
				case 6: EnableGPSForPlayer(playerid,1976.6340,-2029.4700,13.5469);
				case 7: EnableGPSForPlayer(playerid,2496.8916,2775.6079,10.8244);
				case 8: EnableGPSForPlayer(playerid,447.3151, -1301.2961, 15.1445);
				case 9: EnableGPSForPlayer(playerid,CasinoInfo[0][casPos][0],CasinoInfo[0][casPos][1],CasinoInfo[0][casPos][2]);
				case 10: EnableGPSForPlayer(playerid,-1619.9810,649.4741,-5.2422);
				case 11: EnableGPSForPlayer(playerid,1784.3279,-1649.6113,13.3090);
				case 12: EnableGPSForPlayer(playerid,-2270.6479,-155.9109,35.3203);
			}
	    }
		else callcmd::gps(playerid);
	}
  	case 706:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,1481.055,-1772.040,18.796);
				case 1:	EnableGPSForPlayer(playerid,1178.1593,-1323.1184,14.1063);
				case 2:	EnableGPSForPlayer(playerid,-2666.6680,580.7857,14.4609);
				case 3:	EnableGPSForPlayer(playerid,-2027.4399,-73.7133,34.8768);
				case 4:	EnableGPSForPlayer(playerid,1755.9362,-1893.2240,13.5566);
				case 5:	EnableGPSForPlayer(playerid,369.8604,-2042.5201,7.6719);
				case 6:	EnableGPSForPlayer(playerid,1411.5496,-1699.5398,13.5395);
    			case 7:	EnableGPSForPlayer(playerid,1637.4141,-1149.0496,23.9063);
    			case 8:	EnableGPSForPlayer(playerid,1530.5771,-1072.1592,25.0625);
    			case 9: EnableGPSForPlayer(playerid,1168.6149,1364.8787,10.8125);
    			case 10: EnableGPSForPlayer(playerid,2539.2019,-1461.4839,24.0207);
    			case 11: EnableGPSForPlayer(playerid,2229.631835, -1721.709350, 13.565642);
    			case 12: EnableGPSForPlayer(playerid,2095.5288,2493.2524,14.8390);
    			case 13: EnableGPSForPlayer(playerid,1739.2378,-1582.0302,14.1524);
    			case 14: EnableGPSForPlayer(playerid,1720.3025,-1741.1660,13.5469);
    			case 15: EnableGPSForPlayer(playerid,631.9218,-571.9485,16.3359);
    			case 16: ShowPlayerDialogEx(playerid, 766, 2, "{43CD80}Важные места", "\
				Автомастерская {C9EAFF}| Los-Santos{ffffff}\n\
				Вокзал {C9EAFF}| Las-Venturas{ffffff}\n\
				Больница {C9EAFF}| Las-Venturas{ffffff}\n\
				Штрафстоянка (Забрать машину) {C9EAFF}| Las-Venturas{ffffff}\n\
				Полиция {C9EAFF}| Las-Venturas{ffffff}\n\
				Радиостанция {C9EAFF}| Las-Venturas{ffffff}\n\
				Вокзал {C9EAFF}| San-Fierro{ffffff}\n\
				Полиция {C9EAFF}| San-Fierro{ffffff}\n\
				Военная база {C9EAFF}| Los-Santos{ffffff}\n\
				Военная база {C9EAFF}| San-Fierro{ffffff}\n\
				Военная база {C9EAFF}| Las-Venturas{ffffff}\n\
				Радиостанция {C9EAFF}| Los-Santos{ffffff}\n\
				Радиостанция {C9EAFF}| San-Fierro{ffffff}\n\
				{7396FB}Предыдущая страница ««", "Выбор", "Отмена");
			}
	    }
		else callcmd::gps(playerid);
	}
	case 766:
	{
	    if(response)
	    {
			switch(listitem)
			{
			    case 0: EnableGPSForPlayer(playerid,1637.87415, -1142.29016, 24.47594);
    			case 1: EnableGPSForPlayer(playerid,2798.6843,1313.4534,10.7500);
    			case 2: EnableGPSForPlayer(playerid,1641.8849,1833.5286,10.8508);
    			case 3: EnableGPSForPlayer(playerid,2474.7954,2513.2712,10.8056);
    			case 4: EnableGPSForPlayer(playerid,2286.8362,2427.5806,10.8203);
    			case 5: EnableGPSForPlayer(playerid,2615.0793,1172.7882,10.7624);
    			case 6: EnableGPSForPlayer(playerid,-1994.0475,100.2056,27.5391);
    			case 7: EnableGPSForPlayer(playerid,-1629.0847,726.1740,14.1306);
    			case 8: EnableGPSForPlayer(playerid,2716.5886,-2404.9148,13.4687);
    			case 9: EnableGPSForPlayer(playerid,-1529.7744,484.6951,7.1797);
    			case 10: EnableGPSForPlayer(playerid,-18.5305,2066.5547,17.4453);
    			case 11: EnableGPSForPlayer(playerid,1627.8331,-1722.0530,13.5372);
    			case 12: EnableGPSForPlayer(playerid,-1941.4008,459.7771,35.1719);
    			case 13: ShowPlayerDialogEx(playerid, 706, 2, "{43CD80}Важные места", "\
					Мэрия {C9EAFF}| Los-Santos{ffffff}\n\
					Больница {C9EAFF}| Los-Santos{ffffff}\n\
					Больница {C9EAFF}| San-Fierro{ffffff}\n\
					Центр лицензирования {C9EAFF}| San-Fierro{ffffff}\n\
					Вокзал {C9EAFF}| Los-Santos{ffffff}\n\
					Пирс {C9EAFF}| Los-Santos{ffffff}\n\
					Центральный банк {C9EAFF}| Los-Santos{ffffff}\n\
					Штрафстоянка (Забрать машину) {C9EAFF}| Los-Santos{ffffff}\n\
					Офис налоговой службы {C9EAFF}| Los-Santos{ffffff}\n\
					Военкомат {C9EAFF}| Las-Venturas{ffffff}\n\
					Черный рынок {C9EAFF}| Los-Santos{ffffff}\n\
					Спортивный зал {C9EAFF}| Los-Santos{ffffff}\n\
					Спортивный зал {C9EAFF}| Las-Venturas{ffffff}\n\
					Ювелирный магазин {C9EAFF}| Los-Santos{ffffff}\n\
					Церковь {C9EAFF}| Los-Santos{ffffff}\n\
					Полиция {C9EAFF}| Red County{ffffff}\n\
					{D94141}Следующая страница »»", "Выбор", "Отмена");
			}
		}
	}
	case 707:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: FindTheNearestJob(playerid);
				case 1: EnableGPSForPlayer(playerid,-87.6299,-307.8251,1.4297);
				case 2: EnableGPSForPlayer(playerid,-142.9741,-79.5276,3.1172);
				case 3: EnableGPSForPlayer(playerid,-1902.7009,-1673.3423,21.7513);
				case 4: EnableGPSForPlayer(playerid,-377.4685,-1416.8032,25.7266);
				case 5: EnableGPSForPlayer(playerid,1481.1151,-1768.6161,18.7957);
			}
	    }
		else callcmd::gps(playerid);
	}
	case 708:
    {
	    if(response)
	    {
			switch(listitem)
			{
				case 0: EnableGPSForPlayer(playerid,2484.4131,-2541.2256,13.5746);
				case 1: EnableGPSForPlayer(playerid,1070.3298,1944.0189,10.8203);
				case 2: EnableGPSForPlayer(playerid,2775.0811,913.4783,10.8284);
				case 3: EnableGPSForPlayer(playerid,2296.7988,-2329.5461,13.5469);
				case 4: EnableGPSForPlayer(playerid,292.4207,1410.4541,10.1432);
				case 5: ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{FFFFFF}Машины механиков вы можете найти\nУ одной из автомастерских штата.\nИщите их в /gps » Важные места","Скрыть", "");
				case 6: EnableGPSForPlayer(playerid,1107.1779,-1740.9813,13.3984);
				case 7: EnableGPSForPlayer(playerid,2167.4365,983.2794,10.6748);
				case 8: EnableGPSForPlayer(playerid,1390.4061,-1649.0326,13.3733);
				case 9: EnableGPSForPlayer(playerid,2420.4075,2285.1882,10.8203);
				case 10: EnableGPSForPlayer(playerid,925.6722,-1222.4194,16.9771);
				case 11: EnableGPSForPlayer(playerid,1608.1821,2282.4753,10.8266);
				case 12: EnableGPSForPlayer(playerid,-2258.7891,119.7371,34.9912);
				case 13: EnableGPSForPlayer(playerid,-2198.7729,312.1454,34.9906);
				case 14: EnableGPSForPlayer(playerid,1269.4641,-1842.2662,13.3974);
				case 15: EnableGPSForPlayer(playerid,2797.7439,1312.8705,10.7576);
			}
	    }
		else callcmd::gps(playerid);
	}
	case 709:
	{
		if(response)
		{
			new Float: x,Float:y,Float:z,num=0,cost=0;
			foreach(OWNABLECARS, i)
			{
				if(IsASellCar(OwnableCar[i]))
				{
					GetVehiclePos(OwnableCar[i],x,y,z);
					switch(listitem)
					{
					case 0:
						{
							if(PointToPoint(x,y,z,212.6680,-1883.7994,1.5067)<150)
							{
								num++;
								cost += CarInfo[i][cCost];
							}
						}
					case 1:
						{
							if(PointToPoint(x,y,z,2467.9500,1322.6254,10.6993)<150)
							{
								num++;
								cost += CarInfo[i][cCost];
							}
						}
					case 2:
						{
							if(PointToPoint(x,y,z,2349.4622, 1408.1652, 10.8563)<150)
							{
								num++;
								cost += CarInfo[i][cCost];
							}
						}
					}
				}
			}
			if(num<1)return SendError(playerid,"На этом рынке нет транспорта на продажу");
			if(num > 0){
				switch(listitem){
				case 2:EnableGPSForPlayer(playerid,2306.9023, 1384.3993, 10.8165);
				case 1:EnableGPSForPlayer(playerid,2467.9500,1322.6254,10.6993);
				case 0:EnableGPSForPlayer(playerid,212.6680,-1883.7994,1.5067);
				}
				format(string, sizeof string, "\n\n\\c{ffffff}На этом рынке доступно %d моделей\n\\cСредняя стоимость: $%d\n\n\\c{C9EAFF}Транспорт на продажу ограничен. Если ничего нет на рынке, перекупайте у других игроков или ждите следующего дня\n\n",num, floatround(cost/num));
				Dialog_Open(playerid,0,0, "", string, "Скрыть","");
			}
		}
		else callcmd::gps(playerid);
	}
		case 800:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
				        if(PlayerInfo[playerid][pMy_Skill]) PlayerInfo[playerid][pMy_Skill] = 0;
				        else PlayerInfo[playerid][pMy_Skill] = 1;
				        Show3UpdateSettings(playerid);
				    }
				    case 1:
				    {
				        if(PlayerInfo[playerid][pBy_Skill]) PlayerInfo[playerid][pBy_Skill] = 0;
				        else PlayerInfo[playerid][pBy_Skill] = 1;
				        Show3UpdateSettings(playerid);
				    }
				    case 2:
				    {
				        if(PlayerInfo[playerid][pP_Skill]) PlayerInfo[playerid][pP_Skill] = 0;
				        else PlayerInfo[playerid][pP_Skill] = 1;
				        Show3UpdateSettings(playerid);
				    }
				    case 3:
				    {
				        if(PlayerInfo[playerid][pF_Skill]) PlayerInfo[playerid][pF_Skill] = 0;
				        else PlayerInfo[playerid][pF_Skill] = 1;
				        Show3UpdateSettings(playerid);
				    }
				}
			}
		}
	    case 722:
	    {
     		if(response)
			{
				switch(listitem)
				{
					case 0: ShowStats(playerid,playerid);
					case 1: ShowPlayerDialogEx(playerid, SHOWACTION, 2, "{43CD80}Выберите действие", "\
					{7396FB}[1] {C9EAFF}Изменить стиль боя\n\
					{7396FB}[2] {C9EAFF}Выбрать радиостанцию", "Выбор", "Отмена");
					case 2: callcmd::report(playerid);
					case 3: ShowHelpDialog(playerid);
					case 4: ShowUpdateSettings(playerid);
					case 5: callcmd::lmenu(playerid);
					case 6: ShowDonate(playerid);
					case 7: callcmd::phone(playerid);
					case 8:ShowPlayerDialogEx(playerid,2388,DIALOG_STYLE_INPUT,"{43CD80}Активация промо-кода","{FFFFFF}Если вы знаете какой-либо промо-код, активный на нашем сервере, введите его в окошко ниже\n\n{D94141}Если у вас уже есть активный промо-код, используйте '/stoppromo'","Готово","Отмена");
					case 9: callcmd::quests_gg(playerid);
				}
			}
			return true;
	    }
	    case 654:
	    {
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
						if(SlotValue[playerid][0]<5)return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
						format(string,sizeof(string),"\n\n\\c{7396FB}Введите сумму для пополнения игрового автомата\n\\c{7396FB}Внимание! После пополнения вы сразу начнёте игру за автоматом\n\n");
						Dialog_Open(playerid,655,1,"{43CD80}Информация",string,"Принять","Отмена");
			        }
			        case 1:
			        {
			            format(string,sizeof(string),"\n\n\\cВарианты победы\n\n\\c{7396FB}[1]{FFFFFF} - 3 Вишни - {7396FB}x5{FFFFFF}\n\\c{7396FB}[2]{FFFFFF} - 3 Винограда - {7396FB}x10{FFFFFF}\n\\c{7396FB}[3]{FFFFFF} - 3 числа - {7396FB}x20{FFFFFF}\n\\c{7396FB}[4]{FFFFFF} - 3 Колокола - {7396FB}x25{FFFFFF}\n\\c{7396FB}[5]{FFFFFF} - 3 слитка - {7396FB}x50{FFFFFF}\n\\c{7396FB}[6]{FFFFFF} - 6 слитков - {7396FB}х100{FFFFFF}\n\n\\cОстальную информацию можно узнать в /help - Однорукий бандит\n\n");
			            Dialog_Open(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
			        }
			    }
			}
	    }
	    case 655:
	    {
	        if(response)
            {
                new fiski = GetMoney(playerid);
		        new money = strval(inputtextsave);
		        if(fiski<money)return SendError(playerid, "У Вас недостаточно средств");
		        if(money < MIN_Bet || money>MAX_Bet)
		        {
		            format(string,sizeof(string),"\n\n\\c{7396FB}Вы не можете пополнить игровой автомат на такую сумму!\n\\c{FFFFFF}Минимум $%d\n\\cМаксимум $%d\n\n",MIN_Bet, MAX_Bet);
		            Dialog_Open(playerid,0,0,"{43CD80}Информация",string,"Принять","");
					return false;
		        }
    			PutPlayerInSlotMachine(playerid,_,money);
		    }
	    }
		case 142:
		{
		    if(response) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{FFFFFF}Данная функция временно не доступна","Скрыть", "");
			else ShowUpdateSettings(playerid);
		}
		case 143:
		{
		    if(response)
		    {
		        if(GetString(OrgInfo[listitem+1][oLeader],"Свободна"))
		        {
		            format(string, sizeof(string), "UPDATE `accounts` SET `Leader` = '%d',`Member` = '0',`Rank` = '13' WHERE `NickName` = '%s'", listitem+1,MLName[playerid]);
					mysql_pquery(mysql, string);
		            SetString(OrgInfo[listitem+1][oLeader],MLName[playerid]);
		            format(string,sizeof(string),"Вы назначили игрока %s лидером организации '%s'",MLName[playerid],OrgInfo[listitem+1][oName]);
		            SendClientMessage(playerid,COLOR_WHITE,string);
		            SaveOrg(listitem+1);
		        }
          		else
		        {
		            if(!GetString(MLName[playerid], OrgInfo[listitem+1][oLeader]))
		            {
						format(string,sizeof(string),"{FFFFFF}\
						Ошибка! У этой организации уже есть лидер!\n\
						Текущий лидер: {B83434}%s{FFFFFF}\n\
						Хотите его снять с лидерства и назначить лидером %s",OrgInfo[listitem+1][oLeader],MLName[playerid]);
						ShowPlayerDialogEx(playerid,144,0,"{43CD80}Снятие",string,"Да","Отмена");
						MLeader[playerid] = listitem+1;
					}
					else SendError(playerid,"Этот человек уже лидер этой организации");
		        }
		    }
		    return true;
		}
		case 144:
		{
		    if(response)
		    {
		        new leader = MLeader[playerid];
		        new unleader;
		        foreach(new i:Player)
		        {
		            if(IsPlayerConnected(i))
		            {
		            	if(GetString(Name(i),OrgInfo[leader][oLeader]) && PlayerInfo[i][pLeader] == leader)
		            	{
		            	    if(IsACop(i))
							{
								if(UsingShield[i])RemovePlayerAttachedObject(i, 7);
								PlayerInfo[i][pShield] = 0.0;
							}
	                        PlayerInfo[i][pLeader] = 0;
						    PlayerInfo[i][pMember] = 0;
						    PlayerInfo[i][pDCTime]=0;
						    SendClientMessage(i,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
						    PlayerInfo[i][pRank] = 0;
						    SetBumSkin(i);
						    format(string,sizeof(string)," Администратор %s выгнал вас из организации",Name(playerid));
						    SendClientMessage(i,COLOR_WHITE,string);

						    format(string,sizeof(string)," Администратор %s выгнал игрока %s из должности лидерства",Name(playerid),Name(i));
						    SendAdminsMessage(COLOR_WHITE,string);

						    TeamDuty[i] = false;
						   	PlayerSpawn(i);
						   	unleader = 1;
						   	break;
		                }
		            }
		        }
		        if(!unleader)
		        {
		            format(string, sizeof(string), "UPDATE `accounts` SET `Leader` = '0',`Member` = '0',`Rank` = '0',`Skin` = '79' WHERE `NickName` = '%s'", OrgInfo[leader][oLeader]);
					mysql_pquery(mysql, string);
		        }
		        SetString(OrgInfo[leader][oLeader],MLName[playerid]);
		        format(string, sizeof(string), "UPDATE `accounts` SET `Leader` = '%d',`Member` = '0',`Rank` = '13',`Job` = '0' WHERE `NickName` = '%s'",listitem+1,listitem+1,OrgInfo[leader][oLeader]);
				mysql_pquery(mysql, string);
		        format(string,sizeof(string),"Вы назначили игрока %s лидером организации '%s'",MLName[playerid],OrgInfo[leader][oName]);
		        SendClientMessage(playerid,COLOR_WHITE,string);
		        SaveOrg(leader);
		    }
		    return true;
		}
		case 146:
		{
		    if(response)
		    {
		        if(LiveOfferID[playerid] != INVALID_PLAYER_ID)
		        {
					new id = LiveOfferID[playerid];
					new carid = GetPlayerVehicleID(id);
					if(IsANewsCar(carid) || IsPlayerInRangeOfPoint(playerid,50,23.2580,-20.4954,1231.9240))
					{
					    if(IsPlayerInVehicle(playerid, carid) || IsPlayerInRangeOfPoint(playerid,50,23.2580,-20.4954,1231.9240))
					    {
							if(LiveOffer[id] == INVALID_PLAYER_ID)
							{
							    LiveOffer[playerid] = id;
							    LiveOffer[id] = playerid;
							    format(string,sizeof(string),"[Информация] {FFFFFF}%s начал беседу с вами",Name(playerid));
							    SendClientMessage(id,COLOR_VALIK,string);
							    SendClientMessage(id,COLOR_VALIK,"[Информация] {FFFFFF}Введите /endlive чтобы её завершить");
							    format(string,sizeof(string),"[Информация] {FFFFFF}Вы начали беседу с %s",Name(id));
							    SendClientMessage(playerid,COLOR_VALIK,string);
								LiveStation[playerid] = PlayerInfo[id][pMember];
								LiveStation[id] = PlayerInfo[id][pMember];
							}
						}
					}
		        }
		    }
		}
		case 148:
		{
		    if(response)
	        {
	            new day,month,year,day2,month2,year2;
		        getdate(year, month, day);
                if(sscanf(inputtextsave, "p</>iii", day2, month2, year2))return Dialog_Open(playerid, 148, 1, "{43CD80}Дата рождения", "\n\n\\c{FFFFFF}Укажите дату рождения вашего персонажа\n\\c{E64444}Пример: 2/5/1992\n\n", "Выбор", "Отмена");
	            new check = year - year2;
				if(check > 50 || check < 1 || day2 > GetMonthDays(year2, month2) || day2 < 1 || month2 > 12 || month2 < 1 )return Dialog_Open(playerid, 148, 1, "{43CD80}Дата рождения", "\n\n\\c{FFFFFF}Укажите дату рождения вашего персонажа\n\\c{E64444}Пример: 2/5/1992\n\n", "Выбор", "Отмена");
				if(check<14)return Dialog_Open(playerid, 148, 1, "{43CD80}Дата рождения", "\n\n\\c{FFFFFF}Укажите дату рождения вашего персонажа\n\\c{E64444}Пример: 2/5/1992\n\\c{FF4400}Персонаж должен быть старше 14 лет\n\n", "Выбор", "Отмена");
				if(month2 > month || (month2 == month && day2 > day) ) check --;
				PassRegSex[playerid] = PlayerInfo[playerid][pSex];
				new city = GetPlayerVirtualWorld(playerid) + 1;
				if(city < 1) city = 1;
				else if(city > 3) city = 3;
		        PassInfo[playerid][psDateBirth][0] = day2;
		        PassInfo[playerid][psDateBirth][1] = month2;
		        PassInfo[playerid][psDateBirth][2] = year2;
		        PassInfo[playerid][psDate][0] = day;
		        PassInfo[playerid][psDate][1] = month;
		        PassInfo[playerid][psDate][2] = year;
				PassInfo[playerid][psNumber] = 100000 + random(900000);
				PassInfo[playerid][psSeria] = 1000 + random(9000);
				OnRegPass(playerid);
				SendBotMessage(playerid, "Поздравляем! Держите Ваш паспорт");
				SendInfo(playerid,"Используйте {7396FB}/pass{ffffff}, чтобы показать паспорт");
 	        }
		}
		case 149:
	    {
	        if(response)
	        {
	            if(!InJob[playerid])
			    {
	            	PlayerInfo[playerid][pOldSkin] = GetPlayerSkin(playerid);
	           	 	InJob[playerid] = 1;
	            	if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkinEx(playerid, 8);
					if(PlayerInfo[playerid][pSex] == 2) SetPlayerSkinEx(playerid, 141);
	            	SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Сядьте в один из инкассаторских грузовиков. Используйте /gps - По работе чтобы найти стоянку грузовиков");
	            }
	            else
	            {
	                InJob[playerid] = 0;
	                RemovePlayerAttachedObjectEx(playerid, 6);
	            	SetPlayerSkinEx(playerid,PlayerInfo[playerid][pOldSkin]);
	            	TogglePlayerControllable(playerid,true);
	            	SendInfo(playerid,"Вы завершили работу");
	            	SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	            	new rand = NumInc_CP[playerid];
					TogglePlayerDynamicCP(playerid, IncCP[rand][0], false);
					TogglePlayerDynamicCP(playerid, IncCP[rand][1], false);
					for(new i;i<2;i++) TogglePlayerDynamicCP(playerid, BankCP[i], false);
	            }
	        }
	    }
	 	case 154:
	 	{
	 	    if(response)
	 	    {
	 	        switch(listitem)
				{
				    case 0:
			        {
			            if(!strcmp("No Mail Adress", PlayerMail[playerid], true)) return SendError(playerid,"Вы не можете подключить защитный код, так как у вас не привязан E-Mail");
						pKlicked[playerid] = CreatePlayerTextDraw(playerid, 320.000000, 185.000000, "_");
						PlayerTextDrawLetterSize(playerid, pKlicked[playerid], 0.178927, 1.125548);
						PlayerTextDrawAlignment(playerid, pKlicked[playerid], 2);
						PlayerTextDrawColor(playerid, pKlicked[playerid], -6749953);
						PlayerTextDrawSetShadow(playerid, pKlicked[playerid], 0);
						PlayerTextDrawSetOutline(playerid, pKlicked[playerid], 0);
						PlayerTextDrawBackgroundColor(playerid, pKlicked[playerid], 51);
						PlayerTextDrawFont(playerid, pKlicked[playerid], 2);
						PlayerTextDrawSetProportional(playerid, pKlicked[playerid], 1);
			            if(PlayerInfo[playerid][pKey] == 0)
						{
						    SendInfo(playerid,"С помощью экранной панели, введите ваш новый код безопасности");
						    SendInfo(playerid,"Код должен состоять от 4 до 9 символов. Включить/отключить код можно в настройках");
						    format(pclicklen[playerid],10,"");
							SetKlickNumbers();
						    for(new i; i < 21; i++)TextDrawShowForPlayer(playerid,klick[i]);
                            Keychange[playerid] = 1;
							SelectTextDraw(playerid, 0xD94141AA);
							clickerstat[playerid] = 1;
						}
						else
						{
						    SendInfo(playerid,"Для смены вашего кода безопасности необходимо подтвердить его знание");
						    SendInfo(playerid,"Введите код безопасности с помощью экранной панели");
						    format(pclicklen[playerid],10,"");
							SetKlickNumbers();
						    for(new i; i < 21; i++)TextDrawShowForPlayer(playerid,klick[i]);
							SelectTextDraw(playerid, 0xD94141AA);
							clickerstat[playerid] = 1;
						}
     				}
					case 1:
				    {
				        if(PlayerInfo[playerid][pShowName] == 0)
				        {
							PlayerInfo[playerid][pShowName] = 1;
							foreach(Player, i)
							{
								ShowPlayerNameTagForPlayer(playerid, i, PlayerInfo[playerid][pShowName]);
							}
				        }
				        else if(PlayerInfo[playerid][pShowName] == 1)
				        {
                            PlayerInfo[playerid][pShowName] = 0;
							foreach(Player, i)
							{
								ShowPlayerNameTagForPlayer(playerid, i, PlayerInfo[playerid][pShowName]);
							}
				        }
				        ShowUpdateSettings(playerid);
				    }
					case 2:
					{
					    if(strcmp("No Mail Adress", PlayerMail[playerid], true)) return SendError(playerid,"Вы не можете изменить E-Mail");
						return Dialog_Open(playerid, 160, 1, "{43CD80}E-Mail", "\n\n\
						\\c{FFFFFF}Напишите свой активный E-Mail ниже, после вы сможете\n\
						\\cвоспользоваться восстановлением пароля через сайт\n\
						\\cИзменить данный адрес в будущем {FF4400}НЕВОЗМОЖНО\n\n", "Продолжить", "Отмена");
					}
					case 3:
					{
					    if(PlayerInfo[playerid][pBuyWalent])
					    {
					        Hunger(playerid,0);
					        PlayerInfo[playerid][pBuyWalent] = 0;
					    }
					    else
						{
							Hunger(playerid,1);
							PlayerInfo[playerid][pBuyWalent] = 1;
						}
					    ShowUpdateSettings(playerid);
					}
					case 4:
					{
					    if(PlayerInfo[playerid][pGold])
						{
						    if(IsPlayerInAnyVehicle(playerid))return SendError(playerid,"Вы должны быть вне транспорта чтобы выключить эту функцию");
							PlayerInfo[playerid][pGold]=0;
						}
					    else
						{
						    if(IsPlayerInAnyVehicle(playerid))return SendError(playerid,"Вы должны быть вне транспорта чтобы включить эту функцию");
							PlayerInfo[playerid][pGold]=1;
						}
					    ShowUpdateSettings(playerid);
					}
					case 5:
					{
					    if(PlayerInfo[playerid][pCase])
						{
						    if(IsPlayerAttachedObjectSlotUsed(playerid, 9))
								RemovePlayerAttachedObject(playerid,9);
							PlayerInfo[playerid][pCase]=0;
						}
					    else
						{
							if(SlotValue[playerid][0] >= 1000000)
							{
								switch(PlayerInfo[playerid][pCCase])
								{
								case 0:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);//default
								case 1:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFF0042E8);//blue
								case 2:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFFFF33E7);//pink
								case 3:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFF00FF6F);//green
								case 4:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFFFFCD00);//gold
								case 5:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFF00F2FF);//skiey
								case 6:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFFA800FC);//purple
								case 7:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFFD94141);//red
								case 8:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFF000000);//black
								}
							}
							PlayerInfo[playerid][pCase]=1;
						}
					    ShowUpdateSettings(playerid);
					}
					case 6:
					{
					    if(PlayerInfo[playerid][pChat])PlayerInfo[playerid][pChat]=0;
					    else PlayerInfo[playerid][pChat]=1;
					    ShowUpdateSettings(playerid);
					}
					case 7:
					{
					    if(PlayerInfo[playerid][pLoading])PlayerInfo[playerid][pLoading]=0;
					    else PlayerInfo[playerid][pLoading]=1;
					    ShowUpdateSettings(playerid);
					}
					case 8:
					{
					    if(PlayerInfo[playerid][pLanguage])PlayerInfo[playerid][pLanguage]=0;
					    else PlayerInfo[playerid][pLanguage]=1;
					    ShowUpdateSettings(playerid);
					}
					case 9:
					{
						if(PlayerInfo[playerid][pItems]){
							PlayerInfo[playerid][pItems]=0;
							if(GetPVarInt(playerid, "QuickItems"))
							{
								DeletePVar(playerid, "QuickItems");
								for(new i; i < 8; i++){
									PlayerTextDrawHide(playerid, QuickItems[playerid][i]);
									DestroyPlayerTD(playerid, QuickItems[playerid][i]);
								}
							}
						}
					    else{
							PlayerInfo[playerid][pItems]=1;
							if(!GetPVarInt(playerid, "QuickItems"))ShowQuickItems(playerid);
						}
					    ShowUpdateSettings(playerid);
					}
					case 10:ShowUpdateSettings(playerid);
					/*case 11:
					{
						for(new i; i < 10; i++)f(string, "%s\n%s- Пример цвета", string, GPSCOLORS[i][gps_rgb]);
						new title[32];
						f(title, "%sВаш текущий цвет", GPSCOLORS[PlayerInfo[playerid][pGPS]][gps_rgb]);
						ShowPlayerDialogEx(playerid, 538, 2, title, string, "Выбрать", "Назад");
					}*/
					case 11:ShowPlayerDialogEx(playerid,1922,1,"{43CD80}Изменение пароля","{FFFFFF}Введите текущий пароль от аккаунта","Далее","Отмена");
					case 12:
					{
					    if(PlayerInfo[playerid][pOOC] == 0) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{D94141}У вас нет банковской карты","Скрыть", "");
						else ShowPlayerDialogEx(playerid, 883, 1, "{43CD80}Подтверждение","{FFFFFF}Введите текущий PIN-код от банковской карты","Далее","Отмена");
					}
					case 13: callcmd::setspawn(playerid);
					case 14:
					{
						if(PlayerInfo[playerid][AuthAct] == 0)
						{
							new _str[790] = "{ffffff}Данный тип защиты сводит вероятность взлома вашего аккаунта\n\
							к нулю. Принцип работы заключается в генерации случайного\n\
							кода каждые 30 секунд, который подобрать почти невозможно.\n\
							Подключение происходит следующим образом:\n\
							{ffd98c}» Скачайте и установите из App Store/Google Play приложение Google Authenticator\n\
							» Нажмите кнопку '+' и выберите ручной ввод данных\n\
							\t{0099ff}В поле 'Аккаунт/Account' укажите никнейм своего аккаунта\n\
							\tВ поле 'Ключ/Key' введите указанный вам код\n\
							{ffd98c}» В правом верхнем углу нажмите галочку\n\
							» Введите полученный шестизначный код в поле и нажмите 'Подключить'\n\n\
							{7396FB}Нажмите 'Далее', чтобы начать процедуру подключения Google Authenticator";
							return ShowPlayerDialogEx(playerid, 948, DIALOG_STYLE_MSGBOX,"{43CD80}Google Authenticator [1/2]", _str, "Далее", "Отмена");
						}
						ShowPlayerDialogEx(playerid, 949, DIALOG_STYLE_MSGBOX,"{43CD80}Google Authenticator", "{ffffff}Вы уверены, что хотите отключить защиту Google?", "Да", "Отмена");
					}
				}
	 	    }
	 	}
		case 947:
		{
			if (!response) return SendError(playerid,"Вы не ввели код из приложения"),Kick(playerid);
			if (strval(inputtext) != GoogleAuthenticatorCode(PlayerInfo[playerid][AuthCode], gettime())) return SendError(playerid,"Введённый код не совпадает с кодом из приложения"),Kick(playerid);
			DeletePVar(playerid, "CodeActivated");
			OnPlayerLogin(playerid);
			return 1;
		}
		case 949:
		{
			if(!response)return 1;
			PlayerInfo[playerid][AuthAct] = 0;
			SendClientMessage(playerid,COLOR_ORANGE,"Защита Google Authenticator отключена");
			new str[256];
			format(str,sizeof str,"UPDATE `accounts` SET `AuthAct` = 0,`AuthCode` = 'None' WHERE `NickName`='%s'",PlayerName[playerid]);
			mysql_query(mysql,str);
			if(PlayerInfo[playerid][pAdmin])
			{
				PlayerInfo[playerid][pAdmin]=0;
				PlayerInfo[playerid][pMember] = 0;
				PlayerInfo[playerid][pLeader] = 0;
				PlayerInfo[playerid][pRank] = 0;
				_ResetGun(playerid);
				SetPlayerColor(playerid, 0xFFFFFF00);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
				TextDrawHideForPlayer(playerid, CheaterList);
				new send[120];
				format(send,sizeof send,"[Внимание] Администратор %s отключил Google Authenticator. Возможно, он взломан",PlayerName[playerid]);
				SendAdminsMessage(COLOR_RED,send);
			}
			if(PlayerInfo[playerid][pLeader])
			{
				PlayerInfo[playerid][pMember] = 0;
				PlayerInfo[playerid][pLeader] = 0;
				PlayerInfo[playerid][pRank] = 0;
				_ResetGun(playerid);
				SetPlayerColor(playerid, 0xFFFFFF00);
				SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
				new send[120];
				format(send,sizeof send,"[Внимание] Лидер %s отключил Google Authenticator. Возможно, он взломан",PlayerName[playerid]);
				SendAdminsMessage(COLOR_RED,send);
			}
		}
		case 950:
		{
			if(!response)
			{
				SendClientMessage(playerid,COLOR_ORANGE,"Вы отменили процедуру подключения защиты Google Authenticator");
				new _str[734] = "{ffffff}Данный тип защиты сводит вероятность взлома вашего аккаунта\n\
				к нулю. Принцип работы заключается в генерации случайного\n\
				кода каждые 30 секунд, который подобрать почти невозможно.\n\
				Подключение происходит следующим образом:\n\
				{ffd98c}» Скачайте и установите из App Store/Google Play приложение Google Authenticator\n\
				» Нажмите кнопку '+' и выберите ручной ввод данных\n\
				\t{0099ff}В поле 'Аккаунт/Account' укажите никнейм своего аккаунта\n\
				\tВ поле 'Ключ/Key' введите указанный вам код\n\
				{ffd98c}» В правом верхнем углу нажмите галочку\n\
				» Введите полученный шестизначный код в поле и нажмите 'Подключить'\n\n\
				Нажмите 'Далее', чтобы начать процедуру подключения Google Authenticator";
				return ShowPlayerDialogEx(playerid, 948, DIALOG_STYLE_MSGBOX,"{43CD80}Google Authenticator [1/2]", _str, "Далее", "Отмена");
			}
			new params;
			if(sscanf(inputtext, "d[6]", params))
			{
				SendClientMessage(playerid,COLOR_ORANGE,"Введите шестизначный код из приложения Google Authenticator");
				new _str[291] = "{ffffff}Следуя инструкции на предыдущей странице,\n\
				введите индивидуально сгенерированный код в поле ниже\n\n\
				Ваш код: {66cc00}%s\n\n\
				{7396FB}Нажмите 'Подключить', чтобы завершить процедуру подключения Google Authenticator\n\
				Не забудьте сделать скриншот этого кода!";
				format(_str,sizeof _str, _str,gencode[playerid]);
				return ShowPlayerDialogEx(playerid, 950, DIALOG_STYLE_INPUT,"{43CD80}Google Authenticator [2/2]", _str, "Подключить", "Отмена");
			}
			if(params != GoogleAuthenticatorCode(gencode[playerid], gettime()))
			{
				SendClientMessage(playerid,COLOR_ORANGE,"Введённый вами код не совпадает с кодом из приложения Google Authenticator");
				new _str[291] = "{ffffff}Следуя инструкции на предыдущей странице,\n\
				введите индивидуально сгенерированный код в поле ниже\n\n\
				Ваш код: {66cc00}%s\n\n\
				{7396FB}Нажмите 'Подключить', чтобы завершить процедуру подключения Google Authenticator\n\
				Не забудьте сделать скриншот этого кода!";
				format(_str,sizeof _str, _str,gencode[playerid]);
				return ShowPlayerDialogEx(playerid, 950, DIALOG_STYLE_INPUT,"{43CD80}Google Authenticator [2/2]", _str, "Подключить", "Отмена");
			}
			ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX,"{43CD80}Google Authenticator Complete", "{66cc00}Вы подключили Google Authenticator.\n\n{ffffff}Теперь при подключении, если ваш IP не будет совпадать,\nсистема будет запрашивать шестизначный код из приложения.\n\n{ff0000}Если вы отключите на посту администратора/лидера\nGoogle Authenticator, вы автоматически будете лишены этой должности", "Закрыть", "");
			new str[300];
			format(str,sizeof str,"UPDATE `accounts` SET `AuthCode` = '%s',`AuthAct` = '1' WHERE `NickName`='%s'",gencode[playerid],PlayerName[playerid]);
			mysql_query(mysql,str);
			PlayerInfo[playerid][AuthAct] = 1;
		}
		case 948:
		{
			if(response)
			{
				for(new i; i < 17; i++)strcat(gencode[playerid], CodeSymbols[random(sizeof(CodeSymbols))]);
				new _str[291] = "{ffffff}Следуя инструкции на предыдущей странице,\n\
				введите индивидуально сгенерированный код в поле ниже\n\n\
				Ваш код: {66cc00}%s\n\n\
				{7396FB}Нажмите 'Подключить', чтобы завершить процедуру подключения Google Authenticator\n\
				Не забудьте сделать скриншот этого кода!";
				format(_str,sizeof _str, _str,gencode[playerid]);
				ShowPlayerDialogEx(playerid, 950, DIALOG_STYLE_INPUT,"{43CD80}Google Authenticator [2/2]", _str, "Подключить", "Отмена");
			}
		}
	 	case 156:
	 	{
	 	    if(response)
	 	    {
	 	        if(SlotValue[playerid][3] != -1)
	 	        {
	 	            new lock[16];
				    new biz = SlotValue[playerid][3];
				    if(BizInfo[biz][bLock]) lock = "{7396FB}Открыть";
					else lock = "{43CD80}Закрыть";
					new Text[50];
				    switch(BizInfo[biz][bState])
					{
					    case B_GAS: Text = "Изменить стоимость 1 литра бензина";
						case 7: Text = "Изменить стоимость продуктов";
					    default: Text = "{B71B1B}[Недоступно для вашего бизнеса]{FFFFFF}";
				    }
				    if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9 || BizInfo[biz][bState] == 0)
					{
					    if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0) format(string,sizeof(string),"%s\nИзменить %s\nСнять со счета\nПополнить баланс бизнеса\n{7396FB}Отметить в GPS{FFFFFF}\n{CAD715}Скупать продукты у развозчиков\n{C85151}Отозвать заказ на скупку продуктов",lock,Text);
					    else format(string,sizeof(string),"%s\n%s\nСнять со счета\nПополнить баланс бизнеса\n{7396FB}Отметить в GPS\n{CAD715}Скупать продукты у развозчиков",lock,Text);
					}
				    else format(string,sizeof(string),"%s\n%s\nСнять со счета\nПополнить баланс бизнеса\n{7396FB}Отметить в GPS",lock,Text);

	 	        	ShowPlayerDialogEx(playerid,157,2,"{43CD80}Управление предприятием",string,"Выбор","Отмена");
				}
			 }
		}
		case 157:
	 	{
	 	    new biz = SlotValue[playerid][3];
	 	    if(SlotValue[playerid][3] == -1) return 1;
	 	    if(response)
	 	    {
				switch(listitem)
				{
				    case 0:
				    {
				        if(BizInfo[biz][bLock]) BizInfo[biz][bLock] = 0;
				        else BizInfo[biz][bLock] = 1;
				        callcmd::bizinfo(playerid);
				    }
				    case 1:
				    {
				        new Text[200];
				        new maxcost;
						switch(BizInfo[biz][bState])
						{
						    case B_GUNSHOP: maxcost = 0;
						    case B_BAR: maxcost = 0;
						    case B_BUY: maxcost = 0;
						    case B_BINKO: maxcost =0;
						    case B_ELECTRO: maxcost = 0;
						    case B_CARUPGR: maxcost = 0;
						    case B_GAS: maxcost = 50;
						    case B_CL_BELL: maxcost = 50;
						    case B_RENTCAR: maxcost = 0;
						    case 9: maxcost =0;
							default: maxcost = 0;
						}
						if(maxcost == 0) return SendError(playerid,"Эта функция доступна только для владельцев АЗС и закусочных");
					    switch(BizInfo[biz][bState])
						{
						    case B_GAS: Text = "стоимость 1 литра и входа.\n{19A725}Используйте число от {FFFFFF}1${19A725} до {FFFFFF}50${19A725} за один литр";
						    case 7: Text = "cтоимость продуктов и входа.\n{19A725}Используйте число от {FFFFFF}1${19A725} до {FFFFFF}50${19A725} за один продукт";
						    default: Text = "стоимость входа";
					    }
					    format(string,sizeof(string),"\n\n{FFFFFF}Введите %s\n\n",Text);
				        ShowPlayerDialogEx(playerid,158,1,"{43CD80}Управление предприятием",string,"Далее","Отмена");
				    }
					case 2: ShowPlayerDialogEx(playerid,159,1,"{43CD80}Управление предприятием","\n\n{FFFFFF}Введите сумму, которую хотите снять.\n\n","Далее","Отмена");
					case 3: ShowPlayerDialogEx(playerid,173,1,"{43CD80}Управление предприятием","\n\n{FFFFFF}Введите сумму, которую хотите положить на баланс вашего бизнеса.\n\n","Далее","Отмена");
					case 4:
					{
					    EnableGPSForPlayer(playerid, BizInfo[biz][bEnter][0], BizInfo[biz][bEnter][1], BizInfo[biz][bEnter][2]);
					    SendInfo(playerid,"Вы отметили ваш бизнес в GPS");
					}
					case 5:
					{
					    if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9 || BizInfo[biz][bState] == 0)
					    {
					        if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0)return  SendError(playerid,"Вы уже заказали продукты! Если хотите составить заказ заново, отозвите старый");
					        format(string,sizeof(string),"\
							\\c{FFFFFF}Обратите внимание на стоимость товара, где скупают развозчики! Если\n\
							\\cоплата от вас будет ниже чем на складе, вам никто не привезет груз!\n\n\
							\\cДля магазинов/баров - {C9EAFF}$%d{FFFFFF}\n\
							\\cДля закусочных - {C9EAFF}$%d{FFFFFF}\n\
							\\cДля аммуниции - {C9EAFF}$%d{FFFFFF}",GLS[29],GLS[31],GLS[29]);
					    	format(string,sizeof(string),"\n\n\
							\\c{FFFFFF}В ваш бизнес необходимо закупать товар, который развозят развозчики продуктов!\n\
							\\cВам нужно указать количество товара и его стоимость чтобы они могли его доставить\n\
							\\cНа балансе всегда должны быть деньги, ибо вы не сможете купить груз!\n\n\
							\\c{FF4400}Введите количество и цену за 1 товар через запятую, без пробела. Пример: 5000,35\n\n%s",string);
							Dialog_Open(playerid,182,1,"{43CD80}Информация",string,"Далее","Отмена");
						}
					}
					case 6:
					{
					    if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9 || BizInfo[biz][bState] == 0)
					    {
						    if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0)
						    {
                                BizInfo[biz][bBuyCost]=0;
								BizInfo[biz][bNeedItem]=0;
								SendClientMessage(playerid,COLOR_GREEN,"Вы отказались от своего заказа на скупку продуктов");
								callcmd::bizinfo(playerid);
								UpdateBiz(biz,0);
						    }
						}
					}
				}
	 	    }
		}
		case 182:
		{
		    if(response)
		    {
	            new id,money;
		        sscanf(inputtextsave,"p<,>dd",id,money);
                new bizz = SlotValue[playerid][3];
 				if(!IsPlayerInRangeOfPoint(playerid,20,BizInfo[bizz][bExit][0], BizInfo[bizz][bExit][1], BizInfo[bizz][bExit][2]) && !IsPlayerInRangeOfPoint(playerid,20,BizInfo[bizz][bEnter][0], BizInfo[bizz][bEnter][1], BizInfo[bizz][bEnter][2])) return SendError(playerid,"Вы должны находиться возле вашего бизнеса");
 				if(bizz == -1)return 1;
 				if(id < 1 || money < 1)
 				{
			        format(string,sizeof(string),"{FFFFFF}Обратите внимание на стоимость товара где скупают развозчики! Если\nоплата от вас будет ниже чем на складе, вам никто не привезет груз!\n\nДля магазинов/баров - {51C859}$%d{FFFFFF}\nДля закусочных - {51C859}$%d{FFFFFF}",GLS[29],GLS[31]);
			    	format(string,sizeof(string),"{FFFFFF}В ваш бизнес необходимо закупать товар, который развозят развозчики продуктов!\nВам нужно указать количество товара и его стоимость чтобы они могли его доставить.\nНа балансе всегда должны быть деньги, ибо вы не сможете купить груз!\n\n{CAD715}Введите количество и цену за 1 товар через запятую, без пробела. Пример: 5000,35.\n\n%s",string);
					ShowPlayerDialogEx(playerid,182,1,"{43CD80}Информация",string,"Далее","Отмена");
					return 1;
 				}
				if(id > 10000)return SendError(playerid,"Вы не можете заказать больше 10 000 товара на скупку");
				if(id < 100) return SendError(playerid,"Вы не можете заказать меньше 100 товара на скупку");
				if(BizInfo[bizz][bState] != 7)
				{
				    if(money < GLS[29])
				    {
					    SendError(playerid,"Вы не можете установить цену на скупку товара, дешевле чем покупают развозчики для магазинов/баров для перепродажи вам");
					    callcmd::bizinfo(playerid);
					    return 1;
					}
					if((money-GLS[29])<1)
					{
					    SendError(playerid,"Цена на скупку товара слишком низкая! Попробуйте ее повысить на 1$");
					    callcmd::bizinfo(playerid);
					    return 1;
					}
					if((money-GLS[29])>10)
					{
					    format(string,sizeof(string),"Вы не можете установить такую большую цену за товар! Используйте от {FFFFFF}$%d{BE2D2D} до {FFFFFF}$%d.{BE2D2D}",(GLS[29]+1),(GLS[29]+10));
					    SendClientMessage(playerid,COLOR_RED,string);
					    callcmd::bizinfo(playerid);
					    return 1;
					}
				}
				else
				{
				    if(money < GLS[31])
				    {
				        SendError(playerid,"Вы не можете установить цену на скупку товара, дешевле чем покупают развозчики для магазинов/баров для перепродажи вам");
					    callcmd::bizinfo(playerid);
					    return 1;
				    }
				    if((money-GLS[31])<1)
					{
					    SendError(playerid,"Цена на скупку товара слишком низкая! Попробуйте ее повысить на 1$");
					    callcmd::bizinfo(playerid);
					    return 1;
					}
					if((money-GLS[31])>10)
					{
					    format(string,sizeof(string),"Вы не можете установить такую большую цену за продукты! Используйте от {FFFFFF}$%d{BE2D2D} до {FFFFFF}$%d.{BE2D2D}",(GLS[31]+1),(GLS[31]+10));
					    SendClientMessage(playerid,COLOR_RED,string);
					    callcmd::bizinfo(playerid);
					    return 1;
					}
				}
				BizInfo[bizz][bBuyCost]=money;
				BizInfo[bizz][bNeedItem]=id;
				format(string,sizeof(string),"Вы составили заказ на скупку {FFFFFF}%d{42B02C} товара для вашего бизнеса, по цене {FFFFFF}$%d{FFFFFF}",BizInfo[bizz][bNeedItem],BizInfo[bizz][bBuyCost]);
				SendClientMessage(playerid,COLOR_GREEN,string);
				UpdateBiz(bizz,0);
				callcmd::bizinfo(playerid);
			}
		}
		case 158:
		{
		    if(response)
		    {
		        new biz = SlotValue[playerid][3];
				new Float:cost = floatstr(inputtextsave);
				new Float:maxcost;
				switch(BizInfo[biz][bState])
				{
				    case B_GUNSHOP: maxcost = 0.0;
				    case B_BAR: maxcost = 0.0;
				    case B_BUY: maxcost = 0.0;
				    case B_BINKO: maxcost = 0.0;
				    case B_ELECTRO: maxcost = 0.0;
				    case B_CARUPGR: maxcost = 0.0;
				    case B_GAS: maxcost = 50.0;
				    case B_CL_BELL: maxcost = 50.0;
				    case 9: maxcost = 0.0;
				}
				if(maxcost == 0.0) return SendError(playerid,"Ошибка");
				if(cost < 0.5 || cost > maxcost) return SendError(playerid,"Произошла ошибка, пожалуйста проверьте правильность ввода");
				BizInfo[biz][bEnterPrice] = cost;
				new Text[30];
    			switch(BizInfo[biz][bState])
				{
    				case B_GAS:
					{
						Text = "стоимость 1 литра бензина";
						UpdateFuels(biz);
					}
					case 7: Text="стоимость продуктов";
				    default: Text = "";
    			}
    			format(string,sizeof(string),"{FFFFFF}Вы изменили %s на $%.1f",Text,cost);
				SendClientMessage(playerid,COLOR_ORANGE,string);
				UpdateBiz(biz,1);
		    }
		}
		case 159:
		{
		    if(response)
		    {
		        new biz = SlotValue[playerid][3];
				new cost = strval(inputtextsave);
				if(cost < 1 || cost > BizInfo[biz][bMoney]) return ShowPlayerDialogEx(playerid,159,1,"{43CD80}Управление предприятием","\n\nВведите сумму, которую хотите снять\n\n{D71515}На балансе бизнеса не достаточно средств","Далее","Отмена");
				BizInfo[biz][bMoney] -= cost;
				GiveMoney(playerid,cost,"TakeMoney (Biz)");
				UpdateBiz(biz,1);
				SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы сняли деньги со счета");
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Снятие с баланса бизнеса",cost,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		    }
		}
		case 173:
		{
		    if(response)
		    {
		        new biz = SlotValue[playerid][3];
				new cost = strval(inputtextsave);
				if(cost < 1 || cost > SlotValue[playerid][0]) return ShowPlayerDialogEx(playerid,173,1,"{43CD80}Управление предприятием","\n\n{FFFFFF}Введите сумму, которую хотите положить на баланс вашего бизнеса.\n\n{D71515}У вас не достаточно денег чтобы положить эту сумму","Далее","Отмена");
				BizInfo[biz][bMoney] += cost;
				GiveMoney(playerid,-cost);
				UpdateBiz(biz,1);
				SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы пополнили баланс вашего бизнеса");
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Пополнение баланса бизнеса",-cost,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		    }
		}
		case 161:
		{
		    if(response)
		    {
		        if(SlotValue[playerid][3] != -1)
				{
				    new biz = SlotValue[playerid][3];
				    if(GetString(BizInfo[biz][bOwner],Name(playerid)))
				    {
			         	SetString(BizInfo[biz][bOwner],"The State");
					    GiveMoney(playerid,BizInfo[biz][bCost]/2,"SellBiz0");
				     	SlotValue[playerid][3] = -1;
				     	if(BizInfo[biz][bProducts] < 0) BizInfo[biz][bProducts] = 1000;
				     	if(BizInfo[biz][bMoney] < 0) BizInfo[biz][bMoney] = 1000;
				     	SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы продали свой бизнес государству");
						UpdateBiz(biz,1);
						UpdateInventory(playerid, 3);
						SaveAccount(playerid);
						new logtime[3],logdate[3],logtimestring[16];
						getdate(logdate[2],logdate[1],logdate[0]);
						gettime(logtime[0],logtime[1],logtime[2]);
						f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
						WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Продажа бизнеса государству",BizInfo[biz][bCost]/2,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
					}
				}
		    }
		}
		case 163:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: callcmd::park(playerid);
		            case 1:
		            {
		                format(string,sizeof(string),"%d",ShowVeh[playerid]);
		                callcmd::findcar(playerid,string);
		            }
		            case 2:
		            {
		                format(string,sizeof(string),"%d",ShowVeh[playerid]);
		                callcmd::alarm(playerid,string);
		            }
		            case 3:
		            {
						f(string, "%d %d",playerid, ShowVeh[playerid]);
						callcmd::carpass(playerid,string);
		            }
		            case 4:
		            {
                    	new number = GetVehicleID(ShowVeh[playerid]);
                     	if(IsPlayerRegCar(playerid,ShowVeh[playerid]))
                     	{
							SetString(CarInfo[number][cKeyer], "The State");
							SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы удалили всех посредников на ваш автомобиль");
						}
						else
						{
						    SetString(CarInfo[number][cKeyer], "The State");
							SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы вернули ключи от автомобиля");
						}
		            }
		        }
		    }
		}
		case 168:
		{
		    if(response)
			{
				if(strval(inputtext) == ReMailCode[playerid])
				{
					mysql_real_escape_string(ReMail[playerid], PlayerMail[playerid]);
					SendInfo(playerid, "Ваш E-Mail адрес успешно подтверждён");
					return 1;
				}
			}
		    else ShowUpdateSettings(playerid);
		}
		case 160:
		{
		    if(response)
		    {
		        if(!IsValidEMail(inputtextsave)) return Dialog_Open(playerid, 160, 1, "{43CD80}E-Mail", "\n\n\
						\\c{FFFFFF}Напишите свой активный E-Mail ниже, после вы сможете\n\
						\\cвоспользоваться восстановлением пароля через сайт\n\
						\\cИзменить данный адрес в будущем {FF4400}НЕВОЗМОЖНО\n\n", "Продолжить", "Отмена");
				if(IsAFexistMail(inputtextsave)) return Dialog_Open(playerid, 160, 1, "{43CD80}E-Mail", "\n\n\
						\\c{FFFFFF}Напишите свой активный E-Mail ниже, после вы сможете\n\
						\\cвоспользоваться восстановлением пароля через сайт\n\
						\\cИзменить данный адрес в будущем {FF4400}НЕВОЗМОЖНО\n\n- Данный E-Mail адрес уже занят", "Продолжить", "Отмена");
		        format(string,sizeof(string),"\n\n\
				\\c{FFFFFF}На E-Mail {C9EAFF}%s {FFFFFF}пришло письмо с кодом подтверждения\n\
				\\cВведите этот код в диалоговое окно\n\n\
				\\c{AFAFAF}Чтобы свернуть игру нажмите Alt + Tab или клавишу Windows\n\n",inputtextsave);
				Dialog_Open(playerid,168,1,"{43CD80}Подтверждение",string,"Далее","Отмена");
				new code = 100000 + random(900000);
				//SendMail(inputtextsave, "Confirm E-Mail",string);
				new url[256];
				f(url, "ggrp.ru/mailer?to=%s&subject=Confirmation&text=%s&from=admin@ggrp.ru",inputtextsave, IntToStr(code));
				HTTP( 0xD00D, HTTP_GET, url, IntToStr(code), "OnMailScriptResponse");
				SetString(ReMail[playerid],inputtextsave);
				ReMailCode[playerid] = code;
		    }
		    else ShowUpdateSettings(playerid);
		}
		case RENAME_DIALOG:
		{
		    if(response)
		    {
		        if(IsARPName(inputtextsave))
		        {
					new name[25];
	                mysql_real_escape_string(inputtextsave, name);
	                new query[256];
				    mysql_format(mysql, query, sizeof(query), "SELECT `ID` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1", name);
				    mysql_pquery(mysql, query, "MysqlCheckNameRename", "ds", playerid, name);
		        }
		        else ShowPlayerDialogEx(playerid,RENAME_DIALOG,1,"{43CD80}Введите новый никнейм","{FF0000}Это не РП ник!\n\n{FFFFFF}Ваш ник не соответствует правилам сервера.\nВведите новый ник в окошко и нажмите {43CD80}Далее.\n\n{FFFFFF}Пример: {43CD80}Carl_Johnson","Далее","Выход");
		    }
		    else
		    {
		        if(IsPlayerLogged[playerid]) ShowPlayerDialogEx(playerid,RENAME_DIALOG,1,"{43CD80}Введите новый никнейм","{FFFFFF}Ваш ник не соответствует правилам сервера.\nВведите новый ник в окошко и нажмите {43CD80}Далее.\n\n{FFFFFF}Пример: {43CD80}Carl_Johnson","Далее","Выход");
				else ShowPlayerDialogEx(playerid,3,0,"{43CD80}Подтверждение","Вы собрались покинуть сервер.\nЕсли хотете сделать это, нажмите 'Принять'.\nВ ином случае нажмите 'Отмена'","Принять","Отмена");
			}
		}
		case 171:
		{
		    if(response)
		    {
		        new carid = ShowCar[playerid][listitem];
		        if(IsPlayerHaveCar(playerid,carid))
		        {
		            new number = GetVehicleID(carid);
		            ShowVeh[playerid] = number;
		            if(!CarInfo[number][cShtraf]) return SendError(playerid,"Этот транспорт не стоит на штрафстоянке");
		            format(string,sizeof(string),"{FFFFFF}Номер транспорта: %s\nСумма залога: $%d",OwnCarNumber(carid), CarInfo[number][cShtraf]);
		            ShowPlayerDialogEx(playerid,172,0,"{43CD80}Подтверждение",string,"Выкупить","Отмена");
		        }
		        else SendError(playerid,"Это не ваш транспорт");

		    }
		}
		case 1781:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: callcmd::setspawn(playerid);
		            case 1:
		            {
		                if(IsAArmy(playerid) && PlayerInfo[playerid][pRank]<4)
						{
						    PlayerInfo[playerid][pDCTime]=3;
							SendError(playerid,"На службе в армии вы не можете изменить место спавна");
							return false;
						}
		                if(SlotValue[playerid][2]==-1) return SendError(playerid,"Вы не проживаете в квартире");
		                PlayerInfo[playerid][pDCTime]=1;
		                SendInfo(playerid,"Вы установили квартиру местом спавна");
		                callcmd::setspawn(playerid);
		            }
		            case 2:
		            {
		                if(IsAArmy(playerid) && PlayerInfo[playerid][pRank]<4)
						{
						    PlayerInfo[playerid][pDCTime]=3;
							SendError(playerid,"На службе в армии вы не можете изменить место спавна");
							return false;
						}
		                if(SlotValue[playerid][1]==-1) return SendError(playerid,"Вы не проживаете в доме");
		                PlayerInfo[playerid][pDCTime]=2;
		                SendInfo(playerid,"Вы установили дом местом спавна");
		                callcmd::setspawn(playerid);
		            }
		            case 3:
		            {
		                if(PlayerInfo[playerid][pMember]==0) return SendError(playerid,"Вы не состоите в организации");
		                PlayerInfo[playerid][pDCTime]=3;
		                SendInfo(playerid,"Вы установили организацию местом спавна");
		                callcmd::setspawn(playerid);
		            }
		            case 4:
		            {
		                if(IsAArmy(playerid) && PlayerInfo[playerid][pRank]<4)
						{
						    PlayerInfo[playerid][pDCTime]=3;
							SendError(playerid,"На службе в армии, вы не можете изменить место спавна");
							return false;
						}
		                PlayerInfo[playerid][pDCTime]=0;
		                SendInfo(playerid,"Вы установили вокзал местом спавна");
		                callcmd::setspawn(playerid);
		            }
					case 5:
		            {
		                if(IsAArmy(playerid) && PlayerInfo[playerid][pRank]<4)
						{
						    PlayerInfo[playerid][pDCTime]=3;
							SendError(playerid,"На службе в армии, вы не можете изменить место спавна");
							return false;
						}
		                PlayerInfo[playerid][pDCTime]=4;
		                SendInfo(playerid,"Вы установили местом спавна точку при выходе из игры");
		                callcmd::setspawn(playerid);
		            }
					case 6:
		            {
		                if(!IsACop(playerid) && PlayerInfo[playerid][pRank]<4)
						{
							SendError(playerid,"Доступно только полицейским с 4 ранга");
							return false;
						}
		                PlayerInfo[playerid][pDCTime]=5;
		                SendInfo(playerid,"Вы установили местом спавна тюрьму Алькатрас");
		                callcmd::setspawn(playerid);
		            }
					case 7:
		            {
		                if(IsAArmy(playerid) && PlayerInfo[playerid][pRank]<4)
						{
							SendError(playerid,"На службе в армии, вы не можете изменить место спавна");
							return false;
						}
						for(new s = 5; s <= 9; s++){
							if(SlotValue[playerid][s] > 0 && IsPlayerHaveCar(playerid, SlotValue[playerid][s])){
								f(string, "%s{FFCB8C}%s\n", string, VehicleName[GetVehicleModelEx(SlotValue[playerid][s])-400]);
							}
						}
						if(strlen(string) < 3)return ShowPlayerDialogEx(playerid, 0, 0, "Информация", "{D94141}У Вас нет личного транспорта", "Скрыть", "");
		                ShowPlayerDialogEx(playerid, 7973, 2, "Выбор транспорта для спавна", string, "Выбрать", "Отмена");
		            }
		        }
		    }
		}
		case 7973:
		{
			if(response){
				PlayerInfo[playerid][pDCTime] = GetVehicleModelEx(SlotValue[playerid][listitem+5]);
				SendInfo(playerid,"Вы установили местом спавна ваш личный транспорт");
			}
		    callcmd::setspawn(playerid);
		}
		case 172:
		{
		    if(response)
		    {
		        new carid = ShowVeh[playerid];
		        if(IsPlayerHaveCar(playerid,OwnableCar[carid]))
		        {
		            if(!CarInfo[carid][cShtraf]) return SendError(playerid,"Этот транспорт не стоит на штрафстоянке");
		            if(GetMoney(playerid) >= CarInfo[carid][cShtraf])
		            {
			            SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы выкупили свой транспорт");
                        GiveMoney(playerid,-CarInfo[carid][cShtraf],"UnShtraf");
						CarInfo[carid][cShtraf] = 0;
			            SaveOwnableCar(carid);
		            }
		            else SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        }
		    }
		}
		case 887:
		{
		    if(response)
		    {
		        if(GetMoney(playerid) < 30000)return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        format(string,sizeof(string),"{FFFFFF}Поздравляем! Ваш пароль востановлен.\n{E52B2B}Обязательно запомните этот пароль и измените его.\n{FFFFFF}Новый пароль: 123456{FFFFFF}.\n");
		        ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть","");
		        PlayerInfo[playerid][pOOC]=123456;
		        GiveMoney(playerid,-30000);
                GiveMoney(PanelPlayerID[playerid],20000);
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~New password: 123456", 30000, 3);
		    }
		    else SendClientMessage(PanelPlayerID[playerid],COLOR_GRAY,"[Информация] {FFFFFF}Игрок отклонил ваше предложение о изменении пароля");
		}
		case 881:
		{
		    if(response)
		    {
		        new carid = ShowCar[playerid][listitem];
		        if(IsPlayerHaveCar(playerid,carid))
		        {
		            new number = GetVehicleID(carid);
		            ShowVeh[playerid] = number;
		            if(TalentsInfo[playerid][2][1] != 3) format(string,sizeof(string),"\n\n{FFFFFF}Номер транспорта: {42B02C}%s{FFFFFF}\nСумма к оплате: {42B02C}$%d{FFFFFF}\n\n",OwnCarNumber(carid), CarInfo[number][cShtrafer]);
		            else format(string,sizeof(string),"\n\n{FFFFFF}Номер транспорта: {42B02C}%s{FFFFFF}\nСумма к оплате: {42B02C}$%d{FFFFFF}\nПо скольку у вас имеется улучшение, вам придётся заплатить всего лишь {42B02C}$%d{FFFFFF}\n\n",OwnCarNumber(carid), CarInfo[number][cShtrafer], CarInfo[number][cShtrafer]/2);
		            ShowPlayerDialogEx(playerid,882,0,"{43CD80}Подтверждение",string,"Оплатить","Отмена");
		        }
		        else SendError(playerid,"Это не ваш транспорт");

		    }
		}
		case 882:
		{
		    if(response)
		    {
		        new carid = ShowVeh[playerid];
		        if(IsPlayerHaveCar(playerid,OwnableCar[carid]))
		        {
		            if(GetMoney(playerid) >= CarInfo[carid][cShtrafer])
		            {
			            SendClientMessage(playerid,COLOR_GREEN,"Вы оплатили налог на транспорт");
			            if(TalentsInfo[playerid][2][1] != 3)SendClientMessage(playerid,COLOR_GREEN,"Обратите внимание что имея улучшение халявщик вы будете платить в 2 раза меньше");
			            OrgInfo[GLS[13]][oBank]+=CarInfo[carid][cShtrafer];
			            SaveOrg(GLS[13]);
			            if(TalentsInfo[playerid][2][1] == 3)
						{
							GiveMoney(playerid,-CarInfo[carid][cShtrafer]/2,"UnShtraf");
						}
						else
						{
							GiveMoney(playerid,-CarInfo[carid][cShtrafer],"UnShtraf");
						}
						CarInfo[carid][cShtrafer] = 0;
			            SaveOwnableCar(carid);
			            SendBankBot(playerid);
		            }
		            else SendBotMessage(playerid,"Извините, но  у вас недостаточно денег");
		        }
		    }
		}
		case 804:
  		{
	 		if(response)
			{
	  		    new house = SlotValue[playerid][1];
             	if(!GetString(HouseInfo[house][hOwner],PlayerName[playerid])) return 1;
		        SetString(HouseInfo[house][hOwner],"The State");
			    GiveMoney(playerid,HouseInfo[house][hCost]/2,"SellHouse");
		     	SlotValue[playerid][1] = -1;
		     	SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы продали свой дом государству");
		     	PlayerInfo[playerid][pDCTime] = 0;
		     	SaveAccount(playerid);
				UpdateHouse(house);
				UpdateInventory(playerid, 1);
			}
		}
  		case 803:
  		{
  			if(response)
			{
				new carid = GetPlayerVehicleID(playerid);
				if(IsAOwnableCar(carid))
				{
					if(IsPlayerInHisVehicle(playerid))
					{
					    if(IsPlayerRegCar(playerid,carid))
					    {
							new number = GetVehicleID(carid);
							new cost = CarInfo[number][cCost]/2;
							GiveMoney(playerid,cost,"SellCar");
       						SellCar(carid);
							format(string,sizeof(string),"[Информация] {FFFFFF}Вы продали ваше транспортное средство за $%d",cost);
						  	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
						  	GetNumberCars(playerid,PlayerInfo[playerid][pCars]);
							GetPlayerCars(playerid);
							if(PlayerInfo[playerid][pDCTime] >= 400){
								PlayerInfo[playerid][pDCTime]=0;
								SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
							}
							UpdateItem(playerid, SelectedSlot[playerid], 1);
							new logtime[3],logdate[3],logtimestring[16];
							getdate(logdate[2],logdate[1],logdate[0]);
							gettime(logtime[0],logtime[1],logtime[2]);
							f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
							WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Отправка т/с в утиль",cost,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
						}
						else SendError(playerid, "Вы не являетесь владельцем этого транспорта");
					}
				}
			}
		}
		case 195:
		{
		    if(response)
			{
			    if(SlotValue[playerid][1] != -1)
			    {
			        new house = SlotValue[playerid][1];
			        if(!GetString(HouseInfo[house][hOwner],PlayerName[playerid])) return false;
		            if(GetString(HRoomOwner[house][listitem],"The State")) return callcmd::houseinfo(playerid);
				    new id = NameID(HRoomOwner[house][listitem]);
				    if(id != INVALID_PLAYER_ID)
				    {
				        SlotValue[id][1] = -1;
				        PlayerInfo[id][pDCTime]=0;
     					SendClientMessage(id,COLOR_LIGHTBLUE,"Местом спавна автоматически назначена улица. Изменить место спавна >> /setspawn");
				        format(string,sizeof(string),"Владелец дома {42B02C}%s{FFFFFF} выселил вас",PlayerName[playerid]);
				        SendClientMessage(id,COLOR_WHITE,string);
				       	SaveAccount(id);
				    }
				    else
				    {
				        format(string,sizeof(string),"UPDATE `accounts` SET `HouseKey` = '-1', `DropCarTime` = '0' WHERE `NickName` = '%s'",HRoomOwner[house][listitem]);
				        mysql_pquery(mysql, string);
				    }
				    format(string,sizeof(string),"Вы выселили игрока {42B02C}%s{FFFFFF} из своего дома",HRoomOwner[house][listitem]);
        			SendClientMessage(playerid,COLOR_WHITE,string);
				    SetString(HRoomOwner[house][listitem],"The State");
        			SaveHouse(house);
				}
			}
		}
		case 196:
		{
		    if(response)
			{
			    new player = RHouseOffer[playerid];
			    if(!IsPlayerConnected(player)) return RHouseOffer[playerid] = INVALID_PLAYER_ID;
				new house = SlotValue[player][1];
				if(house == -1) return SendError(playerid,"Не известный номер дома");
			    if(!GetString(HouseInfo[house][hOwner],PlayerName[player])) return false;
		        new s = GetHouseStyle(house);
    			for(new i;i < HouseRooms[s];i ++) format(string,sizeof(string),"%s- Комната {42B02C}№%d{FFFFFF}\n",string,i+1);
	    		ShowPlayerDialogEx(playerid,197,2,"{43CD80}Подтверждение",string,"Занять","Назад");
			}
			else RHouseOffer[playerid] = INVALID_PLAYER_ID;
		}
		case 197:
		{
		    if(response)
			{
			    new player = RHouseOffer[playerid];
			    if(!IsPlayerConnected(player)) return RHouseOffer[playerid] = INVALID_PLAYER_ID;
		        new house = SlotValue[player][1];
		    	if(GetString(HRoomOwner[house][listitem],"The State"))
		    	{
		    	    SetString(HRoomOwner[house][listitem],PlayerName[playerid]);

		    	    format(string,sizeof(string),"[Информация] {FFFFFF}Вы арендовали комнату в доме игрока %s",PlayerName[player]);
		    	    SendClientMessage(playerid,COLOR_VALIK,string);

		    	    format(string,sizeof(string),"%s принял ваше предложение пожить у него в доме",PlayerName[playerid]);
		    	    SendClientMessage(player,COLOR_GREEN,string);

					SlotValue[playerid][1] = house;
					RHouseOffer[playerid] = INVALID_PLAYER_ID;

					PlayerInfo[playerid][pDCTime]=2;
     				SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ваш дом. Изменить место спавна >> /setspawn");

					SaveAccount(playerid);
					SaveHouse(house);
		    	}
		    	else
		    	{
				    new s = GetHouseStyle(house);
		    		for(new i;i < HouseRooms[s];i ++) format(string,sizeof(string),"%s- Комната {42B02C}№%d{FFFFFF}\n",string,i+1);
  			    	ShowPlayerDialogEx(playerid,197,2,"{43CD80}Подтверждение",string,"Занять","Назад");
		    	}
			}
			else RHouseOffer[playerid] = INVALID_PLAYER_ID;
		}
		case 198:
		{
		    if(response)
			{
			    new id = strval(inputtextsave);
				if(!ProxDetectorS(5,playerid, id, 1)) return SendError(playerid,"Вы далеко от игрока");
			 	if(SlotValue[id][1] != -1) return SendError(playerid,"Этот игрок уже живет в доме");
			 	if(SlotValue[id][2] != -1) return SendError(playerid,"Вы не можете подселить этого игрока к вам в дом, так как он проживает в квартире");
			    new house = SlotValue[playerid][1];
			    for(new i;i < HouseRooms[GetHouseStyle(house)];i ++)
				{
					if(GetString(HRoomOwner[house][i],"The State"))
					{
						format(string,sizeof(string),"Игрок {42B02C}%s{FFFFFF} предлагает вам жить в комнате его дома",PlayerName[playerid]);
						ShowPlayerDialogEx(id,196,0,"{43CD80}Подтверждение",string,"Принять","Отмена");
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы предлагаете игроку {42B02C}%s{FFFFFF} жить в комнате вашего дома",PlayerName[id]);
						SendClientMessage(playerid,COLOR_GREEN,string);
						RHouseOffer[id] = playerid;
						return true;
					}
					SendError(playerid,"Все комнаты вашего дома заняты");
				}
			}
		}
		case 2431:
		{
		    if(response)
		    {
		        new house = SlotValue[playerid][1];
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(HouseEntered[playerid]==-1) return false;
						if(IsPlayerInRangeOfPoint(playerid,40,244.1820,304.8990,999.1484) && IsPlayerInRangeOfPoint(playerid,40,267.1000,305.0000,999.1484) && IsPlayerInRangeOfPoint(playerid,40,446.7100,506.8980,1001.4195)) return false;
         				ShowPlayerDialogEx(playerid,185,5,"{43CD80}Подтверждение","Продукт\tИнформация\n{42B02C}-{FFFFFF} Картофель-Фри\t60 продуктов\n{42B02C}-{FFFFFF} Сэндвич\t80 продуктов\n{42B02C}-{FFFFFF} Баскет\t100 продуктов\n{42B02C}-{FFFFFF} Крылышки\t120 продуктов\n{42B02C}-{FFFFFF} Салат\t140 продуктов\n{42B02C}-{FFFFFF} Курица\t160 продуктов\n{42B02C}-{FFFFFF} Комплексный Обед\t300 продуктов","Выбор","Отмена");
		            }
		            case 1: callcmd::drink(playerid,"");
					case 2:
					{
					    new s = GetHouseStyle(house);//тип дома
     					if(GetString(HouseInfo[house][hOwner],Name(playerid))) return SendError(playerid,"владелец не может выселится");
     					for(new i;i < HouseRooms[s];i ++)// перебираеться количество комнат
						{
							if(GetString(HRoomOwner[house][i],Name(playerid)))//возвращает комнаты
							{
							    SetString(HRoomOwner[house][i],"The State");
	        					SaveHouse(house);
							    SlotValue[playerid][1] = -1;
						        PlayerInfo[playerid][pDCTime]=0;
		     					SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначена улица. Изменить место спавна >> /setspawn");
						        SendClientMessage(playerid,COLOR_WHITE,"[Информация] {FFFFFF}Вы выселились из дома");
						       	SaveAccount(playerid);
						       	return true;
							}
						}
						SlotValue[playerid][1] = -1;
      					PlayerInfo[playerid][pDCTime]=0;
      					SendError(playerid,"Отправьте на форум скриншот и мы постараемся исправить, но мы вас выселили");
				       	SaveAccount(playerid);
					}
		        }
		    }
		    else callcmd::houseinfo(playerid);
		}
		case 174:
		{
		    if(response)
		    {
		        new house = SlotValue[playerid][1];
		        if(SlotValue[playerid][1] != -1)
				{
					switch(listitem)
					{
					    case 0:
					    {
							if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[house][hEnter][0],HouseInfo[house][hEnter][1],HouseInfo[house][hEnter][2]) ||
							IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[house][hExit][0],HouseInfo[house][hExit][1],HouseInfo[house][hExit][2]))
							{
								if(HouseInfo[house][hLock])
								{
									HouseInfo[house][hLock] = 0;
									SendClientMessage(playerid,COLOR_WHITE,"[Информация] {FFFFFF}Дверь {43CD80}открыта");
									UpdateHouse(house);
									SaveHouse(house);
								}
								else
								{
							       	HouseInfo[house][hLock] = 1;
							       	SendClientMessage(playerid,COLOR_WHITE,"[Информация] {FFFFFF}Дверь {7396FB}закрыта");
							       	UpdateHouse(house);
							       	SaveHouse(house);
	       						}
    						}
			    			else SendError(playerid,"Вы не возле дома");
						}
						case 1:
						{
                            if(!GetString(HouseInfo[house][hOwner],Name(playerid))) ShowPlayerDialogEx(playerid,2431,2,"{43CD80}Подтверждение","Холодильник\nМинибар\nВыселится из дома","Принять","Назад");
                            else ShowPlayerDialogEx(playerid,2431,2,"{43CD80}Подтверждение","Холодильник\nМинибар","Принять","Назад");
						}
		    			case 2:
		    			{
		    			    if(!GetString(HouseInfo[house][hOwner],Name(playerid))) return SendError(playerid,"Вы не владелец этого дома");
		    			    ShowPlayerDialogEx(playerid,176,2,"{43CD80}Улучшение дома","{42B02C}-{FFFFFF} Заказать бар {42B02C}[$5000]{FFFFFF}\n{42B02C}-{FFFFFF} Ремонт {42B02C}[23 интерьера]{FFFFFF}","Выбрать","Отмена");
						}
						case 3:
		    			{
		    			    if(!GetString(HouseInfo[house][hOwner],Name(playerid))) return SendError(playerid,"Вы не владелец этого дома");
	    			    	format(string,sizeof(string),"Счет к оплате: %d\nНедошедшие счета: %d\n\nВнимание если счет к оплате вашего дома выше $50000\nРаботники налоговой могут конфиксовать ваш дом.\nОплатить счета вы можете в центральном банке",HouseInfo[house][hNalog],HouseInfo[house][hNalog2]);
				    		ShowPlayerDialogEx(playerid,0,0,"{43CD80}Домашний счёт",string,"Скрыть", "");
						}
						case 4:
		    			{
 			     			format(string,sizeof(string),"{FFFFFF}Продуктов в доме: {7396FB}%d{FFFFFF}\nПополнив запас продуктов вы сможете покушать или выпить в любое время у себя в доме.\nВзять продукты или выпивку можно у бара и холодильника!.\n\n{317395}Купить продукты для дома можно в любой закусочной штата",HouseInfo[SlotValue[playerid][1]][hNoOwner]);
					    	ShowPlayerDialogEx(playerid,0,0,"{43CD80}Меню",string,"Принять","");
						}
						case 5:
		    			{
		    			    if(!GetString(HouseInfo[house][hOwner],Name(playerid))) return SendError(playerid,"Вы не владелец этого дома");
	    			    	ShowPlayerDialogEx(playerid,198,1,"{43CD80}Аренда","{FFFFFF}\n\nВведите {42B02C}id{FFFFFF} игрока которого хотите подселить к себе в дом.\n\n","Далее","Отмена");
						}
		    			case 6:
		    			{
		    			    if(!GetString(HouseInfo[house][hOwner],Name(playerid))) return SendError(playerid,"Вы не владелец этого дома");
		    			    new s = GetHouseStyle(house);
		    			    new niger[60];
		    			    for(new i;i < HouseRooms[s];i ++)
		    			    {
		    			        if(GetString(HRoomOwner[house][i],"The State")) niger = "{42B02C}Свободная комната{FFFFFF}";
		    			        else format(niger,sizeof(niger),"%s",HRoomOwner[house][i]);
 			        			format(string,sizeof(string),"{FFFFFF}%s- %s\n",string,niger);
		    			    }
		    			    if(strlen(string)>0)ShowPlayerDialogEx(playerid,195,2,"Список арендаторов",string,"Выселить","Назад");
		    			    else SendError(playerid,"В вашем доме нет жильцов");
		    			}
		    			case 7: SendInfo(playerid, "Введите {0099ff}'/med', чтобы использовать аптечку");
			    	}
			    }
		    }
		}
		case 77:
		{
			if(response)
		    {
				if(SlotValue[playerid][1]==-1)return SendError(playerid,"Возможно у вас нет личного жилья");
				new money = strval(inputtextsave);
				if(money < 1 || 3000-HouseInfo[SlotValue[playerid][1]][hNoOwner] < money)
				{
	               	format(string,sizeof(string),"{FFFFFF}Продуктов в вашем доме: {7396FB}%d{FFFFFF}.\nПополнив запас продуктов вы сможете покушать или выпить в любое время у себя в доме.\nВзять продукты или выпивку можно у бара и холодильника!.\n\n{D22C2C}Произошла ошибка, возможно вы пытаетесь купить слишком много продуктов и они не влезут вам в холодильник",HouseInfo[SlotValue[playerid][1]][hNoOwner]);
			    	ShowPlayerDialogEx(playerid,77,1,"{43CD80}Меню",string,"Принять","Отмена");
					return false;
				}
				new price = floatround( money*BizInfo[BizEntered[playerid]][bEnterPrice], floatround_floor );
				if(BizInfo[BizEntered[playerid]][bProducts] <= money)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты");
				if(SlotValue[playerid][0]<price)return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				HouseInfo[SlotValue[playerid][1]][hNoOwner] += money;
				GiveMoney(playerid,-price);
				GiveBizMoney(BizEntered[playerid],price);
				BizInfo[BizEntered[playerid]][bProducts]-=money;
				SendBotMessage(playerid,"Спасибо за покупку, у нас всегда качественная еда для наших посетителей");
		    }
		    else ShowPlayerDialogEx(playerid,2761,2,"{43CD80}Подтверждение","{42B02C}-{FFFFFF} Покушать на месте\n{42B02C}-{FFFFFF} Купить в дом","Принять","Отмена");
		}
		case 176:
		{
		    if(response)
			{
			    new house = SlotValue[playerid][1];
		        if(SlotValue[playerid][1] != -1)
		        {
				    switch(listitem)
				    {
						case 0:
						{
						    if(GetString(HouseInfo[house][hOwner],Name(playerid)))
						    {
						    	if(!HouseInfo[house][hBar])
						    	{
						    	    if(GetMoney(playerid) >= 5000)
						    	    {
						    	        HouseInfo[house][hBar] = 1;
						    	        GiveMoney(playerid,-5000,"BuyBar");
						    	        SendError(playerid,"Вы купили бар для дома [/drink] (-$5000)");
										SaveHouse(house);
									}
						    	    else SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
						    	}
						    	else SendError(playerid,"В вашем доме уже есть бар");
						    }
						}
						case 1:
						{
						    if(GetString(HouseInfo[house][hOwner],PlayerName[playerid]))
						    {
							    if(IsPlayerInRangeOfPoint(playerid,90,HouseInfo[house][hExit][0],HouseInfo[house][hExit][1],HouseInfo[house][hExit][2]))
							    {
							        if(BuyInt[playerid] == -1)
							        {
							            if(PlayerInfo[playerid][pDCTime]!=2) PlayerInfo[playerid][pDCTime]=2;
							            Clother[playerid] = -1;
									    BuyInt[playerid] = 1;
									    //pTemp[playerid][SPECTPLAYER] = true;
									    if(pTemp[playerid][SPECTPLAYER]==false)SpecPl(playerid,true);
									    SendInfo(playerid, "Подождите немного...");
  										SetTimerEx("ChangeInterior", 1000, false, "i", playerid);
									}
									else SendError(playerid,"Вы уже выбираете интерьер");
								}
								else SendError(playerid,"Вы должны находиться в доме");
							}
							else SendError(playerid,"Вы не владелец дома");
						}
			        }
			    }
		    }
		    else callcmd::houseinfo(playerid);
		}
		case 181:
		{
		    if(response)
		    {
		        new house = SlotValue[playerid][1];
		        if(house != -1)
		        {
			        switch(PutState[playerid])
			        {
			            case PUT_STATE_MONEY:
			            {
							new money = strval(inputtextsave);
							if(money > 0 && ClosetValue[house][0] >= money)
							{
							    ClosetValue[house][0] -= money;
							    GiveMoney(playerid,money,"TakeMoney (шкаф)");
							    format(string,sizeof(string),"[Информация] {FFFFFF}Вы достали из шкафа $%d",money);
							    SendClientMessage(playerid,COLOR_VALIK,string);
								new logtime[3],logdate[3],logtimestring[16];
								getdate(logdate[2],logdate[1],logdate[0]);
								gettime(logtime[0],logtime[1],logtime[2]);
								f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
								WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Достал из шкафа",money,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
							}
							else SendError(playerid,"В шкафу нет столько денег");
			            }
			            case PUT_STATE_DRUGS:
			            {
							new drugs = strval(inputtextsave);
							if(drugs > 0 && ClosetValue[house][2] >= drugs)
							{
							    if(SlotValue[playerid][14] + drugs > 500) return SendError(playerid,"Вы не сможете унести с собой более 500г. нарко");
							    ClosetValue[house][2] -= drugs;
							    SlotValue[playerid][14] += drugs;
							    format(string,sizeof(string),"[Информация] {FFFFFF}Вы достали из шкафа %dг наркотиков",drugs);
							    SendClientMessage(playerid,COLOR_VALIK,string);
							}
							else SendError(playerid,"В шкафу нет столько наркотиков");
			            }
			            case PUT_STATE_MATS:
			            {
							new mats = strval(inputtextsave);
							if(mats > 0 && ClosetValue[house][1] >= mats)
							{
							    if(SlotValue[playerid][11] + mats > 2000) return SendError(playerid,"Вы не сможете унести с собой более 2000 материалов");
							    ClosetValue[house][1] -= mats;
							    SlotValue[playerid][11] += mats;
							    format(string,sizeof(string),"[Информация] {FFFFFF}Вы достали из шкафа %d материалов",mats);
							    SendClientMessage(playerid,COLOR_VALIK,string);
							}
							else SendError(playerid,"В шкафу нет столько материалов");
			            }
			        }
		        }
		    }
		    else ShowPlayerDialogEx(playerid,179,2,"{43CD80}Что достать?","Деньги\nНаркотики\nМатериалы","Далее","Отмена");
		}
		case 1666:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
						if(SlotValue[playerid][0]<600)return SendError(playerid,"Извините, но у вас не хватает денег");
			 			GiveMoney(playerid, -600,"Lunch1");
			 			OrgInfo[TEAM_YAKUZA][oBank]+=600;//арія
						SendClientMessage(playerid,COLOR_VALIK,"Вы съели блюдо под названием 'Курица в соусе Терияки'");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,50);
		            }
		            case 1:
		            {
		                if(SlotValue[playerid][0]<500)return SendError(playerid,"Извините, но у вас не хватает денег");
			 			GiveMoney(playerid, -500,"Lunch1");
			 			OrgInfo[TEAM_YAKUZA][oBank]+=500;//арія
						SendClientMessage(playerid,COLOR_VALIK,"Вы съели блюдо под названием 'Мисо-суп'");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,40);
		            }
		            case 2:
		            {
						if(SlotValue[playerid][0]<700)return SendError(playerid,"Извините, но у вас не хватает денег");
			 			GiveMoney(playerid, -700,"Lunch1");
			 			OrgInfo[TEAM_YAKUZA][oBank]+=700;//арія
						SendClientMessage(playerid,COLOR_VALIK,"Вы съели блюдо под названием 'Прозрачная лапша с говядиной'");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,60);
		            }
					case 3:
					{
						if(SlotValue[playerid][0]<800)return SendError(playerid,"Извините, но у вас не хватает денег");
			 			GiveMoney(playerid, -800,"Lunch1");
			 			OrgInfo[TEAM_YAKUZA][oBank]+=800;//арія
						SendClientMessage(playerid,COLOR_VALIK,"Вы съели блюдо под названием 'Удон в сливочном соусе с говядиной'");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,70);
		            }
					case 4:
					{
						if(SlotValue[playerid][0]<600)return SendError(playerid,"Извините, но у вас не хватает денег");
			 			GiveMoney(playerid, -600,"Lunch1");
			 			OrgInfo[TEAM_YAKUZA][oBank]+=600;//арія
						SendClientMessage(playerid,COLOR_VALIK,"Вы съели блюдо под названием 'Кани спайси'");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,50);
		            }
		        }
				if(QuestProgress[playerid][6] < QI[6][LastProgress] && AcceptQuest[playerid][6] == 1)QuestProgress[playerid][6] += 50;
				if(QuestProgress[playerid][6] >= QI[6][LastProgress] && QuestProgress[playerid][6] < 10000){
					PlayerInfo[playerid][pTalents][0]++;
					SendInfo(playerid, "У Вас появились новые очки талантов");
					QuestProgress[playerid][6] = 10000;
				}
			}
		}
		case 185:
	    {
	        if(response)
	        {
	            new biz = BizEntered[playerid];
				new Float:Health;
				GetPlayerHealth(playerid,Health);
          		switch(listitem)
				{
			        case 0:
			        {
						if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hNoOwner] < 2) return SendError(playerid,"В доме недостаточно продуктов, купить их можно в закусочной");
						    HouseInfo[HouseEntered[playerid]][hNoOwner]-=2;
						    notneedm[playerid]=1;
						}
						if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 3)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты");
						   	if(SlotValue[playerid][0] < 220) return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
							notneedm[playerid]=0;
						    BizInfo[biz][bProducts] -= 3;
						    GiveBizMoney(biz,220);
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 220)
						    {
						        SendError(playerid,"Извините, но у вас не хватает денег");
								SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return false;
						    }
							GiveMoney(playerid, -220,"Lunch1");
							if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=60;//арія
        					notneedm[playerid]=0;
						}
						SendClientMessage(playerid,COLOR_VALIK,"Вы взяли картофель-фри");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,10);
			        }
					case 1:
					{
		                if(Fullness[playerid] >= 85) return SendError(playerid,"Вы не голодны");
						else if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hNoOwner] < 3)return SendError(playerid,"В доме недостаточно продуктов, купить их можно в закусочной");
						    HouseInfo[HouseEntered[playerid]][hNoOwner]-=3;
						    notneedm[playerid]=1;
						}
		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 3)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты");
						    if(SlotValue[playerid][0] < 260) return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
						    BizInfo[biz][bProducts] -= 3;
							GiveBizMoney(biz,260);
							notneedm[playerid]=0;
						}
     					if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 260)
							{
							    SendError(playerid,"Извините, но у вас не хватает денег");
								SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return false;
							}
							GiveMoney(playerid, -260,"Lunch1");
							if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=80;//арія
					 		notneedm[playerid]=0;
						}
		                GiveFullness(playerid,15);
		                SendClientMessage(playerid,COLOR_VALIK,"Вы взяли сэндвич");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                //SaveBiz(biz);
					}
					case 2:
					{
                  		if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hNoOwner] < 4)return SendError(playerid,"В доме недостаточно продуктов, купить их можно в закусочной");
						    HouseInfo[HouseEntered[playerid]][hNoOwner]-=4;
          					notneedm[playerid]=1;
						}

		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 4)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты");
						    if(SlotValue[playerid][0] < 300) return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
		               		notneedm[playerid]=0;
						    BizInfo[biz][bProducts] -= 4;
							GiveBizMoney(biz,300);
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 300)
							{
							    SendError(playerid,"Извините, но у вас не хватает денег");
								SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return false;
							}
					 		GiveMoney(playerid, -300,"Lunch1");
					 		if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=100;//арія
					 		notneedm[playerid]=0;
						}
		                GiveFullness(playerid,25);
		                SendClientMessage(playerid,COLOR_VALIK,"Вы взяли баскет");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);

					}
					case 3:
					{
     					if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hNoOwner] < 5)return SendError(playerid,"В доме недостаточно продуктов, купить их можно в закусочной");
						    HouseInfo[HouseEntered[playerid]][hNoOwner]-=5;
                            notneedm[playerid]=1;
						}
		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 5)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты");
						    if(SlotValue[playerid][0]< 340) return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
						    BizInfo[biz][bProducts] -= 5;
							GiveBizMoney(biz,340);
                            notneedm[playerid]=0;
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 340)
							{
							    SendError(playerid,"Извините, но у вас не хватает денег");
								SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return false;
							}
					 		GiveMoney(playerid, -340,"Lunch1");
					 		if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=120;//арія
                            notneedm[playerid]=0;
						}
		                SendClientMessage(playerid,COLOR_VALIK,"Вы взяли крылышки");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,30);
					}
					case 4:
					{
		                if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hNoOwner] < 6)return SendError(playerid,"В доме недостаточно продуктов, купить их можно в закусочной");
						    HouseInfo[HouseEntered[playerid]][hNoOwner]-=6;
						    notneedm[playerid]=1;
						}
		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 7)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты");
						    if(SlotValue[playerid][0] < 380) return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
		               		notneedm[playerid]=0;
						    BizInfo[biz][bProducts] -= 7;
							GiveBizMoney(biz,380);
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 380)
						    {
						        SendError(playerid,"Извините, но у вас не хватает денег");
								SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return false;
						    }
					 		GiveMoney(playerid, -380,"Lunch1");
					 		if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=140;//арія
					 		notneedm[playerid]=0;
						}
		                SendClientMessage(playerid,COLOR_VALIK,"Вы взяли салат");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,35);
					}
					case 5:
					{
						if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hNoOwner] < 7)return SendError(playerid,"В доме недостаточно продуктов, купить их можно в закусочной");
						    HouseInfo[HouseEntered[playerid]][hNoOwner]-=7;
						    notneedm[playerid]=1;
						}
		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 8)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты");
						    if(SlotValue[playerid][0] < 420) return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
		               		notneedm[playerid]=0;
						    BizInfo[biz][bProducts] -= 8;
							GiveBizMoney(biz,420);
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 420)
						    {
						        SendError(playerid,"Извините, но у вас не хватает денег");
								SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return false;
						    }
					 		GiveMoney(playerid, -420,"Lunch1");
					 		if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=160;//арія
					 		notneedm[playerid]=0;
						}
		                SendClientMessage(playerid,COLOR_VALIK,"Вы взяли курицу");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,45);
					}
					case 6:
					{
						if(HouseEntered[playerid] !=-1)
						{
						    if(HouseInfo[HouseEntered[playerid]][hNoOwner] < 15)return SendError(playerid,"В доме недостаточно продуктов, купить их можно в закусочной");
						    HouseInfo[HouseEntered[playerid]][hNoOwner]-=15;
						    notneedm[playerid]=1;
						}
		                if(biz != -1)
						{
						    if(BizInfo[biz][bProducts] <= 15)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты");
						    if(SlotValue[playerid][0] < 700) return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
		               		notneedm[playerid]=0;
						    BizInfo[biz][bProducts] -= 15;
							GiveBizMoney(biz,700);
						}
						if(notneedm[playerid]!=1)
						{
						    if(GetMoney(playerid) < 700)
						    {
						        SendError(playerid,"Извините, но у вас не хватает денег");
								SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
								return false;
						    }
						    if(GetPlayerVirtualWorld(playerid)==1)OrgInfo[TEAM_LCN][oBank]+=300;//арія
					 		GiveMoney(playerid, -700,"Lunch1");
					 		notneedm[playerid]=0;
						}
		                SendClientMessage(playerid,COLOR_VALIK,"Вы взяли комплексный обед");
						ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
		                GiveFullness(playerid,70);
					}
				}
			}
	    }
		case 186:
	    {
	        if(response)
	        {
	            if(!PlayerInfo[playerid][pHeal])
	            {
	                PlayerInfo[playerid][pHeal] = GetPlayerVirtualWorld(playerid);
	                PlayerInfo[playerid][pHealTime] = 0;
	                SendBotMessage(playerid,"Наши доктора - самые лучшие! А сейчас, возвращайтесь\nв палату *улыбается*");
	            }
	        }
		}
		case 193:
		{
		    if(response)
		    {
				new money = strval(inputtextsave);
				if(money < 800 || money > 10000) return ShowPlayerDialogEx(playerid,193,1,"{43CD80}Введите сумму","Введите сумму залога\n\n{43CD80}- Не менее $800 и не более $10000","Далее","Отмена");
		        if(GetPlayerState(playerid) == 2)
			  	{
			  	    new carid = GetPlayerVehicleID(playerid);
			    	if(VehicleInfo[carid][vTeam] == TEAM_LSPD || VehicleInfo[carid][vTeam] == TEAM_PDLV || VehicleInfo[carid][vTeam] == TEAM_RCPD || VehicleInfo[carid][vTeam] == TEAM_SFPD)
			    	{
				    	if(GetVehicleModelEx(carid) == 525)
						{
						    if(IsTrailerAttachedToVehicle(carid))
						    {
								new vehid = GetVehicleTrailer(carid);
							    for(new i;i < sizeof(CarPounds);i ++)
							    {
									new Float:x,Float:y,Float:z;
									GetVehiclePos(vehid,x,y,z);
									if(!IsAOwnableCar(vehid)) return SendError(playerid,"Вы не можете поставить данное транспортное средство на штраф стоянку");
									if(IsPlayerToKvadrat(playerid,CarPounds[i][0],CarPounds[i][1],CarPounds[i][2],CarPounds[i][3]))
									{
										if(IsPlayerInRangeOfPoint(playerid,15.0,1570.2062,-1151.0127,23.9412) || IsPlayerInRangeOfPoint(playerid,10.0,1815.2671,-1145.4780,23.8606) || IsPlayerInRangeOfPoint(playerid,10.0,1732.3651,-1145.3220,23.8720)) return SendError(playerid,"В этом месте нельзя оставить машину");
										DetachTrailerFromVehicle(carid);
										new number = GetVehicleID(vehid);
										if(CarInfo[number][cShtraf]>0)return SendError(playerid,"Вы не можете поставить данное транспортное средство на штраф стоянку,  так как оно уже там стоит");
										ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","Вы поставили транспорт на штрафстоянку и получили 800$ в виде поощрения","Скрыть", "");
										GiveMoney(playerid,800);
										new Float:Health,panels,doors_,lights_,tires;
										GetVehicleDamageStatus(vehid,panels,doors_,lights_,tires);
										GetVehicleHealth(vehid,Health);
										CarInfo[number][cShtraf] = strval(inputtextsave);
										CarInfo[number][cKeyIN] = 0;
										GetVehiclePos(vehid,CarInfo[number][cPos][0],CarInfo[number][cPos][1],CarInfo[number][cPos][2]);
										GetVehicleZAngle(vehid,CarInfo[number][cPos][3]);
										SaveOwnableCar(number);
										return true;
									}
						        }
							}
						}
					}
				}
		    }
		}
		case 200:
		{
		    if(response)
		    {
		        SellCar(aSellCarID[playerid]);
		        format(string,sizeof(string),"[Информация] {FFFFFF}Вы продали авто №%d",aSellCarID[playerid]);
				SendClientMessage(playerid,COLOR_VALIK,string);
		    }
		}
		case 206:
		{
		    if(response)
		    {
				new number = listitem + 1;
				new id = GetPlayerID(OrgInfo[number][oLeader]);
				if(id != INVALID_PLAYER_ID)PlayerUnleader(id,OrgInfo[number][oLeader]);
				else PlayerUnleader(INVALID_PLAYER_ID,OrgInfo[number][oLeader]);
				format(string,sizeof(string),"Вы сняли %s с поста лидера",OrgInfo[number][oLeader]);
   				SendClientMessage(playerid,COLOR_WHITE,string);
   				format(string,sizeof(string),"[A] Администратор %s выгнал %s с поста лидера",Name(playerid),OrgInfo[number][oLeader]);
				SendAdminsMessage(COLOR_LIGHTRED,string);
   				SetString(OrgInfo[number][oLeader],"Свободна");
  				SaveOrg(number);
		    }
		    return true;
		}
		case 207:
		{
		    if(response) StopAudioStreamForPlayer(playerid);
		    callcmd::phone(playerid);
		}
		case 210:
			{
				if(!response)return 0;
				if(!CheckPassword(inputtextsave) || !strlen(inputtext))return ShowPlayerDialogEx(playerid,210,1,"{43CD80}Первый вход в систему","{FFFFFF}Придумайте пароль для авторизации в системе администрирования\n\n{D94141}Данный пароль будет у вас запрашиваться при каждом входе","Готово","Отмена");
				new mquery[125],Cache:resultcache;
				mysql_format(mysql, mquery, sizeof(mquery), "select * from `acc_adm` where login = '%s' limit 1", Name(playerid));
				resultcache = mysql_query(mysql, mquery,true);
				if(cache_num_rows())
				{
					PlayerInfo[playerid][pAdmin] = cache_get_field_content_int(0, "level", mysql);
					SendInfo(playerid, "Ваш уровень администрирования был изменён");
					format(PlayerInfo[playerid][pApass],32,"%s",inputtext);
					format(mquery,sizeof mquery,"Новый пароль от панели администрирования: {7396FB}%s",PlayerInfo[playerid][pApass]);
					SendInfo(playerid,mquery);
					SendInfo(playerid,"Этот пароль будет запрашиваться у вас при каждом входе");
					format(mquery, sizeof(mquery), "UPDATE `accounts` SET `Admin` = '%i' WHERE `ID` = '%d'",PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pID]);
					mysql_query(mysql, mquery,true);
					mysql_format(mysql, mquery, sizeof(mquery), "delete from `acc_adm` where `login` = '%e'", Name(playerid));
					mysql_pquery(mysql, mquery);
					ADuty[playerid] = 228;
					format(string,sizeof(string),"[A] %s[%d] вошел в систему администрирования",Name(playerid),playerid);
					SendAdminsMessage(COLOR_GOLD, string, 1);
					if(!ConfirmIP(playerid))
					{
						format(string,sizeof(string),"[A] IP-Адрес не совпадает с тремя последними [GET IP:%s]",PlayerIp[playerid]);
						SendAdminsMessage(COLOR_RED, string, 1);
						format(string,sizeof(string),"[A] IP-Адреса последних авторизаций [LAST IP:%s]",PlayerInfo[playerid][pLastIP]);
						SendAdminsMessage(COLOR_RED, string, 1);
						format(string,sizeof(string),"[A] [Check IP 1:%s]",PlayerCheckIP1[playerid]);
						SendAdminsMessage(COLOR_RED, string, 1);
						format(string,sizeof(string),"[A] [Check IP 2:%s]",PlayerCheckIP2[playerid]);
						SendAdminsMessage(COLOR_RED, string, 1);
					}
					PlayerInfo[playerid][pHelper] = 0;
					TextDrawShowForPlayer(playerid, CheaterList);
					if(PlayerInfo[playerid][pAdmin] >= 2)
					{
						for(new i = 52; i != -1; --i)
							EnableAntiCheatForPlayer(playerid, i, 0);
					}
				}
				cache_delete(resultcache, mysql);
			}
		case 1922:
		{
			if(!response)return DeletePVar(playerid,"ChangePass");
			if(!CheckPassword(inputtextsave))
			{
				SendError(playerid,"Неверный формат пароля");
				switch(GetPVarInt(playerid,"ChangePass"))
				{
				case 0:return ShowPlayerDialogEx(playerid,1922,1,"{43CD80}Изменение пароля","{FFFFFF}Введите текущий пароль от аккаунта","Далее","Отмена");
				case 1:return ShowPlayerDialogEx(playerid,1922,1,"{43CD80}Изменение пароля","{FFFFFF}Придумайте пароль для авторизации аккаунта\n\n{D94141}Данный пароль будет у вас запрашиваться при каждом входе","Далее","Отмена");
				case 2:return ShowPlayerDialogEx(playerid,1922,1,"{43CD80}Изменение пароля","{FFFFFF}Повторите пароль ещё раз","Готово","Отмена");
				}
			}
			new query[256];
			switch(GetPVarInt(playerid,"ChangePass"))
			{
			case 0:
				{
					format(query, sizeof(query), "SELECT `Password` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1", PlayerName[playerid]);
					new Cache:result = mysql_query(mysql, query);
					new TempHash[65];
					cache_get_field_content(0, "Password", TempHash, mysql);
					cache_delete(result, mysql);
					new CheckHash[65];
					SHA256_PassHash(inputtextsave, SALT, CheckHash, sizeof CheckHash);
					if(strcmp(CheckHash, TempHash, false))
					{
						ShowPlayerDialogEx(playerid,1922,1,"{43CD80}Изменение пароля","{FFFFFF}Введите текущий пароль от аккаунта","Далее","Отмена");
						return SendError(playerid,"Текущий пароль с введённым вами не совпадает");
					}
					ShowPlayerDialogEx(playerid,1922,1,"{43CD80}Изменение пароля","{FFFFFF}Придумайте пароль для авторизации аккаунта\n\n{D94141}Данный пароль будет у вас запрашиваться при каждом входе","Далее","Отмена");
					SetPVarInt(playerid, "ChangePass", 1);
					return 1;
				}
			case 1:
				{
					ShowPlayerDialogEx(playerid,1922,1,"{43CD80}Изменение пароля","{FFFFFF}Повторите пароль ещё раз","Готово","Отмена");
					SetPVarInt(playerid, "ChangePass", 2);
					SetPVarString(playerid,"TempPass", inputtextsave);
					return 1;
				}
			case 2:
				{
					DeletePVar(playerid,"ChangePass");
					new pass[33];
					GetPVarString(playerid,"TempPass",pass,sizeof pass);
					DeletePVar(playerid,"TempPass");
					if(strcmp(inputtext, pass, false))return SendError(playerid,"Введённые пароли не совпадают");
					new MyHash[65];
					SHA256_PassHash(pass, SALT, MyHash, sizeof MyHash);
					format(query, sizeof(query), "UPDATE `accounts` SET `Password` = '%s' WHERE `NickName` = '%s'", MyHash, PlayerName[playerid]);
					mysql_pquery(mysql, query);
					SendInfo(playerid,"Пароль успешно изменён");
					PlayerInfo[playerid][pHavePassword] = 1;
				}
			}
		}
		case 211:
		{
		    if(response)
		    {
				new pip[24];
		        GetPlayerIp(playerid,pip,24);
		        if(strcmp(inputtext, PlayerInfo[playerid][pApass], true) || !strlen(inputtext))
				{
					format(string,sizeof(string),"[A] Неудачная попытка авторизации %s [IP:%s]",Name(playerid),pip);
					SendAdminsMessage(COLOR_RED, string, 1);
					return ShowPlayerDialogEx(playerid,211,1,"{43CD80}Авторизация","{FFFFFF}Введите ваш пароль от админ-панели","Готово","Отмена");
				}
				ADuty[playerid] = 228;
			    format(string,sizeof(string),"[A] %s вошел в систему администрирования [IP: %s]",Name(playerid),pip);
			    if(PlayerInfo[playerid][pAdmin] < 7)SendAdminsMessage(COLOR_GOLD, string, 1);
				f(string, "Вы авторизовались как администратор %d уровня", PlayerInfo[playerid][pAdmin]);
				SendClientMessage(playerid, COLOR_GOLD, string);
			    TextDrawShowForPlayer(playerid, CheaterList);
				if(PlayerInfo[playerid][pAdmin] >= 2)
				{
					for(new i = 52; i != -1; --i)
						EnableAntiCheatForPlayer(playerid, i, 0);
				}
		    }
		}
		case 212: if(response) callcmd::go_fished(playerid);
		case 222:
	    {
			if(response) UslugDonate(playerid);
		}
  		case 223:
	    {
			if(response)
	  		{
	  		    switch(listitem)
	  		    {
	  		        case 0:
					{
						f(string, "{FFFFFF}Курс обмена: {C9EAFF}1 DP = $%d", DONATE_VALUE);
						ShowPlayerDialogEx(playerid,DONAT_ID_MONEY,1,"{43CD80}Подтверждение",string,"Обмен","Отмена");
					}
	  		        case 1:
	  		        {
			  		    if(PlayerInfo[playerid][pVIP] < 1)
			  		    {
			  		        if(PlayerInfo[playerid][pVirMoney] >= 150)
			  		        {
			  		            DonateBuy[playerid] = D_BUY_VIP;
			  		            ShowPlayerDialogEx(playerid,224,0,"{43CD80}Покупка","{FFFFFF}Вы хотите купить VIP статус 1 уровня\nСтоимость: 150 DP","Купить","Отмена");
			  		        }
			  		        else
			  				{
							  	SendError(playerid,"У вас не хватает DP на счету");
							  	UslugDonate(playerid);
							}
			  		    }
			  		    else SendError(playerid,"У вас уже есть этот уровень VIP");
					}
					case 2:
	  		        {
	  		            new money;
			  		    if(PlayerInfo[playerid][pVIP] < 2)
			  		    {
			  		        if(PlayerInfo[playerid][pVIP]!=1)return SendError(playerid,"Для того чтобы приобрести этот уровень VIP необходимо сначало купить VIP статус 1-го уровня");
               				money = 200;
			  		        if(PlayerInfo[playerid][pVirMoney] >= money)
			  		        {
			  		            DonateBuy[playerid] = D_BUY_GOLD;
			  		            format(string,sizeof(string),"{FFFFFF}Вы хотите купить VIP статус 2 уровня\nСтоимость: %d DP",money);
			  		            ShowPlayerDialogEx(playerid,224,0,"{43CD80}Покупка",string,"Купить","Отмена");
			  		        }
			  		        else
			  				{
							  	SendError(playerid,"У вас не хватает DP на счету");
							  	UslugDonate(playerid);
							}
			  		    }
			  		    else SendError(playerid,"У вас уже есть этот уровень VIP");
					}
					case 3:
	  		        {
			  		    if(PlayerInfo[playerid][pVIP] < 3)
			  		    {
			  		        if(PlayerInfo[playerid][pVIP]!=2)return SendError(playerid,"Для того чтобы приобрести этот уровень VIP необходимо сначало купить VIP статус 2-го уровня");
			  		        if(PlayerInfo[playerid][pVirMoney] >= 250)
			  		        {
			  		            DonateBuy[playerid] = D_BUY_PLATIN;
			  		            format(string,sizeof(string),"{FFFFFF}Вы хотите купить VIP статус 3 уровня\nСтоимость: 550 DP");
			  		            ShowPlayerDialogEx(playerid,224,0,"{43CD80}Покупка",string,"Купить","Отмена");
			  		        }
			  		        else
			  				{
							  	SendError(playerid,"У вас не хватает DP на счету");
							  	UslugDonate(playerid);
							}
			  		    }
			  		    else SendError(playerid,"У вас уже есть этот уровень VIP");
					}
					case 4:
					{
						if(PlayerInfo[playerid][pVirMoney]<300)return SendError(playerid,"У вас не хватает DP на счету");
						if(PlayerInfo[playerid][pVIP]==4)return SendError(playerid,"У вас уже есть этот уровень VIP");
						PlayerInfo[playerid][pVirMoney]-=300;
						PlayerInfo[playerid][pVIP]=4;
						PlayerInfo[playerid][pVipTime] = gettime()+(30*24*60*60);
						ShowPlayerDialogEx(playerid,0,0,"","{5FDA27}Поздравляем с покупкой статуса GG!\n\n{FFFFFF}Посмотреть свои возможности вы можете в /help","Скрыть","");
						UslugDonate(playerid);
					}
					case 5:
		            {
						if(PlayerInfo[playerid][pVirMoney]<500)return SendError(playerid,"У вас не хватает DP на счету");
		                if(PlayerInfo[playerid][pVIP]==5)return SendError(playerid,"У вас уже есть этот уровень VIP");
		                PlayerInfo[playerid][pVirMoney]-=500;
						PlayerInfo[playerid][pVIP]=5;
						PlayerInfo[playerid][pVipTime] = gettime()+(370*24*60*60);
						format(string,sizeof(string),"[Информация]{FFFFFF} Игрок %s приобрел статус GG+",PlayerName[playerid]);
						SendClientMessageToAll(COLOR_LIGHTBLUE,string);
						ShowPlayerDialogEx(playerid,0,0,"","{5FDA27}Поздравляем с покупкой статуса GG+!\n\n{FFFFFF}Посмотреть свои возможности вы можете в /help","Принять","");
						UslugDonate(playerid);
		            }
					case 6:
	  		        {
	  		            if(PlayerInfo[playerid][pWarns] > 0)
	  		            {
				  		    if(PlayerInfo[playerid][pVirMoney] >= 200)
				  		    {
				  		        DonateBuy[playerid] = D_BUY_WARN;
				  		        ShowPlayerDialogEx(playerid,224,0,"{43CD80}Покупка","{FFFFFF}Вы хотите снять 1 варн\nСтоимость: 200 DP","Снять","Отмена");
				  		    }
				  		    else
				  			{
							  	SendError(playerid,"У вас не хватает DP на счету");
							  	UslugDonate(playerid);
							}
			  		    }
			  		    else SendError(playerid,"У вас нет предупреждений");
					}
					case 7:
	  		        {
	  		            if(PlayerInfo[playerid][pLeader]>0)return SendError(playerid,"Лидер не может сменить ник");
	  		            if(PlayerInfo[playerid][pAdmin]>0)return SendError(playerid,"Админ не может сменить ник");
	  		            if(SlotValue[playerid][1]!=-1) return SendError(playerid,"Вы не можете сменить ник пока у вас есть дом или вы в нем подселены");
	  		            if(SlotValue[playerid][3]!=-1) return SendError(playerid,"Вы не можете сменить ник пока у вас есть бизнес");
	  		            if(SlotValue[playerid][2]!=-1)return SendError(playerid,"Вы не можете сменить ник пока вы проживаете в квартире");
	  		            GetNumberCars(playerid,PlayerInfo[playerid][pCars]);
						if(PlayerInfo[playerid][pCars]>0)return SendError(playerid,"Вы не можете сменить ник пока у вас есть автомобиль");

			  		    if(PlayerInfo[playerid][pVirMoney] >= 20)
			  		    {
			  		        DonateBuy[playerid] = D_BUY_NAME;
			  		        ShowPlayerDialogEx(playerid,224,1,"{43CD80}Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 DP\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"","Сменить","Отмена");
			  		    }
			  		    else
			  			{
						  	SendError(playerid,"У вас не хватает DP на счету");
						  	UslugDonate(playerid);
						}
					}
					case 8:
	  		        {
			  		    if(PlayerInfo[playerid][pVirMoney] >= 3)
			  		    {
			  		        DonateBuy[playerid] = D_BUY_ZKP;
			  		        ShowPlayerDialogEx(playerid,224,1,"{43CD80}Покупка","{FFFFFF}Стоимость: 3 DP за 1 законопослушность\nВведите кол-во очков законопослушности","Купить","Отмена");
			  		    }
			  		    else
			  			{
						  	SendError(playerid,"У вас не хватает DP на счету");
						  	UslugDonate(playerid);
						}
					}
					case 9:
	  		        {
			  		    if(PlayerInfo[playerid][pVirMoney] >= 150)
			  		    {
							if(PlayerInfo[playerid][pSex]==1) ShowPlayerDialogEx(playerid,1612,0,"{43CD80}Подтверждение","Стоимость смены пола составляет 150 DP.\n{8CB736}Вы действительно хотите сменить свой пол на женский?","Принять","Отменить");
			  		        if(PlayerInfo[playerid][pSex]==2) ShowPlayerDialogEx(playerid,1612,0,"{43CD80}Подтверждение","Стоимость смены пола составляет 150 DP.\n{8CB736}Вы действительно хотите сменить свой пол на мужской?","Принять","Отменить");
			  		    }
			  		    else
			  			{
						  	SendError(playerid,"У вас не хватает DP на счету");
						  	UslugDonate(playerid);
						}
					}
					case 10:
					{
						if(PlayerInfo[playerid][pVirMoney] >= 50)
						{
							if(PlayerInfo[playerid][pRace]==0) ShowPlayerDialogEx(playerid,1613,0,"","Стоимость смены расы составляет 50 Рублей.\n{8CB736}Вы действительно хотите сменить свою расу на черного?","Принять","Отменить");
							if(PlayerInfo[playerid][pRace]==1) ShowPlayerDialogEx(playerid,1613,0,"","Стоимость смены расы составляет 50 Рублей.\n{8CB736}Вы действительно хотите сменить свою расу на белого?","Принять","Отменить");
						}
						else
						{
							SendError(playerid,"У вас недостаточно DP");
							UslugDonate(playerid);
						}
					}
					case 11:
					{
						if(PlayerDrunkLevel[playerid]!=0)return SendError(playerid,"У вас уже есть рецепт");
						if(PlayerInfo[playerid][pVirMoney] >= 2)
						{
							PlayerDrunkLevel[playerid]=1;
							PlayerInfo[playerid][pVirMoney]-=2;
							SendInfo(playerid,"Вы купили рецепт от врача");
						}
						else
						{
							SendError(playerid,"У вас недостаточно DP");
							UslugDonate(playerid);
						}
					}
					case 12:
					{
						if(PlayerInfo[playerid][pVirMoney] >= 500)
						{
							new slot = GetFreeSlot(playerid);
							if(slot == -1)return SendError(playerid, "У Вас нет свободного места в инвентаре, чтобы поместить этот предмет");
							PlayerInfo[playerid][pVirMoney] -= 500;
							SlotValue[playerid][slot] = 19878;
							SendClientMessage(playerid,COLOR_GREEN,"[Информация]{FFFFFF} Вы купили скейтборд");
							SendInfo(playerid,"Испольуйте {7396FB}ПКМ{ffffff}, чтобы кататься на нём");
						}
						else
						{
							SendError(playerid,"У вас недостаточно DP");
							UslugDonate(playerid);
						}
					}
					case 13:
					{
						if(PlayerInfo[playerid][pVirMoney] >= 1000)
						{
							new slot = GetFreeSlot(playerid);
							if(slot == -1)return SendError(playerid, "У Вас нет свободного места в инвентаре, чтобы поместить этот предмет");
							new guitar;
							switch(random(3))
							{
							case 0:guitar = 19319;
							case 1:guitar = 19318;
							case 2:guitar = 19317;
							}
							SlotValue[playerid][slot] = guitar;
							PlayerInfo[playerid][pVirMoney] -= 1000;
							SendClientMessage(playerid,COLOR_GREEN,"[Информация]{FFFFFF} Вы купили случайную гитару");
							UslugDonate(playerid);
						}
						else
						{
							SendError(playerid,"У вас недостаточно DP");
							UslugDonate(playerid);
						}
					}
					case 14:
					{
						if(PlayerInfo[playerid][pVirMoney] >= 600)
						{
							new slot = GetFreeSlot(playerid);
							if(slot == -1)return SendError(playerid, "У Вас нет свободного места в инвентаре, чтобы поместить этот предмет");
							new guitar = random(7)+1;
							SlotValue[playerid][slot] = guitar;
							PlayerInfo[playerid][pVirMoney] -= 600;
							SendClientMessage(playerid,COLOR_GREEN,"[Информация]{FFFFFF} Вы купили случайный кейс для денег");
							UslugDonate(playerid);
						}
						else
						{
							SendError(playerid,"У вас недостаточно DP");
							UslugDonate(playerid);
						}
					}
					case 15:
					{
						if(PlayerInfo[playerid][pVirMoney] >= 1000)
						{
							new slot = GetFreeSlot(playerid);
							if(slot == -1)return SendError(playerid, "У Вас нет свободного места в инвентаре, чтобы поместить этот предмет");
							new guitar = random(3);
							new skin = random(2)+1;
							new name[2][32];
							PlayerInfo[playerid][pGun][guitar] = skin;
							SlotValue[playerid][slot] = (100000000000+(guitar*10)+skin);
							PlayerInfo[playerid][pVirMoney] -= 1000;
							switch(guitar)
							{
							case 0:name[0] = "Desert Eagle";
							case 1:name[0] = "AK-47";
							case 2:name[0] = "Shotgun";
							}
							switch(skin)
							{
							case 1:name[1] = "{D94141}красный";
							case 2:name[1] = "{858585}чёрный";
							}
							SendClientMessage(playerid,COLOR_GREEN,"[Информация]{FFFFFF} Вы купили случайный скин для оружия");
							f(string, "Вам выпал %s %s", name[1], name[0]);
							SendInfo(playerid, string);
							UslugDonate(playerid);
						}
						else
						{
							SendError(playerid,"У вас недостаточно DP");
							UslugDonate(playerid);
						}
					}
				}
	  		}
	  		else ShowDonate(playerid);
		}
		case DONAT_ID_MONEY:
	    {
			if(response)
	  		{
	  		    if(!strlen(inputtextsave)) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{ffffff}Ошибка конвертации валюты","Скрыть","");
		        new money = strval(inputtextsave);
		        if(money >= 1 && PlayerInfo[playerid][pVirMoney] >= money)
		        {
		            if(money<3000)
					{
						GiveMoney(playerid, money*DONATE_VALUE, "Покупка (Донат)");
						format(string,sizeof(string),"{FFFFFF}Вы обменяли {BE2D2D}%d{FFFFFF} DP на {BE2D2D}$%d{FFFFFF}",money,money*DONATE_VALUE);
						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
					}
		            else
		            {
		                GiveMoney(playerid, money*DONATE_VALUE, "Покупка (Донат)");
		                format(string,sizeof(string),"{FFFFFF}Вы обменяли {BE2D2D}%d{FFFFFF} DP на {BE2D2D}$%d{FFFFFF}\n\n{FFFFFF}За обмен, который составляет выше {BE2D2D}3000{FFFFFF} DP вы\nполучаете дополнительный бонус {BE2D2D}250{FFFFFF} DP",money,money*DONATE_VALUE);
						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
		                PlayerInfo[playerid][pVirMoney]+=250;
		            }
		            PlayerInfo[playerid][pVirMoney]-=money;
					SaveAccount(playerid);
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Покупка валюты (Донат)",money,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		        }
		        else ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{BE2D2D}Произошла ошибка. Возможно одна из них:{FFFFFF}\n- Введено некорректное число\n- У вас недостаточно DP\n","Скрыть", "");
			}
		}
  case 224:
	    {
			if(response)
	  		{
	  		    switch(DonateBuy[playerid])
	  		    {
	  		        case D_BUY_VIP:
	  		        {
	  		            if(PlayerInfo[playerid][pVIP] < 1)
			  		    {
			  		        if(PlayerInfo[playerid][pVirMoney] >= 150)
			  		        {
			  		            PlayerInfo[playerid][pVIP] = 1;
					  		    PlayerInfo[playerid][pVirMoney] -= 150;
								PlayerInfo[playerid][pVipTime] = gettime()+(30*24*60*60);
					  		    SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы купили VIP статус 1 уровня");
			  		    	}
			  		        else SendError(playerid,"У вас не хватает денег на счету");
			  		    }
			  		    else SendError(playerid,"У вас уже есть VIP статус 1 уровня");
	  		        }
	  		        case D_BUY_GOLD:
	  		        {
	  		            new money;
	  		            if(PlayerInfo[playerid][pVIP] < 2)
			  		    {
			  		        money = 200;
			  		        if(PlayerInfo[playerid][pVirMoney] >= money)
			  		        {
			  		            PlayerInfo[playerid][pVIP] = 2;
					  		    PlayerInfo[playerid][pVirMoney] -= money;
								PlayerInfo[playerid][pVipTime] = gettime()+(30*24*60*60);
					  		    SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы купили VIP статус 2 уровня");
			  		    	}
			  		        else SendError(playerid,"У вас не хватает денег на счету");
			  		    }
			  		    else SendError(playerid,"У вас уже есть VIP статус 2 уровня");
	  		        }
	  		        case D_BUY_PLATIN:
	  		        {
	  		            if(PlayerInfo[playerid][pVIP] < 3)
			  		    {
			  		        if(PlayerInfo[playerid][pVirMoney] >= 250)
			  		        {
			  		            PlayerInfo[playerid][pVIP] = 3;
					  		    PlayerInfo[playerid][pVirMoney] -= 250;
								PlayerInfo[playerid][pVipTime] = gettime()+(30*24*60*60);
					  		    SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы купили VIP статус 3 уровня");
			  		    	}
			  		        else SendError(playerid,"У вас не хватает денег на счету");
			  		    }
			  		    else SendError(playerid,"У вас уже есть VIP статус 3 уровня");
	  		        }
	  		        case D_BUY_MONEY:
	  		        {
	  		            if(PlayerInfo[playerid][pVirMoney] >= 150)
	  		        	{
	  		        	    PlayerInfo[playerid][pVirMoney] -= 150;
	  		        	    GiveMoney(playerid, 25000,"Donate");
	  		        	    SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы купили $25000");
		  		        }
		  		        else SendError(playerid,"У вас не хватает денег на счету");
	  		        }
	  		        case D_BUY_WARN:
	  		        {
	  		            if(PlayerInfo[playerid][pWarns] > 0)
	  		            {
				  		    if(PlayerInfo[playerid][pVirMoney] >= 200)
				  		    {
				  		        if(PlayerInfo[playerid][pAdmin]>0) SendError(playerid,"Вы не можете снять варны, тк. у вас есть выговор");
				  		        PlayerInfo[playerid][pVirMoney] -= 200;
				  		        PlayerInfo[playerid][pWarns] --;
				  		        SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы сняли 1 предупреждение");
  		        			}
				  		    else SendError(playerid,"У вас не хватает денег на счету");
			  		    }
			  		    else SendError(playerid,"У вас нет предупреждений");
					}
					case D_BUY_SKILL:
	  		        {
	  		            if(PlayerInfo[playerid][pVirMoney] >= 600)
				  	  	{
				  			PlayerInfo[playerid][pVirMoney] -= 600;
  		    				PlayerInfo[playerid][pPistol_Skill] = 100;
							PlayerInfo[playerid][pSDPistol_Skill] = 100;
							PlayerInfo[playerid][pEagle_Skill] = 100;
							PlayerInfo[playerid][pShotGun_Skill] = 100;
							PlayerInfo[playerid][pUZI_Skill] = 100;
							PlayerInfo[playerid][pMP5_Skill] = 100;
							PlayerInfo[playerid][pAK47_Skill] = 100;
							PlayerInfo[playerid][pM4_Skill] = 100;
							PlayerInfo[playerid][pSniper_Skill] = 100;
	        				SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы прокачали все скиллы до 100%");
  		        		}
				  		else SendError(playerid,"У вас не хватает денег на счету");
					}
					case D_BUY_NAME:
					{
					    if(PlayerInfo[playerid][pVirMoney] >= 20)
					    {
					        if(strfind(inputtextsave, " ")!=-1) return SendError(playerid,"В вашем нике замечен пробел");
					        if(PlayerInfo[playerid][pLeader]>0)return SendError(playerid,"Лидер не может сменить ник");
					        if(!IsARPName(inputtextsave) && RP_Names) return ShowPlayerDialogEx(playerid,224,1,"{43CD80}Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 рублей\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник недоступен","Сменить","Отмена");
					        if(!IsAGameNick(inputtextsave)) return ShowPlayerDialogEx(playerid,224,1,"{43CD80}Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 рублей\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник недоступен","Сменить","Отмена");
					        if(strlen(inputtextsave) > 20 ) return ShowPlayerDialogEx(playerid,224,1,"{43CD80}Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 рублей\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник слишком длинный","Сменить","Отмена");
					        new name[20]; mysql_real_escape_string(inputtextsave, name);
					        new query[256];
						    mysql_format(mysql, query, sizeof(query), "SELECT `ID` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1", name);
						    mysql_pquery(mysql, query, "MysqlCheckNameBuyName", "ds", playerid, name);
       						return 1;
						}
					}
					case D_BUY_UNBL:
					{
					    if(PlayerInfo[playerid][pVirMoney] >= 75)
					    {
							PlayerInfo[playerid][pVirMoney] -= 75;
							PlayerInfo[playerid][pBL] = 0;
							SendClientMessage(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы вышли из черного списка");
						}
					}
					case D_BUY_ZKP:
	  		        {
			  		    new zkp = strval(inputtextsave);
					    if(zkp > 0)
					    {
						    if(PlayerInfo[playerid][pVirMoney] >= (zkp*3))
						    {
						        if((PlayerInfo[playerid][pZKP]+zkp)<=100)PlayerInfo[playerid][pZKP] += zkp;
						        else
						        {
						            SendError(playerid,"Законопослушность не может быть выше 100 очков");
						            return false;
						        }
								PlayerInfo[playerid][pVirMoney] -= (zkp*3);
								SendClientMessage(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы купили законопослушность");
							}
						}
					}
					case D_BUY_NARKO:
					{
					    if(PlayerInfo[playerid][pVirMoney] >= 250)
					    {
							PlayerInfo[playerid][pVirMoney] -= 250;
							PlayerInfo[playerid][pAllRepl] = 0;
							SendClientMessage(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы избавились от наркозависимости /stats");
						}
					}
				}
			}
			else
			{
			    new donate[1500];
	  		    for(new i;i < sizeof(DonateText);i ++)
				{
			 		strcat(donate,DonateText[i]);
			 		strcat(donate,"\n");
				}
	  		    ShowPlayerDialogEx(playerid,223,2,"{43CD80}Донат",donate,"Выбор","Назад");
			}
		}
		case 188:
		{
		    if(response)
		    {
		        if(SlotValue[playerid][0] < 5000) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        SendClientMessage(playerid,COLOR_BLUENEW,"Вы купили обручальные кольца (После перезахода в игру они исчезают!)");
		        Ring[playerid] = 1;
		        GiveMoney(playerid, -5000,"кольца");
			}
		}
		case 227:
		{
		    if(response)
		    {
				new money = strval(inputtextsave);
				if(money >= 5000 && money <= 5000000)
				{
					if(OrgInfo[TEAM_BANK][oBank]< money) return SendError(playerid,"В банке недостаточно денег для того, чтобы выдать кредит");
					CreditMoney[playerid] = money;
					format(string,sizeof(string),"{FFFFFF}Вы действительно хотите выдать кредит игроку в размере $%d?\n\n{B83434}На данный момент баланс банка составляет $%d\nПри выдаче кредита деньги спишутся с баланса банка",money,OrgInfo[TEAM_BANK][oBank]);
					ShowPlayerDialogEx(playerid, 228, 0, "{43CD80}Кредит", string, "Выдать", "Отмена");
				}
				else ShowPlayerDialogEx(playerid,227,1,"{43CD80}Кредит","{FFFFFF}Какую сумму вы хотите выдать?\n\nПримечание: максимальная сумма от $5000 до $5000000\nВнимание: Неверная сумма","Далее","Отмена");
		    }
		}
		case 1613:
		{
		    if(response)
		    {
		        if(TeamDuty[playerid])return SendError(playerid,"В момент дежурства вы не можете сменить расу! Переоденьтесь или увольтись с организации");
				if(InJob[playerid]!=0)return SendError(playerid,"Закончите сначало свою работу");
				if(PlayerInfo[playerid][pRace]==0)
				{
				    ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{8CB736}Поздравляем!\n\n{FFFFFF}Вы сменили свою расу на черного, а стоимость реабилитации составила 50 DP\nСоветуем обзавестись хорошей одеждой","Принять","");
					if(PlayerInfo[playerid][pSex]==1)
					{
					    SetPlayerSkinEx(playerid,25);
				    	PlayerInfo[playerid][pSkin]=25;
					}
					else
					{
					    SetPlayerSkinEx(playerid,207);
				    	PlayerInfo[playerid][pSkin]=207;
					}
					PlayerInfo[playerid][pRace]=1;
				}
				else
				{
				    ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{8CB736}Поздравляем!\n\n{FFFFFF}Вы сменили свою расу на белого, а стоимость реабилитации составила 50 DP\nСоветуем обзавестись хорошей одеждой","Принять","");
				    if(PlayerInfo[playerid][pSex]==1)
					{
					    SetPlayerSkinEx(playerid,32);
					    PlayerInfo[playerid][pSkin]=32;
					}
					else
					{
					    SetPlayerSkinEx(playerid,90);
					    PlayerInfo[playerid][pSkin]=90;
					}
					PlayerInfo[playerid][pRace]=0;
				}
				PlayerInfo[playerid][pVirMoney]-=50;
				J_SetPlayerPos(playerid,2348.7441,-671.9380,1055.4249);
				SetPlayerVirtualWorld(playerid, 1);
   				SetPlayerInterior(playerid, 2);
		    }
		}
		case 1612:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pNeedMessage]=1;
		        if(TeamDuty[playerid])return SendError(playerid,"В момент дежурства вы не можете сменить пол! Переоденьтесь или увольтись с организации");
		        if(InJob[playerid]!=0)return SendError(playerid,"Закончите сначало свою работу");
				if(PlayerInfo[playerid][pSex]==1)
				{
				    ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{8CB736}Поздравляем!\n\n{FFFFFF}Вы сменили свой пол на женский, а стоимость реабилитации составила 150 DP\nСоветуем обзавестись хорошей одеждой","Принять","");
				    SetPlayerSkinEx(playerid,90);
				    PlayerInfo[playerid][pSkin]=90;
				    PlayerInfo[playerid][pSex]=2;
				}
				else
				{
				    ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{8CB736}Поздравляем!\n\n{FFFFFF}Вы сменили свой пол на мужской, а стоимость реабилитации составила 150 DP\nСоветуем обзавестись хорошей одеждой","Принять","");
				    SetPlayerSkinEx(playerid,73);
				    PlayerInfo[playerid][pSkin]=73;
				    PlayerInfo[playerid][pSex]=1;
				}
				PlayerInfo[playerid][pVirMoney]-=150;
   				PlayerInfo[playerid][pNeedMessage]=0;
		    }
		}
		case 1898:
		{
		    new id=PanelPlayerID[playerid],carid = GetPlayerVehicleID(PanelPlayerID[playerid]),Float: money =CenaRaboti[playerid] ;
		    new pcarsid = GetPlayerVehicleID(playerid);
			if(response)
			{
			    if(GetPlayerState(playerid)!=2)return false;
			    if(!IsPlayerLogged[id])return false;
			    if(PlayerInfo[id][pJob]!= JOB_MECHANIC) return SendError(playerid,"Произошла ошибка");
				if(VehicleInfo[carid][vJob]!=JOB_MECHANIC)return SendError(playerid,"Произошла ошибка");
				if(SlotValue[playerid][0]<money)return SendError(playerid,"У вас не достаточно денег чтобы оплатить работу механика");
				if(!ProxDetectorS(9.0, playerid, id, 1)) return SendError(playerid,"Вы далеко от игрока который вас должен был починить");
			    switch(Ingatre[playerid])
			    {
			        case 1:
			        {
						format(string,sizeof(string),"[Информация]{FFFFFF} %s успешно отремонтировал ваш транспорт за {52A32A}%.1f$",PlayerName[id],money);
						SendClientMessage(playerid,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s принял ваше предложение чтобы вы починили его транспорт. Вы заработали {52A32A}%.1f$",PlayerName[playerid],money);
					    SendClientMessage(id,COLOR_VALIK,string);
					    J_RepairVehicle(pcarsid);
					    new price = floatround( money, floatround_floor );
					    GiveMoney(playerid,-price);
						GiveMoney(id,price);
					}
					case 2:
					{
					    if(BenzinCount[carid]<(money/BenzinCena[carid])) return false;
					    format(string,sizeof(string),"[Информация]{FFFFFF} %s успешно заправил ваш транспорт за {52A32A}%.1f$",PlayerName[id],money);
						SendClientMessage(playerid,COLOR_VALIK,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}%s принял ваше предложение чтобы вы заправили его транспорт. Вы заработали {52A32A}%.1f$",PlayerName[playerid],(money/2));
					    SendClientMessage(id,COLOR_VALIK,string);
					    Fuel[pcarsid] += (money/BenzinCena[carid]);

					    new nedee = floatround(BenzinCena[carid], floatround_floor );
					    new price = floatround( money, floatround_floor );

					    BenzinCount[carid]-=(price/nedee);

					    GiveBizMoney(Contracter[carid],(price)/2);
					    format(string,sizeof(string),"{57B22C}Заправка %.1f$\n{FFFFFF}Бензина: %d/1000",BenzinCena[carid],BenzinCount[carid]);
						UpdateDynamic3DTextLabelText(Benzin[carid], 0xFFFFFFFF, string);

		    			if(Fuel[pcarsid]>=100)Fuel[pcarsid] = 100;
		    			GiveMoney(playerid,-price);
						GiveMoney(id,(price/2));
					}
				}
				CenaRaboti[playerid]=0;
				Ingatre[playerid]=0;
				PanelPlayerID[playerid]=-1;
			}
			else
			{
		  		SendError(playerid,"Вы отказались от предложения механика");
		  		format(string,sizeof(string),"[Информация] {FFFFFF} %s отказался от вашего предложения",PlayerName[playerid]);
		  		SendClientMessage(id,COLOR_RED,string);
			}
		}


		case 1081:
		{
		    if(response)
		    {
			    new id = PlayerInfo[playerid][pMScutes];
				if(id!=-1)PlayerInfo[id][pScutes] = -1,format(string,sizeof(string),"Вы отключили жучек с мобильного телефона игрока %s",PlayerName[id]);
				PlayerInfo[playerid][pMScutes]=-1,SendClientMessage(playerid,COLOR_GREEN,string);
			}
		}
		case 2761:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowPlayerDialogEx(playerid,185,5,"{43CD80}Выберите еду","Продукт\tИнформация\n{42B02C}-{FFFFFF} Картофель-Фри\t220$\n{42B02C}-{FFFFFF} Сэндвич\t260$\n{42B02C}-{FFFFFF} Баскет\t300$\n{42B02C}-{FFFFFF} Крылышки\t340$\n{42B02C}-{FFFFFF} Салат\t380$\n{42B02C}-{FFFFFF} Курица\t420$\n{42B02C}-{FFFFFF} Комплексный Обед\t700$","Выбор","Отмена");
		            case 1:
		            {
		                if(BizInfo[BizEntered[playerid]][bProducts] <= 1)return SendBotMessage(playerid,"Приносим свои извинения, но у нас закончились продукты");
						if(SlotValue[playerid][1]==-1)return SendError(playerid,"У вас нет личного дома");
                        format(string,sizeof(string),"{FFFFFF}Продуктов в вашем доме: {7396FB}%d{FFFFFF}.\nПополнив запас продуктов вы сможете покушать или выпить в любое время у себя в доме.\nВзять продукты или выпивку можно у бара и холодильника!.\n\n{29CD17}Стоимоть 1-го продукта составляет: %.0f$",HouseInfo[SlotValue[playerid][1]][hNoOwner],BizInfo[BizEntered[playerid]][bEnterPrice]);
						ShowPlayerDialogEx(playerid,77,1,"{43CD80}Меню",string,"Принять","Отмена");
		            }
		        }
		    }
		}
		///
		case 430:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
				if(money < 1 || money > (500-CarproductCount[GetPlayerVehicleID(playerid)])) return SendError(playerid,"Вы не можете закупить столько груза");
				if(SlotValue[playerid][0]<money*GLS[29]) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				if(GLS[28]<money)return SendError(playerid,"На складе разгрузочной станции недостаточно продуктов");
				if(CarproductType[GetPlayerVehicleID(playerid)] != 0 && CarproductType[GetPlayerVehicleID(playerid)] != 2 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SendError(playerid,"Вы не можете смешивать продукты с ящиками с разгрузочной станции");
				CarproductCount[GetPlayerVehicleID(playerid)] += money;
				GiveMoney(playerid,-(money*GLS[29]));
				GLS[28]-=money;
				CarproductType[GetPlayerVehicleID(playerid)] = 2;
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы загрузили машину. Используйте /orderlist чтобы найти заказчика продуктов");
				format(string,sizeof(string),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %d/500",CarproductCount[GetPlayerVehicleID(playerid)]);
				UpdateDynamic3DTextLabelText(Product[GetPlayerVehicleID(playerid)], 0xFFFFFFFF, string);
				format(string, sizeof(string), "Склад разгрузочной станции\n\n\n{D38A37}%d{FFFFFF} предметов\nСтоимость закупки: {D38A37}$%d\n\n{D38A37}Для загрузки посигнальте",GLS[28],GLS[29]);
				UpdateDynamic3DTextLabelText(FactoryText[2], COLOR_WHITE, string);
		    }
		}
		/////////////
		case 2291:
		{
			if(response)
			{
			    switch(listitem)
				{
					case 0:
					{
					    if(CarproductType[GetPlayerVehicleID(playerid)] != 0 && CarproductType[GetPlayerVehicleID(playerid)] != 2 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SendError(playerid,"Вы не можете смешивать продукты с ящиками с разгрузочной станции");
					    if(CarproductCount[GetPlayerVehicleID(playerid)]>=500)return SendError(playerid,"Ваш грузовик переполнен");
						format(string,sizeof(string),"Введите количество груза, которое хотите закупить для перепродажи.\n{C1BABA}Используйте число от 1 до %d",500-CarproductCount[GetPlayerVehicleID(playerid)]);
			   			ShowPlayerDialogEx(playerid,430,1,"{43CD80}Подтверждение",string,"Принять","Отмена");
					}
					case 1:
					{
						if(CarproductCount[GetPlayerVehicleID(playerid)]==0)return ShowPlayerDialogEx(playerid,2291,2,"{43CD80}Подтверждение","{42B02C}-{FFFFFF} Закупить груз\n{42B02C}-{FFFFFF} Вернуть груз","Принять","Отмена");
						if(CarproductType[GetPlayerVehicleID(playerid)] != 2 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SendError(playerid,"Вы не можете вернуть сюда продукты, так как вы их покупали на ферме либо вообще не покупали");
					    GLS[28]+=CarproductCount[GetPlayerVehicleID(playerid)];
					    GiveMoney(playerid,(CarproductCount[GetPlayerVehicleID(playerid)]*GLS[29]));
						CarproductCount[GetPlayerVehicleID(playerid)] =0;
                        CarproductType[GetPlayerVehicleID(playerid)] = 0;
						format(string,sizeof(string),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %d/500",CarproductCount[GetPlayerVehicleID(playerid)]);
						UpdateDynamic3DTextLabelText(Product[GetPlayerVehicleID(playerid)], 0xFFFFFFFF, string);
						format(string, sizeof(string), "Склад разгрузочной станции\n\n\n{D38A37}%d{FFFFFF} предметов\nСтоимость закупки: {D38A37}$%d\n\n{D38A37}Для загрузки посигнальте",GLS[28],GLS[29]);
						UpdateDynamic3DTextLabelText(FactoryText[2], COLOR_WHITE, string);
					}
				}
			}
		}
		////////////
		case 2001:  
		{  
			if(response)  
			{  
				switch(listitem)  
				{  
				case 0:
				{
					if(TeamDuty[playerid])SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
					else SetPlayerColor(playerid,0xEFEFF710);
				} 
				case 1: SetPlayerColor(playerid,0x089401FF);  
				case 2: SetPlayerColor(playerid,0x56FB4EFF);  
				case 3: SetPlayerColor(playerid,0x49E789FF);  
				case 4: SetPlayerColor(playerid,0x2A9170FF);  
				case 5: SetPlayerColor(playerid,0x9ED201FF);  
				case 6: SetPlayerColor(playerid,0x279B1EFF);  
				case 7: SetPlayerColor(playerid,0x003366FF);  
				case 8: SetPlayerColor(playerid,0xFF0606FF);  
				case 9: SetPlayerColor(playerid,0xFF6600FF);  
				case 10: SetPlayerColor(playerid,0xF45000FF);  
				case 11: SetPlayerColor(playerid,0xBE8A01FF);  
				case 12: SetPlayerColor(playerid,0xB30000FF);  
				case 13: SetPlayerColor(playerid,0x954F4FFF);  
				case 14: SetPlayerColor(playerid,0xE7961DFF);  
				case 15: SetPlayerColor(playerid,0xE6284EFF);  
				case 16: SetPlayerColor(playerid,0xFF9DB6FF);  
				case 17: SetPlayerColor(playerid,0x110CE7FF);  
				case 18: SetPlayerColor(playerid,0x0CD7E7FF);  
				case 19: SetPlayerColor(playerid,0x139BECFF);  
				case 20: SetPlayerColor(playerid,0x2C9197FF);  
				case 21: SetPlayerColor(playerid,0x114D71FF);  
				case 22: SetPlayerColor(playerid,0x8813E7FF);  
				case 23: SetPlayerColor(playerid,0xB313E7FF);  
				case 24: SetPlayerColor(playerid,0x758C9DFF);  
				case 25: SetPlayerColor(playerid,0xFFDE24FF);  
				case 26: SetPlayerColor(playerid,0xFFEE8AFF);  
				case 27: SetPlayerColor(playerid,0xDDB201FF);  
				case 28: SetPlayerColor(playerid,0xDDA701FF);  
				case 29: SetPlayerColor(playerid,0xB0B000FF);  
				case 30: SetPlayerColor(playerid,0x868484FF);  
				case 31: SetPlayerColor(playerid,0xB8B6B6FF);  
				case 32: SetPlayerColor(playerid,0x333333FF);  
				case 33: SetPlayerColor(playerid,0xFAFAFAFF);  
				}  
			}  
		}
		case 2281:
		{
			if(response)
			{
			    switch(listitem)
				{
					case 0:
					{
					    if(CarproductType[GetPlayerVehicleID(playerid)] != 0 && CarproductType[GetPlayerVehicleID(playerid)] != 1 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SendError(playerid,"Вы не можете смешивать продукты с ящиками с разгрузочной станции");
					    if(CarproductCount[GetPlayerVehicleID(playerid)]>=500)return SendError(playerid,"Ваш грузовик переполнен");
						format(string,sizeof(string),"Введите количество продуктов, которое хотите закупить для перепродажи.\n{C1BABA}Используйте число от 1 до %d",500-CarproductCount[GetPlayerVehicleID(playerid)]);
			   			ShowPlayerDialogEx(playerid,429,1,"{43CD80}Подтверждение",string,"Принять","Отмена");
					}
					case 1:
					{
					    if(BizInfo[BIZ_ELECTRO_LS][bMoney]<(CarproductCount[GetPlayerVehicleID(playerid)]*GLS[31])/2)return SendError(playerid,"В бизнесе не достаточно средств чтобы оплатить ваш груз");
					    //////////////////////////////////////
						if(CarproductCount[GetPlayerVehicleID(playerid)]==0)return ShowPlayerDialogEx(playerid,2281,2,"{43CD80}Подтверждение","{42B02C}-{FFFFFF} Закупить продукты\n{42B02C}-{FFFFFF} Вернуть продукты","Принять","Отмена");
						if(CarproductType[GetPlayerVehicleID(playerid)] != 1 && CarproductCount[GetPlayerVehicleID(playerid)]>0) return SendError(playerid,"Вы не можете вернуть сюда продукты, так как вы их покупали на разгрузочной станции либо вообще не покупали");
					    GLS[27]+=CarproductCount[GetPlayerVehicleID(playerid)];
					    GiveMoney(playerid,(CarproductCount[GetPlayerVehicleID(playerid)]*GLS[31]));
					    GiveBizMoney(BIZ_ELECTRO_LS,-(CarproductCount[GetPlayerVehicleID(playerid)]*GLS[31])/2);
						CarproductCount[GetPlayerVehicleID(playerid)] =0;
                        CarproductType[GetPlayerVehicleID(playerid)] = 0;
						format(string,sizeof(string),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %d/500",CarproductCount[GetPlayerVehicleID(playerid)]);
						UpdateDynamic3DTextLabelText(Product[GetPlayerVehicleID(playerid)], 0xFFFFFFFF, string);
						format(string, sizeof(string), "Склад фермы\n\n\n{D94141}%d{FFFFFF} продуктов\nСтоимость закупки: {D94141}$%d\n\n{D38A37}Для загрузки посигнальте",GLS[27],GLS[31]);
						UpdateDynamic3DTextLabelText(FactoryText[1], COLOR_WHITE, string);
					}
				}
			}
		}
		case 1653:
		{
		    if(response)
		    {
		        PlayerInfo[playerid][pType] = listitem;
          		SetPlayerBuyItem(playerid);
		    }
		}
		case 8762:
		{
		    if(response)
		    {
				if(dBiz[playerid]==-1) return SendError(playerid,"Ошибка");
			    if(GetString(BizInfo[dBiz[playerid]][bOwner],"The State")) return SendError(playerid,"Ошибка");
			    if(BizInfo[dBiz[playerid]][bState] == 7 || BizInfo[dBiz[playerid]][bState] == 1 || BizInfo[dBiz[playerid]][bState] == 2 || BizInfo[dBiz[playerid]][bState] == 3 || BizInfo[dBiz[playerid]][bState] == 9)
				{
				    if(BizInfo[dBiz[playerid]][bBuyCost]>0 && BizInfo[dBiz[playerid]][bNeedItem]>0)
				    {
				        if(IsPlayerInRangeOfPoint(playerid,10,BizInfo[dBiz[playerid]][bEnter][0],BizInfo[dBiz[playerid]][bEnter][1],BizInfo[dBiz[playerid]][bEnter][2]))
				        {
				            if(PlayerInfo[playerid][pJob]!=3) return 1;
							if(VehicleInfo[GetPlayerVehicleID(playerid)][vJob]!=3) return SendError(playerid,"Вы должны находиться в транспорте развозчика продуктов");
							new col = strval(inputtextsave),carid = GetPlayerVehicleID(playerid);
							if(col < 1)return SendError(playerid,"Вы не можете продать столько продуктов");
							if(col > BizInfo[dBiz[playerid]][bNeedItem])return SendError(playerid,"Владелец бизнеса не заказывал столько продуктов");
							if(BizInfo[dBiz[playerid]][bMoney]<(col*BizInfo[dBiz[playerid]][bBuyCost]))return SendError(playerid,"В банке бизнеса не достаточно денег чтобы оплатить груз");
							if(CarproductCount[carid] < col)return SendError(playerid,"В вашем грузовике нет столько продуктов");
						 	if(BizInfo[dBiz[playerid]][bState] == 7 || BizInfo[dBiz[playerid]][bState] == 1)
						 	{
								if(CarproductType[carid] != 1)return SendError(playerid,"Бизнес скупает продукты из склада фермы! Груз вашей машины можно вернуть на склад или продать в другой бизнес");
								CarproductCount[carid] -= col;
								BizInfo[dBiz[playerid]][bNeedItem]-=col;
								BizInfo[dBiz[playerid]][bMoney]-=(col*BizInfo[dBiz[playerid]][bBuyCost]);
								BizInfo[dBiz[playerid]][bProducts]+=col;
								GiveMoney(playerid,(col*BizInfo[dBiz[playerid]][bBuyCost]));
								format(string,sizeof(string),"Вы продали %d продуктов за $%d",col,(col*BizInfo[dBiz[playerid]][bBuyCost]));
								SendClientMessage(playerid,COLOR_ORANGE,string);
								if(CarproductCount[carid]<50)SendClientMessage(playerid,COLOR_WHITE,"Чтобы продолжить развозку продуктов, необходимо закупить их заново");
								format(string,sizeof(string),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %d/500",CarproductCount[GetPlayerVehicleID(playerid)]);
								UpdateDynamic3DTextLabelText(Product[carid], 0xFFFFFFFF, string);
						 	}
						 	else if(BizInfo[dBiz[playerid]][bState] == 2)
						 	{
						 	    CarproductCount[carid] -= col;
								BizInfo[dBiz[playerid]][bNeedItem]-=col;
								BizInfo[dBiz[playerid]][bMoney]-=(col*BizInfo[dBiz[playerid]][bBuyCost]);
								BizInfo[dBiz[playerid]][bProducts]+=col;
								GiveMoney(playerid,(col*BizInfo[dBiz[playerid]][bBuyCost]));
								format(string,sizeof(string),"Вы продали %d продуктов за $%d",col,(col*BizInfo[dBiz[playerid]][bBuyCost]));
								SendClientMessage(playerid,COLOR_ORANGE,string);
								if(CarproductCount[carid]<50)SendClientMessage(playerid,COLOR_WHITE,"Чтобы продолжить развозку продуктов, необходимо закупить их заново");
								format(string,sizeof(string),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %d/500",CarproductCount[GetPlayerVehicleID(playerid)]);
								UpdateDynamic3DTextLabelText(Product[carid], 0xFFFFFFFF, string);
						 	}
						 	else
						 	{
						 	    if(CarproductType[carid] != 2)return SendError(playerid,"Бизнес скупает продукты из разгрузочной станции! Груз вашей машины можно вернуть на склад или продать в другой бизнес");
						 	    CarproductCount[carid] -= col;
						 	    BizInfo[dBiz[playerid]][bNeedItem]-=col;
						 	    BizInfo[dBiz[playerid]][bMoney]-=(col*BizInfo[dBiz[playerid]][bBuyCost]);
						 	    BizInfo[dBiz[playerid]][bProducts]+=col;
						 	    GiveMoney(playerid,(col*BizInfo[dBiz[playerid]][bBuyCost]));
						 	    format(string,sizeof(string),"Вы продали %d продуктов за $%d",col,(col*BizInfo[dBiz[playerid]][bBuyCost]));
								SendClientMessage(playerid,COLOR_ORANGE,string);
								if(CarproductCount[carid]<50)SendClientMessage(playerid,COLOR_WHITE,"Чтобы продолжить развозку продуктов, необходимо закупить их заново");
						 	    format(string,sizeof(string),"{D78787}Развозчик продуктов\n{FFFFFF}Загружено: %d/500",CarproductCount[GetPlayerVehicleID(playerid)]);
								UpdateDynamic3DTextLabelText(Product[carid], 0xFFFFFFFF, string);

							}
							if(CarproductCount[carid]==0) CarproductType[carid] = 0;
							UpdateBiz(dBiz[playerid],0);
							dBiz[playerid]=-1;
				        }
					}
					else SendError(playerid,"Бизнес больше не скупает продукты");
				}
		    }
		}
		case 8761:
		{
		    if(response)
		    {
		        for(new i;i<22;i++)
		        {
		            if(listitem==i)
					{
						EnableGPSForPlayer(playerid,BizInfo[DBizitem[playerid][i]][bEnter][0],BizInfo[DBizitem[playerid][i]][bEnter][1],BizInfo[DBizitem[playerid][i]][bEnter][2]);
						SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местоположение заказчика отмечено на карте красным маркером. Не забудьте загрузить товар (/gps - разное - склады)");
						if(BizInfo[DBizitem[playerid][i]][bState] == 7 || BizInfo[DBizitem[playerid][i]][bState] == 1) SendClientMessage(playerid,COLOR_LIGHTBLUE,"Бизнес скупает продукты только со склада фермы");
						else if(BizInfo[DBizitem[playerid][i]][bState] == 2) SendClientMessage(playerid,COLOR_LIGHTBLUE,"Бизнес скупает продукты с фермы и разгрузочной станции");
						else  SendClientMessage(playerid,COLOR_LIGHTBLUE,"Бизнес скупает товар только со склада разгрузочной станции");
					}
		        }
		    }
		}
		case 5872:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                PlayerInfo[playerid][pRedio]=0;
		                SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы переключились на радиостанцию LSFM");
		            }
		            case 1:
		            {
		                PlayerInfo[playerid][pRedio]=1;
		                SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы переключились на радиостанцию SFFM");
		            }
		            case 2:
		            {
		                PlayerInfo[playerid][pRedio]=2;
		                SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы переключились на радиостанцию LVFM");
		            }
		            case 3:
		            {
		                PlayerInfo[playerid][pRedio]=3;
		                SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы выключили радио");
		            }
		        }
		        callcmd::setradio(playerid);
		    }
		}
		case 8721:
		{
			if(response)
			{
			    new num=0;
                switch(listitem)
                {
                    case 0:
                    {
                        foreach(new i:Player)
		                {
		                    if(IsPlayerLogged[i] && PlayerInfo[i][pRedio]==0)
								num ++;
		                }
						format(string,sizeof(string),"На данный момент радио Los-Santos слушает %d человек",num);
						SendBotMessage(playerid,string);
					}
					case 1:
					{
					    foreach(new i:Player)
		                {
		                    if(IsPlayerLogged[i] && PlayerInfo[i][pRedio]==1)
								num ++;
		                }
		                format(string,sizeof(string),"На данный момент радио San-Fierro слушает %d человек",num);
						SendBotMessage(playerid,string);
					}
					case 2:
					{
					    foreach(new i:Player)
		                {
		                    if(IsPlayerLogged[i] && PlayerInfo[i][pRedio]==2)
								num ++;
		                }
		                format(string,sizeof(string),"На данный момент радио Las-Venturas слушает %d человек",num);
						SendBotMessage(playerid,string);
					}
                }
			}
		}
		case 2783:
        {
        	if(response)
        	{
				new num;
                foreach(new i:Player)
                {
                    if(RegTimeNumber[i] > 0)
                    {
                		if(num == listitem)
  						{
  						    new number = RegCarNumber[i];
							new carid = RegCarID[i];
  						    AddId[playerid] = i;
  						    RegTimeNumber[AddId[playerid]] = 0;
							format(string,sizeof(string),"{FFFFFF}Заявка от {FFD700}%s\n{FFFFFF}Требуемый номер: [{43CD80}%s{ffffff}]\n{FFFFFF}Марка авто: [{43CD80}%s{ffffff}]\n{FFFFFF}Нынешный номер: [{43CD80}%s{ffffff}]\n\n{FFFFFF}Будьте внимательны при выдачи разрешения на право установить нужный игроку номер,\nВаше имя будет записано в паспорте авто, на который вы выдали разрешение",PlayerName[i],RegNumbers[i],VehicleName[GetVehicleModelEx(carid)-400],CarInfo[number][cNumber]);
							ShowPlayerDialogEx(playerid,2784,0,"{43CD80}Подтверждение",string,"Одобрить","Отклонить");
							///
							break;
  						}
  						num ++;
					}
				}
			}
			return true;
		}
		case 2784:
		{
		    new number = RegCarNumber[AddId[playerid]];
		    if(response)
        	{
                if(!IsPlayerLogged[AddId[playerid]])return SendError(playerid,"Игрок который отправил заявку вышел из игры");
				if(RegCarNumber[AddId[playerid]] == -1) return SendError(playerid,"Игрок который отправил заявку вышел из игры");


				new carid = RegCarID[AddId[playerid]];
				GiveMoney(playerid,300);
				OrgInfo[TEAM_SFPD][oBank]+=1000;
                SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы получили $300 за оформление автомобильного номера");
                format(string,sizeof(string),"{3768E5}Внимание!{FFFFFF} На транспорт: %s было выдано разрешение на установку номера: [{3768E5}%s{FFFFFF}], езжайте",VehicleName[GetVehicleModelEx(carid)-400],RegNumbers[AddId[playerid]]);
                SendClientMessage(AddId[playerid],-1,string);
                SendClientMessage(AddId[playerid],-1,"в гараж SFPD, чтобы установить его на ваш автомобиль! ( /gps - Важные места - Полиция | San-Fierro)");


                SetString(CarInfo[number][cOnNumber],RegNumbers[AddId[playerid]]);
                SetString(CarInfo[number][cOnRegister],PlayerName[playerid]);


                RegTimeNumber[AddId[playerid]] = 0;
                RegCarNumber[AddId[playerid]] = -1;
                RegCarID[AddId[playerid]]=-1;

				if(SlotValue[AddId[playerid]][0]<5000)
				{
					PlayerInfo[AddId[playerid]][pCredit]+=5000;
					SendInfo(AddId[playerid],"На ваш кредитный счет начислено 5000$ так как у вас недостаточно средств на оплату регистрации номера");
				}
				else GiveMoney(AddId[playerid],-5000);
			}
			else
			{
			    RegTimeNumber[AddId[playerid]] = 0;
		     	RegCarNumber[AddId[playerid]] = -1;
		     	RegCarID[AddId[playerid]]=-1;

		     	SetString(CarInfo[number][cOnNumber],"The State");
                SetString(CarInfo[number][cOnRegister],"The State");

			    SendError(playerid,"Вы отклонили заявку на регистрацию номера");
			    format(string,sizeof(string),"[Информация] {FFFFFF}Ваша заявка на регистрацию номера для авто отклонена полицейским: %s[%d]",PlayerName[playerid],playerid);
			    SendClientMessage(AddId[playerid],COLOR_RED,string);
			    SendClientMessage(AddId[playerid],-1,"Внимательно разузнайте по каким критериям проходит регистрация, чтобы получить разрешение");
			}
		}
		case 8658:
		{
			if(response)
			{
			    if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid,"Вы должны быть за рулём");
			    new carid=GetPlayerVehicleID(playerid);
			    new number = GetVehicleID(carid);
			    if((listitem == 0 || listitem == 1) && !IsPlayerHaveCar(playerid,carid))return SendError(playerid,"Вы должны находиться в личном транспорте");
			    switch(listitem)
			    {
			        case 0:
			        {
			            if(SlotValue[playerid][0]<1000)return SendError(playerid,"У вас не достаточно денег на установку номера");
						if(GetString(CarInfo[number][cOnNumber],"The State"))return SendError(playerid,"Для того чтобы установить номер, необходимо получить на него разрешение (( /reg ))");
						if(GetString(CarInfo[number][cOnRegister],"The State"))return SendError(playerid,"Для того чтобы установить номер, необходимо получить на него разрешение  (( /reg ))");
						////


						GiveMoney(playerid,-1000);
						OrgInfo[TEAM_SFPD][oBank]+=300;

                        CarInfo[number][cNumberColor] = 0;
						SetString(CarInfo[number][cNumber],CarInfo[number][cOnNumber]);
                		SetString(CarInfo[number][cRegister],CarInfo[number][cOnRegister]);
                		//SetVehicleNumberPlate(carid,CarInfo[number][cOnNumber]);


						new engine_status = GetEngineStatus(carid);
						new Float:X,Float:Y,Float:Z,Float:A;
						GetVehiclePos(carid,X,Y,Z);
						GetVehicleZAngle(carid,A);
						SetVehicleToRespawn(carid);
						SetEngineStatus(carid, engine_status,-1);
						J_SetVehiclePos(carid,X,Y,Z);
						AC_PutPlayerInVehicle(playerid, carid, 0);
						SetVehicleZAngle(carid,A);


						////
						SetString(CarInfo[number][cOnNumber],"The State");
                		SetString(CarInfo[number][cOnRegister],"The State");

                		format(string,sizeof(string),"{FFFFFF}Вы установили номер: {3F93E6}%s{FFFFFF} себе на автомобиль!\nРегистратором номера является: {3F93E6}%s.\n\n{FFFFFF}Хорошего дня",CarInfo[number][cNumber],CarInfo[number][cRegister]);
                		ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");

						GameTextForPlayer(playerid, "Successful", 0, 1);
						format(string,sizeof(string)," %s установил номер на авто",PlayerName[playerid]);
						SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
						SaveOwnableCar(number);


			        }
			        case 1:
			        {
			            if(SlotValue[playerid][0]<10000)return SendError(playerid,"У вас не достаточно денег на смену окраски номера");
			            if(GetString(CarInfo[number][cNumber],"SA"))return SendError(playerid,"Вы не можете сменить цвет стандартному номеру");
			            format(string,sizeof(string),"\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - \n\
						- %s[%s] - ",
						NumberColors[0],CarInfo[number][cNumber],
						NumberColors[1],CarInfo[number][cNumber],
						NumberColors[2],CarInfo[number][cNumber],
						NumberColors[3],CarInfo[number][cNumber],
						NumberColors[4],CarInfo[number][cNumber],
						NumberColors[5],CarInfo[number][cNumber],
						NumberColors[6],CarInfo[number][cNumber],
						NumberColors[7],CarInfo[number][cNumber],
						NumberColors[8],CarInfo[number][cNumber],
						NumberColors[9],CarInfo[number][cNumber],
						NumberColors[10],CarInfo[number][cNumber],
						NumberColors[11],CarInfo[number][cNumber],
						NumberColors[12],CarInfo[number][cNumber],
						NumberColors[13],CarInfo[number][cNumber],
						NumberColors[14],CarInfo[number][cNumber]);
						ShowPlayerDialogEx(playerid,205,2,"{43CD80}Выберите цвет",string,"Выбор","Отмена");
			            //

			            //GiveMoney(playerid,-10000);
			        }
			        case 2:
			        {
			            if(SlotValue[playerid][0]<500)return SendError(playerid,"У вас не достаточно денег на установку номера");
			            GiveMoney(playerid,-500);
			            OrgInfo[TEAM_SFPD][oBank]+=100;
					    SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы починили свой транспорт");
					    J_RepairVehicle(GetPlayerVehicleID(playerid));
					    format(string,sizeof(string)," %s отремонтировал свою машину",PlayerName[playerid]);
						SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
			        }
			    }
			}
		}
		case 205:
		{
		    if(response)
		    {
		        new carid=GetPlayerVehicleID(playerid);
			    new number = GetVehicleID(carid);
		        if(SlotValue[playerid][0] >= 10000)
		        {
		        	if(IsAOwnableCar(carid))
					{
					    CarInfo[number][cNumberColor] = listitem;
					    SaveOwnableCar(number);
					}
					new engine_status = GetEngineStatus(carid);
					new Float:X,Float:Y,Float:Z,Float:A;
					GetVehiclePos(carid,X,Y,Z);
					GetVehicleZAngle(carid,A);
					SetVehicleToRespawn(carid);
					SetEngineStatus(carid, engine_status,-1);
					J_SetVehiclePos(carid,X,Y,Z);
					AC_PutPlayerInVehicle(playerid, carid, 0);
					SetVehicleZAngle(carid,A);

					SendClientMessage(playerid,COLOR_ORANGE,"[Информация] {FFFFFF}Вы изменили расцветку номера своего автомобиля");

					GameTextForPlayer(playerid, "Successful", 0, 1);
					format(string,sizeof(string)," %s изменил цвет номера на авто",PlayerName[playerid]);
					SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);

					GiveMoney(playerid,-10000);
					OrgInfo[TEAM_SFPD][oBank]+=2000;
		        }
		        else SendError(playerid,"У вас не достаточно денег на смену окраски номера");
		    }
		    return true;
		}
		case 9000:
	    {
	        if(!response)return 1;
	        switch(listitem)
			{
			case 0:J_SetPlayerPos(playerid, 2087.8985,1450.1426,10.97);
			case 1:J_SetPlayerPos(playerid, 1797.4642,-1632.7943,13.3090);
			case 2:J_SetPlayerPos(playerid, 1996.0687,-1154.5607,21.0217);
			case 3:J_SetPlayerPos(playerid, 2221.6829,-1173.6432,25.7266);
			case 4:J_SetPlayerPos(playerid, 1466.7482,-1695.1288,13.4898);
			case 5:
				{
					J_SetPlayerPos(playerid, -774.1894,493.0985,1376.5850);
					SetPlayerFacingAngle(playerid, 52.1);
					SetPlayerVirtualWorld(playerid, 1466);
					SetPlayerInterior(playerid, 1);
					SendError(playerid, "Вы были телепортированы");
					return 1;
				}
			case 6:J_SetPlayerPos(playerid, -2090.6746,1881.8987,19.5594);
			case 7:J_SetPlayerPos(playerid, -115.7258,-331.2606,1.4297);
			case 8:J_SetPlayerPos(playerid, -42.3905,-28.6560,3.1172);
			case 9:J_SetPlayerPos(playerid, -1857.4948,-1691.1974,41.5859);
			case 10:J_SetPlayerPos(playerid, -373.5172,-1447.2837,25.7266);
			}
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SendError(playerid, "Вы были телепортированы");
			return 1;
		}
		case 1228:
		{
			if(!response)return 1;
			switch(listitem)
			{
			case 3:
				{
					if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
					if(GLS[36]>=3)return SendError(playerid,"Все организации имеют право только на 3 строки в 10 минут");
					format(string, sizeof string, "••••••••••••••••••••••••••••••••••• %s •••••••••••••••••••••••••••••••••••", OrgInfo[PlayerInfo[playerid][pMember]][oName]);
					SendClientMessageToAll(-1, string);
					SendClientMessageToAll(COLOR_GOV, GovLeader[PlayerInfo[playerid][pMember]][0]);
					SendClientMessageToAll(COLOR_GOV, GovLeader[PlayerInfo[playerid][pMember]][1]);
					SendClientMessageToAll(COLOR_GOV, GovLeader[PlayerInfo[playerid][pMember]][2]);
					GLS[36] = 3;
					new time[3], ftime[24];
					gettime(time[0],time[1],time[2]);
					format(ftime, sizeof ftime, "%02d:%02d:%02d",time[0],time[1],time[2]);
					format(GovText[PlayerInfo[playerid][pMember]], 512, "{ffffff}%s %s в %s\n\n{%s}%s\n%s\n%s"
					,GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]),PlayerName[playerid],ftime,CheckColor(GetPlayerColor(playerid)),
					GovLeader[PlayerInfo[playerid][pMember]][0],GovLeader[PlayerInfo[playerid][pMember]][1],GovLeader[PlayerInfo[playerid][pMember]][2]);
				}
			default:
				{
					SetPVarInt(playerid, "Govnum", listitem);
					format(string, sizeof string, "{664FE3}Текущий текст: %s\n\n{ffffff}Введите текст для строки, которая будет добавлена в государственные новости",GovLeader[PlayerInfo[playerid][pMember]][GetPVarInt(playerid, "Govnum")]);
					ShowPlayerDialogEx(playerid, 1229, 1, "{43CD80}Редактирование строки", string,"Готово","Отмена");
				}
			}
			return 1;
		}
		case 1229:
		{
			if(!response)return 1;
			if(!strlen(inputtext) || strlen(inputtext) > 100 || IsAIP(inputtext))
			{
				SendError(playerid, "Строка должна быть не длиннее 100 символов");
				return ShowPlayerDialogEx(playerid, 1229, 1, "{43CD80}Редактирование строки", "{ffffff}Введите текст для строки, которая будет добавлена в государственные новости","Готово","Отмена");
			}
			SetString(GovLeader[PlayerInfo[playerid][pMember]][GetPVarInt(playerid, "Govnum")], inputtext);
			DeletePVar(playerid, "Govnum");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Строка успешно отредактирована");
			callcmd::gov(playerid);
			return 1;
		}
		case 1230:
		{
			if(!response)return 1;
			if(GetString(GovText[GovSlot[listitem]], "None"))return SendError(playerid, "Эта организация ещё не публиковала новости");
			ShowPlayerDialogEx(playerid, 0, 0, "", GovText[GovSlot[listitem]], "Скрыть","");
		}
		case 1231:
		{
			new para1 = PanelPlayerID[playerid];
			new money = CreditMoney[playerid];
			PanelPlayerID[para1] = -1;
			CreditMoney[para1] = 0;
			CreditMoney[playerid] = 0;
			PanelPlayerID[playerid] = -1;
			if(!response)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вы отказались от получения кредита");
				SendClientMessage(para1, COLOR_LIGHTRED, "Клиент отказался от получения кредита");
				return 1;
			}
			if(PlayerInfo[playerid][pCredit]>0)return SendError(para1,"Этот игрок уже несет долг банку");
			if(PlayerInfo[playerid][pWanted]>0)return SendError(para1,"Вы не можете выдать кредит человеку, который находится в розыске");
			if(PlayerInfo[playerid][pExp] < 30)return SendError(para1,"Вы не можете выдать кредит человеку, у которого меньше 30 отыгранных часов");
			new chance = 100;
			if(IsAtFrakcia(playerid) || PlayerInfo[playerid][pJob])chance -= 15;
			if(PlayerInfo[playerid][pRank] > 6)chance -= 15;
			if(GetMoney(playerid) >= (money/2) || PlayerInfo[playerid][pBank] >= (money/2))chance -= 40;
			if(PlayerInfo[playerid][pExp] >= 50)chance -= 15;
			switch(random(chance)){
			case 0..14:
				{
					GiveBankMoney(playerid, money);
					PlayerInfo[playerid][pCredit] += money;
					PlayerInfo[playerid][pCredit_Default] = money;
					OrgInfo[TEAM_BANK][oBank]-=money;
					SaveOrg(TEAM_BANK);
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы выдали кредит %s в размере $%d под %d процентов",PlayerName[playerid], money, GLS[0]);
					SendClientMessage(para1,COLOR_VALIK,string);
					format(string,sizeof(string),"{FFFFFF}Вы взяли кредит в размере $%d. Деньги переведены на ваш банковский счет",money);
					ShowPlayerDialogEx(playerid, INVALID_DIALOG_ID, 0, "{43CD80}Кредит", string, "Скрыть","");
				}
			default:
				{
					Dialog_Open(para1, 0, 0, "Уведомление", "\n\n\
					\\c{FFFFFF}Клиенту было отказано в кредитовании. Возможные причины:\n\
					\\c{D94141}• Клиент неплатёжеспособен (не в состоянии банку вернуть задолженность)\n\
					\\c• Клиент официально не трудоустроен\n\
					\\c• Заработная плата клиента не удовлетворяет банк\n\
					\\c• Клиент недавно прибыл в штат\n\n", "Скрыть", "");
					Dialog_Open(playerid, 0, 0, "Уведомление", "\n\n\
					\\c{FFFFFF}Вам было отказано в кредитовании. Возможные причины:\n\
					\\c{D94141}• Вы неплатёжеспособны (не в состоянии банку вернуть задолженность)\n\
					\\c• Вы официально не трудоустроены\n\
					\\c• Заработная плата не удовлетворяет банк\n\
					\\c• Вы недавно прибыли в штат\n\n", "Скрыть", "");
					PlayerInfo[playerid][pCredit_KD] = gettime()+43200;
				}
			}
		}
		case 1233:
		{
			if(!response)return 1;
			new slot = listitem;
			if(GetMoney(playerid) < gBarPrice[slot]) return SendBotMessage(playerid, "Извини, приятель... Халявы тут нет");
			GiveMoney(playerid,-gBarPrice[slot]);
			CasinoInfo[0][casBalance] += gBarPrice[slot];
			CasinoInfo[0][casWin] += gBarPrice[slot];
			SendBarBot(playerid);
			ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
			J_SetPlayerDrunkLevel(playerid,J_GetPlayerDrunkLevel(playerid) + 300);
			if(Fullness[playerid]+10>MAX_PLAYER_SATIETY(playerid))SetFullness(playerid, MAX_PLAYER_SATIETY(playerid));
			else SetFullness(playerid, Fullness[playerid]+10);
			if(QuestProgress[playerid][6] < QI[6][LastProgress] && AcceptQuest[playerid][6] == 1)QuestProgress[playerid][6] ++;
			if(QuestProgress[playerid][6] >= QI[6][LastProgress] && QuestProgress[playerid][6] < 10000){
				PlayerInfo[playerid][pTalents][0]++;
				SendInfo(playerid, "У Вас появились новые очки талантов");
				QuestProgress[playerid][6] = 10000;
			}
			return 1;
		}
		case 1236:
		{
			if(!response)return SelectTextDraw(playerid,0x0099FFAA);
			SetPVarInt(playerid, "RoulSelect", listitem);
			new items[200];
			format(items, sizeof items, "\n\n\\c{FFFFFF}Вы выбрали %s {ffffff}стоимостью {ff4400}%d рублей\n\\c{C9EAFF}Вы хотите продать или забрать этот приз?\n\n",ItemNames[ItemInfo[playerid][plrPrize][listitem]],ItemInfo[playerid][plrPrice][listitem]);
			Dialog_Open(playerid, 1237, 0, "{43CD80}Подтверждение", items, "Забрать", "Продать");
		}
		case 312:
		{
			if(!response)return SelectTextDraw(playerid,0x0099FFAA);
			new amount = strval(inputtext);
			if(amount < 0 || amount > PlayerInfo[playerid][pVirMoney])
			{
				SendError(playerid,"Недостаточно средств. Вы можете пополнить свой счёт [/donate]");
				ShowPlayerDialogEx(playerid,312,1,"{43CD80}Пополнение баланса","Введите сумму пополнения баланса для игры в рулетку\n\n{7396FB}Пополнение производится с баланса донат-счёта","Пополнить","Отмена");
				return 1;
			}
			PlayerInfo[playerid][pVirMoney] -= amount;
			PlayerInfo[playerid][RoulBalance] += amount;
			new balance[128];
			format(balance, sizeof balance,"~w~DONATE: ~y~%d COINS~n~~w~BALANCE: ~g~%d POINTS",PlayerInfo[playerid][pVirMoney],PlayerInfo[playerid][RoulBalance]);
			PlayerTextDrawSetString(playerid, PlayerRoulette[playerid][0],balance);
			format(balance,sizeof balance,"Вы успешно пополнили баланс на {7396FB}%d поинтов. {ffffff}Текущий баланс: {7396FB}%d points",amount,PlayerInfo[playerid][RoulBalance]);
			SendInfo(playerid,balance);
		}
		case 1237:
		{
			if(!response)
			{
				f(string, "DELETE FROM `roul_prizes` WHERE (`Prize` = '%d' AND `ID` = '%d')", ItemInfo[playerid][plrPrize][GetPVarInt(playerid, "RoulSelect")], ItemInfo[playerid][plrID][GetPVarInt(playerid, "RoulSelect")]);
				mysql_query(mysql, string, false);
				PlayerInfo[playerid][RoulBalance] += ItemInfo[playerid][plrPrice][GetPVarInt(playerid, "RoulSelect")];
				f(string, "Вы продали {7396FB}%s {ffffff}за {7396FB}%d рублей", ItemNames[ItemInfo[playerid][plrPrize][GetPVarInt(playerid, "RoulSelect")]],ItemInfo[playerid][plrPrice][GetPVarInt(playerid, "RoulSelect")]);
				SendInfo(playerid, string);
				DeletePVar(playerid, "RoulSelect");
				return LoadItems(playerid);
			}
			f(string, "Вы забрали {7396FB}%s", ItemNames[ItemInfo[playerid][plrPrize][GetPVarInt(playerid, "RoulSelect")]]);
			SendInfo(playerid, string);
			switch(ItemInfo[playerid][plrPrize][GetPVarInt(playerid, "RoulSelect")])
			{
			case 0:_SetGun(playerid, 10, 1);
			case 1:_SetGun(playerid, 14, 1);
			case 2:_SetGun(playerid, 17, 10);
			case 3:_SetGun(playerid, 43, 100);
			case 4:_SetGun(playerid, 11, 1);
			case 5:_SetGun(playerid, 1, 1);
			case 6:SlotValue[playerid][15] += 20;
			case 7://blue case
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000081;
				}
			case 8:GiveMoney(playerid, 10*DONATE_VALUE, "Roulette Prize");
			case 9:PlayerInfo[playerid][pVirMoney] += 50;
			case 10:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19033;
				}
			case 11:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19069;
				}
			case 12:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19554;
				}
			case 13:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19104;
				}
			case 14:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19350;
				}
			case 15:PlayerInfo[playerid][pVirMoney] += 200;
			case 16://pink case
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000082;
				}
			case 17://green case
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000083;
				}
			case 18://gold case
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000084;
				}
			case 19://skiey case
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000085;
				}
			case 20://purple case
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000086;
				}
			case 21://red case
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000087;
				}
			case 22://black case
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000088;
				}
			case 23:PlayerInfo[playerid][pVirMoney] += 1000;
			case 24:
				{
					GiveMoney(playerid, 600*DONATE_VALUE, "Roulette Prize #24");
					new logtime[3],logdate[3],logtimestring[16];
					getdate(logdate[2],logdate[1],logdate[0]);
					gettime(logtime[0],logtime[1],logtime[2]);
					f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
					WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Выиграл в рулетке (№24)",600*DONATE_VALUE,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
				}
			case 25:return SendError(playerid, "В данный момент этот приз забрать невозможно");
			case 26://red deagle
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000001;
				}
			case 27://red ak47
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000011;
				}
			case 28://red shotgun
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000021;
				}
			case 29:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19487;
				}
			case 30:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19352;
				}
			case 31:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19319;
				}
			case 32:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19318;
				}
			case 33:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19317;
				}
			case 34:
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 19878;
					SendInfo(playerid, "Используйте {7396FB}ПКМ{FFFFFF}, чтобы кататься на скейте");
				}
			case 35://black deagle
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000002;
				}
			case 36://black ak47
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000012;
				}
			case 37://black shotgun
				{
					new slot = GetFreeSlot(playerid);
					if(slot == -1)return SendError(playerid, "У Вас нет места в инвентаре, чтобы поместить этот предмет");
					SlotValue[playerid][slot] = 100000000022;
				}
			}
			f(string, "DELETE FROM `roul_prizes` WHERE (`Prize` = '%d' AND `ID` = '%d')", ItemInfo[playerid][plrPrize][GetPVarInt(playerid, "RoulSelect")], ItemInfo[playerid][plrID][GetPVarInt(playerid, "RoulSelect")]);
			mysql_query(mysql, string, false);
			DeletePVar(playerid, "RoulSelect");
			LoadItems(playerid);
			return 1;
		}
		case 1235:
		{
			if(!response)return 1;
			new slot = listitem;
			if(GetMoney(playerid) < gBarPrice[slot]) return SendBotMessage(playerid, "Извини, приятель... Халявы тут нет");
			if(HouseEntered[playerid] == -1)
			{
				if(BizEntered[playerid] != -1)
				{
					if(BizInfo[BizEntered[playerid]][bProducts]<5)return SendBotMessage(playerid,"Извини, но у нас закончились продукты");
					GiveBizMoney(BizEntered[playerid], gBarPrice[slot]);
					GiveMoney(playerid,-gBarPrice[slot]);
					BizInfo[BizEntered[playerid]][bProducts]-=5;
				}
				else GiveMoney(playerid,-gBarPrice[slot]);
			}
			else
			{
				if(HouseInfo[HouseEntered[playerid]][hNoOwner] < 5)return SendError(playerid,"Не хватает продуктов, купить их можно в любой закусочной");
				HouseInfo[HouseEntered[playerid]][hNoOwner]-=5;
			}
			if(Fullness[playerid]+10>MAX_PLAYER_SATIETY(playerid))SetFullness(playerid, MAX_PLAYER_SATIETY(playerid));
			else SetFullness(playerid, Fullness[playerid]+10);
			SendBarBot(playerid);
			ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.1,0,0,0,0,0,1);
			J_SetPlayerDrunkLevel(playerid,J_GetPlayerDrunkLevel(playerid) + 300);
			if(QuestProgress[playerid][6] < QI[6][LastProgress] && AcceptQuest[playerid][6] == 1)QuestProgress[playerid][6] ++;
			if(QuestProgress[playerid][6] >= QI[6][LastProgress] && QuestProgress[playerid][6] < 10000){
				PlayerInfo[playerid][pTalents][0]++;
				SendInfo(playerid, "У Вас появились новые очки талантов");
				QuestProgress[playerid][6] = 10000;
			}
			return 1;
		}
		case 228:
		{
		    if(response)
		    {
		        PanelPlayerID[PanelPlayerID[playerid]] = playerid;
				CreditMoney[PanelPlayerID[playerid]] = CreditMoney[playerid];
				format(string, sizeof string, "{ffffff}Банк предлагает вам кредит в размере $%d под %d процентов\n{C9EAFF}Процентная ставка может измениться\n\n{43CD80}Вы согласны на такие условия?",CreditMoney[playerid], GLS[0]);
				ShowPlayerDialogEx(PanelPlayerID[playerid], 1231, 0 ,"Подтверждение", string, "Да", "Нет");
				SendClientMessage(playerid, COLOR_ORANGE, "Ожидайте подтверждения клиента");
		    }
		    else ShowBankMenu(playerid);
		}
		case 229:
		{
		    if(response)
		    {
				new money = strval(inputtextsave);
				if(money > 0 && PlayerInfo[playerid][pBank] >= money)
				{
				    if(money <= PlayerInfo[playerid][pCredit])
				    {
					    GiveBankMoney(playerid, -money);
					    PlayerInfo[playerid][pCredit] -= money;
					    OrgInfo[TEAM_BANK][oBank]+=money;
					    SaveOrg(TEAM_BANK);
					    format(string,sizeof(string),"[Информация] {FFFFFF}Вы погасили кредит на $%d",money);
					    SendClientMessage(playerid, COLOR_VALIK, string);
					    SendBankBot(playerid);
					    if(PlayerInfo[playerid][pCredit] <= 0)
					    {
					        PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
					        SendClientMessage(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Поздравляем! Вы полностью погасили кредит");
							PlayerInfo[playerid][pCredit_Default] = 0;
					    }
				    }
				    else SendError(playerid,"Сумма вашего кредита меньше, чем вы хотите заплатить");
				}
				else SendBotMessage(playerid,"На вашем банковском счету нет нужной суммы");
			}
			else ShowBankMenu(playerid);
		}
		case AREND_DIALOG:
		{
		    if(response)
		    {
		        new arid = GetArendCarID(GetPlayerVehicleID(playerid));
				new bizid = ArendInfo[arid][aBizid];
				new vehid = GetPlayerVehicleID(playerid);
       			new cost;
       			switch(GetVehicleModelEx(vehid))
			    {
			    case 454: cost = 10000;
				case 484: cost = 12000;
				case 558: cost = 9000;
				case 541: cost = 22000;
				case 560: cost = 13000;
				case 409: cost = 10000;
				case 462: cost = 250;
				case 469: cost = 15000;
				case 487: cost = 20000;
				default: cost = GLS[14];
				}
		        if(GetMoney(playerid) >= cost)
		        {
		            ArendKey[playerid] = arid;
		            ArendInfo[arid][aRentID] = playerid;
		            SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы арендовали этот транспорт");
		            SendClientMessage(playerid,COLOR_BLUE,"[Информация] {FFFFFF}Отказаться от аренды [/unrentcar]");
		            SendClientMessage(playerid,COLOR_BLUE,"[Информация] {FFFFFF}Закрыть транспорт [/jlock]");
					GiveMoney(playerid,-cost,"RentCar");
					if(bizid != INVALID_BIZ) GiveBizMoney(bizid,cost);
		        }
				else
				{
				    SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				    RemovePlayerFromVehicle(playerid);
				}
		    }
		    else RemovePlayerFromVehicle(playerid);
		    return true;
		}
		case 329:
		{
		    if(response)
		    {
			    switch(listitem)
			    {
			        case 0: GLS[0] = 1;
			        case 1: GLS[0] = 2;
			        case 2: GLS[0] = 3;
			        case 3: GLS[0] = 4;
			        case 4: GLS[0] = 5;
			        case 5: GLS[0] = 6;
			    }
			    format(string,sizeof(string),"Глава центрального банка %s установил кредитную ставку %d процентов",PlayerName[playerid],GLS[0]);
				SendClientMessageToAll(COLOR_GOLD,string);
				f(string, "{FFD700}Получение кредитa\n{FFD700}Кредитная ставка %d процентa(ов).\n{FFD700}Получить кредит можно через сотрудника банка",GLS[0]);
				UpdateDynamic3DTextLabelText(cretits, 0xFFFFFFFF, string);
			}
		}

		case 233:
		{
		    if(response)
		    {
		        if(PlayerInfo[playerid][pJob] != JOB_NONE) return SendBotMessage(playerid,"Сначала Вам нужно уволиться с работы (( /quitjob ))");
		    	switch(listitem)
			    {
					case 0:
					{
						GetJob[playerid] = JOB_MECHANIC;
						ShowPlayerDialogEx(playerid,28,0,"{43CD80}Работа: Механик","{FFFFFF}Вы собираетесь устроиться на работу Механиком\nВы согласны с условиями?","Да","Нет");
					}
					case 1:
					{
                        if(PlayerInfo[playerid][pCarLic] < YES_LICENSE) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = JOB_TAXI;
						ShowPlayerDialogEx(playerid,28,0,"{43CD80}Работа: Таксист","{FFFFFF}Вы собираетесь устроиться на работу Таксистом\nВы согласны с условиями?","Да","Нет");
					}
					case 2:
					{
						GetJob[playerid] = JOB_GUIDE;
						ShowPlayerDialogEx(playerid,28,0,"{43CD80}Работа: Крупье","{FFFFFF}Вы собираетесь устроиться на работу Крупье в казино\nВы согласны с условиями?","Да","Нет");
					}
					case 3:
					{
						if(PlayerInfo[playerid][pZKP] < 25) return SendBotMessage(playerid,"Чтобы работать в Налоговой нужно иметь законопослушность не меньше 25-ти");
						GetJob[playerid] = JOB_NALOG;
						ShowPlayerDialogEx(playerid,28,0,"{43CD80}Налоговая","{FFFFFF}Вы собираетесь устроиться в налоговую кантору\nВы согласны с условиями?","Да","Нет");
					}
					case 4:
					{
                        if(PlayerInfo[playerid][pCarLic] < YES_LICENSE) return SendBotMessage(playerid,"У вас нет водительских прав");
						if(PlayerInfo[playerid][pZKP] < 25) return SendBotMessage(playerid,"Чтобы работать инкассатором нужно иметь законопослушность не меньше 25-ти");
						GetJob[playerid] = JOB_COLLECTOR;
						ShowPlayerDialogEx(playerid,28,0,"{43CD80}Работа: Инкассатор","{FFFFFF}Вы собираетесь устроиться на работу Инкассатором\nВы согласны с условиями?","Да","Нет");
					}
					case 5:
					{
                        if(PlayerInfo[playerid][pCarLic] < YES_LICENSE) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = JOB_TRUCKER;
						ShowPlayerDialogEx(playerid,28,0,"{43CD80}Работа: Дальнобойщик","{FFFFFF}Вы собираетесь устроиться на работу Дальнобойщиком\nВы согласны с условиями?","Да","Нет");
					}
					case 6:
					{
                        if(PlayerInfo[playerid][pCarLic] < YES_LICENSE) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = JOB_SCRAPER;
						ShowPlayerDialogEx(playerid,28,0,"{43CD80}Работа: Металлоломщик","{FFFFFF}Вы собираетесь устроиться на работу Металлоломщиком\nВы согласны с условиями?","Да","Нет");
					}
					case 7:
					{
                        if(PlayerInfo[playerid][pCarLic] < YES_LICENSE) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = 1;
						ShowPlayerDialogEx(playerid,28,0,"{43CD80}Работа: Водитель автобуса","{FFFFFF}Вы собираетесь устроиться на работу водителя автобуса\nВы согласны с условиями?","Да","Нет");
					}
					case 8:
					{
                        if(PlayerInfo[playerid][pCarLic] < YES_LICENSE) return SendBotMessage(playerid,"У вас нет водительских прав");
						GetJob[playerid] = 3;
						ShowPlayerDialogEx(playerid,28,0,"{43CD80}Работа: развозчик продуктов","{FFFFFF}Вы собираетесь устроиться на работу развозчика продуктов\nВы согласны с условиями?","Да","Нет");
					}
					case 9:
					{
					    if(PlayerInfo[playerid][pZKP] < 25) return SendBotMessage(playerid,"Чтобы работать адвокатом нужно иметь законопослушность не меньше 25-ти");
						GetJob[playerid] = JOB_ADVOKAT;
						ShowPlayerDialogEx(playerid,28,0,"{43CD80}Работа: адвокат","{FFFFFF}Вы собираетесь устроиться на работу адвоката\nВы согласны с условиями?","Да","Нет");
					}

				}
			}
		}
		case 235:
		{
			if(response)ShowMenu(playerid);
		}
		case 236:
		{
		    if(response)
			{
			    new bizzid = GoFuel[listitem][gfBizzID];
			    if(BizInfo[bizzid][bProducts] >= 50000)
			    {
		            SendError(playerid,"На этой АЗС достаточно топлива");
     				ShowPlayerAZS(playerid);
				}
				else
				{
					if(listitem == GetPVarInt(playerid, "LastGoPost")){
						SendError(playerid, "Вы недавно доставляли топливо для этой АЗС");
						ShowPlayerAZS(playerid);
						return 1;
					}
					PlayerGoPost[playerid] = listitem;
					TogglePlayerDynamicCP(playerid,GoFuelCP[listitem], true);
					ShowPlayerDialogEx(playerid,0,0,"{43CD80}","{FFFFFF}Отвезите груз на точку!\nМесто обозначено красным маркером","Принять","");
					SelectPost[playerid] = listitem;
					SetPVarInt(playerid, "LastGoPost", listitem);
				}
		    }
		}
		case TIR_DIALOG: if(response) ShowTirDialog(playerid);
	    case TIR_DIALOG+1:
	    {
	        if(response)
			{
				if(GetMoney(playerid) < TGunInfo[listitem][tgCost] && GetPlayerVirtualWorld(playerid)!=2 && GetPlayerVirtualWorld(playerid)!=3) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				ResetPlayerWeapons(playerid);
				PlayerTir[playerid] = TirPlayer[playerid];
				new tir = PlayerTir[playerid];
				TargetCount[playerid] = 0;
				TargetShots[playerid] = 0;
				TirBusy[tir] = true;
				TimerTime[playerid] = 10000;
				if(TargetTimer[tir] != -1) KillTimer(TargetTimer[tir]);
				TargetTimer[tir] = SetTimerEx("MoveTarget", 1000, false, "i", playerid);
				TirGun[playerid] = TGunInfo[listitem][tgGunid];
				GiveMoney(playerid,-TGunInfo[listitem][tgCost],"Tir");
				UpdateDynamic3DTextLabelText(TirText[tir],COLOR_GOLD,"ТИР\n\n{D94141}Это место занято");
				TextDrawShowForPlayer(playerid, TirBGDraw);
			}
	    }
	    case 240:
		{
		    if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            if(PlayerInfo[playerid][pRank] >= 4)
			            {
			                if(GetTeamID(playerid) == TEAM_FBI)
							{
					            ShowPlayerDialogEx(playerid, 241, 2, "{43CD80}Подтверждение","\
					            - Наркоман\n\
								- Человек в панаме\n\
								- Уборщик 1\n\
								- Уборщик 2\n\
								- Рабочий 1\n\
								- Рабочий 2\n\
								- Турист 1 \n\
								- Турист 2\n\
								- Гольфер\n\
								- Фермер\n\
								- Фермер (Жен.)\n\
								- Гражданский 1\n\
								- Гражданский 2\n\
								- Гражданский 3\n\
								- Гражданский 4 \n\
								- Гражданский 5\n\
								","Выбор","Назад");
							}
						}
						else SendError(playerid,"Ваш ранг недостаточно высок");
			        }
			        case 1:
			        {
			            if(PlayerInfo[playerid][pRank] >= 6)
			            {
			                if(GetTeamID(playerid) == TEAM_FBI)
							{
					            ShowPlayerDialogEx(playerid, 242, 2, "{43CD80}Подтверждение","\
					            - Стрит рейсер 1\n\
								- Стрит рейсер 2\n\
								- Гроув стрит 1\n\
								- Гроув стрит 2\n\
								- Вагос 1\n\
								- Вагос 2\n\
								- Баллас 1\n\
								- Баллас 2\n\
								- Коронос 1\n\
								- Коронос 2\n\
								- Рифа 1\n\
								- Рифа 2\n\
								- Байкер 1\n\
								- Байкер 2\n\
								- Крипс 1\n\
								- Крипс 2\n\
					            ","Выбор","Назад");
							}
			            }
			            else SendError(playerid,"Ваш ранг недостаточно высок");
			        }
			        case 2://ляка
			        {
			            if(PlayerInfo[playerid][pRank] >= 9)
			            {
			                if(GetTeamID(playerid) == TEAM_FBI)
							{
					            ShowPlayerDialogEx(playerid, 243, 2, "{43CD80}Подтверждение","\
					            - Стрит рейсер (Лид.)\n\
								- Гроув стрит (Лид.)\n\
								- Вагос (Лид.)\n\
								- Баллас (Лид.)\n\
								- Коронос (Лид.)\n\
								- Рифа (Лид.)\n\
								- Байкер (Лид.)\n\
								- Крипс (Лид.)\n\
								- Р.М. 1\n\
								- Р.М. 2\n\
								- Р.М. (Лид.)\n\
								- LCN. 1\n\
								- LCN. 2\n\
								- LCN. (Лид.)\n\
								- Якудза 1\n\
								- Якудза 2\n\
								- Якудза (Лид.)\n\
								- Полиция 1\n\
								- Полиция 2\n\
								- Полиция (Лид.)\n\
								- Армеец\n\
					            ","Выбор","Назад");
							}
			            }
			            else SendError(playerid,"Ваш ранг недостаточно высок");
					}
					case 3:
					{
					    TeamDuty[playerid]=true;
					    Vnedren[playerid]=0;
					    SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
					    SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
					    SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы переоделись в служебную одежду");
					}
			    }
			}
		}
		case 241:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSkinEx(playerid, 1);
					case 1: SetPlayerSkinEx(playerid, 2);
					case 2: SetPlayerSkinEx(playerid, 8);
					case 3: SetPlayerSkinEx(playerid, 42);
					case 4: SetPlayerSkinEx(playerid, 16);
					case 5: SetPlayerSkinEx(playerid, 27);
					case 6: SetPlayerSkinEx(playerid, 26);
					case 7: SetPlayerSkinEx(playerid, 35);
					case 8: SetPlayerSkinEx(playerid, 37);
					case 9: SetPlayerSkinEx(playerid, 34);
					case 10: SetPlayerSkinEx(playerid, 31);
					case 11: SetPlayerSkinEx(playerid, 3);
					case 12: SetPlayerSkinEx(playerid, 6);
					case 13: SetPlayerSkinEx(playerid, 15);
					case 14: SetPlayerSkinEx(playerid, 18);
					case 15: SetPlayerSkinEx(playerid, 19);
		        }
		        SetPlayerColor(playerid,0xEFEFF710);
	         	J_SetPlayerArmour(playerid, 0);
	    		PlayerInfo[playerid][pShield] = 0.0;
				if(UsingShield[playerid])RemovePlayerAttachedObject(playerid, 6);
		    }
		    else ShowPlayerDialogEx(playerid, 240, 2, "{43CD80}Подтверждение", "{7396FB}-{FFFFFF} Стандарт [4+]\n{7396FB}-{FFFFFF} Средний [6+]\n{7396FB}-{FFFFFF} Высший [9]\n{7396FB}-{FFFFFF} Переодеться в служебную одежду", "Выбор", "Отмена");
		}
		case 242:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSkinEx(playerid, 67);
					case 1: SetPlayerSkinEx(playerid, 60);
					case 2:
					{
						SetPlayerSkinEx(playerid, 105);
						SetPlayerColor(playerid,0x009327FF);
						Vnedren[playerid]=11;
					}
					case 3:
					{
						SetPlayerSkinEx(playerid, 106);
						SetPlayerColor(playerid,0x009327FF);
						Vnedren[playerid]=11;
					}
					case 4:
					{
						SetPlayerSkinEx(playerid, 108);
						SetPlayerColor(playerid,0xD1DB1CFF);
						Vnedren[playerid]=12;
					}
					case 5:
					{
						SetPlayerSkinEx(playerid, 109);
						SetPlayerColor(playerid,0xD1DB1CFF);
						Vnedren[playerid]=11;
					}
					case 6:
					{
						SetPlayerSkinEx(playerid, 102);
						SetPlayerColor(playerid,0x930080FF);
						Vnedren[playerid]=13;
					}
					case 7:
					{
						SetPlayerSkinEx(playerid, 103);
                        SetPlayerColor(playerid,0x930080FF);
                        Vnedren[playerid]=13;
					}
					case 8:
					{
						SetPlayerSkinEx(playerid, 114);
						SetPlayerColor(playerid,0x00FFE2FF);
						Vnedren[playerid]=14;
					}
					case 9:
					{
						SetPlayerSkinEx(playerid, 116);
						SetPlayerColor(playerid,0x00FFE2FF);
						Vnedren[playerid]=14;
					}
					case 10:
					{
						SetPlayerSkinEx(playerid, 174);
						SetPlayerColor(playerid,0x238C8CFF);
						Vnedren[playerid]=15;
					}
					case 11:
					{
						SetPlayerSkinEx(playerid, 175);
						SetPlayerColor(playerid,0x238C8CFF);
						Vnedren[playerid]=15;
					}
					case 12:
					{
						SetPlayerSkinEx(playerid, 181);
						SetPlayerColor(playerid,0xBA541DFF);
						Vnedren[playerid]=19;
					}
					case 13:
					{
						SetPlayerSkinEx(playerid, 248);
						SetPlayerColor(playerid,0xBA541DFF);
						Vnedren[playerid]=19;
					}
					case 14: SetPlayerSkinEx(playerid, 221);
					case 15: SetPlayerSkinEx(playerid, 293);
		        }
		        J_SetPlayerArmour(playerid, 0);
	    		PlayerInfo[playerid][pShield] = 0.0;
				if(UsingShield[playerid])RemovePlayerAttachedObject(playerid, 6);
		    }
		    else ShowPlayerDialogEx(playerid, 240, 2, "{43CD80}Подтверждение", "{7396FB}-{FFFFFF} Стандарт [4+]\n{7396FB}-{FFFFFF} Средний [6+]\n{7396FB}-{FFFFFF} Высший [9]\n{7396FB}-{FFFFFF} Переодеться в служебную одежду", "Выбор", "Отмена");
		}
		case 243:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPlayerSkinEx(playerid, 23);
					case 1:
					{
						SetPlayerSkinEx(playerid, 270);
						SetPlayerColor(playerid,0x009327FF);
						Vnedren[playerid]=11;
					}
					case 2:
					{
						SetPlayerSkinEx(playerid, 110);
						SetPlayerColor(playerid,0xD1DB1CFF);
						Vnedren[playerid]=12;
					}
					case 3:
					{
						SetPlayerSkinEx(playerid, 104);
						SetPlayerColor(playerid,0x930080FF);
						Vnedren[playerid]=13;
					}
					case 4:
					{
						SetPlayerSkinEx(playerid, 115);
                        SetPlayerColor(playerid,0x00FFE2FF);
                        Vnedren[playerid]=14;
					}
					case 5:
					{
					    SetPlayerSkinEx(playerid, 173);
					    SetPlayerColor(playerid,0x238C8CFF);
					    Vnedren[playerid]=15;
					}
					case 6:
					{
						SetPlayerSkinEx(playerid, 247);
						SetPlayerColor(playerid,0xBA541DFF);
						Vnedren[playerid]=19;
					}
					case 7: SetPlayerSkinEx(playerid, 143);
					case 8:
					{
					    SetPlayerSkinEx(playerid, 272);
					    SetPlayerColor(playerid,0x336699FF);
					    Vnedren[playerid]=16;
					}
					case 9:
					{
						SetPlayerSkinEx(playerid, 112);
						SetPlayerColor(playerid,0x336699FF);
						Vnedren[playerid]=16;
					}
					case 10:
					{
						SetPlayerSkinEx(playerid, 46);
						SetPlayerColor(playerid,0x336699FF);
						Vnedren[playerid]=16;
					}
					case 11:
					{
						SetPlayerSkinEx(playerid, 124);
						SetPlayerColor(playerid,0x993366FF);
						Vnedren[playerid]=18;
					}
					case 12:
					{
						SetPlayerSkinEx(playerid, 223);
						SetPlayerColor(playerid,0x993366FF);
						Vnedren[playerid]=18;
					}
					case 13:
					{
						SetPlayerSkinEx(playerid, 113);
						SetPlayerColor(playerid,0x993366FF);
						Vnedren[playerid]=18;
					}
					case 14:
					{
						SetPlayerSkinEx(playerid, 121);
						SetPlayerColor(playerid,0x960202FF);
						Vnedren[playerid]=17;
					}
					case 15:
					{
				 		SetPlayerSkinEx(playerid, 122);
                        SetPlayerColor(playerid,0x960202FF);
                        Vnedren[playerid]=17;
					}
					case 16:
					{
						SetPlayerSkinEx(playerid, 120);
                        SetPlayerColor(playerid,0x960202FF);
                        Vnedren[playerid]=17;
					}
					case 17:
					{
						SetPlayerSkinEx(playerid, 280);
						SetPlayerColor(playerid,0x0049FFFF);
					}
					case 18:
					{
						SetPlayerSkinEx(playerid, 288);
						SetPlayerColor(playerid,0x0049FFFF);
					}
					case 19:
					{
						SetPlayerSkinEx(playerid, 283);
						SetPlayerColor(playerid,0x0049FFFF);
					}
					case 20:
					{
						SetPlayerSkinEx(playerid, 287); //?????
						SetPlayerColor(playerid,0x996633FF);
					}
		        }
		        J_SetPlayerArmour(playerid, 0);
	    		PlayerInfo[playerid][pShield] = 0.0;
				if(UsingShield[playerid])RemovePlayerAttachedObject(playerid, 6);

		    }
		    else ShowPlayerDialogEx(playerid, 240, 2, "{43CD80}Подтверждение", "{7396FB}-{FFFFFF} Стандарт [4+]\n{7396FB}-{FFFFFF} Средний [6+]\n{7396FB}-{FFFFFF} Высший [9]\n{7396FB}-{FFFFFF} Переодеться в служебную одежду", "Выбор", "Отмена");
		}
		case 247:
		{
		    new carid = GetPlayerVehicleID(playerid);
		    if(carid != 0 && VehicleInfo[carid][vJob] == JOB_TAXI)
			{
		    	if(response)
		    	{
				    new driverid = GetVehicleSeat(carid, 0);
				    if(driverid != INVALID_PLAYER_ID && PlayerInfo[driverid][pJob] == JOB_TAXI)
				    {
						if(TaxiTarif[driverid] > 0)
						{
							if(PlayerAFKTime[driverid][0]>0)
							{
							    SendError(playerid,"Вы не можете сесть в такси, потому что водитель уснул");
							    ExitCar(playerid);
							    return 1;
							}
					        switch(listitem)
					        {
					            case 0:
					            {
                     				new gpsstr[1000];
									for(new i;i < sizeof(GpsInfo);i ++)
									{
									    format(string,sizeof(string),"%s\n",GpsInfo[i][gpsName]);
									    strcat(gpsstr,string);
									}
         							ShowPlayerDialogEx(playerid, 248, 2, "{43CD80}Выберите пункт", gpsstr, "Выбор", "Отмена");
					            }
					            case 1:
					            {
									SendInfo(playerid, "Откройте карту {7396FB}(Esc > Карта){ffffff} и отметьте на ней пункт назначения");
			                        Taxi_GO[playerid] = 1;
								}
					            case 2:
								{
									SendClientMessage(driverid, COLOR_LIGHTGREEN, "Пассажир решил самостоятельно объяснить Вам маршрут");
									Taxi_GO[playerid] = 2;
								}
					        }
						}
					}
				}
			    else
			    {
			        SendError(playerid,"Вы отказались от проезда");
			        RemovePlayerFromVehicle(playerid);
			        new driverid = GetVehicleSeat(carid, 0);
			    	if(driverid != INVALID_PLAYER_ID && PlayerInfo[driverid][pJob] == JOB_TAXI)
					{
					    format(string,sizeof(string),"%s отказался(ась) от проезда", PlayerName[playerid]);
					    SendClientMessage(driverid, COLOR_GRAY, string);
					}
			    }
			}
		}
		case 248:
		{
		    if(response)
		    {
		        new carid = GetPlayerVehicleID(playerid);
		        if(carid != 0 && VehicleInfo[carid][vJob] == JOB_TAXI)
				{
				    new driverid = GetVehicleSeat(carid, 0);
				    if(driverid != INVALID_PLAYER_ID && PlayerInfo[driverid][pJob] == JOB_TAXI)
				    {
						if(TaxiTarif[driverid] > 0)
						{
						    EnableGPSForPlayer(driverid,GpsInfo[listitem][gpsPos][0],GpsInfo[listitem][gpsPos][1],GpsInfo[listitem][gpsPos][2]);
						    format(string, sizeof(string), "%s выбрал(а) пункт '%s'", PlayerName[playerid], GpsInfo[listitem][gpsName]);
						    SendClientMessage(driverid, COLOR_VALIK, string);
						    format(string, sizeof(string), "Вы выбрали пункт '%s'", GpsInfo[listitem][gpsName]);
						    SendClientMessage(playerid, COLOR_VALIK, string);
						}
						else SendError(playerid,"Таксист ещё не установил тариф");
					}
					else SendError(playerid,"В такси нет водителя. Либо водитель не таксист");
				}
				else SendError(playerid,"Вы должны сидеть в такси");
		    }
		    else ShowPlayerDialogEx(playerid, 247, 2, "{43CD80}Как ехать?", "Выбрать пункт в GPS\nОтметить точку на карте\nОбъяснить таксисту самостоятельно", "Выбор", "Отмена");
		}
		case 249:
		{
		    if(response)
		    {
				if(strlen(inputtextsave) < 4) return ShowPlayerDialogEx(playerid, 249, 1,"", "{FFFFFF}Введите новый код безопасности\n\n{CC3B12}Ошибка: Длина кода безопасности должна быть не менее 4-х символов","Готово","Отмена");
				if(strlen(inputtextsave) > 10) return ShowPlayerDialogEx(playerid, 249, 1, "", "{FFFFFF}Введите новый код безопасности\n\n{CC3B12}Ошибка: Длина кода безопасности должна быть не менее 4-х символов","Готово","Отмена");
				if(strfind(inputtextsave, "0")!=-1) return SendError(playerid,"При создании нового кода безопасности нельзя использвать цифру '0'");

    			for(new i;i < strlen(inputtextsave);i ++)
				{
				    if(inputtextsave[i] < '0' || inputtextsave[i] > '9') return ShowPlayerDialogEx(playerid, 249, 1, "", "{FFFFFF}Введите {B83434}новый{FFFFFF} код безопасности\n\n{FF0000}Ошибка: Код безопасности может состоять только из цифр","Готово","Отмена");
				}
				PlayerInfo[playerid][pKey] = strval(inputtextsave);
				format(string, sizeof(string),"Ваш новый код безопасности: {B83434}%d", strval(inputtextsave));
				SendClientMessage(playerid, COLOR_LIME, string);
				ShowUpdateSettings(playerid);
		    }
		    else if(PlayerInfo[playerid][pKey] == 0) ShowUpdateSettings(playerid); else ShowKeySettings(playerid);
		}
		case 885:
		{
		    if(response)
		    {
		        if(strlen(inputtextsave)>5)
		        {
		            for(new i;i < strlen(inputtextsave);i ++)
					{
					    if(inputtextsave[i] < '0' || inputtextsave[i] > '9' || strval(inputtextsave) <= 0) return ShowPlayerDialogEx(playerid, 885, 1, "{43CD80}Подтверждение", "{FFFFFF}Введите {B83434}новый{FFFFFF} Pin-код\n\n{FF0000}Ошибка: Код безопасности может состоять только из цифр","Далее","Отмена");
					}
          			PlayerInfo[playerid][pOOC] = strval(inputtextsave);
          			format(string,sizeof(string),"{56A85E}Вы сменили свой пароль от банковской карты\nТеперь ваш пароль %d. Запишите его, чтобы не забыть",PlayerInfo[playerid][pOOC]);
          			ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
		        }
		        else ShowPlayerDialogEx(playerid, 885, 1, "{43CD80}Подтверждение", "{FFFFFF}Введите {B83434}новый{FFFFFF} Pin-код\nКод должен состоять из 6 символов","Далее","Отмена");

		    }
		}
		case 883:
		{
			if(response)
		    {
		        if(!strlen(inputtextsave)) ShowPlayerDialogEx(playerid, 883, 1, "{43CD80}Подтверждение", "{FFFFFF}Введите {B83434}ваш{FFFFFF} код безопасности","Далее","Отмена");
		        if(PlayerInfo[playerid][pOOC] == strval(inputtextsave)) ShowPlayerDialogEx(playerid, 885, 1, "{43CD80}Подтверждение", "{FFFFFF}Введите {B83434}новый{FFFFFF} Pin-код","Далее","Отмена");
		        else ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{D94141} Вы не правильно ввели свой PIN-код","Скрыть", "");
			}
			else if(PlayerInfo[playerid][pOOC] == 0) ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","У вас нет банковской карты. Получить ее можно в\nцентральном банке Los-Santos","Скрыть", "");
		}
		case 250:
		{
		    if(response)
		    {
		        if(!strlen(inputtextsave)) return ShowPlayerDialogEx(playerid, 250, 1, "", "{FFFFFF}Введите ваш код безопасности","Готово","Отмена");
		        if(PlayerInfo[playerid][pKey] == strval(inputtextsave)) ShowKeySettings(playerid);
		        else
		        {
		            SendClientMessage(playerid, COLOR_GRAY, "Неверный код безопасности, вы были кикнуты");
		            J_Kick(playerid);
		        }
		    }
			else ShowUpdateSettings(playerid);
		}
		case 251:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                PlayerInfo[playerid][pKey] = 0;
		                SendClientMessage(playerid, COLOR_VALIK, "Вы удалили код безопасности");
		                ShowUpdateSettings(playerid);
		            }
		            case 1:
					{
					    SendInfo(playerid,"С помощью экранной панели, введите ваш новый код безопасности");
					    SendInfo(playerid,"Код должен состоять от 4 до 9 символов. Включить/отключить код можно в настройках");
					    format(pclicklen[playerid],10,"");
						SetKlickNumbers();
						for(new i; i < 21; i++)TextDrawShowForPlayer(playerid,klick[i]);
					    pKlicked[playerid] = CreatePlayerTextDraw(playerid, 320.000000, 185.000000, "_");
						PlayerTextDrawLetterSize(playerid, pKlicked[playerid], 0.178927, 1.125548);
						PlayerTextDrawAlignment(playerid, pKlicked[playerid], 2);
						PlayerTextDrawColor(playerid, pKlicked[playerid], -6749953);
						PlayerTextDrawSetShadow(playerid, pKlicked[playerid], 0);
						PlayerTextDrawSetOutline(playerid, pKlicked[playerid], 0);
						PlayerTextDrawBackgroundColor(playerid, pKlicked[playerid], 51);
						PlayerTextDrawFont(playerid, pKlicked[playerid], 2);
						PlayerTextDrawSetProportional(playerid, pKlicked[playerid], 1);
						SelectTextDraw(playerid, 0xD94141AA);
						clickerstat[playerid]=1;
						Keychange[playerid]=1;
					}
		            case 2:
		            {
		                switch(PlayerInfo[playerid][pKeyCheck])
						{
						    case 0: PlayerInfo[playerid][pKeyCheck] = 1;
						    default: PlayerInfo[playerid][pKeyCheck] = 0;
						}
						ShowKeySettings(playerid);
		            }
		        }
			}
			else ShowUpdateSettings(playerid);
		}
		/*
		case 256:
		{
		    if(response)
		    {
		        if(IsARPName(inputtextsave))
		        {
					new name[25]; mysql_real_escape_string(inputtextsave, name);
					new query[256];
				    mysql_format(mysql, query, sizeof(query), "SELECT `ID` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1", name);
				    mysql_pquery(mysql, query, "MysqlCheckNameBuyName", "ds", playerid, name);
		        }
		        else ShowPlayerDialogEx(playerid,256,1,"Введите новый ник","{FF0000}Это не РП ник!\n\n{FFFFFF}Введите новый ник в окошко и нажмите {43CD80}Далее.\n\n{FFFFFF}Пример: {43CD80}Carl_Johnson","Далее","Выход");
		    }
		}*/
		case 258:
		{
		    if(response)
			{
			    new bizzid = GoGunShop[listitem][gsBizzID];
			    if(BizInfo[bizzid][bProducts] <= 49000)
			    {
					if(listitem == GetPVarInt(playerid, "LastGoPost")){
						SendError(playerid, "Вы недавно доставляли материалы для этого магазина");
						ShowPlayerGS(playerid);
						return 1;
					}
					if(FactoryInfo[fMaterials]<500)return SendError(playerid,"На складе завода не достаточно материалов");
					if(listitem == GetPVarInt(playerid, "LastGoPost")){
						SendError(playerid, "Вы недавно доставляли материалы для этого аммо");
						ShowPlayerGS(playerid);
						return 1;
					}
		            PlayerGoPost[playerid] = listitem;
					TogglePlayerDynamicCP(playerid, GoGunShopCP[listitem], true);
					ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{FFFFFF}Отвезите груз на точку!\nМесто обозначено красным маркером","Принять","");
					Streamer_Update(playerid);
					SelectPost[playerid] = listitem;
					FactoryInfo[fMaterials] -= 500;
     				format(string, sizeof(string), "На продаже {FF9900}%d материалов\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryInfo[fMaterials]);
					UpdateDynamic3DTextLabelText(FactoryText[0], COLOR_WHITE, string);
					SetPVarInt(playerid, "LastGoPost", listitem);
				}
				else
				{
				    SendError(playerid,"В этом оружейном магазине достаточно материалов");
     				InJob[playerid] = 1;
					ShowPlayerGS(playerid);
				}
		    }
		}
		case 259:
		{
		    new offer = LawyerOffer[playerid];
		    if(offer == INVALID_PLAYER_ID) return SendError(playerid,"Видимо адвокат отказался от своего предложения");
			if(!IsPlayerConnected(offer)) return SendError(playerid,"Адвокат вышел с игры");
			if(LawyerOffer[offer] != playerid) return SendError(playerid,"Видимо адвокат отказался от своего предложения");
			if(response)
			{
	            ShowPlayerDialogEx(playerid, 260, 2, "{43CD80}Способ оплаты", "Наличными\nЧерез банк (+10 процентов)", "Выбор", "Отмена");
	            LawyerOffer[playerid] = offer;
	        }
	        else
			{
			    LawyerOffer[playerid] = INVALID_PLAYER_ID;
	            LawyerOffer[offer] = INVALID_PLAYER_ID;
			    SendError(playerid,"Вы отказались от услуг адвоката");
			    format(string, sizeof(string), "[Информация] {FFFFFF}%s отказался(лась) от ваших услуг", Name(playerid));
			    SendClientMessage(offer, COLOR_GRAY, string);
			}
		}
		case 260:
		{
		    new offer = LawyerOffer[playerid];
		    if(offer == INVALID_PLAYER_ID) return SendError(playerid,"Видимо адвокат отказался от своего предложения");
			if(!IsPlayerConnected(offer)) return SendError(playerid,"Адвокат вышел с игры");
			if(LawyerOffer[offer] != playerid) return SendError(playerid,"Видимо адвокат отказался от своего предложения");
			if(response)
			{
			    if(((GetMoney(playerid) < PlayerInfo[playerid][pBailPrice]) && listitem == 0) || ((PlayerInfo[playerid][pBank] < floatround(PlayerInfo[playerid][pBailPrice] * 1.1) && listitem==1)))
			    {
			        LawyerOffer[playerid] = INVALID_PLAYER_ID;
		            LawyerOffer[offer] = INVALID_PLAYER_ID;
				    SendError(playerid,"Вы отказались от услуг адвоката из-за нехватки денег");
				    format(string, sizeof(string), "[Информация] {FFFFFF}%s отказался(лась) от ваших услуг из-за нехватки денег", Name(playerid));
				    SendClientMessage(offer, COLOR_GRAY, string);
				    return 1;
			    }
		        if(listitem == 0) { GiveMoney(playerid, -PlayerInfo[playerid][pBailPrice]);}
		        else if(listitem == 1) GiveBankMoney(playerid, -floatround(PlayerInfo[playerid][pBailPrice] * 1.1) );
		        GiveMoney(offer, PlayerInfo[playerid][pBailPrice]/10, "Free");
				OrgInfo[GLS[13]][oBank] += (PlayerInfo[playerid][pBailPrice] - PlayerInfo[playerid][pBailPrice]/10);

				format(string, sizeof(string), "[Информация] {FFFFFF}Вы заплатили $%d адвокату %s за сокращение срока вдвое. Остальная сумма пошла в казну штата", PlayerInfo[playerid][pBailPrice]/10,Name(offer));
				SendClientMessage(playerid, COLOR_VALIK, string);
				format(string, sizeof(string), "[Информация] {FFFFFF}%s заплатил вам $%d за сокращение срока вдвое", Name(playerid), PlayerInfo[playerid][pBailPrice]);
				SendClientMessage(offer, COLOR_VALIK, string);

				new newtime = floatround(PlayerInfo[playerid][pJailTime]/2);
				PlayerInfo[playerid][pJailTime]-= newtime;

				OldFreePlayer[offer] = playerid;
	            LawyerOffer[playerid] = INVALID_PLAYER_ID;
	            LawyerOffer[offer] = INVALID_PLAYER_ID;
	        }
	        else
			{
			    LawyerOffer[playerid] = INVALID_PLAYER_ID;
	            LawyerOffer[offer] = INVALID_PLAYER_ID;
			    SendError(playerid,"Вы отказались от услуг адвоката");
			    format(string, sizeof(string), "[Информация] {FFFFFF}%s отказался(лась) от ваших услуг", Name(playerid));
			    SendClientMessage(offer, COLOR_GRAY, string);
			}
		}
		case 263:
		{
		    if(response)
			{
			    if(listitem < 5)
			    {
					new fish = PlayerFish[playerid][listitem];
					if(fish != 0)
					{
					    format(string, sizeof(string), "Вы выбросили %s массой %d Kg", FishName[fish], FishMassa[playerid][listitem]);
					    SendClientMessage(playerid, COLOR_VALIK, string);
					    PlayerFish[playerid][listitem] = 0;
					    FishMassa[playerid][listitem] = 0;
					}
				}
				else
				{
				    for(new i; i < 5; i++)
				    {
				        PlayerFish[playerid][i] = 0;
					    FishMassa[playerid][i] = 0;
				    }
				    SendClientMessage(playerid, COLOR_VALIK, "Вы выбросили всю рыбу");
				}
			}
		}
		case 266:
		{
			if(response)
			{
	            switch(listitem)
	            {
	                case 0:
                    {
                        RespawnCars(1, ADD_VEHICLES);
                        SendClientMessage(playerid, COLOR_VALIK, "Вы зареспавнили весь транспорт");
                        format(string,sizeof(string),"[A] Администратор %s[%d] заспавнил весь транспорт",PlayerName[playerid],playerid);
						SendAdminsMessage(COLOR_GRAY,string);
                    }
                    case 1:
                    {
                        RespawnCars(ArendCar[0], ArendCar[ARENDCARS-1]);
                        SendClientMessage(playerid, COLOR_VALIK, "Вы зареспавнили транспорт для аренды");
                        format(string,sizeof(string),"[A] Администратор %s[%d] заспавнил транспорт для аренды",PlayerName[playerid],playerid);
						SendAdminsMessage(COLOR_GRAY,string);
                    }
                    case 2:
                    {
                        RespawnCars(OwnableCar[0], OwnableCar[MAX_OWNABLECARS-1]);
                        SendClientMessage(playerid, COLOR_VALIK, "Вы зареспавнили транспорт игроков");
                        format(string,sizeof(string),"[A] Администратор %s[%d] заспавнил транспорт игроков",PlayerName[playerid],playerid);
						SendAdminsMessage(COLOR_GRAY,string);
                    }
	            }
			}
		}
		case 265:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: callcmd::ahelp(playerid);
				case 1: callcmd::admins(playerid);
				case 2:
					{
						if(PlayerInfo[playerid][pAdmin] < 4) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						ClearChatToAll();
						format(string,sizeof(string),"Администратор %s очистил чат",PlayerName[playerid]);
						SendAdminsMessage(COLOR_LIGHTBLUE,string);
						return true;
					}
				case 3:
					{
						if(PlayerInfo[playerid][pAdmin] < 3) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						for(new i = 1, j = GetVehiclePoolSize(); i <= j; i++)Fuel[i] = 80;
						SendClientMessage(playerid,COLOR_GRAY,"Вы заправили все автомобили");
					}
				case 4:
					{
						if(PlayerInfo[playerid][pAdmin] < 2) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						foreach(Player, i)
						{
							if(PlayerInfo[i][pRank] >= 7 && PlayerInfo[i][pExp] <= 20)
							{
								format(string,sizeof(string),"Ник: %s[%d]\t<%d отыгранных часов>\t<Организация: %s\t[Ранг %d]>\n ",PlayerName[i],i,PlayerInfo[i][pExp],OrgInfo[GetTeamID(i)][oName],PlayerInfo[i][pRank]);
								ShowPlayerDialogEx(playerid,0,0,"Блатеры",string,"Принять","");
							}
						}
					}
				case 5:
					{
						callcmd::spawn(playerid, "");
						callcmd::apanel(playerid);
					}
				case 6:
					{
						if(PlayerInfo[playerid][pAdmin] < 2) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						if(IsPlayerInAnyVehicle(playerid)) return J_RepairVehicle(GetPlayerVehicleID(playerid));
					}
				case 7:
					{
						if(PlayerInfo[playerid][pAdmin] < 3) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						ShowPlayerDialogEx(playerid,266,2,"Транспорт","Весь транспорт\nДля аренды\nТранспорт игроков","Принять","Отмена");
					}
				case 8:
					{
						if(PlayerInfo[playerid][pAdmin] < 3) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						new Name[24];
						new Cache:result = mysql_query(mysql, "SELECT `Name` FROM `bannames` ORDER BY `ID` DESC LIMIT 0 , 20");
						new accounts = cache_get_row_count(mysql);
						if(accounts == 0) return SendError(playerid, "Список забаненных пуст");
						FirstBL[playerid] = 0;
						for(new i; i < accounts; i ++)
						{
							cache_get_row(i, 0, Name, mysql);
							format(string, sizeof(string), "%s%s\n", string, Name);
						}
						if(accounts == 20) format(string, sizeof(string), "%s{AFAFAF}Далее >>>\n", string);
						cache_delete(result, mysql);
						if(!ShowPlayerDialogEx(playerid, 96, 2, "{43CD80}Забаненые", string, "Выбор", "Назад"))SendClientMessage(playerid, COLOR_GRAY, "Недоступно в данный момент");
						return true;
					}
				case 9:
					{
						if(PlayerInfo[playerid][pAdmin] < 4) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						new str[200];
						strcat(string, "Фракция\tНикнейм\n");
						for(new x = 1; x < MAX_ORGS; x ++)
						{
							format(str,sizeof(str),"{C9EAFF}[%d] {FFFFFF}%s\t{9ACD32}%s\n",x, OrgInfo[x][oName],OrgInfo[x][oLeader]);
							strcat(string,str);
						}
						ShowPlayerDialogEx(playerid,206,5,"{43CD80}Список лидеров",string,"{D94141}Снять","{56A85E}Отмена");
						return true;
					}
				case 10:
					{
						if(PlayerInfo[playerid][pAdmin] < 8) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						PayDay();
					}
				case 11:
					{
					    if(PlayerInfo[playerid][pAdmin] < 8) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						ShowPlayerDialogEx(playerid,951,2,"Информация","{7396FB}[Включить/Выключить] {ffffff}EXP (x2)\n{7396FB}[Включить/Выключить] {ffffff}Донат (x2)\n{7396FB}[Включить/Выключить] {ffffff}Анти-FakeSkill\n{7396FB}[Включить/Выключить] {ffffff}Казино\n{7396FB}[Включить/Выключить] {ffffff}Конкурс\n{7396FB}[Включить/Выключить] {ffffff}Античит на Оружие\n{7396FB}[Включить/Выключить] {ffffff}Аим-Крашер\n{7396FB}[Включить/Выключить] {ffffff}PayDay(x5)\n[Сохранить] Сервер\n[INFO] Дома с деньгами\n{EE6363}[!]{FFFFFF} Перезапустить бизнесы\n{EE6363}[!]{FFFFFF} Пополнить склады бизнесов\nДругое для адм","Принять","Отмена");
					}
				case 12:
					{
					    if(PlayerInfo[playerid][pAdmin] < 3) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
					    callcmd::monitorbilbord(playerid);
					}
				case 13:
					{
					    if(PlayerInfo[playerid][pAdmin] < 5) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
					    callcmd::fullorgs(playerid);
					}
				case 14:
					{
					    if(PlayerInfo[playerid][pAdmin] < 5) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						callcmd::adminsall(playerid);
					}
				case 15:
					{
					    return SendError(playerid,"В разработке");
					}
				case 16:
					{
						if(PlayerInfo[playerid][pAdmin] < 5) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
					    callcmd::fullferms(playerid);
					}
				case 17:
				    {
				        if(PlayerInfo[playerid][pAdmin] < 4) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						aReportDells();
						format(string,sizeof(string),"[A] Администратор %s очистил список репортов",PlayerName[playerid]);
						SendAdminsMessage(COLOR_GRAY,string);
				    }
				case 18:
					{
						if(PlayerInfo[playerid][pAdmin] < 8) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
					    ShowPlayerDialogEx(playerid,2374,DIALOG_STYLE_LIST,"{D94141}Управление промо-акциями","\
						Статистика промо-акций\n\
						Добавить промо-код\n\
						{ff4400}Удалить промо-код","Выбрать","Закрыть");
					}
				case 19:
					{
						if(PlayerInfo[playerid][pAdmin] < 5) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						ReportID[playerid] = -1;
						for(new s = MAX_REQUESTS-1; s >= 0 ; s--)
						{
							if(!RequestInfo[s][req_Team]) continue;
							new i = RequestInfo[s][req_Slot];
							switch(i){
							case 1:format(string,sizeof string,"{ffffff}\
							Организация ID %d\n\n\
							Новое название: %s\n\
							Отправил заявку: %s", RequestInfo[s][req_Team], RequestInfo[s][req_Text], RequestInfo[s][req_Sender]);
							default:format(string,sizeof string,"{ffffff}\
							Организация ID %d\n\n\
							Новое название для %d ранга: %s\n\
							Отправил заявку: %s", RequestInfo[s][req_Team], RequestInfo[s][req_Slot]-1, RequestInfo[s][req_Text], RequestInfo[s][req_Sender]);
							}
							ShowPlayerDialogEx(playerid,8021,0,"Подтверждение",string,"Подтвердить","Отказать");
							RequestID[playerid] = s;
							break;
						}
						if(RequestID[playerid] == -1) return SendError(playerid, "Очередь заявок пуста");
					}
				case 20:
					{
						if(PlayerInfo[playerid][pAdmin] < 3) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
						SendInfo(playerid, "{FF4400}Статистика обнуляется каждый месяц 15 числа");
						ShowPlayerDialogEx(playerid, 115, 2, "", "[3] Статистика по лидерам\n{FF4400}[5] Статистика по администраторам", "Далее", "Отмена");
					}
				}
			}
		}
		case 115:
		{
			if(!response)return callcmd::apanel(playerid);
			if(listitem == 0){
				new str[200];
				strcat(string, "Фракция\tНикнейм\n");
				for(new x = 1; x < MAX_ORGS; x ++)
				{
					format(str,sizeof(str),"{C9EAFF}[%d] {FFFFFF}%s\t{9ACD32}%s\n",x, OrgInfo[x][oName],OrgInfo[x][oLeader]);
					strcat(string,str);
				}
				ShowPlayerDialogEx(playerid,116,5,"{43CD80}Список лидеров",string,"Подробнее","Назад");
				SendInfo(playerid, "{FFCB8C}Выгружается статистика за последние 10 дней");
				return true;
			}else{
				if(PlayerInfo[playerid][pAdmin] < 5) return SendError(playerid,"Отказано в доступе"),callcmd::apanel(playerid);
				new Cache:result = mysql_query(mysql, "SELECT NickName FROM accounts WHERE Admin > 0 ORDER BY Admin DESC", true);
				new totalMembers = cache_num_rows();
				if(totalMembers)
				{
					new membername[MAX_PLAYER_NAME];
					for(new i = 0; i < totalMembers; i++)
					{
						cache_get_field_content(i, "NickName", membername, mysql);
						format(string, sizeof(string), "%s %s\n", string, membername);
					}
					ShowPlayerDialogEx(playerid, 120, 2, "Список администраторов", string, "Скрыть", "");
					SendInfo(playerid, "{FFCB8C}Выгружается статистика за последние 10 дней");
				}
				cache_delete(result, mysql);
			}		
		}
		case 116:
		{
			if(!response)return ShowPlayerDialogEx(playerid, 115, 2, "", "[3] Статистика по лидерам\n{FF4400}[5] Статистика по администраторам", "Далее", "Отмена");
			new number = listitem + 1;
			new id = GetPlayerID(OrgInfo[number][oLeader]);
			f(string, "SELECT * FROM `onlineinfo` WHERE `Name` = '%s' ORDER BY `ID` DESC LIMIT 10;", OrgInfo[number][oLeader]);
			new Cache:result = mysql_query(mysql, string, true);
			new rows = cache_get_row_count(mysql);
			new date[3], getipp[24], time[2];
			string = "";
			strcat(string, "Дата\tIP-адрес\tОтыграл\tБыл на паузе\n");
			for(new i; i < rows; i++){
				cache_get_row(i, 2, getipp, mysql, 24);
				date[0] = cache_get_field_content_int(i, "Day", mysql);
				date[1] = cache_get_field_content_int(i, "Month", mysql);
				date[2] = cache_get_field_content_int(i, "Year", mysql);
				time[0] = cache_get_field_content_int(i, "Time", mysql);
				time[1] = cache_get_field_content_int(i, "Pause", mysql);
				if(id != INVALID_PLAYER_ID && i == 0)f(string, "%s{FFFFFF}%02d-%02d-%d\t{FFCB8C}%s\t{56A85E}%s [В игре]\t{D94141}%s\n", string, date[0], date[1], date[2], getipp, Convert(OnlineInfo[id][lTime]), Convert(OnlineInfo[id][lPause]));
				else f(string, "%s{FFFFFF}%02d-%02d-%d\t{FFCB8C}%s\t{56A85E}%s\t{D94141}%s\n", string, date[0], date[1], date[2], getipp, Convert(time[0]), Convert(time[1]));
			}
			ShowPlayerDialogEx(playerid, 117, 5, OrgInfo[number][oLeader], string, "Скрыть", "");
			cache_delete(result, mysql);
		    return true;
		}
		case 120:
		{
			if(!response)return ShowPlayerDialogEx(playerid, 115, 2, "", "[3] Статистика по лидерам\n{FF4400}[5] Статистика по администраторам", "Далее", "Отмена");
			new Namez[25],idx;
			Namez = strtok(inputtextsave,idx);
			new id = GetPlayerID(Namez);
			f(string, "SELECT * FROM `onlineinfo` WHERE `Name` = '%s' ORDER BY `ID` DESC LIMIT 10;", Namez);
			new Cache:result = mysql_query(mysql, string, true);
			new rows = cache_get_row_count(mysql);
			new date[3], getipp[24], time[2];
			string = "";
			strcat(string, "Дата\tIP-адрес\tОтыграл\tБыл на паузе\n");
			for(new i; i < rows; i++){
				cache_get_row(i, 2, getipp, mysql, 24);
				date[0] = cache_get_field_content_int(i, "Day", mysql);
				date[1] = cache_get_field_content_int(i, "Month", mysql);
				date[2] = cache_get_field_content_int(i, "Year", mysql);
				time[0] = cache_get_field_content_int(i, "Time", mysql);
				time[1] = cache_get_field_content_int(i, "Pause", mysql);
				if(id != INVALID_PLAYER_ID && i == 0)f(string, "%s{FFFFFF}%02d-%02d-%d\t{FFCB8C}%s\t{56A85E}%s [В игре]\t{D94141}%s\n", string, date[0], date[1], date[2], getipp, Convert(OnlineInfo[id][lTime]), Convert(OnlineInfo[id][lPause]));
				else f(string, "%s{FFFFFF}%02d-%02d-%d\t{FFCB8C}%s\t{56A85E}%s\t{D94141}%s\n", string, date[0], date[1], date[2], getipp, Convert(time[0]), Convert(time[1]));
			}
			ShowPlayerDialogEx(playerid, 117, 5, Namez, string, "Скрыть", "");
			cache_delete(result, mysql);
		    return true;
		}
		case 117:return ShowPlayerDialogEx(playerid, 115, 2, "", "[3] Статистика по лидерам\n{FF4400}[5] Статистика по администраторам", "Далее", "Отмена");
		case 8021:
		{
			new s = RequestID[playerid];
			if(!response){
				f(string, "[A] %s[%d] отклонил заявку для фракции #%d. Текст заявки: %s", Name(playerid), playerid, RequestInfo[s][req_Team], RequestInfo[s][req_Text]);
				SendAdminsMessage(COLOR_LIGHTRED, string);
				ClearRequest(s);
				return callcmd::apanel(playerid);
			}
			f(string, "[A] %s[%d] одобрил заявку для фракции #%d. Текст заявки: %s", Name(playerid), playerid, RequestInfo[s][req_Team], RequestInfo[s][req_Text]);
			SendAdminsMessage(COLOR_LIGHTRED, string);
			new i = RequestInfo[s][req_Slot];
			new team = RequestInfo[s][req_Team];
			switch(i){
			case 1:
				{
					SetString(OrgInfo[team][oName], RequestInfo[s][req_Text]);
					f(string, "[Организация ID %d] %s изменил название организации на %s", team, RequestInfo[s][req_Sender], OrgInfo[team][oName]);
					SendAdminsMessage(COLOR_LIGHTBLUE, string);
					SaveOrg(team);
					ClearRequest(s);
					return 1;
				}
			default:
				{
					SetString(RankName[team][i-2], RequestInfo[s][req_Text]);
					f(string, "[Организация ID %d] %s изменил название %d ранга на %s", team, RequestInfo[s][req_Sender], i-1, RankName[team][i-2]);
					SendAdminsMessage(COLOR_LIGHTBLUE, string);
					SaveOrg(team);
					ClearRequest(s);
					return 1;
				}
			}
		}
		case 2388:
        {
            if(!response)return 1;
			if(!strlen(inputtext))return ShowPlayerDialogEx(playerid,2388,DIALOG_STYLE_INPUT,"{43CD80}Активация промо-кода","{FFFFFF}Если вы знаете какой-либо промо-код, активный на нашем сервере, введите его в окошко ниже","Готово","Отмена");
			if(PlayerInfo[playerid][PromoActive] != -1)return SendError(playerid,"У Вас есть активный промо-код! Используйте сначала его");
			for(new i; i <= MAX_PROMO; i++)
			{
				if(i == MAX_PROMO) return SendError(playerid,"Данная промо акция больше не действительна"), ShowPlayerDialogEx(playerid,2388,DIALOG_STYLE_INPUT,"{43CD80}Активация промо-кода","{FFFFFF}Если вы знаете какой-либо промо-код, активный на нашем сервере, введите его в окошко ниже","Готово","Отмена");
				if(!strcmp(inputtext, PromoInfo[i][prCode], true))
				{
					if(PromoInfo[i][prActivated] == PromoInfo[i][prActivates])return SendError(playerid,"Введённый промо-код не найден");
					new result[280];
					for(new id = 19; id >= 0; id--)
					{
						if(PlayerInfo[playerid][PromoUsed][id] == PromoInfo[i][prID])return SendError(playerid,"Вы уже активировали данный промо-код");
					}
					switch(PromoInfo[i][prType])
					{
					case 0:
						{
							GiveMoney(playerid,PromoInfo[i][prAmount]);
							PromoInfo[i][prActivated]++;
							format(result, sizeof result, "Вы активировали промо-код %s и получили $%d! Приятной игры!",inputtext,PromoInfo[i][prAmount]);
							SendInfo(playerid,result);
							new logtime[3],logdate[3],logtimestring[16];
							getdate(logdate[2],logdate[1],logdate[0]);
							gettime(logtime[0],logtime[1],logtime[2]);
							f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
							WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Активация промо-кода",PromoInfo[i][prAmount],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
						}
					case 1: 
						{
							PlayerInfo[playerid][PromoActive] = i;
							PromoInfo[i][prActivated]++;
							format(result, sizeof result, "Вы активировали промо-код %s. Вы получите %d дополнительных DP при пополнении от 100 рублей!",inputtext,PromoInfo[i][prAmount]);
							SendInfo(playerid,result);
						}
					case 2:
						{
							PlayerInfo[playerid][PromoActive] = i;
							PromoInfo[i][prActivated]++;
							format(result, sizeof result, "Вы активировали промо-код %s. Ваше пополнение от 100 рублей умножится на %d! Приятной игры!",inputtext,PromoInfo[i][prAmount]);
							SendInfo(playerid,result);
						}
					case 3:
						{
							PromoInfo[i][prActivated]++;
							format(result, sizeof result, "Вы активировали промо-код %s. Ваш VIP-Статус изменён! Приятной игры!",inputtext,PromoInfo[i][prAmount]);
							SendInfo(playerid,result);
							if(!PlayerInfo[playerid][pVIP])PlayerInfo[playerid][pVIP] = 1;
							else if(PlayerInfo[playerid][pVIP] < 3)PlayerInfo[playerid][pVIP]++;
							PlayerInfo[playerid][pVipTime] = gettime()+(30*24*60*60);
						}
					}
					for(new id = 19; id >= 1; id--)
						PlayerInfo[playerid][PromoUsed][id] = PlayerInfo[playerid][PromoUsed][id-1];
					PlayerInfo[playerid][PromoUsed][0] = PromoInfo[i][prID];
					return 1;
				}
			}
        }
		case 2374:
        {
            if(!response) return callcmd::apanel(playerid);
            switch(listitem)
            {
                case 0:
					{
						new str[128];
						strcat(string,"Код\tТип\tДоступно\tАктивировано\n");
						for(new i = TotalPromo-1; i >= 0 ; i--)
						{
							new type[32];
							switch(PromoInfo[i][prType])
							{
							case 0:type = "Валютный";
							case 1:type = "+ при донате";
							case 2:type = "Умнож.доната";
							case 3:type = "VIP";
							}
							format(str, sizeof str,"%s\t%s\t%d\t%d/%d\n",PromoInfo[i][prCode],type,PromoInfo[i][prAmount],PromoInfo[i][prActivated],PromoInfo[i][prActivates]);
							strcat(string,str);
						}
						ShowPlayerDialogEx(playerid,0,5,"Статистика промо-акций",string,"Скрыть","");
					}
                case 1:
				{
					if(PlayerInfo[playerid][pAdmin] < 6)return SendError(playerid, "Отказано в доступе"),callcmd::apanel(playerid);
					ShowPlayerDialogEx(playerid,2380,DIALOG_STYLE_INPUT,"{D94141}Добавление промо-кода","Введите новый промо-код\n{7396FB}Используйте от 3 до 16 символов","Далее","Отмена");
				}
				case 2:
				{
					if(PlayerInfo[playerid][pAdmin] < 6)return SendError(playerid, "Отказано в доступе"),callcmd::apanel(playerid);
					ShowPlayerDialogEx(playerid,1478,DIALOG_STYLE_INPUT,"{D94141}Удаление промо-кода","Введите существующий промо-код, чтобы удалить его","Далее","Отмена");
				}
            }
        }
		case 2380:
        {
            if(!response) return callcmd::apanel(playerid);
            if(strlen(inputtext) < 3 || strlen(inputtext) > 16) return ShowPlayerDialogEx(playerid,2380,DIALOG_STYLE_INPUT,"{D94141}Добавление промо-кода","Введите новый промо-код\n{7396FB}Используйте от 3 до 16 символов","Далее","Отмена");
            SetPVarString(playerid,"PROMONAME",inputtext);
            ShowPlayerDialogEx(playerid,2381,2,"{D94141}Добавление промо-кода","\
			{ffffff}Промо-код на {43CD80}валюту\n\
			{ffffff}Промо-код на {7396FB}дополнительные DP при пополнении (от 100 рублей)\n\
			{ffffff}Промо-код на {7396FB}умножение суммы пополнения (от 100 рублей)\n\
			{ffffff}Промо-код на {0099FF}VIP-Статус (временный)","Выбрать","Отмена");
        }
		case 2381:
        {
			if(!response) return callcmd::apanel(playerid);
			SetPVarInt(playerid,"PROMOTYPE",listitem);
			ShowPlayerDialogEx(playerid,2382,1,"{D94141}Добавление промо-кода","{ffffff}Введите количество бонуса\n\n\
			{7396FB}Для промо-кода на валюту укажите сумму бонуса при активации\n\
			Для промо-кода на дополнительные DP укажите сумму бонуса при пополнении от 100 рублей\n\
			Для промо-кода на умножение суммы пополнения укажите множитель (при пополнении от 100 рублей). Например: 2, 3 и тд\n\
			Для промо-кода на VIP-Статус укажите количество дней","Далее","Отмена");
		}
		case 2382:
		{
			if(!response) return callcmd::apanel(playerid);
			if(!strval(inputtext))return ShowPlayerDialogEx(playerid,2382,1,"{D94141}Добавление промо-кода","{ffffff}Введите количество бонуса\n\n\
			{7396FB}Для промо-кода на валюту укажите сумму бонуса при активации\n\
			Для промо-кода на дополнительные DP укажите сумму бонуса при пополнении от 100 рублей\n\
			Для промо-кода на умножение суммы пополнения укажите множитель (при пополнении от 100 рублей). Например: 2, 3 и тд\n\
			Для промо-кода на VIP-Статус укажите количество дней","Далее","Отмена");
			SetPVarInt(playerid,"PROMOVALUE",strval(inputtext));
			ShowPlayerDialogEx(playerid,2383,1,"{D94141}Добавление промо-кода","{ffffff}Введите количество активаций для промо-кода","Далее","Отмена");
		}
		case 2383:
		{
			if(!response) return callcmd::apanel(playerid);
			if(!strval(inputtext))return ShowPlayerDialogEx(playerid,2383,1,"{D94141}Добавление промо-кода","{ffffff}Введите количество активаций для промо-кода","Далее","Отмена");
			SetPVarInt(playerid,"PROMOACTIVATES",strval(inputtext));
			new result[280], promoname[17], promotype[32];
			if(GetPVarInt(playerid,"PROMOACTIVATES"))
			{
				switch(GetPVarInt(playerid,"PROMOTYPE"))
				{
				case 0: promotype = "Валютный";
				case 1: promotype = "Бонус при пополнении";
				case 2: promotype = "Умножение при пополнении";
				case 3: promotype = "VIP-Статус";
				}
			}
            GetPVarString(playerid, "PROMONAME", promoname, sizeof(promoname));
			format(result, sizeof result,"\
			{ffffff}Вы хотите добавить промо-код {43CD80}%s\n\n\
			{ffffff}Тип промо-кода: {D94141}%s\n\
			{ffffff}Количество бонуса: {D94141}%d\n\
			{ffffff}Количество активаций: {D94141}%d\n\n{7396FB}Нажмите 'Добавить', если согласны",promoname,promotype,GetPVarInt(playerid,"PROMOVALUE"),GetPVarInt(playerid,"PROMOACTIVATES"));
			ShowPlayerDialogEx(playerid,2384,0,"{D94141}Добавление промо-кода",result,"Добавить","Отмена");
		}
		case 2384:
		{
			if(!response) return callcmd::apanel(playerid);
			new qstring[128],promoname[17];
            GetPVarString(playerid, "PROMONAME", promoname, sizeof(promoname));
            format(qstring,sizeof(qstring), "SELECT * FROM `promo` WHERE `code`='%s'", promoname);
            mysql_function_query(mysql, qstring, true, "mysql_PromoCreate", "is", playerid,promoname);
		}
		case 987:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: Show3UpdateSettings(playerid);
				case 1: ShowPlayerDialogEx(playerid,997,2,"","{7396FB}[1]{FFFFFF} Установить таймер\n{7396FB}[2]{FFFFFF} Остановить таймер","Принять","Отмена");
				case 2: ShowPlayerDialogEx(playerid,8744,2,"","{7396FB}[1]{FFFFFF} Полиция ЛС\n{7396FB}[2]{FFFFFF} RCSD\n{7396FB}[3]{FFFFFF} FBI\n{7396FB}[4]{FFFFFF} Полиция SF\n{7396FB}[5]{FFFFFF} Больница LS\n{7396FB}[6]{FFFFFF} Больница LV\n{7396FB}[7]{FFFFFF} Правительство\n{7396FB}[8]{FFFFFF} Армия LV\n{7396FB}[9]{FFFFFF} Больница SF\n{7396FB}[10]{FFFFFF} Лицензеры\n{7396FB}[11]{FFFFFF} Radio LS\n{7396FB}[12]{FFFFFF} Армия LS\n{7396FB}[13]{FFFFFF} Центральный Банк\n{7396FB}[14]{FFFFFF} Полиция LV\n{7396FB}[15]{FFFFFF} Radio LV\n{7396FB}[16]{FFFFFF} Radio SF\n{7396FB}[17]{FFFFFF} Армия SF\n{7396FB}[18]{FFFFFF} Таксисты\n{7396FB}[19]{FFFFFF} Механики\n{7396FB}[20]{FFFFFF} Дальнобойщики\n{7396FB}[21]{FFFFFF} Налоговая служба\n{7396FB}[22]{FFFFFF} Адвокаты\n{7396FB}[23]{FFFFFF} Крупье","Выбрать","Отмена");
				}
			}
		}
		case 8744:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: FindOrgNumbers(playerid,1);
					case 1: FindOrgNumbers(playerid,2);
					case 2: FindOrgNumbers(playerid,3);
					case 3: FindOrgNumbers(playerid,4);
					case 4: FindOrgNumbers(playerid,5);
					case 5: FindOrgNumbers(playerid,22);
					case 6: FindOrgNumbers(playerid,6);
					case 7: FindOrgNumbers(playerid,7);
					case 8: FindOrgNumbers(playerid,8);
					case 9: FindOrgNumbers(playerid,9);
					case 10: FindOrgNumbers(playerid,10);
					case 11: FindOrgNumbers(playerid,20);
					case 12: FindOrgNumbers(playerid,21);
					case 13: FindOrgNumbers(playerid,23);
					case 14: FindOrgNumbers(playerid,24);
					case 15: FindOrgNumbers(playerid,26);
					case 16: FindOrgNumbers(playerid,27);
					//
					case 17: FindJobNumbers(playerid,5);
					case 18: FindJobNumbers(playerid,4);
					case 19: FindJobNumbers(playerid,11);
					case 20: FindJobNumbers(playerid,16);
					case 21: FindJobNumbers(playerid,6);
					case 22: FindJobNumbers(playerid,8);
		        }
		    }
		}
		case 997:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
					{
					    if(PlayerInfo[playerid][pbydilnik]>0) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}У вас не запущен таймер","Принять","");
					    ShowPlayerDialogEx(playerid,998,1,"{43CD80}Подтверждение","{7396FB}Введите время на которое хотите навести ваш таймер.\n{7396FB}Вводите число от 20 до 999 ","Принять","Отмена");
					}
					case 1:
					{
					    if(PlayerInfo[playerid][pbydilnik]==0) return ShowPlayerDialogEx(playerid,0,0,"","{7396FB}У вас не запущен таймер","Принять","");
						PlayerInfo[playerid][pbydilnik]=1;
						ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}Вы отключили таймер","Принять","");
					}
			    }
			}
		}
		case 998:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
		        if(money < 20 || money>999) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}Вы ввели слишком большое число","Принять","");
				PlayerInfo[playerid][pbydilnik]=money;
				TextDrawShowForPlayer(playerid,kryg);
				format(string,sizeof(string),"%d",PlayerInfo[playerid][pbydilnik]);
			    bydilnik[playerid] = CreatePlayerTextDraw(playerid,133.000000, 414.000000, string);
				PlayerTextDrawFont(playerid,bydilnik[playerid], 2);
				PlayerTextDrawLetterSize(playerid,bydilnik[playerid], 0.270000, 2.000000);
				PlayerTextDrawColor(playerid,bydilnik[playerid], -112);
				PlayerTextDrawSetOutline(playerid,bydilnik[playerid], 1);
				PlayerTextDrawSetProportional(playerid,bydilnik[playerid], 1);
				PlayerTextDrawSetSelectable(playerid,bydilnik[playerid], 0);
				PlayerTextDrawShow(playerid, bydilnik[playerid]);
		    }
		}
        case 119:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
		        if(SlotValue[playerid][0]<money)return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		        if(money < 1 || (money+PlayerInfo[playerid][pIn_Skill])>5000)
		        {
		            format(string,sizeof(string),"\n\n{FFFFFF}Введите сумму для пополнение на баланс свого телефона\n\n{D01212}Ошибка! Неверная Сумма");
				    ShowPlayerDialogEx(playerid,119,1,"{43CD80}Пополнить баланс",string,"Оплатить","Отмена");
					return false;
		        }
		        GiveMoney(playerid,-money);
		        PlayerInfo[playerid][pIn_Skill] +=money;
		        SendBankBot(playerid);
		    }
		}
		case 963:
		{
		    if(response)
		    {
		        new id;
		        new money = strval(inputtextsave);
		        sscanf(PlayerInfo[playerid][pSendName],"u",id);
		        if(!IsPlayerConnected(id))return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}Вы не можете пополнить баланс человека,  который оффлайн","Принять","");
		        if(PlayerInfo[playerid][pIn_Skill]<money)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}У вас на балансе телефона недостаточно денег","Принять","");
		        if(money < 1 || (money+PlayerInfo[id][pIn_Skill])>5000)
		        {
		            format(string,sizeof(string),"{7396FB}Вы не можете пополнить баланс телефона своему контакту на такую сумму, так как на телефоне можно держать до 5000$");
		            ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
					return false;
		        }
		        PlayerInfo[playerid][pIn_Skill] -=money;
		        PlayerInfo[id][pIn_Skill] +=money;
		        format(string,sizeof(string),"{7396FB}Вы пополнили баланс контакта %s на $%d",PlayerName[id],money);
		        ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
		        format(string,sizeof(string),"%s пополнил баланс вашего мобильного на $%d",PlayerName[playerid],money);
		        SendClientMessage(id,COLOR_VALIK,string);
		    }
		}
		case 951:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(GLS[23]>0)
		                {
		                    format(string,sizeof(string),"Основатель: %s выключил х2 ЕХР",PlayerName[playerid]);
		                    SendClientMessageToAll(COLOR_VALIK,string);
		                    GLS[23] = 0;
		                }
		                else
		                {
		                    format(string,sizeof(string),"Основатель: %s включил х2 ЕХР",PlayerName[playerid]);
		                    SendClientMessageToAll(COLOR_VALIK,string);
		                    GLS[23]=1;
		                }
		            }
		            case 1:
		            {
		                if(GLS[22] > 0)
		                {
		                    format(string,sizeof(string),"Основатель: %s выключил х2 донат",PlayerName[playerid]);
		                    SendClientMessageToAll(COLOR_VALIK,string);
		                    GLS[22] = 0;
		                }
		                else
		                {
		                    format(string,sizeof(string),"Основатель: %s включил х2 донат",PlayerName[playerid]);
		                    SendClientMessageToAll(COLOR_VALIK,string);
		                    GLS[22]=1;
		                }
		            }
		            case 2: return true;
		            case 3:
		            {
		                if(GLS[24]>0)
		                {
		                    SendClientMessage(playerid,COLOR_VALIK,"Вы выключили античит");
                            GLS[24]=0;
		                }
		                else
		                {
		                    SendClientMessage(playerid,COLOR_VALIK,"Вы включили античит");
		                    GLS[24] =1;
		                }
		            }
		            case 4:
		            {
		                if(GLS[30]>0)
		                {
		                    SendClientMessage(playerid,COLOR_VALIK,"Вы включили казино");
                            GLS[30]=0;
		                }
		                else
		                {
		                    SendClientMessage(playerid,COLOR_VALIK,"Вы выключили казино");
		                    GLS[30] =1;
		                }

		            }
		            case 5:
		            {
		                if(GLS[34]>0)
		                {
		                    SendClientMessage(playerid,COLOR_VALIK,"конкурс выключен");
		                    GLS[34] = 0;
		                }
		                else
		                {
		                    SendClientMessage(playerid,COLOR_VALIK,"конкурс включен");
		                    GLS[34]=1;
		                }
		            }
		            case 6:
		            {
		                if(GLS[37]>0)
		                {
		                    SendClientMessage(playerid,COLOR_VALIK,"античит выключен");
		                    GLS[37]=0;
		                }
		                else
		                {
		                    GLS[37]=1;
		                    SendClientMessage(playerid,COLOR_VALIK,"античит включен");
		                }
		            }
		            case 7:
		            {
		                if(GLS[40]>0)
		                {
		                    SendClientMessage(playerid,COLOR_VALIK,"античит выключен");
		                    GLS[40]=0;
		                }
		                else
		                {
		                    GLS[40]=1;
		                    SendClientMessage(playerid,COLOR_VALIK,"античит включен");
		                }
		            }
		            case 8:
		            {
		                if(GLS[41]>0)
		                {
		                    SendClientMessage(playerid,COLOR_VALIK,"много пайдей выключен");
		                    GLS[41]=0;
		                }
						else
						{
						    GLS[41]=1;
						    SendClientMessage(playerid,COLOR_VALIK,"много пайдей включен");
						}
		            }

		        }
		    }
		}
		case 779:
		{
		    if(response) ShowPlayerDialogEx(playerid,778,1,"{43CD80}Подтверждение","{7396FB}Обратите внимание!{FFFFFF}\n\nСейчас вы вписываете пароль для банковской карты. Будьте внимательны\n - восстановить будет крайне сложно, и все средства на вашей карте будут утеряны\n{7396FB}Пароль должен состоять из 6 символов!{FFFFFF}\n\nОстальную информацию ищите в /help","Получить","Отмена");
		}
		case 778:
		{
		    if(response)
		    {
		        new len = strlen(inputtextsave);
		        for(new i;i<len;i++)
		        {
		            switch(inputtext[i])
		            {
		                case '0'..'9':{}
		                default: return ShowPlayerDialogEx(playerid,778,1,"{43CD80}Подтверждение","{7396FB}Обратите внимание!{FFFFFF}\n\nСейчас вы вписываете пароль для банковской карты. Будьте внимательны\n - восстановить будет крайне сложно, и все средства на вашей карте будут утеряны\n{7396FB}Пароль должен состоять из 6 символов!{FFFFFF}\n\nОстальную информацию ищите в /help","Получить","Отмена");
		            }
		        }
		        if(SlotValue[playerid][0]<1000)return SendBotMessage(playerid,"Извините, но  у вас недостаточно денег");
		        if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 10 || strval(inputtextsave) <= 0) return ShowPlayerDialogEx(playerid,778,1,"{43CD80}Подтверждение","{7396FB}Обратите внимание!{FFFFFF}\n\nСейчас вы вписываете пароль для банковской карты. Будьте внимательны\n - восстановить будет крайне сложно, и все средства на вашей карте будут утеряны\n{7396FB}Пароль должен состоять из 6 символов!{FFFFFF}\n\nОстальную информацию ищите в /help","Получить","Отмена");
		        if(PanelPlayerID[playerid]==-1) GiveMoney(playerid,-1000);
		        else
		        {
		            GiveMoney(playerid,-3000);
		            GiveMoney(PanelPlayerID[playerid],2000);
		            PanelPlayerID[playerid]=-1;
		        }
		        PlayerInfo[playerid][pOOC]=strval(inputtextsave);
		        PlayerInfo[playerid][pKlogin]=0;
		        SendBankBot(playerid);
		        format(string,sizeof(string),"{FFFFFF}Вы получили банковскую карту\nВаш пароль: {43CD80}%d{FFFFFF}. Обязательно запомните его!",PlayerInfo[playerid][pOOC]);
		        ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
		    }
		}
		case 991:
		{
		    if(response)
		    {
		        new money = strval(inputtextsave);
		        if(money != PlayerInfo[playerid][pOOC])return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{D94141}Вы неверно ввели PIN-код\nЕсли вы забыли свой PIN-код, то вы можете его восстановить у сотрудника банка","Принять","");
		        PlayerInfo[playerid][pKlogin]=1;

       			ShowBankMenu(playerid);
		    }
		}
		case 958:
		{
		    if(response)
		    {
				if(GetPlayerInterior(playerid)!=0)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","В здании нельзя вызвать медиков","Принять","");
				if(GetPlayerVirtualWorld(playerid)!=0)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","В здании нельзя вызвать медиков","Принять","");
		        if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 20 ) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}Сообщение должно состоять с 6 до 20 символов","Принять","");
			    MedikON[playerid] = true;
		        new Mediks,trr[30];
		        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
				else trr = "LV";
				format(string,sizeof(string),"{7396FB}%s[%d]{FFFFFF} с города %s, вызывает скорую помощь, местоположение: {7396FB}%s{FFFFFF}",PlayerName[playerid],playerid,trr,inputtextsave);
				foreach(new i:Player)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(GetTeamID(i) == TEAM_M4C ||GetTeamID(i) == TEAM_MEDICLV)
				        {
							SendClientMessage(i,COLOR_LIGHTBLUE,string);
							SendClientMessage(i,COLOR_GRAY,"{7396FB}Поступил вызов, чтобы принять введите /gomedik");
							Mediks ++;
				        }
				    }
				}
				if(Mediks > 0) SendClientMessage(playerid,COLOR_VALIK,"Все медики получили ваш вызов");
				else SendError(playerid,"В данный момент нет медиков онлайн");
		    }
		}
		case 959:
		{
		    if(response)
		    {
                if(GetPlayerInterior(playerid)!=0)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","В здании нельзя вызвать полицию","Принять","");
				if(GetPlayerVirtualWorld(playerid)!=0)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","В здании нельзя вызвать полицию","Принять","");
				if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 20 ) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}Сообщение должно состоять с 6 до 20 символов","Принять","");
				PoliseON[playerid] = true;
				new Polismens,trr[30];
		        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
				else trr = "LV";
				format(string,sizeof(string),"{7396FB}%s[%d]{FFFFFF} с города %s, вызывает полицию, местоположение: {7396FB}%s{FFFFFF}",PlayerName[playerid],playerid,trr,inputtextsave);
				foreach(new i:Player)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(IsACop(i))
				        {
							SendClientMessage(i,COLOR_WHITE,string);
							SendClientMessage(i,COLOR_GRAY,"{7396FB}Поступил вызов, чтобы принять введите /gopolice");
							Polismens ++;
				        }
				    }
				}
				if(Polismens > 0)SendClientMessage(playerid,COLOR_VALIK,"Все полицейские получили ваш вызов");
				else SendError(playerid,"В данный момент нет полицейских онлайн");
		    }
		}
		case 960:
		{
		    if(response)
		    {
                if(GetPlayerInterior(playerid)!=0)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","В здании нельзя вызвать такси","Принять","");
				if(GetPlayerVirtualWorld(playerid)!=0)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","В здании нельзя вызвать такси","Принять","");
				if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 20 ) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}Сообщение должно состоять с 6 до 20 символов","Принять","");
				TaxiON[playerid] = true;
		        new Taxists,trr[30];
		        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
				else trr = "LV";
				format(string,sizeof(string),"{7396FB}%s[%d]{FFFFFF} с города %s, вызывает такси, местоположение: {7396FB}%s{FFFFFF}",PlayerName[playerid],playerid,trr,inputtextsave);
				foreach(new i:Player)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(PlayerInfo[i][pJob] == JOB_TAXI)
				        {
							SendClientMessage(i,COLOR_LIGHTBLUE,string);
							SendClientMessage(i,COLOR_GRAY,"{7396FB}Поступил вызов, чтобы принять введите /gotaxi");
							Taxists ++;
				        }
				    }
				}
				if(Taxists > 0) SendClientMessage(playerid,COLOR_VALIK,"Все таксисты получили ваш вызов");
				else SendError(playerid,"В данный момент нет таксистов онлайн");
		    }
		}
		case 2261:
		{
		    if(response)
		    {

				if(SlotValue[playerid][0]<75)return SendError(playerid,"У вас не достаточно денег чтобы вызвать такси");
				if(GetPVarInt(playerid,"taxi")>gettime())return SendError(playerid,"Нельзя так часто вызывать такси");
				TaxiON[playerid] = true;
		        new Taxists,trr[30];
		        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
				else trr = "LV";
				format(string,sizeof(string),"{7396FB}%s[%d]{FFFFFF} с города %s, вызывает такси, местоположение: {7396FB}Будет отмечено на карте{FFFFFF}",PlayerName[playerid],playerid,trr);
				foreach(new i:Player)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(PlayerInfo[i][pJob] == JOB_TAXI)
				        {
							SendClientMessage(i,COLOR_LIGHTBLUE,string);
							SendClientMessage(i,COLOR_GRAY,"{7396FB}Поступил вызов, чтобы принять введите /gotaxi");
							Taxists ++;
				        }
				    }
				}
				if(Taxists > 0) SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Все таксисты получили ваш вызов");
				else SendError(playerid,"В данный момент нет таксистов онлайн");

				GiveMoney(playerid,-75);
				SetPVarInt(playerid,"taxi",gettime()+30);
				ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
				SetPlayerChatBubble(playerid, "Вызывает такси", COLOR_PURPLE, 10.0, 5000);
		    }
		}
		case 961:
		{
		    if(response)
		    {
                if(GetPlayerInterior(playerid)!=0)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","В здании нельзя вызвать механика","Принять","");
				if(GetPlayerVirtualWorld(playerid)!=0)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","В здании нельзя вызвать механика","Принять","");
				if(strlen(inputtextsave) < 6 || strlen(inputtextsave) > 20 ) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}Сообщение должно состоять с 6 до 20 символов","Принять","");
				MehanON[playerid] = true;
			    new Mehans,trr[30];
		        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) trr = "LS";
				else if(IsPlayerToKvadrat(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) trr = "SF";
				else trr = "LV";
				format(string,sizeof(string),"{7396FB}%s[%d]{FFFFFF} с города %s, вызывает механика, местоположение: {7396FB}%s{FFFFFF}",PlayerName[playerid],playerid,trr,inputtextsave);
				foreach(new i:Player)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(PlayerInfo[i][pJob] == JOB_MECHANIC)
				        {
							SendClientMessage(i,COLOR_LIGHTBLUE,string);
							SendClientMessage(i,COLOR_GRAY,"{7396FB}Поступил вызов, чтобы принять введите /gomechanic");
							Mehans ++;
				        }
				    }
				}
				if(Mehans > 0) SendClientMessage(playerid,COLOR_VALIK,"Все механики получили ваш вызов");
				else SendError(playerid,"В данный момент нет механиков онлайн");
		    }
		}
		case 952:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0: ShowPlayerDialogEx(playerid,953,1,"{43CD80}Добавить контакт","Укажите номер телефона контакта","Принять","Отмена");
				default:
					{
						new idx, bl, str[256];
						format(PlayerInfo[playerid][pSendName],25,"%s",strtok(inputtextsave,idx));
						if(!strcmp("ЧС",PlayerInfo[playerid][pSendName], true))
						{
							bl++;
							format(PlayerInfo[playerid][pSendName],25,"%s",strtok(inputtextsave,idx));
						}

						format(str,sizeof(str), "{7396FB}[1]{FFFFFF} Открыть переписку\n{7396FB}[2]{FFFFFF} Позвонить\n{7396FB}[3]{FFFFFF} Пополнить счет\n{7396FB}[4]{7396FB} *130*((Отправить бомжа))\n\
									{7396FB}[5]{FFFFFF} %s\n{7396FB}[6]{FFFFFF} Удалить из контактов", (bl)?("Удалить из черного списка"):("Добавить в черный список"));
						ShowPlayerDialogEx(playerid,956,2,"{43CD80}Выбор действия", str,"Принять","Отмена");
					}
				}
			}
		}
		case 956:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						format(string,sizeof(string),"SELECT * FROM `phonemes` WHERE (`Name`='%s' AND `Namez`='%s') OR (`Namez`='%s' AND `Name`='%s') ORDER BY `time` ASC LIMIT 0,20;",PlayerName[playerid],PlayerInfo[playerid][pSendName],PlayerName[playerid],PlayerInfo[playerid][pSendName]);
						mysql_pquery(mysql, string, "ShowPlayerMessage", "d", playerid);
						return 1;
					}
				case 1:
					{
						if(PlayerInfo[playerid][pCalling]!=-1) return ShowPlayerDialogEx(playerid,0,0,"","Вы уже кому-то звоните","Скрыть","");
						foreach(Player, id)if(PlayerInfo[id][pCalling]==playerid && IsPlayerLogged[id]) {return ShowPlayerDialogEx(playerid,0,0,"","Вам уже кто-то звонит","Скрыть","");}
						if(PlayerInfo[playerid][pIn_Skill]<15) return ShowPlayerDialogEx(playerid,0,0,"","{7396FB}У вас на балансе недостаточно средств для того, чтобы вести разговор!\nПополнить баланс телефона можно у любого банкомата штата или\nвы можете выслать *130* своему другу с просьбой перезвонить!","Скрыть","");
						format(string,sizeof(string),"SELECT `Group` FROM `phonebook` WHERE `Namez`='%s' AND `Name`='%s' LIMIT 0,20;",PlayerName[playerid],PlayerInfo[playerid][pSendName]);
						mysql_pquery(mysql, string, "MysqlCheckCall", "d", playerid);
						return 1;
					}
				case 2:
					{
						format(string,sizeof(string),"{9CFFCA}Введите сумму которую хотите пополнить на мобильный счет %s\n{ABFFCD}Обратите внимание, что деньги которые вы хотите перевести ,спишутся с вашего мобильного телефона!",PlayerInfo[playerid][pSendName]);
						ShowPlayerDialogEx(playerid,963,1,"Пополнить баланс",string,"Принять","Отмена");
					}
				case 3:
					{
						new id;
						sscanf(PlayerInfo[playerid][pSendName],"u",id);
						if(!IsPlayerConnected(id))return ShowPlayerDialogEx(playerid,0,0,"","{9CFFCA}Игрок, которому вы хотите выслать *130*, недоступен!","Закрыть","");
						if(PlayerInfo[id][pZa_Skill]!=1)return ShowPlayerDialogEx(playerid,0,0,"","{9CFFCA}Ваш абонент вне зоны действия сети!","Закрыть","");
						if(SlotValue[playerid][19]<=1)return false;
						format(string,sizeof(string),"Перезвони мне, пожалуйста. Прислал: %s[%d] | Номер: %d",PlayerName[playerid],playerid,SlotValue[playerid][19]);
						SendClientMessage(id,0x9CFFCAFF,string);
						format(string,sizeof(string),"{ABFFCD}Вы отправили сообщение о просьбе перезвонить игроку: {FFFFFF}%s{ABFFCD} на номер: {FFFFFF}%d",PlayerName[id],SlotValue[id][19]);
						ShowPlayerDialogEx(playerid,0,0,"",string,"Принять","");
					}
				case 4:
					{
						new query[256];
						if(!strcmp("5 Удалить из черного списка", inputtextsave, true))
							format(query, sizeof(query), "UPDATE `phonebook` SET `Group`='1' WHERE `Name`='%s' AND `Namez`='%s'", PlayerName[playerid],PlayerInfo[playerid][pSendName]);
						else format(query, sizeof(query), "UPDATE `phonebook` SET `Group`='0' WHERE `Name`='%s' AND `Namez`='%s'", PlayerName[playerid],PlayerInfo[playerid][pSendName]);
						mysql_pquery(mysql, query, "MysqlChencheGroup", "d", playerid);

					}
				case 5:
					{
						new id;
						format(string,sizeof(string),"DELETE FROM `phonebook` WHERE `Name`='%s' AND `Namez`='%s';",PlayerName[playerid],PlayerInfo[playerid][pSendName]);
						mysql_query(mysql, string);
						format(string,sizeof(string),"{ABFFCD}Вы удалили из контактов игрока {FFFFFF}%s",PlayerInfo[playerid][pSendName]);
						ShowPlayerDialogEx(playerid,0,0,"",string,"Принять","");
						sscanf(PlayerInfo[playerid][pSendName],"u",id);
						if(IsPlayerConnected(id))
						{
							format(string,sizeof(string),"%s удалил вас из контактов на своем телефоне",PlayerName[playerid]);
							SendError(id,string);
						}
					}
				}
			}
		}
		case 953:
		{
			if(response)
			{
				if(strlen(inputtextsave)<4) return ShowPlayerDialogEx(playerid,953,1,"Добавить контакт","Укажите номер телефона контакта!","Принять","Отмена");
				new id=-1;
				new number = strval(inputtextsave);
				foreach(Player, i)
				{
					if(number == SlotValue[i][19]) {id=i; break;}
				}
				if(id == -1) return ShowPlayerDialogEx(playerid,953,1,"Добавить контакт","Укажите номер телефона контакта!","Принять","Отмена");
				format(string,sizeof(string),"SELECT COUNT(*) FROM `phonebook` WHERE `Name`='%s' AND `Namez`='%s'",PlayerName[playerid],PlayerName[id]);

				mysql_pquery(mysql, string, "MysqlAddContact", "dd", playerid, id);
			}
		}
		case 954:
		{
			if(response)
			{
				new Namez[25],idx;
				Namez = strtok(inputtextsave,idx);
				format(PlayerInfo[playerid][pSendName], 25, "%s", Namez);
				format(string,sizeof(string),"SELECT * FROM `phonemes` WHERE (`Name`='%s' AND `Namez`='%s') OR (`Namez`='%s' AND `Name`='%s') ORDER BY `time` ASC LIMIT 0,20;",PlayerName[playerid],PlayerInfo[playerid][pSendName],PlayerName[playerid],PlayerInfo[playerid][pSendName]);
				mysql_pquery(mysql, string, "ShowPlayerMessage", "d", playerid);
				format(string,sizeof(string),"UPDATE `phonemes` SET `read`='0' WHERE `Namez`='%s' AND `Name`='%s';",PlayerName[playerid],Namez);
				mysql_pquery(mysql, string);
			}
		}
		case 955:
		{
			if(response)
			{
				if(TimeMessage[playerid]>gettime())return SendError(playerid,"Отправлять сообщения можно раз в 15 секунд");
				if(strlen(inputtextsave)>0)
				{
					if(IsAIP(inputtextsave))
					{
						SendClientMessage(playerid,COLOR_RED,"В таких сообщениях запрещается использовать подобные символы");
						SendClientMessage(playerid,COLOR_WHITE,"Не повторяйте это действие во избежание наказания");
						return false;
					}
					if(strlen(inputtextsave) > 50 ) return SendError(playerid,"Вы не можете отправить сообщение длиннее 50 символов");
					format(string,sizeof(string),"SELECT `Group` FROM `phonebook` WHERE `Namez`='%s' AND `Name`='%s' LIMIT 0,20;",PlayerName[playerid],PlayerInfo[playerid][pSendName]);
					mysql_pquery(mysql, string, "MysqlCheckSMS", "ds", playerid, inputtextsave);
					return 1;
				}
				TimeMessage[playerid]=gettime()+2;
				format(string,sizeof(string),"SELECT * FROM `phonemes` WHERE (`Name`='%s' AND `Namez`='%s') OR (`Namez`='%s' AND `Name`='%s') ORDER BY `time` ASC LIMIT 0,20;",PlayerName[playerid],PlayerInfo[playerid][pSendName],PlayerName[playerid],PlayerInfo[playerid][pSendName]);
				mysql_pquery(mysql, string, "ShowPlayerMessage", "d", playerid);
				format(string,sizeof(string),"UPDATE `phonemes` SET `read`='0' WHERE `Namez`='%s' AND `Name`='%s';",PlayerName[playerid],PlayerInfo[playerid][pSendName]);
				mysql_pquery(mysql, string);
				return 1;
			}
		}
        case SHOWDATA:
		{
		    if(response)
		    {
		        new player = ClickedPlayerID[playerid];
		        switch(listitem)
		        {
		            case 0: CallLocalFunction("callcmd::pass", "is", playerid, IntToStr(player));
		            case 1: CallLocalFunction("callcmd::lic", "is", playerid, IntToStr(player));
		            case 2: CallLocalFunction("callcmd::badge", "is", playerid, IntToStr(player));
		            case 3: CallLocalFunction("callcmd::mc", "is", playerid, IntToStr(player));
		            default: return false;
		        }
		    }
		}
		case SHOWSKILLS:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowSkills(playerid, playerid, INVALID_DIALOG_ID);
              		case 1: ShowStyles(playerid, playerid, INVALID_DIALOG_ID);
		        }
		    }
		}
		case 7652:
		{
			if(response)
			{
				return 1;
			}
			else ShowMenu(playerid);
		}
		case SHOWACTION:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
                    case 0: callcmd::fightstyle(playerid);
                    case 1: callcmd::setradio(playerid);
		            default: return false;
		        }
		    }
			else ShowMenu(playerid);
		}
		case 1214:
		{
			if(response)
			{
				new list[720];
				switch(listitem)
				{
				case 0:return ShowPlayerDialogEx(playerid,1216,DIALOG_STYLE_INPUT,"","{ffffff}Введите ID игрока, которого хотите принять","Далее","Oтмена");
				case 1:return OnlineFrac(PlayerInfo[playerid][pMember],playerid);
				case 2:
					{
						if(IsACop(playerid))
						{
							if(PlayerInfo[playerid][pMember]!=TEAM_LSPD && PlayerInfo[playerid][pMember]!=TEAM_RCPD && PlayerInfo[playerid][pMember]!=TEAM_PDLV && PlayerInfo[playerid][pMember]!=TEAM_FBI && PlayerInfo[playerid][pMember]!=TEAM_SFPD)return SendError(playerid,"Доступно только для Полиции и FBI");
							Dialog_Open(playerid,1213,1,"","\n\n\\c{ffffff}Введите ID игрока, которого вы хотите перевести в свою организацию\n\n\\c{ffcb8c}Для армий (4 ранг) - LSPD/RCSD/LVPD/SFPD\n\\cLSPD/RCSD/LVPD/SFPD (5 ранг) - FBI\n\n","Принять","Отмена");
						}
						else if(IsAtMafia(playerid) || IsAtGang(playerid))
						{
							if(PlayerInfo[playerid][pRank] < 9) return SendError(playerid,"Только для лидеров и заместителей");
							if(OrgInfo[PlayerInfo[playerid][pMember]][oOb4ak])
							{
								OrgInfo[PlayerInfo[playerid][pMember]][oOb4ak]=0;
								format(string,sizeof(string),"[F] Лидер/заместитель организации %s[%d] открыл общак",PlayerName[playerid],playerid);
								SendTeamMessage(PlayerInfo[playerid][pMember],COLOR_GRAY,string);
								UpdateDorm(PlayerInfo[playerid][pMember]);
							}
							else
							{
								OrgInfo[PlayerInfo[playerid][pMember]][oOb4ak]=1;
								format(string,sizeof(string),"[F] Лидер/заместитель организации %s[%d] закрыл общак",PlayerName[playerid],playerid);
								SendTeamMessage(PlayerInfo[playerid][pMember],COLOR_GRAY,string);
								UpdateDorm(PlayerInfo[playerid][pMember]);
							}
							callcmd::lmenu(playerid);
						}
						else
						{
							SendError(playerid, "В вашу организацию недоступны переводы");
							callcmd::lmenu(playerid);
						}
					}
				case 3:
					{
						new query[164];
						mysql_format(mysql, query, sizeof(query),"SELECT `NickName`, `Rank` FROM `accounts` WHERE `Member` = '%d' ORDER BY `Rank` DESC",PlayerInfo[playerid][pMember]);
						mysql_pquery(mysql, query, "allmembers", "d",playerid);
					}
				case 4:
					{
						strcat(list, "Должность\tТекущая зарплата\n");
						for(new i; i < OrgInfo[PlayerInfo[playerid][pMember]][Max_Rang]; i++)
						{
							format(string, sizeof string, "%s\t{7396FB}$%d\n",RankName[PlayerInfo[playerid][pMember]][i], OrgSalary[PlayerInfo[playerid][pMember]][i]);
							strcat(list, string);
						}
						ShowPlayerDialogEx(playerid, 1212, 5, "{43CD80}Зарплата сотрудников", list, "Изменить", "Назад");
					}
				case 5:
					{
						if(!PlayerInfo[playerid][pLeader])return SendError(playerid, "Отказано в доступе"),callcmd::lmenu(playerid);
						strcat(string, "Значение\tТекущее название\tПо умолчанию\n");
						f(list, "{D94141}[Организация]\t{ffa6a6}%s\t{56A85E}%s\n",OrgInfo[GetTeamID(playerid)][oName], OrgInfo[GetTeamID(playerid)][oName_def]);
						strcat(string, list);
						for(new i = 1; i <= 10; i++){
							f(list, "{FF9900}[%d ранг]\t{FFCB8C}%s\t{56A85E}%s\n", i, RankName[GetTeamID(playerid)][i-1], RankDefault[GetTeamID(playerid)][i-1]);
							strcat(string, list);
						}
						ShowPlayerDialogEx(playerid, 1222, 5, "Изменение названий", string, "Далее", "Отмена");
					}
				}
			}
		}
		case 1222:
		{
			if(!response)return callcmd::lmenu(playerid);
			SetPVarInt(playerid, "tempchange", listitem+1);
			ShowPlayerDialogEx(playerid, 1223, 2, "Выберите действие", "Подать заявку на изменение названия\n{56A85E}Вернуть название по умолчанию", "Далее", "Отмена");
		}
		case 1223:
		{
			if(!response)return callcmd::lmenu(playerid);
			new team = GetTeamID(playerid);
			new i = GetPVarInt(playerid, "tempchange");
			if(listitem == 0){
				switch(i){
				case 1:f(string, "\n\n\\c{FFFFFF}Вы собираетесь изменить название организации\n\\cТекущее название: {7396FB}%s\n\n\\c{FFCB8C}Чтобы вернуть название по умолчанию, вернитесь в предыдущее меню\n{FF4400}\\cЗаявки рассматриваются администрацией\n\n", OrgInfo[team][oName]);
				default:f(string, "\n\n\\c{FFFFFF}Вы собираетесь изменить название %d ранга\n\\cТекущее название: {7396FB}%s\n\n\\c{FFCB8C}Чтобы вернуть название по умолчанию, вернитесь в предыдущее меню\n{FF4400}\\cЗаявки рассматриваются администрацией\n\n", i-1,RankName[team][i-2]);
				}
				Dialog_Open(playerid, 1224, 1, "", string, "Отправить", "Отмена");
			}else{
				switch(i){
				case 1:
					{
						SetString(OrgInfo[team][oName], OrgInfo[team][oName_def]);
						f(string, "Вы изменили название организации на {7396FB}%s", OrgInfo[team][oName]);
						SendInfo(playerid, string);
						f(string, "[Организация ID %d] %s[%d] изменил название организации на %s", team, Name(playerid), playerid, OrgInfo[team][oName]);
						SendAdminsMessage(COLOR_LIGHTBLUE, string);
						SaveOrg(team);
						DeletePVar(playerid, "tempchange");
						return 1;
					}
				default:
					{
						SetString(RankName[team][i-2], RankDefault[team][i-2]);
						f(string, "Вы изменили название %d ранга на {7396FB}%s", i-1, RankName[team][i-2]);
						SendInfo(playerid, string);
						f(string, "[Организация ID %d] %s[%d] изменил название %d ранга на %s", team, Name(playerid), playerid, i-1, RankName[team][i-2]);
						SendAdminsMessage(COLOR_LIGHTBLUE, string);
						SaveOrg(team);
						DeletePVar(playerid, "tempchange");
						return 1;
					}
				}
			}
		}
		case 1224:
		{
			if(!response)return callcmd::lmenu(playerid);
			new team = GetTeamID(playerid);
			new i = GetPVarInt(playerid, "tempchange");
			if(strlen(inputtextsave) < 3 || strlen(inputtextsave) > 50){
				SendError(playerid, "Длина названия должна быть от 3-ёх до 50-ти символов");
				switch(i){
				case 1:f(string, "\n\n\\c{FFFFFF}Вы собираетесь изменить название организации\n\\cТекущее название: {7396FB}%s\n\n\\c{FFCB8C}Чтобы вернуть название по умолчанию, вернитесь в предыдущее меню\n{FF4400}\\cЗаявки рассматриваются администрацией\n\n", OrgInfo[team][oName]);
				default:f(string, "\n\n\\c{FFFFFF}Вы собираетесь изменить название %d ранга\n\\cТекущее название: {7396FB}%s\n\n\\c{FFCB8C}Чтобы вернуть название по умолчанию, вернитесь в предыдущее меню\n{FF4400}\\cЗаявки рассматриваются администрацией\n\n", i-1,RankName[team][i-2]);
				}
				Dialog_Open(playerid, 1224, 1, "", string, "Отправить", "Отмена");
			}
			if(!IsValidName(inputtextsave)){
				SendError(playerid, "Название содержит запрещённые символы. Используйте символы от (А/а до Я/я), от (A/a до Z/z), '`' '-' и пробел ' '");
				switch(i){
				case 1:f(string, "\n\n\\c{FFFFFF}Вы собираетесь изменить название организации\n\\cТекущее название: {7396FB}%s\n\n\\c{FFCB8C}Чтобы вернуть название по умолчанию, вернитесь в предыдущее меню\n{FF4400}\\cЗаявки рассматриваются администрацией\n\n", OrgInfo[team][oName]);
				default:f(string, "\n\n\\c{FFFFFF}Вы собираетесь изменить название %d ранга\n\\cТекущее название: {7396FB}%s\n\n\\c{FFCB8C}Чтобы вернуть название по умолчанию, вернитесь в предыдущее меню\n{FF4400}\\cЗаявки рассматриваются администрацией\n\n", i-1,RankName[team][i-2]);
				}
				Dialog_Open(playerid, 1224, 1, "", string, "Отправить", "Отмена");
			}
			new ss = -1;
			for(new s; s < MAX_REPORTS; s++)
			{
				if(!RequestInfo[s][req_Team])
				{
					ss = s;
					break;
				}
			}
			if(ss == -1) return SendError(playerid, "К сожалению, очередь занята, попробуйте позже");
			SendRequest(ss, team, i, inputtextsave, Name(playerid));
			DeletePVar(playerid, "tempchange");
			SendInfo(playerid, "Ваша заявка отправлена администрации. Ожидайте одобрения...");
		}
		case 1212:
		{
			if(!response)return callcmd::lmenu(playerid);
			new salary = (IsAtFrakcia(playerid)) ? ((listitem+1)*1500) : (((listitem+1)*1500) + 5000);
			if(PlayerInfo[playerid][pRank] == 9 && listitem > 6)
			{
				callcmd::lmenu(playerid);
				return SendError(playerid, "Зарплату для этой должности может установить только лидер");
			}
			format(string, sizeof string, "\n\n\\c{ffffff}Вы собираетесь изменить зарплату для должности {7396FB}%s\n\\c{ffffff}Текущая зарплата составляет {7396FB}$%d\n\n\\c{D94141}Зарплата не должна превышать $%d\n\n",RankName[PlayerInfo[playerid][pMember]][listitem], OrgSalary[PlayerInfo[playerid][pMember]][listitem], salary);
			Dialog_Open(playerid, 1211, 1, RankName[PlayerInfo[playerid][pMember]][listitem], string, "Готово", "Назад");
			SetPVarInt(playerid, "ChangeSalary", listitem);
		}
		case 1211:
		{
			if(!response)return callcmd::lmenu(playerid);
			new rank = GetPVarInt(playerid, "ChangeSalary");
			new salary = (IsAtFrakcia(playerid)) ? ((rank+1)*1500) : (((rank+1)*1500) + 5000);
			if(strval(inputtext) < 1000 || strval(inputtext) > salary)
			{
				SendError(playerid, "Зарплата должна быть не ниже 1000 и не превышать лимит");
				format(string, sizeof string, "\n\n\\c{ffffff}Вы собираетесь изменить зарплату для должности {7396FB}%s\n\\c{ffffff}Текущая зарплата составляет {7396FB}$%d\n\n\\c{D94141}Зарплата не должна превышать $%d\n\n",RankName[PlayerInfo[playerid][pMember]][rank], OrgSalary[PlayerInfo[playerid][pMember]][rank], salary);
				Dialog_Open(playerid, 1211, 1, RankName[PlayerInfo[playerid][pMember]][rank], string, "Готово", "Назад");
				return 1;
			}
			OrgSalary[PlayerInfo[playerid][pMember]][rank] = strval(inputtext);
			format(string,sizeof(string),"%s изменил зарплату на должности %s. Теперь она составляет $%d",Name(playerid),RankName[PlayerInfo[playerid][pMember]][rank],OrgSalary[PlayerInfo[playerid][pMember]][rank]);
			SendTeamMessage(GetTeamID(playerid), COLOR_LIGHTBLUE, string);
		}
		case 1215:
		{
			if(response)
			{
			    ViborSERIU[playerid] = pTemp[playerid][pWW][listitem];
				return ShowPlayerDialogEx(playerid,1217,DIALOG_STYLE_LIST,"{43CD80}Действие","Изменить ранг\nУволить\nДать(Снять) Мут\nДать выговор","Далее","Отмена");
			}
		}
		case 1216:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pRank] >= 9)
				{
				    new id;
				    if(PlayerInfo[playerid][pMember]==TEAM_FBI)return SendError(playerid,"В FBI можно попасть только переводом из полиции");
					if(sscanf(inputtextsave,"u",id)) return ShowPlayerDialogEx(playerid,1216,DIALOG_STYLE_INPUT,"{43CD80}Подтверждение","Введите ID игрока которого хотите принять","Далее","Oтмена");
					if(IsPlayerConnected(id) && IsPlayerLogged[id])
					{
						if(!GetTeamID(id))
						{
							if(ProxDetectorS(5.0, playerid, id))
							{
                                if(IsAtFrakcia(playerid) && PlayerInfo[id][pBL]!=0)
                                {
	                                SendError(playerid,"Вы не можете принять этого игрока. Возможные причины:");
									SendError(playerid,"- Этот игрок находится в чёрном списке закона");
									return true;
								}
								if(InviteOffer[id] == INVALID_PLAYER_ID)
								{
									new Leader[15];
									if(PlayerInfo[playerid][pMember]==0 || PlayerInfo[playerid][pMember] >= MAX_ORGS)return false;
									if(PlayerInfo[id][pWarns] > 0) return SendError(playerid,"Игрока с варном нельзя принять в организацию");
									if(PlayerInfo[playerid][pLeader] > 0) Leader = "Лидер";
									else Leader = "Зам. лидера";
									InviteOffer[id] = playerid;
									format(string,sizeof(string),"Вы приглашаете %s к себе в организацию",Name(id));
									SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
									format(string,sizeof(string),"%s %s приглашает вас к себе в организацию %s",Leader, Name(playerid),OrgInfo[GetTeamID(playerid)][oName]);
									if(!ShowPlayerDialogEx(id,8,0,"{43CD80}Приглашение",string,"Принять","Отмена")) SendError(playerid,"Нельзя принять этого игрока в данный момент");
								}
								else
								{
									SendError(playerid,"Этому игроку уже было выслано приглашение на вступление в организацию");
									return true;
								}
							}
							else
							{
								SendError(playerid,"Вы должны находиться рядом с игроком");
								return true;
							}
						}
						else
						{
							SendError(playerid,"Этот игрок уже состоит в одной из организаций");
							return true;
						}
					}
				}
			}
		}
		case 1217:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: return ShowPlayerDialogEx(playerid,1218,DIALOG_STYLE_INPUT,"{43CD80}Ранг","Введите ранг\n\tПример: 1","Готово","Отмена");
					case 1: return ShowPlayerDialogEx(playerid,1219,DIALOG_STYLE_INPUT,"{43CD80}Причина","Введите причину увольнения\n\tПример: с/ж","Готово","Отмена");
					case 2:
					{
						new id = ViborSERIU[playerid];
						if(PlayerInfo[id][pFMuteTime] == 0) return ShowPlayerDialogEx(playerid,1220,DIALOG_STYLE_INPUT,"{43CD80}Мут","Введите время и причину мута\n\tПример: 5,мат","Готово","Отмена");
						else
						{
							if(GetTeamID(id) == GetTeamID(playerid))
							{
								format(string,sizeof(string),"Лидер %s разглушил %s",Name(playerid),Name(id));
								SendTeamMessage(GetTeamID(playerid), COLOR_LIGHTRED, string);
								PlayerInfo[id][pFMuteTime] = 0;
							}
						}
					}
					case 3: return ShowPlayerDialogEx(playerid,1221,DIALOG_STYLE_INPUT,"{43CD80}Причина","Введите причину предупреждения\n\tПример: мат","Готово","Отмена");
				}
			}
		}
		case 1213:
		{
			if(response)
			{
				new id = strval(inputtextsave);
				if(!IsPlayerLogged[id]) return SendError(playerid, "Игрок не найден");
				if(id == playerid) return false;
				if(!IsPlayerConnected(id) || !IsPlayerLogged[id]) return SendError(playerid, "Неверный ID");
				if(!IsACop(playerid) || PlayerInfo[playerid][pRank] < 9) return SendError(playerid, "Отказано в доступе");
				if(!ProxDetectorS(5.0, playerid, id, 1)) return SendError(playerid, "Вы далеко от игрока");
				if(CuffedTime[id] > 0)return SendError(playerid, "Игрок находится в шоковом состоянии");
				if(PlayerInfo[id][pRank] >= 9) return SendError(playerid, "Вы не можете к себе перевести заместителя или лидера");
				if(IsASAPD(playerid) && (!IsAArmy(id) || PlayerInfo[id][pRank] < 4)) return SendError(playerid, "В полицию можно перевести только бойцов армии с 4 ранга");
				if(PlayerInfo[playerid][pMember] == TEAM_FBI && (!IsACop(id) || PlayerInfo[id][pRank] < 5)) return SendError(playerid, "В FBI можно перевести только сотрудников полиции с 5 ранга");
				PlayerInfo[id][pMember] = PlayerInfo[playerid][pMember];
				PlayerInfo[id][pFWarns] = 0;
				PlayerInfo[id][pRank] = 1;
				PlayerInfo[id][pDCTime] = 3;
				PlayerInfo[id][pFracSkin] = GetSkinForPlayer(id);
				SendClientMessage(id, COLOR_LIGHTBLUE,"Местом спавна автоматически назначена организация. Изменить место спавна >> /setspawn!");
				SendClientMessage(playerid, COLOR_VALIK, "Вы успешно перевели игрока к себе в организацию");
				format(string,sizeof(string), "Поздравляем, Вы были переведены в организацию %s сотрудником %s на должность %s", OrgInfo[GetTeamID(id)][oName], PlayerName[playerid], GetRankName(GetTeamID(id), PlayerInfo[id][pRank]));
				SendClientMessage(id, COLOR_VALIK, string);
				PlayerSpawn(id);
			}
		}
     	case 1218:
		{
			if(response)
			{
				new id;
			 	new rank = strval(inputtextsave);
				id = ViborSERIU[playerid];
				if(id == playerid) return SendError(playerid,"Нельзя выдавать ранг себе");
				if(rank<1)return false;
				if(GetTeamID(playerid) == PlayerInfo[id][pMember])
				{
					new change[10];
					if(PlayerInfo[id][pLeader] > 0 ) return SendError(playerid,"Вы не можете изменить ранг лидеру");
					if(PlayerInfo[playerid][pRank] == 9 && id > 8) return SendError(playerid,"Нельзя выдать ранг больше 8");
					if(rank > 9) return SendError(playerid,"Нельзя повысть до этого ранга");
					if(PlayerInfo[id][pRank] > rank) change = "понизил";
					else if(PlayerInfo[id][pRank] < rank) change = "повысил";
					else return SendClientMessage(playerid,COLOR_VALIK,"Игрок имеет тот же ранг который вы хотете ему дать");
					format(string,sizeof(string),"Лидер вашей организации %s %s вас в должности",Name(playerid),change);
					SendClientMessage(id,COLOR_LIGHTBLUE,string);
					format(string,sizeof(string),"Вы %sи игрока %s до %d-го ранга",change,Name(id),rank);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					PlayerInfo[id][pRank] = rank;
					if(PlayerInfo[id][pSex] == 2)
					{
					    if(TeamDuty[id])
						{
							SetPlayerSkinEx(id,GOrgSkins[GetTeamID(id)][rank]);
							TogglePlayerControllable(id,true);
						}
					}
					else
					{
					    if(TeamDuty[id])
						{
							SetPlayerSkinEx(id,MOrgSkins[GetTeamID(id)][rank]);
							TogglePlayerControllable(id,true);
						}
					}
				}
				else SendClientMessage(playerid,COLOR_VALIK,"Этот игрок не состоит в вашей организации");
			}
		}
		case 1219:
		{
			if(response)
			{
				new id,reason[100];
				id = ViborSERIU[playerid];
				if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pRank] >= 9)
				{
					if(sscanf(inputtextsave,"s[100]",reason)) return ShowPlayerDialogEx(playerid,1219,DIALOG_STYLE_INPUT,"{43CD80}Причина","Введите причину увольнения\n\tПример: с/ж","Готово","Отмена");
					if(IsGiveWarn(playerid, id))
					{
						if(id != playerid)
						{
							if(PlayerInfo[id][pLeader] > 0) return SendError(playerid,"Вы не можете выгнать из организации лидера");
							if(PlayerInfo[playerid][pRank]==PlayerInfo[id][pRank])return false;
							//if(pSportZal[id] == 1) return SendError(playerid,"Он щас в спортзале");
							PlayerInfo[id][pJob] = 0;
							PlayerInfo[id][pMember] = 0;
							PlayerInfo[id][pDCTime]=0;
							SendClientMessage(id,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
							PlayerInfo[id][pRank] = 0;
							pSportZal[id]=0;
							if(IsACop(id))
							{
							    if(UsingShield[id])RemovePlayerAttachedObject(id, 7);
						 		_ResetGun(id);
							}
							TeamDuty[id] = false;
							format(string,sizeof(string),"{FFFFFF}%s выгнал вас из организации.\nПричина: %s",Name(playerid), reason);
							SendClientMessage(id,COLOR_LIGHTBLUE,string);
							format(string,sizeof(string),"Вы выгнали %s. Причина: %s",Name(id), reason);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
							SetPlayerColor(id,0xEFEFF710);
							ResetSpawnInfo(id, 0);
							SetBumSkin(id);
						}
						else SendError(playerid,"Себя нельзя");
					}
					else SendError(playerid,"Этот игрок состоит в другой организации");
				}
				else SendError(playerid,"Вы не лидер и не зам. лидера");
			}
		}
		case 1220:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pRank] >= 9)
				{
					new id, time, reason[100];
					id = ViborSERIU[playerid];
					if(sscanf(inputtextsave,"p<,>ds[100]",time, reason)) return ShowPlayerDialogEx(playerid,1220,DIALOG_STYLE_INPUT,"{43CD80}Мут","Введите время и причину мута\n\tПример: 5,мат","Готово","Отмена");
					if(GetTeamID(id) == GetTeamID(playerid))
					{
						if(time > 0)
						{
						    if(PlayerInfo[id][pLeader] > 0 ) return SendError(playerid,"Вы не можете оглушить лидера");
							format(string,sizeof(string),"Лидер %s заглушил(а) игрока %s на %d минут. Причина: %s",Name(playerid),Name(id),time,reason);
							SendTeamMessage(GetTeamID(playerid), COLOR_LIGHTRED, string);
							PlayerInfo[id][pFMuteTime] = time*60;
						}
					}
				}
			}
		}
		case 1221:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pRank] >= 9)
				{
					new id,reason[150];
					id = ViborSERIU[playerid];
					if(sscanf(inputtextsave,"s[150]",reason)) return ShowPlayerDialogEx(playerid,1221,DIALOG_STYLE_INPUT,"{43CD80}Причина","Введите причину предупреждения\n\tПример: мат","Готово","Отмена");
					if(IsPlayerConnected(id))
					{
						if(IsGiveWarn(playerid, id))
						{
						    if(PlayerInfo[playerid][pRank]==PlayerInfo[id][pRank])return SendClientMessage(playerid, COLOR_RED, "Вы не можете ему дать выговор");
							if(PlayerInfo[id][pLeader] > 0 ) return SendError(playerid,"Вы не можете выдать варн лидеру");
							format(string,sizeof(string),"Вы дали выговор %s с причиной %s",Name(id),reason);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
							format(string,sizeof(string),"%s дал вам выговор с причиной %s",Name(playerid),reason);
							SendClientMessage(id,COLOR_LIGHTRED,string);
							PlayerInfo[id][pFWarns] ++;
							if(PlayerInfo[id][pFWarns] >= 3)
							{
								PlayerInfo[id][pFWarns] = 0;
								SendClientMessage(id,COLOR_GRAY,"Вы были автоматически выгнаны из организации т.к у вас больше 2-х выговоров");
								format(string,sizeof(string),"%s покидает нашу организацию т.к у него больше 2-х выговоров",Name(id));
								SendTeamMessage(PlayerInfo[id][pMember],COLOR_GRAY,string);
								PlayerInfo[id][pMember] = 0;
								PlayerInfo[id][pDCTime]=0;
								SendClientMessage(id,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
								PlayerInfo[id][pRank] = 0;
								SetBumSkin(id);
								PlayerSpawn(id);
							}
						}
					}
				}
			}
		}

     	case RABOTABUS+1:
	    {
	        if(response)
	        {
	            if(SlotValue[playerid][0] < GLS[15]) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]") && RemovePlayerFromVehicle(playerid);
	            GiveMoney(playerid,-GLS[15]);
	            pTemp[playerid][pArendaCar] = GetPlayerVehicleID(playerid);
				switch(PlayerInfo[playerid][pJob])
				{
				    case 1:
				    {
				        rabden[playerid]=1;
						SendClientMessage(playerid,COLOR_ACHAT,"Нажмите клавишу 'CTRL', чтобы начать работу");
						SetDynamicObjectMaterialText(VehObjects[pTemp[playerid][pArendaCar]][0], 0, "{FFCB8C}Городской автобус\n\n{D94141}АРЕНДОВАН", 130, "Calibri", 29, 1, -1, 0, 0);
						SetDynamicObjectMaterialText(VehObjects[pTemp[playerid][pArendaCar]][1], 0, "{FFCB8C}Городской автобус\n\n{D94141}АРЕНДОВАН", 130, "Calibri", 29, 1, -1, 0, 2);
				    }
					case 3: SendError(playerid,"Используйте /jobhelp, если вы не знаете как здесь работать");
					case 4:
					{
					    if(BenzinCena[pTemp[playerid][pArendaCar]]==0 || BenzinCount[pTemp[playerid][pArendaCar]]==0)
						{
							SendClientMessage(playerid,COLOR_ACHAT,"Для начала работы заключите контракт с ближайшей АЗС");
							SendClientMessage(playerid,COLOR_ACHAT,"Используйте /jobhelp чтобы узнать подробности и описание работы");
						}
					}
					case 5:
					{
						SendClientMessage(playerid,COLOR_ACHAT,"Нажмите клавишу 'CTRL', чтобы начать работу и установить тариф");
						SetDynamicObjectMaterialText(VehObjects[pTemp[playerid][pArendaCar]][3], 0, "ТАКСИ\n{D94141}АРЕНДОВАНА\n{FF0000}ЗВОНИ {FF4400}999", 130, "Calibri", 20, 0, 0xFFFF0000, 0, 1);
					}
					case 13:
					{
					    if(GetVehicleModelEx(pTemp[playerid][pArendaCar]) == 443)
					    {
					        ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{AFAFAF}Отправляйтесь по чекпойнту для загрузки металла","Принять","");
					        if(IsPlayerToKvadrat(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) EnableGPSForPlayer(playerid,SCRAP_POS_X,SCRAP_POS_Y,SCRAP_POS_Z);
							else EnableGPSForPlayer(playerid,1124.2776,1962.4742,10.8203);
					    }
					}
					case 14: SendError(playerid,"Используйте /jobhelp, если вы не знаете как здесь работать");
				}
				SendClientMessage(playerid,COLOR_ACHAT,"Используйте /jlock чтобы закрыть рабочий транспорт");
				VehicleInfo[pTemp[playerid][pArendaCar]][vPlayer]= playerid;
				Fuel[pTemp[playerid][pArendaCar]]=100;
			}
			else RemovePlayerFromVehicle(playerid);
	    }
	    case RABOTABUS+2:
	    {
	        new cena;
			if(sscanf(inputtextsave, "d",cena)) return ShowPlayerDialogEx(playerid,RABOTABUS+2,DIALOG_STYLE_INPUT,"{43CD80}Стоимость","Цена за проезд ( от 0$ до 100$ )","Готово","Отмена");
	        if(cena > 100 || cena < 0) return SendClientMessage(playerid, COLOR_RED, "Нельзя меньше 1 или больше 100") && ShowPlayerDialogEx(playerid,RABOTABUS+2,DIALOG_STYLE_INPUT,"Стоимость","Цена за проезд ( от 0$ до 100$ )","Готово","Отмена");
	        Vehs[GetPlayerVehicleID(playerid)][vCena] = cena;
	        ShowPlayerDialogEx(playerid,RABOTABUS+3,DIALOG_STYLE_LIST,"{43CD80}Маршрут","\
			Пригород Los-Santos\n\
			{FFCB8C}ЖДЛС » Виноградник » Завод\n\
			ЖДЛС » Завод\n\
			Внутригородской Los-Santos\n\
			ЖДЛС » ЖДЛВ\n\
			Внутригородской Las-Venturas\n\
			ЖДЛВ » Fort Carson\n\
			ЖДЛС » ЖДСФ » Автошкола\n\
			ЖДЛВ » Fort Carson » ЖДСФ\n\
			Внутригородской San-Fierro\n\
			ЖДСФ » Виноградник » Завод","Далее","Отмена");
	    }
		case RABOTABUS+3:
	    {
	        if(response)
	        {
	            rabden[playerid]=0;
	            pPressed[playerid] = 0;
				Vehs[playerid][vReis] = 0;
	            new getcar = GetPlayerVehicleID(playerid);
	            if(response)
		    	{
		            switch(listitem)
		            {
		                case 0:
		                {
		                	Vehs[playerid][vReis] = 1;
			                strmid(Vehs[getcar][vName],"Пригород Los-Santos",0,strlen("Пригород Los-Santos"),33);
			                SetPlayerRaceCheckpoint(playerid,BusCityLS[0][BUSSTATION1],BusCityLS[0][BUS_COORD1][0],BusCityLS[0][BUS_COORD1][1],BusCityLS[0][BUS_COORD1][2],BusCityLS[1][BUS_COORD1][0],BusCityLS[1][BUS_COORD1][1],BusCityLS[1][BUS_COORD1][2],10.0);
		                }
		                case 1:
		                {
		                	Vehs[playerid][vReis] = 2;
			                strmid(Vehs[getcar][vName],"ЖДЛС » Виноградник » Завод",0,strlen("ЖДЛС » Виноградник » Завод"),33);
			                SetPlayerRaceCheckpoint(playerid,BusFarm[0][BUSSTATION2],BusFarm[0][BUS_COORD2][0],BusFarm[0][BUS_COORD2][1],BusFarm[0][BUS_COORD2][2],BusFarm[1][BUS_COORD2][0],BusFarm[1][BUS_COORD2][1],BusFarm[1][BUS_COORD2][2],10.0);
		                }
		                case 2:
		                {
		                	Vehs[playerid][vReis] = 3;
			                strmid(Vehs[getcar][vName],"ЖДЛС » Завод",0,strlen("ЖДЛС » Завод"),33);
			                SetPlayerRaceCheckpoint(playerid,BusZav[0][BUSSTATION3],BusZav[0][BUS_COORD3][0],BusZav[0][BUS_COORD3][1],BusZav[0][BUS_COORD3][2],BusZav[1][BUS_COORD3][0],BusZav[1][BUS_COORD3][1],BusZav[1][BUS_COORD3][2],10.0);
		                }
		                case 3:
		                {
		                	Vehs[playerid][vReis] = 4;
			                strmid(Vehs[getcar][vName],"Внутригородской Los-Santos",0,strlen("Внутригородской Los-Santos"),33);
			                SetPlayerRaceCheckpoint(playerid,BusAvto[0][BUSSTATION4],BusAvto[0][BUS_COORD4][0],BusAvto[0][BUS_COORD4][1],BusAvto[0][BUS_COORD4][2],BusAvto[1][BUS_COORD4][0],BusAvto[1][BUS_COORD4][1],BusAvto[1][BUS_COORD4][2],10.0);
		                }
		                case 4:
		                {
		                	Vehs[playerid][vReis] = 5;
			                strmid(Vehs[getcar][vName],"ЖДЛС » ЖДЛВ",0,strlen("ЖДЛС » ЖДЛВ"),33);
			                SetPlayerRaceCheckpoint(playerid,BusLv[0][BUSSTATION5],BusLv[0][BUS_COORD5][0],BusLv[0][BUS_COORD5][1],BusLv[0][BUS_COORD5][2],BusLv[1][BUS_COORD5][0],BusLv[1][BUS_COORD5][1],BusLv[1][BUS_COORD5][2],10.0);
		                }
		                case 5:
		                {
		                	Vehs[playerid][vReis] = 6;
			                strmid(Vehs[getcar][vName],"Внутригородской Las-Venturas",0,strlen("Внутригородской Las-Venturas"),33);
			                SetPlayerRaceCheckpoint(playerid,BusLvv[0][BUSSTATION6],BusLvv[0][BUS_COORD6][0],BusLvv[0][BUS_COORD6][1],BusLvv[0][BUS_COORD6][2],BusLvv[1][BUS_COORD6][0],BusLvv[1][BUS_COORD6][1],BusLvv[1][BUS_COORD6][2],10.0);
		                }
		                case 6:
		                {
		                	Vehs[playerid][vReis] = 7;
			                strmid(Vehs[getcar][vName],"ЖДЛВ » Fort Carson",0,strlen("ЖДЛВ » Fort Carson"),33);
			                SetPlayerRaceCheckpoint(playerid,BusLvvv[0][BUSSTATION7],BusLvvv[0][BUS_COORD7][0],BusLvvv[0][BUS_COORD7][1],BusLvvv[0][BUS_COORD7][2],BusLvvv[1][BUS_COORD7][0],BusLvvv[1][BUS_COORD7][1],BusLvvv[1][BUS_COORD7][2],10.0);
		                }
		                case 7:
		                {
		                    Vehs[playerid][vReis] = 8;
			                strmid(Vehs[getcar][vName],"ЖДЛС » ЖДСФ » Автошкола",0,strlen("ЖДЛС » ЖДСФ » Автошкола"),50);
			                SetPlayerRaceCheckpoint(playerid,bussf[0][BUSSTATION8],bussf[0][BUS_COORD8][0],bussf[0][BUS_COORD8][1],bussf[0][BUS_COORD8][2],bussf[1][BUS_COORD8][0],bussf[1][BUS_COORD8][1],bussf[1][BUS_COORD8][2],10.0);
		                }
		                case 8:
		                {
		                    Vehs[playerid][vReis] = 9;
			                strmid(Vehs[getcar][vName],"ЖДЛВ » Fort Carson » ЖДСФ",0,strlen("ЖДЛВ » Fort Carson » ЖДСФ"),50);
			                SetPlayerRaceCheckpoint(playerid,buslvsf[0][BUSSTATION9],buslvsf[0][BUS_COORD9][0],buslvsf[0][BUS_COORD9][1],buslvsf[0][BUS_COORD9][2],buslvsf[1][BUS_COORD9][0],buslvsf[1][BUS_COORD9][1],buslvsf[1][BUS_COORD9][2],10.0);
		                }
		                case 9:
		                {
		                    Vehs[playerid][vReis] = 10;
			                strmid(Vehs[getcar][vName],"Внутригородской San-Fierro",0,strlen("Внутригородской San-Fierro"),50);
			                SetPlayerRaceCheckpoint(playerid,bussfsf[0][BUSSTATION10],bussfsf[0][BUS_COORD10][0],bussfsf[0][BUS_COORD10][1],bussfsf[0][BUS_COORD10][2],bussfsf[1][BUS_COORD10][0],bussfsf[1][BUS_COORD10][1],bussfsf[1][BUS_COORD10][2],10.0);
		                }
		                case 10:
		                {
		                    Vehs[playerid][vReis] = 11;
			                strmid(Vehs[getcar][vName],"ЖДСФ » Виноградник » Завод",0,strlen("ЖДСФ » Виноградник » Завод"),50);
			                SetPlayerRaceCheckpoint(playerid,bussffa[0][BUSSTATION11],bussffa[0][BUS_COORD11][0],bussffa[0][BUS_COORD11][1],bussffa[0][BUS_COORD11][2],bussffa[1][BUS_COORD11][0],bussffa[1][BUS_COORD11][1],bussffa[1][BUS_COORD11][2],10.0);
		                }
		            }
				}
	            strring = "";
				format(string,sizeof(string),"Водитель автобуса %s начал маршрут %s. Стоимость проезда: $%d", Name(playerid), Vehs[getcar][vName],Vehs[getcar][vCena]);
				ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "{FFCB8C}Городской автобус\n{FFFFFF}Рейс: {FFCB8C}%s\n{FFFFFF}Проезд: {FFCB8C}$%d",Vehs[getcar][vName],Vehs[getcar][vCena]);
				SetDynamicObjectMaterialText(VehObjects[pTemp[playerid][pArendaCar]][0], 0, string, 130, "Calibri", 29, 1, -1, 0, 0);
				SetDynamicObjectMaterialText(VehObjects[pTemp[playerid][pArendaCar]][1], 0, string, 130, "Calibri", 29, 1, -1, 0, 2);
		}
	    }
	    case RABOTABUS+4:
	    {
	        if(response)
	        {
         		if(GetPlayerVehicleID(playerid) == pTemp[playerid][pArendaCar]) return endrabavt(playerid);
	        }
	    }
	    case RABOTABUS+5:
	    {
	        if(response)
	        {
	            if(rabden[playerid] == 1) ShowPlayerDialogEx(playerid,RABOTABUS+2,DIALOG_STYLE_INPUT,"{43CD80}Стоимость","Цена за проезд ( от 0$ до 100$ )","Готово","Отмена");
				else endrabavt(playerid);
	        }
	    }
	}
	return true;
}
stock IsAGameNick(const name[])
{
	for(new i;i < strlen(name);i ++)
	{
		switch(name[i])
		{
		    case 'a'..'z', 'A'..'Z', '0'..'9', '.', '_', '[', ']', '(', ')', '$', '@', '-': continue;
		}
	}
	return true;
}
stock UpdateDorm(dormid)
{
	new string[500];
	new allzone = 0, narkoz=0;
	new urik[30];
	if(OrgInfo[dormid][oOb4ak] == 1) urik="{A92424}Закрыт{FFFFFF}";
	else urik = "{3FA924}Открыт{FFFFFF}";

	if((dormid>=11 && dormid<=15) || dormid == 25)
	{
        for(new d = 1; d < GANGZONES; d++)
		{
			if(GZInfo[d][gzFracID] == dormid)
			{
				allzone++;
				if (d == 33)narkoz++;
				if (d == 43)narkoz++;
				if (d == 10)narkoz++;
				if (d == 14)narkoz++;
				if (d == 24)narkoz++;
			}
		}
		format(string,sizeof(string),"Количество\nтерриторий: {FAAC58}%d{FFFFFF}\nНаркопритонов: {FAAC58}%d{FFFFFF}\n\nСклад %s\n{FAAC58}%s{FFFFFF}\n\nНаркотики: {FAAC58}%d г{FFFFFF}\nМатериалы: {FAAC58}%d шт{FFFFFF}\nКанистры: {FAAC58}%d шт{FFFFFF}\nИнструменты: {FAAC58}%d шт{FFFFFF}\nМаски: {FAAC58}%d шт{FFFFFF}\n",allzone,narkoz,urik,OrgInfo[dormid][oName],FractionValue[dormid][1],FractionValue[dormid][0],FractionValue[dormid][3],FractionValue[dormid][4],FractionValue[dormid][2]);
	}
	else
	{
	    for(new bizid;bizid < MAX_BIZ;bizid++)
		{
		    if(BizInfo[bizid][bKrasher] != dormid || strcmp(BizInfo[bizid][bOwner],"The State",true) == 0 ) continue;
			allzone++;
		}
		format(string,sizeof(string),"Количество\nбизнесов {FAAC58}%d{FFFFFF}\n\nСклад %s\n{FAAC58}%s{FFFFFF}\n\nНаркотики: {FAAC58}%d г{FFFFFF}\nМатериалы: {FAAC58}%d шт{FFFFFF}\nКанистры: {FAAC58}%d шт{FFFFFF}\nИнструменты: {FAAC58}%d шт{FFFFFF}\nМаски: {FAAC58}%d шт{FFFFFF}",allzone,urik,OrgInfo[dormid][oName],FractionValue[dormid][1],FractionValue[dormid][0],FractionValue[dormid][3],FractionValue[dormid][4],FractionValue[dormid][2]);
	}
	//
	UpdateDynamic3DTextLabelText(DormText[dormid],COLOR_WHITE,string);
	return true;
}
public PlayerDrink(playerid)
{
	return true;
}
stock PlayerUnleader(playerid = INVALID_PLAYER_ID, Name[] = "None")
{
    new string[144];
	if(playerid != INVALID_PLAYER_ID)
	{
	    if(IsACop(playerid))
		{
			if(UsingShield[playerid])RemovePlayerAttachedObject(playerid, 6);
			PlayerInfo[playerid][pShield] = 0.0;
		}
  		PlayerInfo[playerid][pLeader] = 0;
	    PlayerInfo[playerid][pMember] = 0;
	    PlayerInfo[playerid][pDCTime]=0;
	    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
	    PlayerInfo[playerid][pRank] = 0;
	    SetBumSkin(playerid);
	    PlayerInfo[playerid][pJob] = 0;
	    SetPlayerColor(playerid,TeamColors[0]);
	    ResetSpawnInfo(playerid, 0);
	    SaveAccount(playerid);
	    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы были сняты со своей должности");
	}
	else
	{
		format(string, sizeof(string), "UPDATE `accounts` SET `Leader` = '0',`Member` = '0', `Job` = '0',`Rank` = '0' WHERE `NickName` = '%s'",Name);//,`Skin` = '0'
		mysql_pquery(mysql, string);
	}
	return true;
}
public OnPlayerExitedMenu(playerid)
{
	return true;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
    return true;
}
stock IntToStr(value)
{
  	new tmp[20];
  	valstr(tmp, value);
  	return tmp;
}
stock NameID(const name[])
{
    new ID = INVALID_PLAYER_ID;
	sscanf(name,"u",ID);
	if(IsPlayerConnected(ID)) return ID;
	return INVALID_PLAYER_ID;
}
stock Buying(playerid,prod,&buy,buy_kolvo,buy_price,const buy_name[],const used[] = "/help")
{
	new mona,tiper;
	if(PlayerInfo[playerid][pVID]==0)tiper = 0, mona = GetMoney(playerid);
	else tiper =1,mona = PlayerInfo[playerid][pBank];

	if(mona >= buy_price)
	{
		new string[150];
		new biz = BizEntered[playerid];
		if(biz != -1)
		{
			if(BizInfo[biz][bProducts]<prod)return SendBotMessage(playerid,"Приносим свои извинения, но\nв магазине нет продуктов");
            GiveBizMoney(biz,buy_price);
			BizInfo[biz][bProducts] -= prod;
		}
		if(strlen(used) > 0) format(string,sizeof(string),"Вы купили %s (%s)",buy_name,used);
	    else format(string,sizeof(string),"Вы купили %s",buy_name);
		SendClientMessage(playerid,COLOR_WHITE,string);
		buy += buy_kolvo;
		if(tiper ==0) GiveMoney(playerid,-buy_price,"Buying");
		else PlayerInfo[playerid][pBank]-=buy_price;

		format(string,sizeof(string),"покупка %s",buy_name);
		switch(random(4))
        {
            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще");
            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего");
            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата");
            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня");
        }
        UpdateBiz(biz,0);
	}
	else SendBotMessage(playerid,"Извините, но у вас не хватает денег");
	return true;
}
stock BuyingMehan(playerid, &buy, buy_kolvo, buy_price, const buy_name[], const used[] = "/help")
{
    ShowPlayerDialogEx(playerid,93,5,"{43CD80}Магазин механики",BUY_MENU_MEHAN,"Купить","Назад");
	if(GetMoney(playerid) >= buy_price)
	{
		new string[150];
		new biz = BizEntered[playerid];
		if(strlen(used) > 0) format(string,sizeof(string),"Вы купили %s (%s)",buy_name,used);
	    else format(string,sizeof(string),"Вы купили %s",buy_name);
		SendClientMessage(playerid,COLOR_WHITE,string);
  		if(biz != -1) GiveBizMoney(biz,buy_price);
		buy += buy_kolvo;
		GiveMoney(playerid,-buy_price,"Buying");
		format(string,sizeof(string),"покупка %s",buy_name);
		switch(random(4))
        {
            case 0: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку, приходите еще");
            case 1: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Спасибо за покупку. Всего вам наилучшего");
            case 2: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Покупая в нашем магазине, 5 процентов уходит\nна благотворительный фонд штата");
            case 3: SendBotMessage(playerid, "Кассир:\n{FFFFFF}Хорошего вам дня");
        }
	}
	else SendBotMessage(playerid,"Извините, но у вас не хватает денег");
	return true;
}
stock ShowHelpDialog(playerid)
{
	new string[1200];
	new HelpMenuText[][] =
	{
		"{FF4400}Частые вопросы\n",
		"Команды для телефона\n",
		"Команды для работ\n",
		"Команды для организаций\n",
		"Команды для дома\n",
		"Команды для личного транспорта\n",
		"Команды для транспорта\n",
		"Команды для анимаций\n",
		"Команды для чата\n",
		"Команды для похищений\n",
		"Другие команды\n",
		"{43CD80}Навыки стрельбы\n",
		"{43CD80}Правила сервера\n",
		"{43CD80}Преимущества статусов персонажа\n",
		"{43CD80}Однорукий бандит\n",
		"{43CD80}Наши интернет-источники\n",
  		"{43CD80}Кража материалов\n",
		"{43CD80}Банк\n"
	};
	for(new i, j = sizeof(HelpMenuText); i < j; i ++) strcat(string, HelpMenuText[i]);
    if(!ShowPlayerDialogEx(playerid,64,2,"{43CD80}Помощь по серверу",string,"Выбор","Отмена")) SendError(playerid,"Недоступно в данный момент");
	return true;
}
stock DestroyPlayerTD(playerid, &PlayerText:td)
{
	if(td != PlayerText:-1)
	{
	    PlayerTextDrawDestroy(playerid, td);
	    td = PlayerText:-1;
	}
	return true;
}
stock GetHouseStyle(houseid)
{
	for(new i = 1;i < sizeof(GHSPos);i ++)
	{
	    if(floatcomp(GHSPos[i][0], 0.000000)) continue;
	    if(	floatcomp(HouseInfo[houseid][hExit][0], GHSPos[i][0]) &&
	    	floatcomp(HouseInfo[houseid][hExit][1], GHSPos[i][1]) &&
	    	floatcomp(HouseInfo[houseid][hExit][2], GHSPos[i][2])) return i;
	}
	return -1;
}
stock CountWords(text[])
{
	new words;
	for(new i; i < strlen(text); i ++)
	{
	    if(text[i] != ' ' && ( (i-1) < 0 || text[i - 1] == ' ') ) words ++;
	}
	return words;
}
stock GetEndWord(text[], word)
{
	new len = strlen(text);
    for(new i = word; i < len; i ++)
	{
	    if(i == (len-1) ) return i + 1;
	    else if(text[i] == ' ') return i;
	}
	return -1;
}
stock GetWord(text[], word, wordstr[], sizword)
{
	new w;
	for(new i; i < strlen(text); i ++)
	{
	    if(text[i] != ' ' && ( (i-1) < 0 || text[i - 1] == ' ') )
	    {
	        if(w == word)
			{
				strmid(wordstr, text, i, GetEndWord(text, i), sizword);
				return i;
			}
			w ++;
	    }
	}
	return 0;
}
stock CheckFuelDraws(playerid)
{
	for(new i; i < sizeof FuelTD; i++)
		TextDrawHideForPlayer(playerid, FuelTD[i]);
	PlayerTextDrawHide(playerid, PlayerFuelTD[playerid][0]);
	PlayerTextDrawHide(playerid, PlayerFuelTD[playerid][1]);
	PlayerTextDrawHide(playerid, PlayerFuelTD[playerid][2]);
	return true;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(_:clickedid == INVALID_TEXT_DRAW)
	{
		if(GetPVarInt(playerid,"PlayingRoulette"))return SelectTextDraw(playerid,0x0099FFAA);
		if(GetPVarInt(playerid,"showedcoins"))return SelectTextDraw(playerid,0xFF4400AA);
		if(GetPVarInt(playerid,"showedbonesmenu"))
		{
			if(GetPVarInt(playerid,"BonesBet") && StolInfo[GetPVarInt(playerid,"BonesTable")-1][bGameStart])
				return Dialog_Open(playerid,8024,0,"{43CD80}Информация","\n\n\\c{FFFFFF}Если вы уйдёте из-за стола, Ваша ставка не вернётся Вам\n\n","Уйти","Остаться");
			else HideBonesMenu(playerid);
		}
		if(GetPVarInt(playerid,"showedroulmenu"))
		{
			if(GetPVarInt(playerid,"RoulBet") && RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rGameStart])
				return Dialog_Open(playerid,8027,0,"{43CD80}Информация","\n\n\\c{FFFFFF}Если вы уйдёте из-за стола, Ваша ставка не вернётся Вам\n\n","Уйти","Остаться");
			else HideRoulMenu(playerid);
		}
		if(GetPVarInt(playerid,"showedfool"))
		{
			if(GetPVarInt(playerid,"FoolBet") && FoolInfo[GetPVarInt(playerid,"FoolTable")-1][foolGamestart])
				return Dialog_Open(playerid,1485,0,"{43CD80}Информация","\n\n\\c{FFFFFF}Если вы уйдёте из-за стола, Ваша ставка не вернётся Вам\n\n","Уйти","Остаться");
			else HideFoolMenu(playerid);
		}
		if(clickerstat[playerid])return SelectTextDraw(playerid, 0xD94141AA);
		if(GetPVarInt(playerid,"SPAMTIMER") && PlayerInfo[playerid][pJob] == 24)return SelectTextDraw(playerid, 0x0099FFAA);
		if(GetPVarInt(playerid, "showedinv"))return HideInventory(playerid);
		if(GetPVarInt(playerid, "showedtarget"))return delmenutext(playerid);
		if(GetPVarInt(playerid, "showedtalents"))return SelectTextDraw(playerid, 0x0099FFAA);
		if(GetPVarInt(playerid, "tempstick"))return 2;
	}
	new string[512];
	if(clickedid == AlkMenu[6])
	{
		if(!GetPVarInt(playerid, "JailBreak"))return 1;
		for(new z; z < sizeof AlkMenu; z++)
		{
			if(z <= 6)DestroyPlayerTD(playerid, AlkTD[playerid][z]);
			TextDrawHideForPlayer(playerid, AlkMenu[z]);
		}
		if(IsPlayerToKvadrat(playerid, -2612, 1587, -1938, 2195))
		{
			Dialog_Open(playerid, 0, 0, "", "\n\n\
						\\c{ff4400}Вы не успели покинуть территорию тюрьмы и были пойманы. Срок вашего заключения был увеличен\n\
						\\c{C9EAFF}Повторить побег можно будет через 2 часа при наличии необходимых предметов", "Скрыть", "");
			PlayerInfo[playerid][pJailTime] += 3600;
			SpawnPlayer(playerid);
			PlayerInfo[playerid][pJB] = 1800;
		}
	}
	if(clickedid == AlkMenu[7])return Dialog_Open(playerid, 0, 0, "", "\n\n{ffffff}\
	\\cПобег из тюрьмы Алькатрас состоит из трёх этапов. На каждом из них вам нужно выполнить определённое\n\
	\\cзадание, чтобы преодолеть его\n\n\
	\\c{C9EAFF}Первый этап - взлом замка\n{ffffff}\
	\\cСоставьте жили личинки замка по центру, чтобы замок открылся. Правильно подобранная позиция жилы\n\
	\\cподсвечивается {B0F28F}зелёным{ffffff} цветом, остальные позиции подсвечиваются {7396FB}таким{ffffff} цветом.\n\
	\\cВам необходимо составить в один ряд все 7 жил, чтобы замок открылся\n\n\
	\\c{C9EAFF}Второй этап - вентиляция\n{ffffff}\
	\\cНа этом этапе Вам нужно отыскать в вентиляционной шахте выход наружу. Будьте внимательны, не заблудитесь!\n\n\
	\\c{C9EAFF}Третий этап - путь на волю\n{ffffff}\
	\\cВыбравшись наружу, Вам нужно починить сломанную лестницу с помощью клея и перебраться через забор.\n\
	\\cПеребравшись через забор, скорее плывите на сушу. Вам необходимо как можно скорее покинуть\n\
	\\cтюремную зону до того, как закончится время на побег. Рекомендуем Вам использовать маску, чтобы\n\
	\\cоставаться незамеченным на радарах для полиции\n\n", "Скрыть", "");
	if(clickedid==klick[20])
	{
		if(strlen(pclicklen[playerid]))
		{
			strdel(pclicklen[playerid],strlen(pclicklen[playerid])-1,strlen(pclicklen[playerid]));
			PlayerTextDrawSetString(playerid, pKlicked[playerid], pclicklen[playerid]);
			PlayerTextDrawShow(playerid, pKlicked[playerid]);
		}
		else
		{
			format(pclicklen[playerid],strlen(pclicklen[playerid]),"");
			DestroyPlayerTD(playerid,pKlicked[playerid]);
			for(new i; i < 21; i++)TextDrawHideForPlayer(playerid,klick[i]);
			clickerstat[playerid] = 0;
			Keychange[playerid] = 0;
			CancelSelectTextDraw(playerid);
			SendError(playerid,"Вы отменили процесс ввода кода безопасности");
		}
	}
	if(clickedid==klick[19])
	{
		new number=strval(pclicklen[playerid]);
		if(!IsPlayerLogged[playerid])
		{
			format(string, sizeof(string), "SELECT `KeyCheck`, `Key` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1", PlayerName[playerid]);
			new Cache:result = mysql_query(mysql, string);
			new cKey, Key;
			cKey = cache_get_row_int(0, 0, mysql);
			Key = cache_get_row_int(0, 1, mysql);
			cache_delete(result, mysql);
			if(cKey == 0 && Key != 0)
			{
				if(number!=Key)
				{
					SendError(playerid,"Неверно введён код безопасности");
					return J_Kick(playerid);
				}
				else
				{
					for(new i; i < 21; i++)TextDrawHideForPlayer(playerid,klick[i]);
					DestroyPlayerTD(playerid,pKlicked[playerid]);
					CancelSelectTextDraw(playerid);
					clickerstat[playerid] = 0;
					Keychange[playerid] = 0;
					new cIP1[16], cIP2[16], cIP3[16], tempip[16];
					format(string, sizeof(string), "SELECT `CheckIP1`, `CheckIP2`, `LastIP`, `AuthAct`, `AuthCode` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1", PlayerName[playerid]);
					new Cache:result2 = mysql_query(mysql, string);
					PlayerInfo[playerid][AuthAct] = cache_get_field_content_int(0, "AuthAct", mysql);
					cache_get_field_content(0, "AuthCode", PlayerInfo[playerid][AuthCode], 17);
					cache_get_row(0, 0, cIP1, mysql);
					cache_get_row(0, 1, cIP2, mysql);
					cache_get_row(0, 2, cIP3, mysql);
					cache_delete(result2, mysql);
					GetPlayerIp(playerid, tempip, 16);
					if(PlayerInfo[playerid][AuthAct] == 1 && !(IsASuccesIP(tempip, cIP1) || IsASuccesIP(tempip, cIP2) || IsASuccesIP(tempip, cIP3)))
					{
						SetPVarInt(playerid, "CodeActivated", 60);
						TogglePlayerControllable(playerid, 0);
						return ShowPlayerDialogEx(playerid, 947, DIALOG_STYLE_INPUT, "{43CD80}Google Authenticator", "{ffffff}Система безопасности запрашивает код из приложения Google Authenticator\nДля игры вам нужно ввести шестизначный код из приложения в поле ниже:", "Далее", "Выход");
					}
					else OnPlayerLogin(playerid);
				}
			}
		}
		else
		{
			if(PlayerInfo[playerid][pKey] == 0 || Keychange[playerid]==1)
			{
				if(strlen(pclicklen[playerid]) < 4 || strlen(pclicklen[playerid]) > 10) return ShowPlayerDialogEx(playerid, 0, 0,"", "{FFFFFF}Введите новый код безопасности\n\n{CC3B12}Ошибка: Длина кода безопасности должна быть не менее 4-х символов","Готово","Отмена");
				PlayerInfo[playerid][pKey] = number;
				format(string, sizeof(string),"Ваш новый код безопасности: {B83434}%d", number);
				SendClientMessage(playerid, COLOR_LIME, string);
				for(new i; i < 21; i++)TextDrawHideForPlayer(playerid,klick[i]);
				DestroyPlayerTD(playerid,pKlicked[playerid]);
				CancelSelectTextDraw(playerid);
				clickerstat[playerid] = 0;
				ShowUpdateSettings(playerid);
				Keychange[playerid] = 0;
			}
			else
			{
				if(PlayerInfo[playerid][pKey] == number) ShowKeySettings(playerid);
				else
				{
					SendError(playerid,"Неверно подтверждён код безопасности");
					SendInfo(playerid,"Если вы забыли код, вы можете его восстановить на нашем сайте");
					J_Kick(playerid);
				}
				for(new i; i < 21; i++)TextDrawHideForPlayer(playerid,klick[i]);
				DestroyPlayerTD(playerid,pKlicked[playerid]);
				CancelSelectTextDraw(playerid);
				clickerstat[playerid] = 0;
				Keychange[playerid] = 0;
			}
		}
	}
	for(new i = 13; i < 19;i++)
	{
		if(clickedid == klick[i])
		{
			format(pclicklen[playerid],10,"%s%d",pclicklen[playerid],checkcode[coderow][i-13]);
			PlayerTextDrawSetString(playerid, pKlicked[playerid], pclicklen[playerid]);
			PlayerTextDrawShow(playerid, pKlicked[playerid]);
			return 1;
		}
	}
	if(GetPVarInt(playerid, "showedcoins"))
	{
		if(clickedid == CoinsMenu[2])
		{
			if(CoinsOpponent[playerid] != INVALID_PLAYER_ID)HideCoins(CoinsOpponent[playerid]);
			HideCoins(playerid);
			return 1;
		}
		if(clickedid == CoinsMenu[5])return Dialog_Open(playerid, 0, 0, "Информация", "\n\n\
		\\c{C9EAFF}Вы играете в монеточку\n\
		\\c{ffffff}Суть этой игры заключается в том, чтобы угадать монетку, которую загадает Ваш\n\
		\\cоппонент. Если Вы угадали, то выигрыш в размере ставки, которую вы предлагали перед\n\
		\\cначалом игры, достаётся Вам. Если же нет, то выигрыш в той же сумме уходит вашему\n\
		\\cоппоненту. Деньги на ставку берутся с вашей наличности. Если сумма Вашей наличности\n\
		\\cбудет меньше установленной ставки, то Вы не сможете продолжить игру\n\n\
		\\c{ff4400}Для начала и завершения игры Вам и Вашему оппоненту необходимо выбрать одну\n\
		\\cиз трёх монеток. Монетку можно выбрать 1 раз за кон, будьте внимательны при выборе\n\n", "Скрыть", "");
	}
	if(GetPVarInt(playerid, "showedroulmenu"))
	{
		for(new i; i < 49; i++)
		{
			if(clickedid == roultd[i])
			{
				if(PlayerInfo[playerid][pJob] == JOB_GUIDE && InJob[playerid])return 1;
				if(GetPVarInt(playerid, "RoulBet"))return SendError(playerid, "Вы уже сделали ставку");
				if(RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rGameStart])return SendClientMessage(playerid,COLOR_GRAY,"Дождитесь окончания ролла");
				Dialog_Open(playerid,8026,1,"{43CD80}Ставка на рулетку","\n\n\\c{FFFFFF}Введите сумму ставки для предстоящей игры\n\n\\c{7396FB}Сумма должна быть от $1000 до $100000\n\n","Готово","Отмена");
				SetPVarInt(playerid,"RoulVar",i);
				break;
			}
		}
		if(clickedid == roultd[49])
		{
			if(GetPVarInt(playerid,"RoulBet") && RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rGameStart])
				return Dialog_Open(playerid,8027,0,"{43CD80}Информация","\n\n\\c{FFFFFF}Если вы уйдёте из-за стола, Ваша ставка не вернётся Вам\n\n","Уйти","Остаться");
			HideRoulMenu(playerid);
		}
	}
	if(GetPVarInt(playerid, "showedbonesmenu"))
	{
		if(clickedid == bonesmenu[1])
		{
			if(PlayerInfo[playerid][pJob] == JOB_GUIDE && InJob[playerid])
			{
				if(StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBank] > 0)return SendClientMessage(playerid,COLOR_GRAY,"Игроки уже сделали ставки");
				if(StolInfo[GetPVarInt(playerid,"BonesTable")-1][bGameStart])return SendClientMessage(playerid,COLOR_GRAY,"Дождитесь окончания игры");
				Dialog_Open(playerid,8023,1,"{43CD80}Ставка на игру","\n\n\\c{FFFFFF}Введите сумму ставки для предстоящей игры\n\n\\c{7396FB}Сумма должна быть от $1000 до $2500000\n\n","Готово","Отмена");
			}
			else
			{
				if(GetMoney(playerid) < StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBet])return SendError(playerid,"У Вас недостаточно средств");
				if(!StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBet])return SendError(playerid,"Дождитесь, пока крупье назначит ставку");
				if(GetPVarInt(playerid,"BonesBet"))return SendError(playerid,"Вы уже сделали ставку");
				if(StolInfo[GetPVarInt(playerid,"BonesTable")-1][bGameStart])return SendError(playerid,"Игра уже начата");
				StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBank] += StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBet];
				GiveMoney(playerid, -StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBet], "Bones Bet");
				UpdateBonesInfo(GetPVarInt(playerid,"BonesTable")-1);
				SetPVarInt(playerid,"BonesBet",StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBet]);
				TotalBets[GetPVarInt(playerid,"BonesTable")-1]++;
				TextDrawSetString(bonesscore[GetPVarInt(playerid,"BonesTable")-1][GetPVarInt(playerid, "BonesSlot")],"++");
			}
			return 1;
		}
		if(clickedid == bonesmenu[2])
		{
			if(PlayerInfo[playerid][pJob] == JOB_GUIDE && InJob[playerid])
			{
				if(StolInfo[GetPVarInt(playerid,"BonesTable")-1][bGameStart])return SendError(playerid,"Игра уже начата");
				if(!StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBet])return SendError(playerid,"Сначала нужно установить ставку");
				if(StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBank] < StolInfo[GetPVarInt(playerid,"BonesTable")-1][bBet]*2)return SendError(playerid,"Дождитесь, пока игроки сделают ставки");
				TimeStavka[GetPVarInt(playerid,"BonesTable")-1] = 30;
				StolInfo[GetPVarInt(playerid,"BonesTable")-1][bGameStart] = 1;
				deal[playerid]++;
				return 1;
			}
			else
			{
				if(!StolInfo[GetPVarInt(playerid,"BonesTable")-1][bGameStart])return SendError(playerid,"Дождитесь, пока начнётся игра");
				if(!GetPVarInt(playerid,"BonesBet"))return SendError(playerid,"Сначала нужно сделать ставку");
				if(GetPVarInt(playerid,"BonesScore"))return SendError(playerid,"Вы уже бросили кубик");
				SetPVarInt(playerid,"BonesScore", random(6)+1);
				StolInfo[GetPVarInt(playerid,"BonesTable")-1][bScore]++;
				if(StolInfo[GetPVarInt(playerid,"BonesTable")-1][bScore] == TotalBets[GetPVarInt(playerid,"BonesTable")-1])TimeStavka[GetPVarInt(playerid,"BonesTable")-1] = 3;
				new str[5];
				format(str,sizeof str,"%d",GetPVarInt(playerid,"BonesScore"));
				TextDrawSetString(bonesscore[GetPVarInt(playerid,"BonesTable")-1][GetPVarInt(playerid, "BonesSlot")],str);
				return 1;
			}
		}
		if(clickedid == bonesmenu[3])
			Dialog_Open(playerid,0,0,"{43CD80}Информация","\n\n\\c{FFFFFF}Вы находитесь за столом, где играют в 'кости'\
			\n\\cЧтобы победить, Вам необходимо выбросить кубик с наибольшим\
			\n\\cчислом. Чтобы начать игру, нажмите кнопку 'Ставка' и когда\
			\n\\cначнётся отчёт нажмите кнопку 'PLAY'. Вы можете не выполнять\
			\n\\cпоследнее действие, по истечению времени кубики бросятся\
			\n\\cавтоматически. Для игры необходимо минимум 2 человека за столом\
			\n\n\\c{7396FB}Желаем Вам приятной игры и больших побед!\n\n","Скрыть","");
		if(clickedid == bonesmenu[4])
		{
			if(GetPVarInt(playerid,"BonesBet") && StolInfo[GetPVarInt(playerid,"BonesTable")-1][bGameStart])
				return Dialog_Open(playerid,8024,0,"{43CD80}Информация","\n\n\\c{FFFFFF}Если вы уйдёте из-за стола, Ваша ставка не вернётся Вам\n\n","Уйти","Остаться");
			HideBonesMenu(playerid);
			return 1;
		}
	}
	if(GetPVarInt(playerid, "showedtalents")){
		if(clickedid == TalentsTD[3]){
			HideTalents(playerid);
			return ShowInventory(playerid);
		}
		if(clickedid == TalentsTD[4]){
			if(!TalentsInfo[playerid][SelectedBrunch[playerid]][0] && TalentsInfo[playerid][SelectedBrunch[playerid]][1] && TalentsInfo[playerid][SelectedBrunch[playerid]][2])return SendError(playerid, "Вы ещё не исследовали эту ветку талантов");
			return Dialog_Open(playerid, 537, 0, "Подтверждение", "\n\n\\c{FFFFFF}Вы уверены, что хотите сбросить эту ветку талантов?\n\\c{FFCB8C}Потраченные очки таланта вернутся\n\n","Сбросить","Отмена");
		}
	}
	if(GetPVarInt(playerid, "showedfool"))
	{
		new foolid = GetPVarInt(playerid, "FoolTable")-1;
		if(clickedid == FoolMenuTD[foolid][2])//ставка
		{
			if(FoolInfo[foolid][foolTotal] > 0)return SendError(playerid, "Кто-то из игроков уже согласился играть на эту сумму");
			if(FoolInfo[foolid][foolGamestart])return SendError(playerid, "Игра уже начата");
			return Dialog_Open(playerid,1484,1,"{43CD80}Ставка на игру","\n\n\\c{FFFFFF}Введите сумму ставки для предстоящей игры\n\n\\c{7396FB}Сумма должна быть от $1000 до $500000\n\n","Готово","Отмена");
		}
		if(clickedid == FoolMenuTD[foolid][6])//готовность
		{
			if(FoolInfo[foolid][foolGamestart])return SendError(playerid,"Игра уже начата");
			if(!FoolInfo[foolid][foolBet])return SendError(playerid,"Сначала нужно установить ставку");
			if(GetPVarInt(playerid,"FoolScore"))return SendError(playerid,"Вы уже объявили о готовности");
			if(GetMoney(playerid) < FoolInfo[foolid][foolBet])return SendError(playerid, "У Вас недостаточно средств, чтобы принять такую ставку");
			SetPVarInt(playerid,"FoolScore", 1);
			SetPVarInt(playerid,"FoolBet", FoolInfo[foolid][foolBet]);
			FoolInfo[foolid][foolBank] += FoolInfo[foolid][foolBet];
			FoolInfo[foolid][foolTotal]++;
			GiveMoney(playerid, -FoolInfo[foolid][foolBet], "Ставка в дурака");
			TextDrawSetString(FoolPlayersTD[foolid][GetPVarInt(playerid, "FoolSlot")+4],"++");
			if(FoolInfo[foolid][foolTotal] == FoolInfo[foolid][foolPlayers] && FoolInfo[foolid][foolPlayers] >= 2)FoolInfo[foolid][foolTimer] = 15;
			return 1;
		}
		if(clickedid == FoolMenuTD[foolid][4])//покинуть игру
		{
			if(GetPVarInt(playerid,"FoolBet") && FoolInfo[GetPVarInt(playerid,"FoolTable")-1][foolGamestart])
				return Dialog_Open(playerid,1485,0,"{43CD80}Информация","\n\n\\c{FFFFFF}Если вы уйдёте из-за стола, Ваша ставка не вернётся Вам\n\n","Уйти","Остаться");
			else return HideFoolMenu(playerid);
		}
		for(new i; i < 6; i++)
		{
			if(clickedid == FoolCardsTD[foolid][i])
			{
				if(!FoolInfo[foolid][foolGamestart])return 1;
				if(playerid == FoolInfo[foolid][foolDefence])
				{
					if(!GetPVarInt(playerid, "SelectedCard"))return SendClientMessage(playerid, COLOR_LIGHTBLUE, "Сначала нужно выбрать карту, которой будете биться");
					PlayerTextDrawColor(playerid, FoolCards[playerid][GetPVarInt(playerid, "SelectCard")], 0xFFFFFFFF);
					PlayerTextDrawShow(playerid, FoolCards[playerid][GetPVarInt(playerid, "SelectCard")]);
					if(strlen(DownCards[foolid][i]) > 5)
					{
						DeletePVar(playerid, "SelectedCard");
						DeletePVar(playerid, "SelectCard");
						return SendClientMessage(playerid, COLOR_ORANGE, "Эта карта уже отбита");
					}
					if(strlen(UpCards[foolid][i]) < 5)
					{
						DeletePVar(playerid, "SelectedCard");
						DeletePVar(playerid, "SelectCard");
						return SendClientMessage(playerid, COLOR_ORANGE, "Нет карты, которую можно отбить");
					}
					new number[2],//0 - карта игрока, 1 - карта на столе
					levelcard[6],//величина карты
					mast[6],//масть
					levelstol[6],//величина карты на столе,
					maststol[6];//масть карты на столе
					strmid(levelcard, PlayerCards[playerid][GetPVarInt(playerid, "SelectCard")], 10, strlen(PlayerCards[playerid][GetPVarInt(playerid, "SelectCard")])-1);
					strmid(mast, PlayerCards[playerid][GetPVarInt(playerid, "SelectCard")], strlen(PlayerCards[playerid][GetPVarInt(playerid, "SelectCard")])-1, strlen(PlayerCards[playerid][GetPVarInt(playerid, "SelectCard")]));
					strmid(levelstol, UpCards[foolid][i], 10, strlen(UpCards[foolid][i])-1);
					strmid(maststol, UpCards[foolid][i], strlen(UpCards[foolid][i])-1, strlen(UpCards[foolid][i]));
					sscanf(levelcard, "d", number[0]);
					sscanf(levelstol, "d", number[1]);
					if(GetString(mast, maststol))return SetBit(playerid, foolid, number[0], number[1], i);
					else if(GetString(mast, FoolInfo[foolid][foolTrump]))return SetBit(playerid, foolid, number[0], number[1], i, 1);
					else
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, "Эта карта другой масти. Ей нельзя отбиться");
						DeletePVar(playerid, "SelectedCard");
						DeletePVar(playerid, "SelectCard");
						return 1;
					}
				}
				return 1;
			}
		}
		if(clickedid == FoolOtherTD[foolid][4])//бито
		{
			FoolInfo[foolid][foolBito]++;
			for(new x; x < 4; x++){
				if(FoolGamers[foolid][x] != INVALID_PLAYER_ID && FoolGamers[foolid][x] != FoolInfo[foolid][foolDefence]){
					TextDrawHideForPlayer(FoolGamers[foolid][x], FoolOtherTD[foolid][4]);
				}
			}
			TextDrawHideForPlayer(FoolInfo[foolid][foolDefence], FoolOtherTD[foolid][3]);
			if(FoolInfo[foolid][foolBito] == FoolInfo[foolid][foolPlayers]-1)
			{
				for(new x; x < 6; x++)
				{
					SetString(UpCards[foolid][x], "");
					TextDrawSetString(FoolCardsTD[foolid][x], "_");
					SetString(DownCards[foolid][x], "");
					TextDrawSetString(BitCardsTD[foolid][x], "_");
					if(x < 4)
					{
						if(FoolGamers[foolid][x] != INVALID_PLAYER_ID)
						{
							if(!GetPVarInt(FoolGamers[foolid][x], "FoolBet"))continue;
							PlayerTextDrawColor(FoolGamers[foolid][x], FoolCards[FoolGamers[foolid][x]][GetPVarInt(FoolGamers[foolid][x], "SelectCard")], 0xFFFFFFFF);
							PlayerTextDrawShow(FoolGamers[foolid][x], FoolCards[FoolGamers[foolid][x]][GetPVarInt(FoolGamers[foolid][x], "SelectCard")]);
							DeletePVar(FoolGamers[foolid][x], "SelectedCard");
							DeletePVar(FoolGamers[foolid][x], "SelectCard");
						}
					}
				}
				SwitchTurn(foolid, 2);
			}
			return 1;
		}
		if(clickedid == FoolOtherTD[foolid][3])//взять карты
		{
			GiveCards(playerid, foolid);
			if(FoolInfo[foolid][foolPlayers] == 2)SwitchTurn(foolid, 3);
			else SwitchTurn(foolid, 0);
			for(new x; x < 4; x++){
				if(FoolGamers[foolid][x] != INVALID_PLAYER_ID && FoolGamers[foolid][x] != FoolInfo[foolid][foolDefence]){
					TextDrawHideForPlayer(FoolGamers[foolid][x], FoolOtherTD[foolid][4]);
				}
			}
			TextDrawHideForPlayer(FoolInfo[foolid][foolDefence], FoolOtherTD[foolid][3]);
			return 1;
		}
	}
	if(GetPVarInt(playerid,"PlayingRoulette"))
	{
		for(new i = 1; i < 5; i++)
		{
			if(clickedid == Roulette[i])
			{
				SelectCase[playerid] = i;
				for(new p = 1; p < 10; p++)
					TextDrawHideForPlayer(playerid, Roulette[p]);
				for(new s = 21; s < 34; s++)
				{
					if(s == 22)continue;
					TextDrawShowForPlayer(playerid, Roulette[s]);
				}
				PlayerTextDrawHide(playerid,PlayerRoulette[playerid][0]);
				for(new d = 1; d <= 6; d++)
					PlayerTextDrawShow(playerid,PlayerRoulette[playerid][d]);
				return 1;
			}
		}
		if(clickedid == Roulette[9])
		{
			if(GetPVarInt(playerid,"RouletteRolling"))return SendError(playerid,"Дождитесь окончания прокрутки");
			SelectCase[playerid] = 0;
			for(new i; i < 34; i++)
				TextDrawHideForPlayer(playerid,Roulette[i]);
			DeletePVar(playerid,"PlayingRoulette");
			for(new p; p < 9; p++)
				PlayerTextDrawHide(playerid,PlayerRoulette[playerid][p]);
			CancelSelectTextDraw(playerid);
			return 1;
		}
		if(clickedid == Roulette[27])
		{
			if(GetPVarInt(playerid,"RouletteRolling"))return SendError(playerid,"Дождитесь окончания прокрутки");
			SelectCase[playerid] = 0;
			for(new s = 21; s < 34; s++)
				TextDrawHideForPlayer(playerid, Roulette[s]);
			for(new p = 1; p < 10; p++)
				TextDrawShowForPlayer(playerid, Roulette[p]);
			for(new d = 1; d < 9; d++)
				PlayerTextDrawHide(playerid,PlayerRoulette[playerid][d]);
			PlayerTextDrawShow(playerid,PlayerRoulette[playerid][0]);
			return 1;
		}
		if(clickedid == Roulette[28])
		{
			if(GetPVarInt(playerid,"RouletteRolling"))return SendError(playerid,"Дождитесь окончания прокрутки");
			SelectCase[playerid] = 0;
			for(new i; i < 34; i++)TextDrawHideForPlayer(playerid,Roulette[i]);
			DeletePVar(playerid,"PlayingRoulette");
			for(new p; p < 9; p++)PlayerTextDrawHide(playerid,PlayerRoulette[playerid][p]);
			CancelSelectTextDraw(playerid);
			return 1;
		}
		if(clickedid == Roulette[25])
		{
			if(PlayerInfo[playerid][RoulBalance] < CasePrice[SelectCase[playerid]-1])return SendError(playerid,"Недостаточно средств для покупки этого кейса");
			if(ItemRestrict{playerid} == 1)return SendError(playerid, "Список предметов переполнен. Продайте что-нибудь из выигранных призов");
			if(GetPVarInt(playerid,"RouletteRolling"))return SendError(playerid,"Дождитесь окончания прокрутки");
			SetPVarInt(playerid,"RouletteRolling",1);
			CancelSelectTextDraw(playerid);
			RouletteRepeat[playerid] = random(5)+7;
			PlayerInfo[playerid][RoulBalance] -= CasePrice[SelectCase[playerid]-1];
			RouletteTimer[playerid] = SetTimerEx("RollingRepeater", 1200, true, "i", playerid);
			return 1;
		}
		if(clickedid == Roulette[26])
		{
			new items[7000];
			strcat(items,"Приз\tСтоимость");
			for(new i; i < 100; i++)
			{
				if(ItemInfo[playerid][plrID][0] == 0)return ShowPlayerDialogEx(playerid, 0, 0, "{43CD80}Ошибка", "{FFFFFF}Список выигрышей пуст","Скрыть","");
				if(ItemInfo[playerid][plrID][i] == 0)break;
				format(items, sizeof items, "%s\n{FFFFFF}%s\t{ff4400}%d рублей",items,ItemNames[ItemInfo[playerid][plrPrize][i]],ItemInfo[playerid][plrPrice][i]);
			}
			ShowPlayerDialogEx(playerid, 1236, 5, "{43CD80}Список выигрышей", items, "Выбрать", "Закрыть");
			return 1;
		}
	}
	if(clickedid == Bandito[6])
	{
	    if(Gambling[playerid] == G_STATE_READY)
        {
            Bet[playerid] = GetNextValidBet(Bet[playerid]);
            UpdateBetText(playerid);
        }
        return 1;
	}
	if(clickedid == Bandito[4])
	{
	    if(Gambling[playerid] == G_STATE_READY)
        {
			Bet[playerid] = GetNextValidMBet(Bet[playerid]);
		 	UpdateBetText(playerid);
		}
		return 1;
	}
	if(clickedid == Bandito[8])
	{
	    if(Gambling[playerid] == G_STATE_READY) return ExitPlayerFromSlotMachine(playerid);
	}
	if(clickedid == Bandito[5])
	{
	    if(Gambling[playerid] == G_STATE_READY)
        {
            new money = SlotValue[playerid][0];
            if(Bet[playerid] > money+Balance[playerid]) return GameTextForPlayer(playerid,"~r~You haven't enough money",5000,4);
            if(Balance[playerid] - Bet[playerid] < 0) return GameTextForPlayer(playerid,"~r~Your balance is too low",5000,4);
            SeccureAnimation(playerid, "CASINO", "Slot_Plyr");
            SlotCounter[playerid] = 30+random(18);
        	SlotTimer[playerid] = SetTimerEx("Gambler",GAMBLE_TIMER,1,"d",playerid);
        	Gambling[playerid] = G_STATE_GAMBLING;
            Balance[playerid]-=Bet[playerid];
			UpdateBetText(playerid);
        }
        return 1;
	}
	if(clickedid == SphoneKey[0])
	{
		if(!PlayerInfo[playerid][pZa_Skill]) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{D94141}Ваш телефон выключен\n{FFFFFF}Вам необходимо его включить, чтобы начать использование","Скрыть","");
		format(string,sizeof(string),"SELECT `phonebook`.`Namez`,`phonebook`.`Num`,`accounts`.`TelNum`,`accounts`.`Online_status`,`phonebook`.`Group` FROM `phonebook`,`accounts` WHERE `phonebook`.`Name`='%s' AND `accounts`.`NickName`=`phonebook`.`Namez` ORDER BY `phonebook`.`Group` DESC;",PlayerName[playerid]);
		mysql_pquery(mysql, string, "MysqlShowContacts", "d", playerid);
		return 1;
	}
	if(clickedid == SphoneKey[1])
	{
		if(!PlayerInfo[playerid][pZa_Skill]) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{D94141}Ваш телефон выключен\n{FFFFFF}Вам необходимо его включить, чтобы начать использование","Скрыть","");
		mysql_query(mysql, "SET sql_mode = ''", false);
		format(string,sizeof(string),"SELECT t.`Name`, t.`Namez`, t.`Text`, t.`read`, t.`time` FROM `phonemes` AS t JOIN (SELECT `Name`, `Text`, max(`time`) as `mtime` FROM `phonemes` WHERE `Namez`='%s' GROUP BY `Name`) as t1 ON t.`Name`= t1.`Name` AND t.`time` = t1.`mtime` ORDER BY t.`time` DESC;",PlayerName[playerid]);
		mysql_pquery(mysql, string, "ShowPlayerMessages", "d", playerid);
		return 1;
	}
	if(clickedid == SphoneKey[5])
	{
		if(SlotValue[playerid][19] == 0 || SlotValue[playerid][19] == 1) return SendError(playerid, "У вас нет телефона или SIM-карты");
		if(PlayerInfo[playerid][pZa_Skill])
		{
			PlayerInfo[playerid][pZa_Skill]=0;
			ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{ffffff}Вы {D94141}выключили{FFFFFF} телефон","Скрыть","");
			for(new i;i < 5;i++) TextDrawHideForPlayer(playerid,SphoneKey[i]);
		}
		else
		{
			PlayerInfo[playerid][pZa_Skill]=1;
			ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{ffffff}Вы {43CD80}включили{FFFFFF} телефон","Скрыть","");
			for(new i; i < 5;i++) TextDrawShowForPlayer(playerid,SphoneKey[i]);
		}
		return 1;
	}
	if(clickedid == SphoneKey[6])
	{
		if(SlotValue[playerid][19] == 0 || SlotValue[playerid][19] == 1) return SendError(playerid, "У вас нет телефона или SIM-карты");
		for(new i;i < 23;i++) TextDrawHideForPlayer(playerid,SphoneKey[i]);
		for(new i;i < 13;i++) TextDrawHideForPlayer(playerid,Sphone[i]);
		DestroyPlayerTD(playerid, Ppnumber[playerid]);
		CancelSelectTextDraw(playerid);
		return 1;
	}
	if(clickedid == SphoneKey[3])
	{
		OnPlayerClickTextDraw(playerid, SphoneKey[6]);
		for(new i; i < 21; i++)
		TextDrawShowForPlayer(playerid, Roulette[i]);
		new balance[64];
		format(balance, sizeof balance,"~w~DONATE: ~y~%d COINS~n~~w~BALANCE: ~g~%d POINTS",PlayerInfo[playerid][pVirMoney],PlayerInfo[playerid][RoulBalance]);
		PlayerTextDrawSetString(playerid,PlayerRoulette[playerid][0],balance);
		PlayerTextDrawShow(playerid,PlayerRoulette[playerid][0]);
		Dialog_Open(playerid, 0, 0, "{43CD80}Информация", "\n\n\
		\\c{FFFFFF}Для пополнения баланса рулетки нажмите {7396FB}BALANCE\n\
		\\c{FFFFFF}Пополнение баланса производится с баланса донат-счёта вашего аккаунта\n\
		\\cПосмотреть баланс, доступный для вывода, вы можете в {7396FB}'/mn » Донат'\n\n\
		\\c{C9EAFF}Желаем Вам приятной игры и больших побед!\n\n", "Скрыть","");
		SelectTextDraw(playerid, 0xD94141AA);
		SetPVarInt(playerid, "PlayingRoulette",1);
	}
	for(new i = 8;i < 18;i++)
	{
		new nums[10] = {2,5,8,0,1,4,7,3,6,9};
		if(clickedid == SphoneKey[i])
		{
			format(Pstroka[playerid],8,"%s%d",Pstroka[playerid],nums[i-8]);
			PlayerTextDrawSetString(playerid, Ppnumber[playerid], Pstroka[playerid]);
			PlayerTextDrawShow(playerid, Ppnumber[playerid]);
		}
	}
	if(clickedid==SphoneKey[21])
	{
		if(strlen(Pstroka[playerid])>1)
		{
			format(Pstroka[playerid],strlen(Pstroka[playerid]),"%s",Pstroka[playerid]);
			PlayerTextDrawSetString(playerid, Ppnumber[playerid], Pstroka[playerid]);
			PlayerTextDrawShow(playerid, Ppnumber[playerid]);
		}
		else
		{
			format(Pstroka[playerid],strlen(Pstroka[playerid]),"");
			PlayerTextDrawSetString(playerid, Ppnumber[playerid], "_");
			PlayerTextDrawShow(playerid, Ppnumber[playerid]);
		}
	}
	if(clickedid==SphoneKey[20])
	{
		if(!SlotValue[playerid][19] || !SlotValue[playerid][19])return false;
		if(strlen(Pstroka[playerid])==7)
		{
			new number=strval(Pstroka[playerid]);
			foreach(Player, id)
			{
				if(SlotValue[id][19] == number)
				{
					if(PlayerInfo[playerid][pCalling]!=-1) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}Вы уже кому-то звоните","Скрыть","");
					if(PlayerInfo[playerid][pIn_Skill]<15) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}У вас на балансе недостаточно средств для того, чтобы вести разговор\n{ffffff}Пополнить баланс телефона можно у любого банкомата штата или\nвы можете выслать {7396FB}*130* {ffffff}своему другу с просьбой перезвонить","Скрыть","");
					if(PlayerInfo[id][pCalling]!=-1) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{D94141}Линия занята","Скрыть","");
					if(PlayerInfo[id][pZa_Skill]!=1)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{ffffff}Ваш абонент вне зоны действия сети\n{7396FB}Вы можете оставить ему сообщение. Как только он появится в сети, он его сможет прочитать","Скрыть","");
					foreach(new i:Player)
					{
						if(PlayerInfo[i][pCalling]==id && IsPlayerLogged[i]) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{D94141}Занято. Пожалуйста, перезвоните позже","Скрыть","");
					}
					PlayerInfo[playerid][pCalling]=id;
					format(string,sizeof(string),"UPDATE `phonebook` SET `num`='0' WHERE `Name`='%s' AND `Namez`='%s'",PlayerName[playerid],PlayerName[PlayerInfo[playerid][pCalling]]);
					mysql_pquery(mysql, string);
					for(new i;i<13;i++)TextDrawHideForPlayer(playerid,Sphone[i]);
					for(new i;i<23;i++)TextDrawHideForPlayer(playerid,SphoneKey[i]);
					TextDrawShowForPlayer(playerid, Calling[1]);
					TextDrawShowForPlayer(playerid, Calling[3]);
					for(new i; i < 5; i++)TextDrawShowForPlayer(playerid,Sphone[i]);
					format(string, sizeof(string), "%s", PlayerName[id]);
					callname[playerid] = CreatePlayerTextDraw(playerid, 85.666709, 200.770492, string);
					PlayerTextDrawBackgroundColor(playerid, callname[playerid], 255);
					PlayerTextDrawFont(playerid, callname[playerid], 2);
					PlayerTextDrawLetterSize(playerid, callname[playerid], 0.126665, 0.874073);
					PlayerTextDrawAlignment(playerid, callname[playerid], 2);
					PlayerTextDrawColor(playerid, callname[playerid], 255);
					PlayerTextDrawSetOutline(playerid, callname[playerid], 0);
					PlayerTextDrawSetProportional(playerid, callname[playerid], 1);
					PlayerTextDrawSetShadow(playerid, callname[playerid], 0);
					PlayerTextDrawSetSelectable(playerid, callname[playerid], 0);
					PlayerTextDrawShow(playerid, callname[playerid]);
					calltime[playerid] = CreatePlayerTextDraw(playerid, 85.666740, 208.407485, "calling...");
					PlayerTextDrawBackgroundColor(playerid, calltime[playerid], 255);
					PlayerTextDrawFont(playerid, calltime[playerid], 1);
					PlayerTextDrawAlignment(playerid, calltime[playerid], 2);
					PlayerTextDrawLetterSize(playerid, calltime[playerid], 0.126665, 0.874073);
					PlayerTextDrawColor(playerid, calltime[playerid], 255);
					PlayerTextDrawSetOutline(playerid, calltime[playerid], 0);
					PlayerTextDrawSetProportional(playerid, calltime[playerid], 1);
					PlayerTextDrawSetShadow(playerid, calltime[playerid], 0);
					PlayerTextDrawSetSelectable(playerid, calltime[playerid], 0);
					PlayerTextDrawShow(playerid, calltime[playerid]);
					for(new i;i<13;i++)TextDrawHideForPlayer(id,Sphone[i]);
					for(new i;i<23;i++)TextDrawHideForPlayer(id,SphoneKey[i]);
					for(new i; i < 5; i++)TextDrawShowForPlayer(id,Sphone[i]);
					TextDrawShowForPlayer(id, Calling[0]);
					TextDrawShowForPlayer(id, Calling[1]);
					TextDrawShowForPlayer(id, Calling[2]);
					TextDrawShowForPlayer(id, Calling[3]);
					format(string, sizeof(string), "%s", PlayerName[playerid]);
					callname[id] = CreatePlayerTextDraw(id,85.666709, 200.770492, string);
					PlayerTextDrawBackgroundColor(id, callname[id], 255);
					PlayerTextDrawFont(id, callname[id], 2);
					PlayerTextDrawAlignment(id, callname[playerid], 2);
					PlayerTextDrawLetterSize(id, callname[id], 0.126665, 0.874073);
					PlayerTextDrawColor(id, callname[id], 255);
					PlayerTextDrawSetOutline(id, callname[id], 0);
					PlayerTextDrawSetProportional(id, callname[id], 1);
					PlayerTextDrawSetShadow(id, callname[id], 0);
					PlayerTextDrawSetSelectable(id, callname[id], 0);
					PlayerTextDrawShow(id, callname[id]);
					calltime[id] = CreatePlayerTextDraw(id, 85.666740, 208.407485, "incoming call...");
					PlayerTextDrawBackgroundColor(id, calltime[id], 255);
					PlayerTextDrawFont(id, calltime[id], 1);
					PlayerTextDrawLetterSize(id, calltime[id], 0.126665, 0.874073);
					PlayerTextDrawAlignment(id, calltime[playerid], 2);
					PlayerTextDrawColor(id, calltime[id], 255);
					PlayerTextDrawSetOutline(id, calltime[id], 0);
					PlayerTextDrawSetProportional(id, calltime[id], 1);
					PlayerTextDrawSetShadow(id, calltime[id], 0);
					PlayerTextDrawSetSelectable(id, calltime[id], 0);
					PlayerTextDrawShow(id, calltime[id]);
					SetPlayerChatBubble(id, "Звонит телефон", COLOR_PURPLE, 10.0, 10000);
					PlayerPlaySound(id, 20600, 0.0, 0.0, 0.0);
				}
			}
		}
		if(!strcmp(Pstroka[playerid],"111",true))
		{
			format(string,sizeof(string),"{ffffff}На балансе вашего телефона {7396FB}$%d{FFFFFF}\n\n",PlayerInfo[playerid][pIn_Skill]);
			if(GLS[23]>0) format(string,sizeof(string),"%s {43CD80}Сегодня проходит акция, на сервере включены х3 ЕХР",string);
			else format(string,sizeof(string),"%s",string);
			ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть","");
			SetPlayerChatBubble(playerid, "Набрал неизвестный номер", COLOR_PURPLE, 10.0, 5000);
		}
		if(!strcmp(Pstroka[playerid],"060",true))
		{
			new hour,minuite,second;
			gettime(hour,minuite,second);
			new year, month,day;
			getdate(year, month, day);
			format(string,sizeof(string),"Здравствуйте!\nВы позвонили в службу точного времени\n\nСегодняшняя дата: {7396FB}%d:%d:%d{FFFFFF}\nТекущее время: {7396FB}%d:%d:%d\n\n{43CD80}Приятной игры на Good Game",day,month,year,hour,minuite,second);
			if(GLS[23]>0) format(string,sizeof(string),"%s {43CD80}Сегодня проходит акция, на сервере включены х3 ЕХР",string);
			else format(string,sizeof(string),"%s",string);
			ShowPlayerDialogEx(playerid,0,0,"",string,"Скрыть","");
			SetPlayerChatBubble(playerid, "Позвонил в службу точного времени", COLOR_PURPLE, 10.0, 5000);
		}
		if(!strcmp(Pstroka[playerid],"911",true)) ShowPlayerDialogEx(playerid,959,1,"{43CD80}Вызвать полицию","{7396FB}Опишите место где вы находитесь\n{7396FB}Сообщение должно состоять из 6 до 20 символов","Принять","Отмена");
		if(!strcmp(Pstroka[playerid],"103",true)) ShowPlayerDialogEx(playerid,958,1,"{43CD80}Вызвать скорую помощь","{7396FB}Опишите место где вы находитесь\n{7396FB}Сообщение должно состоять из 6 до 20 символов","Принять","Отмена");
		if(!strcmp(Pstroka[playerid],"999",true)) ShowPlayerDialogEx(playerid,960,1,"{43CD80}Вызвать такси","{7396FB}Опишите место где вы находитесь\n{7396FB}Сообщение должно состоять из 6 до 20 символов","Принять","Отмена");
		if(!strcmp(Pstroka[playerid],"888",true)) ShowPlayerDialogEx(playerid,961,1,"{43CD80}Вызвать механика","{7396FB}Опишите место где вы находитесь\n{7396FB}Сообщение должно состоять из 6 до 20 символов","Принять","Отмена");
		return 1;
	}
	if(clickedid == SphoneKey[2])///dial
	{
		format(Pstroka[playerid],8,"");
		for(new i;i < 7;i++)TextDrawHideForPlayer(playerid,SphoneKey[i]);
		for(new i = 5;i < 13;i++)TextDrawHideForPlayer(playerid,Sphone[i]);
		for(new i = 7;i < 23;i++)TextDrawShowForPlayer(playerid,SphoneKey[i]);
		Ppnumber[playerid] = CreatePlayerTextDraw(playerid, 86.608062, 202.376708, "_");
		PlayerTextDrawLetterSize(playerid, Ppnumber[playerid], 0.288781, 1.238913);
		PlayerTextDrawAlignment(playerid, Ppnumber[playerid], 2);
		PlayerTextDrawColor(playerid, Ppnumber[playerid], -1);
		PlayerTextDrawSetShadow(playerid, Ppnumber[playerid], 0);
		PlayerTextDrawSetOutline(playerid, Ppnumber[playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, Ppnumber[playerid], 51);
		PlayerTextDrawFont(playerid, Ppnumber[playerid], 3);
		PlayerTextDrawSetProportional(playerid, Ppnumber[playerid], 1);
		PlayerTextDrawShow(playerid, Ppnumber[playerid]);
		SendInfo(playerid,"Номера телефонов государственных служб");
		SendInfo(playerid,"• 111 - {7396FB}Проверить баланс телефона");
		SendInfo(playerid,"• 060 - {7396FB}Служба точного времени");
		SendInfo(playerid,"• 911 - {7396FB}Полицейский участок");
		SendInfo(playerid,"• 103 - {7396FB}Скорая помощь");
		SendInfo(playerid,"• 999 - {7396FB}Таксопарк");
		SendInfo(playerid,"• 888 - {7396FB}Автомеханики");
		return 1;
	}
	if(clickedid == SphoneKey[22])///back
	{
		format(Pstroka[playerid],8,"");
		for(new i = 7;i < 23;i++)TextDrawHideForPlayer(playerid,SphoneKey[i]);
		for(new i = 5;i < 13;i++)TextDrawShowForPlayer(playerid,Sphone[i]);
		for(new i;i < 7;i++)TextDrawShowForPlayer(playerid,SphoneKey[i]);
		DestroyPlayerTD(playerid, Ppnumber[playerid]);
		return 1;
	}
	if(clickedid == Calling[1])
	{
		if(PlayerInfo[playerid][pCalling]!=-1)
		{
			if(PlayerInfo[playerid][pONPhoneTalk]>0)
			{
				format(string,sizeof(string),"Звонок окончен! Время разговора %s",Convert(PlayerInfo[playerid][pONPhoneTalk]));
				SendClientMessage(playerid,COLOR_GRAY,string);
				RemovePlayerAttachedObjectEx(playerid, 6);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				format(string,sizeof(string),"Звонок окончен! Время разговора %s",Convert(PlayerInfo[PlayerInfo[playerid][pCalling]][pONPhoneTalk]));
				SendClientMessage(PlayerInfo[playerid][pCalling],COLOR_GRAY,string);
				RemovePlayerAttachedObjectEx(PlayerInfo[playerid][pCalling], 6);
				SetPlayerSpecialAction(PlayerInfo[playerid][pCalling],SPECIAL_ACTION_STOPUSECELLPHONE);
			}
			if(PlayerInfo[PlayerInfo[playerid][pCalling]][pONPhoneTalk]==0)
			{
				format(string,sizeof(string),"UPDATE `phonebook` SET `num`=`num`+1 WHERE `Namez`='%s' AND `Name`='%s'",PlayerName[playerid], PlayerName[PlayerInfo[playerid][pCalling]]);
				mysql_pquery(mysql, string);
			}
			for(new i; i < 5; i++)TextDrawHideForPlayer(playerid,Sphone[i]);
			for(new i; i < 5; i++)TextDrawHideForPlayer(PlayerInfo[playerid][pCalling],Sphone[i]);
			DestroyPlayerTD(PlayerInfo[playerid][pCalling],callname[PlayerInfo[playerid][pCalling]]);
			DestroyPlayerTD(PlayerInfo[playerid][pCalling],calltime[PlayerInfo[playerid][pCalling]]);
			PlayerInfo[PlayerInfo[playerid][pCalling]][pONPhoneTalk] = 0;
			PlayerInfo[PlayerInfo[playerid][pCalling]][pCalling] = -1;
			TextDrawHideForPlayer(playerid, Calling[1]);
			TextDrawHideForPlayer(playerid, Calling[3]);
			TextDrawHideForPlayer(PlayerInfo[playerid][pCalling], Calling[1]);
			TextDrawHideForPlayer(PlayerInfo[playerid][pCalling], Calling[3]);
			DestroyPlayerTD(playerid,callname[playerid]);
			DestroyPlayerTD(playerid,calltime[playerid]);
			PlayerInfo[playerid][pCalling]=-1;
			PlayerInfo[playerid][pONPhoneTalk] = 0;
			return false;

		}
		else
		{
			for(new i;i<9;i++)TextDrawHideForPlayer(playerid,Sphone[i]);
			if(PlayerInfo[playerid][pONPhoneTalk]>0)
			{
				format(string,sizeof(string),"Звонок окончен! Время разговора %s",Convert(PlayerInfo[playerid][pONPhoneTalk]));
				SendClientMessage(playerid,COLOR_GRAY,string);
				RemovePlayerAttachedObjectEx(playerid, 6);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}

			TextDrawHideForPlayer(playerid, Calling[0]);
			TextDrawHideForPlayer(playerid, Calling[1]);
			TextDrawHideForPlayer(playerid, Calling[2]);
			TextDrawHideForPlayer(playerid, Calling[3]);
			DestroyPlayerTD(playerid,callname[playerid]);
			DestroyPlayerTD(playerid,calltime[playerid]);
			PlayerInfo[playerid][pONPhoneTalk] = 0;
			foreach(Player, id)
			{
				if(PlayerInfo[id][pCalling]==playerid && IsPlayerLogged[id])
				{
					if(PlayerInfo[id][pONPhoneTalk]>0)
					{
						format(string,sizeof(string),"Звонок окончен! Время разговора %s",Convert(PlayerInfo[id][pONPhoneTalk]));
						SendClientMessage(id,COLOR_GRAY,string);
						RemovePlayerAttachedObjectEx(id, 6);
						SetPlayerSpecialAction(id,SPECIAL_ACTION_STOPUSECELLPHONE);
					}
					for(new i; i < 5; i++)TextDrawHideForPlayer(id,Sphone[i]);
					TextDrawHideForPlayer(id, Calling[1]);
					TextDrawHideForPlayer(id, Calling[3]);
					DestroyPlayerTD(id,callname[id]);
					DestroyPlayerTD(id,calltime[id]);
					PlayerInfo[id][pCalling]=-1;
					PlayerInfo[id][pONPhoneTalk] = 0;
					break;
				}
			}
			PlayerInfo[playerid][pCalling] = -1;
		}
		return 1;
	}
	if(clickedid == SphoneKey[4])ShowPlayerDialogEx(playerid,987,2,"{43CD80}Меню","{7396FB}[1]{FFFFFF} Настройки\n{7396FB}[2]{FFFFFF} Таймер (Будильник)\n{7396FB}[3]{FFFFFF} Номера/мониторинг гос.служащих","Выбрать","Отмена");
	if(clickedid == Calling[0])
	{
		new id=-1;
		foreach(Player, ids)
		{
			if(PlayerInfo[ids][pCalling]==playerid && IsPlayerLogged[ids])
			{
				id=ids;
				break;
			}
		}
		if(id==-1)return 1;
		PlayerInfo[id][pONPhoneTalk] = 1;
		PlayerInfo[playerid][pCalling] = id;
		if(PlayerPlayed[playerid]) callcmd::radio(playerid);
		if(GetPVarInt(playerid, "BBOX"))callcmd::bbox(playerid, "");
		TextDrawHideForPlayer(playerid, Calling[0]);
		TextDrawHideForPlayer(playerid, Calling[2]);
		PlayerInfo[playerid][pONPhoneTalk] = 1;
		PlayerInfo[id][pIn_Skill] -= 10;
		if(!PlayerLie[playerid]) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		if(!IsPlayerAttachedObjectSlotUsed(playerid, 6))SetPlayerAttachedObjectEx(playerid, 6, 18865, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
		if(!PlayerLie[id]) SetPlayerSpecialAction(id,SPECIAL_ACTION_USECELLPHONE);
		if(!IsPlayerAttachedObjectSlotUsed(id, 6))SetPlayerAttachedObjectEx(id, 6, 18865, 6, 0.12, 0.01, 0.0, 90.0, 190.0, 0.0, 1.0, 1.0, 1.0);
		return 1;
	}
	else if(Clother[playerid] != -1 || BuyInt[playerid] != -1 || BuyGuns[playerid] != -1 || Buyitem[playerid]!=-1 || GetPVarInt(playerid, "StoWaiting"))
	{
	    if(_:clickedid == 65535) SelectTextDraw(playerid, 0xFFFFFFAA);
	    else if(clickedid == ActionMenu[3]) callcmd::back(playerid);
	    else if(clickedid == ActionMenu[4]) callcmd::next(playerid);
	    else if(clickedid == ActionMenu[7]) callcmd::cancel(playerid);
	    else if(clickedid == ActionMenu[6]) callcmd::done(playerid);
	    return true;
	}
	if(KindFuel[playerid] != -1)
 	{
 		if(_:clickedid == 65535)
 		{
			CheckFuelDraws(playerid);
	 		KindFuel[playerid] = -1;
			CountFuel[playerid] = 0.0;
			CancelSelectTextDraw(playerid);
		}
   		else if(clickedid == FuelTD[6])
		{
		    new carid = GetPlayerVehicleID(playerid);
		    new Float:maxfuel = 100.0 - Fuel[carid];
		    if(CountFuel[playerid] < maxfuel)
		    {
			    CountFuel[playerid] += 1.0;
			    new fuelid = PlayerFuel[playerid];
			    new bizid = FuelInfo[fuelid][fBizzID];
			    new Float:cost = BizInfo[bizid][bEnterPrice];
			    new price = floatround( cost * CountFuel[playerid], floatround_floor );
			    format(string, sizeof(string), "$%d", price);
			    PlayerTextDrawSetString(playerid, PlayerFuelTD[playerid][2], string);
			    format(string, sizeof(string), "%.0f/%.0f ~y~L", CountFuel[playerid], maxfuel);
			    PlayerTextDrawSetString(playerid, PlayerFuelTD[playerid][1], string);
			}
		}
		else if(clickedid == FuelTD[5])
		{
		    new carid = GetPlayerVehicleID(playerid);
		    new Float:maxfuel = 100.0 - Fuel[carid];
		    if(CountFuel[playerid] > 0.0)
		    {
			    CountFuel[playerid] -= 1.0;
			    new fuelid = PlayerFuel[playerid];
			    new bizid = FuelInfo[fuelid][fBizzID];
			    new Float:cost = BizInfo[bizid][bEnterPrice];
			    new price = floatround( cost * CountFuel[playerid], floatround_floor );
			    format(string, sizeof(string), "$%d", price);
			    PlayerTextDrawSetString(playerid, PlayerFuelTD[playerid][2], string);
			    format(string, sizeof(string), "%.0f/%.0f ~y~L", CountFuel[playerid], maxfuel);
			    PlayerTextDrawSetString(playerid, PlayerFuelTD[playerid][1], string);
			}
		}
		else if(clickedid == FuelTD[2])
		{
		    new carid = GetPlayerVehicleID(playerid);
			if(KindFuel[playerid] < sizeof(FuelName) - 1) KindFuel[playerid] ++;
			else KindFuel[playerid] = 0;
			new kind = KindFuel[playerid];
			if(kind == GetVehicleKindFuel(carid)) GameTextForPlayer(playerid,"~w~",1,3);
			else GameTextForPlayer(playerid,"~w~This type of fuel~n~~r~is not suitable~w~~n~for your vehicle",10000,4);
		    PlayerTextDrawSetString(playerid, PlayerFuelTD[playerid][0], FuelName[kind]);
		}
		else if(clickedid == FuelTD[3])
		{
		    new carid = GetPlayerVehicleID(playerid);
			if(KindFuel[playerid] > 0) KindFuel[playerid] --;
			else KindFuel[playerid] = sizeof(FuelName) - 1;
			new kind = KindFuel[playerid];
			if(kind == GetVehicleKindFuel(carid)) GameTextForPlayer(playerid,"~w~",1,3);
			else GameTextForPlayer(playerid,"~w~This type of fuel~n~~r~is not suitable~w~~n~for your vehicle",10000,4);
		    PlayerTextDrawSetString(playerid, PlayerFuelTD[playerid][0], FuelName[kind]);
		}
		else if(clickedid == FuelTD[13])
		{
		    if(CountFuel[playerid] > 0.0)
		    {
			    new vehicleid = GetPlayerVehicleID(playerid);
			    new fuelid = PlayerFuel[playerid];
				new bizid = FuelInfo[fuelid][fBizzID];
				new Float:cost = BizInfo[bizid][bEnterPrice];
				new price = floatround( cost * CountFuel[playerid], floatround_floor );
				if(GetMoney(playerid) >= price)
				{
				    if(KindFuel[playerid] == GetVehicleKindFuel(vehicleid))
					{
						BeforeFill[vehicleid] = 0;
						GameTextForPlayer(playerid,"~w~",1,3);
						format(string, sizeof(string), "Транспортное средство заправляется (( %s ))", PlayerName[playerid]);
						ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetTimerEx("Fillup",1000,false,"idf", playerid, vehicleid, CountFuel[playerid]);
						SetEngineStatus(vehicleid, false, -1);
						GiveMoney(playerid, - price, "FillUp");
						CancelSelectTextDraw(playerid);
						if(!GetString(BizInfo[bizid][bOwner],"The State"))
						{
							GiveBizMoney(bizid,price);
							BizInfo[bizid][bProducts] -= floatround(CountFuel[playerid]);
							SaveBiz(bizid);
						}
						CheckFuelDraws(playerid);
						PlayerFuel[playerid] = -1;
						KindFuel[playerid] = -1;
						CountFuel[playerid] = 0.0;
						UpdateFuels(bizid);
					}
					else SendError(playerid,"Данный тип топлива не подходит для вашего транспорта");
				}
				else
				{
				    format(string, sizeof(string), "Заправка стоит $%d, а у вас только $%d", price, GetMoney(playerid));
					SendError(playerid, string);
				}
			}
			else SendError(playerid,"Не менее 1 литра");
		}
 		else if(clickedid == FuelTD[14])
		{
		    KindFuel[playerid] = -1;
			CountFuel[playerid] = 0.0;
			CheckFuelDraws(playerid);
			SendError(playerid,"Вы отказались заправляться");
			GameTextForPlayer(playerid,"~w~",1,3);
			TogglePlayerControllable(playerid, true);
			CancelSelectTextDraw(playerid);
		}
	}
	if(GetPVarInt(playerid, "showedinv")){
		if(OldDialogID[playerid] != INVALID_DIALOG_ID)return 1;
		if(clickedid == TradeTD[3]){
			new player = TradeOffer[playerid];
			if(GetPVarInt(playerid, "tradeaccept"))return SendError(playerid, "Вы уже подтвердили обмен");
			SetPVarInt(playerid, "tradeaccept", 1);
			PlayerTextDrawColor(playerid, TradeSlots[playerid][8], 0x56A85EFF);
			PlayerTextDrawColor(player, TradeSlots[player][9], 0x56A85EFF);
			PlayerTextDrawShow(playerid, TradeSlots[playerid][8]);
			PlayerTextDrawShow(player, TradeSlots[player][9]);
			if(GetPVarInt(player, "tradeaccept")){
				f(string, "Вы обменялись с %s[%d]", Name(player), player);
				SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
				f(string, "%s[%d] обменялся с вами", Name(playerid), playerid);
				SendClientMessage(player, COLOR_LIGHTGREEN, string);
				ConfirmTrade(playerid);
				ConfirmTrade(player);
				SetPVarInt(playerid, "tradedecline", 1);
				SetPVarInt(player, "tradedecline", 1);
				HideInventory(player);
				HideInventory(playerid);
				return 1;
			}
			f(string, "%s[%d] подтвердил готовность обмена", Name(playerid), playerid);
			SendClientMessage(player, COLOR_ORANGE, string);
			return 1;
		}
		if(clickedid == TradeTD[4]){
			new player = TradeOffer[playerid];
			if(!GetPVarInt(playerid, "tradeaccept")){
				f(string, "Вы отказались от обмена с %s[%d]", Name(player), player);
				SendError(playerid, string);
				f(string, "%s[%d] отказался от обмена с вами", Name(playerid), playerid);
				SendError(player, string);
				SetPVarInt(playerid, "tradedecline", 1);
				SetPVarInt(player, "tradedecline", 1);
				HideInventory(playerid);
				return HideInventory(player);
			}
			DeletePVar(playerid, "tradeaccept");
			PlayerTextDrawColor(playerid, TradeSlots[playerid][8], 0xD94141FF);
			PlayerTextDrawColor(player, TradeSlots[player][9], 0xD94141FF);
			PlayerTextDrawShow(playerid, TradeSlots[playerid][8]);
			PlayerTextDrawShow(player, TradeSlots[player][9]);
			f(string, "%s[%d] отменил готовность обмена", Name(playerid), playerid);
			SendClientMessage(player, COLOR_ORANGE, string);
			return 1;
		}
		if(clickedid == InventarTD[18])return HideInventory(playerid);
		if(clickedid == ClosetTD[4])return HideWindow(playerid);
		if(clickedid == InventarTD[11])return ShowReportDialog(playerid);
		if(clickedid == InventarTD[10])return ShowPlayerDialogEx(playerid, SHOWSKILLS, 2, "{43CD80}Навыки", "{7396FB}[1] {FFFFFF}Навыки стрельбы\n{7396FB}[2] {FFFFFF}Боевые навыки", "Выбор", "Отмена");
		if(clickedid == InventarTD[3])return ShowTalents(playerid);
		if(clickedid == InventarTD[4]){
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0)return SendError(playerid, "Вы не должны быть в здании");
			foreach(OWNABLECARS, c){
				if(!IsACar(OwnableCar[c]))continue;
				new Float:pos[3];
				GetVehicleShiftPos(OwnableCar[c],1,pos[0],pos[1],pos[2],2.0);
				if(IsPlayerInRangeOfPoint(playerid,2,pos[0],pos[1],pos[2])){
					new Float:angle = GetPlayerAngleToPoint(playerid, pos[0],pos[1]);
					if(angle >= -55 && angle <= 55){
						if(!TrunkInfo[c] && !GetString(CarInfo[c][cOwner],PlayerName[playerid]))return SendError(playerid, "Багажник закрыт");
						idaofcar[playerid] = c;
						if(GetPVarInt(playerid, "showedwindow"))HideWindow(playerid);
						return ShowTrunkWindow(playerid);
					}
					else return SendError(playerid, "Вы должны быть повёрнуты лицом к багажнику");
				}
			}
			return SendError(playerid, "Вы должны быть возле личной машины");
		}
		if(clickedid == InventarTD[5]){
			if(!IsAtGang(playerid) && !IsAtMafia(playerid))return SendError(playerid, "Вы не состоите в мафии или банде");
			if(PlayerInfo[playerid][pRank] < 5)return SendError(playerid, "Доступ к складу возможен с 5 ранга");
			if(OrgInfo[PlayerInfo[playerid][pMember]][oOb4ak])return SendError(playerid, "Склад вашей организации закрыт");
			if(!IsPlayerInRangeOfPoint(playerid, 15.0, DormPos[PlayerInfo[playerid][pMember]][0],DormPos[PlayerInfo[playerid][pMember]][1],DormPos[PlayerInfo[playerid][pMember]][2]))return SendError(playerid, "Вы должны быть возле склада организации");
			if(GetPVarInt(playerid, "showedwindow"))HideWindow(playerid);
			return ShowFractionWindow(playerid);
		}
		if(clickedid == InventarTD[6]){
			if(PlayerInfo[playerid][FamilyID] == -1)return SendError(playerid, "Вы не являетесь членом семьи");
			if(GetPVarInt(playerid, "showedwindow"))HideWindow(playerid);
			return ShowFamilyWindow(playerid);
		}
		if(clickedid == InventarTD[7]){
			if(!GetPlayerVirtualWorld(playerid))return SendError(playerid, "Вы не в своём доме");
			if(GetPlayerVirtualWorld(playerid) != SlotValue[playerid][1]+50 && SlotValue[playerid][1] != -1)return SendError(playerid, "Вы не владелец этого дома");
			if(GetPVarInt(playerid, "showedwindow"))HideWindow(playerid);
			return ShowClosetWindow(playerid);
		}
	}
    return false;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(GetPVarInt(playerid, "showedtarget")){
		new player = ClickedPlayerID[playerid];
		new string[128];
		if(playertextid == IconsMenu[playerid][2]){
			delmenutext(playerid);
			if(PlayerInfo[playerid][pExp] < 10)return SendError(playerid, "Совершать обмен можно после 10 отыгранных часов");
			if(PlayerInfo[player][pExp] < 10)return SendError(playerid, "Этот игрок не отыграл ещё 10 часов");
			if(GetPVarInt(player, "showedtrade"))return SendError(playerid, "Игрок уже совершает обмен");
			if(TradeOffer[playerid] != INVALID_PLAYER_ID)return SendError(playerid, "Вы уже предложили совершить обмен");
			TradeOffer[player] = playerid;
			TradeOffer[playerid] = player;
			f(string, "Вы предложили %s[%d] обменяться с вами", Name(player), player);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			f(string, "{FFFFFF}%s[%d] предлагает Вам совершить обмен", Name(playerid), playerid);
			return ShowPlayerDialogEx(player, 533, 0, "Предложение обмена", string, "Согласен", "Отказаться");
		}
		if(playertextid == IconsMenu[playerid][4]){
			delmenutext(playerid);
			f(string, "%d",player);
			return callcmd::hi(playerid, string);
		}
		if(playertextid == IconsMenu[playerid][5]){
			delmenutext(playerid);
			return CallLocalFunction("callcmd::pass", "is", playerid, IntToStr(player));
		}
		if(playertextid == IconsMenu[playerid][6]){
			delmenutext(playerid);
			return CallLocalFunction("callcmd::lic", "is", playerid, IntToStr(player));
		}
		if(playertextid == IconsMenu[playerid][7]){
			delmenutext(playerid);
			return CallLocalFunction("callcmd::skill", "is", playerid, IntToStr(player));
		}
		if(playertextid == IconsMenu[playerid][8]){
			delmenutext(playerid);
			return CallLocalFunction("callcmd::mc", "is", playerid, IntToStr(player));
		}
	}
	if(GetPVarInt(playerid, "showedinv")){
		if(OldDialogID[playerid] != INVALID_DIALOG_ID)return 1;
		if(playertextid == InventarAction[playerid][2]){
			HideActionMenu(playerid);
			new temp_text[128];
			if(GetPVarInt(playerid, "showedtrade")){
				new im = GetFreeSlot(playerid, 5);
				if(im == -1)return SendError(playerid, "За один раз можно обменять не больше 4 предметов");
				if(SelectedSlot[playerid]+ListSlot[playerid] == 0 || (SelectedSlot[playerid]+ListSlot[playerid] >= 11 && SelectedSlot[playerid]+ListSlot[playerid] <= 20) && SelectedSlot[playerid]+ListSlot[playerid] != 19){
					if(PlayerInfo[playerid][pCredit] > 15000 && SelectedSlot[playerid]+ListSlot[playerid] == 0)return SendError(playerid,"Вы не можете перемещать наличность из-за долга в банке");
					f(temp_text, "{FFFFFF}Доступно для обмена: {ffcb8c}%d", SlotValue[playerid][SelectedSlot[playerid]]);
					return ShowPlayerDialogEx(playerid, 536, 1, "Количество для обмена", temp_text, "Положить", "Отмена");
				}
				if(PlayerInfo[playerid][pCredit] > 15000 && (SelectedSlot[playerid]+ListSlot[playerid] >= 1 && SelectedSlot[playerid]+ListSlot[playerid] <= 9))return SendError(playerid,"Вы не можете менять имущество из-за долга в банке");
				TradeSelected[playerid][im] = SelectedSlot[playerid]+ListSlot[playerid];
				ValueTrade[playerid][im] = SlotValue[playerid][TradeSelected[playerid][im]];
				return UpdateTrade(playerid, im);
			}
			if(GetPVarInt(playerid, "showedwindow")){
				switch(GetPVarInt(playerid, "showedwindow")){
				case 1:
					{
						new family = PlayerInfo[playerid][FamilyID];
						if(SelectedSlot[playerid] < 25){
							switch(SelectedSlot[playerid] + ListSlot[playerid]){
							case 0:
								{
									if(PlayerInfo[playerid][pCredit] > 15000)return SendError(playerid,"Вы не можете перемещать наличность из-за долга в банке");
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}$%d", GetMoney(playerid));
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить деньги на склад семьи", temp_text, "Положить", "Отмена");
								}
							case 11:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][11]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы на склад семьи", temp_text, "Положить", "Отмена");
								}
							case 13:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][13]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить маски на склад семьи", temp_text, "Положить", "Отмена");
								}
							case 14:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][14]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить наркотики на склад семьи", temp_text, "Положить", "Отмена");
								}
							case 17:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][17]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить рем.комплекты на склад семьи", temp_text, "Положить", "Отмена");
								}
							case 20:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][20]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить канистру на склад семьи", temp_text, "Положить", "Отмена");
								}
							default:
								{
									new im = GetFreeSlot(playerid, 1);
									if(im == -1)return SendError(playerid, "На складе вашей семьи нет места, чтобы поместить этот предмет");
									FamilyValue[family][im] = SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]];
									format(temp_text,sizeof(temp_text),"{%s}[%s] %s[%d] положил предмет на склад семьи",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid);
									SendFama(playerid,-1,temp_text);
									format(temp_text, sizeof(temp_text), "UPDATE `family` SET `Slot%d` = '%d' WHERE `ID` = '%d'",im,FamilyValue[family][im],PlayerInfo[playerid][FamilyID]);
									mysql_pquery(mysql, temp_text);
									SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]] = 0;
									UpdateInventory(playerid, SelectedSlot[playerid]);
									return UpdateFamilyWindow(playerid, im);
								}
							}
						}else{
							switch(SelectedSlot[playerid]-25){
							case 0:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}$%d", FamilyValue[family][0]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять деньги со склада семьи", temp_text, "Взять", "Отмена");
								}
							case 1:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы со склада семьи", temp_text, "Взять", "Отмена");
								}
							case 3:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][3]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять маски со склада семьи", temp_text, "Взять", "Отмена");
								}
							case 2:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики со склада семьи", temp_text, "Взять", "Отмена");
								}
							case 5:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][5]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять рем.комплекты со склада семьи", temp_text, "Взять", "Отмена");
								}
							case 4:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FamilyValue[family][4]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять канистру со склада семьи", temp_text, "Взять", "Отмена");
								}
							default:
								{
									new im = GetFreeSlot(playerid);
									if(im == -1)return SendError(playerid, "В инвентаре нет места, чтобы поместить этот предмет");
									SlotValue[playerid][im] = FamilyValue[family][SelectedSlot[playerid]-25];
									format(temp_text,sizeof(temp_text),"{%s}[%s] %s[%d] взял предмет со склада семьи",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid);
									SendFama(playerid,-1,temp_text);
									format(temp_text, sizeof(temp_text), "UPDATE `family` SET `Slot%d` = '%d' WHERE `ID` = '%d'",SelectedSlot[playerid]-25,FamilyValue[family][SelectedSlot[playerid]-25],PlayerInfo[playerid][FamilyID]);
									mysql_pquery(mysql, temp_text);
									FamilyValue[family][SelectedSlot[playerid]-25] = 0;
									if(im >= 0 && im < 25)UpdateInventory(playerid, im);
									else if(im >= 25 && im < 50)UpdateInventory(playerid, im-25);
									else if(im >= 50)UpdateInventory(playerid, im-50);
									return UpdateFamilyWindow(playerid, SelectedSlot[playerid]-25);
								}
							}
						}
					}
				case 2:
					{
						new team = PlayerInfo[playerid][pMember];
						if(SelectedSlot[playerid] < 25){
							switch(SelectedSlot[playerid] + ListSlot[playerid]){
							case 11:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][11]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы на склад организации", temp_text, "Положить", "Отмена");
								}
							case 13:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][13]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить маски на склад организации", temp_text, "Положить", "Отмена");
								}
							case 14:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][14]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить наркотики на склад организации", temp_text, "Положить", "Отмена");
								}
							case 17:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][17]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить рем.комплекты на склад организации", temp_text, "Положить", "Отмена");
								}
							case 20:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][20]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить канистру на склад организации", temp_text, "Положить", "Отмена");
								}
							default:
								{
									new im = GetFreeSlot(playerid, 2);
									if(im == -1)return SendError(playerid, "На складе вашей организации нет места, чтобы поместить этот предмет");
									FractionValue[team][im] = SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]];
									f(temp_text, "%s[%d] положил предмет на склад", Name(playerid), playerid);
									SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, temp_text);
									SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]] = 0;
									UpdateInventory(playerid, SelectedSlot[playerid]);
									return UpdateFractionWindow(playerid, im);
								}
							}
						}else{
							switch(SelectedSlot[playerid]-25){
							case 0:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][0]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы со склада организации", temp_text, "Взять", "Отмена");
								}
							case 2:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять маски со склада организации", temp_text, "Взять", "Отмена");
								}
							case 1:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики со склада организации", temp_text, "Взять", "Отмена");
								}
							case 4:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][4]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять рем.комплекты со склада организации", temp_text, "Взять", "Отмена");
								}
							case 3:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", FractionValue[team][3]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять канистру со склада организации", temp_text, "Взять", "Отмена");
								}
							default:
								{
									new im = GetFreeSlot(playerid);
									if(im == -1)return SendError(playerid, "В инвентаре нет места, чтобы поместить этот предмет");
									SlotValue[playerid][im] = FractionValue[team][SelectedSlot[playerid]-25];
									f(temp_text, "%s[%d] взял предмет со склада", Name(playerid), playerid);
									SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_YELLOW, temp_text);
									FractionValue[team][SelectedSlot[playerid]-25] = 0;
									if(im >= 0 && im < 25)UpdateInventory(playerid, im);
									else if(im >= 25 && im < 50)UpdateInventory(playerid, im-25);
									else if(im >= 50)UpdateInventory(playerid, im-50);
									return UpdateFractionWindow(playerid, SelectedSlot[playerid]-25);
								}
							}
						}
					}
				case 3:
					{
						new house = SlotValue[playerid][1];
						if(house == -1)return SendError(playerid, "У вас нет дома");
						if(SelectedSlot[playerid] < 25){
							switch(SelectedSlot[playerid] + ListSlot[playerid]){
							case 0:
								{
									if(PlayerInfo[playerid][pCredit] > 15000)return SendError(playerid,"Вы не можете перемещать наличность из-за долга в банке");
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}$%d", GetMoney(playerid));
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить деньги в шкаф", temp_text, "Положить", "Отмена");
								}
							case 11:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][11]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы в шкаф", temp_text, "Положить", "Отмена");
								}
							case 14:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][14]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить наркотики в шкаф", temp_text, "Положить", "Отмена");
								}
							default:
								{
									new im = GetFreeSlot(playerid, 3);
									if(im == -1)return SendError(playerid, "В шкафу нет места, чтобы поместить этот предмет");
									ClosetValue[house][im] = SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]];
									SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]] = 0;
									UpdateInventory(playerid, SelectedSlot[playerid]);
									return UpdateClosetWindow(playerid, im);
								}
							}
						}else{
							switch(SelectedSlot[playerid]-25){
							case 1:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", ClosetValue[house][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы из шкафа", temp_text, "Взять", "Отмена");
								}
							case 0:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}$%d", ClosetValue[house][0]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять деньги из шкафа", temp_text, "Взять", "Отмена");
								}
							case 2:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", ClosetValue[house][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики из шкафа", temp_text, "Взять", "Отмена");
								}
							default:
								{
									new im = GetFreeSlot(playerid);
									if(im == -1)return SendError(playerid, "В инвентаре нет места, чтобы поместить этот предмет");
									SlotValue[playerid][im] = ClosetValue[house][SelectedSlot[playerid]-25];
									ClosetValue[house][SelectedSlot[playerid]-25] = 0;
									if(im >= 0 && im < 25)UpdateInventory(playerid, im);
									else if(im >= 25 && im < 50)UpdateInventory(playerid, im-25);
									else if(im >= 50)UpdateInventory(playerid, im-50);
									return UpdateClosetWindow(playerid, SelectedSlot[playerid]-25);
								}
							}
						}
					}
				case 4:
					{
						new car = idaofcar[playerid];
						if(SelectedSlot[playerid] < 25){
							switch(SelectedSlot[playerid] + ListSlot[playerid]){
							case 0:
								{
									if(PlayerInfo[playerid][pCredit] > 15000)return SendError(playerid,"Вы не можете перемещать наличность из-за долга в банке");
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}$%d", GetMoney(playerid));
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить деньги в багажник", temp_text, "Положить", "Отмена");
								}
							case 11:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][11]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить материалы в багажник", temp_text, "Положить", "Отмена");
								}
							case 12:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][12]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить аптечки в багажник", temp_text, "Положить", "Отмена");
								}
							case 14:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][14]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить наркотики в багажник", temp_text, "Положить", "Отмена");
								}
							case 20:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", SlotValue[playerid][20]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Положить канистры в багажник", temp_text, "Положить", "Отмена");
								}
							default:
								{
									new im = GetFreeSlot(playerid, 4);
									if(im == -1)return SendError(playerid, "В багажнике нет места, чтобы поместить этот предмет");
									TrunkValue[car][im] = SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]];
									SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]] = 0;
									UpdateInventory(playerid, SelectedSlot[playerid]);
									ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
									return UpdateTrunkWindow(playerid, im+1);
								}
							}
						}else{
							switch(SelectedSlot[playerid]-25){
							case 1:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][0]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять деньги из багажника", temp_text, "Взять", "Отмена");
								}
							case 2:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}$%d", TrunkValue[car][1]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять материалы из багажника", temp_text, "Взять", "Отмена");
								}
							case 3:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][2]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять наркотики из багажника", temp_text, "Взять", "Отмена");
								}
							case 4:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][3]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять аптечки из багажника", temp_text, "Взять", "Отмена");
								}
							case 5:
								{
									f(temp_text, "{FFFFFF}Доступно для перемещения: {ffcb8c}%d", TrunkValue[car][4]);
									return ShowPlayerDialogEx(playerid, 531, 1, "Взять канистры из багажника", temp_text, "Взять", "Отмена");
								}
							default:
								{
									new im = GetFreeSlot(playerid);
									if(im == -1)return SendError(playerid, "В инвентаре нет места, чтобы поместить этот предмет");
									SlotValue[playerid][im] = TrunkValue[car][SelectedSlot[playerid]-26];
									TrunkValue[car][SelectedSlot[playerid]-26] = 0;
									if(im >= 0 && im < 25)UpdateInventory(playerid, im);
									else if(im >= 25 && im < 50)UpdateInventory(playerid, im-25);
									else if(im >= 50)UpdateInventory(playerid, im-50);
									ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
									return UpdateTrunkWindow(playerid, SelectedSlot[playerid]-25);
								}
							}
						}
					}
				}
			}else{
				switch(SelectedSlot[playerid] + ListSlot[playerid]){
				case 0:
					{
						if(PlayerInfo[playerid][pCredit] > 15000)return SendError(playerid,"Вы не можете перемещать наличность из-за долга в банке");
						f(temp_text, "{ffffff}Вы собираетесь пожертвовать(выбросить) наличку\nДоступно: {ffcb8c}$%d", GetMoney(playerid));
						return Dialog_Open(playerid, 532, 1, "Подтверждение", temp_text, "Выбросить","Отмена");
					}
				case 1:return ShowPlayerDialogEx(playerid,804,0,"{43CD80}Предупреждение","{FFFFFF}Вы действительно хотите продать свой дом?\nОбратите внимание, при продаже дома вы получите лишь 50 процентов от общей стоимости","Принять","Отмена");
				case 2:return ShowPlayerDialogEx(playerid, 8009, 0, "{43CD80}Предупреждение", "{FFFFFF}Вы действительно хотите продать свою квартиру?\nОбратите внимание, при продаже квартиры вы получите лишь 50 процентов от общей стоимости","Принять","Отмена");
				case 3:return ShowPlayerDialogEx(playerid,161,0,"{43CD80}Подтверждение","{FFFFFF}Вы действительно хотите продать свой бизнес?\nОбратите внимание, при продаже бизнеса вы получите лишь 50 процентов от общей стоимости","Принять","Отмена");
				case 4:return ShowPlayerDialogEx(playerid,8017,0,"{43CD80}Подтверждение","{FFFFFF}Вы действительно хотите продать свою СТО?\nОбратите внимание, при продаже СТО вы получите лишь 50 процентов от общей стоимости","Принять","Отмена");
				case 10:return ShowPlayerDialogEx(playerid,3416,0,"{43CD80}Предупреждение","{FFFFFF}Вы действительно хотите продать Casino Royal?\n{7396FB}Обратите внимание, что при продаже казино вы получите лишь 50 процентов от общей стоимости","Принять","Отмена");
				case 5..9:return callcmd::sellcar_gg(playerid);
				case 11..18,20:
					{
						f(temp_text, "{ffffff}Вы собираетесь выбросить предмет\nДоступно: {ffcb8c}%d", SlotValue[playerid][SelectedSlot[playerid]]);
						return Dialog_Open(playerid, 532, 1, "Подтверждение", temp_text, "Выбросить","Отмена");
					}
				case 19:
					{
						if(SlotValue[playerid][SelectedSlot[playerid]] <= 1)return SendError(playerid, "У Вас нет SIM-карты");
						f(temp_text, "{ffffff}Вы собираетесь выбросить SIM-карту\nТекущий номер: {ffcb8c}%d", SlotValue[playerid][SelectedSlot[playerid]]);
						return Dialog_Open(playerid, 540, 0, "Подтверждение", temp_text, "Выбросить","Отмена");
					}
				case 25..74:
					{
						f(temp_text, "{ffffff}Вы собираетесь выбросить предмет\nID предмета: {ffcb8c}%d", SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]]);
						return Dialog_Open(playerid, 540, 0, "Подтверждение", temp_text, "Выбросить","Отмена");
					}
				}
			}
		}
		if(playertextid == InventarAction[playerid][1]){
			HideActionMenu(playerid);
			return UseInventoryItem(playerid);
		}
		if(playertextid == InventarAction[playerid][3]){
			HideActionMenu(playerid);
			if(!ListSlot[playerid])return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[SelectedSlot[playerid]][invDesc], "Скрыть", "");
			switch(SlotValue[playerid][SelectedSlot[playerid]]){
			case 19042..19053:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[25][invDesc], "Скрыть", "");//часы
			case 19421..19424:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[26][invDesc], "Скрыть", "");//наушники
			case 18911..18920,18910,18909,18908,18907,18906:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[27][invDesc], "Скрыть", "");//банданы
			case 19011..19019,19024,19027,19028,19029,19022,19035,19031,19032,19033:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[28][invDesc], "Скрыть", "");//очки
			case 19064..19066,19069,19068,19067,19554,18953,18954:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[29][invDesc], "Скрыть", "");//шапки
			case 19054..19058,3026,371,19559:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[37][invDesc], "Скрыть", "");//рюкзаки
			case 18968,18967,18969:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[30][invDesc], "Скрыть", "");//панамки
			case 18955,18956,18957,18959:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[31][invDesc], "Скрыть", "");//кепки назад
			case 18926,18927,18928,18929,18930,18931,18932,18933:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[32][invDesc], "Скрыть", "");//кепки вперёд
			case 19104,19105,19106,19107,19108,19109:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[33][invDesc], "Скрыть", "");//каски
			case 19519,19274:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[34][invDesc], "Скрыть", "");//парики
			case 18925,18922,18923,18924,18921:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[35][invDesc], "Скрыть", "");//береты
			case 18947,18948,18949,18950,18951,18970, 18973, 18972, 18971,19487, 19352:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[36][invDesc], "Скрыть", "");//шляпы
			case 19351,19350:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[38][invDesc], "Скрыть", "");//усы
			case 19319, 19318, 19317:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[39][invDesc], "Скрыть", "");//гитары
			case 19085:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[40][invDesc], "Скрыть", "");//повязка
			case 19878:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[41][invDesc], "Скрыть", "");//скейт
			case 1..311:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[42][invDesc], "Скрыть", "");//скины
			case 100000000001,100000000002:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[43][invDesc], "Скрыть", "");//deagle
			case 100000000011,100000000012:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[44][invDesc], "Скрыть", "");//ak47
			case 100000000021,100000000022:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[45][invDesc], "Скрыть", "");//shotgun
			case 100000000081..100000000088:return ShowPlayerDialogEx(playerid, 0, 0, "Информация о предмете", ItemsInfo[46][invDesc], "Скрыть", "");//case
			}
		}
		if(playertextid == InventarAction[playerid][4])return HideActionMenu(playerid);
		if(playertextid == InventarOther[playerid][22] || playertextid == InventarOther[playerid][23] || playertextid == InventarOther[playerid][35]){
			if(playertextid == InventarOther[playerid][22] && !ListSlot[playerid])return 1;
			if(playertextid == InventarOther[playerid][23] && ListSlot[playerid] == 25)return 1;
			if(playertextid == InventarOther[playerid][35] && ListSlot[playerid] == 50)return 1;
			if(playertextid == InventarOther[playerid][22]){
				ListSlot[playerid] = 0;
				PlayerTextDrawColor(playerid, InventarOther[playerid][22], 10092543);
				PlayerTextDrawShow(playerid, InventarOther[playerid][22]);
				PlayerTextDrawColor(playerid, InventarOther[playerid][23], -1);
				PlayerTextDrawShow(playerid, InventarOther[playerid][23]);
				PlayerTextDrawColor(playerid, InventarOther[playerid][35], -1);
				PlayerTextDrawShow(playerid, InventarOther[playerid][35]);
			}
			if(playertextid == InventarOther[playerid][23]){
				ListSlot[playerid] = 25;
				PlayerTextDrawColor(playerid, InventarOther[playerid][23], 10092543);
				PlayerTextDrawShow(playerid, InventarOther[playerid][23]);
				PlayerTextDrawColor(playerid, InventarOther[playerid][22], -1);
				PlayerTextDrawShow(playerid, InventarOther[playerid][22]);
				PlayerTextDrawColor(playerid, InventarOther[playerid][35], -1);
				PlayerTextDrawShow(playerid, InventarOther[playerid][35]);
			}
			if(playertextid == InventarOther[playerid][35]){
				ListSlot[playerid] = 50;
				PlayerTextDrawColor(playerid, InventarOther[playerid][35], 10092543);
				PlayerTextDrawShow(playerid, InventarOther[playerid][35]);
				PlayerTextDrawColor(playerid, InventarOther[playerid][22], -1);
				PlayerTextDrawShow(playerid, InventarOther[playerid][22]);
				PlayerTextDrawColor(playerid, InventarOther[playerid][23], -1);
				PlayerTextDrawShow(playerid, InventarOther[playerid][23]);
			}
			for(new i; i < 25; i++)UpdateInventory(playerid, i);
			return 1;
		}
		for(new i; i < 50; i++){
			if(playertextid == InventarItems[playerid][i]){
				if(OldDialogID[playerid] != INVALID_DIALOG_ID)return 1;
				if(GetPVarInt(playerid, "showedaction"))HideActionMenu(playerid);
				if(i+ListSlot[playerid] == TradeSelected[playerid][0] || i+ListSlot[playerid] == TradeSelected[playerid][1] ||
				i+ListSlot[playerid] == TradeSelected[playerid][2] || i+ListSlot[playerid] == TradeSelected[playerid][3])return SendError(playerid, "Вы уже предложили это к обмену");
				if(GetPVarInt(playerid, "tradeaccept"))return SendError(playerid, "Вы уже подтвердили обмен");
				SelectedSlot[playerid] = i;
				if(i < 25)
				{
					if(ListSlot[playerid]){
						if(!SlotValue[playerid][i+ListSlot[playerid]])return 1;
					}
				}
				if(i >= 25){
					switch(GetPVarInt(playerid, "showedwindow")){
					case 1:if(!FamilyValue[PlayerInfo[playerid][FamilyID]][SelectedSlot[playerid]-25])return 1;
					case 2:if(!FractionValue[PlayerInfo[playerid][pMember]][SelectedSlot[playerid]-25])return 1;
					case 3:if(!ClosetValue[SlotValue[playerid][1]][SelectedSlot[playerid]-25])return 1;
					case 4:
						{
							if(SelectedSlot[playerid] == 25){
								new car = idaofcar[playerid];
								if(!TrunkInfo[car]){
									new number = GetVehicleID(car);
									if(IsAOwnableCar(number)){
										if(!GetString(CarInfo[number][cOwner],PlayerName[playerid])) return SendError(playerid,"Вы не можете открыть багажник чужой машины");
									}else{
										if(VehicleInfo[car][vTeam]>0 && PlayerInfo[playerid][pMember]!=VehicleInfo[car][vTeam]) return SendError(playerid,"Вы не можете открыть багажник чужой огранизации");
									}
									TrunkInfo[car] = true;
									SetBootStatus(car,1);
									ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								}
								else
								{
									TrunkInfo[car] = false;
									SetBootStatus(car,0);
									ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
								}
								HideWindow(playerid);
								ShowTrunkWindow(playerid);
								return 1;
							}
							else if(!TrunkValue[idaofcar[playerid]][SelectedSlot[playerid]-26] && SelectedSlot[playerid] > 25)return 1;
						}
					}
				}
				UpdateItem(playerid, SelectedSlot[playerid], 0);
				return CreateActionMenu(playerid, i);
			}
			if(i < 4){
				if(playertextid == TradeSlots[playerid][i]){
					if(TradeSelected[playerid][i] == -1)return SendError(playerid, "Вы ещё не выбрали предмет для обмена");
					TradeSelected[playerid][i] = -1;
					ValueTrade[playerid][i] = 0;
					return UpdateTrade(playerid, i);
				}
			}
			if(i >= 11 && i <= 16){
				if(playertextid == InventarOther[playerid][i]){
					if(!PlayerInfo[playerid][pSlotItem][i-11])return SendError(playerid, "В этой ячейке нет аксессуара");
					return RemoveItem(playerid, i-11);
				}
			}
			if(i >= 17 && i <= 19){
				if(playertextid == InventarOther[playerid][i]){
					if(!PlayerInfo[playerid][pGun][i-17])return SendError(playerid, "В этой ячейке нет предмета");
					return RemovePrint(playerid, i-17);
				}
			}
			if(i == 20){
				if(playertextid == InventarOther[playerid][i]){
					if(!PlayerInfo[playerid][pCCase])return SendError(playerid, "В этой ячейке нет предмета");
					return RemoveCase(playerid);
				}
			}
		}
	}
	if(GetPVarInt(playerid, "showedtalents")){
		for(new i; i < 9; i++){
			if(playertextid == TalentItems[playerid][i]){
				if(OldDialogID[playerid] != INVALID_DIALOG_ID)return 1;
				SelectedTalent[playerid] = i;
				HideTalentMenu(playerid);
				if(!GetPVarInt(playerid, "showedaction")){
					switch(SelectedTalent[playerid]){
					case 0..2:CorrectLine[playerid] = 0;
					case 3..5:CorrectLine[playerid] = 1;
					case 6..8:CorrectLine[playerid] = 2;
					}
				}
				return CreateTalentMenu(playerid);
			}
		}
		for(new i = 1; i < 5; i++){
			if(playertextid == PlayerTalents[playerid][i]){
				if(i == SelectedBrunch[playerid]+1)return 1;
				PlayerTextDrawBackgroundColor(playerid, PlayerTalents[playerid][SelectedBrunch[playerid]+1], 572662527);
				PlayerTextDrawShow(playerid, PlayerTalents[playerid][SelectedBrunch[playerid]+1]);
				PlayerTextDrawBackgroundColor(playerid, PlayerTalents[playerid][i], 1939274751);
				PlayerTextDrawShow(playerid, PlayerTalents[playerid][i]);
				SelectedBrunch[playerid] = i-1;
				new amount[32];
				f(amount, Translate(Language[32][PlayerInfo[playerid][pLanguage]]), PlayerInfo[playerid][pTalents][SelectedBrunch[playerid]]);
				PlayerTextDrawSetString(playerid, PlayerTalents[playerid][5], amount);
				for(new x; x < 9; x++)UpdateTalent(playerid, x);
				return 1;
			}
		}
		if(GetPVarInt(playerid, "showedaction")){
			if(playertextid == InventarAction[playerid][3])return HideTalentMenu(playerid);
			if(playertextid == InventarAction[playerid][2]){
				ShowPlayerDialogEx(playerid, 0, 0, TalentDesc[SelectedBrunch[playerid]][SelectedTalent[playerid]][talName], TalentDesc[SelectedBrunch[playerid]][SelectedTalent[playerid]][talDesc], "Скрыть", "");
				return HideTalentMenu(playerid);
			}
			if(playertextid == InventarAction[playerid][1]){
				HideTalentMenu(playerid);
				if(!PlayerInfo[playerid][pTalents][SelectedBrunch[playerid]])return SendError(playerid, "Нет доступных талантов для изучения");
				if(TalentsInfo[playerid][SelectedBrunch[playerid]][CorrectLine[playerid]])return SendError(playerid, "У Вас уже изучен навык на этом уровне");
				if(CorrectLine[playerid] && !TalentsInfo[playerid][SelectedBrunch[playerid]][CorrectLine[playerid]-1])return SendError(playerid, "Сначала изучите навык на предыдущем уровне");
				new level;
				if(!level){
					switch(CorrectLine[playerid]){
					case 0: level = SelectedTalent[playerid]+1;
					case 1: level = SelectedTalent[playerid]-2;
					case 2: level = SelectedTalent[playerid]-5;
					}
				}
				TalentsInfo[playerid][SelectedBrunch[playerid]][CorrectLine[playerid]] = level;
				PlayerInfo[playerid][pTalents][SelectedBrunch[playerid]] --;
				new amount[32];
				f(amount, Translate(Language[32][PlayerInfo[playerid][pLanguage]]), PlayerInfo[playerid][pTalents][SelectedBrunch[playerid]]);
				PlayerTextDrawSetString(playerid, PlayerTalents[playerid][5], amount);
				UpdateTalent(playerid, SelectedTalent[playerid]);
				SendInfo(playerid, "Способность изучена");
				SaveAccount(playerid);
				return 1;
			}
		}
	}
	if(!GetPVarInt(playerid, "SPAMTIMER") && !GetPVarInt(playerid, "JailBreak") && GetPVarInt(playerid, "NeedAssistance")){
		if(playertextid == NeedAssistance[playerid])
		{
			new Float:pos[3],string[160];
			if(Assist[playerid] > gettime())return SendError(playerid, "Вы уже вызвали подкрепление. Ожидайте...");
			if(GetPlayerVirtualWorld(playerid) > 0 || GetPlayerInterior(playerid) > 0)return SendError(playerid, "Вызвать подмогу в здании невозможно");
			GetPlayerPos(playerid, pos[0],pos[1],pos[2]);
			f(string, "[Внимание всем постам] %s %s[%d] запросил подкрепление. Его координаты отмечены на радаре", GetRankName(PlayerInfo[playerid][pMember], PlayerInfo[playerid][pRank]), Name(playerid), playerid);
			SendCopsMessage(COLOR_RED,string);
			Assist[playerid] = gettime()+180;
			foreach(Player, i)
			{
				if(IsACop(i) && TeamDuty[i] && i != playerid)
				EnableGPSForPlayer(i, pos[0],pos[1],pos[2]);
			}
			return 1;
		}
	}
	if(PlayerInfo[playerid][pJob] == 24 && InJob[playerid]){
		if(playertextid == FactoryKamen[playerid]){
			PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
			PlayerTextDrawHide(playerid, FactoryKamen[playerid]);
			DestroyPlayerTD(playerid, FactoryKamen[playerid]);
			return crafttry[playerid]++;
		}
	}
	if(PlayerInfo[playerid][pItems] == 1){
		for(new i = 1; i < 6; i++){
			if(playertextid == QuickItems[playerid][i]){
				if(!PlayerInfo[playerid][pItem][i-1])return SendError(playerid, "У Вас не выбрано действие для этого слота");
				SelectedSlot[playerid] = PlayerInfo[playerid][pItem][i-1];
				UseInventoryItem(playerid);
				return 1;
			}
		}			
		if(playertextid == QuickItems[playerid][7]){
			new string[256], str[64];
			for(new i; i < 5; i++){
				if(!PlayerInfo[playerid][pItem][i])f(str, "Слот №%d\t{D94141}Не назначено\n", i+1);
				else f(str, "Слот №%d\t{FFCB8C}%s", i+1, QuickInfo[PlayerInfo[playerid][pItem][i]]);
				strcat(string, str);
			}
			return ShowPlayerDialogEx(playerid, 534, 4, "Выбор слота", string, "Далее", "Отмена");
		}
	}
	if(Spectate[playerid] && PlayerInfo[playerid][pAdmin])
	{
		if(ReconPlayer[7] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid, 967, DIALOG_STYLE_INPUT, " ", "{ffffff}-          Введите ID          -", "Следить", "Отменить");
		else if(ReconPlayer[8] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
			for(new i = 16; i < sizeof(ReconPlayer); i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);
			for(new i = 16; i < 20; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);
			ReconBounds[playerid][0] = 16;
			ReconBounds[playerid][1] = 19;
			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[9] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
			for(new i = 16; i < sizeof(ReconPlayer); i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);
			for(new i = 20; i < 23; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);
			ReconBounds[playerid][0] = 20;
			ReconBounds[playerid][1] = 22;
			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[10] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
			for(new i = 16; i < sizeof(ReconPlayer); i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);
			PlayerTextDrawShow(playerid, ReconPlayer[23]);
			PlayerTextDrawShow(playerid, ReconPlayer[24]);
			ReconBounds[playerid][0] = 23;
			ReconBounds[playerid][1] = 24;
			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[12] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
			for(new i = 16; i < sizeof(ReconPlayer); i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);
			for(new i = 25; i < 28; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);
			ReconBounds[playerid][0] = 25;
			ReconBounds[playerid][1] = 27;
			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[13] == playertextid)
		{
			DisableEnableReconButton(playerid, ReconSelect[playerid], 0);
			for(new i = 16; i < sizeof(ReconPlayer); i++)
			PlayerTextDrawHide(playerid, ReconPlayer[i]);
			for(new i = 28; i < 31; i++)
			PlayerTextDrawShow(playerid, ReconPlayer[i]);
			ReconBounds[playerid][0] = 28;
			ReconBounds[playerid][1] = 30;
			ReconSelectSub[playerid] = ReconBounds[playerid][0];
			DisableEnableReconButton(playerid, ReconSelectSub[playerid], 1);
		}
		else if(ReconPlayer[11] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,1337,DIALOG_STYLE_INPUT," ","{ffffff}-\tВведите причину варна\t-","Заварнить","Отменить");
		else if(ReconPlayer[14] == playertextid) return SubTextDelete(playerid),StartSpectate(playerid,SpecAd[playerid]);
		else if(ReconPlayer[15] == playertextid) return SubTextDelete(playerid),callcmd::spec(playerid, "off");
		else if(ReconPlayer[16] == playertextid)
		{
			if(GetPlayerState(SpecAd[playerid]) != 2)
			{
				new mess[40];format(mess, sizeof(mess), "%d",SpecAd[playerid]);
				return callcmd::gm(playerid, mess);
			}	
			else return SendClientMessage(playerid,COLOR_GRAY,"Игрок не должен находиться в транспорте");
		}
		else if(ReconPlayer[17] == playertextid) return SendError(playerid, "Я ещё не придумал");//GM 2
		else if(ReconPlayer[18] == playertextid)
		{
			if(GetPlayerState(SpecAd[playerid]) == 2)
			{
				new mess[40];format(mess, sizeof(mess), "%d",SpecAd[playerid]);
				return callcmd::gm(playerid, mess);
			}
			else return SendClientMessage(playerid,COLOR_GRAY,"Игрок должен находиться в транспорте");
		}	
		else if(ReconPlayer[19] == playertextid)
		{
			TimeNumberShotTarget[SpecAd[playerid]] = 0;
			TimeNumberShot[SpecAd[playerid]] = 0;
		}
		else if(ReconPlayer[20] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,1488,DIALOG_STYLE_INPUT," ","{ffffff}-\tВведите время и причину мута через пробел\t-","Замутить","Отменить");
		else if(ReconPlayer[21] == playertextid)
		{
			new mess[40];format(mess, sizeof(mess), "%d",SpecAd[playerid]);
			return callcmd::slap(playerid, mess);
		}
		else if(ReconPlayer[22] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,965,DIALOG_STYLE_INPUT," ","{ffffff}-\tВведите минуты и причину джейла через пробел\t-","Посадить","Отменить");
		else if(ReconPlayer[23] == playertextid)
		{
			SubTextDelete(playerid);
			new mess[40];format(mess, sizeof(mess), "%d",SpecAd[playerid]);
			return callcmd::skick(playerid, mess);
		}
		else if(ReconPlayer[24] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,962,DIALOG_STYLE_INPUT," ","{ffffff}-\tВведите причину кика\t-","Кикнуть","Отменить");
		else if(ReconPlayer[25] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,964,DIALOG_STYLE_INPUT," ","{ffffff}-\tВведите дни и причину бана через пробел\t-","Забанить","Отменить");
		else if(ReconPlayer[26] == playertextid) return SubTextDelete(playerid),ShowPlayerDialogEx(playerid,966,DIALOG_STYLE_INPUT," ","{ffffff}-\tВведите причину бана до 2038 года\t-","Забанить","Отменить");
		else if(ReconPlayer[28] == playertextid)
		{
			SubTextDelete(playerid);
			new mess[40];format(mess, sizeof(mess), "%d",SpecAd[playerid]);
			return callcmd::check(playerid, mess);
		}
		else if(ReconPlayer[29] == playertextid)
		{
			SubTextDelete(playerid);
			new mess[40];format(mess, sizeof(mess), "%d",SpecAd[playerid]);
			return callcmd::checkweap(playerid, mess);
		}
		else if(ReconPlayer[30] == playertextid)
		{
			SubTextDelete(playerid);
			new mess[40];format(mess, sizeof(mess), "%s",PlayerName[SpecAd[playerid]]);
			return callcmd::get(playerid, mess);
		}
		else if(playertextid == ReconPlayer[31])
		{
			new reconstr[2800];
			strcat(reconstr,"{0099ff}Варны:{FFFFFF} Количество активных варнов | Общее количество варнов\n");
			strcat(reconstr,"{0099ff}Здоровье машины:{FFFFFF} Только если игрок в транспорте, иначе значение будет 0\n");
			strcat(reconstr,"{0099ff}Скорость:{FFFFFF} Скорость транспорта / Максимальная скорость (Учитывайте тюнинг)\n{C0C0C0}\tТолько если игрок в транспорте\n");
			strcat(reconstr,"{0099ff}Материалы:{FFFFFF} Количество материалов у игрока | Количество материалов на сервере\n{C0C0C0}\tТо что оображается игроку | Реальное количество материалов\n");
			strcat(reconstr,"{C0C0C0}\tПоказывает материалы оружия, которое у игрока в данный момент в руках\n");
			strcat(reconstr,"{0099ff}Выстрел:{FFFFFF} Количество выстрелов | Количество попаданий | Процент попаданий\n");
			strcat(reconstr,"{C0C0C0}\tСервер подсчитывает количество выстрелов, сделанных игроком, пока он онлайн\n\tНа глаз можно определить, использует ли игрок AIM\n");
			strcat(reconstr,"{0099ff}Таймшот:{FFFFFF} Количество выстрелов | Количество попаданий | Процент попаданий\n");
			strcat(reconstr,"{C0C0C0}\tТо же самое, что предыдущая строка, но счетчик обнуляется каждые 10 минут\n\tВ меню можно обнулить в любой момент - \"ResetShot\"\n");
			strcat(reconstr,"{0099ff}АФК:{FFFFFF} Время в АФК\n");
			strcat(reconstr,"{0099ff}Двигатель:{FFFFFF} ON - Двигатель включен / OFF - Выключен / - Не в машине");
			return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",reconstr,"Скрыть","");
		}
		else if(ReconPlayer[27] == playertextid)
		{
			SubTextDelete(playerid);
			new mess[40];format(mess, sizeof(mess), "%d",SpecAd[playerid]);
			return callcmd::sban(playerid, mess);
		}
		else if(ReconPlayer[32] == playertextid)
		{
			for(new id = SpecAd[playerid]-1; id >= 0; id--)
			{
				if(id < 0)id = MAX_PLAYERS-1;
				if(!IsPlayerConnected(id) || id == playerid)continue;
				SubTextDelete(playerid),StartSpectate(playerid,id);
				SpecAd[playerid] = id;
				break;
			}
		}
		else if(ReconPlayer[33] == playertextid)
		{
			for(new id = SpecAd[playerid]+1; id <= MAX_PLAYERS; id++)
			{
				if(id > MAX_PLAYERS-1)id = 0;
				if(!IsPlayerConnected(id) || id == playerid)continue;
				SubTextDelete(playerid),StartSpectate(playerid,id);
				SpecAd[playerid] = id;
				break;
			}
		}
	}
	if(GetPVarInt(playerid, "JailBreak"))
	{
		new Float:temp_y, Chain;
		for(new i; i <= 6; i++)
		{
			if(playertextid == AlkTD[playerid][i])
			{
				switch(i)
				{
				case 0: temp_y = 244.408874;
				case 1: temp_y = 257.355438;
				case 2: temp_y = 270.795532;
				case 3: temp_y = 284.240020;
				case 4: temp_y = 297.684478;
				case 5: temp_y = 311.128875;
				case 6: temp_y = 324.573272;
				}
				if(PlayerInfo[playerid][pChainPos][i] == 1)PlayerInfo[playerid][pChainComplete]--;
				DestroyPlayerTD(playerid, AlkTD[playerid][i]);
				Chain = random(sizeof ChainPos);
				PlayerInfo[playerid][pChainPos][i] = Chain;
				PlayerPlaySound(playerid, 1145, 0, 0, 0);
				if(Chain == 1)PlayerInfo[playerid][pChainComplete]++;
				AlkTD[playerid][i] = CreateChain(playerid, ChainPos[Chain], temp_y, (Chain == 1) ? 0xB0F28FFF : 0x82CFFFFF);
				if(PlayerInfo[playerid][pChainComplete] == 7)
				{
					for(new z; z < sizeof AlkMenu; z++)
					{
						if(z <= 6)DestroyPlayerTD(playerid, AlkTD[playerid][z]);
						TextDrawHideForPlayer(playerid, AlkMenu[z]);
					}
					PlayerPlaySound(playerid, 36401, 0, 0, 0);
					SendClientMessage(playerid, COLOR_ORANGE, "Вы взломали замок на решётке и попали в вентиляцию");
					SendClientMessage(playerid, COLOR_ORANGE, "Отыщите выход в вентиляционной шахте");
					J_SetPlayerPos(playerid, -2163.2769,1858.1191,1056.2604);
					SetPlayerFacingAngle(playerid, 180.0);
					SetCameraBehindPlayer(playerid);
					ClearAnims(playerid);
					CancelSelectTextDraw(playerid);
				}
				return 1;
			}
		}
	}
	if(GetPVarInt(playerid, "showedcoins"))
	{
		for(new i = 1; i < 4; i++)
		{
			if(playertextid == CoinsTD[playerid][i])
			{
				if(CoinsSelect[playerid] != -1)return SendClientMessage(playerid, COLOR_ORANGE, "Вы уже выбрали монетку в этом кону");
				if(GetMoney(playerid) <= CoinsBet[playerid])return SendError(playerid, "У Вас недостаточно средств для продолжения игры");
				CoinsSelect[playerid] = i;
				HidePlayerCoins(playerid);
				ShowPlayerCoins(playerid);
				if(CoinsSelect[CoinsOpponent[playerid]] != -1)
				{
					SetPVarInt(playerid, "CoinsTimer", 4);
					SetPVarInt(CoinsOpponent[playerid], "CoinsTimer", 4);
					SetPlayerTimer(playerid, "ShowCoinsResult", 3500, 0);
				}
				return 1;
			}
		}
	}
	if(GetPVarInt(playerid,"PlayingRoulette"))
	{
		if(playertextid == PlayerRoulette[playerid][0])
			return ShowPlayerDialogEx(playerid,312,1,"{43CD80}Пополнение баланса","Введите сумму пополнения баланса для игры в рулетку\n\n{7396FB}Пополнение производится с баланса донат-счёта","Пополнить","Отмена");
	}
	if(GetPVarInt(playerid, "showedfool")){
		new foolid = GetPVarInt(playerid, "FoolTable")-1;
		if(FoolInfo[foolid][foolGamestart]){
			for(new i; i < 18; i++){
				if(playertextid == FoolCards[playerid][i]){
					if(strlen(PlayerCards[playerid][i]) < 5)return 1;
					if(FoolInfo[foolid][foolDowncards] == FoolInfo[foolid][foolDefCards])return SendClientMessage(playerid, COLOR_ORANGE, "У защищающегося нет столько карт");
					PlayerTextDrawColor(playerid, FoolCards[playerid][GetPVarInt(playerid, "SelectCard")], 0xFFFFFFFF);
					PlayerTextDrawShow(playerid, FoolCards[playerid][GetPVarInt(playerid, "SelectCard")]);
					if(playerid == FoolInfo[foolid][foolDefence]){
						PlayerTextDrawColor(playerid, FoolCards[playerid][i], 0xFF4400AA);
						PlayerTextDrawShow(playerid, FoolCards[playerid][i]);
						SetPVarInt(playerid, "SelectedCard", 1);
						SetPVarInt(playerid, "SelectCard", i);
						new check;
						if(foolid > 4){
							new number[2], card[6], cards[6];
							strmid(card, PlayerCards[playerid][i], 10, strlen(PlayerCards[playerid][i])-1);
							sscanf(card, "d", number[0]);
							for(new x = 5; x >= 0; x--){
								if(strlen(UpCards[foolid][x]) < 5)continue;
								if(check == -1)break;
								if(strlen(DownCards[foolid][x]) > 5){
									check = -1;
									continue;
								}
								strmid(cards, UpCards[foolid][x], 10, strlen(UpCards[foolid][x])-1);
								sscanf(cards, "d", number[1]);
								if(strlen(UpCards[foolid][x]) < 5 && check > 0)SwitchTurn(foolid, 2);
								if(number[0] == number[1]){
									if(strlen(DownCards[foolid][x]) < 5){
										check++;
									}
								}
							}
						}
						else return 1;
						if(check <= 0)return 1;
					}
					return BitCard(playerid, foolid, i);
				}
			}
		}
	}
    return true;
}
stock UpdateFuels(biz)
{
	new string[180];
	if(BizInfo[biz][bState] == B_GAS)
	{
		for(new i;i < sizeof(GoFuel);i ++)
		{
			if(GoFuel[i][gfBizzID] == biz)
			{
				new benz = BizInfo[biz][bProducts];
				new Float:cost = BizInfo[biz][bEnterPrice];
				format(string,sizeof(string),"\
				{FFFFFF}Заправочная станция\n\n\
				{FFFFFF}Используйте {43CD80}'/fill'{FFFFFF}, чтобы заправиться\n\
				Стоимость 1-го литра: {43CD80}$%.0f\n\
				{FFFFFF}Всего топлива: {43CD80}%d литров",cost,benz);
				UpdateDynamic3DTextLabelText(FuelText[i],COLOR_WHITE,string);
			}
		}
	}
	return true;
}
forward MysqlCheckNickReferal(playerid, inputtextsave[]);
public MysqlCheckNickReferal(playerid, inputtextsave[])
{
	new string[256];
	if(!strlen(inputtextsave) || ( cache_get_row_count(mysql)>0 && !GetString(inputtextsave, PlayerName[playerid]) ) )
    {
        RegisterState[playerid] = 0;
        if(!strlen(inputtextsave)) SetString(RegReferal[playerid],"No Referal");
		else
		{
			mysql_real_escape_string(inputtextsave, RegReferal[playerid]);
			new refid = NameID(RegReferal[playerid]);
			if(refid != INVALID_PLAYER_ID)
			{
			    format(string, sizeof(string), "Только что игрок {7396FB}%s{FFFFFF} указал ваш ник при регистрации, при достижении 30 ХР вы получите 50000$", PlayerName[playerid]);
			    SendClientMessage(refid, COLOR_WHITE, string);
			    SendClientMessage(refid, COLOR_VALIK, "Посмотреть весь список, указавших ваш никнейм игроков, вы можете введя '/referals'");
			}
		}
		OnPlayerRegister(playerid);
	    SendClientMessage(playerid,COLOR_VALIK,"Благодарим вас за регистрацию на нашем сервере");
		format(string,sizeof(string),"Приветствуем нового игрока | {C9EAFF}%s [ID: %i]",PlayerName[playerid], playerid);
		SendAdminsMessage(COLOR_WHITE,string,1);
		SetFullness(playerid, 30);
		J_SetPlayerHealth(playerid,100);
   	}
   	else
   	{
   	    SendClientMessage(playerid,COLOR_RED,"_________________Ошибка_____________________");
   	    SendClientMessage(playerid,COLOR_RED,"Возможные причины:");
   	    SendClientMessage(playerid,COLOR_LIGHTGREEN,"    - Вы указали свой ник");
   	    SendClientMessage(playerid,COLOR_LIGHTGREEN,"    - Такого аккаунта не существует");
   	    SendError(playerid,"_____________________________________________");
   	    ShowRegisterDialog(playerid,RegisterState[playerid]);
   	}
   	return 1;
}
forward MysqlCheckNameBuyName(playerid, name[]);
public MysqlCheckNameBuyName(playerid, name[])
{
	if(cache_get_row_count(mysql)>0) return ShowPlayerDialogEx(playerid,224,1,"{43CD80}Покупка","{FFFFFF}Вы хотите сменить игровой ник\nСтоимость: 20 рублей\nВведите новый ник в окно\nЗатем нажмите \"Сменить\"\n\n{FF0000}Ошибка: Этот ник занят","Сменить","Отмена");
	PlayerInfo[playerid][pVirMoney] -= 20;
	RenamePlayer(playerid, name);
	SendClientMessage(playerid, COLOR_VALIK, "Вы сменили свой ник");
	return 1;
}
forward MysqlCheckNameRename(playerid, name[]);
public MysqlCheckNameRename(playerid, name[])
{
	if(!cache_get_row_count(mysql))
    {
        OldDialogID[playerid] = INVALID_DIALOG_ID;
		if(!IsPlayerLogged[playerid])
		{
		    RenameTime[playerid] = -1;
			RenamePlayer(playerid,name);
			Autorisation(playerid);
			SetPlayerColor(playerid,COLOR_GRAY);
		}
		else SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
    }
    else Dialog_Open(playerid,RENAME_DIALOG,1,"{43CD80}Введите новый никнейм","\n\n\\c{D94141}Этот никнейм занят\n\n\\c{FFFFFF}Введите новый никнейм в окошко и нажмите {43CD80}Далее\n\n\\c{FFFFFF}Пример: {43CD80}Carl_Johnson\n\n","Далее","Выход");
	return 1;
}

stock IsAFexistMail(const Mail[])
{
	new query[150], mail[50];
	mysql_escape_string(Mail, mail, mysql);
    format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Mail` = '%s' LIMIT 1", mail);
	new Cache:result = mysql_query(mysql, query);
	new accounts = cache_get_row_count(mysql);
	cache_delete(result, mysql);
	return accounts;
}
stock IsANoBizName(const name[])
{
    if(TextFind(name,"'',")) return true;
	return false;
}
stock IsAArendCar(carid)
{
	if(carid >= ArendCar[0] && carid <= ArendCar[ARENDCARS-1]) return true;
	return false;
}
stock GetArendCarID(carid) return carid - ArendCar[0];

stock IsPlayerInIncVehicle(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new carid = GetPlayerVehicleID(playerid);
		if(VehicleInfo[carid][vJob] == 9) return true;
	}
	return false;
}
stock IsPlayerHaveCar(playerid,vehicleid)
{
	if(IsAOwnableCar(vehicleid))
	{
	    new number = GetVehicleID(vehicleid);
		if(GetString(CarInfo[number][cKeyer],Name(playerid)) || GetString(CarInfo[number][cOwner],Name(playerid) )) return true;
	}
	return false;
}
stock IsPlayerRegCar(playerid,vehicleid)
{
    if(IsAOwnableCar(vehicleid))
	{
	    new number = GetVehicleID(vehicleid);
		if(GetString(CarInfo[number][cOwner],Name(playerid))) return true;
	}
	return false;
}
stock GetNumberCars(playerid,&number)
{
	new cars;
	foreach(OWNABLECARS, i)
	{
	    if(IsPlayerHaveCar(playerid,OwnableCar[i])) cars ++;
	}
	number = cars;
}
stock SetCarOwner(carid,const name[])
{
	return SetString(CarInfo[GetVehicleID(carid)][cOwner],name);
}
stock SetCarKeyer(carid,const name[])
{
    return SetString(CarInfo[GetVehicleID(carid)][cKeyer],name);
}
stock ProxDetector(Float:radius = 30.0, playerid, const text[],col1 = 0xFFFFFFFF, col2 = 0xCCCCCCFF, col3 = 0x999999FF, col4 = 0x666666FF, col5 = 0x333333FF, chat = 0)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	new Float:dist, virtualworld = GetPlayerVirtualWorld(playerid), interior = GetPlayerInterior(playerid);
	if(chat)
	{
		new temp[256];
		foreach(new i: Player)
		{
			if(!IsPlayerConnected(i) || virtualworld != GetPlayerVirtualWorld(i) || interior != GetPlayerInterior(i)) continue;
			dist = GetPlayerDistanceFromPoint(i, x, y, z);
			if(!PlayerInfo[i][pChat])
			{
				if(PlayerInfo[playerid][pMaskON])format(temp, sizeof(temp), "-{7a7667} %s | %s[%d]", text, PlayerName[playerid], playerid);
				else format(temp,sizeof(temp),"- %s {%s} | %s[%d]", text, CheckColor(GetPlayerColor(playerid)), PlayerName[playerid], playerid);
			}
			else format(temp,sizeof(temp),"%s[%d] говорит: %s", PlayerName[playerid],playerid,text);
			if(dist < radius / 16)SendClientMessage(i, col1, temp);
			else if(dist < radius / 8)SendClientMessage(i, col2, temp);
			else if(dist < radius / 4)SendClientMessage(i, col3, temp);
			else if(dist < radius / 2)SendClientMessage(i, col4, temp);
			else if(dist < radius)SendClientMessage(i, col5, temp);
		}
	}
	else
	{
		foreach(new i: Player)
		{
			if(!IsPlayerConnected(i) || virtualworld != GetPlayerVirtualWorld(i) || interior != GetPlayerInterior(i)) continue;
			dist = GetPlayerDistanceFromPoint(i, x, y, z);
			if(dist < radius / 16)SendClientMessage(i, col1, text);
			else if(dist < radius / 8)SendClientMessage(i, col2, text);
			else if(dist < radius / 4)SendClientMessage(i, col3, text);
			else if(dist < radius / 2)SendClientMessage(i, col4, text);
			else if(dist < radius)SendClientMessage(i, col5, text);
		}
	}
	for(new i; i < strlen(text); i++){
		if(GetString(text[i], "'"))SetString(text[i], ".");
	}
	return true;
}
public Fillup(playerid, carid, Float:gas)
{
	if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInVehicle(playerid,carid))
	    {
			new string[100];
			if(IsAtGasStation(playerid))
			{
       			Fuel[carid] += gas;
			    BeforeFill[carid] += gas;
			    if(BeforeFill[carid] >= gas || Fuel[carid] >= 100.0)
			    {
			        if(Fuel[carid] >= 100.0) Fuel[carid] = 100.0;
					TogglePlayerControllable(playerid, true);
					format(string,sizeof(string),"Ваш транспорт заправлен {FFFFFF}%.1f{FAAC58} литрами топлива",gas);
					SendClientMessage(playerid,COLOR_ORANGE,string);
					callcmd::en(playerid);
				}
    			else SetTimerEx("Fillup",200,false,"idd",playerid,carid,gas);
			}
		}
  		else
		{
		    if(IsAtGasStationC(carid))Fuel[carid] = gas;
		}
	}
	return true;
}
forward allmembers(playerid);
public allmembers(playerid)
{
	new rows,fields;
	cache_get_data(rows,fields);
	if(!rows) return true;
	new nicks[20],rank;
	new string2[2048];
	format(string2, sizeof(string2),"{FFFFFF}Имя Фамилия\t{FFFFFF}Ранг\n");
 	for(new i = 0; i < rows; i++)
	{
	    if(i > 100) break;
		cache_get_field_content(i, "NickName", nicks, mysql, sizeof ( nicks ));
		rank = cache_get_field_content_int(i, "Rank", mysql);
		format(string2,sizeof(string2), "%s[%d] %s\t%d\n",string2,i+1,nicks,rank);
	}
	ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "{FF6F00}Все игроки в вашей организации", string2, "Скрыть", "");
	return true;
}
BildboardLoad()
{
    mysql_query(mysql, "SELECT * FROM `billboards`");
    new rows,fields,ID[12];
    cache_get_data(rows,fields);
    if(!rows) return print("Billboards not found");
	for(new idx = 0;idx < rows; idx++)
	{
        cache_get_field_content(idx, "bText", BildInfo[idx][bText],mysql,144);
        cache_get_field_content(idx, "bPosText", BildInfo[idx][bPosText],mysql,32);
        cache_get_field_content(idx, "bOwner", BildInfo[idx][bOwner],mysql,MAX_PLAYER_NAME);
        BildInfo[idx][bBackColor] = cache_get_field_content_int(idx, "bBackColor");
        BildInfo[idx][bFontFace] = cache_get_field_content_int(idx, "bFontFace");
        BildInfo[idx][bAligment] = cache_get_field_content_int(idx, "bAligment");
        BildInfo[idx][bFontSize] = cache_get_field_content_int(idx, "bFontSize");
        BildInfo[idx][bPos][0] = cache_get_field_content_float(idx, "PosX");
        BildInfo[idx][bPos][1] = cache_get_field_content_float(idx, "PosY");
        BildInfo[idx][bPos][2] = cache_get_field_content_float(idx, "PosZ");
        BildInfo[idx][bPos][3] = cache_get_field_content_float(idx, "PosA");
        BildInfo[idx][bDay] = cache_get_field_content_int(idx, "bDay");
        BildInfo[idx][bObjectID] = CreateObject(cache_get_field_content_int(idx, "bModel"),BildInfo[idx][bPos][0], BildInfo[idx][bPos][1], BildInfo[idx][bPos][2], 0.00000000, 0.00000000, BildInfo[idx][bPos][3], 300);
		format(ID,sizeof ID,"ID %d",idx);
		CreateDynamic3DTextLabel(ID,0xFFFFFF77,BildInfo[idx][bPos][0], BildInfo[idx][bPos][1], BildInfo[idx][bPos][2],10.0);
        UpdateBuildText(idx);
	}
	return printf("Billboards loaded: %i",MAX_BILLBORDS);
}
stock IsValidPassport(playerid)
{
    new string[100];
	format(string, sizeof(string), "SELECT `Name` FROM `passports` WHERE `Name` = '%s' LIMIT 1", PlayerName[playerid]);
	new Cache:result = mysql_query(mysql, string);
	new accounts = cache_get_row_count(mysql);
	cache_delete(result, mysql);
	return accounts;
}
stock OnRegPass(playerid)
{
	new string[250];
	format(string, sizeof(string), "INSERT INTO `passports` (`Name`,`Seria`,`Number`,`Sex`,`D_Day`,`D_Month`,`D_Year`,`DB_Day`,`DB_Month`,`DB_Year`,`McState`) VALUE ('%s','%d','%d','%d','%d','%d','%d','%d','%d','%d','-1')",
	PlayerName[playerid],
	PassInfo[playerid][psSeria],
	PassInfo[playerid][psNumber],
	PassInfo[playerid][psSex],
	PassInfo[playerid][psDate][0],
	PassInfo[playerid][psDate][1],
	PassInfo[playerid][psDate][2],
	PassInfo[playerid][psDateBirth][0],
	PassInfo[playerid][psDateBirth][1],
	PassInfo[playerid][psDateBirth][2]);
	mysql_pquery(mysql, string);
	return true;
}
stock OnLoadPass(playerid)
{
	new string[100];
	format(string, sizeof(string), "SELECT * FROM `passports` WHERE `Name` = '%s' LIMIT 1", PlayerName[playerid]);
	mysql_pquery(mysql, string, "MysqlLoadPassport", "d", playerid);
	return 1;
}
forward MysqlLoadPassport(playerid);
public MysqlLoadPassport(playerid)
{
	if(cache_get_row_count(mysql) == 1)
	{
		PassInfo[playerid][psSeria] = cache_get_field_content_int(0, "Seria", mysql);
		PassInfo[playerid][psNumber] = cache_get_field_content_int(0, "Number", mysql);
		PassInfo[playerid][psSex] = cache_get_field_content_int(0, "Sex", mysql);
		PassInfo[playerid][psDate][0] = cache_get_field_content_int(0, "D_Day", mysql);
		PassInfo[playerid][psDate][1] = cache_get_field_content_int(0, "D_Month", mysql);
		PassInfo[playerid][psDate][2] = cache_get_field_content_int(0, "D_Year", mysql);
		PassInfo[playerid][psDateBirth][0] = cache_get_field_content_int(0, "DB_Day", mysql);
		PassInfo[playerid][psDateBirth][1] = cache_get_field_content_int(0, "DB_Month", mysql);
		PassInfo[playerid][psDateBirth][2] = cache_get_field_content_int(0, "DB_Year", mysql);
		PassInfo[playerid][psCity] = cache_get_field_content_int(0, "City", mysql);
		cache_get_row(0, 11, MedCardInfo[playerid][mcGiver], mysql,24);
		cache_get_row(0, 12, MedCardInfo[playerid][mcDate], mysql,10);
		MedCardInfo[playerid][mcState] = cache_get_field_content_int(0, "McState", mysql);
	}
	return true;
}
stock OnPlayerRegister(playerid)
{
	new query[560];
	new info[320];
	new Year, Month, Day, date[12];
	getdate(Year, Month, Day);
	format(date, 12, "%02d/%02d/%d", Day, Month, Year);
	strcat(query,"INSERT INTO `accounts` ");
	strcat(query,"(`NickName`,`Password`,`RegIP`,`OldIP`,`CheckIP1`,`CheckIP2`,`Sex`,`Age`,`Race`,`Referal`,`Mail`,`Telephone`,`Money`,`Bank`,`HouseKey`,`BizKey`,`From`,`OOC`,`Snow`, `FamilyID`,`apassword`,`regdate`) ");
	strcat(query,"VALUE ");
    format(info, sizeof(info), "('%s', '%s', '%s','%s', 'No IP Address', 'No IP Address', '%i', '0', '%i', '%s', 'No Mail Adress', 'No Telephone', '200', '0', '-1', '-1', '-1', '0', '1','-1','No password','%s')",
	PlayerName[playerid], RegPass[playerid], PlayerIp[playerid],PlayerIp[playerid], RegSex[playerid], RegRace[playerid], RegReferal[playerid], date);
	strcat(query,info);
	mysql_pquery(mysql, query, "OnPlayerRegisterMysql", "d", playerid);
	return 1;
}
forward OnPlayerRegisterMysql(playerid);
public OnPlayerRegisterMysql(playerid)
{
    PlayerInfo[playerid][pID] = cache_insert_id(mysql);
	OnPlayerLogin(playerid);
    return true;
}
stock RemovePlayerAttachedObjectEx(playerid, index)
{
    return RemovePlayerAttachedObject(playerid, index);
}
stock RenamePlayer(playerid, name[])
{
	if(IsPlayerLogged[playerid])
	{
  		new string[150], oldname[24];
		GetPlayerName(playerid,oldname,sizeof(oldname));
		format(string, sizeof(string), "UPDATE `accounts` SET `NickName` = '%s' WHERE `ID` = '%i'", name, PlayerInfo[playerid][pID]);
		mysql_pquery(mysql, string);
		format(string, sizeof(string), "UPDATE `accounts` SET `Referal` = '%s' WHERE `Referal` = '%s'", name, oldname);
		mysql_pquery(mysql, string);
		//телефон
		format(string, sizeof(string), "UPDATE `phonebook` SET `Name` = '%s' WHERE `Name` = '%s'", name, oldname);
		mysql_pquery(mysql, string);
		format(string, sizeof(string), "UPDATE `phonebook` SET `Namez` = '%s' WHERE `Namez` = '%s'", name, oldname);
		mysql_pquery(mysql, string);
		format(string, sizeof(string), "UPDATE `phonemes` SET `Name` = '%s' WHERE `Name` = '%s'", name, oldname);
		mysql_pquery(mysql, string);
		format(string, sizeof(string), "UPDATE `phonemes` SET `Namez` = '%s' WHERE `Namez` = '%s'", name, oldname);
		mysql_pquery(mysql, string);
		new house = SlotValue[playerid][1];
		new biz = SlotValue[playerid][3];
		if(PlayerInfo[playerid][pLeader]>0) SetString(OrgInfo[playerid][oLeader],Name(playerid));
		if(house != -1 && GetString(HouseInfo[house][hOwner],oldname))
	 	{
			SetString(HouseInfo[house][hOwner],name);
			UpdateHouse(house);
			//SaveHouse(house);
		}
		if(biz != -1 && GetString(BizInfo[biz][bOwner],oldname))
		{
			SetString(BizInfo[biz][bOwner],name);
			UpdateBiz(biz,1);
			//SaveBiz(biz);
		}
		foreach(OWNABLECARS, i)
		{
			new number = OwnableCar[i];
			if(IsPlayerRegCar(playerid,number))
			{
				SetCarOwner(number,name);
				//SetCarKeyer(number,name);
				UpdateCarInfo(number);
				SaveOwnableCar(i);
			}
		}
		for(new i = 0;i < MAX_OWNABLECASINO;i ++)
		{
			if(GetString(CasinoInfo[i][casOwner],oldname))
			{
                SetString(CasinoInfo[i][casOwner],name);
				SaveCasino(i);
			}
		}
		format(string,sizeof(string),"Теперь %s известен как %s",oldname,name);
		SendClientMessageToAll(0xA7FC00FF,string);
		SendClientMessage(playerid,COLOR_ACHAT,"[Информация] {FFFFFF}По скольку вы сменили имя, вам необходимо сделать новый паспорт и мед-карту");
	}
	SetPlayerNameEx(playerid, name);
	return true;
}
stock RemovePlayerFromVehicle_Ex(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new Float:X,Float:Y,Float:Z,Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetVehicleZAngle(GetPlayerVehicleID(playerid), A);
		switch(GetPlayerVehicleSeat(playerid))
		{
		    case 0,2: ShiftCords(1, X, Y, A-90.0, 1.5);
		    case 1,3: ShiftCords(1, X, Y, A+90.0, 1.5);
		}
		J_SetPlayerPos(playerid, X, Y, Z);
	}
	return true;
}
stock acc_int_strcat(const query[], len, const name[], number)
{
	new string[100];
    format(string, sizeof(string), "`%s` = '%d',",name, number);
    strcat(query, string, len);
    return true;
}
stock acc_str_strcat(const query[], len, const name[], const str[])
{
	new string[256];
    format(string, sizeof(string), "`%s` = '%s',",name, str);
    strcat(query, string, len);
    return true;
}
stock acc_float_strcat(const query[], len, const name[], Float:number)
{
	new string[100];
    format(string, sizeof(string), "`%s` = '%f',", name, number);
    strcat(query, string, len);
    return true;
}
stock SaveAccount(playerid)
{
    new query[2048];
    if(!IsPlayerLogged[playerid])return false;
    query = "UPDATE `accounts` SET ";
    acc_int_strcat(query, sizeof(query), "SCase", PlayerInfo[playerid][pCase]);
	acc_int_strcat(query, sizeof(query), "Exp", PlayerInfo[playerid][pExp]);
	acc_int_strcat(query, sizeof(query), "PlayHours", PlayerInfo[playerid][pPlayHours]);
	acc_int_strcat(query, sizeof(query), "Sex", PlayerInfo[playerid][pSex]);
	acc_int_strcat(query, sizeof(query), "Race", PlayerInfo[playerid][pRace]);
	acc_int_strcat(query, sizeof(query), "Fracskin", PlayerInfo[playerid][pFracSkin]);
	acc_int_strcat(query, sizeof(query), "Admin", PlayerInfo[playerid][pAdmin]);
	acc_int_strcat(query, sizeof(query), "Lotto", PlayerInfo[playerid][pHelper]);
	acc_int_strcat(query, sizeof(query), "Money", SlotValue[playerid][0]);
	acc_int_strcat(query, sizeof(query), "AuthAct", PlayerInfo[playerid][AuthAct]);
	acc_int_strcat(query, sizeof(query), "Bank", PlayerInfo[playerid][pBank]);
	acc_int_strcat(query, sizeof(query), "Wanted", PlayerInfo[playerid][pWanted]);
	acc_int_strcat(query, sizeof(query), "VIP", PlayerInfo[playerid][pVIP]);
	acc_int_strcat(query, sizeof(query), "VipTime", PlayerInfo[playerid][pVipTime]);
	acc_int_strcat(query, sizeof(query), "Leader", PlayerInfo[playerid][pLeader]);
	acc_int_strcat(query, sizeof(query), "Member", PlayerInfo[playerid][pMember]);
	acc_int_strcat(query, sizeof(query), "Rank", PlayerInfo[playerid][pRank]);
	acc_int_strcat(query, sizeof(query), "GunLic", PlayerInfo[playerid][pGunLic]);
	acc_int_strcat(query, sizeof(query), "BoatLic", PlayerInfo[playerid][pBoatLic]);
	acc_int_strcat(query, sizeof(query), "FishLic", PlayerInfo[playerid][pFishLic]);
	acc_int_strcat(query, sizeof(query), "FlyLic", PlayerInfo[playerid][pFlyLic]);
	acc_int_strcat(query, sizeof(query), "CarLic", PlayerInfo[playerid][pCarLic]);
	acc_int_strcat(query, sizeof(query), "BikeLic", PlayerInfo[playerid][pBikeLic]);
	acc_int_strcat(query, sizeof(query), "D_Packets", PlayerInfo[playerid][pD_Packets]);
	acc_int_strcat(query, sizeof(query), "Warns", PlayerInfo[playerid][pWarns]);
	acc_int_strcat(query, sizeof(query), "HouseKey", SlotValue[playerid][1]);
	acc_int_strcat(query, sizeof(query), "BizKey", SlotValue[playerid][3]);
	acc_int_strcat(query, sizeof(query), "FWarns", PlayerInfo[playerid][pFWarns]);
	acc_int_strcat(query, sizeof(query), "Skin", PlayerInfo[playerid][pSkin]);
	acc_int_strcat(query, sizeof(query), "TelNum", SlotValue[playerid][19]);
	acc_int_strcat(query, sizeof(query), "Aurum", PlayerInfo[playerid][pBirja][0]);
	acc_int_strcat(query, sizeof(query), "Diamonds", PlayerInfo[playerid][pBirja][1]);
	strdel(query, strlen(query)-1, strlen(query));
	format(query,sizeof(query),"%s WHERE `ID`='%i'",query, PlayerInfo[playerid][pID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, query);
	else mysql_query(mysql, query, false);
	
	query = "UPDATE `accounts` SET ";
	acc_int_strcat(query, sizeof(query), "Phone", PlayerInfo[playerid][pPhone]);
	acc_int_strcat(query, sizeof(query), "pChat", PlayerInfo[playerid][pChat]);
	acc_int_strcat(query, sizeof(query), "pLoading", PlayerInfo[playerid][pLoading]);
	acc_int_strcat(query, sizeof(query), "Mats", SlotValue[playerid][11]);
	acc_int_strcat(query, sizeof(query), "Drugs", SlotValue[playerid][14]);
	acc_int_strcat(query, sizeof(query), "Job", PlayerInfo[playerid][pJob]);
	acc_int_strcat(query, sizeof(query), "MuteTime", PlayerInfo[playerid][pMuteTime]);
	acc_int_strcat(query, sizeof(query), "FMuteTime", PlayerInfo[playerid][pFMuteTime]);
	acc_int_strcat(query, sizeof(query), "JailTime", PlayerInfo[playerid][pJailTime]);
	acc_int_strcat(query, sizeof(query), "BailPrice", PlayerInfo[playerid][pBailPrice]);
	acc_int_strcat(query, sizeof(query), "KungfuStyle", PlayerInfo[playerid][pKungfu]);
	acc_int_strcat(query, sizeof(query), "KneeheadStyle", PlayerInfo[playerid][pKneehead]);
	acc_int_strcat(query, sizeof(query), "BoxingStyle", PlayerInfo[playerid][pBoxing]);
	acc_int_strcat(query, sizeof(query), "ElbowStyle", PlayerInfo[playerid][pElbow]);
	acc_int_strcat(query, sizeof(query), "Style", GetPlayerFightingStyle(playerid));
	acc_int_strcat(query, sizeof(query), "Spawned", PlayerInfo[playerid][pSpawned]);
	acc_int_strcat(query, sizeof(query), "NeSdal", NeSdal[playerid]);
	acc_int_strcat(query, sizeof(query), "DropCarTime", PlayerInfo[playerid][pDCTime]);
	acc_int_strcat(query, sizeof(query), "Drunk", PlayerDrunkLevel[playerid]);
	acc_int_strcat(query, sizeof(query), "Spining", PlayerInfo[playerid][pSpining]);
	acc_int_strcat(query, sizeof(query), "Worms", PlayerInfo[playerid][pWorms]);
	acc_int_strcat(query, sizeof(query), "Mask", SlotValue[playerid][13]);
	acc_int_strcat(query, sizeof(query), "Glue", PlayerInfo[playerid][pGlue]);
	acc_int_strcat(query, sizeof(query), "Otvertka", PlayerInfo[playerid][pOtvertka]);
	acc_int_strcat(query, sizeof(query), "Jailbreak", PlayerInfo[playerid][pJB]);
	acc_int_strcat(query, sizeof(query), "Roliki", SlotValue[playerid][12]);
	acc_int_strcat(query, sizeof(query), "Fuel", SlotValue[playerid][20]);
	acc_int_strcat(query, sizeof(query), "PhoneBook", PlayerInfo[playerid][pPhoneBook]);
	acc_int_strcat(query, sizeof(query), "Pistol_Skill", PlayerInfo[playerid][pPistol_Skill]);
	acc_int_strcat(query, sizeof(query), "SDPistol_Skill", PlayerInfo[playerid][pSDPistol_Skill]);
	acc_int_strcat(query, sizeof(query), "Eagle_Skill", PlayerInfo[playerid][pEagle_Skill]);
	strdel(query, strlen(query)-1, strlen(query));
	format(query,sizeof(query),"%s WHERE `ID`='%i'",query, PlayerInfo[playerid][pID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, query);
	else mysql_query(mysql, query, false);
	
	query = "UPDATE `accounts` SET ";
	acc_str_strcat(query, sizeof(query), "LastIP", PlayerInfo[playerid][pLastIP]);
	acc_str_strcat(query, sizeof(query), "CheckIP1", PlayerCheckIP1[playerid]);
	acc_str_strcat(query, sizeof(query), "CheckIP2", PlayerCheckIP2[playerid]);
	acc_str_strcat(query, sizeof(query), "LastLogin", PlayerInfo[playerid][pLastLogin]);
 	acc_int_strcat(query, sizeof(query), "ShotGun_Skill", PlayerInfo[playerid][pShotGun_Skill]);
 	acc_int_strcat(query, sizeof(query), "UZI_Skill", PlayerInfo[playerid][pUZI_Skill]);
	acc_int_strcat(query, sizeof(query), "MP5_Skill", PlayerInfo[playerid][pMP5_Skill]);
	acc_int_strcat(query, sizeof(query), "AK47_Skill", PlayerInfo[playerid][pAK47_Skill]);
	acc_int_strcat(query, sizeof(query), "M4_Skill", PlayerInfo[playerid][pM4_Skill]);
	acc_int_strcat(query, sizeof(query), "Sniper_Skill", PlayerInfo[playerid][pSniper_Skill]);
	acc_int_strcat(query, sizeof(query), "Glasses", PlayerInfo[playerid][pGlasses]);
	acc_int_strcat(query, sizeof(query), "Bandans", PlayerInfo[playerid][pBandans]);
	acc_int_strcat(query, sizeof(query), "Hats", PlayerInfo[playerid][pHats]);
	acc_int_strcat(query, sizeof(query), "Syringe", PlayerInfo[playerid][pSyringe]);
	acc_int_strcat(query, sizeof(query), "Poison", SlotValue[playerid][18]);
	acc_int_strcat(query, sizeof(query), "Smokes", SlotValue[playerid][15]);
	acc_int_strcat(query, sizeof(query), "Lighter", SlotValue[playerid][16]);
	acc_int_strcat(query, sizeof(query), "From", SlotValue[playerid][2]);
	acc_int_strcat(query, sizeof(query), "dscore", PlayerInfo[playerid][Donate_Score]);
	acc_int_strcat(query, sizeof(query), "BlackList", PlayerInfo[playerid][pBL]);
	acc_int_strcat(query, sizeof(query), "OOC", PlayerInfo[playerid][pOOC]);
	acc_int_strcat(query, sizeof(query), "ZKP", PlayerInfo[playerid][pZKP]);
	acc_int_strcat(query, sizeof(query), "Heal", PlayerInfo[playerid][pHeal]);
	acc_int_strcat(query, sizeof(query), "Fullness", Fullness[playerid]);
	acc_int_strcat(query, sizeof(query), "Pack", TalentsInfo[playerid][1][2] == 1);
	acc_int_strcat(query, sizeof(query), "Sprunks", PlayerInfo[playerid][pSprunks]);
	acc_int_strcat(query, sizeof(query), "Cheeps", PlayerInfo[playerid][pCheepses]);
	acc_int_strcat(query, sizeof(query), "Radio", PlayerInfo[playerid][pRadio]);
	acc_int_strcat(query, sizeof(query), "TruckReset", TruckReset[playerid]);
	acc_int_strcat(query, sizeof(query), "Snow", PlayerInfo[playerid][pSnow]);
	acc_int_strcat(query, sizeof(query), "VirMoney", PlayerInfo[playerid][pVirMoney]);
	acc_int_strcat(query, sizeof(query), "credit_kd", PlayerInfo[playerid][pCredit_KD]);
	acc_int_strcat(query, sizeof(query), "credit_start", PlayerInfo[playerid][pCredit_Default]);
	strdel(query, strlen(query)-1, strlen(query));
	format(query,sizeof(query),"%s WHERE `ID`='%i'",query, PlayerInfo[playerid][pID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, query);
	else mysql_query(mysql, query, false);
	
	query = "UPDATE `accounts` SET ";
	acc_int_strcat(query, sizeof(query), "OldRepl", PlayerInfo[playerid][pOldRepl]);
	acc_int_strcat(query, sizeof(query), "AllRepl", PlayerInfo[playerid][pAllRepl]);
	acc_int_strcat(query, sizeof(query), "GetBonus", PlayerInfo[playerid][pGetBonus]);
	acc_int_strcat(query, sizeof(query), "Key", PlayerInfo[playerid][pKey]);
	acc_int_strcat(query, sizeof(query), "KeyCheck", PlayerInfo[playerid][pKeyCheck]);
	acc_int_strcat(query, sizeof(query), "Credit", PlayerInfo[playerid][pCredit]);
	acc_int_strcat(query, sizeof(query), "FamilyID", PlayerInfo[playerid][FamilyID]);
	acc_int_strcat(query, sizeof(query), "View", PlayerInfo[playerid][pView]);
	acc_int_strcat(query, sizeof(query), "Gold", PlayerInfo[playerid][pGold]);
	acc_int_strcat(query, sizeof(query), "RepBan", PlayerInfo[playerid][pRepBan]);
	acc_int_strcat(query, sizeof(query), "AskBan", PlayerInfo[playerid][pArmours]);
	acc_int_strcat(query, sizeof(query), "Clip", PlayerInfo[playerid][pClip]);
	acc_int_strcat(query, sizeof(query), "GunsUP", ResetGunsUP[playerid]);
	acc_int_strcat(query, sizeof(query), "BuyGuns", ResetBuyGuns[playerid]);
	acc_int_strcat(query, sizeof(query), "RPTest", PlayerInfo[playerid][pRPTest]);
	acc_int_strcat(query, sizeof(query), "Energy", PlayerInfo[playerid][pEnergy]);
	acc_int_strcat(query, sizeof(query), "RepPack", SlotValue[playerid][17]);
	acc_int_strcat(query, sizeof(query), "F_Skill", PlayerInfo[playerid][pF_Skill]);
	acc_int_strcat(query, sizeof(query), "P_Skill", PlayerInfo[playerid][pP_Skill]);
	acc_int_strcat(query, sizeof(query), "Z_Skill", PlayerInfo[playerid][pZ_Skill]);
	acc_int_strcat(query, sizeof(query), "Za_Skill", PlayerInfo[playerid][pZa_Skill]);
	acc_int_strcat(query, sizeof(query), "In_Skill", PlayerInfo[playerid][pIn_Skill]);
	acc_int_strcat(query, sizeof(query), "My_Skill", PlayerInfo[playerid][pMy_Skill]);
	acc_int_strcat(query, sizeof(query), "By_Skill", PlayerInfo[playerid][pBy_Skill]);
	acc_str_strcat(query, sizeof(query), "Merrit", PlayerInfo[playerid][pMerrit]);
	acc_int_strcat(query, sizeof(query), "Miner_skill", PlayerInfo[playerid][Miner_Skill]);
	acc_int_strcat(query, sizeof(query), "Taxi_skill", PlayerInfo[playerid][Taxi_Skill]);
	strdel(query, strlen(query)-1, strlen(query));
	format(query,sizeof(query),"%s WHERE `ID`='%i'",query, PlayerInfo[playerid][pID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, query);
	else mysql_query(mysql, query, false);
	
	query = "UPDATE `accounts` SET ";
	acc_str_strcat(query, sizeof(query), "Mail", PlayerMail[playerid]);
	acc_float_strcat(query, sizeof(query), "HP", PlayerInfo[playerid][pHealth]);
	acc_str_strcat(query, sizeof(query), "apassword", PlayerInfo[playerid][pApass]);
	acc_int_strcat(query, sizeof(query), "BuyWalent", PlayerInfo[playerid][pBuyWalent]);
	acc_int_strcat(query, sizeof(query), "TimeToLastWarn", PlayerInfo[playerid][pTimeToLastWarn]);
	acc_int_strcat(query, sizeof(query), "pSlotItem0", PlayerInfo[playerid][pSlotItem][0]);
	acc_int_strcat(query, sizeof(query), "pSlotItem1", PlayerInfo[playerid][pSlotItem][1]);
	acc_int_strcat(query, sizeof(query), "pSlotItem2", PlayerInfo[playerid][pSlotItem][2]);
	acc_int_strcat(query, sizeof(query), "pSlotItem3", PlayerInfo[playerid][pSlotItem][3]);
	acc_int_strcat(query, sizeof(query), "pSlotItem4", PlayerInfo[playerid][pSlotItem][4]);
	acc_int_strcat(query, sizeof(query), "pSlotItem5", PlayerInfo[playerid][pSlotItem][5]);
	acc_int_strcat(query, sizeof(query), "Redio", PlayerInfo[playerid][pRedio]);
	acc_int_strcat(query, sizeof(query), "pSTO", SlotValue[playerid][4]);
	acc_int_strcat(query, sizeof(query), "Hospital", PlayerInfo[playerid][pHospital]);
	acc_int_strcat(query, sizeof(query), "HavePassword", PlayerInfo[playerid][pHavePassword]);
	acc_int_strcat(query, sizeof(query), "Roulbalance", PlayerInfo[playerid][RoulBalance]);
	acc_int_strcat(query, sizeof(query), "PromoActive", PlayerInfo[playerid][PromoActive]);
	new usedpromo[128];
	format(usedpromo, sizeof usedpromo,"%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d",PlayerInfo[playerid][PromoUsed][0], PlayerInfo[playerid][PromoUsed][1], PlayerInfo[playerid][PromoUsed][2],
	PlayerInfo[playerid][PromoUsed][3], PlayerInfo[playerid][PromoUsed][4], PlayerInfo[playerid][PromoUsed][5], PlayerInfo[playerid][PromoUsed][6],
	PlayerInfo[playerid][PromoUsed][7], PlayerInfo[playerid][PromoUsed][8], PlayerInfo[playerid][PromoUsed][9], PlayerInfo[playerid][PromoUsed][10],
	PlayerInfo[playerid][PromoUsed][11], PlayerInfo[playerid][PromoUsed][12], PlayerInfo[playerid][PromoUsed][13], PlayerInfo[playerid][PromoUsed][14],
	PlayerInfo[playerid][PromoUsed][15], PlayerInfo[playerid][PromoUsed][16], PlayerInfo[playerid][PromoUsed][17], PlayerInfo[playerid][PromoUsed][18],
	PlayerInfo[playerid][PromoUsed][19]);
	acc_str_strcat(query, sizeof(query), "PromoUsed", usedpromo);
	format(usedpromo, sizeof usedpromo,"%d|%d|%d",PlayerInfo[playerid][pGun][0], PlayerInfo[playerid][pGun][1], PlayerInfo[playerid][pGun][2]);
	acc_str_strcat(query, sizeof(query), "pGun", usedpromo);
	acc_int_strcat(query, sizeof(query), "pCase", PlayerInfo[playerid][pCCase]);
	acc_int_strcat(query, sizeof(query), "Language", PlayerInfo[playerid][pLanguage]);
	new weaponstr[500];
	for(new x; x < 13; x ++)
	{
	    new gun, ammo; GetPlayerWeaponData(playerid, x, gun, ammo);
		format(weaponstr, sizeof(weaponstr), "%s%d %d ",weaponstr, (gun<PlayerInfo[playerid][pGuns][x])?gun:PlayerInfo[playerid][pGuns][x], (ammo<PlayerInfo[playerid][pAmmos][x])?ammo:PlayerInfo[playerid][pAmmos][x]);
	}
    acc_str_strcat(query, sizeof(query), "Weapons", weaponstr);
	strdel(query, strlen(query)-1, strlen(query));
	format(query,sizeof(query),"%s WHERE `ID`='%i'",query, PlayerInfo[playerid][pID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, query);
	else mysql_query(mysql, query, false);
	
	query = "UPDATE `accounts` SET ";
	for(new i = 25; i < 75; i++){
		static column_item[] = "Slot%d";
		new format_item[8];
		f(format_item, column_item, i);
		acc_int_strcat(query, sizeof(query), format_item, SlotValue[playerid][i]);
	}
	strdel(query, strlen(query)-1, strlen(query));
	format(query,sizeof(query),"%s WHERE `ID`='%i'",query, PlayerInfo[playerid][pID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, query);
	else mysql_query(mysql, query, false);
	
	query = "UPDATE `accounts` SET ";
	acc_int_strcat(query, sizeof(query), "Items", PlayerInfo[playerid][pItems]);
	acc_int_strcat(query, sizeof(query), "Item1", PlayerInfo[playerid][pItem][0]);
	acc_int_strcat(query, sizeof(query), "Item2", PlayerInfo[playerid][pItem][1]);
	acc_int_strcat(query, sizeof(query), "Item3", PlayerInfo[playerid][pItem][2]);
	acc_int_strcat(query, sizeof(query), "Item4", PlayerInfo[playerid][pItem][3]);
	acc_int_strcat(query, sizeof(query), "Item5", PlayerInfo[playerid][pItem][4]);
	format(usedpromo, sizeof usedpromo,"%d|%d|%d|%d",PlayerInfo[playerid][pTalents][0], PlayerInfo[playerid][pTalents][1], PlayerInfo[playerid][pTalents][2], PlayerInfo[playerid][pTalents][3]);
	acc_str_strcat(query, sizeof(query), "available_talents", usedpromo);
	format(usedpromo, sizeof usedpromo,"%d|%d|%d",TalentsInfo[playerid][0][0], TalentsInfo[playerid][0][1], TalentsInfo[playerid][0][2]);
	acc_str_strcat(query, sizeof(query), "medic_talents", usedpromo);
	format(usedpromo, sizeof usedpromo,"%d|%d|%d",TalentsInfo[playerid][1][0], TalentsInfo[playerid][1][1], TalentsInfo[playerid][1][2]);
	acc_str_strcat(query, sizeof(query), "driver_talents", usedpromo);
	format(usedpromo, sizeof usedpromo,"%d|%d|%d",TalentsInfo[playerid][2][0], TalentsInfo[playerid][2][1], TalentsInfo[playerid][2][2]);
	acc_str_strcat(query, sizeof(query), "sniper_talents", usedpromo);
	format(usedpromo, sizeof usedpromo,"%d|%d|%d",TalentsInfo[playerid][3][0], TalentsInfo[playerid][3][1], TalentsInfo[playerid][3][2]);
	acc_str_strcat(query, sizeof(query), "sport_talents", usedpromo);
	acc_int_strcat(query, sizeof(query), "gps_color", PlayerInfo[playerid][pGPS]);	
	strdel(query, strlen(query)-1, strlen(query));
	format(query,sizeof(query),"%s WHERE `ID`='%i'",query, PlayerInfo[playerid][pID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, query);
	else mysql_query(mysql, query, false);
	return true;
}
stock SetPlayerWeaponPrint(playerid, iWepID)
{
	RemovePlayerAttachedObject(playerid, 7);
	switch(iWepID) {

		//case 22: SetPlayerAttachedObject(playerid, 7, 346, 6, -0.004999, -0.003999, -0.006000, 0.000000, 0.000000, -1.800000, 1.007000, 1.337999, 1.069000);
		//case 23: SetPlayerAttachedObject(playerid, 7, 347, 6, -0.003999, -0.001999, -0.003999, 0.000000, 0.299999, -0.999999, 1.000000, 1.188000, 1.063000);
		case 24: 
			{
				if(PlayerInfo[playerid][pGun][0] == 0)return 1;
				else if(PlayerInfo[playerid][pGun][0] == 1)SetPlayerAttachedObject(playerid, 7, 348, 6, -0.006999, -0.004000, 0.002000, -1.600000, -0.200000, 0.400000, 1.019999, 1.146999, 1.027000, 0xFFD94141);
				else if(PlayerInfo[playerid][pGun][0] == 2)SetPlayerAttachedObject(playerid, 7, 348, 6, -0.006999, -0.004000, 0.002000, -1.600000, -0.200000, 0.400000, 1.019999, 1.146999, 1.027000, 0xFF000000);
			}
		case 25:
			{
				if(PlayerInfo[playerid][pGun][2] == 0)return 1;
				else if(PlayerInfo[playerid][pGun][2] == 1)SetPlayerAttachedObject(playerid, 7, 349, 6, 0.000000, -0.008999, -0.004000, 0.000000, 1.099999, 1.499999, 1.000000, 1.222000, 1.088000, 0xFFD94141);
				else if(PlayerInfo[playerid][pGun][2] == 2)SetPlayerAttachedObject(playerid, 7, 349, 6, 0.000000, -0.008999, -0.004000, 0.000000, 1.099999, 1.499999, 1.000000, 1.222000, 1.088000, 0xFF000000);
			}
		//case 27: SetPlayerAttachedObject(playerid, 7, 351, 6, 0.003000, -0.014000, -0.003000, 0.000000, 0.000000, 2.199999, 1.000000, 1.371000, 1.023000);
		//case 28: SetPlayerAttachedObject(playerid, 7, 352, 6, -0.002000, -0.008000, -0.001999, -0.300000, 0.000000, 1.199999, 1.019999, 1.245000, 1.043000);
		//case 29: SetPlayerAttachedObject(playerid, 7, 353, 6, 0.000000, -0.009000, -0.009000, 0.000000, 0.099999, 2.100000, 1.000000, 1.290001, 1.053000);
		case 30:
			{
				if(PlayerInfo[playerid][pGun][1] == 0)return 1;
				else if(PlayerInfo[playerid][pGun][1] == 1)SetPlayerAttachedObject(playerid, 7, 355, 6, 0.000000, -0.011000, 0.000000, 0.000000, 0.000000, 2.100000, 1.009000, 1.424000, 1.013000, 0xFFD94141);
				else if(PlayerInfo[playerid][pGun][1] == 2)SetPlayerAttachedObject(playerid, 7, 355, 6, 0.000000, -0.011000, 0.000000, 0.000000, 0.000000, 2.100000, 1.009000, 1.424000, 1.013000, 0xFF000000);
			}
		//case 31: SetPlayerAttachedObject(playerid, 7, 356, 6, -0.002000, -0.005999, 0.001000, 0.000000, 0.899999, 1.699999, 0.997999, 1.318999, 1.088001);
		//case 32: SetPlayerAttachedObject(playerid, 7, 372, 6, -0.003000, -0.009000, -0.001999, 0.000000, 0.400000, 0.800000, 1.015000, 1.232000, 1.055000);
		//case 33: SetPlayerAttachedObject(playerid, 7, 357, 6, 0.000000, -0.015000, -0.001999, 0.000000, 1.200000, 2.199999, 1.000000, 1.286001, 1.096001);
		//case 35: SetPlayerAttachedObject(playerid, 7, 359, 6, 0.001999, -0.007000, -0.009000, 0.000000, -0.100000, 0.000000, 0.989999, 1.213001, 1.084001);
		//case 36: SetPlayerAttachedObject(playerid, 7, 360, 6, 0.001000, -0.004999, -0.008000, 0.000000, 0.000000, 0.000000, 1.000000, 1.140000, 1.055000);
		//case 38: SetPlayerAttachedObject(playerid, 7, 362, 6, -0.041000, 0.001999, 0.012000, 0.000000, 0.999999, -0.599999, 1.085000, 1.189999, 1.134000);
		default: return 1;
	}
	return 1;
}
forward OnPlayerAmmoChange(playerid, newammo, oldammo);
public OnPlayerAmmoChange(playerid, newammo, oldammo)
{
	if(newammo < oldammo)
	{
		switch(GetPlayerWeapon(playerid))
		{
		case 22:
			{
				SetPVarInt(playerid, "SkillP",GetPVarInt(playerid, "SkillP") +1);
				if(GetPVarInt(playerid, "SkillP") >= AMMO_PISTOL && PlayerInfo[playerid][pPistol_Skill] < 100)
				{
					SetPVarInt(playerid, "SkillP",0);
					if(TalentsInfo[playerid][2][0] != 1){
						GameTextForPlayer(playerid, "~y~+1% to pistol skill", 2000, 3);
						PlayerInfo[playerid][pPistol_Skill]++;
					}else{
						GameTextForPlayer(playerid, "~y~+2% to pistol skill", 2000, 3);
						PlayerInfo[playerid][pPistol_Skill]+=2;
					}
				}
			}
		case 23:
			{
				SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
				if(GetPVarInt(playerid, "SkillSD")>= AMMO_SDPISTOL && PlayerInfo[playerid][pSDPistol_Skill] < 100)
				{
					SetPVarInt(playerid, "SkillSD",0);
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pSDPistol_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to sd pistol skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pSDPistol_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to sd pistol skill", 2000, 3);
					}
				}
			}
		case 24:
			{
				SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
				if(GetPVarInt(playerid, "SkillD") >= AMMO_DEAGLE && PlayerInfo[playerid][pEagle_Skill] < 100)
				{
					SetPVarInt(playerid, "SkillD",0);
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pEagle_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to deagle skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pEagle_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to deagle skill", 2000, 3);
					}
				}
			}
		case 25:
			{
				SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
				if(GetPVarInt(playerid, "SkillShot") >= AMMO_SHOTGUN && PlayerInfo[playerid][pShotGun_Skill] < 100)
				{
					SetPVarInt(playerid, "SkillShot",0);
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pShotGun_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to shotgun skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pShotGun_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to shotgun skill", 2000, 3);
					}
				}
			}
		case 28:
			{
				SetPVarInt(playerid, "SkillUZI",GetPVarInt(playerid, "SkillUZI") +1);
				if(GetPVarInt(playerid, "SkillUZI") >= AMMO_UZI && PlayerInfo[playerid][pUZI_Skill] < 100)
				{
					SetPVarInt(playerid, "SkillUZI",0);
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pUZI_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to UZI skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pUZI_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to UZI skill", 2000, 3);
					}
				}
			}
		case 29:
			{
				SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
				if(GetPVarInt(playerid, "SkillMP5") >= AMMO_MP5 && PlayerInfo[playerid][pMP5_Skill] < 100)
				{
					SetPVarInt(playerid, "SkillMP5",0);
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pMP5_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to MP5 skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pMP5_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to MP5 skill", 2000, 3);
					}
				}
			}
		case 30:
			{
				SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
				if(GetPVarInt(playerid, "SkillAk47") >= AMMO_AK47 && PlayerInfo[playerid][pAK47_Skill] < 100)
				{
					SetPVarInt(playerid, "SkillAk47",0);
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pAK47_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to ak-47 skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pAK47_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to ak-47 skill", 2000, 3);
					}
				}
			}
		case 31:
			{
				SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
				if(GetPVarInt(playerid, "SkillM4") >= AMMO_M4A1 && PlayerInfo[playerid][pM4_Skill] < 100)
				{
					SetPVarInt(playerid, "SkillM4",0);
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pM4_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to m4a1 skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pM4_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to m4a1 skill", 2000, 3);
					}
				}
			}
		case 33, 34:
			{
				SetPVarInt(playerid, "SkillRifle",GetPVarInt(playerid, "SkillRifle") +1);
				if(GetPVarInt(playerid, "SkillRifle") >= AMMO_RIFLE && PlayerInfo[playerid][pSniper_Skill] < 100)
				{
					SetPVarInt(playerid, "SkillRifle",0);
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pSniper_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to Sniper Rifle", 2000, 3);
					}else{
						PlayerInfo[playerid][pSniper_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to Sniper Rifle", 2000, 3);
					}
				}
			}
		}
		SetPlayerSkills(playerid);
	}
	if(PlayerInfo[playerid][pPistol_Skill] + PlayerInfo[playerid][pSDPistol_Skill] +
		PlayerInfo[playerid][pEagle_Skill] + PlayerInfo[playerid][pShotGun_Skill] +
		PlayerInfo[playerid][pUZI_Skill] + PlayerInfo[playerid][pMP5_Skill] + 
		PlayerInfo[playerid][pAK47_Skill] + PlayerInfo[playerid][pM4_Skill] + 
		PlayerInfo[playerid][pSniper_Skill] >= 8000 && QuestProgress[playerid][11] < 10000 && AcceptQuest[playerid][11] == 1){
		QuestProgress[playerid][11] = 8000;
		PlayerInfo[playerid][pTalents][2]++;
		SendInfo(playerid, "У Вас появились новые очки талантов");
		QuestProgress[playerid][11] = 10000;
	}
	return 1;
}
stock ShowTirDialog(playerid)
{
    new str[300], string[70];
    for(new g; g < sizeof(TGunInfo);g ++)
    {
		format(string,sizeof(string),"{7396FB}[%i]{FFFFFF} %s {56A85E}[$%d]\n", g+1, TGunInfo[g][tgGunname], TGunInfo[g][tgCost]);
		strcat(str, string);
	}
	ShowPlayerDialogEx(playerid, TIR_DIALOG+1, 2, "Выберите оружие", str, "Выбор", "Отмена");
	return true;
}
stock ShowTirTutDialog(playerid, tirid)
{
	new string[500];
	strcat(string, "\n\n\\c{FFFFFF}В тире вы можете практиковать свои навыки стрельбы.\n");
	strcat(string, "\\cДля стрельбы вам будет предложено несколько видов оружия.\n");
	strcat(string, "\\cВыбрав одно из них, нужно будет стрелять по мишеням.\n");
	strcat(string, "Успешные пападания будут отображены в правом нижнем углу.\n");
	strcat(string, "\\cДля усложнения попадания мишень будет двигаться.\n\n");
	strcat(string, "{FFCB8C}\\cС каждым разом скорость будет увеличиваться!\n\n");
	TirPlayer[playerid] = tirid;
	Dialog_Open(playerid, TIR_DIALOG, 0, "Вступление", string, "Далее", "Отмена");
	return true;
}
stock GetTirAmmo(weaponid)
{
	new ammo;
	switch(weaponid)
	{
	    case 22: ammo = 250;
	    case 23: ammo = 200;
	    case 24: ammo = 100;
	    case 25: ammo = 80;
	    case 29: ammo = 400;
	    case 30: ammo = 300;
	    case 31: ammo = 300;
	    case 34: ammo = 50;
	}
	return ammo;
}
forward MoveTarget(playerid);
public MoveTarget(playerid)
{
    gunmute[playerid] = gettime()+5;
	if(PlayerTir[playerid] != -1)
	{
	    new tir = PlayerTir[playerid];
	    StartCount[playerid] --;
	    if(StartCount[playerid] > 0)
	    {
	        if(StartCount[playerid] == 1)
	        {
	            new ammo = GetTirAmmo(TirGun[playerid]);
	            PlayerInfo[playerid][oInTir]=1;
	            _SetGun(playerid, TirGun[playerid], ammo);
				TirAmmo[playerid] = ammo;
	        }
		    GameTextForPlayer(playerid,IntToStr(StartCount[playerid]),1500,4);
			PlayerPlaySound(playerid, 1056, 0, 0, 0);
		    if(TargetTimer[tir] != -1) KillTimer(TargetTimer[tir]);
		    TargetTimer[tir] = SetTimerEx("MoveTarget", 1500, false, "i", playerid);
	    }
	    else
	    {
	        StartCount[playerid] = 4;
	        PlayerPlaySound(playerid, 1057, 0, 0, 0);
	        GameTextForPlayer(playerid,"~g~Game started",1000,4);
		    SetPlayerArmedWeapon(playerid, TirGun[playerid]);
		    TirAmmo[playerid] = GetPlayerAmmo(playerid);
		    TargetGo[tir] = true;
		    SetDynamicObjectRot(Target_Object[tir], 0.0, TirInfo[tir][tirTPos][4], TirInfo[tir][tirTPos][5]);
		    MoveDynamicObject(Target_Object[tir], TirInfo[tir][tirTPos][0], TirInfo[tir][tirTPos][1]-15.0, TirInfo[tir][tirTPos][2], TargetMoveSpeed[playerid]);
		    if(TargetTimer[tir] != -1) KillTimer(TargetTimer[tir]);
			TargetTimer[tir] = SetTimerEx("DestroyTarget", TimerTime[playerid], false, "iid", playerid, tir, 0);
			TextDrawHideForPlayer(playerid, TirDraw[0]);
			TextDrawHideForPlayer(playerid, TirDraw[1]);
			TextDrawHideForPlayer(playerid, TirDraw[2]);
			TextDrawHideForPlayer(playerid, TirDraw[3]);
			TextDrawHideForPlayer(playerid, TirDraw[4]);
			TextDrawHideForPlayer(playerid, TirDraw[5]);
		}
	}
	return true;
}
forward DestroyTarget(playerid, tirid, succes);
public DestroyTarget(playerid, tirid, succes)
{
    gunmute[playerid] = gettime()+5;
	if(succes)
	{
		TargetCount[playerid]++;
		TargetMoveSpeed[playerid] += 0.2;
		TimerTime[playerid] -= 1000;
		switch(GetPlayerWeapon(playerid))
		{
		case 22:
			{
				if(PlayerInfo[playerid][pPistol_Skill] < 100)
				{
					if(TalentsInfo[playerid][2][0] != 1){
						GameTextForPlayer(playerid, "~y~+1% to pistol skill", 2000, 3);
						PlayerInfo[playerid][pPistol_Skill]++;
					}else{
						GameTextForPlayer(playerid, "~y~+2% to pistol skill", 2000, 3);
						PlayerInfo[playerid][pPistol_Skill]+=2;
					}
				}
			}
		case 23:
			{
				if(PlayerInfo[playerid][pSDPistol_Skill] < 100)
				{
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pSDPistol_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to sd pistol skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pSDPistol_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to sd pistol skill", 2000, 3);
					}
				}
			}
		case 24:
			{
				if(PlayerInfo[playerid][pEagle_Skill] < 100)
				{
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pEagle_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to deagle skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pEagle_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to deagle skill", 2000, 3);
					}
				}
			}
		case 25:
			{
				if(PlayerInfo[playerid][pShotGun_Skill] < 100)
				{
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pShotGun_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to shotgun skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pShotGun_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to shotgun skill", 2000, 3);
					}
				}
			}
		case 28:
			{
				if(PlayerInfo[playerid][pUZI_Skill] < 100)
				{
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pUZI_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to UZI skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pUZI_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to UZI skill", 2000, 3);
					}
				}
			}
		case 29:
			{
				if(PlayerInfo[playerid][pMP5_Skill] < 100)
				{
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pMP5_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to MP5 skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pMP5_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to MP5 skill", 2000, 3);
					}
				}
			}
		case 30:
			{
				if(PlayerInfo[playerid][pAK47_Skill] < 100)
				{
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pAK47_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to ak-47 skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pAK47_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to ak-47 skill", 2000, 3);
					}
				}
			}
		case 31:
			{
				if(PlayerInfo[playerid][pM4_Skill] < 100)
				{
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pM4_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to m4a1 skill", 2000, 3);
					}else{
						PlayerInfo[playerid][pM4_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to m4a1 skill", 2000, 3);
					}
				}
			}
		case 33, 34:
			{
				if(PlayerInfo[playerid][pSniper_Skill] < 100)
				{
					if(TalentsInfo[playerid][2][0] != 1){
						PlayerInfo[playerid][pSniper_Skill]++;
						GameTextForPlayer(playerid, "~y~+1% to Sniper Rifle", 2000, 3);
					}else{
						PlayerInfo[playerid][pSniper_Skill]+=2;
						GameTextForPlayer(playerid, "~y~+2% to Sniper Rifle", 2000, 3);
					}
				}
			}
		}
		SetPlayerSkills(playerid);
	}
	else GameTextForPlayer(playerid,"~r~Failed",3000,5);
	SetPlayerArmedWeapon(playerid, 0);
	ResetPlayerWeapons(playerid);
	TargetShots[playerid] = 0;
	StartCount[playerid] = 4;
	TargetGo[tirid] = false;
	SetPlayerArmedWeapon(playerid, 0);
	if(TargetTimer[tirid] != -1) KillTimer(TargetTimer[tirid]);
	if(TargetCount[playerid] <= COUNT_TARGETS) TargetTimer[tirid] = SetTimerEx("MoveTarget", 2000, false, "i", playerid);
	else CheckTir(playerid);
    DestroyDynamicObject(Target_Object[tirid]);
	Target_Object[tirid] = CreateDynamicObject(TARGET_MODEL, TirInfo[tirid][tirTPos][0], TirInfo[tirid][tirTPos][1], TirInfo[tirid][tirTPos][2], TirInfo[tirid][tirTPos][3], TirInfo[tirid][tirTPos][4], TirInfo[tirid][tirTPos][5]);
	return true;
}
stock CheckTir(playerid)
{
	new tir = PlayerTir[playerid];
	if(tir != -1)
	{
	    if(TirBusy[tir])
	    {
		    TirBusy[tir] = false;
		    TargetTimer[tir] = -1;
		    TargetGo[tir] = false;
		    PlayerInfo[playerid][oInTir]=0;
		    if(TargetTimer[tir] != -1) KillTimer(TargetTimer[tir]);
		    DestroyDynamicObject(Target_Object[tir]);
		    Target_Object[tir] = CreateDynamicObject(TARGET_MODEL, TirInfo[tir][tirTPos][0], TirInfo[tir][tirTPos][1], TirInfo[tir][tirTPos][2], TirInfo[tir][tirTPos][3], TirInfo[tir][tirTPos][4], TirInfo[tir][tirTPos][5]);
		    UpdateDynamic3DTextLabelText(TirText[tir],COLOR_GOLD,"ТИР\n\n{FFCB8C}Встаньте на чекпоинт для выбора режима");
	    }
	    PlayerTir[playerid] = -1;
		TargetCount[playerid] = 0;
		TargetShots[playerid] = 0;
		TargetMoveSpeed[playerid] = 1.0;
		TimerTime[playerid] = 10000;
		StartCount[playerid] = 4;
		TextDrawHideForPlayer(playerid, TirDraw[0]);
		TextDrawHideForPlayer(playerid, TirDraw[1]);
		TextDrawHideForPlayer(playerid, TirDraw[2]);
		TextDrawHideForPlayer(playerid, TirDraw[3]);
		TextDrawHideForPlayer(playerid, TirDraw[4]);
		TextDrawHideForPlayer(playerid, TirDraw[5]);
        TextDrawHideForPlayer(playerid, TirBGDraw);
		ResetPlayerWeapons(playerid);
	}
	return true;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	new string[100];
	new Float:_tmp_z;
	MapAndreas_FindZ_For2DCoord(fX, fY, _tmp_z);
	if(Taxi_GO[playerid] == 1)
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(IsATaxi(carid))
	    {
	     	new driverid = GetVehicleSeat(carid, 0);
	     	if(PlayerInfo[driverid][pJob] == JOB_TAXI)
			{
				if(TaxiTarif[driverid] > 0)
				{
				    EnableGPSForPlayer(driverid,fX, fY, _tmp_z+0.35);
					format(string, sizeof(string), "%s выбрал(а) пункт. Он отмечен на карте", PlayerName[playerid]);
					SendInfo(driverid, string);
					SendInfo(playerid,"Вы выбрали пункт назначения");
					Taxi_GO[playerid] = 2;
					return true;
				}
			}
		}
	}
 	if(ADuty[playerid]==228)
 	{
  		if (GetPlayerState(playerid) == 2)
  		{
	   		new tmpcar = GetPlayerVehicleID(playerid);
	   		J_SetVehiclePos(tmpcar, fX, fY, _tmp_z+1.35);
  		}
  		else J_SetPlayerPos(playerid, fX, fY, _tmp_z+0.35);
  		SetPlayerVirtualWorld(playerid,0);
  		SetPlayerInterior(playerid,0);
 	}
	return true;
}
stock OnPlayerLogin(playerid)
{
    if(IsPlayerLogged[playerid])return J_Kick(playerid);
    new string[300];
    AntiCheatsOFF(playerid, 2);
    format(string, sizeof(string), "SELECT * FROM `accounts` WHERE `ID` = '%i' LIMIT 1", PlayerInfo[playerid][pID]);
    mysql_pquery(mysql, string, "OnPlayerLoginMysql", "d", playerid);
    return 1;
}
forward OnPlayerLoginMysql(playerid);
public OnPlayerLoginMysql(playerid)
{
    new string[512], style, name[60], pass[70], usedpromo[128];//, NewVirMoney, qwetemp[3000];
	AntiCheatsOFF(playerid, 2);
	SetPVarInt(playerid, "PauseUpdate", 3);
    PlayerInfo[playerid][pID] = cache_get_field_content_int(0, "ID", mysql); //ID 1
    cache_get_row(0, 1, name, mysql); //NickName2
    cache_get_row(0, 2, pass, mysql); //Password3
    cache_get_row(0, 3, PlayerRegIP[playerid], mysql,16); //RegIP4
    cache_get_row(0, 4, PlayerIp[playerid], mysql,16); //OldIP5
    cache_get_row(0, 5, PlayerCheckIP1[playerid], mysql,16); //CheckIP6
    cache_get_row(0, 6, PlayerCheckIP2[playerid],  mysql,16);//CheckIP7
    cache_get_row(0, 7, PlayerReferal[playerid],  mysql,24);//Referal8
    cache_get_row(0, 8, PlayerMail[playerid], mysql,50); //Mail9
    cache_get_row(0, 9, PlayerTelephone[playerid], mysql,20); //Telephone0
	cache_get_field_content(0, "apassword", PlayerInfo[playerid][pApass], mysql,30);
	cache_get_row(0, 128, PlayerInfo[playerid][pLastIP],mysql, 25);
	cache_get_row(0, 129, PlayerInfo[playerid][pLastLogin],mysql, 45);
	cache_get_row(0, 164, PlayerInfo[playerid][DATE], 12);
    PlayerInfo[playerid][pCase] = cache_get_field_content_int(0, "SCase", mysql); //SCase
	PlayerInfo[playerid][pChat] = cache_get_field_content_int(0, "pChat", mysql);
	PlayerInfo[playerid][pLoading] = cache_get_field_content_int(0, "pLoading", mysql);
    PlayerInfo[playerid][pExp] = cache_get_field_content_int(0, "Exp", mysql); //Exp3
    PlayerInfo[playerid][pPlayHours] = cache_get_field_content_int(0, "PlayHours", mysql); //PlayHours4
    PlayerInfo[playerid][pSex] = cache_get_field_content_int(0, "Sex", mysql); //Sex5
    //PlayerInfo[playerid][pAge] = cache_get_field_content_int(0, "Age", mysql); //Age6
    PlayerInfo[playerid][pRace] = cache_get_field_content_int(0, "Race", mysql); //Rce7
    PlayerInfo[playerid][pAdmin] = cache_get_field_content_int(0, "Admin", mysql); //Admin8
	PlayerInfo[playerid][pHelper] = cache_get_field_content_int(0, "Lotto", mysql); //Admin8
    SlotValue[playerid][0] = cache_get_field_content_int(0, "Money", mysql); //Money
    PlayerInfo[playerid][pBank] = cache_get_field_content_int(0, "Bank", mysql); //Bank
    PlayerInfo[playerid][pWanted] = cache_get_field_content_int(0, "Wanted", mysql); //Wanted
    PlayerInfo[playerid][pVIP] = cache_get_field_content_int(0, "VIP", mysql); //VIP
	PlayerInfo[playerid][pVipTime] = cache_get_field_content_int(0, "VipTime", mysql);
    PlayerInfo[playerid][pLeader] = cache_get_field_content_int(0, "Leader", mysql); //Leader
    PlayerInfo[playerid][pMember] = cache_get_field_content_int(0, "Member", mysql); //Member
    PlayerInfo[playerid][pRank] = cache_get_field_content_int(0, "Rank", mysql); //Rank
    PlayerInfo[playerid][pGunLic] = cache_get_field_content_int(0, "GunLic", mysql); //GunLic
    PlayerInfo[playerid][pBoatLic] = cache_get_field_content_int(0, "BoatLic", mysql); //BoatLic
    PlayerInfo[playerid][pFishLic] = cache_get_field_content_int(0, "FishLic", mysql); //FishLic
    PlayerInfo[playerid][pFlyLic] = cache_get_field_content_int(0, "FlyLic", mysql); //FlyLic
    PlayerInfo[playerid][pCarLic] = cache_get_field_content_int(0, "CarLic", mysql); //CarLic
    PlayerInfo[playerid][pBikeLic] = cache_get_field_content_int(0, "BikeLic", mysql); //BikeLic
    PlayerInfo[playerid][pD_Packets] = cache_get_field_content_int(0, "D_Packets", mysql); //D_Packets
    PlayerInfo[playerid][pWarns] = cache_get_field_content_int(0, "Warns", mysql); //Warns
	//PlayerInfo[playerid][pPayDay] = cache_get_field_content_int(0, "PayDay", mysql); //PayDay
    SlotValue[playerid][1] = cache_get_field_content_int(0, "HouseKey", mysql); //HouseKey
    SlotValue[playerid][3] = cache_get_field_content_int(0, "BizKey", mysql); //BizKey
    PlayerInfo[playerid][pFWarns] = cache_get_field_content_int(0, "FWarns", mysql); //FWarns
    PlayerInfo[playerid][pSkin] = cache_get_field_content_int(0, "Skin", mysql); //Skin
    SlotValue[playerid][19] = cache_get_field_content_int(0, "TelNum", mysql); //TelNum
    PlayerInfo[playerid][pPhone] = cache_get_field_content_int(0, "Phone", mysql); //Phone
    SlotValue[playerid][11] = cache_get_field_content_int(0, "Mats", mysql); //Mats
    SlotValue[playerid][14] = cache_get_field_content_int(0, "Drugs", mysql); //Drugs
    PlayerInfo[playerid][pJob] = cache_get_field_content_int(0, "Job", mysql); //Job
    PlayerInfo[playerid][pMuteTime] = cache_get_field_content_int(0, "MuteTime", mysql); //MuteTime
    PlayerInfo[playerid][pFMuteTime] = cache_get_field_content_int(0, "FMuteTime", mysql); //FMuteTime
    PlayerInfo[playerid][pJailTime] = cache_get_field_content_int(0, "JailTime", mysql); //JailTime
	PlayerInfo[playerid][pLanguage] = cache_get_field_content_int(0, "Language", mysql);
    PlayerInfo[playerid][pBailPrice] = cache_get_field_content_int(0, "BailPrice", mysql); //BailPrice
    PlayerInfo[playerid][pKungfu] = cache_get_field_content_int(0, "KungfuStyle", mysql); //KungfuStyle
    PlayerInfo[playerid][pKneehead] = cache_get_field_content_int(0, "KneeheadStyle", mysql); //KneeheadStyle
    PlayerInfo[playerid][pBoxing] = cache_get_field_content_int(0, "BoxingStyle", mysql); //BoxingStyle
    PlayerInfo[playerid][pElbow] = cache_get_field_content_int(0, "ElbowStyle", mysql); //ElbowStyle
    style = cache_get_field_content_int(0, "Style", mysql); //Style
    PlayerInfo[playerid][pSpawned] = cache_get_field_content_int(0, "Spawned", mysql); //Spawned
    NeSdal[playerid] = cache_get_field_content_int(0, "NeSdal", mysql); //NeSdal
    PlayerInfo[playerid][pDCTime] = cache_get_field_content_int(0, "DropCarTime", mysql); //DropCarTime
    PlayerDrunkLevel[playerid] = cache_get_field_content_int(0, "Drunk", mysql); //Drunk
    PlayerInfo[playerid][pSpining] = cache_get_field_content_int(0, "Spining", mysql); //Spining
    PlayerInfo[playerid][pWorms] = cache_get_field_content_int(0, "Worms", mysql); //Worms
    SlotValue[playerid][13] = cache_get_field_content_int(0, "Mask", mysql); //Mask
	PlayerInfo[playerid][pOtvertka] = cache_get_field_content_int(0, "Otvertka", mysql); //Otvertka
	PlayerInfo[playerid][pGlue] = cache_get_field_content_int(0, "Glue", mysql); //Glue
	PlayerInfo[playerid][pJB] = cache_get_field_content_int(0, "Jailbreak", mysql); //Jailbreak
	SlotValue[playerid][12] = cache_get_field_content_int(0, "Roliki", mysql); //Roliki
    SlotValue[playerid][20] = cache_get_field_content_int(0, "Fuel", mysql); //Fuel
    PlayerInfo[playerid][pPhoneBook] = cache_get_field_content_int(0, "PhoneBook", mysql); //PhoneBook
	PlayerInfo[playerid][pItems] = cache_get_field_content_int(0, "Items", mysql);
    PlayerInfo[playerid][pPistol_Skill] = cache_get_field_content_int(0, "Pistol_Skill", mysql); //Pistol_Skill
    PlayerInfo[playerid][pSDPistol_Skill] = cache_get_field_content_int(0, "SDPistol_Skill", mysql); //SDPistol_Skill
    PlayerInfo[playerid][pEagle_Skill] = cache_get_field_content_int(0, "Eagle_Skill", mysql); //Eagle_Skill
    PlayerInfo[playerid][pShotGun_Skill] = cache_get_field_content_int(0, "ShotGun_Skill", mysql); //ShotGun_Skill
    PlayerInfo[playerid][pUZI_Skill] = cache_get_field_content_int(0, "UZI_Skill", mysql); //UZI_Skill
    PlayerInfo[playerid][pMP5_Skill] = cache_get_field_content_int(0, "MP5_Skill", mysql); //MP5_Skill
    PlayerInfo[playerid][pAK47_Skill] = cache_get_field_content_int(0, "AK47_Skill", mysql); //AK47_Skill
    PlayerInfo[playerid][pM4_Skill] = cache_get_field_content_int(0, "M4_Skill", mysql); //M4_Skill
    PlayerInfo[playerid][pSniper_Skill] = cache_get_field_content_int(0, "Sniper_Skill", mysql); //Sniper_Skill
    PlayerInfo[playerid][pGlasses] = cache_get_field_content_int(0, "Glasses", mysql); //Glasses
    PlayerInfo[playerid][pBandans] = cache_get_field_content_int(0, "Bandans", mysql); //Bandans
    PlayerInfo[playerid][pHats] = cache_get_field_content_int(0, "Hats", mysql); //Hats
	PlayerInfo[playerid][pFracSkin] = cache_get_field_content_int(0, "Fracskin", mysql); //Fracskin
    PlayerInfo[playerid][pSyringe] = cache_get_field_content_int(0, "Syringe", mysql); //Syringe
    SlotValue[playerid][18] = cache_get_field_content_int(0, "Poison", mysql); //Poison
    SlotValue[playerid][15] = cache_get_field_content_int(0, "Smokes", mysql); //Smokes
    SlotValue[playerid][16] = cache_get_field_content_int(0, "Lighter", mysql); //Lighter
    SlotValue[playerid][2] = cache_get_field_content_int(0, "From", mysql); //From
    PlayerInfo[playerid][pBL] = cache_get_field_content_int(0, "BlackList", mysql); //BlackList
    PlayerInfo[playerid][pOOC] = cache_get_field_content_int(0, "OOC", mysql); //OOC
    PlayerInfo[playerid][pZKP] = cache_get_field_content_int(0, "ZKP", mysql); //ZKP
    PlayerInfo[playerid][pHeal] = cache_get_field_content_int(0, "Heal", mysql); //Heal
    Fullness[playerid] = cache_get_field_content_int(0, "Fullness", mysql); //Fullness
    PlayerInfo[playerid][pSprunks] = cache_get_field_content_int(0, "Sprunks", mysql); //Sprunks
	PlayerInfo[playerid][pBirja][0] = cache_get_field_content_int(0, "Aurum", mysql); //Pack
    PlayerInfo[playerid][pBirja][1] = cache_get_field_content_int(0, "Diamonds", mysql); //Sprunks
    PlayerInfo[playerid][pCheepses] = cache_get_field_content_int(0, "Cheeps", mysql); //Cheeps
    PlayerInfo[playerid][pRadio] = cache_get_field_content_int(0, "Radio", mysql); //Radio
    TruckReset[playerid] = cache_get_field_content_int(0, "TruckReset", mysql); //TruckReset
    PlayerInfo[playerid][pSnow] = cache_get_field_content_int(0, "Snow", mysql); //Snow
    PlayerInfo[playerid][pVirMoney] = cache_get_field_content_int(0, "VirMoney", mysql); //VirMoney
    PlayerInfo[playerid][pOldRepl] = cache_get_field_content_int(0, "OldRepl", mysql); //OldRepl
    PlayerInfo[playerid][pAllRepl] = cache_get_field_content_int(0, "AllRepl", mysql); //AllRepl
    PlayerInfo[playerid][pGetBonus] = cache_get_field_content_int(0, "GetBonus", mysql); //GetBonus
    PlayerInfo[playerid][pKey] = cache_get_field_content_int(0, "Key", mysql); //Key
    PlayerInfo[playerid][pKeyCheck] = cache_get_field_content_int(0, "KeyCheck", mysql); //KeyCheck
    //PlayerInfo[playerid][pStatsStyle] = cache_get_field_content_int(0, "StatsStyle", mysql); //StatsStyle
    PlayerInfo[playerid][pCredit] = cache_get_field_content_int(0, "Credit", mysql); //Credit
    //PlayerInfo[playerid][pEnterKey] = cache_get_field_content_int(0, "EnterKey", mysql); //EnterKey
    PlayerInfo[playerid][pView] = cache_get_field_content_int(0, "View", mysql);  //View
    PlayerInfo[playerid][pGold] = cache_get_field_content_int(0, "Gold", mysql); //Gold
    PlayerInfo[playerid][pRepBan] = cache_get_field_content_int(0, "RepBan", mysql);
    PlayerInfo[playerid][pArmours] = cache_get_field_content_int(0, "AskBan", mysql);
    PlayerInfo[playerid][pClip] = cache_get_field_content_int(0, "Clip", mysql);
    ResetGunsUP[playerid] = cache_get_field_content_int(0, "GunsUP", mysql);
    ResetBuyGuns[playerid] = cache_get_field_content_int(0, "BuyGuns", mysql);
	PlayerInfo[playerid][pCredit_KD] = cache_get_field_content_int(0, "credit_kd", mysql);
	PlayerInfo[playerid][pCredit_Default] = cache_get_field_content_int(0, "credit_start", mysql);
    PlayerInfo[playerid][pRPTest] = cache_get_field_content_int(0, "RPTest", mysql);
    PlayerInfo[playerid][pEnergy] = cache_get_field_content_int(0, "Energy", mysql);
    SlotValue[playerid][17] = cache_get_field_content_int(0, "RepPack", mysql);
	new weaponsstr[500];
	PlayerInfo[playerid][pF_Skill] = cache_get_field_content_int(0, "F_Skill", mysql);
    PlayerInfo[playerid][pP_Skill] = cache_get_field_content_int(0, "P_Skill", mysql);
    PlayerInfo[playerid][pZ_Skill] = cache_get_field_content_int(0, "Z_Skill", mysql);
	PlayerInfo[playerid][pZa_Skill] = cache_get_field_content_int(0, "Za_Skill", mysql);
	PlayerInfo[playerid][pIn_Skill] = cache_get_field_content_int(0, "In_Skill", mysql);
	PlayerInfo[playerid][pMy_Skill] = cache_get_field_content_int(0, "My_Skill", mysql);
	PlayerInfo[playerid][pBy_Skill] = cache_get_field_content_int(0, "By_Skill", mysql);
	PlayerInfo[playerid][pItem][0] = cache_get_field_content_int(0, "Item1", mysql);
    PlayerInfo[playerid][pItem][1] = cache_get_field_content_int(0, "Item2", mysql);
    PlayerInfo[playerid][pItem][2] = cache_get_field_content_int(0, "Item3", mysql);
	PlayerInfo[playerid][pItem][3] = cache_get_field_content_int(0, "Item4", mysql);
	PlayerInfo[playerid][pItem][4] = cache_get_field_content_int(0, "Item5", mysql);
	PlayerInfo[playerid][Miner_Skill] = cache_get_field_content_int(0, "Miner_skill", mysql);
	PlayerInfo[playerid][Taxi_Skill] = cache_get_field_content_int(0, "Taxi_skill", mysql);
	PlayerInfo[playerid][pGPS] = cache_get_field_content_int(0, "gps_color", mysql);
	cache_get_row(0, 124, PlayerInfo[playerid][pMerrit],mysql, 25);
	PlayerInfo[playerid][pHealth] = cache_get_field_content_float(0, "HP", mysql);
	cache_get_field_content(0, "Weapons", weaponsstr,mysql, 500);
	//PlayerInfo[playerid][pWalentin] = cache_get_field_content_int(0, "Walentin", mysql);
	PlayerInfo[playerid][pBuyWalent] = cache_get_field_content_int(0, "BuyWalent", mysql);
	PlayerInfo[playerid][pTimeToLastWarn] = cache_get_field_content_int(0, "TimeToLastWarn", mysql);
	PlayerInfo[playerid][pSlotItem][0] = cache_get_field_content_int(0, "pSlotItem0", mysql);
	PlayerInfo[playerid][pSlotItem][1] = cache_get_field_content_int(0, "pSlotItem1", mysql);
	PlayerInfo[playerid][pSlotItem][2] = cache_get_field_content_int(0, "pSlotItem2", mysql);
	PlayerInfo[playerid][pSlotItem][3] = cache_get_field_content_int(0, "pSlotItem3", mysql);
	PlayerInfo[playerid][pSlotItem][4] = cache_get_field_content_int(0, "pSlotItem4", mysql);
	PlayerInfo[playerid][pSlotItem][5] = cache_get_field_content_int(0, "pSlotItem5", mysql);
	PlayerInfo[playerid][pRedio] = cache_get_field_content_int(0, "Redio", mysql);
	PlayerInfo[playerid][pHospital] = cache_get_field_content_int(0, "Hospital", mysql);
	PlayerInfo[playerid][pHavePassword] = cache_get_field_content_int(0, "HavePassword", mysql);
	PlayerInfo[playerid][Donate_Score] = cache_get_field_content_int(0, "dscore", mysql);
	PlayerInfo[playerid][FamilyID] = cache_get_field_content_int(0, "FamilyID", mysql);
    PlayerInfo[playerid][FamilyMute] = cache_get_field_content_int(0, "FamilyMute", mysql);
	PlayerInfo[playerid][RoulBalance] = cache_get_field_content_int(0, "Roulbalance", mysql);
	PlayerInfo[playerid][PromoActive] = cache_get_field_content_int(0, "PromoActive", mysql);
	SlotValue[playerid][4] = cache_get_field_content_int(0, "pSTO", mysql);
	_ResetGun(playerid);
	cache_get_field_content(0, "PromoUsed", usedpromo, mysql,128);
	sscanf(usedpromo, "p<|>dddddddddddddddddddd", PlayerInfo[playerid][PromoUsed][0], PlayerInfo[playerid][PromoUsed][1], PlayerInfo[playerid][PromoUsed][2],
	PlayerInfo[playerid][PromoUsed][3], PlayerInfo[playerid][PromoUsed][4], PlayerInfo[playerid][PromoUsed][5], PlayerInfo[playerid][PromoUsed][6],
	PlayerInfo[playerid][PromoUsed][7], PlayerInfo[playerid][PromoUsed][8], PlayerInfo[playerid][PromoUsed][9], PlayerInfo[playerid][PromoUsed][10],
	PlayerInfo[playerid][PromoUsed][11], PlayerInfo[playerid][PromoUsed][12], PlayerInfo[playerid][PromoUsed][13], PlayerInfo[playerid][PromoUsed][14],
	PlayerInfo[playerid][PromoUsed][15], PlayerInfo[playerid][PromoUsed][16], PlayerInfo[playerid][PromoUsed][17], PlayerInfo[playerid][PromoUsed][18],
	PlayerInfo[playerid][PromoUsed][19]);
	cache_get_field_content(0, "available_talents", usedpromo, mysql,128);
	sscanf(usedpromo, "p<|>dddd", PlayerInfo[playerid][pTalents][0], PlayerInfo[playerid][pTalents][1], PlayerInfo[playerid][pTalents][2], PlayerInfo[playerid][pTalents][3]);
	cache_get_field_content(0, "medic_talents", usedpromo, mysql,128);
	sscanf(usedpromo, "p<|>ddd", TalentsInfo[playerid][0][0], TalentsInfo[playerid][0][1], TalentsInfo[playerid][0][2]);
	cache_get_field_content(0, "driver_talents", usedpromo, mysql,128);
	sscanf(usedpromo, "p<|>ddd", TalentsInfo[playerid][1][0], TalentsInfo[playerid][1][1], TalentsInfo[playerid][1][2]);
	cache_get_field_content(0, "sniper_talents", usedpromo, mysql,128);
	sscanf(usedpromo, "p<|>ddd", TalentsInfo[playerid][2][0], TalentsInfo[playerid][2][1], TalentsInfo[playerid][2][2]);
	cache_get_field_content(0, "sport_talents", usedpromo, mysql,128);
	sscanf(usedpromo, "p<|>ddd", TalentsInfo[playerid][3][0], TalentsInfo[playerid][3][1], TalentsInfo[playerid][3][2]);
	for(new i = 25; i < 75; i++){
		static column_item[] = "Slot%d";
		new format_item[8];
		f(format_item, column_item, i);
		SlotValue[playerid][i] = cache_get_field_content_int(0, format_item, mysql);
	}
	cache_get_field_content(0, "pGun", usedpromo, mysql,128);
	sscanf(usedpromo, "p<|>ddd", PlayerInfo[playerid][pGun][0], PlayerInfo[playerid][pGun][1], PlayerInfo[playerid][pGun][2]);
	//cache_delete(result, mysql);
    GetPlayerIp(playerid,PlayerIp[playerid],16);
    new idx;
	for(new x; x < 13; x ++)
	{
	    PlayerInfo[playerid][pGuns][x] = strval(strtok(weaponsstr, idx));
	    PlayerInfo[playerid][pAmmos][x] = strval(strtok(weaponsstr, idx));
	}
	golod[playerid] = CreatePlayerProgressBar(playerid, 548.00, 57.50, 61.50, 5.20, COLOR_LIGHTBLUE, MAX_PLAYER_SATIETY(playerid), BAR_DIRECTION_RIGHT);
	SetPlayerProgressBarValue(playerid,golod[playerid], Fullness[playerid]);
	ShowPlayerProgressBar(playerid,golod[playerid]);
	//RECON
	ReconPlayer[0] = CreatePlayerTextDraw(playerid,530.000000, 180.000000, "x");
	PlayerTextDrawBackgroundColor(playerid, ReconPlayer[0], 0x000000FF);
	PlayerTextDrawFont(playerid, ReconPlayer[0], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[0], 0.000000, 20.600000);
	PlayerTextDrawColor(playerid,ReconPlayer[0], 0x000000FF);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[0], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[0], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[0], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[0], 2);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[0], 0xFFFFFFFF);
	PlayerTextDrawTextSize(playerid,ReconPlayer[0], 640.000, 0.000000);
	ReconPlayer[1] = CreatePlayerTextDraw(playerid,529.000000, 179.000000, "x");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[1], 0x000000FF);
	PlayerTextDrawFont(playerid,ReconPlayer[1], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[1], 0.000000, 20.600000);
	PlayerTextDrawColor(playerid,ReconPlayer[1], 0x000000FF);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[1], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[1], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[1], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[1], 2);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[1], 0x000000FF);
	PlayerTextDrawTextSize(playerid,ReconPlayer[1], 641.000000, 0.000000);
	ReconPlayer[2] = CreatePlayerTextDraw(playerid,0.000, 180.000, "x");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[2], 0x000000FF);
	PlayerTextDrawFont(playerid,ReconPlayer[2], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[2], 0.000000, 18.540);
	PlayerTextDrawColor(playerid,ReconPlayer[2], 0x000000FF);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[2], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[2], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[2], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[2], 2);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[2], 0xFFFFFFFF);
	PlayerTextDrawTextSize(playerid,ReconPlayer[2], 70.000, 0.000000);
	ReconPlayer[3] = CreatePlayerTextDraw(playerid,0.000, 179.000, "x");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[3], 0x000000FF);
	PlayerTextDrawFont(playerid,ReconPlayer[3], 3);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[3], 0.000000, 18.746);
	PlayerTextDrawColor(playerid,ReconPlayer[3], 0x000000FF);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[3], 1);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[3], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[3], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[3], 1);
	PlayerTextDrawBoxColor(playerid,ReconPlayer[3], 0x000000FF);
	PlayerTextDrawTextSize(playerid,ReconPlayer[3], 71.000, 0.000000);
	ReconPlayer[4] = CreatePlayerTextDraw(playerid,535.000, 210.000, "\
	~n~~w~Played:\
	~n~~w~Warns:\
	~n~~w~Armour:\
	~n~~w~Health:\
	~n~~w~Car HP:\
	~n~~w~Speed:\
	~n~~w~Ping:\
	~n~~w~Patrons:\
	~n~~w~Shots:\
	~n~~w~Timeshot:\
	~n~~w~AFK:\
	~n~~w~Engine:");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[4], 0x000000FF);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[4], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[4], 0.200, 1.100);
	PlayerTextDrawColor(playerid,ReconPlayer[4], -1);
	PlayerTextDrawFont(playerid,ReconPlayer[4], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[4], 2);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[4], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[4], 0);
	ReconPlayer[5] = CreatePlayerTextDraw(playerid,575.000, 210.000, " ");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[5], 0x000000FF);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[5], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[5], 0.200, 1.100);
	PlayerTextDrawColor(playerid,ReconPlayer[5], -1);
	PlayerTextDrawFont(playerid,ReconPlayer[5], 1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[5], 1);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[5], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[5], 0);
	ReconPlayer[6] = CreatePlayerTextDraw(playerid,585.000000, 190.000000, " ");
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[6], 0x000000FF);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[6], 1);
	PlayerTextDrawLetterSize(playerid,ReconPlayer[6], 0.300, 1.400);
	PlayerTextDrawColor(playerid,ReconPlayer[6], -1);
	PlayerTextDrawFont(playerid,ReconPlayer[6], 1);
	PlayerTextDrawAlignment(playerid,ReconPlayer[6], 2);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[6], 1);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[6], 1);
	PlayerTextDrawUseBox(playerid,ReconPlayer[6], 0);
	ReconPlayer[7] = CreateReconButton(playerid,35.000, 195.000, "CHANGE ID");
	ReconPlayer[8] = CreateReconButton(playerid,35.000, 212.000, "CHECK >>");
	ReconPlayer[9] = CreateReconButton(playerid,35.000, 229.000, "ADDITIONAL >>");
	ReconPlayer[10] = CreateReconButton(playerid,35.000, 246.000, "KICK >");
	ReconPlayer[11] = CreateReconButton(playerid,35.000, 263.000, "WARN");
	ReconPlayer[12] = CreateReconButton(playerid,35.000, 280.000, "BAN >");
	ReconPlayer[13] = CreateReconButton(playerid,35.000, 297.000, "STATISTICS >>");
	ReconPlayer[14] = CreateReconButton(playerid,35.000, 314.000, "UPDATE");
	ReconPlayer[15] = CreateReconButton(playerid,35.000, 331.000, "DISCONNECT");
	ReconPlayer[16] = CreateReconButton(playerid,105.000, 212.000, "GM");
	ReconPlayer[17] = CreateReconButton(playerid,105.000, 229.000, "GM2");
	ReconPlayer[18] = CreateReconButton(playerid,105.000, 246.000, "GM Car");
	ReconPlayer[19] = CreateReconButton(playerid,105.000, 263.000, "RESET SHOTS");
	ReconPlayer[20] = CreateReconButton(playerid,105.000, 229.000, "MUTE");
	ReconPlayer[21] = CreateReconButton(playerid,105.000, 246.000, "SLAP");
	ReconPlayer[22] = CreateReconButton(playerid,105.000, 263.000, "JAIL");
	ReconPlayer[23] = CreateReconButton(playerid,105.000, 246.000, "SILENT KICK");
	ReconPlayer[24] = CreateReconButton(playerid,105.000, 263.000, "KICK");
	ReconPlayer[25] = CreateReconButton(playerid,105.000, 280.000, "BAN");
	ReconPlayer[26] = CreateReconButton(playerid,105.000, 297.000, "PERMANENT BAN");
	ReconPlayer[27] = CreateReconButton(playerid,105.000, 314.000, "SILENT BAN");
	ReconPlayer[28] = CreateReconButton(playerid,105.000, 297.000, "ACCOUNT");
	ReconPlayer[29] = CreateReconButton(playerid,105.000, 314.000, "WEAPONS");
	ReconPlayer[30] = CreateReconButton(playerid,105.000, 331.000, "IP");
	ReconPlayer[31] = CreateReconButton(playerid,585.00, 350.00, "HELP");
	ReconPlayer[32] = CreatePlayerTextDraw(playerid,193.450000, 368.507629, "left arrow");
	PlayerTextDrawLetterSize(playerid,ReconPlayer[32], -0.054333, 1.547263);
	PlayerTextDrawTextSize(playerid,ReconPlayer[32], 61.000000, 65.400001);
	PlayerTextDrawAlignment(playerid,ReconPlayer[32], 2);
	PlayerTextDrawColor(playerid,ReconPlayer[32], -1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[32], 0);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[32], 1);
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[32], 0x00000000);
	PlayerTextDrawFont(playerid,ReconPlayer[32], 5);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[32], 1);
	PlayerTextDrawSetSelectable(playerid,ReconPlayer[32], true);
	PlayerTextDrawSetPreviewModel(playerid,ReconPlayer[32], 19134);
	PlayerTextDrawSetPreviewRot(playerid,ReconPlayer[32], 0.000000, 90.000000, 90.000000, 2.000000);
	ReconPlayer[33] = CreatePlayerTextDraw(playerid,421.336669, 368.507629, "right arrow");
	PlayerTextDrawLetterSize(playerid,ReconPlayer[33], -0.054333, 1.547263);
	PlayerTextDrawTextSize(playerid,ReconPlayer[33], 61.000000, 65.400001);
	PlayerTextDrawAlignment(playerid,ReconPlayer[33], 2);
	PlayerTextDrawColor(playerid,ReconPlayer[33], -1);
	PlayerTextDrawSetShadow(playerid,ReconPlayer[33], 0);
	PlayerTextDrawSetOutline(playerid,ReconPlayer[33], 1);
	PlayerTextDrawBackgroundColor(playerid,ReconPlayer[33], 0x00000000);
	PlayerTextDrawFont(playerid,ReconPlayer[33], 5);
	PlayerTextDrawSetProportional(playerid,ReconPlayer[33], 1);
	PlayerTextDrawSetSelectable(playerid,ReconPlayer[33], true);
	PlayerTextDrawSetPreviewModel(playerid,ReconPlayer[33], 19134);
	PlayerTextDrawSetPreviewRot(playerid,ReconPlayer[33], 0.000000, -90.000000, 90.000000, 2.000000);
	LoadPlayerCars(playerid);
	TextDrawHideForPlayer(playerid, INTROTD[0]);
	TextDrawHideForPlayer(playerid, INTROTD[1]);
	//
    format(string,sizeof(string),"UPDATE `accounts` SET `OldIP` = '%s',`Online_status`='%i' WHERE `ID` = '%i'",PlayerIp[playerid],playerid,PlayerInfo[playerid][pID]);
    mysql_pquery(mysql, string);
 	IsPlayerLogged[playerid] = true;
	if(!IsARPName(Name(playerid)) && RP_Names) ShowPlayerDialogEx(playerid,RENAME_DIALOG,1,"{43CD80}Введите новый никнейм","{FFFFFF}Ваш ник не соответствует правилам сервера\nВведите новый ник в окошко и нажмите {43CD80}Далее\nПример: {43CD80}Carl_Johnson","Далее","");
	SetPlayerScore(playerid,PlayerInfo[playerid][pExp]);
	GivePlayerMoney(playerid,SlotValue[playerid][0]);
	OnLoadPass(playerid);
	new date[3];
	getdate(date[2], date[1], date[0]);
	f(string, "SELECT * FROM `onlineinfo` WHERE (`Name` = '%s' AND `Day` = '%d' AND `Month` = '%d' AND `Year` = '%d')", Name(playerid), date[0],date[1],date[2]);
	mysql_pquery(mysql, string, "LoadOnlineInfo", "d", playerid);
	SetPVarInt(playerid, "PauseUpdate", 3);
	GetNumberCars(playerid,PlayerInfo[playerid][pCars]);
	SetPlayerFightingStyle(playerid,style);
	if(TeamDuty[playerid])SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	else SetPlayerColor(playerid,0xEFEFF710);
	if(IsAtGang(playerid) || IsAtMafia(playerid)) SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	if(PlayerInfo[playerid][pLeader] > 0)
	{
	    if(!GetString(OrgInfo[PlayerInfo[playerid][pLeader]][oLeader], Name(playerid)))
	    {
	        if(IsACop(playerid))
			{
				if(UsingShield[playerid])RemovePlayerAttachedObject(playerid, 6);
				PlayerInfo[playerid][pShield] = 0.0;
			}
	    	PlayerInfo[playerid][pLeader] = 0;
	    	PlayerInfo[playerid][pMember] = 0;
	    	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
	    	PlayerInfo[playerid][pDCTime]=0;
	    	PlayerInfo[playerid][pRank] = 0;
	    	SetBumSkin(playerid);
	    	SendError(playerid,"Вы были сняты с поста лидера");
	    }
	}
	new query[256];
	f(query, "SELECT * FROM `quests` WHERE `name`='%s' ORDER BY `idquest`;", Name(playerid));
	mysql_tquery(mysql, query, "LoadQuestMysql", "d", playerid);
	format(string, sizeof(string), "~w~Welcome ~n~~b~ %s",Name(playerid));
	GameTextForPlayer(playerid, string, 5000, 1);
	if(PlayerInfo[playerid][pLeader] != 0 && strcmp(PlayerInfo[playerid][pLastIP], PlayerIp[playerid], true))
	{
		format(string,sizeof(string),"[Leader] %s[%d] | IP-Адрес не совпадает с тремя последними [GET IP:%s]",PlayerName[playerid],playerid,PlayerIp[playerid]);
		SendAdminsMessage(COLOR_RED, string, 1);
		format(string,sizeof(string),"[Leader] [LAST IP:%s]",PlayerInfo[playerid][pLastIP]);
		SendAdminsMessage(COLOR_RED, string, 1);
		format(string,sizeof(string),"[Leader] [Check IP 1:%s]",PlayerCheckIP1[playerid]);
		SendAdminsMessage(COLOR_RED, string, 1);
		format(string,sizeof(string),"[Leader] [Check IP 2:%s]",PlayerCheckIP2[playerid]);
		SendAdminsMessage(COLOR_RED, string, 1);
	}
	Hunger(playerid, PlayerInfo[playerid][pBuyWalent]);
 	if(strcmp("No Mail Adress", PlayerMail[playerid], true)==0)
	{
		SendError(playerid,"У вас не привязан E-Mail адрес. Привяжите его, чтобы подтвердить ваш аккаунт");
		SendError(playerid,"Для этого перейдите в {cc3b12}'/menu' » Настройки » E-Mail");
	}
 	if(GLS[23]>0)SendClientMessage(playerid,COLOR_VALIK,"[Объявление] {FFFFFF}На сервере проходит акция, включены х2 EXP и Донат");
 	if(GLS[34]>0) SendClientMessage(playerid,COLOR_VALIK,"[Объявление] {FFFFFF}В нашей группе ВКонтакте проходит конкурс на 3 инфернуса. Участвуй и ты 'vk.com/goodgame'");
	/////////////
	if(PlayerInfo[playerid][FamilyID] != -1)
	{
		mysql_format(mysql, query, sizeof(query), "SELECT * FROM `family` WHERE `ID` = '%d'", PlayerInfo[playerid][FamilyID]);
		mysql_pquery(mysql, query, "MysqlLoadFamily", "d", playerid);
	}
    if(SlotValue[playerid][1]!=-1)
	{
	    new bool: on=false;
		new s = GetHouseStyle(SlotValue[playerid][1]);//тип дома
		for(new i;i < HouseRooms[s];i ++)// перебираеться количество комнат
		{
			if(GetString(HRoomOwner[SlotValue[playerid][1]][i],Name(playerid)))//возвращает комнаты
			{
                on = true;
                break;
			}
		}
		if (on == false && !GetString(HouseInfo[SlotValue[playerid][1]][hOwner],PlayerName[playerid])) SlotValue[playerid][1] = -1;
	}

	for(new houseid;houseid< OWNABLEHOUSES;houseid++)
	{
	    if(GetString(HouseInfo[houseid][hOwner],PlayerName[playerid]) && SlotValue[playerid][1]==-1) SlotValue[playerid][1]=houseid;
	}
	if(PlayerInfo[playerid][pRank]>0 && PlayerInfo[playerid][pMember]==0)PlayerInfo[playerid][pRank]=0;
	if(PlayerInfo[playerid][pCredit] > (PlayerInfo[playerid][pCredit_Default]+500000))
	{
	    format(string,sizeof(string),"Долг центральному банку штата составляет $%d. Оплатите кредит вовремя, чтобы избежать неприятностей",PlayerInfo[playerid][pCredit]);
	    SendClientMessage(playerid,COLOR_ACHAT,string);
	    format(string,sizeof(string),"[A] %s[%d] зашел в игру. На данный момент у него задолженность в банке $%d",PlayerName[playerid],playerid,PlayerInfo[playerid][pCredit]);
	    SendAdminsMessage(COLOR_ORANGE,string);
		OrgInfo[TEAM_BANK][oBank] += floatround(PlayerInfo[playerid][pCredit_Default]/95);
	}
	if(PlayerInfo[playerid][pWarns]>0)
	{
		PlayerInfo[playerid][pMember]=0;
		PlayerInfo[playerid][pLeader]=0;
		PlayerInfo[playerid][pRank]=0;
		if(PlayerInfo[playerid][pDCTime] ==3)PlayerInfo[playerid][pDCTime]=0;
	}
    if(PlayerInfo[playerid][pWarns]>2)
	{
	    SendError(playerid,"Ваш аккаунт заблокирован");
	    PlayerInfo[playerid][pWarns]=0;
		BanPlayer(playerid);
	}
	switch(PlayerInfo[playerid][pDCTime])
	{
	    case 1: if(PlayerInfo[playerid][pOOC]==-1) PlayerInfo[playerid][pDCTime]=0;
	    case 2: if(SlotValue[playerid][1]==-1) PlayerInfo[playerid][pDCTime]=0;
	    case 3: if(PlayerInfo[playerid][pMember]==0) PlayerInfo[playerid][pDCTime]=0;
	}
	if(PlayerInfo[playerid][pJB])PlayerTextDrawShow(playerid, AlkTD[playerid][7]);
	NoEnterPickup[playerid]=7;
   	if(PlayerInfo[playerid][pCredit] > (PlayerInfo[playerid][pCredit_Default]*2) && PlayerInfo[playerid][pCredit_Default] > 0){
		new count;
		for(new i = 5; i < 10; i++){
			new number = SlotValue[playerid][i];
			if(!number)continue;
			if(IsPlayerHaveCar(playerid,number)){
   			    SendClientMessage(playerid, COLOR_RED, "За неуплату кредита центральный банк изьял у вас автомобиль");
                PlayerInfo[playerid][pCredit] -= CarInfo[GetVehicleID(number)][cCost];
                SellCar(number);
			  	GetNumberCars(playerid,PlayerInfo[playerid][pCars]);
				count++;
				if(PlayerInfo[playerid][pCredit] <= 0){
					PlayerInfo[playerid][pCredit_Default] = 0;
					PlayerInfo[playerid][pCredit] = 0;
				}
				if(PlayerInfo[playerid][pDCTime] >= 400){
					PlayerInfo[playerid][pDCTime]=0;
					SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
				}
				break;
   			}
		}
		if(!count){
			if(SlotValue[playerid][1] != -1){
				new house = SlotValue[playerid][1];
             	if(!GetString(HouseInfo[house][hOwner],PlayerName[playerid])){
					SetString(HouseInfo[house][hOwner],"The State");
					SendClientMessage(playerid, COLOR_RED, "За неуплату кредита центральный банк изьял у вас дом");
					SlotValue[playerid][1] = -1;
					PlayerInfo[playerid][pCredit] -= HouseInfo[house][hCost];
					PlayerInfo[playerid][pDCTime] = 0;
					UpdateHouse(house);
					count++;
					if(PlayerInfo[playerid][pCredit] <= 0){
						PlayerInfo[playerid][pCredit_Default] = 0;
						PlayerInfo[playerid][pCredit] = 0;
					}
					PlayerInfo[playerid][pDCTime]=0;
					SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
					SaveAccount(playerid);
				}
			}
		}
		if(!count){
			if(SlotValue[playerid][2] != -1){
				strmid(kvartinfo[SlotValue[playerid][2]][vladelec], "None", 0, strlen("None"), 5); 
				kvartinfo[SlotValue[playerid][2]][kvLock] = 0; 
				PlayerInfo[playerid][pCredit] -= kvartinfo[SlotValue[playerid][2]][pCount];
				SendClientMessage(playerid, COLOR_RED, "За неуплату кредита центральный банк изьял у вас квартиру");
				updatekvar(SlotValue[playerid][2]); 
				SlotValue[playerid][2] = -1; 
				count++;
				if(PlayerInfo[playerid][pCredit] <= 0){
					PlayerInfo[playerid][pCredit_Default] = 0;
					PlayerInfo[playerid][pCredit] = 0;
				}
				SaveAccount(playerid);
			}
		}
		if(!count){
			if(SlotValue[playerid][3] != -1){
				new biz = SlotValue[playerid][3];
				if(GetString(BizInfo[biz][bOwner],Name(playerid))){
					SetString(BizInfo[biz][bOwner],"The State");
					SlotValue[playerid][3] = -1;
					if(BizInfo[biz][bProducts] < 0) BizInfo[biz][bProducts] = 1000;
					if(BizInfo[biz][bMoney] < 0) BizInfo[biz][bMoney] = 1000;
					SendClientMessage(playerid, COLOR_RED, "За неуплату кредита центральный банк изьял у вас бизнес");
					UpdateBiz(biz,1);
					PlayerInfo[playerid][pCredit] -= BizInfo[biz][bCost];
					count++;
					if(PlayerInfo[playerid][pCredit] <= 0){
						PlayerInfo[playerid][pCredit_Default] = 0;
						PlayerInfo[playerid][pCredit] = 0;
					}
					SaveAccount(playerid);
				}
			}
		}		
	}
	if(PlayerInfo[playerid][pExp] > 40 && PlayerInfo[playerid][pHavePassword]==0)
	{
	    format(string,sizeof(string),"\n\n\\c{FAAC58}Уважаемый %s!\n\\c{FFFFFF}Настоятельно рекомендуем сменить пароль от вашего аккаунта, дабы обезопасить ваше игровое имущество\n\\cНе пытайтесь проигнорировать это сообщение, это очень важный момент для вашего аккаунта!\n\n",PlayerName[playerid]);
		Dialog_Open(playerid,0,0,"{43CD80}Информация",string,"Принять","");
	}
	if(!ActualVIP(playerid))
	{
		if(PlayerInfo[playerid][pVIP]>0 && PlayerInfo[playerid][pVIP] < 5)
		{
			if(PlayerInfo[playerid][pVIP]>1)
			{
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"[Важно] {FFFFFF}Срок вашего VIP аккаунта истек, статус VIP понижен и продлен");
				PlayerInfo[playerid][pVipTime] = gettime()+(30*24*60*60);

			}
			else if(PlayerInfo[playerid][pVIP]==1) SendClientMessage(playerid,COLOR_LIGHTBLUE,"[Важно] {FFFFFF}Срок вашего VIP аккаунта истек, статус VIP был снят");
			PlayerInfo[playerid][pVIP]--;
		}
	}
	new Atac = GetTeamID(playerid);
	new slot = -1;
	if(CaptureAtac[0] == Atac || CaptureDef[0] == Atac)slot = 0;
	if(CaptureAtac[1] == Atac || CaptureDef[1] == Atac)slot = 1;
	if(slot != -1 && CaptureTime[slot] > 0 && IsAtGang(playerid))ShowCapture(playerid, slot);
	if(BizAtack == Atac || BizDeff == Atac)slot = 2;
	if(slot != -1 && BizTime > 0 && IsAtMafia(playerid))ShowCapture(playerid, slot);
	if(PlayerInfo[playerid][pHelper] || PlayerInfo[playerid][pAdmin])Iter_Add(Admins, playerid);
	if(PlayerInfo[playerid][pSkin] == 0)
	{
		TutState[playerid] = -1;
		SetFullness(playerid, 100);
		Clother[playerid] = -1;
		new race = PlayerInfo[playerid][pRace];
		if(PlayerInfo[playerid][pSex] < 2)PlayerInfo[playerid][pSkin] = MBomzSkins[race][random(6)];
		else PlayerInfo[playerid][pSkin] = GBomzSkins[race][random(3)];
		if(pTemp[playerid][SPECTPLAYER]==true)SpecPl(playerid, false);
		StopAudioStreamForPlayer(playerid);
		new tutmessage[516];
		strcat(tutmessage, "\n\n\\c{C9EAFF}Используйте комманды {7396FB}'/menu' {C9EAFF}и {7396FB}'/settings' {C9EAFF}для управления игровым персонажем");
		strcat(tutmessage, "\n\\cВы можете задать вопрос в нашу игровую поддержку {7396FB}'/report'");
		strcat(tutmessage, "\n\\c{C9EAFF}Советуем получить паспорт, а затем отправиться на ферму или завод для заработка денег на права");
		strcat(tutmessage, "\n\n\\c{D94141}На нашем проекте отсутствуют уровни персонажа");
		strcat(tutmessage, "\n\\c{43CD80}Приятной игры и больших достижений на проекте Good Game\n\n");
		Dialog_Open(playerid, 0, 0, "{43CD80}Подсказка",tutmessage, "Скрыть","");
		if(GLS[23]>0)SendClientMessage(playerid,COLOR_VALIK,"[Объявление] {FFFFFF}На сервере проходит акция, включены х2 EXP и Донат");
		TogglePlayerControllable(playerid,true);
		SetFullness(playerid, 100);
		PlayerInfo[playerid][pBuyWalent]=1;
		Hunger(playerid, PlayerInfo[playerid][pBuyWalent]);
		PlayerInfo[playerid][pGold]=1;
		PlayerInfo[playerid][pZKP]=20;
		PlayerInfo[playerid][pHospital]=25;
		PlayerInfo[playerid][pRedio]=3;
		PlayerInfo[playerid][pHealth] = 100.0;
		PlayerInfo[playerid][pNeedMessage]=0;
		SaveAccount(playerid);
		SetCameraBehindPlayer(playerid);
		CheckPointForPlayer(playerid,1774.8309,-1654.0077,20.3739);
		SetPVarInt(playerid, "NewPlayer", 1);
	}
 	PlayerSpawn(playerid);
	LoadItems(playerid);
	SendInfo(playerid, "Вы можете открыть свой {7396FB}инвентарь{FFFFFF}, нажав клавишу {7396FB}'Y'");
	//TextDrawShowForPlayer(playerid, MMTD[23]);
	return true;
}
stock LoadItems(playerid)
{
	for(new i; i < 100; i++)
	{
		ItemInfo[playerid][plrID][i] = 0;
		ItemInfo[playerid][plrPrize][i] = 0;
		ItemInfo[playerid][plrCase][i] = 0;
		ItemInfo[playerid][plrPrice][i] = 0;
	}
	ItemRestrict{playerid} = 0;
	new string[128];
	format(string, sizeof(string), "SELECT * FROM `roul_prizes` WHERE `Owner` = '%d'", PlayerInfo[playerid][pID]);
	new Cache:result = mysql_query(mysql, string);
	new rows = cache_get_row_count(mysql);
	if(rows == 100)ItemRestrict{playerid} = 1;
	for(new i; i < rows; i++)
	{
		ItemInfo[playerid][plrID][i] = cache_get_field_content_int(i, "ID", mysql);
		ItemInfo[playerid][plrPrize][i] = cache_get_field_content_int(i, "Prize", mysql);
		ItemInfo[playerid][plrCase][i] = cache_get_field_content_int(i, "Case", mysql);
		ItemInfo[playerid][plrPrice][i] = cache_get_field_content_int(i, "Price", mysql);
	}
	cache_delete(result, mysql);
	return 1;
}
stock Float:GetPlayerCheckHealth(playerid)
{
	new Float:Health;
	GetPlayerHealth(playerid, Health);
	return (PlayerInfo[playerid][pHealth] < Health)?PlayerInfo[playerid][pHealth]:Health;
}
stock Float:GetPlayerCheckArmour(playerid)
{
	new Float:Armour;
	GetPlayerArmour(playerid, Armour);
	return (PlayerInfo[playerid][pArmour] < Armour)?PlayerInfo[playerid][pArmour]:Armour;
}
stock SaveOnlineInfo(playerid)
{
	new string[256], Day,Month,Year;
	getdate(Year,Month,Day);
	format(string, sizeof(string), "UPDATE `onlineinfo` SET `Time` = '%d', `Pause` = '%d' WHERE (`Name` = '%s' AND `Day` = '%d' AND `Month` = '%d' AND `Year` = '%d')", OnlineInfo[playerid][lTime],OnlineInfo[playerid][lPause], Name(playerid), Day,Month,Year);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string); else mysql_query(mysql, string, false);
	return true;
}
forward LoadOnlineInfo(playerid);
public LoadOnlineInfo(playerid)
{
	if(cache_get_row_count(mysql)){
		OnlineInfo[playerid][lTime] = cache_get_field_content_int(0, "Time", mysql);
		OnlineInfo[playerid][lPause] = cache_get_field_content_int(0, "Pause", mysql);
	}
	else{
		new string[256], Day,Month,Year;
		getdate(Year,Month,Day);
		format(string, sizeof(string), "INSERT INTO `onlineinfo` (`Name`, `IP`, `Day`,`Month`,`Year`,`Time`,`Pause`) VALUE ('%s','%s','%d','%d','%d','%d','%d')", PlayerName[playerid],PlayerIp[playerid],Day,Month,Year,OnlineInfo[playerid][lTime],OnlineInfo[playerid][lPause]);
		mysql_pquery(mysql, string);
		return 1;
	}
	return true;
}
stock ReplaceText(text[])
{
	for(new i; i < strlen(text); i ++)
	{
	    if('0' <= text[i] <= '9') text[i] = '*';
	}
	return true;
}
public OnPlayerCommandText(playerid, cmdtext[])
{
	if(!IsPlayerLogged[playerid]) return false;
	if(!strlen(cmdtext)) return true;
	new command[30], params[300];
	strdel(cmdtext, 0, 1);
	sscanf(cmdtext, "s[20]s[300]", command, params);
	strins(command, "callcmd::", 0);
	SendError(playerid,"Сервер: Неизвестная команда! Введите /help для просмотра доступных функций");
	if(!strlen(params)) params = " ";
	return true;
}
stock GetPlayerID(const string[])
{
	foreach(Player, i)
	{
		if(IsPlayerConnected(i))
		{
			new testname[MAX_PLAYER_NAME];
			GetPlayerName(i, testname, sizeof(testname));
			if(strcmp(testname, string, true, strlen(string)) == 0)
			{
				return i;
			}
		}
	}
	return INVALID_PLAYER_ID;
}
stock IsARPName(const Name[])
{
	if(strlen(Name)>19) return 0;
	new simb_, RP_Name[2][24];
	for(new i = 0;i < strlen(Name);i ++)
	{
	    if(Name[i] == '_') simb_ ++;
	}
	if(simb_ != 1) return false;
	sscanf(Name,"p<_>s[24]s[24]",RP_Name[0],RP_Name[1]);
	if( !IsAGoodName(RP_Name[0]) || !IsAGoodName(RP_Name[1]) ) return false;
	return true;
}
stock IsAGoodName(const Name[])
{
	new NameChars;
	if(strlen(Name) < 2) return false;
	if(Name[0] < 'A' || Name[0] > 'Z') return false;
	for(new i = 1;i < strlen(Name);i ++)
	{
	    if(Name[i] < 'a' || Name[i] > 'z')
		{
		    if(Name[i] >= 'A' && Name[i] <= 'Z') NameChars ++;
		    else return false;
		}
	    if(NameChars > 1) return false;
	}
	return true;
}
stock IsABannedWeapon(gunid)
{
	switch(gunid)
	{
	    case 2,7,9,15,16,18,26,32,35..40,44,45: return true;
	}
	return false;
}
stock IsAFireGun(gunid)
{
	return (gunid >= 22 && gunid <= 38);
}
stock IsACheatState(playerid)
{
    new State = GetPlayerState(playerid);
	return (State != PLAYER_STATE_NONE && State != PLAYER_STATE_SPECTATING && State != PLAYER_STATE_SPAWNED);
}
stock EnableGPSForPlayer(playerid, Float:x, Float:y, Float:z)
{
	SetPlayerRaceCheckpoint(playerid, 1, Float:x, Float:y, Float:z, Float:x, Float:y, Float:z, 4.0);
	gpss[playerid]=1;
	GameTextForPlayer(playerid, "~y~GPS ACTIVATED", 3000, 3);
	SendInfo(playerid, "Маршрут построен");
    /*if(PlayerRoute[playerid][calculating])return SendError(playerid,"Устанавливается связь со спутниками, ожидайте...");
    if(PlayerRoute[playerid][Destination] != -1)DisableGPSForPlayer(playerid);
    new PlayerClosest = NearestPlayerNode(playerid);
    new TempDestination = NearestNodeFromPoint(x, y, z);
    if(PlayerClosest == -1)return SendError(playerid,"Системе GPS навигации не удалось определить ваше местоположение");
    if(TempDestination == -1)return SendError(playerid,"Системе GPS навигации не удалось проложить маршрут");
    if(CalculatePath(PlayerClosest,TempDestination,playerid, .GrabNodePositions = true))PlayerRoute[playerid][calculating] = true;*/
    return 1;
}
/*stock DestroyObjectEx(&p_object)
{
	DestroyObject(p_object);
	p_object = 0;
	return 1;
}*/
stock DisableGPSForPlayer(playerid, cp = 0)
{
	if(cp){
		DisablePlayerRaceCheckpoint(playerid);
		GameTextForPlayer(playerid, "~r~GPS DISABLED", 2000, 3);
		gpss[playerid]=0;
		KillTimer(marktimer[playerid]);
		//DestroyObjectEx(PlayerRoute[playerid][Object]);
	}
	/*if(PlayerRoute[playerid][Destination] != -1){
        PlayerRoute[playerid][Lenght] = 0;
        PlayerRoute[playerid][Destination] = -1;
        gps_RemovePlayer(playerid);
        DestroyDynamicArea(PlayerRoute[playerid][GPS_Polygon]);
        PlayerRoute[playerid][GPS_Polygon] = -1;
        PlayerRoute[playerid][IsInGPS_Polygon] = false;
    }*/
	return true;
}
stock CheckPointForPlayer(playerid, Float:x, Float:y, Float:z)
{
	gpss[playerid]=1;
	SetPlayerRaceCheckpoint(playerid, 1, Float:x, Float:y, Float:z, Float:x, Float:y, Float:z, 4.0);
	return true;
}
stock GetTeamID(playerid)
{
	if(PlayerInfo[playerid][pMember] > 0) return PlayerInfo[playerid][pMember];
	if(PlayerInfo[playerid][pLeader] > 0) return PlayerInfo[playerid][pLeader];
	return false;
}
stock GunName(gunid)
{
	new gunname[34];
	SetString(gunname,WeaponNames[gunid]);
	return gunname;
}
stock GetPlayerVehicleSpeedZ(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return true;
    new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid),X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y) * 180.0 );
}

stock GetPlayerVehicleSpeed(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return true;
    new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid),X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 180.0 );
}
stock PlayerSpeed(playerid)
{
    new Float:X, Float:Y, Float:Z;
    if(!IsPlayerInAnyVehicle(playerid)) GetPlayerVelocity(playerid,X,Y,Z);
    return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 170.0 );
}
stock VehicleSpeed(carid)
{
    new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(carid,X,Y,Z);
    return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 180.0 );
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(GetPlayerVirtualWorld(playerid) == 0) return ToCheat(1,playerid);
	return true;
}
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	return true;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    if(TalentsInfo[playerid][1][0] != 1){
	    new carid = GetPlayerVehicleID(playerid);
		if(IsACopCar(carid))return 1;
	    if(IsAVelik(carid)) return 1;
		EngineStalled[playerid]++;
		if(EngineStalled[playerid] >= 2 && GetEngineStatus(carid))
		{
			SetEngineStatus(vehicleid, false, playerid);
			GameTextForPlayer(playerid, "ENGINE ~r~OFF", 1000, 6);
			EngineStalled[playerid]=0;
		}
	}
	if(TalentsInfo[playerid][1][0] == 3){
		new Float:carhp;
		GetVehicleHealth(vehicleid, carhp);
		if(carhp < 400 && carhp > 300)J_SetVehicleHealth(vehicleid, 410);
	}
	if(CarTest[playerid] != -1){
		Errors[playerid]++;
	}
	return true;
}
public OnVehicleSirenStateChange(playerid, vehicleid, newstate)
{
	if(IsACopCar(vehicleid)){
		if(newstate)
		{
			if(!VehicleInfo[vehicleid][vIterSiren]){
				Iter_Add(COPCARS, vehicleid);
				VehicleInfo[vehicleid][vIterSiren] = true;
			}
		}else{
			if(VehicleInfo[vehicleid][vIterSiren]){
				Iter_Remove(COPCARS, vehicleid);
				VehicleInfo[vehicleid][vIterSiren] = false;
				new sost[4];
				GetVehicleDamageStatus(vehicleid, sost[0], sost[1], sost[2], sost[3]); 
				UpdateVehicleDamageStatus(vehicleid, sost[0], sost[1], 0, sost[3]); 
			}
		}
	}
    return 1;
}
stock SetHostName(const name[])
{
	new string[100];
	format(string,sizeof(string),"hostname %s",name);
	return SendRconCommand(string);
}
stock CheckPassengers(vehicleid)
{
	for(new i; i < 10; i ++)
	{
	    if(VehicleSeat[vehicleid][i] != INVALID_PLAYER_ID && !IsPlayerInVehicle(VehicleSeat[vehicleid][i], vehicleid)) VehicleSeat[vehicleid][i] = INVALID_PLAYER_ID;
	}
	return true;
}
SetPlayerNameEx(playerid, const name[])
{
    SetPlayerName(playerid, name);
	return strmid(PlayerName[playerid], name, 0, strlen(name));
}
forward Roll(table);
public Roll(table)
{
	for(new i; i < 11; i++)
	{
		if(RoulGamers[table][i] == INVALID_PLAYER_ID)continue;
		new roll = random(37);
		new text[5];
		switch(roll)
		{
		case 0:format(text,sizeof text,"~g~%d",roll);
		case 1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36:format(text,sizeof text,"~r~%d",roll);
		case 2,4,6,8,10,11,13,15,17,20,22,24,26,28,29,31,33,35:format(text,sizeof text,"%d",roll);
		}
		GameTextForPlayer(RoulGamers[table][i],text,2000,6);
	}
	return false;
}
forward FuelTimer();
public FuelTimer()
{
	for(new i = 1; i < Iter_End(OWNABLECARS); i++)
	{
	    if(GetVehicleModelEx(i) != 0)
	    {
			CheckPassengers(i);
			CheckGas(i);
		}
	}
	return 1;
}
stock RemovePlants(){
	for(new i; i < MAX_PLANTS; i++){
		if(PlantsToRemove[i] == -1)continue;
		Iter_Remove(TotalPlants, PlantsToRemove[i]);
	}
	return 1;
}
stock ForexTimer(){
	if(FactoryInfo[fAurum] >= 100){
		FactoryInfo[fSlitkov]++;
		FactoryInfo[fAurum] -= 100;
	}
	if(FactoryInfo[fDiamonds] >= 2000){
		FactoryInfo[fBrilliantov]++;
		FactoryInfo[fDiamonds] -= 2000;
	}
	return 1;
}
public GrandTimer()
{
	if(GrandEndOK>0)
	{
	    new grandstr[256];
		format(grandstr, 256, "Потерялся конец GrandTimer. Этап: %d", GrandEndOK);
	}
	new tickcount1 = GetTickCount();
	new str[256], string[256];
	new year,month,day,minuite,second,hour,num;
	new h, m, s;
	gettime(h, m, s);
	for(new i; i < MAX_PLANTS; i++)PlantsToRemove[i] = -1;
	foreach(new _plntID : TotalPlants)
	{
		switch(PlantInfo[_plntID][plantState])
		{
		case PLANT_STATE_GROWING:
			{
				new Float:growth = (3.0)*++PlantInfo[_plntID][plantStateTime]/PLANT_GROVE_TIME;
				SetDynamicObjectPos(PlantInfo[_plntID][plantCreatedID], PlantInfo[_plntID][plantPosX], PlantInfo[_plntID][plantPosY], PlantInfo[_plntID][plantPosZ] + growth);
				static const _fmt_str[] = "{a7e88b}Незрелый виноград\n\n{FFCB8C}Вырастет через %s";
				new _str[sizeof(_fmt_str)+12];
				new timeleft = PLANT_GROVE_TIME - PlantInfo[_plntID][plantStateTime];
				format(_str, sizeof(_str), _fmt_str, Convert(timeleft));
				UpdateDynamic3DTextLabelText(PlantInfo[_plntID][plant3DTextID], -1, _str);
				if(PlantInfo[_plntID][plantStateTime] == PLANT_GROVE_TIME)
				{
					PlantInfo[_plntID][plantState] = PLANT_STATE_GROWN;
					DestroyDynamicObject(PlantInfo[_plntID][plantCreatedID]);
					growth = 3.0;
					PlantInfo[_plntID][plantGived] = 15;
					PlantInfo[_plntID][plantCreatedID] = CreateDynamicObject(738, PlantInfo[_plntID][plantPosX], PlantInfo[_plntID][plantPosY], PlantInfo[_plntID][plantPosZ] + growth,   0.00000, 0.00000, PlantInfo[_plntID][plantRotZ]);
					ac_CreateDynamicCP(PlantInfo[_plntID][plantHarvestCP][0], PlantInfo[_plntID][plantHarvestCP][1], PlantInfo[_plntID][plantPosX], PlantInfo[_plntID][plantPosY], PlantInfo[_plntID][plantPosZ] + 4.0, 1.0);
					continue;
				}
				continue;
				
			}
		case PLANT_STATE_GROWN:
			{
				++PlantInfo[_plntID][plantStateTime];
				if(PlantInfo[_plntID][plantStateTime] >= PLANT_HARVEST_TIME || !PlantInfo[_plntID][plantGived])
				{
					DestroyDynamicObject(PlantInfo[_plntID][plantCreatedID]);
					DestroyDynamic3DTextLabel(PlantInfo[_plntID][plant3DTextID]);
					if(IsValidDynamicArea(PlantInfo[_plntID][plantHarvestCP][1]))ac_DestroyDynamicCP(PlantInfo[_plntID][plantHarvestCP][0],PlantInfo[_plntID][plantHarvestCP][1]);
					if(PlantInfo[_plntID][plantHarvestedProcess])
					{
						new _plrID = PlantInfo[_plntID][plantHarvestedProcess] - 1;
						SendError(_plrID, "Вы не успели собрать последний урожай");
						ClearAnimations(_plrID, 1);
						PlayerHarvestID[_plrID] = -1;
						KillTimer(PlayerHarvestTimer[_plrID]);
						PlayerHarvestTimer[_plrID] = 0;
					}
					new _clrenum[grdPlantInfo];
					PlantInfo[_plntID] = _clrenum;
					PlantsToRemove[num] = _plntID;
					num++;
					continue;
				}	
				if(PlantInfo[_plntID][plantStateTime] >= PLANT_GROVE_TIME)
				{
					static const _fmt_str[] = "{43CD80}Зрелый виноград\n\n{C9EAFF}Плодоносен ещё %s\n{7396FB}Подойдите, чтобы собрать урожай";
					new _str[sizeof(_fmt_str) + 16];
					new timeleft = PLANT_HARVEST_TIME - PlantInfo[_plntID][plantStateTime];
					format(_str, sizeof(_str), _fmt_str, Convert(timeleft));
					UpdateDynamic3DTextLabelText(PlantInfo[_plntID][plant3DTextID], -1, _str);
					continue;
				}
			}
		}
	}
	RemovePlants();
	for(new i; i < 8; i++){
		if(FoolInfo[i][foolTimer] > 0){
			FoolInfo[i][foolTimer]--;
			if(!FoolInfo[i][foolTimer])StartGame(i);
		}
	}
	if(paintt[0] > 0) 
    { 
        paintt[0]--; 
        if(paintt[1] == 1 && paintt[0] == 120)SendClientMessageToAll(COLOR_ME,"Внимание! Начало пейнтбола через 2 минуты. Место проведения - военный завод K.A.C.C");
        if(paintt[1] == 1 && paintt[0] == 1) 
        { 
            if(paintt[2] > 2) 
            { 
                for(new i = 0; i < PaintList; i++) 
                { 
                    strmid(PaintInfo[i][pbName],"None", 0, strlen("None"), 32); 
                    PaintInfo[i][pbKills] = 0; 
                    PaintInfo[i][pbDeaths] = 0; 
                } 
                PaintList = 0; 
                SendClientMessageToAll(COLOR_ME,"Матч по пейнтболу начался"); 
                paintt[1] = 2; paintt[0] = 300; 
                foreach(Player, x) 
                { 
					if(GetPVarInt(x, "napeinte") == 1)
					{
						SetPVarInt(x, "napeinte", 2);
						PlayerSpawn(x);
					} 
                } 
            } 
            else
			{
				SendClientMessageToAll(COLOR_ME,"Матч по пейнтболу отменен из-за недостаточного количества участников");
				paintt[1] = 0;
				paintt[0] = 0;
			} 
        } 
        if(paintt[1] == 2 && paintt[0] == 1) 
        { 
            SendClientMessageToAll(COLOR_ME,"Матч по пейнтболу завершен (( Список победителей можно посмотреть на территории завода ))"); 
            paintt[1] = 0; paintt[0] = 0; 
			new id, maxs;
            foreach(Player, x) 
            { 
                new v = GetPVarInt(x,"paintkills"); 
                if(GetPVarInt(x, "napeinte") == 2) 
                { 
                    PaintInfo[PaintList][pbKills] = GetPVarInt(x,"paintkills"); 
                    PaintInfo[PaintList][pbDeaths] = GetPVarInt(x,"paintdeaths"); 
                    SetString(PaintInfo[PaintList][pbName],Name(x)); 
                    PaintList++; 
                    if(v > maxs)
					{
						maxs = v;
						id = x;
					} 
                    _ResetGun(x); 
                    J_SetPlayerPos(x, 2493.3499,2764.1868,10.8203); 
                    SetPlayerFacingAngle(x, 90.0); 
                } 
            } 
            if(id != -1)
			{
				GiveMoney(id, 50000, "Paintball winner");
				SendClientMessage(id, COLOR_LIGHTBLUE, "Поздравляем! Вы заняли первое место и выиграли 50.000$");
			} 
        }
    }
	if(paintt[1] == 0) 
    { 
        if(minuite == 5) 
        { 
            SendClientMessageToAll(COLOR_ME,"Внимание! Начало пейнтбола через 5 минут. Место проведения - военный завод K.A.C.C"); 
            paintt[0] = 300; 
            paintt[1] = 1; 
            foreach(Player, i)
			{
				DeletePVar(i, "napeinte");
			}
        } 
    } 
	if(ChanTime)
	{
		ChanTime--;
		format(string, sizeof(string), "{D94141}Котёл для варки\n\n{C9EAFF}Процесс приготовления\n» %s «\n{43CD80}Загружено: %d/1000",Convert(ChanTime),ChanBalance);
		UpdateDynamic3DTextLabelText(ChanText, -1, string);
		if(!ChanTime)
		{
			ChanStatus++;
			FactoryTimer = 1800;
			format(string, sizeof(string), "{D94141}Котёл для варки\n\n{C9EAFF}Процесс фасовки\n» %s «\n{43CD80}Загружено: %d/1000",Convert(FactoryTimer),ChanBalance);
			UpdateDynamic3DTextLabelText(ChanText, -1, string);
			ConveerTimer = SetTimer("LentaTimer", 2000, true);
		}
	}
	if(FactoryTimer)
	{
		FactoryTimer--;
		format(string, sizeof(string), "{D94141}Котёл для варки\n\n{C9EAFF}Процесс фасовки\n» %s «\n{43CD80}Загружено: %d/1000",Convert(FactoryTimer),ChanBalance);
		UpdateDynamic3DTextLabelText(ChanText, -1, string);
		if(!FactoryTimer)
		{
			ChanStatus = 0;
			ChanBalance = 0;
			format(string, sizeof(string), "{D94141}Котёл для варки\n\n{C9EAFF}Ожидает заполнения\n{43CD80}Загружено: %d/1000",ChanBalance);
			UpdateDynamic3DTextLabelText(ChanText, -1, string);
			KillTimer(ConveerTimer);
		}
	}
    GrandEndOK=1;
	Reklam ++;
   	getdate(year,month,day);
   	gettime(hour,minuite,second);
	if(minuite == 0 && second >= 11 && second <= 16) PAYDAY = 0;
   	if(minuite == 0 && second >= 0 && second <= 10 && PAYDAY == 0)
   	{
		for(new i; i < 10; i++){
			DestroyDynamicObject(AlkatrazDrop[i][alObj]);
			DestroyDynamic3DTextLabel(AlkatrazDrop[i][alText]);
			AlkatrazDrop[i][alCreated] = false;
			new type = random(3);
			new pos = random(sizeof DropPos);
			AlkatrazDrop[i][alX] = DropPos[pos][0];
			AlkatrazDrop[i][alY] = DropPos[pos][1];
			AlkatrazDrop[i][alZ] = DropPos[pos][2];
			AlkatrazDrop[i][alType] = type;
			AlkatrazDrop[i][alCreated] = true;
			AlkatrazDrop[i][alText] = CreateDynamic3DTextLabel("Предмет для побега\n{FF4400}/up",-1,DropPos[pos][0], DropPos[pos][1], DropPos[pos][2],5.0);
			switch(type)
			{
			case 0:AlkatrazDrop[i][alObj] = CreateDynamicObjectEx((random(2) == 1) ? 18644 : 11715, DropPos[pos][0], DropPos[pos][1], DropPos[pos][2]-0.7, 0.000000, 0.000000, DropPos[pos][3], 5.0, 5.0);
			case 1:AlkatrazDrop[i][alObj] = CreateDynamicObjectEx(19163, DropPos[pos][0], DropPos[pos][1], DropPos[pos][2]-0.7, 0.000000, 0.000000, DropPos[pos][3], 5.0, 5.0);
			case 2:AlkatrazDrop[i][alObj] = CreateDynamicObjectEx(11723, DropPos[pos][0], DropPos[pos][1], DropPos[pos][2]-0.7, 0.000000, 0.000000, DropPos[pos][3], 5.0, 5.0);
			}
		}
   	    PAYDAY = 1;
   	    PayDay();
		for(new i; i < 15; i++){
			for(new x; x < 20; x++){
				ItemsCount[i][x] = random(2);
			}
		}
		ForexChange();
		SaveFactory();
   	}
	if(minuite == 0 && hour == 5 && second >= 0 && second <= 10 && RESTART == 0)
	{
		SendClientMessageToAll(0x43CD80AA," ");
		SendClientMessageToAll(0x43CD80AA," ");
		SendClientMessageToAll(0x43CD80AA," ");
		SendClientMessageToAll(0x43CD80AA," ");
		SendClientMessageToAll(0x43CD80AA,"Внимание, через 5 минут произойдёт автоматический рестарт сервера");
		SendClientMessageToAll(0x43CD80AA," ");
		SendClientMessageToAll(0x43CD80AA," ");
		SendClientMessageToAll(0x43CD80AA," ");
		SendClientMessageToAll(0x43CD80AA," ");
		SetTimer("UnLoadMod", 60000 * 5, false);
		RESTART = 1;
	}
   	GrandEndOK=2;
   	new rekl=Reklam;
	switch(rekl)
	{
	    case 600:
	    {
			for(new i;i<91;i++)
			{
				if(GribInfo[i][gribCreat]==-1)
					GribInfo[i][gribCreat] = CreateDynamicPickup(859,1,GribInfo[i][gribPos][0], GribInfo[i][gribPos][1], GribInfo[i][gribPos][2],-1);
			}
			GLS[36]=0;
			GLS[35]=0;
	    }
	    case 1100:
	    {
			Weather = WeatherIDs[random(sizeof WeatherIDs)];
			SetWeather(Weather);
	    }
	    case 1200:
		{
		    Reklam = 0;
			foreach(new i:Player)
			{
				if(IsPlayerLogged[i])
				{
					ResetBuyGuns[i]++;
					SetPVarInt(i,"antidmnew",0);
					SendClientMessage(i,0x82CFFFFF,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
					SendInfo(i,"Основные команды сервера: {7396FB}'/menu', '/help', '/gps', '/settings'");
					SendInfo(i,"Пригласи друга и получи бонус в размере {7396FB}$50000");
					format(str, sizeof(str), "Донат и получение дополнительных средств {7396FB}%s/donate", Mode_Site);
					SendInfo(i, str);
					SendInfo(i,"Напиши в группу {7396FB}vk.com/goodgame {ffffff}'Хочу промо'{7396FB} и получи промо-код");
					SendClientMessage(i,0x82CFFFFF,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
				}
			}
			for(new i; i < MAX_ORGS; i++)
				SetString(GovText[i], "None");
			GLS[36]=0;
			GLS[35]=0;
		}
	}
	if(TimeStavka[0] > 0)
	{
		TimeStavka[0]--;
		if(TimeStavka[0] == 1)ShowDiceResult(0);
	}
	if(TimeStavka[1] > 0)
	{
		TimeStavka[1]--;
		if(TimeStavka[1] == 1)ShowDiceResult(1);
	}
	if(TimeStavka[2] > 0)
	{
		TimeStavka[2]--;
		if(TimeStavka[2] == 1)ShowDiceResult(2);
	}
	if(TimeStavka[3] > 0)
	{
		TimeStavka[3]--;
		if(TimeStavka[3] == 1)ShowDiceResult(3);
	}
	for(new i; i < 4; i++)
	{
		if(RollTimer[i] < 1)continue;
		RollTimer[i]--;
		if(RollTimer[i] == 1)
		{
			new randy = random(37);
			KillTimer(TimeRoll[i]);
			ShowRollResult(i, randy);
			new text[6];
			for(new p; p < 11; p++)
			{
				if(GetPVarInt(RoulGamers[i][p],"RoulTable")-1 != i)continue;
				format(text,sizeof text,"~y~%d",randy);
				GameTextForPlayer(RoulGamers[i][p],text,3000,6);
			}
		}
	}
	for(new i = 0;i < MAX_BOMBS; i ++)
	{
	    BombTimer(i);
	}
	GrandEndOK=22;
	for(new i; i < 3; i++){
		if(i < 2){
			if(CaptureTime[i] > 0){
				CaptureTime[i]--;
				f(string, "TIMELEFT %s",Convert(CaptureTime[i]));
				TextDrawSetString(CaptureTD[7][i], string);
				f(string,"{D94141}Нападают %s\n{43CD80}Защищаются %s\n{C9EAFF}Осталось %s",OrgInfo[CaptureAtac[i]][oName],OrgInfo[CaptureDef[i]][oName],Convert(CaptureTime[i]));
				UpdateDynamic3DTextLabelText(CaptureText[i], -1, string);
				if(CaptureTime[i] == 0){
					foreach(new g:Player){
						if(PlayerInfo[g][pMember] == CaptureAtac[i] || PlayerInfo[g][pMember] == CaptureDef[i])
						HideCapture(g, i);
					}
					GangZoneStopFlashForAll(GangZone[CaptureZone[i]]);
					if(CaptureAtacKill[i] > CaptureDefKill[i]){
						SendTeamMessage(CaptureDef[i],COLOR_RED,"Вы потеряли контроль над одной из своих территорий");
						SendTeamMessage(CaptureAtac[i],COLOR_LIGHTGREEN,"Вы получили контроль над территорией");
						GZInfo[CaptureZone[i]][gzFracID] = CaptureAtac[i];
						new totalgz;
						for(new xx;xx<GANGZONES;xx++)
						{
							if(GZInfo[xx][gzFracID] != CaptureAtac[i])continue;
							totalgz++;
						}
						f(string, "Теперь ваша банда будет получать $%d каждый час",totalgz*500);
						SendTeamMessage(CaptureAtac[i],COLOR_LIGHTGREEN,string);
						GangZoneHideForAll(GangZone[CaptureZone[i]]);
						GangZoneShowForAll(GangZone[CaptureZone[i]],TeamColors[CaptureAtac[i]]);
					}
					else{
						SendTeamMessage(CaptureAtac[i],COLOR_RED,"Вам не удалось получить контроль над территорией");
						SendTeamMessage(CaptureDef[i],COLOR_LIGHTGREEN,"Вы отстояли свою территорию");
					}
					DestroyDynamic3DTextLabel(CaptureText[i]);
					CaptureTime[i] = 0;
					UpdateDorm(CaptureDef[i]);
					UpdateDorm(CaptureAtac[i]);
					CaptureDef[i] = -1;
					CaptureAtac[i] = -1;
					SaveGangZone(CaptureZone[i]);
					CaptureZone[i] = -1;
				}
				GangZoneFlashForAll(GangZone[CaptureZone[i]],TeamColors[CaptureAtac[i]]);
			}
		}
		if(i == 2){
			if(BizTime > 0){
				BizTime--;
				f(string, "TIMELEFT %s",Convert(BizTime));
				TextDrawSetString(CaptureTD[7][i], string);
				if(BizTime == 0){
					foreach(new g:Player){
						if(PlayerInfo[g][pMember] == BizAtack || PlayerInfo[g][pMember] == BizDeff)
						HideCapture(g, i);
					}
					if(BizAtakkill > BizDeffkill)
					{
						BizInfo[BizWar][bKrasher] = BizAtack;
						SendTeamMessage(BizDeff,COLOR_RED,"Вы потеряли контроль над бизнесом по итогу стрелы");
						SendTeamMessage(BizAtack,COLOR_LIGHTGREEN,"Вы получили контроль над бизнесом в ходе стрелы");
						new totalbiz;
						for(new xx;xx<OWNABLEBIZES;xx++)
						{
							if(BizInfo[xx][bKrasher] != BizAtack) continue;
							totalbiz++;
						}
						f(string, "Теперь ваша мафия будет получать $%d каждый час",totalbiz*500);
						SendTeamMessage(BizAtack,COLOR_LIGHTGREEN,string);
						UpdateBiz(BizWar,1);
						UpdateDorm(BizDeff);
						UpdateDorm(BizAtack);
					}
					else
					{
						SendTeamMessage(BizAtack,COLOR_RED,"Вам не удалось получить контроль над бизнесом в ходе стрелы");
						SendTeamMessage(BizDeff,COLOR_LIGHTGREEN,"Вам удалось отстоять контроль над бизнесом по итогу стрелы");
					}
					BizTime = 0;
					BizDeff = -1;
					BizAtack = -1;
					PlaceWar = 0;
				}
			}
		}
	}
	GrandEndOK=24;
    for(new i;i<MAX_ACTORSS;i++)
	{
		if(actortime[i]>0)
		{
			actortime[i]--;
			if(actortime[i]==0)
			{
				Update3DTextLabelText(tActor[i], COLOR_GRAY, "");
				ApplyActorAnimation(i, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1);
				if(i==98||i==99||i==100||i==101||(i>=103 && i<=112)) ApplyActorAnimation(i,"PED","SEAT_down",4.1,0,0,0,1,1);
			}
		}
	}
	GrandEndOK=26;
	for(new i;i<MAX_NARKO;i++)
	{
	    if(ddrugs[i]!=-1)
	    {
		    if(ddTimer[i]>0)
		    {
	            ddTimer[i]--;
	            if(ddTimer[i] > 400)
	            {
		            format(string,sizeof(string),"Саженец конопли\nВ процессе созревания. Осталось: {FAAC58}%d{FFFFFF} минут(ы)",floatround(float(ddTimer[i])/60.0));
		            UpdateDynamic3DTextLabelText(ddText[i],COLOR_WHITE,string);
	 			}
	            if(ddTimer[i]<= 400)
	            {
	                new Float: x, Float:y,Float:z;
	    			GetDynamicObjectPos(ddrugs[i],x,y,z);

		            if(ddTimer[i]== 400)
					{
					    DestroyDynamicObject(ddrugs[i]);
					    ddrugs[i] = CreateDynamicObject(861, x,y,z,0, 0,180);
					}
					if(ddTimer[i]== 0)
		            {
		                DestroyDynamicObject(ddrugs[i]);
					    ddrugs[i] = CreateDynamicObject(862, x,y,z,0, 0,180);
		                format(string,sizeof(string),"{FAAC58}Созревшая конопля{FFFFFF}\nНажмите ~k~~SNEAK_ABOUT~ чтобы забрать урожай");
			            UpdateDynamic3DTextLabelText(ddText[i],COLOR_WHITE,string);
		            }
					else
					{
					    format(string,sizeof(string),"Конопля\nСозревает. Осталось: {FAAC58}%d{FFFFFF} минут(ы)",floatround(float(ddTimer[i])/60.0));
		            	UpdateDynamic3DTextLabelText(ddText[i],COLOR_WHITE,string);
					}
	            }
		    }
		}
	}
	time_grandtimer = GetTickCount() - tickcount1;
	if(time_grandtimer > time_grandtimer_max) time_grandtimer_max = time_grandtimer;
	GrandEndOK=0;
	return true;
}
forward StrobesTimer();
public StrobesTimer(){
	if(Iter_Count(COPCARS)){
		foreach(COPCARS, i){
			if(VehicleInfo[i][vState] != 1 && VehicleInfo[i][vState] != 4)VehicleInfo[i][vState] = 1; 
			else{ 
				if(VehicleInfo[i][vState] == 1)VehicleInfo[i][vState] = 4; 
				else VehicleInfo[i][vState] = 1; 
			}
			new sost[4];
			GetVehicleDamageStatus(i, sost[0], sost[1], sost[2], sost[3]); 
			UpdateVehicleDamageStatus(i, sost[0], sost[1], VehicleInfo[i][vState], sost[3]); 
		}
	}
	return true;
}
stock LastSeconds(hour, minute, second, day, month, year)
{
	new hour2,minute2,second2,day2,month2,year2;
	gettime(hour2, minute2, second2), getdate(year2, month2, day2);
    return mktime(hour2, minute2, second2, day2, month2, year2) - mktime(hour,minute,second,day,month,year);
}
stock mktime(hour,minute,second,day,month,year) {
	new timestamp2;
	timestamp2 = second + (minute * 60) + (hour * 3600);
	new days_of_month[12];

	if ( ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0) ) {
			days_of_month = {31,29,31,30,31,30,31,31,30,31,30,31};
		} else {
			days_of_month = {31,28,31,30,31,30,31,31,30,31,30,31};
		}
	new days_this_year = 0;
	days_this_year = day;
	if(month > 1) {
		for(new i=0; i<month-1;i++) {
			days_this_year += days_of_month[i];
		}
	}
	timestamp2 += days_this_year * 86400;

	for(new j=1970;j<year;j++) {
		timestamp2 += 31536000;
		if ( ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0) )  timestamp2 += 86400;
	}

	return timestamp2;
}
stock SetBumSkin(playerid)
{
	SetPlayerSkinEx(playerid, PlayerInfo[playerid][pSkin]);
	TogglePlayerControllable(playerid,true);
	return true;
}
stock CheckGas(carid)
{
    if(!IsAVelik(carid) && !IsAMoped(carid) && !IsAPlane(carid))
	{
		if(GetEngineStatus(carid))
		{
			new id = GetVehicleSeat(carid, 0);
			if(Fuel[carid] > 0.0)
			{
				if(id != INVALID_PLAYER_ID){
					if(TalentsInfo[id][1][0] == 2){
						if(GetVehicleSpeed(carid))Fuel[carid] -= 0.2;
						Fuel[carid] -= 0.1;
					}
					else{
						if(GetVehicleSpeed(carid))Fuel[carid] -= 0.4;
						Fuel[carid] -= 0.2;
					}
				}else{
					if(GetVehicleSpeed(carid))Fuel[carid] -= 0.4;
					Fuel[carid] -= 0.2;
				}
		   		if(Fuel[carid] <= 0.0)
				{
					Fuel[carid] = 0.0;
					SetEngineStatus(carid,false,-1);
					NoVehicleFuel(carid);
				}
			}
		}
	}
	return true;
}
stock ForexChange(){
	FactoryInfo[gold_Sell] += random(7)-3;
	FactoryInfo[gold_Buy] += random(7)-3;
	FactoryInfo[diamond_Sell] += random(21)-10;
	FactoryInfo[diamond_Buy] += random(21)-10;
	if(FactoryInfo[gold_Sell] <= 0 || FactoryInfo[gold_Buy] <= 0 || FactoryInfo[diamond_Sell] <= 0 || FactoryInfo[diamond_Buy] <= 0 
	|| (FactoryInfo[diamond_Sell] - FactoryInfo[diamond_Buy] > 300) || (FactoryInfo[gold_Sell] - FactoryInfo[gold_Buy] > 300)){
		FactoryInfo[gold_Sell] = 30;
		FactoryInfo[gold_Buy] = 30;
		FactoryInfo[diamond_Sell] = 500;
		FactoryInfo[diamond_Buy] = 500;
		SendGosMessage(COLOR_RED,"Биржа драгоценных металлов и камней достигла дефолта. Установлены стандартные цены");
	}
}
stock PayDay()
{
	new string[1024];
	SaveInforamtion();
	new h;
	gettime(h);
	foreach(new i:Player)
	{
		if(PlayerInfo[i][pJailTime])
			if(!IsPlayerToKvadrat(i, -2612, 1587, -1938, 2195))
			{
				ToCheat(1, i);
				continue;
			}
		DeletePVar(i,"GivedSRP");
		PlayerPlaySound(i, 6400, 0, 0, 0);
		new color;
		if(PlayerInfo[i][pVIP])color = COLOR_GOLD;
		else color = COLOR_SYSTEM;
		SendClientMessage(i,color,"______ ВЫПИСКА ИЗ БАНКА ______");
		format(string, sizeof(string), "  Время: {D94141}%d:00", h);
		SendClientMessage(i,color, string);
	    if(!IsPlayerConnected(i))
		{
			SendClientMessage(i, COLOR_LIGHTRED, "  Вы должны быть авторизованы");
			SendClientMessage(i,color,"________________________________");
			continue;
		}
	    if(IsPlayerLogged[i])
	    {
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER){
				if(QuestProgress[i][8] < QI[8][LastProgress] && AcceptQuest[i][8] == 1)QuestProgress[i][8] ++;
				if(QuestProgress[i][8] >= QI[8][LastProgress] && QuestProgress[i][8] < 10000){
					PlayerInfo[i][pTalents][1]++;
					SendInfo(i, "У Вас появились новые очки талантов");
					QuestProgress[i][8] = 10000;
				}
			}
	        if(ResetBuyGuns[i]>0)
			{
	   			new Bank,VIP=PlayerInfo[i][pVIP];
	   			ResetBuyGuns[i]=0;
				PlayerInfo[i][pExp]++;
		        PlayerInfo[i][pPlayHours]++;
	        	if(PlayerInfo[i][pCredit]==0)
	        	{
			        switch(VIP)
			        {
			            case STATUS_NONE:Bank = floatround(float(PlayerInfo[i][pBank])/1300.0);
			            case STATUS_VIP: Bank = floatround(float(PlayerInfo[i][pBank])/900.0);
			            case STATUS_GOLD: Bank = floatround(float(PlayerInfo[i][pBank])/800.0);
			            case 3:
			            {
							PlayerInfo[i][pVirMoney]++;
							Bank = floatround(float(PlayerInfo[i][pBank])/800.0);
			            }
			            case 4:
			            {
							PlayerInfo[i][pVirMoney]+=2;
							Bank = floatround(float(PlayerInfo[i][pBank])/700.0);
			            }
						case 5:
						{
							PlayerInfo[i][pExp] += 1;
							PlayerInfo[i][pVirMoney]+=3;
							Bank = floatround(float(PlayerInfo[i][pBank])/600.0);
						}
					}
				}
				else
				{
					if(PlayerInfo[i][pCredit] > (PlayerInfo[i][pCredit_Default]+floatround(PlayerInfo[i][pCredit_Default]/2)) && PlayerInfo[i][pWanted]<6)
					{
						PlayerInfo[i][pWanted]++;
						SendClientMessage(i,COLOR_LIGHTRED,"  Вы объявлены в розыск за неоплату кредита");
						SetPlayerWantedLevel(i, PlayerInfo[i][pWanted]);
					}
		            format(string,sizeof(string),"  Кредитная ставка %d процентов [+%d]\n",GLS[0],((PlayerInfo[i][pCredit]*GLS[0])/100)/25);
			        SendClientMessage(i,color,string);
			        PlayerInfo[i][pCredit] += floatround((float(PlayerInfo[i][pCredit]*GLS[0])/100)/25);
				}
			    if(PlayerInfo[i][pAdmin])PlayerInfo[i][pVirMoney]++;
		        new money;
				if(GetTeamID(i) > 0 && TeamDuty[i])
		        {
		        	money += OrgSalary[GetTeamID(i)][PlayerInfo[i][pRank]-1];
		        	format(string,sizeof(string),"  Премия от руководства: {43CD80}$%d\n",OrgSalary[GetTeamID(i)][PlayerInfo[i][pRank]-1]);
		        	SendClientMessage(i,color,string);
		        }
				if(PlayerInfo[i][pAdmin] && ADuty[i] == 228)
				{
					money += PlayerInfo[i][pAdmin]*10000;
		        	format(string,sizeof(string),"  Зарплата администратора: {43CD80}$%d\n",PlayerInfo[i][pAdmin]*10000);
		        	SendClientMessage(i,color,string);
				}
		        format(string,sizeof(string),"  Процент в банке: {43CD80}$%d\n",Bank);
		        SendClientMessage(i,color,string);
		        money += Bank;
		        format(string,sizeof(string),"  Сумма к выплате: {43CD80}$%d\n", money);
		        SendClientMessage(i,color,string);
		        GiveBankMoney(i, money);
		        format(string,sizeof(string),"  Сумма в банке: {43CD80}$%d\n",PlayerInfo[i][pBank]);
		        SendClientMessage(i,color,string);
		        if(PlayerInfo[i][pWanted] > 0)
		        {
		            PlayerInfo[i][pWanted] --;
		            SetPlayerWantedLevelEx(i, PlayerInfo[i][pWanted]);
		            format(string,sizeof(string),"  Уровень розыска: {D94141}%d\n",PlayerInfo[i][pWanted]);
		        	SendClientMessage(i,color,string);
		        }
		        else
				{
				    if(PlayerInfo[i][pZKP]<100)
					{
						PlayerInfo[i][pZKP] ++;
					    format(string,sizeof(string),"  Законопослушность: {43CD80}%d\n",PlayerInfo[i][pZKP]);
			        	SendClientMessage(i,color,string);
					}
		        	if(PlayerInfo[i][pZKP] >= 50)
		        	{
		        	    if(PlayerInfo[i][pBL]==1)
		        	    {
		        	        PlayerInfo[i][pBL] = 0;
	   						SendClientMessage(i,COLOR_LIGHTGREEN,"  Вы были автоматически удалены из ЧС");
		        	    }
		        	}
				}
				if(PlayerInfo[i][pVIP] == 5)
				{
				    PlayerInfo[i][pVirMoney]+=3;
			        format(string,sizeof(string),"  Текущее количество DP: {43CD80}%d\n",PlayerInfo[i][pVirMoney]);
			        SendClientMessage(i,color,string);
				}
				SaveAccount(i);
		        SendClientMessage(i,color,"________________________________");
		        if(PlayerInfo[i][pVIP])GameTextForPlayer(i, "~y~PAYDAY", 3000, 1);
				else GameTextForPlayer(i, "~w~PAYDAY", 3000, 1);
				if(PlayerInfo[i][pCredit]>0 && PlayerInfo[i][pVIP]>0) SendClientMessage(i,COLOR_LIGHTRED,"  Приемущества VIP не действуют. Вы имеете долг в центральном банке");
		        CheckNextLevel(i);
			}
			else
			{
				SendClientMessage(i, COLOR_SYSTEM, "  Для получения зарплаты необходимо отыграть 20 минут");
				ResetBuyGuns[i]++;
				SendClientMessage(i,color,"________________________________");
			}
	    }
		else
		{
			SendClientMessage(i, COLOR_LIGHTRED, "  Вы должны быть авторизованы");
			if(PlayerInfo[i][pVIP])SendClientMessage(i,COLOR_GOLD,"________________________________");
			else SendClientMessage(i,COLOR_SYSTEM,"________________________________");
		}
	}
    for(new houseid;houseid < MAX_HOUSES;houseid++)
	{
	    new str[256];
	    if(strcmp(HouseInfo[houseid][hOwner],"The State",true) == 0 ) continue;
	    if(HouseInfo[houseid][hNalog2] < 1000) HouseInfo[houseid][hNalog2] += 100;
	    else HouseInfo[houseid][hNalog] += GLS[2];
     	if(HouseInfo[houseid][hNalog] > 52000)
     	{
     		new bool:qu = true, bool:bu = true;
	        foreach(new p:Player)
	        {
	            for(new i;i < HouseRooms[GetHouseStyle(houseid)];i ++)
				{
				    if(GetString(HRoomOwner[houseid][i],PlayerName[p]))
					{
					    if(IsPlayerLogged[p] && IsPlayerConnected(p))
						{
						    PlayerInfo[p][pDCTime] = 0;
	                        SlotValue[p][1]=-1;
	                        bu = false;
	                        SendClientMessage(p,COLOR_LIGHTRED,"  За неоплату счетов дома вы были с него выселены");
						}
					}

				}
				if(!strcmp(HouseInfo[houseid][hOwner],PlayerName[p],true) && IsPlayerConnected(p))
				{
				    if(IsPlayerLogged[p] && IsPlayerConnected(p))
					{
					    SendClientMessage(p,COLOR_LIGHTRED,"  За неоплату счетов дома вы были с него выселены");
					    GiveMoney(p,HouseInfo[SlotValue[p][1]][hCost]);
					    SlotValue[p][1]=-1;
					    PlayerInfo[p][pDCTime] = 0;
				        qu = false;
					}
				}
			}
            if(bu)
			{
			    for(new i;i < HouseRooms[GetHouseStyle(houseid)];i ++)
				{
				    if(!GetString(HRoomOwner[houseid][i],"The State"))
					{
					    format(str, sizeof(str), "UPDATE `accounts` SET `HouseKey`='-1',`DropCarTime`='0' WHERE `NickName` = '%s'; ",HRoomOwner[houseid][i]);
						mysql_pquery(mysql, str);
					}
				}
			}
            for(new i;i < HouseRooms[GetHouseStyle(houseid)];i ++) SetString(HRoomOwner[houseid][i],"The State");
			if(qu)
			{
			    format(str, sizeof(str), "UPDATE `accounts` SET `HouseKey`='-1',`DropCarTime`='0',`Money`=`Money`+'%d' WHERE `NickName` = '%s'; ",HouseInfo[houseid][hCost], HouseInfo[houseid][hOwner]);
				mysql_pquery(mysql, str);
			}
			SetString(HouseInfo[houseid][hOwner],"The State");
		    HouseInfo[houseid][hNalog]=0;
		    HouseInfo[houseid][hNalog2]=0;
		    UpdateHouse(houseid);
     	}
		SaveHouse(houseid);
	}

	for(new bizid;bizid < MAX_BIZ;bizid++)
	{
	    if(BizInfo[bizid][bKrasher] == 0 || strcmp(BizInfo[bizid][bOwner],"The State",true) == 0 ) continue;
	    BizInfo[bizid][bLevel] += GLS[3];
		BizInfo[bizid][bNum]++;
		if(BizInfo[bizid][bNum]>23)
	    {
	        BizInfo[bizid][bNum]=0;
	        BizInfo[bizid][bVisit]=0;
	        BizInfo[bizid][bWin]=0;
	    }
	    OrgInfo[BizInfo[bizid][bKrasher]][oBank] += 500;
	    if(BizInfo[bizid][bLevel]>=100000)
	    {
	        new str[256];
	        new bool:qu = true;
	        foreach(new p:Player)
	        {
				if(!strcmp(BizInfo[bizid][bOwner],PlayerName[p],true) && IsPlayerConnected(p))
				{
				    if(IsPlayerLogged[p] && IsPlayerConnected(p))
					{
					    SendClientMessage(p,COLOR_LIGHTRED,"  За неоплату счетов у вас отобрали предприятие");
					    GiveMoney(p,BizInfo[SlotValue[p][3]][bCost]);
					    SlotValue[p][3]=-1;
				        qu = false;
				        break;
					}
				}
			}
			if(qu)
			{
			    format(str, sizeof(str), "UPDATE `accounts` SET `BizKey`='-1',`Money`=`Money`+'%d' WHERE `NickName` = '%s'; ",BizInfo[bizid][bCost], BizInfo[bizid][bOwner]);
				mysql_pquery(mysql, str);
			}
			SetString(BizInfo[bizid][bOwner],"The State");
		    BizInfo[bizid][bLevel]=0;
		    UpdateBiz(bizid,1);
	    }
	    SaveBiz(bizid);
	}
	for(new i;i<OWNABLECASINO;i++)
	{
	    if(!GetString(CasinoInfo[i][casOwner],"The State"))
		{
		    CasinoInfo[i][casNum]++;
		    if(CasinoInfo[i][casNum]>23)
		    {
		        CasinoInfo[i][casNum]=0;
		        CasinoInfo[i][casVisit]=0;
		        CasinoInfo[i][casWin]=0;
	         	CasinoInfo[i][casLose]=0;
		    }
		    CasinoInfo[i][casNalog]+=1000;
		    if(CasinoInfo[i][casNalog]>200000)
		    {
      			SetString(CasinoInfo[i][casOwner],"The State");
 				CasinoInfo[i][casLock]=0;
 				CasinoInfo[i][casNum]=0;
		        CasinoInfo[i][casVisit]=0;
		        CasinoInfo[i][casWin]=0;
          		CasinoInfo[i][casLose]=0;
          		CasinoInfo[i][casNalog]=0;

		    }
		}
		SaveCasino(i);
	}
	for(new i;i<GANGZONES;i++)
	{
	    if(GZInfo[i][gzFracID] > 0) OrgInfo[GZInfo[i][gzFracID]][oBank] += 650;
	}
	foreach(OWNABLECARS, vehid)
	{
		if(!GetString(CarInfo[vehid][cOwner],"The State"))
		{
			if(CarInfo[vehid][cShtraf]==0) CarInfo[vehid][cShtrafer] += GLS[1];
			else CarInfo[vehid][cShtraf] += GLS[1]*2;
		    if(CarInfo[vehid][cShtraf]>120000 || CarInfo[vehid][cShtrafer]>60000)
		    {
		    	CarInfo[vehid][cPos][0] = CarInfo[vehid][cSell][0];
				CarInfo[vehid][cPos][1] = CarInfo[vehid][cSell][1];
				CarInfo[vehid][cPos][2] = CarInfo[vehid][cSell][2];
				CarInfo[vehid][cPos][3] = CarInfo[vehid][cSell][3];
				CarInfo[vehid][cColor_1] = 1;
				CarInfo[vehid][cColor_2] = 1;
				CarInfo[vehid][cVirt] = 0;

				new bool:qu = true,str[254];
		        foreach(new p:Player)
		        {
					if(!strcmp(CarInfo[vehid][cOwner],PlayerName[p],true) && IsPlayerConnected(p))
					{
					    if(IsPlayerLogged[p] && IsPlayerConnected(p))
						{
						    SendClientMessage(p,COLOR_LIGHTRED," За неоплату счетов у вас отобрали личный автомобиль");
						    GiveMoney(p,CarInfo[vehid][cCost]);
					        qu = false;
					        break;
						}
					}
				}
				if(qu)
				{
				    format(str, sizeof(str), "UPDATE `accounts` SET `Money`=`Money`+'%d' WHERE `NickName` = '%s'; ",CarInfo[vehid][cCost], CarInfo[vehid][cOwner]);
					mysql_pquery(mysql, str);
				}
				SetString(CarInfo[vehid][cOwner], "The State");
				SetString(CarInfo[vehid][cKeyer], "The State");
				CarInfo[vehid][cShtrafer] = 0;

				CarInfo[vehid][cNumberColor] = 0;
				SetString(CarInfo[vehid][cNumber],"SA");
				SetString(CarInfo[vehid][cOnNumber],"The State");
				SetString(CarInfo[vehid][cOnRegister],"The State");
				SetString(CarInfo[vehid][cRegister],"The State");
			 	ReSetCarPrice(vehid);
				CarInfo[vehid][cLock] = 0;
				CarInfo[vehid][cShtraf] = 0;
				CarInfo[vehid][cKeyIN] = 0;
				CarInfo[vehid][cAlarmON] = 0;
				CarInfo[vehid][cMilage] = 0;
				CarInfo[vehid][cVirt] = 0;
				DestroyVehicleEx(OwnableCar[vehid]);
				J_AddStaticVehicleEx(CarInfo[vehid][cModel],CarInfo[vehid][cPos][0],CarInfo[vehid][cPos][1],CarInfo[vehid][cPos][2],CarInfo[vehid][cPos][3],CarInfo[vehid][cColor_1],CarInfo[vehid][cColor_1],0);
				VehicleInfo[OwnableCar[vehid]][vAntiRepair]=2;
				VehicleHealth[OwnableCar[vehid]] = 1000;
				SetVehicleToRespawn(OwnableCar[vehid]);
				SetVehicleVirtualWorld(OwnableCar[vehid],CarInfo[vehid][cVirt]);
				SaveOwnableCar(vehid);
				format(string,sizeof(string),"< Штраф Стоянка > Машина #%d была продана государству",vehid);
				SendAdminsMessage(COLOR_RED,string,1);
		    }
		}
		SaveOwnableCar(vehid);
	}
	return true;
}
stock CheckNextLevel(playerid)
{
	new string[144];
	SetPlayerScore(playerid,PlayerInfo[playerid][pExp]);
	format(string,sizeof(string),"  Вы уже отыграли %d часов",PlayerInfo[playerid][pExp]);
	SendClientMessage(playerid,COLOR_LIME,string);
	if(PlayerInfo[playerid][pExp] == 30)
	{
		new query[256];
	    format(query, sizeof(query), "SELECT `Referal` FROM `accounts` WHERE `NickName`='%s'", PlayerName[playerid]);
		mysql_pquery(mysql, query, "MysqlReferalCheck", "d", playerid);
	}
	return true;
}
stock SendAdminsMessage(color = -1,const string[] = "",level = 1,noplayerid = -1)
{
	foreach(new i:Admins)
	{
	    if(i != noplayerid)
	    {
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pAdmin] >= level && ADuty[i]==228) SendClientMessage(i, color, string);
			}
		}
	}
	return true;
}
stock AdminChat(color = -1,const string[] = "")
{
	foreach(new i:Admins)
	{
		if(IsPlayerConnected(i))
		{
			if(ADuty[i]==228 || PlayerInfo[i][pHelper] == 1)SendClientMessage(i, color, string);
		}
	}
	return true;
}
stock CheckPlayerBanIP(playerid)
{
	new string[256], IP[16];
	GetPlayerIp(playerid, IP, 16);
	format(string,sizeof(string),"SELECT * FROM `banip` WHERE `IP` = '%s' LIMIT 1", IP);
	new Cache:result = mysql_query(mysql, string);
	if(cache_get_row_count(mysql) > 0)
	{
	    cache_delete(result, mysql);
	    SendClientMessage(playerid, COLOR_LIGHTRED, "Данный IP заблокирован на нашем сервере");
		J_Kick(playerid);
		return 1;
	}
	cache_delete(result, mysql);
	format(string, sizeof(string), "SELECT * FROM `bannames` WHERE BINARY `Name` = '%s' LIMIT 1", Name(playerid));
	mysql_pquery(mysql, string, "MysqlCheckBanOnLogin", "ds", playerid, PlayerName[playerid]);
	return 1;
}
stock BanPlayer(playerid)
{
	BanName(Name(playerid),"который выдал варн в оффлайне",5,"Заблокирован за получение 3-ех варнов");
	J_Kick(playerid);
	return 1;
}
stock IsBannedName(const name[])
{
	new string[200];
	format(string, sizeof(string), "SELECT `Name` FROM `bannames` WHERE BINARY `Name` = '%s' LIMIT 1",name);
	new Cache:result = mysql_query(mysql, string);
	new i = cache_get_row_count(mysql);
    cache_delete(result, mysql);
	return i;
}
stock BanName(const name[], const namez[], days, const reason[])
{
    new string[200];
	if(!IsBannedName(name))
	{
	    format(string, sizeof(string), "INSERT INTO `bannames` (`Name`, `BanAdmin`, `BanSeconds`, `BanReason`) VALUE ('%s', '%s', '%d', '%s')",name, namez, gettime()+days*60*60*24, reason);
	    mysql_pquery(mysql, string);
	}
	return 1;
}
stock Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	else format(string, 30, "%d:%02d", mins, secs);
	return string;
}
stock UnBanName(name[])
{
    new string[256];
	if(IsBannedName(name))
	{
        format(string, sizeof(string), "DELETE FROM `bannames` WHERE BINARY `Name` = '%s'",name);
        mysql_pquery(mysql, string);
		printf("Unban %s", name);
	}
	return true;
}
stock CarryAnim(playerid)
{
    ApplyAnimation(playerid, "CARRY", "CRRY_PRTIAL", 4.1, 0, 1, 1, 1, 1, 1);
    return true;
}
stock SuccesAngle(Float:angle, Float:ang1, Float:ang2)
{
	return (ang1 <= angle <= ang2);
}
stock IsAZavodSkin(playerid)
{
	new skin = GetPlayerSkin(playerid);
	return (skin == 259 || skin == 260);
}
forward TalentsTimer(playerid);
public TalentsTimer(playerid){
	if(IsPlayerLogged[playerid])
	{
		if(TalentsInfo[playerid][0][0] == 1){
			new Float:Health = PlayerInfo[playerid][pHealth];
			if(Health+1.0 < MAX_PLAYER_HEALTH(playerid)){
				J_SetPlayerHealth(playerid, Health+1.0);
				GameTextForPlayer(playerid, "~g~+1 HP (talent)", 1, 1);
				SetPlayerChatBubble(playerid, "Восстановил 1% здоровья (талант)", COLOR_LIGHTBLUE, 10.0, 5000);
			}
		}
	}
}
forward PlayerTimer(playerid);
public PlayerTimer(playerid)
{
	if(IsPlayerLogged[playerid])
	{
		new string[1024];
		new str[128];
		new carid = GetPlayerVehicleID(playerid);
		new hour, minuite, second;
		gettime(hour, minuite, second);
		OnlineInfo[playerid][lTime]++;
		if(!GetPlayerInterior(playerid))SetPlayerTime(playerid, hour, minuite);
		else if(GetPlayerVirtualWorld(playerid) == 1466)SetPlayerTime(playerid, 20, 00);
		else SetPlayerTime(playerid, 12, 00);
		if(GetPVarInt(playerid, "CoinsTimer"))
		{
			SetPVarInt(playerid, "CoinsTimer",GetPVarInt(playerid, "CoinsTimer")-1);
			if(GetPVarInt(playerid, "CoinsTimer"))
			{
				f(str, "~y~%d",GetPVarInt(playerid, "CoinsTimer"));
				GameTextForPlayer(playerid, str, 1200, 6);
			}
		}
		if(PlayerInfo[playerid][pJB])
		{
			PlayerInfo[playerid][pJB]--;
			f(str, "Next jailbreak~n~~y~%s",Convert(PlayerInfo[playerid][pJB]));
			PlayerTextDrawSetString(playerid, AlkTD[playerid][7], str);
			if(!PlayerInfo[playerid][pJB])PlayerTextDrawHide(playerid, AlkTD[playerid][7]);
		}
		if(GetPVarInt(playerid, "showedfool"))
		{
			new foolid = GetPVarInt(playerid, "FoolTable")-1;
			if(FoolInfo[foolid][foolTimer] > 0){
				f(str, "~w~Game start in ~y~%d", FoolInfo[foolid][foolTimer]);
				GameTextForPlayer(playerid, str, 1200, 3);
			}
		}
		if(GetPVarInt(playerid,"PauseUpdate") > 0){
			SetPVarInt(playerid,"PauseUpdate",GetPVarInt(playerid,"PauseUpdate")-1);
			if(GetPVarInt(playerid,"PauseUpdate") == 1)DeletePVar(playerid,"PauseUpdate");
		}
		if(GetPVarInt(playerid, "JailBreak"))
		{
			SetPVarInt(playerid, "JailBreak",GetPVarInt(playerid, "JailBreak")-1);
			f(str, "Time to jailbreak~n~~y~%s",Convert(GetPVarInt(playerid, "JailBreak")));
			PlayerTextDrawSetString(playerid, AlkTD[playerid][7], str);
			if(!GetPVarInt(playerid, "JailBreak"))
			{
				for(new z; z < sizeof AlkMenu; z++)
				{
					if(z <= 6)DestroyPlayerTD(playerid, AlkTD[playerid][z]);
					TextDrawHideForPlayer(playerid, AlkMenu[z]);
				}
				if(IsPlayerToKvadrat(playerid, -2612, 1587, -1938, 2195))
				{
					Dialog_Open(playerid, 0, 0, "", "\n\n\
						\\c{ff4400}Вы не успели покинуть территорию тюрьмы и были пойманы. Срок вашего заключения был увеличен\n\
						\\c{C9EAFF}Повторить побег можно будет через 2 часа при наличии необходимых предметов", "Скрыть", "");
					PlayerInfo[playerid][pJailTime] += 3600;
					SpawnPlayer(playerid);
					PlayerInfo[playerid][pJB] = 1800;
				}
				else 
				{
					SetPlayerJB(playerid);
					PlayerTextDrawHide(playerid, AlkTD[playerid][7]);
					PlayerInfo[playerid][pJailTime] = 0;
					SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
					if(TeamDuty[playerid])SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
					else SetPlayerColor(playerid,0xEFEFF710);
				}
			}
		}
		if(GetPVarInt(playerid,"BonesTable"))
		{
			if(StolInfo[GetPVarInt(playerid,"BonesTable")-1][bGameStart] == 1)
			{
				new stringer[12];
				format(stringer,12,"~y~%d",TimeStavka[GetPVarInt(playerid,"BonesTable")-1]);
				GameTextForPlayer(playerid,stringer,2000,6);
			}
		}
		if(GetPVarInt(playerid, "FoolTimer"))
		{
			new foolid = GetPVarInt(playerid, "FoolTable")-1;
			SetPVarInt(playerid, "FoolTimer",GetPVarInt(playerid, "FoolTimer")-1);
			if(FoolInfo[foolid][foolAttack] == playerid)
			{
				f(str, "~g~Your turn~n~~w~%d",GetPVarInt(playerid, "FoolTimer"));
				GameTextForPlayer(playerid, str, 1200, 4);
				if(!GetPVarInt(playerid, "FoolTimer"))
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Истекло время вашего хода");
					SetPVarInt(playerid, "FoolLost", GetPVarInt(playerid, "FoolLost")+1);
					if(GetPVarInt(playerid, "FoolLost") == 3)
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, "Вы пропустили 3 хода и выбыли из игры");
						HideFoolMenu(playerid);
						if(FoolInfo[foolid][foolPlayers] == 1){
							for(new i; i < 4; i++){
								if(FoolGamers[foolid][i] != INVALID_PLAYER_ID){
									ShowFoolResult(FoolGamers[foolid][i], foolid, 100);
									EndFoolPlayer(FoolGamers[foolid][i]);
									FoolEndGame(foolid);
									break;
								}
							}
						}
					}
				}
			}
			if(FoolInfo[foolid][foolDefence] == playerid)
			{
				f(str, "~r~You are defending~n~~w~%d",GetPVarInt(playerid, "FoolTimer"));
				GameTextForPlayer(playerid, str, 1200, 4);
				if(!GetPVarInt(playerid, "FoolTimer"))
				{
					new bit[2];
					for(new i; i <= 6; i++)
					{
						if(i == 6)
						{
							if(bit[0] == bit[1] && bit[0] > 0)
							{
								for(new x; x < 6; x++)
								{
									SetString(UpCards[foolid][x], "");
									TextDrawSetString(FoolCardsTD[foolid][x], "_");
									SetString(DownCards[foolid][x], "");
									TextDrawSetString(BitCardsTD[foolid][x], "_");
								}
								if(FoolInfo[foolid][foolPlayers] == 2)SwitchTurn(foolid, 3);
								else SwitchTurn(foolid, 0);
							}
						}
						if(i < 6)
						{
							if(strlen(UpCards[foolid][i]) > 5)bit[0]++;
							if(strlen(UpCards[foolid][i]) > 5)bit[1]++;
						}
					}
					SendClientMessage(playerid, COLOR_LIGHTRED, "Время вышло. Вы автоматически забрали все карты");
					GiveCards(playerid, foolid);
					if(FoolInfo[foolid][foolPlayers] == 2)SwitchTurn(foolid, 3);
					else SwitchTurn(foolid, 0);
					for(new x; x < 4; x++){
						if(FoolGamers[foolid][x] != INVALID_PLAYER_ID && FoolGamers[foolid][x] != FoolInfo[foolid][foolDefence]){
							TextDrawHideForPlayer(FoolGamers[foolid][x], FoolOtherTD[foolid][4]);
						}
					}
					TextDrawHideForPlayer(FoolInfo[foolid][foolDefence], FoolOtherTD[foolid][3]);
				}
			}
		}
		GrandEndOK=6005;
		if(TimeOfCuff[playerid] > 0){
			if(PlayerOfCuff[playerid] != INVALID_PLAYER_ID){
				new cuffid = PlayerOfCuff[playerid];
				if(PlayerOfCuff[cuffid] == playerid){
					if(!Cuffed[playerid] && !Cuffed[cuffid]){
						if(ProxDetectorS(3.0, playerid, cuffid, 1)){
							TimeOfCuff[playerid] --;
							if(TimeOfCuff[playerid] <= 0){
								ClearAnims(playerid);
								PlayerOfCuff[playerid] = INVALID_PLAYER_ID;
								PlayerOfCuff[cuffid] = INVALID_PLAYER_ID;
								format(string,sizeof(string)," %s сковал %s",PlayerName[playerid],PlayerName[cuffid]);
								ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SendClientMessage(playerid, COLOR_WHITE, "Чтобы расковать игрока введите {33AA33}/uncuff");
								SendClientMessage(playerid, COLOR_WHITE, "Чтобы взять игрока под конвой введите {33AA33}/gotome");
								CuffedPlayer(cuffid, 0);
							}
						}
						else CancelCuff(playerid);
					}
					else CancelCuff(playerid);
				}
				else CancelCuff(playerid);
			}
		}
		if(Timerak[playerid]>0)
		{
			Timerak[playerid]--;
			format(str, sizeof(str), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~b~Wait %d Sec",Timerak[playerid]);
			GameTextForPlayer(playerid, str, 1000, 3);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
			if(Timerak[playerid]==0)
			{
				new Float:x, Float:y, Float:z;
				for(new i;i<MAX_NARKO;i++)
				{
					if(ddrugs[i]!=-1)
					{
						GetDynamicObjectPos(ddrugs[i],x,y,z);
						if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
						{
							if(ddTimer[i]==0)
							{
								DestroyDynamicObject(ddrugs[i]);
								DestroyDynamic3DTextLabel(ddText[i]);
								ddTimer[i]=0;
								ddrugs[i]=-1;

								new u=2+random(12);
								format(string,sizeof(string),"Выкопал куст конопли +%d",u);
								SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);

								format(string,sizeof(string),"Narko +%d",u);
								GameTextForPlayer(playerid, string, 0, 1);

								SlotValue[playerid][14]+=u;
							}
							else
							{
								DestroyDynamicObject(ddrugs[i]);
								DestroyDynamic3DTextLabel(ddText[i]);
								ddTimer[i]=0;
								ddrugs[i]=-1;
								SetPlayerChatBubble(playerid, "Вырвал несозревший саженец из земли", COLOR_PURPLE, 10.0, 5000);
								SendClientMessage(playerid,COLOR_ORANGE,"Вы вырвали саженец конопли из земли");
								GameTextForPlayer(playerid, "torned", 0, 1);
							}
						}
					}
				}
			}
		}
		GrandEndOK=12;
		if(PlayerInfo[playerid][pbydilnik]>0)
		{
			PlayerInfo[playerid][pbydilnik]--;
			format(string,sizeof(string),"%d",PlayerInfo[playerid][pbydilnik]);
			PlayerTextDrawSetString(playerid,bydilnik[playerid], string); //дыра
			if(PlayerInfo[playerid][pbydilnik]==0)
			{
				format(string,sizeof(string),"{7396FB}Установленый вами таймер закончил работу!\nВремя остановки {7396FB}%d:%d:%d\n\n",hour,minuite,second);
				ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
				TextDrawHideForPlayer(playerid,kryg);
				DestroyPlayerTD(playerid, bydilnik[playerid]);
				SetPlayerChatBubble(playerid, "Издает звук будильника", COLOR_PURPLE, 10.0, 5000);
			}
		}
		if(Fullness[playerid] > 2 && Crack[playerid] && !CuffedTime[playerid] && !Cuffed[playerid])
		{
			Crack[playerid] = false;
			TogglePlayerControllable(playerid,true);
			ClearAnimations(playerid);
		}
		if(PlayerAFK[playerid] == 0 || GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
		{
			PlayerAFKTime[playerid][0] ++;
			OnlineInfo[playerid][lPause]++;
			if(PlayerAFKTime[playerid][0] <= MAX_AFK_TIME) format(string,sizeof(string),"Задумался |{7396FB} %s",Convert(PlayerAFKTime[playerid][0]));
			else format(string,sizeof(string),"Уснул |{CC3B12} 5:00+");
			SetPlayerChatBubble(playerid, string, COLOR_WHITE, 30.0, 3000);
		}
		PlayerAFK[playerid] = 0;
		if(Recuffer[playerid]!=INVALID_PLAYER_ID)
		{
			new Float:x,Float:y,Float:z;
			GetPlayerPos(Recuffer[playerid],x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 50, x, y, z))
			{
				cuffer[playerid]++;
				format(str, sizeof(str), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~%d/~g~10",cuffer[playerid]);
				GameTextForPlayer(playerid, str, 1200, 3);

				if(cuffer[playerid]>=10)
				{
					if(IsPlayerConnected(Recuffer[playerid]))SendClientMessage(Recuffer[playerid],COLOR_GRAY," Вы отошли слишком далеко от игрока которого сковали");
					Cuffed[playerid] = false;
					CuffedTime[playerid] = 0;
					TogglePlayerControllable(playerid,true);
					SetPlayerSpecialAction(playerid, 0);
					ClearAnims(playerid);
					SendInfo(playerid,"Вы избавились от наручников");
					CheckPlayerGoCuff(Recuffer[playerid]);
					CheckPlayerGoCuff(playerid);
				}
			}
			else if(cuffer[playerid]>0)cuffer[playerid]--;
		}
		GrandEndOK=13;
		if(PlayerInfo[playerid][pMaskON]>0)
		{
			PlayerInfo[playerid][pMaskON]--;
			if(PlayerInfo[playerid][pMaskON]==0)
			{
				if(TeamDuty[playerid]) SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
				else SetPlayerColor(playerid,0xEFEFF710);
				SendClientMessage(playerid,COLOR_BLUE,"[Информация] {FFFFFF}Время действия маски истекло, вам пришлось ее выбросить");
				SetPlayerChatBubble(playerid, "Выбросил маску", COLOR_PURPLE, 10.0, 5000);
			}
		}
		GrandEndOK=15;
		new job = PlayerInfo[playerid][pJob];
		if((job == 17)&& InJob[playerid]==3) CarryAnim(playerid);
		if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK && ADuty[playerid] != 228)
		{
			format(str,sizeof(str),"Игрок %s кикнут за использование JetPack",Name(playerid));
			SendAdminsMessage(COLOR_LIGHTRED,str,1);
			ToCheat(1,playerid);
		}
		if(SlotValue[playerid][0]<0)
		{
			SetPlayerMoney(playerid, 0);
			SendClientMessage(playerid, COLOR_RED, "Были кикнуты за использование багов");
			format(str,sizeof(str),"< Money > %s[%d] был замечен в использовании бага и кикнут",Name(playerid),playerid);
			SendAdminsMessage(COLOR_RED,str,1);
			J_Kick(playerid);
		}
		if(CreteBomb[playerid]>0 && CreteBomb[playerid] < 100 )
		{
			CreteBomb[playerid]--;
			format(str, sizeof(str), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Creating %d Sec",CreteBomb[playerid]);
			GameTextForPlayer(playerid, str, 1000, 3);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
			SetPlayerChatBubble(playerid, "Делает подозрительный предмет", COLOR_PURPLE, 10.0, 5000);
			if(CreteBomb[playerid]==0)
			{
				SendError(playerid,"Вы сделали бомбу, будьте осторожны, не прыгайте");
				SetPlayerAttachedObjectEx(playerid, 6, 1279, 5, 0.05, 0.24, 0.2, 104, 10, 75);
				CreteBomb[playerid]=250;
				PlayerInfo[playerid][pBomb]=1;
				CarryAnim(playerid);
			}
		}
		if(BusTime[playerid] > 0)
		{
			BusTime[playerid]--;
			strring = "";
			format(strring,10,"~r~%d", BusTime[playerid]);
			GameTextForPlayer(playerid,strring,1000,6);
			if(BusTime[playerid] <= 1) endrabavt(playerid);
		}
		GrandEndOK=6004;
		new Float:Health;
		if(Smoke[playerid] == 1)
		{
			if(SmokeTime[playerid] > 0)
			{
				SmokeTime[playerid] --;
				if(!SmokeTime[playerid])
				{
					GetPlayerHealth(playerid, Health);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
					if(Health+5 < MAX_PLAYER_HEALTH(playerid)) J_SetPlayerHealth(playerid,Health+5);
					if(Smokes[playerid] >= 4)
					{
						format(string,sizeof(string),"%s[%d] докурил(а) сигарету и выбросил(а) окурок",PlayerName[playerid],playerid);
						ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SmokeTime[playerid] = 0;
						Smokes[playerid] = 0;
						Smoke[playerid] = 0;
					}
					else
					{
						Smokes[playerid] ++;
						SmokeTime[playerid] = 10;
						format(string,sizeof(string),"%s[%d] стряхнул(а) пепел",PlayerName[playerid],playerid);
						ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		GrandEndOK=6009;
		if(medlomka[playerid]>0 && IsPlayerInRangeOfPoint(playerid, 100.0,2065.5859,-1374.3174,1001.2960))
		{
			medlomka[playerid]--;
			format(string,sizeof(string),"Wait you healing: %d",medlomka[playerid]);
			GameTextForPlayer(playerid, string, 700, 3);
			if(lomanim[playerid]==0)
			{
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
				format(string,sizeof(string),"Лечится от наркозависимости");
				SetPlayerChatBubble(playerid, string, COLOR_VALIK, 10.0, 5000);
			}
			new meda = medlomka[playerid];
			if(meda== 200 || meda== 140 || meda== 100 || meda== 50 ||
					meda== 20)
			{
				SendClientMessage(playerid,COLOR_VALIK,"Лечениe немного вам помогло. Держитесь");
				if(PlayerInfo[playerid][pAllRepl]>=4) PlayerInfo[playerid][pAllRepl]-=4;
				else if(PlayerInfo[playerid][pAllRepl]>=1) PlayerInfo[playerid][pAllRepl]-=1;
			}
			if(medlomka[playerid]==180 || medlomka[playerid]==95) lomanim[playerid]=7;
			if(lomanim[playerid]>0)
			{
				if(lomanim[playerid]==7) SeccureAnimation(playerid, "FOOD", "EAT_Vomit_P");//рыгаем
				format(string,sizeof(string),"Рвота от лекарства");
				SetPlayerChatBubble(playerid, string, COLOR_RED, 10.0, 5000);
				lomanim[playerid]--;
			}
			if(medlomka[playerid]==0)
			{
				SendClientMessage(playerid,COLOR_VALIK,"Вы прошли сеанс лечения от наркозависимости");
				Stopenanim(playerid);
			}
		}
		GrandEndOK=6010;
		if(AntiCheatOFF[playerid][VEH_ROOT_HACK] > 0) AntiCheatOFF[playerid][VEH_ROOT_HACK] --;
		if(OGReset[playerid] > 0) OGReset[playerid] --;
		if(TextReset[playerid] > 0) TextReset[playerid] --;
		if(CuffedTime[playerid] > 0)
		{
			CuffedTime[playerid] --;
			ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
			if(CuffedTime[playerid] <= 0)
			{
				new tazer = TazerPlayer[playerid];
				if(tazer != INVALID_PLAYER_ID)
				{
					TazerPlayer[playerid] = INVALID_PLAYER_ID;
					TazerPlayer[tazer] = INVALID_PLAYER_ID;
				}
			}
		}
		GrandEndOK=6011;
		if(NoEnterPickup[playerid] > 0)
		{
			NoEnterPickup[playerid] --;
			if(NoEnterPickup[playerid]==0)
			{
				TogglePlayerControllable(playerid,true);
				if(spaned[playerid]==0)ReloadAllAnims(playerid);
			}
		}
		if(PlayerInfo[playerid][pSecond]>0)
		{
			PlayerInfo[playerid][pSecond]--;
			format(string,sizeof(string),"{750F0F}ВНИМАНИЕ!\n\n\n{FAAC58}Уважаемый %s!\n{FFFFFF}Настоятельно рекомендуем сменить пароль от вашего аккаунта дабы обезопасить ваше игровое имущество.\nНе пытайтесь проигнорить это сообщение, это очень важная проблема в вашем аккауте!\n{E9D100}Чтобы сменить пароль используйте /passwd\n\n\n{FFFFFF}Ожидайте {E9D100}%d{FFFFFF} секунд",PlayerName[playerid],PlayerInfo[playerid][pSecond]);
			ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
			if(PlayerInfo[playerid][pSecond]==0)
			{
				format(string,sizeof(string),"{750F0F}ВНИМАНИЕ!\n\n\n{FAAC58}Уважаемый %s!\n{FFFFFF}Настоятельно рекомендуем сменить пароль от вашего аккаунта дабы обезопасить ваше игровое имущество.\nНе пытайтесь проигнорить это сообщение, это очень важная проблема в вашем аккауте!\n{E9D100}Чтобы сменить пароль используйте /passwd\n\n\n{FFFFFF}Нажмите Enter чтобы закрыть окно",PlayerName[playerid]);
				ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
			}
		}
		
		GrandEndOK=6012;
		if(PlayerInfo[playerid][pHeal] > 0)
		{
			PlayerInfo[playerid][pHealTime] ++;
			if(PlayerInfo[playerid][pHealTime] >= (8+random(3)))
			{
				Health=PlayerInfo[playerid][pHealth];
				if(!PlayerLie[playerid])
				{
					if(PlayerInfo[playerid][pVIP]>=2)
					{
						Health += 2.0;
						GameTextForPlayer(playerid, "~g~+2 HP", 2000, 6);
					}
					else
					{
						GameTextForPlayer(playerid, "~g~+1 HP", 2000, 6);
						Health += 1.0;
					}
				}
				else
				{
					if(PlayerInfo[playerid][pVIP]>=2)
					{
						GameTextForPlayer(playerid, "~g~+4 HP", 2000, 6);
						Health += 4.0;
					}
					else
					{
						GameTextForPlayer(playerid, "~g~+2 HP", 2000, 6);
						Health += 2.0;
					}
				}
				if(TalentsInfo[playerid][0][0] == 2){
					switch(random(4)){
					case 0:
						{ 
							GameTextForPlayer(playerid, "~g~+2 HP (talent)", 2000, 1);
							Health += 2.0;
						}
					}
				}
				if(TalentsInfo[playerid][3][0] == 3){
					switch(random(10)){
					case 7:
						{
							GiveFullness(playerid, 1);
							GameTextForPlayer(playerid, "~g~+1 satiety (talent)", 1, 1);
						}
					}
				}
				if(QuestProgress[playerid][6] < QI[6][LastProgress] && AcceptQuest[playerid][6] == 1)QuestProgress[playerid][6] += 2;
				if(QuestProgress[playerid][6] >= QI[6][LastProgress] && QuestProgress[playerid][6] < 10000){
					PlayerInfo[playerid][pTalents][0]++;
					SendInfo(playerid, "У Вас появились новые очки талантов");
					QuestProgress[playerid][6] = 10000;
				}
				J_SetPlayerHealth(playerid,Health);
				if(PlayerInfo[playerid][pHealth] >= MAX_PLAYER_HEALTH(playerid))
				{
					if(PlayerLie[playerid])
					{
						ClearAnims(playerid);
						CheckBed(playerid);
					}
					PlayerInfo[playerid][pHeal] = 0;
					PlayerInfo[playerid][pCheepses]=0;
					J_SetPlayerHealth(playerid,MAX_PLAYER_HEALTH(playerid));
					ResetSpawnInfo(playerid, GetTeamID(playerid));
					TogglePlayerControllable(playerid,true);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы закончили своё лечение");
					if(QuestProgress[playerid][4] < QI[4][LastProgress] && AcceptQuest[playerid][4] == 1)QuestProgress[playerid][4] ++;
					if(QuestProgress[playerid][4] >= QI[4][LastProgress] && QuestProgress[playerid][4] < 10000){
						PlayerInfo[playerid][pTalents][0]++;
						SendInfo(playerid, "У Вас появились новые очки талантов");
						QuestProgress[playerid][4] = 10000;
					}
				}
				PlayerInfo[playerid][pHealTime] = 0;
			}
			GrandEndOK=6012;
		}
		else
		{
			if(PlayerInfo[playerid][pJailTime] > 0)
			{
				PlayerInfo[playerid][pJailTime] --;
				if(!PlayerInfo[playerid][pJailTime])
				{
					SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы отсидели свой срок и были выпущены");
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					switch(random(3))
					{
					case 0:
						{
							J_SetPlayerPos(playerid,611.0152,-585.7537,17.2266);
							SetPlayerFacingAngle(playerid, 270);
						}
					case 1:
						{
							J_SetPlayerPos(playerid,2286.7205,2429.0698,10.8203);
							SetPlayerFacingAngle(playerid, 181.2884);
						}
					case 2:
						{
							J_SetPlayerPos(playerid,-1606.1509,713.7501,13.2902);
							SetPlayerFacingAngle(playerid, 359.7803);
						}
					}
					PlayerInfo[playerid][pBailPrice] = 0;
					new org = GetTeamID(playerid);
					SetCameraBehindPlayer(playerid);
					SetPlayerSkinEx(playerid,GetSkinOfPlayer(playerid));
					ResetSpawnInfo(playerid, org);
				}
			}
			GrandEndOK=6013;
			if(PlayerInfo[playerid][pView] > 0)
			{
				PlayerInfo[playerid][pView] --;
				format(str, sizeof(str), "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Jailed %s",Convert(PlayerInfo[playerid][pView]));
				GameTextForPlayer(playerid, str, 1200, 3);
				if(!IsPlayerInRangeOfPoint(playerid, 250.0, 2200.0, 2500.0, 1489.0)) PlayerSpawn(playerid);
				if(!PlayerInfo[playerid][pView])
				{
					SendClientMessage(playerid,COLOR_VALIK,"Вы были выпущены из деморгана");
					PlayerSpawn(playerid);
				}
			}
			if(GetPVarInt(playerid, "StoWaiting"))
			{
				new i = GetPVarInt(playerid, "StoWaiting")-1;
				if(!IsPlayerInRangeOfPoint(playerid, 40.0, TuningInfo[i][stoGarageEx][0], TuningInfo[i][stoGarageEx][1], TuningInfo[i][stoGarageEx][2]))
				{
					DeletePVar(playerid, "StoWaiting");
					TuningInfo[i][stoWait] = false;
					SetVehiclePos(carid, TuningInfo[i][stoGarage][0], TuningInfo[i][stoGarage][1], TuningInfo[i][stoGarage][2]);
					SetVehicleZAngle(carid, TuningInfo[i][stoGarage][3]);
					SetVehicleVirtualWorld(carid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					CancelSelectTextDraw(playerid);
					ModCar(carid);
				}
			}
		}
		GrandEndOK=6014;
		if(PlayerInfo[playerid][pMuteTime] > 0)
		{
			PlayerInfo[playerid][pMuteTime] --;
			if(!PlayerInfo[playerid][pMuteTime]) SendClientMessage(playerid,COLOR_VALIK,"Вы были автоматически разглушены сервером");
		}
		if(PlayerInfo[playerid][pFMuteTime] > 0)
		{
			PlayerInfo[playerid][pFMuteTime] --;
			if(!PlayerInfo[playerid][pFMuteTime]) SendClientMessage(playerid,COLOR_VALIK,"Вы были автоматически разглушены сервером");
		}
		GrandEndOK=6015;
	}
	else if(!IsPlayerLogged[playerid] && !IsPlayerNPC(playerid))
	{
		GrandEndOK=19;
		if(DRotTick[playerid]>0)
		{
			DRotTick[playerid]--;
			if(DRotTick[playerid]==0)
			{
				SendError(playerid,"Вы были кикнуты за бездействие при авторизации");
				J_Kick(playerid);
			}
		}
	}
	return true;
}
forward SecondTimer(playerid);
public SecondTimer(playerid)
{
	if(IsPlayerLogged[playerid])
	{
		new string[1024];
		new str[128];
		new weapons[13][2];
		new hour, minuite, second;
		gettime(hour, minuite, second);
		if(!PlayerInfo[playerid][pAdmin])UpdatePosition(playerid);
		iNewPlayerAmmo[playerid] = GetPlayerAmmo(playerid);
		if(iNewPlayerAmmo[playerid] != iPlayerAmmo[playerid])
		{
			OnPlayerAmmoChange(playerid, iNewPlayerAmmo[playerid], iPlayerAmmo[playerid]);
			iPlayerAmmo[playerid] = iNewPlayerAmmo[playerid];
		}
		if(!(IsPlayerToKvadrat(playerid, -2612, 1587, -1938, 2195)) && PlayerInfo[playerid][pJailTime])SpawnPlayer(playerid);
		if(PlayerInfo[playerid][FamilyID] != -1)
		{
			if(FPlayerText[playerid] == false)
			{
				new str11[128],fammmm[16];
				switch(FamilyInfo[playerid][famAmount])
				{
				case 1..10:fammmm = "Family";
				case 11..25:fammmm = "Group";
				case 26.. 50:fammmm = "Community";
				case 51..150:fammmm = "Gang";
				case 151..250:fammmm = "Corporation";
				case 251..3500:fammmm = "Industries";
				}
				format(str11,sizeof(str11),"{%s}%s {ffffff}%s",GetFamColor(playerid),FamilyInfo[playerid][famName],fammmm);
				PlayerFamily[playerid] = Create3DTextLabel(str11,-1,0.0,0.0,0.0,20.0,0,1);
				Attach3DTextLabelToPlayer(PlayerFamily[playerid],playerid,0.0,0.0,0.05);
				FPlayerText[playerid] = true;
			}
		}
		if(FPlayerText[playerid] == true && PlayerInfo[playerid][FamilyID] == -1)
		{
			Delete3DTextLabel(PlayerFamily[playerid]);
			FPlayerText[playerid] = false;
		}
		if(OldDialogID[playerid] != INVALID_DIALOG_ID)TogglePlayerControllable(playerid, false);
		if(!GetPlayerSkin(playerid))SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
		if((minuite == 12 || minuite == 25 || minuite == 33 || minuite == 41 || minuite == 58) && second == 15)SendClientMessage(playerid, COLOR_LIGHTGREEN, "Посмотреть список игроков, которые указали вас, как пригласившего на сервер, вы можете через {0099ff}'/referals'");
		if(GetPVarInt(playerid, "CodeActivated"))
		{
			SetPVarInt(playerid, "CodeActivated", GetPVarInt(playerid, "CodeActivated") - 1);
			if(!GetPVarInt(playerid, "CodeActivated"))
			{
				DeletePVar(playerid, "CodeActivated");
				SendError(playerid,"Время на прохождение авторизации вышло");
				return J_Kick(playerid);
			}
		}
		if(GetPlayerDistanceFromPoint(playerid, -1869.8385,-1669.6050,21.7500) > 200 && !GetPlayerInterior(playerid) && InJob[playerid] && PlayerInfo[playerid][pJob] == 24){
			InJob[playerid] = 0;
			SetPlayerSkinEx(playerid, PlayerInfo[playerid][pOldSkin]);
			SendClientMessage(playerid,COLOR_VALIK,"[Информация]{FFFFFF} Вы закончили работу");
			if(InJob[playerid]==3)RemovePlayerAttachedObjectEx(playerid, 6);
			ferman[playerid] = 0;
		}
		GrandEndOK=6;
		NoRoof(playerid);
		AntiMoneyCheat(playerid);
		GrandEndOK=7;
		new carid = GetPlayerVehicleID(playerid),tmpcar = GetPlayerVehicleID(playerid);
		GrandEndOK=9;
		GrandEndOK=10;
		/////АНТИЧИТ ВАЛИКА
		new weap = GetPlayerWeapon(playerid);
		new slot = GetWeaponSlot(weap);
		//if(UsePlayerPedAnims(playerid) && IsPlayerLogged[playerid]) PlayerSpawn(playerid);
		if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID)
		{
			new goid = GotoInfo[playerid][gtGoID];
			if(IsPlayerConnected(goid) && IsPlayerLogged[goid])
			{
				new Float:xX, Float:xY, Float:xZ,Float:agle;
				GetPlayerPos(goid, xX, xY, xZ);
				GetPlayerFacingAngle(playerid, agle);
				if(!IsPlayerInRangeOfPoint(playerid, 20, xX, xY, xZ))
				{
					SetPlayerInterior(playerid,GetPlayerInterior(goid));
					SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(goid));
					NoEnterPickup[playerid] =2;
					J_SetPlayerFacingAngle(playerid,agle);
					J_SetPlayerPos(playerid, xX,xY,xZ);
				}
				if(GetPlayerState(goid)==1)
				{
					new ANIMATION;
					if(GotoInfo[goid][gtTPX] != 0.0 || GotoInfo[goid][gtTPY] != 0.0)
					{
						SetPlayerFaceToPoint(playerid, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY]);
						ANIMATION = GoPlayerAnimation(playerid, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY], GotoInfo[goid][gtTPZ]);
					}
					else
					{
						TurnPlayerFaceToPlayer(playerid, goid);
						ANIMATION = GoPlayerAnimation(playerid, xX, xY, xZ);
					}
					if(ANIMATION != 1)
					{
						if(IsPlayerInRangeOfPoint(playerid, 0.05, GotoInfo[playerid][gtX], GotoInfo[playerid][gtY], GotoInfo[playerid][gtZ]))
						{
							GotoInfo[playerid][gtStayed] ++;
							if(GotoInfo[playerid][gtStayed] >= 10)
							{
								new Float:xA;
								GetPlayerPos(playerid, xX, xY, xZ);
								GetPlayerFacingAngle(playerid, xA);
								ShiftCords(0, xX, xY, xA, 1.5);
								J_SetPlayerPos(playerid, xX, xY, xZ);
								GotoInfo[playerid][gtStayed] = 0;
							}
						}
						else GotoInfo[playerid][gtStayed] = 0;
						GetPlayerPos(playerid, GotoInfo[playerid][gtX], GotoInfo[playerid][gtY], GotoInfo[playerid][gtZ]);
					}
				}
			}
			else
			{
				GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
				GotoInfo[playerid][gtX] = 0.0;
				GotoInfo[playerid][gtY] = 0.0;
				GotoInfo[playerid][gtZ] = 0.0;
			}
		}
		GrandEndOK=10;
		if(TimetoReturn[playerid]>0)
		{
			new carsid = pTemp[playerid][pArendaCar];
			if(carsid!=0)
			{
				TimetoReturn[playerid]--;
				format(str, sizeof(str), "~p~%s",Convert(TimetoReturn[playerid]));
				GameTextForPlayer(playerid, str, 1000, 4);
				if(TimetoReturn[playerid]==0)
				{
					GetVehicleHealth(carsid,VehicleHealth[carsid] );
					if(VehicleHealth[carsid]<700)
					{
						new money = floatround(1000.0-VehicleHealth[carsid]);
						if(SlotValue[playerid][0]>=money)
						{
							GiveMoney(playerid,-money);
							format(string,sizeof(string),"Вы заплатили {FFFFFF}$%d{7396FB} за порчу государственного имущества! {FFFFFF}(( {7396FB}Вы сильно побили машину{FFFFFF} ))",money);
							SendClientMessage(playerid,COLOR_LIGHTRED,string);
						}
						else if(PlayerInfo[playerid][pBank]>=money)
						{
							GiveBankMoney(playerid,-money);
							format(string,sizeof(string),"С банковского счета было изьято {FFFFFF}$%d{7396FB} за порчу гос. имущества! {FFFFFF}(( {7396FB}Вы сильно побили машину{FFFFFF} ))",money);
							SendClientMessage(playerid,COLOR_LIGHTRED,string);
						}
						else if(PlayerInfo[playerid][pZKP]>=10)
						{
							PlayerInfo[playerid][pZKP]-=10;
							SendClientMessage(playerid,COLOR_LIGHTRED,"У вас не достаточно денег чтобы заплатить за разбитое авто. Ваша законопослушность была снижена");
						}
					}

					switch(VehicleInfo[carsid][vJob])
					{
					case 1: endrabavt(playerid);
					case 11:
						{
							new vehsid = GetVehicleTrailer(carsid);
							SetVehicleToRespawn(vehsid);
							SetVehicleToRespawn(carsid);
						}
					default: SetVehicleToRespawn(carsid);
					}
					pTemp[playerid][pArendaCar] = -1;
					SendInfo(playerid,"Ваш рабочий транспорт был отбуксирован на стоянку");
				}
			}
		}
		GrandEndOK=11;
		/////
		if(PlayerInfo[playerid][pONPhoneTalk]>0)
		{
			PlayerInfo[playerid][pONPhoneTalk]++;
			format(string,sizeof(string),"%s",Convert(PlayerInfo[playerid][pONPhoneTalk]));
			PlayerTextDrawSetString(playerid,calltime[playerid], string);
		}
		GrandEndOK=14;
		new weapon = GetPlayerWeapon(playerid);
		new ammo = GetPlayerAmmo(playerid);
		if(gunmute[playerid]<=gettime())
		{
			if(weapon>0)
			{
				if(weap!=46)
				{
					if(WeaponInfo[playerid][weap] == false && weap != 0) ToCheat(1,playerid),SendClientMessage(playerid,-1,"[1]");
					for (new sg = 0; sg <= 12; sg++) GetPlayerWeaponData(playerid, sg, weapons[sg][0], weapons[sg][1]);
					if(weapons[slot][1] > 0)
					{
						if(weapons[slot][1] > AmmoInfo[playerid][weap])  ToCheat(1,playerid),SendClientMessage(playerid,-1,"[2]");
						else if(weapons[slot][1] < AmmoInfo[playerid][weap])
						{
							AmmoInfo[playerid][weap] = weapons[slot][1];
							PlayerInfo[playerid][pAmmos][slot] = weapons[slot][1];
						}
						if(AmmoInfo[playerid][weap] <= 0) WeaponInfo[playerid][weap] = false;
						if(AmmoInfo[playerid][weap] < 0) ToCheat(1,playerid),SendClientMessage(playerid,-1,"[3]");
					}
				}
			}
			if(weapon == 4 || weapon == 37 || weapon == 36 || weapon == 35 || weapon == 39 || weapon == 36 || weapon == 16 || weapon == 18 || weapon == 38 || weapon == 44 || weapon == 45)
			{
				_ResetGun(playerid);
				ToCheat(1,playerid);
			}
			if(PlayerInfo[playerid][pGuns][GetWeaponSlot(weapon)] == weapon && PlayerInfo[playerid][oInTir]==0)
			{
				if(PlayerInfo[playerid][pAmmos][slot]==ammo)
				{
					PlayerInfo[playerid][pLastGun]=weapon;
					PlayerInfo[playerid][pLastAmmo]= ammo;
				}
			}
		}
		GrandEndOK=16;
		if(PlayerInfo[playerid][pAskBan]!=22 && PlayerInfo[playerid][pGetBonus]!=1)
		{
			if(GetPlayerCameraMode(playerid) == 53)
			{
				new Float:kLibPos[3];
				GetPlayerCameraPos(playerid, kLibPos[0], kLibPos[1], kLibPos[2]);
				if ( kLibPos[2] < -50000.0 || kLibPos[2] > 50000.0 )ToCheat(1,playerid);
			}
		}
		if(TimeBus[playerid] > 0)
		{
			TimeBus[playerid]--;
			GameTextForPlayer(playerid, IntToStr(TimeBus[playerid]), 1200, 6);
			if(TimeBus[playerid] <= 0)
			{
				TimeBus[playerid]=0;
				switch(Vehs[playerid][vReis])
				{
				case 1: SetPlayerRaceCheckpoint(playerid,BusCityLS[pPressed[playerid]][BUSSTATION1],BusCityLS[pPressed[playerid]][BUS_COORD1][0],BusCityLS[pPressed[playerid]][BUS_COORD1][1],BusCityLS[pPressed[playerid]][BUS_COORD1][2],BusCityLS[pPressed[playerid]+1][BUS_COORD1][0],BusCityLS[pPressed[playerid]+1][BUS_COORD1][1],BusCityLS[pPressed[playerid]+1][BUS_COORD1][2],10.0);
				case 2: SetPlayerRaceCheckpoint(playerid,BusFarm[pPressed[playerid]][BUSSTATION2],BusFarm[pPressed[playerid]][BUS_COORD2][0],BusFarm[pPressed[playerid]][BUS_COORD2][1],BusFarm[pPressed[playerid]][BUS_COORD2][2],BusFarm[pPressed[playerid]+1][BUS_COORD2][0],BusFarm[pPressed[playerid]+1][BUS_COORD2][1],BusFarm[pPressed[playerid]+1][BUS_COORD2][2],10.0);
				case 3: SetPlayerRaceCheckpoint(playerid,BusZav[pPressed[playerid]][BUSSTATION3],BusZav[pPressed[playerid]][BUS_COORD3][0],BusZav[pPressed[playerid]][BUS_COORD3][1],BusZav[pPressed[playerid]][BUS_COORD3][2],BusZav[pPressed[playerid]+1][BUS_COORD3][0],BusZav[pPressed[playerid]+1][BUS_COORD3][1],BusZav[pPressed[playerid]+1][BUS_COORD3][2],10.0);
				case 4: SetPlayerRaceCheckpoint(playerid,BusAvto[pPressed[playerid]][BUSSTATION4],BusAvto[pPressed[playerid]][BUS_COORD4][0],BusAvto[pPressed[playerid]][BUS_COORD4][1],BusAvto[pPressed[playerid]][BUS_COORD4][2],BusAvto[pPressed[playerid]+1][BUS_COORD4][0],BusAvto[pPressed[playerid]+1][BUS_COORD4][1],BusAvto[pPressed[playerid]+1][BUS_COORD4][2],10.0);
				case 5: SetPlayerRaceCheckpoint(playerid,BusLv[pPressed[playerid]][BUSSTATION5],BusLv[pPressed[playerid]][BUS_COORD5][0],BusLv[pPressed[playerid]][BUS_COORD5][1],BusLv[pPressed[playerid]][BUS_COORD5][2],BusLv[pPressed[playerid]+1][BUS_COORD5][0],BusLv[pPressed[playerid]+1][BUS_COORD5][1],BusLv[pPressed[playerid]+1][BUS_COORD5][2],10.0);
				case 6: SetPlayerRaceCheckpoint(playerid,BusLvv[pPressed[playerid]][BUSSTATION6],BusLvv[pPressed[playerid]][BUS_COORD6][0],BusLvv[pPressed[playerid]][BUS_COORD6][1],BusLvv[pPressed[playerid]][BUS_COORD6][2],BusLvv[pPressed[playerid]+1][BUS_COORD6][0],BusLvv[pPressed[playerid]+1][BUS_COORD6][1],BusLvv[pPressed[playerid]+1][BUS_COORD6][2],10.0);
				case 7: SetPlayerRaceCheckpoint(playerid,BusLvvv[pPressed[playerid]][BUSSTATION7],BusLvvv[pPressed[playerid]][BUS_COORD7][0],BusLvvv[pPressed[playerid]][BUS_COORD7][1],BusLvvv[pPressed[playerid]][BUS_COORD7][2],BusLvvv[pPressed[playerid]+1][BUS_COORD7][0],BusLvvv[pPressed[playerid]+1][BUS_COORD7][1],BusLvvv[pPressed[playerid]+1][BUS_COORD7][2],10.0);
				case 8: SetPlayerRaceCheckpoint(playerid,bussf[pPressed[playerid]][BUSSTATION8],bussf[pPressed[playerid]][BUS_COORD8][0],bussf[pPressed[playerid]][BUS_COORD8][1],bussf[pPressed[playerid]][BUS_COORD8][2],bussf[pPressed[playerid]+1][BUS_COORD8][0],bussf[pPressed[playerid]+1][BUS_COORD8][1],bussf[pPressed[playerid]+1][BUS_COORD8][2],10.0);
				case 9: SetPlayerRaceCheckpoint(playerid,buslvsf[pPressed[playerid]][BUSSTATION9],buslvsf[pPressed[playerid]][BUS_COORD9][0],buslvsf[pPressed[playerid]][BUS_COORD9][1],buslvsf[pPressed[playerid]][BUS_COORD9][2],buslvsf[pPressed[playerid]+1][BUS_COORD9][0],buslvsf[pPressed[playerid]+1][BUS_COORD9][1],buslvsf[pPressed[playerid]+1][BUS_COORD9][2],10.0);
				case 10: SetPlayerRaceCheckpoint(playerid,bussfsf[pPressed[playerid]][BUSSTATION10],bussfsf[pPressed[playerid]][BUS_COORD10][0],bussfsf[pPressed[playerid]][BUS_COORD10][1],bussfsf[pPressed[playerid]][BUS_COORD10][2],bussfsf[pPressed[playerid]+1][BUS_COORD10][0],bussfsf[pPressed[playerid]+1][BUS_COORD10][1],bussfsf[pPressed[playerid]+1][BUS_COORD10][2],10.0);
				case 11: SetPlayerRaceCheckpoint(playerid,bussffa[pPressed[playerid]][BUSSTATION11],bussffa[pPressed[playerid]][BUS_COORD11][0],bussffa[pPressed[playerid]][BUS_COORD11][1],bussffa[pPressed[playerid]][BUS_COORD11][2],bussffa[pPressed[playerid]+1][BUS_COORD11][0],bussffa[pPressed[playerid]+1][BUS_COORD11][1],bussffa[pPressed[playerid]+1][BUS_COORD11][2],10.0);
				}
			}
		}
		GrandEndOK=17;
		if(SlotValue[playerid][0] < 1000000)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, 9))
			RemovePlayerAttachedObject(playerid,9);
		}
		else if(SlotValue[playerid][0] >= 1000000 && PlayerInfo[playerid][pCase])
		{
			if(!IsPlayerAttachedObjectSlotUsed(playerid, 9))
			{
				switch(PlayerInfo[playerid][pCCase])
				{
				case 0:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);//default
				case 1:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFF0042E8);//blue
				case 2:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFFFF33E7);//pink
				case 3:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFF00FF6F);//green
				case 4:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFFFFCD00);//gold
				case 5:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFF00F2FF);//skiey
				case 6:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFFA800FC);//purple
				case 7:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFFD94141);//red
				case 8:SetPlayerAttachedObject(playerid,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000, 0xFF000000);//black
				}
			}
		}
		if(GetPlayerArmourEx(playerid)>0 && PlayerInfo[playerid][pSlotItem][5] != 19515)
		{
			if(!IsPlayerAttachedObjectSlotUsed(playerid, 8))
			SetPlayerAttachedObject(playerid,8,  19142, 1,0.08,0.04,0.00,0.0,0.0,-7.4);
		}
		else if(IsPlayerAttachedObjectSlotUsed(playerid, 8))RemovePlayerAttachedObject(playerid,8);
		//anticheat by union
		new Float:Health; GetPlayerHealth(playerid, Health);
		if(AntiCheatOFF[playerid][HEALTH_HACK]>0)AntiCheatOFF[playerid][HEALTH_HACK]--;
		if(!AntiCheatOFF[playerid][HEALTH_HACK] && Health > PlayerInfo[playerid][pHealth]) SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
		if(!AntiCheatOFF[playerid][HEALTH_HACK] && Health < PlayerInfo[playerid][pHealth]) PlayerInfo[playerid][pHealth] = Health;
		new Float:Armour;GetPlayerArmour(playerid, Armour);
		if(AntiCheatOFF[playerid][ARMOUR_HACK]>0)AntiCheatOFF[playerid][ARMOUR_HACK]--;
		if(!AntiCheatOFF[playerid][ARMOUR_HACK] && Armour > PlayerInfo[playerid][pArmour]) SetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
		if(!AntiCheatOFF[playerid][ARMOUR_HACK] && Armour < PlayerInfo[playerid][pArmour]) PlayerInfo[playerid][pArmour] = Armour;
		//античит на хп by UniON 2015-02-10
		if(VehicleInfo[tmpcar][vAntiRepair]>0) VehicleInfo[tmpcar][vAntiRepair]--;
		new Float:vehhealth; GetVehicleHealth(tmpcar, vehhealth);
		if(!VehicleInfo[tmpcar][vAntiRepair] && VehicleHealth[tmpcar]<vehhealth)SetVehicleHealth(tmpcar,VehicleHealth[tmpcar]);
		if(!VehicleInfo[tmpcar][vAntiRepair] && VehicleHealth[tmpcar]>vehhealth) VehicleHealth[tmpcar] = vehhealth;
		GrandEndOK=18;
		if(GetPlayerState(playerid) == 2){
			if(IsAOwnableCar(carid)){
				if(TunInfo[GetVehicleID(carid)][nSticker][0] != 0){
					UpdateSticker(carid, 0);
				}
			}
			if(GetPVarInt(playerid,"AntiFloodPerfomence")<gettime()){
				if(GetPlayerVehicleSpeedZ(playerid) < 350 && GetPlayerVehicleSpeedZ(playerid) > 30 && TalentsInfo[playerid][1][1] == 1){
					SetPlayerChatBubble(playerid, "Развивает скорость транспорта (талант)", COLOR_LIGHTBLUE, 10.0, 5000);
					SetVehicleSpeed(GetPlayerVehicleID(playerid),GetPlayerVehicleSpeedZ(playerid)+20);
					SetPVarInt(playerid,"AntiFloodPerfomence",gettime()+2);
				}
			}
			if(PlayerInfo[playerid][pJob] == JOB_TRUCKER && VehicleInfo[carid][vJob] == JOB_TRUCKER)
			{
				if(IsTrailerAttachedToVehicle(carid))
				{
					if(InJob[playerid] == 0)
					{
						new trailer = GetVehicleTrailer(carid);
						if(GetVehicleModelEx(trailer) == 584)
						{
							InJob[playerid] = 1;
							ShowPlayerAZS(playerid);
						}
						else if(GetVehicleModelEx(trailer) == 591)
						{
							InJob[playerid] = 1;
							ShowPlayerGS(playerid);
						}
					}
				}
				else
				{
					if(InJob[playerid] == 1)
					{
						InJob[playerid] = 0;
						FactoryInfo[fMaterials] += 500;
						new gopost = PlayerGoPost[playerid];
						if(PlayerGoPost[playerid]!=-1)
						{
							if(PlayerGoPost[playerid]<20)TogglePlayerDynamicCP(playerid, GoFuelCP[gopost], false);
							if(PlayerGoPost[playerid]<11)TogglePlayerDynamicCP(playerid, GoGunShopCP[gopost], false);
						}
						SendError(playerid,"Груз который вы везете отцепился");
						format(str, sizeof(str), "На продаже {FF9900}%d материалов\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryInfo[fMaterials]);
						UpdateDynamic3DTextLabelText(FactoryText[0], COLOR_WHITE, str);
						PlayerGoPost[playerid]=-1;
						DetachTrailerFromVehicle(carid);
					}
				}
			}
		}
		if(PlayerInfo[playerid][pWarns]>0 && PlayerInfo[playerid][pTimeToLastWarn]+(3600*24*10)<gettime())
		{
			PlayerInfo[playerid][pWarns]--;
			PlayerInfo[playerid][pTimeToLastWarn]=gettime();
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Срок действия одного предупреждения истёк");
		}
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		if(Cuffed[playerid])
		{
			if(!CuffedTime[playerid])
			{
				if(pTemp[playerid][BreakTime] > 0)
				{
					pTemp[playerid][BreakTime] --;
					if(!pTemp[playerid][BreakTime])
					{
						if(pTemp[playerid][BreakCount] < 10)
						{
							SetPlayerRandomKey(playerid, pTemp[playerid][BreakKey], true);
							ShowPlayerActionBand(playerid, pTemp[playerid][BreakCount], 10);
						}
					}
				}
			}
		}
		GrandEndOK=6006;
		if(Spectate[playerid] && SpecAd[playerid] != INVALID_PLAYER_ID)
		{
			new Float:health,Float:hppp,Float:aermor,enginees[4],maxspeed;
			GetVehicleHealth(GetPlayerVehicleID(SpecAd[playerid]),health);
			GetPlayerArmour(SpecAd[playerid],aermor);
			GetPlayerHealth(SpecAd[playerid],hppp);
			if(PlayerAFKTime[SpecAd[playerid]][0] > 0)
			{
				format(string, sizeof(string), "%s[%d]~n~~r~AFK",Name(SpecAd[playerid]),SpecAd[playerid]);
				PlayerTextDrawSetString(playerid, ReconPlayer[6],string);
			}
			else
			{
				format(string, sizeof(string), "%s[%d]",Name(SpecAd[playerid]),SpecAd[playerid]);
				PlayerTextDrawSetString(playerid, ReconPlayer[6],string);
			}
			if(GetPlayerState(SpecAd[playerid]) != PLAYER_STATE_DRIVER)format(enginees,sizeof enginees, "-");
			else if(GetPlayerState(SpecAd[playerid]) == PLAYER_STATE_DRIVER)
			{	
				if(GetEngineStatus(GetPlayerVehicleID(SpecAd[playerid])) == 1) format(enginees,sizeof enginees, "ON");
				else format(enginees,sizeof enginees, "OFF");
				maxspeed = MaxSpeedCar[GetVehicleModelEx(GetPlayerVehicleID(SpecAd[playerid]))-400];
			}
			format(string, sizeof(string), "\
				~n~~w~%d\
				~n~~w~%d\
				~n~~w~%.0f\
				~n~~w~%.0f\
				~n~~w~%.0f\
				~n~~w~%d / %d\
				~n~~w~%d\
				~n~~w~%d : %d\
				~n~~w~%d : %d/%d\
				~n~~w~%d : %d/%d\
				~n~~w~%d\
				~n~~w~%s",
			PlayerInfo[SpecAd[playerid]][pExp],
			PlayerInfo[SpecAd[playerid]][pWarns],
			aermor,
			hppp,
			health,
			SpeedVehicle(SpecAd[playerid]),
			maxspeed,
			GetPlayerPing(SpecAd[playerid]),
			GetPlayerAmmo(SpecAd[playerid]),
			0,
			NumberShot[SpecAd[playerid]],
			NumberShotTarget[SpecAd[playerid]],
			floatround(NumberShot[SpecAd[playerid]]/100)*NumberShotTarget[SpecAd[playerid]],
			TimeNumberShot[SpecAd[playerid]],
			TimeNumberShotTarget[SpecAd[playerid]],
			floatround(TimeNumberShot[SpecAd[playerid]]/100)*TimeNumberShotTarget[SpecAd[playerid]],
			PlayerAFKTime[SpecAd[playerid]][0],enginees);
			PlayerTextDrawSetString(playerid, ReconPlayer[5],string);
		}
		new speed = PlayerSpeed(playerid);
		if(!speed) FullnessTick[playerid] ++;
		else FullnessTick[playerid] += speed/4;
		if(Fullness[playerid] > 0)
		{
			if(FullnessTick[playerid] >= 250)
			{
				GetPlayerHealth(playerid,Health);
				if(PlayerInfo[playerid][pVIP]>=2)Fullness[playerid]--;
				else Fullness[playerid]-=2;
				FullnessTick[playerid] = 0;
				SetFullness(playerid,Fullness[playerid]);
				switch(Fullness[playerid])
				{
				case 1..15: J_SetPlayerHealth(playerid,Health-4);
				case 0:
					{
						J_SetPlayerHealth(playerid,Health-6);
						SetFullness(playerid,5);
						SendClientMessage(playerid,COLOR_ORANGE,"Вы проголодались. Посетите закусочную или купите Хот-Дог (( /gps » Найти поблизости ))");
						if(PlayerInfo[playerid][pHospital]>0)
						{
							PlayerInfo[playerid][pHospital]--;
							SendClientMessage(playerid,COLOR_LIGHTRED,"Если вы долго не будете есть, то упадёте в обморок и попадёте в больницу");
						}

					}
				}

			}
		}
		GrandEndOK=6007;
		if(PlayerInfo[playerid][pAllRepl]>200 && CuffedTime[playerid] ==0 && !Cuffed[playerid])
		{
			if(speed)
			{
				PlayerInfo[playerid][pOldRepl] += speed/35;//доделать
				if((PlayerInfo[playerid][pOldRepl]>=100 && PlayerInfo[playerid][pOldRepl] <=103) || (PlayerInfo[playerid][pOldRepl]>=200 && PlayerInfo[playerid][pOldRepl]<=203) || (PlayerInfo[playerid][pOldRepl]>=300 && PlayerInfo[playerid][pOldRepl]<=303) || (PlayerInfo[playerid][pOldRepl]>=400 && PlayerInfo[playerid][pOldRepl]<=403) ||
						(PlayerInfo[playerid][pOldRepl]>=500 && PlayerInfo[playerid][pOldRepl]<=503) || (PlayerInfo[playerid][pOldRepl]>=600 && PlayerInfo[playerid][pOldRepl]<=603) || (PlayerInfo[playerid][pOldRepl]>=700 && PlayerInfo[playerid][pOldRepl]<=703) || (PlayerInfo[playerid][pOldRepl]>=800 && PlayerInfo[playerid][pOldRepl]<=803))

				{
					f(string, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~need drugs %d/1000", PlayerInfo[playerid][pOldRepl]);
					GameTextForPlayer(playerid, string, 3000, 3);
				}
			}
			if(PlayerInfo[playerid][pOldRepl]>1000 && startlomka[playerid]==0)
			{
				if(PlayerInfo[playerid][pAllRepl]>200 && PlayerInfo[playerid][pAllRepl] <300) PlayerInfo[playerid][pOldRepl] = 200;
				if(PlayerInfo[playerid][pAllRepl]>=300 && PlayerInfo[playerid][pAllRepl] <400) PlayerInfo[playerid][pOldRepl] = 350;
				if(PlayerInfo[playerid][pAllRepl]>=400)PlayerInfo[playerid][pOldRepl] = 500;
				SendClientMessage(playerid, COLOR_RED, "~~~~~~~~ У вас началась ломка ~~~~~~~~");
				SendClientMessage(playerid, COLOR_WHITE, "(( Вызовите медика или примите наркотик (используйте инвентарь) ))");
				if(IsPlayerInAnyVehicle(playerid))RemovePlayerFromVehicle(playerid);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
				startlomka[playerid]=1;
			}
			if(speed && startlomka[playerid]==1) ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
			if(startlomka[playerid]==1 && IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicle(playerid);
			if(startlomka[playerid]==1)
			{
				PlayerInfo[playerid][pOldRepl]--;
				format(string,sizeof(string),"Страдает от ломки");
				SetPlayerChatBubble(playerid, string, COLOR_RED, 10.0, 5000);
				format(string,sizeof(string),"Wait you breaking : %d",PlayerInfo[playerid][pOldRepl]);
				GameTextForPlayer(playerid, string, 700, 3);
			}
			if(PlayerInfo[playerid][pOldRepl]<=0 && startlomka[playerid]==1)
			{
				startlomka[playerid]=0;
				PlayerInfo[playerid][pOldRepl]=0;
				Stopenanim(playerid);
			}
		}
		GrandEndOK=6008;
		if(UseDrugsTime[playerid] > 0)
		{
			UseDrugsTime[playerid] --;
			if(UseDrugsTime[playerid]>120) ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
			else if(UseDrugsTime[playerid]>=115 && UseDrugsTime[playerid]<=120)
			{
				TogglePlayerControllable(playerid,true);
				ClearAnims(playerid);
				UseDrugsTime[playerid]=0;
			}
		}
		GrandEndOK=6001;
		if(IsPlayerInAnyVehicle(playerid))
		{
			new myseat = GetPlayerVehicleSeat(playerid);
			GrandEndOK=60011;
			if(myseat != 128)if(VehicleSeat[carid][myseat] != playerid) VehicleSeat[carid][myseat] = playerid;
			GrandEndOK=60012;
			if(GetPlayerState(playerid) == 2)
			{
				GrandEndOK=60013;
				CheckEnterCar(playerid, carid);
				GrandEndOK=60014;
				if(!IsAPlane(carid) && !IsAVelik(carid))
				{
					GrandEndOK=60015;
					new Float:VHealth;
					GetVehicleHealth(carid,VHealth);
					if(VHealth < 500)
					{
						if(GetEngineStatus(carid))
						{
							UnEngine[carid] ++;
							if(UnEngine[carid] >= random(10))
							{
								if(GetVehicleModelEx(carid) != 494)
								{
									SetEngineStatus(carid, false, playerid);
									format(string,sizeof(string),"Двигатель заглох (( %s ))",PlayerName[playerid]);
									ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									UnEngine[carid] = 0;
									GrandEndOK=6002;
									if(VHealth < 400)
									{
										SendError(playerid,"Ваш двигатель сильно поврежден. Для его починки вызовите механика");
										SendError(playerid,"Чтобы вызвать механика, используйте телефон");
									}
								}
							}
						}
					}
				}
			}
			else
			{
				if(IsATaxi(carid))
				{
					new id = GetVehicleSeat(carid, 0);
					if(id != INVALID_PLAYER_ID && PlayerInfo[id][pJob] == JOB_TAXI)
					{
						TaxiDistance[playerid] += GetPlayerVehicleSpeed(id);
						if(TaxiDistance[playerid] >= 650)
						{
							if(PlayerAFKTime[playerid][0]==0 && PlayerAFKTime[id][0]==0)
							{
								GrandEndOK=6003;
								if( SlotValue[playerid][0] <= TaxiPrice[playerid])
								{
									RemovePlayerFromVehicle(playerid);
									SendError(playerid,"У вас не осталось денег на оплату такси");
									SetPlayerMoney(playerid,0);
									PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
									PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"$0");
									TextDrawHideForPlayer(playerid, Taximeter[0]);
									TextDrawHideForPlayer(playerid, Taximeter[1]);
									TextDrawHideForPlayer(playerid, Taximeter[2]);
									TextDrawHideForPlayer(playerid, Taximeter[3]);
									TaxiPrice[id] = 0;
									TaxiDistance[id] = 0;
								}
								TaxiDistance[playerid] = 0;
								TaxiPrice[playerid] += TaxiTarif[id];
								format(string,sizeof(string),"$%d",TaxiPrice[playerid]);
								PlayerTextDrawSetString(playerid, TaxiDraw[playerid],string); //соска
								new money;
								for(new i = 1; i < 4; i ++)
								{
									new seat = GetVehicleSeat(carid, i);
									if(seat != INVALID_PLAYER_ID) money += TaxiPrice[seat];
								}
								format(string,sizeof(string),"$%d",money);
								PlayerTextDrawSetString(id, TaxiDraw[id],string);
							}
						}
					}else{
						RemovePlayerFromVehicle(playerid);
						PlayerTextDrawHide(playerid,TaxiDraw[playerid]);
						PlayerTextDrawSetString(playerid, TaxiDraw[playerid],"$0");
						TextDrawHideForPlayer(playerid, Taximeter[0]);
						TextDrawHideForPlayer(playerid, Taximeter[1]);
						TextDrawHideForPlayer(playerid, Taximeter[2]);
						TextDrawHideForPlayer(playerid, Taximeter[3]);
						TaxiPrice[id] = 0;
						TaxiDistance[id] = 0;
					}
				}
			}
		}
	}
	return true;
}
stock SendMuteMessage(playerid, ret = 1)
{
	new string[200];
	format(string,sizeof(string),"Вы заглушены. Оставшееся время заглушки: %s",Convert(PlayerInfo[playerid][pMuteTime]));
	SendClientMessage(playerid,COLOR_GRAY,string);
	return ret;
}
stock CancelCuff(playerid)
{
    if(PlayerOfCuff[playerid] != INVALID_PLAYER_ID)
	{
		new targetid = PlayerOfCuff[playerid];
	    PlayerOfCuff[playerid] = INVALID_PLAYER_ID;
	    if(PlayerOfCuff[targetid] == playerid)
		{
	    	TimeOfCuff[targetid] = 0;
	    	PlayerOfCuff[targetid] = INVALID_PLAYER_ID;
		}
		ClearAnims(playerid);
	}
	return true;
}
stock GetJobName(jobid)
{
	new jobname[50];
	switch(jobid)
	{
	    case 1: jobname = "Водитель автобуса";
	    case 2: jobname = "Детектив";
	    case 3: jobname = "Развозчик продуктов";
	    case 4: jobname = "Механик";
	    case 5: jobname = "Таксист";
	    case 6: jobname = "Адвокат";
	    case 7: jobname = "Фермер";
	    case 8: jobname = "Крупье";
	    case 9: jobname = "Инкассатор";
	    case 10: jobname = "Наркодиллер";
	    case 11: jobname = "Дальнобойщик";
	    case 12: jobname = "Развозчик пиццы";
	    case 13: jobname = "Развозчик металлолома";
	    case 15: jobname = "Грузчик";
	    case 16: jobname = "Работник Налоговой";
	    case 17: jobname = "Начинающий фермер";
	    case 18: jobname = "Тракторист";
	    case 19: jobname = "Комбайнер";
	    case 20: jobname = "Водитель кукурузника";
	    case 21: jobname = "Строитель";
		case 22: jobname = "Рабочий виноградника";
		case 23: jobname = "Разнорабочий";
		case 24: jobname = "Шахтёр";
	    default: jobname = "None";

	}
	return jobname;
}
stock SetSpawnInfoEx(playerid, skin, Float:x, Float:y, Float:z, Float:a)
{
    return SetSpawnInfo(playerid, 255, skin, x, y, z-0.2, a, 0, 0, 0, 0, 0, 0);
}
stock ShowStats(playerid,giveplayerid,admin = 0)
{
	if(!IsPlayerConnected(giveplayerid)) return false;
	new string[350];
	new str[1600];
	new aSex[8];
	new House[5],Bizz[5];
	new house = SlotValue[giveplayerid][1];
	new biz = SlotValue[giveplayerid][3];
	if(house == -1) House = "None";
	else SetString(House,IntToStr(house));
	if(biz == -1) Bizz = "None";
	else SetString(Bizz,IntToStr(biz));
	if(PlayerInfo[giveplayerid][pSex] == 0) aSex = "None";
	else if(PlayerInfo[giveplayerid][pSex] == 1) aSex = "Мужской";
	else if(PlayerInfo[giveplayerid][pSex] == 2) aSex = "Женский";
	new VIP[32];
	if(PlayerInfo[giveplayerid][pVIP] == STATUS_NONE) VIP = "{D94141}« Отсутствует »";
	else if(PlayerInfo[giveplayerid][pVIP] == STATUS_VIP) VIP = "{AB8620}« GG START »";
	else if(PlayerInfo[giveplayerid][pVIP] == STATUS_GOLD) VIP = "{7396FB}« GG ADVANCE »";
	else if(PlayerInfo[giveplayerid][pVIP] == STATUS_PLATIN) VIP = "{ACACAC}« GG PRO »";
	else if(PlayerInfo[giveplayerid][pVIP] == 4) VIP = "{A0DBD7}« GG »";
	else if(PlayerInfo[giveplayerid][pVIP] == 5) VIP = "{C9EAFF}« GG+ »";
	new Phone[15];
	if(SlotValue[giveplayerid][19] == 0 || SlotValue[giveplayerid][19] == 1) Phone = "Отсутствует";
	else SetString(Phone, IntToStr(SlotValue[giveplayerid][19]));
	format(string,sizeof(string),"\n\n\\c{FFFFFF}Имя Фамилия {7396FB}« %s »\n\\c{FFFFFF}Пол {7396FB}« %s »\n\\c{FFFFFF}Отыгранных часов {7396FB}« %d »\n\\c{FFFFFF}Деньги {7396FB}« $%d »",
	Name(giveplayerid),
	aSex,
	PlayerInfo[giveplayerid][pExp],
	GetMoney(giveplayerid));
	strcat(str,string);
	format(string,sizeof(string),"\n\\c{FFFFFF}Номер телефона {7396FB}« %s »\n\\c{FFFFFF}Деньги в банке {7396FB}« $%d »\n\n\\c{FFFFFF}Работа {7396FB}« %s »",
	Phone,
	PlayerInfo[giveplayerid][pBank],
	GetJobName(PlayerInfo[giveplayerid][pJob]));
	strcat(str,string);
	if(PlayerInfo[giveplayerid][pMember]>0) format(string,sizeof(string),"\n\\c{FFFFFF}Организация {7396FB}« %s »\n\\c{FFFFFF}Должность {7396FB}« %s(%d) »\n",OrgInfo[GetTeamID(giveplayerid)][oName],GetRankName(GetTeamID(giveplayerid),PlayerInfo[giveplayerid][pRank]),PlayerInfo[giveplayerid][pRank]);
	else format(string,sizeof(string),"\n\\c{FFFFFF}Организация {7396FB}« Отсутствует »\n");
	strcat(str,string);
	format(string,sizeof(string),"\n\\c{FFFFFF}Законопослушность {7396FB}« %d/100 »\n\\c{FFFFFF}Здоровье {7396FB}« %d/25 »",
	PlayerInfo[giveplayerid][pZKP],
	PlayerInfo[giveplayerid][pHospital]);
	strcat(str,string);
	if(PlayerInfo[giveplayerid][pWarns]>0)
	{
		format(string,sizeof(string),"\n\\c{FFFFFF}Предупреждения {7396FB}« %d »",
		PlayerInfo[giveplayerid][pWarns]);
		strcat(str,string);
	}
	new narkostr[50];
	switch(PlayerInfo[giveplayerid][pAllRepl])
	{
	    case 0..100: format(narkostr,sizeof(narkostr)," [{66CC00}Нет зависимости{7396FB}]");
	    case 101..200: format(narkostr,sizeof(narkostr)," [{7396FB}Развивается зависимость{7396FB}]");
	    case 201..300: format(narkostr,sizeof(narkostr)," [{7396FB}Незначительная зависимость{7396FB}]");//1 лвл
	    case 301..400: format(narkostr,sizeof(narkostr)," [{D94141}Имеется зависимость{7396FB}]");//2
	    default: format(narkostr,sizeof(narkostr)," [{D94141}Неизлечимая зависимость{7396FB}]");//3lvl
	}
	format(string, sizeof(string), "\n\\c{FFFFFF}Наркозависимость {7396FB}« %d %s »", PlayerInfo[giveplayerid][pAllRepl],narkostr);
	strcat(str, string);
	format(string, sizeof(string), "\n\\c{FFFFFF}VIP - Статус %s",VIP);
	strcat(str, string);

	if(strlen(PlayerInfo[giveplayerid][pMerrit]) > 1)
	{
		format(string, sizeof(string), "\n\\c{FFFFFF}Супруг(а) {7396FB}« %s »", PlayerInfo[giveplayerid][pMerrit]);
		strcat(str, string);
	}
	if(SlotValue[giveplayerid][2] != -1)
	{
	    format(string, sizeof(string), "\n\\c{FFFFFF}Квартира {7396FB}« №%d в доме №%d »", kvartinfo[SlotValue[giveplayerid][2]][fake], kvartinfo[SlotValue[giveplayerid][2]][pID]);
		strcat(str, string);
	}
	if(SlotValue[giveplayerid][1] != -1)
	{
	    format(string, sizeof(string), "\n\\c{FFFFFF}Номер дома {7396FB}« %d »", SlotValue[giveplayerid][1]);
		strcat(str, string);
	}
	if(SlotValue[giveplayerid][3] != -1)
	{
	    format(string, sizeof(string), "\n\\c{FFFFFF}Номер бизнеса {7396FB}« %d »", SlotValue[giveplayerid][3]);
		strcat(str, string);
	}
	strcat(str, "\n\n");
	if(admin)
	{
		new google[30],code[30],referal[32];
		if(PlayerInfo[giveplayerid][AuthAct])format(google,30,"{43CD80}Подключен");
		else format(google,30,"{D94141}Отключен");
		if(PlayerInfo[giveplayerid][pKey])format(code,30,"{43CD80}Подключен");
		else format(code,30,"{D94141}Отключен");
		if(!GetString(RegReferal[giveplayerid],"No Referal"))format(referal,32,"{43CD80}%s",RegReferal[giveplayerid]);
		else format(referal,32,"{D94141}Отсутствует");
		format(string,sizeof(string),"{7396FB}Google Authenticator: [%s{7396FB}]\n",google);
		strcat(str,string);
		format(string,sizeof(string),"{7396FB}Код безопасности: [%s{7396FB}]\n",code);
		strcat(str,string);
		format(string,sizeof(string),"{7396FB}Дата регистрации: [%s{7396FB}]\n",PlayerInfo[giveplayerid][DATE]);
		strcat(str,string);
		format(string,sizeof(string),"{7396FB}Реферал: [%s{7396FB}]\n",referal);
		strcat(str,string);
		format(string,sizeof(string),"{7396FB}Донат-счётчик: [%d рублей{7396FB}]\n",PlayerInfo[giveplayerid][Donate_Score]);
		strcat(str,string);
		format(string,sizeof(string),"{7396FB}Текущий баланс: [%d рублей{7396FB}]\n",PlayerInfo[giveplayerid][pVirMoney]);
		strcat(str,string);
		
	}
	if(!Dialog_Open(playerid,235,DIALOG_STYLE_MSGBOX,"Статистика аккаунта",str,"Назад","Закрыть"))SendError(playerid,"Недоступно в данный момент");
	return true;
}
stock ApplyAnimationEx(playerid, animid, Float:fDelta, loop, lockx, locky, freeze, time, forcesync)
{
	new animlib[32], animname[32];
	GetAnimationName(animid, animlib, 32, animname, 32);
	return ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
}
stock ShowLicenses(playerid, giveplayerid, dialogid = INVALID_DIALOG_ID)
{
    new CarLic[24], BikeLic[24], FlyLic[24], BoatLic[24], FishLic[24], GunLic[24];
    new NCarLic[25], NBikeLic[25], NFlyLic[25], NBoatLic[25], NFishLic[25], NGunLic[25];
    new str[512], string[128];
	if(PlayerInfo[giveplayerid][pCarLic] == YES_LICENSE) CarLic = "{43CD80}Имеется";
	else CarLic = "{C9EAFF}Отсутствует";
	if(PlayerInfo[giveplayerid][pBikeLic] == YES_LICENSE) BikeLic = "{43CD80}Имеется";
	else BikeLic = "{C9EAFF}Отсутствует";
	if(PlayerInfo[giveplayerid][pFlyLic] == YES_LICENSE) FlyLic = "{43CD80}Имеется";
	else FlyLic = "{C9EAFF}Отсутствует";
	if(PlayerInfo[giveplayerid][pBoatLic] == YES_LICENSE) BoatLic = "{43CD80}Имеется";
	else BoatLic = "{C9EAFF}Отсутствует";
	if(PlayerInfo[giveplayerid][pFishLic] == YES_LICENSE) FishLic = "{43CD80}Имеется";
	else FishLic = "{C9EAFF}Отсутствует";
	if(PlayerInfo[giveplayerid][pGunLic] == YES_LICENSE) GunLic = "{43CD80}Имеется";
	else GunLic = "{C9EAFF}Отсутствует";
	if(PlayerInfo[giveplayerid][pCarLic] == NULLED_LIC) NCarLic = "{FF4400}| Обнулена";
	if(PlayerInfo[giveplayerid][pBikeLic] == NULLED_LIC) NBikeLic = "{FF4400}| Обнулена";
	if(PlayerInfo[giveplayerid][pFlyLic] == NULLED_LIC) NFlyLic = "{FF4400}| Обнулена";
	if(PlayerInfo[giveplayerid][pBoatLic] == NULLED_LIC) NBoatLic = "{FF4400}| Обнулена";
	if(PlayerInfo[giveplayerid][pFishLic] == NULLED_LIC) NFishLic = "{FF4400}| Обнулена";
	if(PlayerInfo[giveplayerid][pGunLic] == NULLED_LIC) NGunLic = "{FF4400}| Обнулена";
    format(string,sizeof(string),"\n\n\\c{FFFFFF}Водительские права: « %s{FFFFFF} » %s\n",CarLic,NCarLic);
	strcat(str,string);
	format(string,sizeof(string),"\\c{FFFFFF}Удостоверение мотоциклиста: « %s{FFFFFF} » %s\n",BikeLic,NBikeLic);
	strcat(str,string);
	format(string,sizeof(string),"\\c{FFFFFF}Удостоверение пилота: « %s{FFFFFF} » %s\n",FlyLic,NFlyLic);
	strcat(str,string);
	format(string,sizeof(string),"\\c{FFFFFF}Разрешение на водный транспорт: « %s{FFFFFF} » %s\n",BoatLic,NBoatLic);
	strcat(str,string);
	format(string,sizeof(string),"\\c{FFFFFF}Лицензия рыболова: « %s{FFFFFF} » %s\n",FishLic,NFishLic);
	strcat(str,string);
	format(string,sizeof(string),"\\c{FFFFFF}Лицензия на оружие: « %s{FFFFFF} » %s\n\n",GunLic,NGunLic);
	strcat(str,string);
	if(!Dialog_Open(playerid,dialogid,0,PlayerName[giveplayerid],str,"Скрыть",""))SendError(playerid,"Недоступно в данный момент");
	return true;
}
stock IsANotControllable(playerid)
{
	return !(!PlayerLie[playerid] && !Crack[playerid] && !Cuffed[playerid] && !CuffedTime[playerid] && Controllable[playerid]);
}
stock ShowStyles(playerid, giveplayerid, dialogid = INVALID_DIALOG_ID)
{
    new Boxing[25], Kungfu[25], Kneehead[25], Elbow[25];
    new str[320], string[200], Style[20];
	if(PlayerInfo[giveplayerid][pBoxing]) Boxing = "{10F441}Обучен";
	else Boxing = "{7396FB}Не обучен";
	if(PlayerInfo[giveplayerid][pKungfu]) Kungfu = "{10F441}Обучен";
	else Kungfu = "{7396FB}Не обучен";
	if(PlayerInfo[giveplayerid][pKneehead]) Kneehead = "{10F441}Обучен";
	else Kneehead = "{7396FB}Не обучен";
	if(PlayerInfo[giveplayerid][pElbow]) Elbow = "{10F441}Обучен";
	else Elbow = "{7396FB}Не обучен";
	switch(GetPlayerFightingStyle(giveplayerid))
	{
		case 5: Style = "Boxing";
		case 6: Style = "Kungfu";
		case 7: Style = "Kneehead";
		case 16: Style = "Elbow";
		default: Style = "Standart";
	}
    format(string,sizeof(string),"\n\n\\c{FFFFFF}Boxing: « %s{ffffff} »\n",Boxing);
	strcat(str,string);
	format(string,sizeof(string),"\\c{FFFFFF}Kungfu: « %s{ffffff} »\n",Kungfu);
	strcat(str,string);
	format(string,sizeof(string),"\\c{FFFFFF}Kneehead: « %s{ffffff} »\n",Kneehead);
	strcat(str,string);
	format(string,sizeof(string),"\\c{FFFFFF}Elbow: « %s{ffffff} »\n\n",Elbow);
	strcat(str,string);
	format(string,sizeof(string),"\\c{FFFFFF}Текущий стиль боя: « {43CD80}%s{ffffff} »\n",Style);
	strcat(str,string);
	format(string,sizeof(string),"\\c{FFFFFF}Навык боевых искуств: « {43CD80}%d{ffffff} »\n\n",PlayerInfo[playerid][pSnow]);
	strcat(str,string);
	if(!Dialog_Open(playerid,dialogid,0,"{43CD80}Стили боя",str,"Скрыть",""))SendError(playerid,"Недоступно в данный момент");
	return true;
}
stock ShowSkills(playerid, giveplayerid, dialogid = INVALID_DIALOG_ID)
{
	new str[400],string[100];
	format(string,sizeof(string),"\n\n\\c{7396FB}Навыки стрельбы %s[%d]\n",PlayerName[giveplayerid],giveplayerid);
	strcat(str,string);
	format(string,sizeof(string),"\n\\c{FFFFFF}Pistol: {43CD80}« %d%/100% »",PlayerInfo[giveplayerid][pPistol_Skill]);
	strcat(str,string);
	format(string,sizeof(string),"\n\\c{FFFFFF}Desert Eagle: {43CD80}« %d%/100% »",PlayerInfo[giveplayerid][pEagle_Skill]);
	strcat(str,string);
	format(string,sizeof(string),"\n\\c{FFFFFF}ShotGun: {43CD80}« %d%/100% »",PlayerInfo[giveplayerid][pShotGun_Skill]);
	strcat(str,string);
	format(string,sizeof(string),"\n\\c{FFFFFF}MP5: {43CD80}« %d%/100% »",PlayerInfo[giveplayerid][pMP5_Skill]);
	strcat(str,string);
	format(string,sizeof(string),"\n\\c{FFFFFF}UZI: {43CD80}« %d%/100% »",PlayerInfo[giveplayerid][pUZI_Skill]);
	strcat(str,string);
	format(string,sizeof(string),"\n\\c{FFFFFF}AK-47: {43CD80}« %d%/100% »",PlayerInfo[giveplayerid][pAK47_Skill]);
	strcat(str,string);
	format(string,sizeof(string),"\n\\c{FFFFFF}M4A1: {43CD80}« %d%/100% »",PlayerInfo[giveplayerid][pM4_Skill]);
	strcat(str,string);
	format(string,sizeof(string),"\n\\c{FFFFFF}Sniper Rifle: {43CD80}« %d%/100% »\n\n",PlayerInfo[giveplayerid][pSniper_Skill]);
	strcat(str,string);
	if(!Dialog_Open(playerid,dialogid,0,"{43CD80}Навыки стрельбы",str,"Скрыть",""))SendError(playerid,"Недоступно в данный момент");
	return true;
}
stock IsDropBomb(playerid)
{
	if(CreteBomb[playerid]>200)
	{
		new Float:x,Float: y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
   		CreateExplosion(x,y,z, 7, 20.0);
	    RemovePlayerAttachedObjectEx(playerid, 6);
	    CreteBomb[playerid]=0;
	    J_SetPlayerHealth(playerid,0);
     	PlayerInfo[playerid][pBomb]=0;
	    SendError(playerid,"Вы уронили бомбу и она взорвалась");
	}
	return true;
}
stock GetTextKeyName(key, const name[])
{
	switch(key)
	{
	    case KEY_SPRINT: strmid(name, "~k~~PED_SPRINT~", 0, 30, 30);
		case KEY_WALK: strmid(name, "~r~~k~~SNEAK_ABOUT~", 0, 30, 30);
		case KEY_SECONDARY_ATTACK: strmid(name, "~r~~k~~VEHICLE_ENTER_EXIT~", 0, 30, 30);
		case KEY_AIM: strmid(name, "~r~~k~~PED_LOCK_TARGET~", 0, 30, 30);
		case KEY_JUMP: strmid(name, "~r~~k~~PED_JUMPING~", 0, 30, 30);
		case KEY_FIRE: strmid(name, "~k~~PED_FIREWEAPON~", 0, 30, 30);
	}
	return true;
}
stock SetPlayerRandomKey(playerid, &key, action = true)
{
    new randkey;
    if(action) randkey = random(2);
    else randkey = random(2);
	switch(randkey)
	{
		case 0:
		{
			key = KEY_WALK;
			ShowPlayerActionText(playerid, "PRESS ~r~~k~~SNEAK_ABOUT~");
		}
		case 1:
		{
			key = KEY_JUMP;
			ShowPlayerActionText(playerid, "PRESS ~r~~k~~PED_JUMPING~");
		}
	}
	return true;
}
stock GiveBizMoney(bizid,money)
{
	if(BizInfo[bizid][bWin]>4000000) return false;
	BizInfo[bizid][bMoney]+=money;
	BizInfo[bizid][bWin]+=money;
    return true;
}
WriteLog(day,month,year,const time[],giveid,const givename[],takeid,const takename[],const source[],amount,const giveip[],const takeip[],balance = 0)
{
	new str[384];
	format(str, sizeof(str), "INSERT INTO `player_logs`\
	(`day`, `month`, `year`, `time`, `give_ID`, `give_Nick`, `take_ID`, `take_Nick`, `reason`, `amount`, `give_IP`, `take_IP`, `give_balance`) VALUES \
	('%d','%d','%d','%s','%d','%s','%d','%s','%s','%d','%s','%s','%d')",
	day,month,year,time,giveid,givename,takeid,takename,source,amount,giveip,takeip,balance);
	mysql_pquery(mysql, str);
	return 1;
}
stock GiveMoney(playerid,money, const reason[] = "None")
{
	if(!IsPlayerLogged[playerid]) return 0;
    AntiCheatOFF[playerid][MONEY_HACK] = 10;
	new string[300];
	SlotValue[playerid][0] += money;
	SetPlayerMoney(playerid,SlotValue[playerid][0]);
	f(string, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~$%d", money);
	GameTextForPlayer(playerid, string, 3000, 3);
	format(string,sizeof(string), "UPDATE  `accounts` SET  `Money` = `Money`+'%d' WHERE  `NickName`='%s';", money, Name(playerid));
	mysql_pquery(mysql, string);
	SaveAccount(playerid);
	if(money >= 100000 || money <= -100000)
	{
		format(string, sizeof string, "[M] Наличность %s[%d] изменилась на $%d с причиной: %s", PlayerName[playerid], playerid, money, reason);
		SendAdminsMessage(COLOR_LIGHTRED, string);
	}
	return true;
}
stock GiveBankMoney(playerid, money)
{
	PlayerInfo[playerid][pBank] += money;
	if(money >= 100000 || money <= -100000)
	{
		new string[128];
		format(string, sizeof string, "[M] Банковский счёт %s[%d] изменился на $%d", PlayerName[playerid], playerid, money);
		SendAdminsMessage(COLOR_LIGHTRED, string);
	}
	return true;
}
forward GetMoney(playerid);
public GetMoney(playerid)
{
	return SlotValue[playerid][0];
}
stock LoadOrgs()
{
	new string[500];
	for(new i; i < 13; i ++) RankName[0][i] = "Гражданин";
	format(string, sizeof(string), "SELECT * FROM `orgsinfo` ORDER BY `orgsinfo`.`ID` ASC");
	new Cache:result = mysql_query(mysql, string);
	new num = cache_get_row_count(mysql);
	for(new i = 1;i <= num;i ++)
	{
		OrgInfo[i][oID] = cache_get_field_content_int(i-1, "ID", mysql);
		cache_get_row(i-1, 1, OrgInfo[i][oName], mysql,32);
		cache_get_row(i-1, 2, OrgInfo[i][oLeader], mysql,24);
		OrgInfo[i][oBank] = cache_get_field_content_int(i-1, "Bank", mysql);
		FractionValue[i][1] = cache_get_field_content_int(i-1, "Drugs", mysql);
		FractionValue[i][0] = cache_get_field_content_int(i-1, "Mats", mysql);
		OrgInfo[i][Max_Rang] = cache_get_field_content_int(i-1, "Max_Rang", mysql);
		cache_get_row(i-1, 7, RankName[i][0], mysql, 50);
		cache_get_row(i-1, 8, RankName[i][1], mysql, 50);
		cache_get_row(i-1, 9, RankName[i][2], mysql, 50);
		cache_get_row(i-1, 10, RankName[i][3], mysql, 50);
		cache_get_row(i-1, 11, RankName[i][4], mysql, 50);
		cache_get_row(i-1, 12, RankName[i][5], mysql, 50);
		cache_get_row(i-1, 13, RankName[i][6], mysql, 50);
		cache_get_row(i-1, 14, RankName[i][7], mysql, 50);
		cache_get_row(i-1, 15, RankName[i][8], mysql, 50);
		cache_get_row(i-1, 16, RankName[i][9], mysql, 50);
		FractionValue[i][3] = cache_get_field_content_int(i-1, "Benz", mysql);
		FractionValue[i][4] = cache_get_field_content_int(i-1, "Remont", mysql);
		FractionValue[i][2] = cache_get_field_content_int(i-1, "Mask", mysql);
		OrgSalary[i][0] = cache_get_field_content_int(i-1, "Salary_1", mysql);
		OrgSalary[i][1] = cache_get_field_content_int(i-1, "Salary_2", mysql);
		OrgSalary[i][2] = cache_get_field_content_int(i-1, "Salary_3", mysql);
		OrgSalary[i][3] = cache_get_field_content_int(i-1, "Salary_4", mysql);
		OrgSalary[i][4] = cache_get_field_content_int(i-1, "Salary_5", mysql);
		OrgSalary[i][5] = cache_get_field_content_int(i-1, "Salary_6", mysql);
		OrgSalary[i][6] = cache_get_field_content_int(i-1, "Salary_7", mysql);
		OrgSalary[i][7] = cache_get_field_content_int(i-1, "Salary_8", mysql);
		OrgSalary[i][8] = cache_get_field_content_int(i-1, "Salary_9", mysql);
		OrgSalary[i][9] = cache_get_field_content_int(i-1, "Salary_10", mysql);
		
		cache_get_field_content(i-1, "Name_def", OrgInfo[i][oName_def], mysql);
		cache_get_field_content(i-1, "Rank1_def", RankDefault[i][0], mysql);
		cache_get_field_content(i-1, "Rank2_def", RankDefault[i][1], mysql);
		cache_get_field_content(i-1, "Rank3_def", RankDefault[i][2], mysql);
		cache_get_field_content(i-1, "Rank4_def", RankDefault[i][3], mysql);
		cache_get_field_content(i-1, "Rank5_def", RankDefault[i][4], mysql);
		cache_get_field_content(i-1, "Rank6_def", RankDefault[i][5], mysql);
		cache_get_field_content(i-1, "Rank7_def", RankDefault[i][6], mysql);
		cache_get_field_content(i-1, "Rank8_def", RankDefault[i][7], mysql);
		cache_get_field_content(i-1, "Rank9_def", RankDefault[i][8], mysql);
		cache_get_field_content(i-1, "Rank10_def", RankDefault[i][9], mysql);
		for(new x = 5; x < 25; x++){
			static column_item[] = "Slot%d";
			new format_item[8];
			f(format_item, column_item, x);
			FractionValue[i][x] = cache_get_field_content_int(i-1, format_item, mysql);
		}
	}
	cache_delete(result, mysql);
	print("Loading fractions"); //LoadOrgs
	return true;
}
stock SaveOrg(orgid)
{
	new string[600];
	format(string, sizeof(string), "\
	UPDATE `orgsinfo` SET `Leader` = '%s', \
	`Salary_1` = '%d', \
	`Salary_2` = '%d', \
	`Salary_3` = '%d', \
	`Salary_4` = '%d', \
	`Salary_5` = '%d', \
	`Salary_6` = '%d', \
	`Salary_7` = '%d', \
	`Salary_8` = '%d', \
	`Salary_9` = '%d', \
	`Salary_10` = '%d', \
	`Bank` = '%d', \
	`Drugs` = '%d', \
	`Mats` = '%d', \
	`Benz` = '%d', \
	`Remont` = '%d', \
	`Mask` = '%d' \
	WHERE `ID` = '%i'",
	OrgInfo[orgid][oLeader],
	OrgSalary[orgid][0],
	OrgSalary[orgid][1],
	OrgSalary[orgid][2],
	OrgSalary[orgid][3],
	OrgSalary[orgid][4],
	OrgSalary[orgid][5],
	OrgSalary[orgid][6],
	OrgSalary[orgid][7],
	OrgSalary[orgid][8],
	OrgSalary[orgid][9],
	OrgInfo[orgid][oBank],
	FractionValue[orgid][1],
	FractionValue[orgid][0],
	FractionValue[orgid][3],
	FractionValue[orgid][4],
	FractionValue[orgid][2],
	orgid);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string);
	else mysql_query(mysql, string, false);
	string = "UPDATE `orgsinfo` SET ";
	for(new i = 5; i < 25; i++){
		static column_item[] = "Slot%d";
		new format_item[8];
		f(format_item, column_item, i);
		acc_int_strcat(string, sizeof(string), format_item, FractionValue[orgid][i]);
	}
	strdel(string, strlen(string)-1, strlen(string));
	format(string,sizeof(string),"%s WHERE `ID`='%i'",string, orgid);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string);
	else mysql_query(mysql, string, false);
	string = "UPDATE `orgsinfo` SET ";
	acc_str_strcat(string, sizeof(string), "Name", OrgInfo[orgid][oName]);
	for(new i = 1; i <= 10; i++){
		static column_item[] = "Rank_%d";
		new format_item[12];
		f(format_item, column_item, i);
		acc_str_strcat(string, sizeof(string), format_item, RankName[orgid][i-1]);
	}
	strdel(string, strlen(string)-1, strlen(string));
	format(string,sizeof(string),"%s WHERE `ID`='%i'",string, orgid);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string);
	else mysql_query(mysql, string, false);
	return true;
}
stock SaveOrgs()
{
	for(new i = 1; i < sizeof(OrgInfo); i ++) SaveOrg(i);
	return true;
}
stock SetString(const param_1[], const param_2[], size = 300)
{
    strmid(param_1, param_2, 0, strlen(param_2), size);
	return 1;
}
stock GetVehicleKindFuel(carid)
{
    switch(GetVehicleModelEx(carid))
	{
		case 403, 406..408, 414, 416, 422, 423, 427, 428, 431..433, 437, 440, 443, 455, 456, 470, 485, 498, 499, 508, 514, 515, 524, 525, 528, 531, 532, 537, 538, 544, 552, 554, 573, 578, 582, 583, 588, 599, 601, 609: return 0;
		case 400, 401, 404, 410, 412, 413, 418, 419, 420, 421, 424, 438, 439, 442, 448, 459, 462, 463, 466, 467, 474, 475, 478, 479, 482, 483, 489, 490, 491, 492, 500, 505, 517, 518, 526, 534, 536, 542, 543, 549, 566, 567, 575, 576, 579, 598, 600, 604, 605: return 1;
		case 411, 415, 429, 444, 451, 461, 477, 494, 495, 502, 503, 504, 506, 521, 522, 541, 556, 557, 581,454,452,473,484,493: return 2;
		case 409, 402, 405, 426, 434, 436, 445, 458, 468, 471, 480, 496, 507, 516, 523, 527, 529, 533, 535, 540, 545, 546, 547, 550, 551, 555, 558, 559, 560, 561, 562, 565, 568, 571, 580, 585, 586, 587, 589, 596, 597, 602, 603: return 3;
		default: return -1;
	}
	return -1;
}
stock GetRankName(org, rank)
{
	if(rank > 0) return RankName[org][(rank-1)];
	else return RankName[org][0];
}
new Mgs[][] =
{
	"самп","школьник","интернет","дота","samp","gta","вирт","вирты","скайп","skype","админ",
	"банили","Warn","WARN","кикнуло","мут","афк","слили","крашнуло","краш","фрапс","нонРП",
	"забанили","разбан","+С","+C","Клео","клео","лаги","лагает","пинг","фпс","fps","cleo",
	"ban","warn","kick","mute","/","ПАХА","Паха","паха","GVR","gvr","ГВР","гвр","подпищик",
	"подписчик","ПОДПИСЧИК","капт","Капт","форум","пукан","школота","скачал","прокачал",
	"ютуб","вконтакте","youtube","бомбит","читы","собей","sobei","сорь","мамка","ддос","ddos",
	"лидерка","солью","role","Role","play","Play","ролеплей","Админ",",баги","багов","багоюз",
	"краб","мгшник","дмщик","Дмщик","нубло","дотер","салоед","кацап","DM","dm","mg","tk","MG",
	"Mg","CK","ck","Sk","pg","PG","Tk","TK","SK","metagaming","Metagaming","афк","АФК","Афк",
	"afk","AFK","Гоменюк","ЛОХ","хуй","гамно","Алик","Юнион","ЮНИОН","ХУЙ",
	"Сливчик","СЛИВЧИК","Самп","САМП","скачал","СКАЧАЛ","факт","Пиздуйте","ПИЗДУЙТЕ",
	"ГОВНА","говна","я Правда","Я ПРАВДА","я ПРАВДА","АРИЗОНЕ","Аризоне","Пиздорасы",
	"ПИДОРАСЫ","ЕБУ","ебу","ебал","ЕБАЛ","Антонио","пизда","виртов","Слив","шалава",
	"месная","уходите","АРИЗОНА"
};
stock IsAMg(const text[])
{
	for(new i; i < sizeof(Mgs); i ++)
	{
	    new find = strfind(text, Mgs[i], true);
	    if(find != -1) if(IsASymbol(text, find - 2, find))return true;
	}
	return false;
}

stock IsASymbol(const text[], first, end)
{
	if(first < 0) first = 0;
	if(end >= strlen(text)) end = strlen(text) - 1;
	for(new i = first; i <= end; i ++) return true;
	return false;
}
stock IsAIP(const text[])
{
	new numbers;
	for(new i = 0;i < strlen(text); i++) if('0' <= text[i] <= '9') if(!('0' <= text[i+1] <= '9')) numbers ++;
	if(numbers >= 4) return true;
	return false;
}
stock IsVehicleInRangeOfPoint(vehicleid, Float:distance, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx - x);
	tempposy = (oldposy - y);
	tempposz = (oldposz - z);
	if (((tempposx < distance) && (tempposx > -distance)) && ((tempposy < distance) && (tempposy > -distance)) && ((tempposz < distance) && (tempposz > -distance)))return true;
	return false;
}
stock GetGasStation(playerid)
{
	new gasid = -1;
    if(IsPlayerConnected(playerid))
	{
		for(new i;i < sizeof(FuelInfo);i ++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,20.0,FuelInfo[i][fPos_X],FuelInfo[i][fPos_Y],FuelInfo[i][fPos_Z]))
		    {
		        gasid = i;
		        break;
		    }
		}
	}
	return gasid;
}
stock IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    new bool:Succes = false;
		for(new i;i < sizeof(FuelInfo);i ++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,25.0,FuelInfo[i][fPos_X],FuelInfo[i][fPos_Y],FuelInfo[i][fPos_Z]))
		    {
		        Succes = true;
		        break;
		    }
		}
		return Succes;
	}
	return false;
}
stock IsAtGasStationC(carid)
{
	new bool:Succes = false;
	for(new i;i < sizeof(FuelInfo);i ++)
	{
		if(IsVehicleInRangeOfPoint(carid,10.0,FuelInfo[i][fPos_X],FuelInfo[i][fPos_Y],FuelInfo[i][fPos_Z]))
		{
			Succes = true;
			break;
		}
	}
	return Succes;
}
forward OnMailScriptResponse( iIndex, iResponseCode, const szData[ ] );
public  OnMailScriptResponse( iIndex, iResponseCode, const szData[ ] )
{
	if(szData[0])print("mail sended");
}
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
    if(PlayerInfo[playerid][pAskBan]!=22 && PlayerInfo[playerid][pGetBonus]!=1)
	{
		if(vel_x > 100 || vel_y > 100 || vel_z > 100)ToCheat(1,playerid);
	}
	return 1;
}
public GateClose(gate)
{
	GateInfo[gate][gOpen] = false;
	MoveDynamicObject(gGate[gate],GateInfo[gate][gClose_X],GateInfo[gate][gClose_Y],GateInfo[gate][gClose_Z],3.0);
    new gateid = GateInfo[gate][gForGateid];
    if(gateid != -1)
    {
        GateInfo[gateid][gOpen] = false;
		MoveDynamicObject(gGate[gateid],GateInfo[gateid][gClose_X],GateInfo[gateid][gClose_Y],GateInfo[gateid][gClose_Z],3.0);
    }
    return true;
}
public BarrierClose(barrier)
{
	BarrierInfo[barrier][brOpen] = false;
    MoveDynamicObject(gBarrier[barrier],BarrierInfo[barrier][brPos_X],BarrierInfo[barrier][brPos_Y],BarrierInfo[barrier][brPos_Z]+0.75,BARRIER_SPEED,0.0,90.0,BarrierInfo[barrier][brPos_A]+180);
    new barrierid = BarrierInfo[barrier][brForBarrierID];
    if(barrierid != -1)
    {
        BarrierInfo[barrierid][brOpen] = false;
    	MoveDynamicObject(gBarrier[barrierid],BarrierInfo[barrierid][brPos_X],BarrierInfo[barrierid][brPos_Y],BarrierInfo[barrierid][brPos_Z]+0.75,BARRIER_SPEED,0.0,90.0,BarrierInfo[barrierid][brPos_A]+180);
    }
    return true;
}
AlkMove(door)
{
	if(AlkatrazDoors[door][alOpen])
	{
		AlkatrazDoors[door][alOpen] = false;
		MoveDynamicObject(AlkGate[door],AlkatrazDoors[door][alClose_X],AlkatrazDoors[door][alClose_Y],AlkatrazDoors[door][alClose_Z],0.2);
	}
	else
	{
		AlkatrazDoors[door][alOpen] = true;
		MoveDynamicObject(AlkGate[door],AlkatrazDoors[door][alClose_X],AlkatrazDoors[door][alOpen_Y],AlkatrazDoors[door][alClose_Z],0.2);
	}
	return true;
}
public MailResponse(index, response_code, const data[])
{
	return true;
}
stock LoadCarServices()
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `carservices`");
	new rows = cache_get_row_count(mysql);
	new string[256];
	for (new i; i < rows;i ++)
	{
		TuningInfo[i][stoID] = cache_get_field_content_int(i, "ID", mysql);
		cache_get_row(i, 1, TuningInfo[i][stoOwner], mysql, 64);
		TuningInfo[i][stoPos][0] = cache_get_field_content_float(i, "pos_X", mysql);
		TuningInfo[i][stoPos][1] = cache_get_field_content_float(i, "pos_Y", mysql);
	 	TuningInfo[i][stoPos][2] = cache_get_field_content_float(i, "pos_Z", mysql);
		TuningInfo[i][stoGarage][0] = cache_get_field_content_float(i, "garage_X", mysql);
	 	TuningInfo[i][stoGarage][1] = cache_get_field_content_float(i, "garage_Y", mysql);
	 	TuningInfo[i][stoGarage][2] = cache_get_field_content_float(i, "garage_Z", mysql);
		TuningInfo[i][stoGarage][3] = cache_get_field_content_float(i, "garage_A", mysql);
	 	TuningInfo[i][stoGarageEx][0] = cache_get_field_content_float(i, "garage_ex_X", mysql);
	 	TuningInfo[i][stoGarageEx][1] = cache_get_field_content_float(i, "garage_ex_Y", mysql);
		TuningInfo[i][stoGarageEx][2] = cache_get_field_content_float(i, "garage_ex_Z", mysql);
	 	TuningInfo[i][stoGarageEx][3] = cache_get_field_content_float(i, "garage_ex_A", mysql);
	 	TuningInfo[i][stoWorld] = cache_get_field_content_int(i, "world", mysql);
	 	TuningInfo[i][stoOplata] = cache_get_field_content_int(i, "oplata", mysql);
	 	TuningInfo[i][stoBalance] = cache_get_field_content_int(i, "balance", mysql);
		ac_CreateDynamicCP(TuningCP[i][0],TuningCP[i][1],TuningInfo[i][stoPos][0], TuningInfo[i][stoPos][1], TuningInfo[i][stoPos][2], 1.0, -1, -1, -1, 10);
		if(!GetString(TuningInfo[i][stoOwner], "None"))
		{
			f(string, "Автомастерская #%d\n\n{FFFFFF}Владелец: {C9EAFF}%s\n{FFFFFF}Оплачено: {C9EAFF}%d/30 дней\n{D94141}Входа нет",TuningInfo[i][stoID],TuningInfo[i][stoOwner],TuningInfo[i][stoOplata]);
			TuningInfo[i][stoOplata]--;
			if(TuningInfo[i][stoOplata] <= 0)
			{
				format(string,sizeof string,"UPDATE `accounts` SET `pSTO` = '-1' WHERE `NickName`='%s'",TuningInfo[i][stoOwner]);
				mysql_query(mysql, string, false);
				SetString(TuningInfo[i][stoOwner], "None");
				TuningInfo[i][stoOplata] = 0;
				f(string, "Автомастерская #%d\n\n{C9EAFF}Стоимость: $2000000\n{D94141}Входа нет",TuningInfo[i][stoID]);
			}
		}
		else f(string, "Автомастерская #%d\n\n{C9EAFF}Стоимость: $2000000\n{D94141}Входа нет",TuningInfo[i][stoID]);
    	TuningInfo[i][stoText] = CreateDynamic3DTextLabel(string,0x43CD80FF,TuningInfo[i][stoPos][0], TuningInfo[i][stoPos][1], TuningInfo[i][stoPos][2],20.0);
		CreateDynamic3DTextLabel("Для въезда в мастерскую посигнальте",0x43CD80FF,TuningInfo[i][stoGarage][0], TuningInfo[i][stoGarage][1], TuningInfo[i][stoGarage][2],20.0);
		CreateDynamicMapIcon(TuningInfo[i][stoPos][0], TuningInfo[i][stoPos][1], TuningInfo[i][stoPos][2], 27, 0, -1, -1, -1, 300.0);
	}
	cache_delete(result, mysql);
	printf("[Car Services Loaded]: %d",rows); 
	return true;
}
stock SaveCarService(serviceid)
{
	new string[256];
	format(string, sizeof(string), "UPDATE `carservices` SET \
	`owner` = '%s', `balance` = '%d', `oplata` = '%d' WHERE `ID` = '%i'",
	TuningInfo[serviceid][stoOwner],
	TuningInfo[serviceid][stoBalance],
	TuningInfo[serviceid][stoOplata],
	TuningInfo[serviceid][stoID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string);
	else mysql_query(mysql, string, false);
	return true;
}
stock LoadBiz()
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `businesses` ORDER BY `businesses`.`ID` ASC");
	OWNABLEBIZES = cache_get_row_count(mysql);
	for (new i = 0;i < OWNABLEBIZES;i ++)
	{
		BizInfo[i][bID] = cache_get_field_content_int(i, "ID", mysql);
		BizInfo[i][bState] = cache_get_field_content_int(i, "State", mysql);
		cache_get_row(i, 2, BizInfo[i][bName], mysql, 64);
	 	cache_get_row(i, 3, BizInfo[i][bOwner], mysql, 24);
		BizInfo[i][bEnter][0] = cache_get_row_float(i, 4, mysql);
		BizInfo[i][bEnter][1] = cache_get_row_float(i, 5, mysql);
	 	BizInfo[i][bEnter][2] = cache_get_row_float(i, 6, mysql);
	 	BizInfo[i][bExit][0] = cache_get_row_float(i, 7, mysql);
	 	BizInfo[i][bExit][1] = cache_get_row_float(i, 8, mysql);
	 	BizInfo[i][bExit][2] = cache_get_row_float(i, 9, mysql);
	 	BizInfo[i][bCost] = cache_get_field_content_int(i, "Cost", mysql);
	 	BizInfo[i][bLevel] = cache_get_field_content_int(i, "Level", mysql);
	 	BizInfo[i][bInt] = cache_get_field_content_int(i, "Interior", mysql);
	 	BizInfo[i][bLock] = cache_get_field_content_int(i, "Lock", mysql);
	 	BizInfo[i][bMoney] = cache_get_field_content_int(i, "Money", mysql);
	 	BizInfo[i][bEnterPrice] = cache_get_field_content_int(i, "EnterPrice", mysql);
		BizInfo[i][bProducts] = cache_get_field_content_int(i, "Products", mysql);
	 	BizInfo[i][bProdPrice] = cache_get_field_content_int(i, "ProdPrice", mysql);
	 	BizInfo[i][bKrasher] = cache_get_field_content_int(i, "Krasher", mysql);
	 	BizInfo[i][bBuyCost] = cache_get_field_content_int(i, "BuyCost", mysql);
	 	BizInfo[i][bNeedItem] = cache_get_field_content_int(i, "NeedItem", mysql);
		if(BizInfo[i][bState] == B_BUY)
		{
			BizInfo[i][bExit][0] = 1301.2269;
			BizInfo[i][bExit][1] = -1568.4628;
			BizInfo[i][bExit][2] = 2501.0859;
		}
		if(BizInfo[i][bState] == 9)
		{
			BizInfo[i][bExit][0] = 2562.1694;
			BizInfo[i][bExit][1] = 1787.1859;
			BizInfo[i][bExit][2] = 1059.9667;
		}
		if(BizInfo[i][bState] == 6)
		{
			BizInfo[i][bExit][0] = -2240.7791;
			BizInfo[i][bExit][1] = 137.1832;
			BizInfo[i][bExit][2] = 1035.4141;
			BizInfo[i][bInt] = 6;
		}
	}
	cache_delete(result, mysql);
	print("Loading businesses"); //LoadBiz
	return true;
}
stock LoadParking()
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `parking`");
	for (new i = 0;i < MAX_PARKING; i++)
	{
		ParkInfo[i][parkPos][0] = cache_get_row_float(i, 1, mysql);
		ParkInfo[i][parkPos][1] = cache_get_row_float(i, 2, mysql);
	 	ParkInfo[i][parkPos][2] = cache_get_row_float(i, 3, mysql);
		ParkInfo[i][parkPos][3] = cache_get_row_float(i, 4, mysql);
	 	ParkInfo[i][parkExit][0] = cache_get_row_float(i, 5, mysql);
	 	ParkInfo[i][parkExit][1] = cache_get_row_float(i, 6, mysql);
	 	ParkInfo[i][parkExit][2] = cache_get_row_float(i, 7, mysql);
		ParkInfo[i][parkExit][3] = cache_get_row_float(i, 8, mysql);
		ParkInfo[i][parkWorld] = cache_get_field_content_int(i, "world", mysql);
	 	CreateDynamic3DTextLabel("Подземная парковка\n15 парковочных мест\n\n{43CD80}Посигнальте для въезда\n~k~~SNEAK_ABOUT~, если вы пешком",-1,ParkInfo[i][parkPos][0],ParkInfo[i][parkPos][1],ParkInfo[i][parkPos][2]+0.7,25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,-1,-1,-1,25.0);
		CreateDynamic3DTextLabel("Посигнальте для выезда с парковки\n~k~~SNEAK_ABOUT~, если вы пешком",0x43CD80FF,ParkInfo[i][parkExit][0],ParkInfo[i][parkExit][1],ParkInfo[i][parkExit][2]+0.7,25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,ParkInfo[i][parkWorld],-1,-1,25.0);
		CreateDynamicPickup(19131, 23, ParkInfo[i][parkPos][0],ParkInfo[i][parkPos][1],ParkInfo[i][parkPos][2]);
		CreateDynamicPickup(19131, 23, ParkInfo[i][parkExit][0],ParkInfo[i][parkExit][1],ParkInfo[i][parkExit][2],ParkInfo[i][parkWorld]);
		CreateDynamicMapIcon(ParkInfo[i][parkPos][0], ParkInfo[i][parkPos][1], ParkInfo[i][parkPos][2], 53, 0, -1, -1, -1, 300.0);
	}
	cache_delete(result, mysql);
	print("Loading parkings");
	return true;
}
stock SaveBiz(bizid)
{
	new string[750];
	format(string, sizeof(string), "UPDATE `businesses` SET \
	`State` = '%d', `Name` = '%s', `Owner` = '%s', `Enter_X` = '%.4f', `Enter_Y` = '%.4f', `Enter_Z` = '%.4f', \
	`Exit_X` = '%.4f', `Exit_Y` = '%.4f', `Exit_Z` = '%.4f', `Cost` = '%d', `Level` = '%d', \
	`Interior` = '%d', `Lock` = '%d', `Money` = '%d', `EnterPrice` = '%.4f', `Products` = '%d', \
	`ProdPrice` = '%.4f', `Krasher`='%d',",
	BizInfo[bizid][bState],
	BizInfo[bizid][bName],
	BizInfo[bizid][bOwner],
	 BizInfo[bizid][bEnter][0],
	BizInfo[bizid][bEnter][1],
	BizInfo[bizid][bEnter][2],
	BizInfo[bizid][bExit][0],
	BizInfo[bizid][bExit][1],
	BizInfo[bizid][bExit][2],
	BizInfo[bizid][bCost],
	BizInfo[bizid][bLevel],
	BizInfo[bizid][bInt],
	BizInfo[bizid][bLock],
	BizInfo[bizid][bMoney],
	BizInfo[bizid][bEnterPrice],
	BizInfo[bizid][bProducts],
	BizInfo[bizid][bProdPrice],
	BizInfo[bizid][bKrasher]);
	format(string, sizeof(string), "%s `BuyCost`='%d', `NeedItem`='%d' WHERE `ID` = '%i'",
	string,
 	BizInfo[bizid][bBuyCost],
	BizInfo[bizid][bNeedItem],
	BizInfo[bizid][bID]);
	if(strlen(string) >= 750) printf("Error w/saving business №%i", bizid);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string); else mysql_query(mysql, string, false);
	return true;
}
stock LoadOwnableCars()
{
	new Cache:result = mysql_query(mysql, "SELECT * FROM `ownable` WHERE `Owner`='The State' ORDER BY RAND() LIMIT 54;");
	new rows = cache_get_row_count(mysql);
	if(!rows){
		new string[1024];
		for(new i; i < 54; i++){
			GLS[71]++;
			f(string, "INSERT INTO `ownable`(`ID`, `Model`, `Sell_X`, `Sell_Y`, `Sell_Z`, `Sell_A`, `Pos_X`, `Pos_Y`, `Pos_Z`, `Pos_A`, `Color_1`, `Color_2`, `Owner`, `Keyer`, `Shtrafer`, `Number`, `Cost`, `Lock`, `Shtraf`, `KeyIN`, `AlarmON`, `Milage`, `OnNumber`, `Register`, `OnRegister`, `NumberColor`, `Guns`, `Drugs`, `Armours`, `Packets`, `Moneys`, `Kanistras`, `Healts`, `Virt`, `Slot5`, `Slot6`, `Slot7`, `Slot8`, `Slot9`, `Slot10`, `Slot11`, `Slot12`, `Slot13`, `Slot14`, `Slot15`, `Slot16`, `Slot17`, `Slot18`, `Slot19`, `Slot20`, `Slot21`, `Slot22`, `Slot23`, `Fuel`) \
			VALUES ('%d','%d','0.0','0.0','0.0','0.0','0.0','0.0','0.0','0.0','%d','%d','The State','The State','0','GGRP','0','0','0','0','0','0.0','The State','The State','The State','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','100.0')",
			GLS[71],CarForSell[random(sizeof CarForSell)],random(256),random(256));
			mysql_pquery(mysql, string);
		}
	}else{
		new count[2],num[2];
		for(new i = 0;i < rows;i ++){
			CarInfo[i][cID] = cache_get_field_content_int(i, "ID", mysql);
			CarInfo[i][cModel] = cache_get_field_content_int(i, "Model", mysql);
			CarInfo[i][cPos][0] = cache_get_row_float(i, 6, mysql);
			CarInfo[i][cPos][1] = cache_get_row_float(i, 7, mysql);
			CarInfo[i][cPos][2] = cache_get_row_float(i, 8, mysql);
			CarInfo[i][cPos][3] = cache_get_row_float(i, 9, mysql);
			new carid = CarInfo[i][cModel];
			if(carid == 417 || carid == 425 || carid == 447 || carid == 460 || carid == 469 || carid == 476 || carid == 487 || carid == 488 || carid == 497 || carid == 511 || carid == 512 || carid == 513 || carid == 519 || carid == 520 || carid == 548 || carid == 553 || carid == 563 || carid == 577 || carid == 592 || carid == 593){
				if(count[0] == 28)continue;
				CarInfo[i][cSell][0] = PlanePositions[num[0]][0];
				CarInfo[i][cSell][1] = PlanePositions[num[0]][1];
				CarInfo[i][cSell][2] = PlanePositions[num[0]][2];
				CarInfo[i][cSell][3] = PlanePositions[num[0]][3];
				num[0]++;
				count[0]++;
			}else if(carid == 430 || carid == 446 || carid == 452 || carid == 453 || carid == 454 || carid == 472 || carid == 473 || carid == 484 || carid == 493){
				CarInfo[i][cSell][0] = cache_get_row_float(i, 2, mysql);
				CarInfo[i][cSell][1] = cache_get_row_float(i, 3, mysql);
				CarInfo[i][cSell][2] = cache_get_row_float(i, 4, mysql);
				CarInfo[i][cSell][3] = cache_get_row_float(i, 5, mysql);
			}else{
				CarInfo[i][cSell][0] = CarsPositions[num[1]][0];
				CarInfo[i][cSell][1] = CarsPositions[num[1]][1];
				CarInfo[i][cSell][2] = CarsPositions[num[1]][2];
				CarInfo[i][cSell][3] = CarsPositions[num[1]][3];
				num[1]++;
			}
			CarInfo[i][cColor_1] = cache_get_field_content_int(i, "Color_1", mysql);
			CarInfo[i][cColor_2] = cache_get_field_content_int(i, "Color_2", mysql);
			cache_get_row(i, 12, CarInfo[i][cOwner], mysql, 24);
			cache_get_row(i, 13, CarInfo[i][cKeyer], mysql, 24);
			CarInfo[i][cShtrafer] = cache_get_field_content_int(i, "Shtrafer", mysql);
			cache_get_row(i, 15, CarInfo[i][cNumber], mysql, 30);
			CarInfo[i][cCost] = cache_get_field_content_int(i, "Cost", mysql);
			CarInfo[i][cLock] = cache_get_field_content_int(i, "Lock", mysql);
			CarInfo[i][cShtraf] = cache_get_field_content_int(i, "Shtraf", mysql);
			CarInfo[i][cKeyIN] = cache_get_field_content_int(i, "KeyIN", mysql);
			CarInfo[i][cAlarmON] = cache_get_field_content_int(i, "AlarmON", mysql);
			CarInfo[i][cMilage] = cache_get_row_float(i, 21, mysql);
			cache_get_row(i, 29, CarInfo[i][cOnNumber], mysql, 10);
			cache_get_row(i, 30, CarInfo[i][cRegister], mysql, 24);
			cache_get_row(i, 31, CarInfo[i][cOnRegister], mysql, 24);
			CarInfo[i][cNumberColor] = cache_get_field_content_int(i, "NumberColor", mysql);
			CarInfo[i][cVirt] = cache_get_field_content_int(i, "Virt", mysql);
			ReSetCarPrice(i);
			TrunkValue[i][1] = cache_get_field_content_int(i, "Guns", mysql);
			TrunkValue[i][2] = cache_get_field_content_int(i, "Drugs", mysql);
			TrunkValue[i][0] = cache_get_field_content_int(i, "Moneys", mysql);
			TrunkValue[i][4] = cache_get_field_content_int(i, "Kanistras", mysql);
			TrunkValue[i][3] = cache_get_field_content_int(i, "Healts", mysql);
			for(new x = 5; x < 24; x++){
				static column_item[] = "Slot%d";
				new format_item[8];
				f(format_item, column_item, x);
				TrunkValue[i][x] = cache_get_field_content_int(i, format_item, mysql);
			}
			
			OwnableCar[i] = J_AddStaticVehicleEx(CarInfo[i][cModel],CarInfo[i][cSell][0],CarInfo[i][cSell][1],CarInfo[i][cSell][2],CarInfo[i][cSell][3],CarInfo[i][cColor_1],CarInfo[i][cColor_2],0);
			new number = OwnableCar[i];
			VehicleInfo[number][vID] = i;
			CarText[i] = CreateDynamic3DTextLabel("-",-1,0,0,1.5,5.0,INVALID_PLAYER_ID,OwnableCar[i]);
			SetVehicleToRespawn(OwnableCar[i]);
			Iter_Add(OWNABLECARS, i);
			Fuel[number] = cache_get_field_content_float(i, "Fuel", mysql);
		}
	}
	cache_delete(result, mysql);
	if(rows)for(new i = 0; i < rows; i++)SetTimerEx("LoadTuning", i*200, false, "i", i);
	return true;
}
stock LoadPlayerCars(playerid)
{
	new string[128];
	f(string,  "SELECT * FROM `ownable` WHERE `Owner`='%s'", Name(playerid));
	new Cache:result = mysql_query(mysql,string);
	new rows = cache_get_row_count(mysql);
	new i;
	new loading[5] = {-1,...};
	for(new d;d < rows;d ++)
	{
		i = GetFreeCars();
		if(i == -1)return 1;
		loading[d] = i;
		CarInfo[i][cID] = cache_get_field_content_int(d, "ID", mysql);
		CarInfo[i][cModel] = cache_get_field_content_int(d, "Model", mysql);
		CarInfo[i][cSell][0] = cache_get_row_float(d, 2, mysql);
		CarInfo[i][cSell][1] = cache_get_row_float(d, 3, mysql);
		CarInfo[i][cSell][2] = cache_get_row_float(d, 4, mysql);
		CarInfo[i][cSell][3] = cache_get_row_float(d, 5, mysql);
		CarInfo[i][cPos][0] = cache_get_row_float(d, 6, mysql);
		CarInfo[i][cPos][1] = cache_get_row_float(d, 7, mysql);
		CarInfo[i][cPos][2] = cache_get_row_float(d, 8, mysql);
		CarInfo[i][cPos][3] = cache_get_row_float(d, 9, mysql);
		CarInfo[i][cColor_1] = cache_get_field_content_int(d, "Color_1", mysql);
		CarInfo[i][cColor_2] = cache_get_field_content_int(d, "Color_2", mysql);
	  	cache_get_row(d, 12, CarInfo[i][cOwner], mysql, 24);
	  	cache_get_row(d, 13, CarInfo[i][cKeyer], mysql, 24);
	  	CarInfo[i][cShtrafer] = cache_get_field_content_int(d, "Shtrafer", mysql);
	  	cache_get_row(d, 15, CarInfo[i][cNumber], mysql, 30);
		CarInfo[i][cCost] = cache_get_field_content_int(d, "Cost", mysql);
	  	CarInfo[i][cLock] = cache_get_field_content_int(d, "Lock", mysql);
	  	CarInfo[i][cShtraf] = cache_get_field_content_int(d, "Shtraf", mysql);
	  	CarInfo[i][cKeyIN] = cache_get_field_content_int(d, "KeyIN", mysql);
	  	CarInfo[i][cAlarmON] = cache_get_field_content_int(d, "AlarmON", mysql);
  		CarInfo[i][cMilage] = cache_get_row_float(d, 21, mysql);
		cache_get_row(d, 29, CarInfo[i][cOnNumber], mysql, 10);
		cache_get_row(d, 30, CarInfo[i][cRegister], mysql, 24);
		cache_get_row(d, 31, CarInfo[i][cOnRegister], mysql, 24);
		CarInfo[i][cNumberColor] = cache_get_field_content_int(d, "NumberColor", mysql);
		CarInfo[i][cVirt] = cache_get_field_content_int(d, "Virt", mysql);
		
		TrunkValue[i][1] = cache_get_field_content_int(d, "Guns", mysql);
		TrunkValue[i][2] = cache_get_field_content_int(d, "Drugs", mysql);
		TrunkValue[i][0] = cache_get_field_content_int(d, "Moneys", mysql);
		TrunkValue[i][4] = cache_get_field_content_int(d, "Kanistras", mysql);
		TrunkValue[i][3] = cache_get_field_content_int(d, "Healts", mysql);
		for(new x = 5; x < 24; x++){
			static column_item[] = "Slot%d";
			new format_item[8];
			f(format_item, column_item, x);
			TrunkValue[i][x] = cache_get_field_content_int(d, format_item, mysql);
		}
		
		OwnableCar[i] = J_AddStaticVehicleEx(CarInfo[i][cModel],CarInfo[i][cPos][0],CarInfo[i][cPos][1],CarInfo[i][cPos][2],CarInfo[i][cPos][3],CarInfo[i][cColor_1],CarInfo[i][cColor_2],0);
		new number = OwnableCar[i];
		VehicleInfo[number][vID] = i;
		CarText[i] = CreateDynamic3DTextLabel("-",-1,0,0,1.5,5.0,INVALID_PLAYER_ID,OwnableCar[i]);
		SetVehicleToRespawn(OwnableCar[i]);
		if(!IsAVelik(OwnableCar[i])) SetEngineStatus(OwnableCar[i],false, playerid);
		else SetEngineStatus(OwnableCar[i],true, playerid);
		Iter_Add(OWNABLECARS, i);
        ReSetCarPrice(i);
		SetVehicleVirtualWorld(number, CarInfo[i][cVirt]);
		Fuel[number] = cache_get_field_content_float(d, "Fuel", mysql);
	}
	GetPlayerCars(playerid);
	cache_delete(result, mysql);
	for(new d; d < rows; d++){
		if(loading[d] == -1)break;
		SetTimerEx("LoadTuning", d*200, false, "i", loading[d]);
	}
	return true;
}
stock DestroyPlayerCars(playerid){
	for(new s = 5; s <= 9; s++){
		if(SlotValue[playerid][s] > 0 && IsPlayerHaveCar(playerid, SlotValue[playerid][s])){
			new i = GetVehicleID(SlotValue[playerid][s]);
			SaveOwnableCar(i, 1);
		}
	}
}
stock SaveOwnableCar(carid, k = 0)
{
	new string[1200];
	format(string, sizeof(string), "UPDATE `ownable` SET \
	`Model` = '%d', `Sell_X` = '%.4f', `Sell_Y` = '%.4f', `Sell_Z` = '%.4f', `Sell_A` = '%.4f', \
 	`Pos_X` = '%.4f', `Pos_Y` = '%.4f', `Pos_Z` = '%.4f', `Pos_A` = '%.4f', `Color_1` = '%d', \
 	`Color_2` = '%d', `Owner` = '%s', `Keyer` = '%s', `Shtrafer` = '%d', `Number` = '%s', \
 	`Cost` = '%d', `Lock` = '%d', `Shtraf` = '%d', `KeyIN` = '%d', \
	`AlarmON` = '%d', `Milage` = '%f', `Virt` = '%d',",
	CarInfo[carid][cModel],
	CarInfo[carid][cSell][0],
	CarInfo[carid][cSell][1],
	CarInfo[carid][cSell][2],
	CarInfo[carid][cSell][3],
	CarInfo[carid][cPos][0],
	CarInfo[carid][cPos][1],
	CarInfo[carid][cPos][2],
	CarInfo[carid][cPos][3],
	CarInfo[carid][cColor_1],
	CarInfo[carid][cColor_2],
	CarInfo[carid][cOwner],
	CarInfo[carid][cKeyer],
	CarInfo[carid][cShtrafer],
	CarInfo[carid][cNumber],
	CarInfo[carid][cCost],
	CarInfo[carid][cLock],
	CarInfo[carid][cShtraf],
	CarInfo[carid][cKeyIN],
	CarInfo[carid][cAlarmON],
	CarInfo[carid][cMilage],
	CarInfo[carid][cVirt]);
	format(string, sizeof(string), "%s `Guns` = '%d', `Drugs` = '%d', `Moneys` = '%d', `Kanistras` = '%d', `Healts` = '%d', `OnNumber`='%s', `Register`='%s', `OnRegister`='%s', `NumberColor`='%d' WHERE `ID` = '%i'",
	string,
 	TrunkValue[carid][1],
	TrunkValue[carid][2],
	TrunkValue[carid][0],
	TrunkValue[carid][4],
	TrunkValue[carid][3],
	CarInfo[carid][cOnNumber],
	CarInfo[carid][cRegister],
	CarInfo[carid][cOnRegister],
	CarInfo[carid][cNumberColor],
	CarInfo[carid][cID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string);
	else mysql_query(mysql, string, false);
	string = "UPDATE `ownable` SET ";
	for(new i = 5; i < 24; i++){
		static column_item[] = "Slot%d";
		new format_item[8];
		f(format_item, column_item, i);
		acc_int_strcat(string, sizeof(string), format_item, TrunkValue[carid][i]);
	}
	acc_float_strcat(string, sizeof(string), "Fuel", Fuel[OwnableCar[carid]]);
	strdel(string, strlen(string)-1, strlen(string));
	format(string,sizeof(string),"%s WHERE `ID`='%i'",string, CarInfo[carid][cID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string);
	else mysql_query(mysql, string, false);
	if(k == 1){
		CarInfo[carid][cSell][0] = 0.0;
		CarInfo[carid][cSell][1] = 0.0;
		CarInfo[carid][cSell][2] = 0.0;
		CarInfo[carid][cSell][3] = 0.0;
		CarInfo[carid][cPos][0] = 0.0;
		CarInfo[carid][cPos][1] = 0.0;
		CarInfo[carid][cPos][2] = 0.0;
		CarInfo[carid][cPos][3] = 0.0;
		CarInfo[carid][cColor_1] = 0;
		CarInfo[carid][cColor_2] = 0;
		SetString(CarInfo[carid][cOwner], "The State");
		SetString(CarInfo[carid][cKeyer], "The State");
		CarInfo[carid][cShtrafer] = 0;
		SetString(CarInfo[carid][cNumber], "The State");
		CarInfo[carid][cCost] = 0;
		CarInfo[carid][cLock] = 0;
		CarInfo[carid][cShtraf] = 0;
		CarInfo[carid][cKeyIN] = 0;
		CarInfo[carid][cAlarmON] = 0;
		CarInfo[carid][cMilage] = 0.0;
		CarInfo[carid][cID] = 0;
		CarInfo[carid][cModel] = 0;
		SetString(CarInfo[carid][cOnNumber], "The State");
		SetString(CarInfo[carid][cRegister], "The State");
		SetString(CarInfo[carid][cOnRegister], "The State");
		CarInfo[carid][cNumberColor] = 0;
		CarInfo[carid][cVirt] = 0;
		
		TrunkValue[carid][1] = 0;
		TrunkValue[carid][2] = 0;
		TrunkValue[carid][0] = 0;
		TrunkValue[carid][4] = 0;
		TrunkValue[carid][3] = 0;
		DelTunCar(OwnableCar[carid]);
		for(new x = 5; x < 24; x++){
			TrunkValue[carid][x] = 0;
		}
		
		VehicleInfo[OwnableCar[carid]][vID] = -1;
		DestroyVehicleEx(OwnableCar[carid]);
		DestroyDynamic3DTextLabel(CarText[carid]);
		Iter_Remove(OWNABLECARS, carid);
	}
	return true;
}
stock SaveOwnableCars()
{
	foreach(OWNABLECARS, i){
		SaveOwnableCar(i);
	}
	return true;
}
stock RandomMassive(massive[], size)
{
	for(new i; i < size; i ++)
	{
	    new rand = random(size), mass = massive[i];
	    massive[i] = massive[rand];
	   	massive[rand] = mass;
	}
}
stock LoadKvartir() 
{ 
	new ktext[160];
	new Cache:result = mysql_query(mysql, "SELECT * FROM `kvartiri`");
	ALLKVARTIRI = cache_get_row_count(mysql);
	for(new i = 1; i <= ALLKVARTIRI; i++) 
	{ 
		kvartinfo[i][kID] = cache_get_field_content_int(i-1,"kID", mysql);
		kvartinfo[i][pID] = cache_get_field_content_int(i-1,"ID", mysql);
		kvartinfo[i][kvPic][0] = cache_get_field_content_float(i-1,"pXpic", mysql);
		kvartinfo[i][kvPic][1] = cache_get_field_content_float(i-1,"pYpic", mysql);
		kvartinfo[i][kvPic][2] = cache_get_field_content_float(i-1,"pZpic", mysql);
		kvartinfo[i][kvExit][0] = cache_get_field_content_float(i-1,"pXexit", mysql);
		kvartinfo[i][kvExit][1] = cache_get_field_content_float(i-1,"pYexit", mysql);
		kvartinfo[i][kvExit][2] = cache_get_field_content_float(i-1,"pZexit", mysql);
		kvartinfo[i][pCount] = cache_get_field_content_int(i-1,"pCount", mysql);
		kvartinfo[i][pDay] = cache_get_field_content_int(i-1,"pDay", mysql);
		cache_get_field_content(i-1,"vladelec", kvartinfo[i][vladelec], 32);
		kvartinfo[i][kvLock] = cache_get_field_content_int(i-1,"lock", mysql);
		kvartinfo[i][kvWorld] = cache_get_field_content_int(i-1,"world", mysql);
		kvartinfo[i][kvPlata] = cache_get_field_content_int(i-1,"plata", mysql);
		kvartinfo[i][podeezd] = cache_get_field_content_int(i-1,"podeezd", mysql);
		kvartinfo[i][fake] = cache_get_field_content_int(i-1,"fake", mysql);
		if(strcmp(kvartinfo[i][vladelec],"None",true))
		{
			format(ktext, sizeof(ktext),"Квартира {66cc00}№%d\n{ffffff}Владелец: {66cc00}%s\n{ffffff}Чтобы войти, нажмите кнопку {66cc00}~k~~SNEAK_ABOUT~",kvartinfo[i][fake], kvartinfo[i][vladelec]);
			kvartinfo[i][kvPlata]--; 
			if(kvartinfo[i][kvPlata] <= 0)
			{
				format(ktext,sizeof ktext,"UPDATE `accounts` SET `From`='-1' WHERE `NickName`='%s' LIMIT 1",kvartinfo[i][vladelec]);
				mysql_query(mysql, ktext, false);
				kvartinfo[i][kvPlata] = 0;
				kvartinfo[i][kvLock] = 0;
				strmid(kvartinfo[i][vladelec],"None", 0, strlen("None"), MAX_PLAYER_NAME);
				format(ktext, sizeof(ktext),"Квартира {66cc00}№%d\n{ffffff}Цена: {66cc00}%d$\n{ffffff}Чтобы войти, нажмите кнопку {66cc00}~k~~SNEAK_ABOUT~",kvartinfo[i][fake],kvartinfo[i][pCount]); 
			}
		}
		else format(ktext, sizeof(ktext),"Квартира {66cc00}№%d\n{ffffff}Цена: {66cc00}%d$\n{ffffff}Чтобы войти, нажмите кнопку {66cc00}~k~~SNEAK_ABOUT~",kvartinfo[i][fake],kvartinfo[i][pCount]); 
		kvartinfo[i][dtext] = CreateDynamic3DTextLabel(ktext,0xFFFFFFFF,kvartinfo[i][kvPic][0],kvartinfo[i][kvPic][1],kvartinfo[i][kvPic][2]+0.7,5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,kvartinfo[i][kvWorld],-1,-1,2.0); 
		CreateDynamic3DTextLabel("Для выхода нажмите {66cc00}~k~~SNEAK_ABOUT~\n{ffffff}Чтобы купить, нажмите {66cc00}~k~~PED_SPRINT~",0xFFFFFFFF,kvartinfo[i][kvExit][0],kvartinfo[i][kvExit][1],kvartinfo[i][kvExit][2]+0.7,5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID,0,i,11,-1,5.0); 
	}
	printf("[Kvartira Loaded]: %d",ALLKVARTIRI); 
	cache_delete(result, mysql);
	return 1;
}
stock LoadPodeezd() 
{
	new MIR = 1, string[64];
	new Cache:result = mysql_query(mysql, "SELECT * FROM `podeezd`");
	Allpod = cache_get_row_count(mysql);
	new nfakepodeezd;
	for (new i = 1;i <= Allpod;i ++)
	{
		PodeezdInfo[i][podPic][0] = cache_get_field_content_float(i-1,"pEnterX", mysql);
		PodeezdInfo[i][podPic][1] = cache_get_field_content_float(i-1,"pEnterY", mysql);
		PodeezdInfo[i][podPic][2] = cache_get_field_content_float(i-1,"pEnterZ", mysql);
		PodeezdInfo[i][podEtazi] = cache_get_field_content_int(i-1,"pEtazi", mysql);
		PodeezdInfo[i][HOUSE] = cache_get_field_content_int(i-1,"house", mysql);
		PodeezdInfo[i][podeezd] = cache_get_field_content_int(i-1,"podeezd", mysql);
		if(lasthouse != PodeezdInfo[i][HOUSE]){
			lasthouse = PodeezdInfo[i][HOUSE];
			nfakepodeezd = 0;
		}
		nfakepodeezd++;
		format(string, sizeof string, "Жилой дом №%d\n\n{66CC00}Подъезд №%d", PodeezdInfo[i][HOUSE], nfakepodeezd);
		CreateDynamic3DTextLabel(string,0xC9EAFFFF,PodeezdInfo[i][podPic][0],PodeezdInfo[i][podPic][1],PodeezdInfo[i][podPic][2],20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);
		for(new b = 0; b < PodeezdInfo[i][podEtazi]; b++)PodeezdInfo[i][podMir][b] = MIR++;
		ac_CreateDynamicCP(PodeezdInfo[i][eSquare][0],PodeezdInfo[i][eSquare][1],2265.8799,1647.5457,1084.2344, 1.0);
		ac_CreateDynamicCP(PodeezdInfo[i][pSquare][0],PodeezdInfo[i][pSquare][1],PodeezdInfo[i][podPic][0],PodeezdInfo[i][podPic][1],PodeezdInfo[i][podPic][2], 1.0);
		if(PodeezdInfo[i][HOUSE] != PodeezdInfo[i-1][HOUSE])CreateDynamicMapIcon(PodeezdInfo[i][podPic][0],PodeezdInfo[i][podPic][1],PodeezdInfo[i][podPic][2], 31, 0);
	} 
	printf("[Podeezd Loaded]: %d",Allpod);
	cache_delete(result, mysql);
	return 1;
}
forward savekvart(idx);
public savekvart(idx) 
{ 
	new query[480]; 
	format(query, sizeof(query), "UPDATE `kvartiri` SET `vladelec`='%s',`lock`='%d',`world`='%d',`plata`='%d',`podeezd`='%d',`fake`='%d' WHERE `kID` ='%d'",
	kvartinfo[idx][vladelec], 
	kvartinfo[idx][kvLock], 
	kvartinfo[idx][kvWorld], 
	kvartinfo[idx][kvPlata],
	kvartinfo[idx][podeezd],
	kvartinfo[idx][fake],
	idx); 
	mysql_pquery(mysql, query); 
	return 1;
} 
stock updatekvar(idx) 
{ 
	new stringg[512];
	if(!strcmp(kvartinfo[idx][vladelec],"None",true))format(stringg, sizeof stringg,"Квартира {66cc00}№%d\n{ffffff}Цена: {66cc00}%d$\n{ffffff}Чтобы войти, нажмите кнопку {66cc00}~k~~SNEAK_ABOUT~",kvartinfo[idx][fake], kvartinfo[idx][pCount]); 
	else format(stringg, sizeof stringg,"Квартира {66cc00}№%d\n{ffffff}Владелец: {66cc00}%s\n{ffffff}Чтобы войти, нажмите кнопку {66cc00}~k~~SNEAK_ABOUT~",kvartinfo[idx][fake], kvartinfo[idx][vladelec]); 
	UpdateDynamic3DTextLabelText(kvartinfo[idx][dtext],0xFFFFFFFF,stringg); 
	savekvart(idx);
	return 1;
} 
stock LoadHouses()
{
	new Cache:result = mysql_query(mysql, "SELECT * FROM `houses` ORDER BY `houses`.`ID` ASC");
	OWNABLEHOUSES = cache_num_rows();
	for (new i = 0;i < OWNABLEHOUSES;i ++)
	{
		HouseInfo[i][hID] = cache_get_field_content_int(i, "ID", mysql);
		HouseInfo[i][hEnter][0] = cache_get_row_float(i, 1, mysql);
		HouseInfo[i][hEnter][1] = cache_get_row_float(i, 2, mysql);
		HouseInfo[i][hEnter][2] = cache_get_row_float(i, 3, mysql);
		HouseInfo[i][hExit][0] = cache_get_row_float(i, 4, mysql);
		HouseInfo[i][hExit][1] = cache_get_row_float(i, 5, mysql);
		HouseInfo[i][hExit][2] = cache_get_row_float(i, 6, mysql);
		cache_get_row(i, 7, HouseInfo[i][hOwner], mysql, 24);
		cache_get_row(i, 8, HRoomOwner[i][0], mysql, 24);
		cache_get_row(i, 9, HRoomOwner[i][1], mysql, 24);
		cache_get_row(i, 10, HRoomOwner[i][2], mysql, 24);
		cache_get_row(i, 11, HRoomOwner[i][3], mysql, 24);
		cache_get_row(i, 12, HRoomOwner[i][4], mysql, 24);
		HouseInfo[i][hLevel] = cache_get_field_content_int(i, "Level", mysql);
		HouseInfo[i][hCost] = cache_get_field_content_int(i, "Cost", mysql);
		HouseInfo[i][hLock] = cache_get_field_content_int(i, "Lock", mysql);
		HouseInfo[i][hRent] = cache_get_field_content_int(i, "Rent", mysql);
		HouseInfo[i][hInt] = cache_get_field_content_int(i, "Interior", mysql);
		ClosetValue[i][0] = cache_get_field_content_int(i, "Money", mysql);
		ClosetValue[i][2] = cache_get_field_content_int(i, "Drugs", mysql);
		ClosetValue[i][1] = cache_get_field_content_int(i, "Mats", mysql);
		HouseInfo[i][hBar] = cache_get_field_content_int(i, "Bar", mysql);
		HouseInfo[i][hCabinet] = cache_get_field_content_int(i, "Cabinet", mysql);
		ClosetValue[i][3] = cache_get_field_content_int(i, "Skin_1", mysql);
		ClosetValue[i][4] = cache_get_field_content_int(i, "Skin_2", mysql);
		ClosetValue[i][5] = cache_get_field_content_int(i, "Skin_3", mysql);
		ClosetValue[i][6] = cache_get_field_content_int(i, "Skin_4", mysql);
		ClosetValue[i][7] = cache_get_field_content_int(i, "Skin_5", mysql);
		HouseInfo[i][hNoOwner] = cache_get_field_content_int(i, "NoOwner", mysql);
		HouseInfo[i][hNalog] = cache_get_field_content_int(i, "Nalog", mysql);
		HouseInfo[i][hKlass] = cache_get_field_content_int(i, "Klass", mysql);
		HouseInfo[i][hMed] = cache_get_field_content_int(i, "Med", mysql);
		for(new x = 8; x < 25; x++){
			static column_item[] = "Slot%d";
			new format_item[8];
			f(format_item, column_item, x);
			ClosetValue[i][x] = cache_get_field_content_int(i, format_item, mysql);
		}
	}
	cache_delete(result, mysql);
	print("Loading houses");
	return true;
}
stock SaveHouse(houseid)
{
	new string[1024], str[256];
	format(str, sizeof(str), "UPDATE `houses` SET");
	strcat(string, str);
	format(str, sizeof(str), "`Enter_X` = '%.4f',`Enter_Y` = '%.4f',`Enter_Z` = '%.4f', ",
	HouseInfo[houseid][hEnter][0],
	HouseInfo[houseid][hEnter][1],
	HouseInfo[houseid][hEnter][2]);
	strcat(string, str);
	format(str, sizeof(str), "`Exit_X` = '%.4f', `Exit_Y` = '%.4f', `Exit_Z` = '%.4f', ",
 	HouseInfo[houseid][hExit][0],
	HouseInfo[houseid][hExit][1],
	HouseInfo[houseid][hExit][2]);
	strcat(string, str);
	format(str, sizeof(str), "`Owner` = '%s', `Room_Owner_0` = '%s',`Room_Owner_1` = '%s', ",
	HouseInfo[houseid][hOwner],
	HRoomOwner[houseid][0],
	HRoomOwner[houseid][1]);
	strcat(string, str);
	format(str, sizeof(str), "`Room_Owner_2` = '%s', `Room_Owner_3` = '%s', `Room_Owner_4` = '%s', ",
	 HRoomOwner[houseid][2],
	HRoomOwner[houseid][3],
	HRoomOwner[houseid][4]);
	strcat(string, str);
	format(str, sizeof(str), "`Level` = '%d', `Cost` = '%d', `Lock` = '%d', `Rent` = '%d', ",
	HouseInfo[houseid][hLevel],
	HouseInfo[houseid][hCost],
	HouseInfo[houseid][hLock],
	HouseInfo[houseid][hRent]);
	strcat(string, str);
	format(str, sizeof(str), "`Interior` = '%d', `Money` = '%d', `Drugs` = '%d', `Mats` = '%d', ",
	HouseInfo[houseid][hInt],
	ClosetValue[houseid][0],
	ClosetValue[houseid][2],
	ClosetValue[houseid][1]);
	strcat(string, str);
	format(str, sizeof(str), "`Bar` = '%d', `Cabinet` = '%d', `Skin_1` = '%d', `Skin_2` = '%d', ",
	HouseInfo[houseid][hBar],
	HouseInfo[houseid][hCabinet],
	ClosetValue[houseid][3],
	ClosetValue[houseid][4]);
	strcat(string, str);
	format(str, sizeof(str), "`Skin_3` = '%d', `Skin_4` = '%d', `Skin_5` = '%d', `NoOwner` = '%d', `Nalog` = '%d', `Klass` = '%d', `Med` = '%d' WHERE `ID` = '%i'",
	ClosetValue[houseid][5],
	ClosetValue[houseid][6],
	ClosetValue[houseid][7],
	HouseInfo[houseid][hNoOwner],
	HouseInfo[houseid][hNalog],
	HouseInfo[houseid][hKlass],
	HouseInfo[houseid][hMed],
	houseid + 1);
	strcat(string, str);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string);
	else mysql_query(mysql, string, false);
	string = "UPDATE `houses` SET ";
	for(new i = 8; i < 25; i++){
		static column_item[] = "Slot%d";
		new format_item[8];
		f(format_item, column_item, i);
		acc_int_strcat(string, sizeof(string), format_item, ClosetValue[houseid][i]);
	}
	strdel(string, strlen(string)-1, strlen(string));
	format(string,sizeof(string),"%s WHERE `ID`='%i'",string, houseid);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string);
	else mysql_query(mysql, string, false);
	return true;
}
forward mysql_PromoCreate(playerid,code[]);
public mysql_PromoCreate(playerid,code[])
{
    new rows,fields;
    cache_get_data(rows, fields);
    if(rows) return SendError(playerid, "Промокод уже есть в списке");
    new string[256],date[24];
	new Year, Month, Day;
	getdate(Year, Month, Day);
	format(date,sizeof(date),"%d.%d.%d",Day,Month,Year);
    format(string,sizeof(string),"INSERT INTO `promo` (`code`,`amount`,`type`,`activates`,`activated`,`data`) VALUES ('%s','%d','%d','%d','0','%s')",code,GetPVarInt(playerid,"PROMOVALUE"),GetPVarInt(playerid,"PROMOTYPE"),GetPVarInt(playerid,"PROMOACTIVATES"),date);
    mysql_query(mysql, string, false);
    SendInfo(playerid,"Промо-код успешно создан");
	for(new i; i < TotalPromo; i++)SavePromo(i);
	LoadPromo();
    return DeletePVar(playerid,"PROMONAME"),DeletePVar(playerid,"PROMOVALUE"),DeletePVar(playerid,"PROMOTYPE"),DeletePVar(playerid,"PROMOACTIVATES");
}
stock LoadPromo()
{
	new Cache:result = mysql_query(mysql, "SELECT * FROM `promo`");
	TotalPromo = cache_get_row_count(mysql);
	for (new i; i < TotalPromo;i ++)
	{
		PromoInfo[i][prID] = cache_get_field_content_int(i, "id", mysql);
		PromoInfo[i][prAmount] = cache_get_field_content_int(i, "amount", mysql);
		PromoInfo[i][prType] = cache_get_field_content_int(i, "type", mysql);
		PromoInfo[i][prActivates] = cache_get_field_content_int(i, "activates", mysql);
		PromoInfo[i][prActivated] = cache_get_field_content_int(i, "activated", mysql);
		cache_get_field_content(i, "code", PromoInfo[i][prCode], mysql, 32);
		cache_get_field_content(i, "data", PromoInfo[i][prDate], mysql, 16);
	}
	cache_delete(result, mysql);
	printf("Promo-codes loaded: %d",TotalPromo);
	return 1;
}
stock SavePromo(promoid)
{
	new string[900];
	format(string, sizeof(string), "UPDATE `promo` SET `activated` = '%d' WHERE `id` = '%d'", PromoInfo[promoid][prActivated], PromoInfo[promoid][prID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string);
	else mysql_query(mysql, string, false);
	return 1;
}
stock ClearPromo(promoid)
{
	PromoInfo[promoid][prActivated] = 0;
	PromoInfo[promoid][prActivates] = 0;
	PromoInfo[promoid][prType] = 0;
	PromoInfo[promoid][prAmount] = 0;
	PromoInfo[promoid][prID] = 0;
	SetString(PromoInfo[promoid][prCode], " ");
	SetString(PromoInfo[promoid][prDate], " ");
	return 1;
}
stock ProxDetectorS(Float:radi, playerid, targetid, spec = 0)
{
    new Float:p[3];
    if(!IsPlayerConnected(playerid)) return false;
    if(!IsPlayerConnected(targetid)) return false;
    if(!spec)
    {
	    if(GetPlayerState(playerid) == 9) return false;
	    if(GetPlayerState(targetid) == 9) return false;
    }
    if(!GetPlayerPos(targetid, p[0], p[1], p[2])) return false;
	if(!IsPlayerInRangeOfPoint(playerid, radi, p[0], p[1], p[2]))
	{
		return false;
	}
	return true;
}
stock GetMonthDays(year, month)
{
	switch(month)
	{
	    case 0:     return 31;
	    case 1: 	return 31;
	    case 2: 	return februarydays(year);
	    case 3: 	return 31;
	    case 4: 	return 30;
	    case 5: 	return 31;
	    case 6: 	return 30;
	    case 7: 	return 31;
	    case 8: 	return 31;
	    case 9: 	return 30;
	    case 10: 	return 31;
	    case 11: 	return 30;
	    case 12: 	return 31;
	    default: 	return -1;
	}
	return -1;
}
stock februarydays(year)
{
	if(!(year % 4)) return 29;
	else return 28;
}
LoadFactory()
{
	new Cache:result = mysql_query(mysql,"SELECT * FROM `factory` WHERE `ID` = '1'" );
	if(cache_get_row_count(mysql) > 0)
	{
		FactoryInfo[fMaterials] = cache_get_row_int(0, 1, mysql);
		FactoryInfo[fAurum] = cache_get_row_int(0, 2, mysql);
		FactoryInfo[fDiamonds] = cache_get_row_int(0, 3, mysql);
		FactoryInfo[fSlitkov] = cache_get_row_int(0, 4, mysql);
		FactoryInfo[fBrilliantov] = cache_get_row_int(0, 5, mysql);
		FactoryInfo[gold_Sell] = cache_get_row_int(0, 6, mysql);
		FactoryInfo[gold_Buy] = cache_get_row_int(0, 7, mysql);
		FactoryInfo[diamond_Sell] = cache_get_row_int(0, 8, mysql);
		FactoryInfo[diamond_Buy] = cache_get_row_int(0, 9, mysql);
	}
	new string[312];
	f(string,"{D94141}Драгоценные металлы и украшения\n\n{949494}Материалов: %d ($5 за единицу)\n{FFD700}Золота: %d ($%d за грамм)\n{83A8EB}Бриллиантов: %d ($%d за 0.1 карат)\n\n{ffcb8c}Продажа золота: $%d (за грамм)\nПродажа бриллиантов: $%d (за 0.1 карат)", FactoryInfo[fMaterials], FactoryInfo[fSlitkov], FactoryInfo[gold_Sell], FactoryInfo[fBrilliantov], FactoryInfo[diamond_Sell], FactoryInfo[gold_Buy], FactoryInfo[diamond_Buy]);
	FactoryInfo[fInfo][0] = CreateDynamic3DTextLabel(string, -1, 1471.0629,659.3188,979.1759, 5.0);
	f(string,"{D94141}Добытые драгоценные металлы и камни\n\n{949494}Металла: %d\n{FFD700}Золота: %d\n{83A8EB}Алмазов: %d", FactoryInfo[fMaterials], FactoryInfo[fAurum], FactoryInfo[fDiamonds]);
	FactoryInfo[fInfo][1] = CreateDynamic3DTextLabel(string, -1, 872.4249,-170.8391,1034.4962, 5.0);
	cache_delete(result, mysql);
	return true;
}
stock SaveFactory()
{
	new string[320];
	format(string, sizeof(string), "UPDATE `factory` SET `Materials` = '%i',\
	`Aurum` = '%i',`Diamond` = '%i',`Slitok` = '%i',`Brilliant` = '%i',`gold_Sell` = '%i'\
	,`gold_Buy` = '%i',`diamond_Sell` = '%i',`diamond_Buy` = '%i' WHERE `ID` = '1'",
	FactoryInfo[fMaterials],FactoryInfo[fAurum],FactoryInfo[fDiamonds],FactoryInfo[fSlitkov],FactoryInfo[fBrilliantov]
	,FactoryInfo[gold_Sell],FactoryInfo[gold_Buy],FactoryInfo[diamond_Sell],FactoryInfo[diamond_Buy]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string);
	else mysql_query(mysql, string, false);
	print("Saving factory");
	return true;
}
stock UpdateFactory(){
	ForexTimer();
	new string[312];
	f(string,"{D94141}Драгоценные металлы и украшения\n\n{949494}Материалов: %d ($5 за единицу)\n{FFD700}Золота: %d ($%d за грамм)\n{83A8EB}Бриллиантов: %d ($%d за 0.1 карат)\n\n{ffcb8c}Продажа золота: $%d (за грамм)\nПродажа бриллиантов: $%d (за 0.1 карат)", FactoryInfo[fMaterials], FactoryInfo[fSlitkov], FactoryInfo[gold_Sell], FactoryInfo[fBrilliantov], FactoryInfo[diamond_Sell], FactoryInfo[gold_Buy], FactoryInfo[diamond_Buy]);
	UpdateDynamic3DTextLabelText(FactoryInfo[fInfo][0], -1, string);
	f(string,"{D94141}Добытые драгоценные металлы и камни\n\n{949494}Металла: %d\n{FFD700}Золота: %d\n{83A8EB}Алмазов: %d", FactoryInfo[fMaterials], FactoryInfo[fAurum], FactoryInfo[fDiamonds]);
	UpdateDynamic3DTextLabelText(FactoryInfo[fInfo][1], -1, string);
	format(string, sizeof(string), "На продаже {FF9900}%d материалов\n\n{FFFFFF}Встаньте на чекпоинт чтобы купить материалы", FactoryInfo[fMaterials]);
	UpdateDynamic3DTextLabelText(FactoryText[0], -1, string);
	return 1;
}
stock LoadGangZones()
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `zonesinfo`");
	GANGZONES = cache_get_row_count(mysql);
	for (new i = 0; i < GANGZONES; i ++)
	{
		//sscanf(string,"p<|>ddffff",
		GZInfo[i][gzID] = cache_get_field_content_int(i, "ID", mysql);
		GZInfo[i][gzFracID] = cache_get_field_content_int(i, "GangID", mysql);
		GZInfo[i][gzX][0] = cache_get_row_float(i, 2, mysql);
	 	GZInfo[i][gzY][0] = cache_get_row_float(i, 3, mysql);
	 	GZInfo[i][gzX][1] = cache_get_row_float(i, 4, mysql);
	 	GZInfo[i][gzY][1] = cache_get_row_float(i, 5, mysql);
	}
	cache_delete(result, mysql);
	print("Loading gangzones"); //LoadGangZones
	return false;
}
stock SaveGangZone(zoneid)
{
	new string[300];
	format(string, sizeof(string), "UPDATE `zonesinfo` SET `GangID` = '%i', `Min_X` = '%.4f', `Min_Y` = '%.4f', `Max_X` = '%.4f', `Max_Y` = '%.4f' WHERE `ID` = '%i'",
	GZInfo[zoneid][gzFracID],
	GZInfo[zoneid][gzX][0],
	GZInfo[zoneid][gzY][0],
	GZInfo[zoneid][gzX][1],
	GZInfo[zoneid][gzY][1],
	zoneid + 1);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string); else mysql_query(mysql, string, false);
	print("Saving gangzones");
	return true;
}
stock SaveGangZones()
{
	for (new i = 1;i < GANGZONES;i ++) SaveGangZone(i);
	return true;
}
forward LoadTuning(i);
public LoadTuning(i)
{
	new string[256];
	f(string, "SELECT * FROM `tuning` WHERE `ID` = '%d'", CarInfo[i][cID]);
	new Cache:result = mysql_query(mysql, string, true);
    if(cache_get_row_count(mysql)>0)
	{
		TunInfo[i][nModel] = cache_get_field_content_int(0, "Model", mysql);
		TunInfo[i][nSpoiler] = cache_get_field_content_int(0, "Spoiler", mysql);
		TunInfo[i][nHood] = cache_get_field_content_int(0, "Hood", mysql);
		TunInfo[i][nSideskirt] = cache_get_field_content_int(0, "Sides", mysql);
		TunInfo[i][nNitro] = cache_get_field_content_int(0, "Nitro", mysql);
		TunInfo[i][nExhaust] = cache_get_field_content_int(0, "Exhaust", mysql);
		TunInfo[i][nWheels] = cache_get_field_content_int(0, "Wheels", mysql);
		TunInfo[i][nRoof] = cache_get_field_content_int(0, "Roof", mysql);
		TunInfo[i][nHydraulics] = cache_get_field_content_int(0, "Hydraulics", mysql);
		TunInfo[i][nFrontBumper] = cache_get_field_content_int(0, "FBumper", mysql);
		TunInfo[i][nRearBumper] = cache_get_field_content_int(0, "RBumper", mysql);
		TunInfo[i][nPaintJob] = cache_get_field_content_int(0, "PaintJob", mysql);
		TunInfo[i][nNeon] = cache_get_field_content_int(0, "Neon", mysql);
		TunInfo[i][nSticker][0] = cache_get_field_content_int(0, "Sticker_1", mysql);
		StickerPos[i][0][0] = cache_get_field_content_float(0, "Sticker_1_px", mysql);
		StickerPos[i][0][1] = cache_get_field_content_float(0, "Sticker_1_py", mysql);
		StickerPos[i][0][2] = cache_get_field_content_float(0, "Sticker_1_pz", mysql);
		StickerPos[i][0][3] = cache_get_field_content_float(0, "Sticker_1_rx", mysql);
		StickerPos[i][0][4] = cache_get_field_content_float(0, "Sticker_1_ry", mysql);
		StickerPos[i][0][5] = cache_get_field_content_float(0, "Sticker_1_rz", mysql);
		TunInfo[i][nSticker][1] = cache_get_field_content_int(0, "Sticker_2", mysql);
		StickerPos[i][1][0] = cache_get_field_content_float(0, "Sticker_2_px", mysql);
		StickerPos[i][1][1] = cache_get_field_content_float(0, "Sticker_2_py", mysql);
		StickerPos[i][1][2] = cache_get_field_content_float(0, "Sticker_2_pz", mysql);
		StickerPos[i][1][3] = cache_get_field_content_float(0, "Sticker_2_rx", mysql);
		StickerPos[i][1][4] = cache_get_field_content_float(0, "Sticker_2_ry", mysql);
		StickerPos[i][1][5] = cache_get_field_content_float(0, "Sticker_2_rz", mysql);
		TunInfo[i][nSticker][2] = cache_get_field_content_int(0, "Sticker_3", mysql);
		StickerPos[i][2][0] = cache_get_field_content_float(0, "Sticker_3_px", mysql);
		StickerPos[i][2][1] = cache_get_field_content_float(0, "Sticker_3_py", mysql);
		StickerPos[i][2][2] = cache_get_field_content_float(0, "Sticker_3_pz", mysql);
		StickerPos[i][2][3] = cache_get_field_content_float(0, "Sticker_3_rx", mysql);
		StickerPos[i][2][4] = cache_get_field_content_float(0, "Sticker_3_ry", mysql);
		StickerPos[i][2][5] = cache_get_field_content_float(0, "Sticker_3_rz", mysql);
		TunInfo[i][nSticker][3] = cache_get_field_content_int(0, "Sticker_4", mysql);
		StickerPos[i][3][0] = cache_get_field_content_float(0, "Sticker_4_px", mysql);
		StickerPos[i][3][1] = cache_get_field_content_float(0, "Sticker_4_py", mysql);
		StickerPos[i][3][2] = cache_get_field_content_float(0, "Sticker_4_pz", mysql);
		StickerPos[i][3][3] = cache_get_field_content_float(0, "Sticker_4_rx", mysql);
		StickerPos[i][3][4] = cache_get_field_content_float(0, "Sticker_4_ry", mysql);
		StickerPos[i][3][5] = cache_get_field_content_float(0, "Sticker_4_rz", mysql);
		TunInfo[i][nSticker][4] = cache_get_field_content_int(0, "Sticker_5", mysql);
		StickerPos[i][4][0] = cache_get_field_content_float(0, "Sticker_5_px", mysql);
		StickerPos[i][4][1] = cache_get_field_content_float(0, "Sticker_5_py", mysql);
		StickerPos[i][4][2] = cache_get_field_content_float(0, "Sticker_5_pz", mysql);
		StickerPos[i][4][3] = cache_get_field_content_float(0, "Sticker_5_rx", mysql);
		StickerPos[i][4][4] = cache_get_field_content_float(0, "Sticker_5_ry", mysql);
		StickerPos[i][4][5] = cache_get_field_content_float(0, "Sticker_5_rz", mysql);
	}
	else
	{
		format(string, sizeof(string), "INSERT INTO `tuning` (`ID`,`Model`) VALUE ('%d','%i')", CarInfo[i][cID],CarInfo[i][cModel]);
		mysql_pquery(mysql, string);
	}
	cache_delete(result, mysql);
	ModCar(OwnableCar[i]);
}
stock SaveTuning(carid, const tunname[], tun)
{
	new string[150];
	format(string, sizeof(string), "UPDATE `tuning` SET `%s` = '%d' WHERE `ID` = '%i'", tunname, tun, CarInfo[carid][cID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string); 
	else mysql_query(mysql, string, false);
	return true;
}
stock SaveSticker(carid, id, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	new string[312];
	format(string, sizeof(string), "UPDATE `tuning` SET `Sticker_%d` = '%d',`Sticker_%d_px` = '%.4f',\
	`Sticker_%d_py` = '%.4f',`Sticker_%d_pz` = '%.4f',`Sticker_%d_rx` = '%.4f',`Sticker_%d_ry` = '%.4f',\
	`Sticker_%d_rz` = '%.4f' WHERE `ID` = '%i'", id, id, id, x, id, y, id, z, id, rx, id, ry, id, rz, CarInfo[carid][cID]);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string); 
	else mysql_query(mysql, string, false);
	return true;
}
stock NoVehicleFuel(carid)
{
	new playerid = GetVehicleSeat(carid, 0);
	if(playerid != INVALID_PLAYER_ID) SendError(playerid,"В этом транспорте закончилось топливо");
	return true;
}
stock ValidNumberCars(playerid)
{
	new number;
	switch(PlayerInfo[playerid][pVIP])
	{
	case 0: number = 1;
	case 1: number = 2;
	case 2: number = 3;
	case 3: number = 4;
	case 4..5: number = 5;
	}
	return number;
}
ActualVIP(playerid)
{
	if(floatround( (PlayerInfo[playerid][pVipTime]-gettime())/3600/24, floatround_ceil )>=1) return 1;
	else return 0;
}
stock IsValidNumberCars(playerid)
{
    GetNumberCars(playerid,PlayerInfo[playerid][pCars]);
	new cars = PlayerInfo[playerid][pCars]+1;
	new vc = ValidNumberCars(playerid);
    if(vc >= cars) return true;
    return false;
}
stock ConnectMySQL()
{
	#if defined PROFILER_INC 
	mysql = mysql_connect("db2.myarena.ru", "wend_admin", "wend_test", "sd248nth70", 3306, true, 10);
	#else 
	mysql = mysql_connect("localhost", "administrator", "gamemode", "sd248nth70", 3306, true, 10);
	#endif
    mysql_query(mysql, "SET NAMES 'cp1251'",false);
	mysql_set_charset("cp1251", mysql);
	new date[3];
	getdate(date[2], date[1], date[0]);
	if(date[0] == 15)mysql_query(mysql, "TRUNCATE TABLE `onlineinfo`; TRUNCATE TABLE `chatlog`; TRUNCATE TABLE `killlog`; TRUNCATE TABLE `deathlog`;", false);
    return 1;
}
stock CheckMySQLConnection()
{
    if(mysql_ping() == -1) mysql_reconnect();
    return true;
}
stock GetIntGHS( interior )
{
	new ghs;
	switch(interior)
	{
		case 1: ghs = 1;
		case 2: ghs = 2;
		case 3: ghs = 3;
		case 4: ghs = 4;
		case 5: ghs = 5;
		case 6: ghs = 6;
		case 7: ghs = 7;
		case 8: ghs = 8;
		case 9: ghs = 9;
		case 10: ghs = 10;
		case 11: ghs = 12;
		case 12: ghs = 15;
		case 13: ghs = 16;
		case 14: ghs = 17;
		case 15: ghs = 18;
		case 16: ghs = 19;
		case 17: ghs = 20;
		case 18: ghs = 21;
		case 19: ghs = 22;
		case 20: ghs = 23;
		case 21: ghs = 24;
		case 22: ghs = 25;
		case 23: ghs = 26;
	}
	return ghs;
}
stock SetHouseInt( houseid, inte )
{
	new i = GetIntGHS(inte);
	SetInHousePos(houseid,GHSPos[i][0],GHSPos[i][1],GHSPos[i][2]);
	HouseInfo[houseid][hInt] = IntInfo[inte][iInterior];
	HouseInfo[houseid][hLevel] = IntInfo[inte][iLevel];
	return true;
}
stock IsAArmy(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_ARMYSF,TEAM_ARMY,TEAM_ARMYLV: return true;
	}
	return false;
}
stock IsANews(playerid)
{
	new team = GetTeamID(playerid);
	switch(team)
	{
	    case TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV: return true;
	}
	return false;
}
stock IsANewsCar(carid)
{
	switch(VehicleInfo[carid][vTeam])
	{
  		case TEAM_RADIO,TEAM_RADIOSF,TEAM_RADIOLV: return true;
	}
	return false;
}
stock IsACop(playerid, other = 1)
{
	new team = GetTeamID(playerid);
	if(other)
	{
		switch(team)
		{
		    case TEAM_LSPD, TEAM_RCPD, TEAM_FBI, TEAM_PDLV, TEAM_SFPD: return true;
		}
	}
	else
	{
	    switch(team)
		{
		    case TEAM_LSPD, TEAM_RCPD, TEAM_FBI, TEAM_PDLV, TEAM_SFPD: return true;
		}
	}
	return false;
}
IsASAPD(playerid)
{
	switch(GetTeamID(playerid))
	{
		case TEAM_LSPD, TEAM_SFPD, TEAM_PDLV, TEAM_RCPD: return true;
	}
	return false;
}
stock IsACopCar(carid, other = 1)
{
	if(other)
	{
		switch(VehicleInfo[carid][vTeam])
		{
      		case TEAM_LSPD..TEAM_RCPD, TEAM_FBI,TEAM_PDLV, TEAM_SFPD: return true;
		}
	}
	else
	{
	    switch(VehicleInfo[carid][vTeam])
		{
		    case TEAM_LSPD..TEAM_RCPD,TEAM_PDLV: return true;
		}
	}
	return false;
}
stock SendCopsMessage(color,const string[])
{
	foreach(new i:Player)
	{
	    if(!IsPlayerConnected(i)) continue;
	    if(!IsPlayerLogged[i]) continue;
	    if(IsACop(i)) SendClientMessage(i,color,string);
	}
	return true;
}
stock SetFullness(playerid, ammount)
{
	if(ammount > MAX_PLAYER_SATIETY(playerid)) Fullness[playerid] = MAX_PLAYER_SATIETY(playerid);
	else if(ammount < 0) Fullness[playerid] = 0;
	else Fullness[playerid] = ammount;
	SetPlayerProgressBarValue(playerid,golod[playerid], Fullness[playerid]);
	Hunger(playerid, PlayerInfo[playerid][pBuyWalent]);
	return true;
}
stock GiveFullness(playerid, ammount)
{
	SetFullness(playerid,Fullness[playerid] + ammount);
	if(Fullness[playerid] + ammount > MAX_PLAYER_SATIETY(playerid)) Fullness[playerid] = MAX_PLAYER_SATIETY(playerid);
	Hunger(playerid, PlayerInfo[playerid][pBuyWalent]);
}
stock SendHouseMessage(houseid,color,const message[])
{
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(SlotValue[i][1] != houseid) continue;
		SendClientMessage(i,color,message);
	}
	return true;
}
stock AsendClientMessageToAll(color,const text[])
{
	foreach(new i:Player)
	{
	    if(PlayerInfo[i][pF_Skill]==0)
	    {
	        if(!IsPlayerConnected(i)) continue;
	        SendClientMessage(i,color,text);
	    }
	}
}
stock SendTeamMessage(team,color,const text[])
{
    foreach(new i:Player)
	{
	    if(PlayerInfo[i][pBy_Skill]==0)
	    {
	        if(GetTeamID(i) == team || Vnedren[i]==team )
	        {
				if(!IsPlayerConnected(i) || !TeamDuty[i]) continue;
			    SendClientMessage(i,color,text);
			}
		}
    }
    return true;
}
stock SendGosMessage(color,const text[])
{
    foreach(new i:Player)
    {
		if(IsPlayerConnected(i) && TeamDuty[i])
		{
	    	if(
			GetTeamID(i) == TEAM_LSPD 	||
			GetTeamID(i) == TEAM_RCPD 	||
			GetTeamID(i) == TEAM_FBI    ||
			GetTeamID(i) == TEAM_ARMY   ||
			GetTeamID(i) == TEAM_ARMYSF   ||
			GetTeamID(i) == TEAM_SFPD 	||
			GetTeamID(i) == TEAM_LICENSERS ||
            GetTeamID(i) == TEAM_M4C  	||
            GetTeamID(i) == TEAM_MEDICLV ||
            GetTeamID(i) == TEAM_MERIALS||
			GetTeamID(i) == TEAM_ARMYLV||

			GetTeamID(i) == TEAM_RADIO||
			GetTeamID(i) == TEAM_RADIOSF||
			GetTeamID(i) == TEAM_RADIOLV||

			GetTeamID(i) == TEAM_BANK	||
			GetTeamID(i) == TEAM_MERIALV ||
			GetTeamID(i)== TEAM_PDLV)
			{
			    if(PlayerInfo[i][pP_Skill]==0) SendClientMessage(i,color,text);
			}
	    }
    }
    return true;
}
stock RespawnCars(first = 1, endcar = -1)
{
	if(endcar == -1) endcar = ADD_VEHICLES;
	new bool:Occuped[MAX_VEHICLES];
	foreach(new i:Player)
	{
	    if(IsPlayerConnected(i))
	    {
		    if(IsPlayerInAnyVehicle(i))
		    {
		        new carid = GetPlayerVehicleID(i);
		        Occuped[carid] = true;
		        if(IsTrailerAttachedToVehicle(carid)) Occuped[GetVehicleTrailer(carid)] = true;
		    }
	    }
	}
	for(new i = first; i <= endcar;i ++)
	{
	    if(GetVehicleModelEx(i) != 0)
	    {
		    if(!Occuped[i])
			{
				SetVehicleToRespawn(i);
				SetEngineStatus(i, false, -1);
			}
	    }
	}
	return true;
}
stock SetInHousePos(houseid,Float:X,Float:Y,Float:Z)
{
    HouseInfo[houseid][hExit][0] = X;
    HouseInfo[houseid][hExit][1] = Y;
    HouseInfo[houseid][hExit][2] = Z;
	return true;
}
stock ConfirmIP(playerid)
{
	if(IsASuccesIP(PlayerInfo[playerid][pLastIP], PlayerIp[playerid])
	|| IsASuccesIP(PlayerCheckIP1[playerid], PlayerIp[playerid])
	|| IsASuccesIP(PlayerCheckIP2[playerid], PlayerIp[playerid]))return true;
	return false;
}
stock SetPlayerCriminal(playerid,forplayerid,wanted,const reason[])
{
	new string[200];
	if(wanted > 6) PlayerInfo[forplayerid][pWanted] = 6;
	else PlayerInfo[forplayerid][pWanted] = wanted;
	if(PlayerInfo[forplayerid][pZKP]>wanted)PlayerInfo[forplayerid][pZKP]-=wanted;
	SetPlayerWantedLevelEx(forplayerid, PlayerInfo[forplayerid][pWanted]);
	format(string,sizeof(string),"Внимание! %s[%d] был(а) объявлен(a) в розыск! Обвинитель: %s[%d] | Причина: %s | Уровень розыска: %d",Name(forplayerid),forplayerid,Name(playerid),playerid,reason,PlayerInfo[forplayerid][pWanted]);
	SendCopsMessage(COLOR_RED,string);
	return true;
}
stock SetPlayerWantedLevelEx(playerid, level){
	if(IsValidDynamic3DTextLabel(WantedText[playerid]))DestroyDynamic3DTextLabel(WantedText[playerid]);
	if(level >= 1 && level <= 3)WantedText[playerid] = CreateDynamic3DTextLabel("Подозреваемый", 0xFFCB8CFF, 0.0,0.0,0.7, 20.0, playerid, -1, 1);
	if(level >= 4 && level <= 6)WantedText[playerid] = CreateDynamic3DTextLabel("Преступник", 0xD94141FF, 0.0,0.0,0.7, 20.0, playerid, -1, 1);
	SetPlayerWantedLevel(playerid, level);
}
stock SetPlayerJB(forplayerid)
{
	new string[200];
	PlayerInfo[forplayerid][pWanted] = 6;
	if(PlayerInfo[forplayerid][pZKP]>6)PlayerInfo[forplayerid][pZKP]-=6;
	SetPlayerWantedLevelEx(forplayerid, 6);
	format(string,sizeof(string),"Внимание! %s[%d] был(а) объявлен(a) в розыск! | Причина: Побег из тюрьмы | Уровень розыска: %d",Name(forplayerid),forplayerid,PlayerInfo[forplayerid][pWanted]);
	SendCopsMessage(COLOR_RED,string);
	return true;
}
public ModCar(carid)
{
	new vehid = GetVehicleID(carid);
	if(vehid == -1)return 1;
    if(CarInfo[vehid][cModel] != TunInfo[ vehid ][ nModel ])
	{
	    TunInfo[ vehid ][ nSpoiler ] = 0;
	    TunInfo[ vehid ][ nHood ] = 0;
	    TunInfo[ vehid ][ nNitro ] = 0;
	    TunInfo[ vehid ][ nExhaust ] = 0;
		TunInfo[ vehid ][ nSideskirt ] = 0;
	    TunInfo[ vehid ][ nWheels ] = 0;
	    TunInfo[ vehid ][ nRoof ] = 0;
	    TunInfo[ vehid ][ nHydraulics ] = 0;
	    TunInfo[ vehid ][ nFrontBumper ] = 0;
	    TunInfo[ vehid ][ nRearBumper ] = 0;
		TunInfo[ vehid ][ nPaintJob ] = -1;
		TunInfo[ vehid ][ nNeon ] = 0;
	    TunInfo[ vehid ][ nModel ] = CarInfo[vehid][cModel];
	    ResetTuning(vehid);
	    return true;
	}
    if(TunInfo[vehid][nSpoiler] != 0) AddVehicleComponent(carid,TunInfo[vehid][nSpoiler]);
	if(TunInfo[vehid][nHood] != 0) AddVehicleComponent(carid,TunInfo[vehid][nHood]);
	if(TunInfo[vehid][nSideskirt] != 0 ) AddVehicleComponent(carid,TunInfo[vehid][nSideskirt]);
	if(TunInfo[vehid][nNitro] != 0) AddVehicleComponent(carid,TunInfo[vehid][nNitro]);
	if(TunInfo[vehid][nExhaust] != 0 ) AddVehicleComponent(carid,TunInfo[vehid][nExhaust]);
	if(TunInfo[vehid][nWheels] != 0 )AddVehicleComponent(carid,TunInfo[vehid][nWheels]);
	if(TunInfo[vehid][nRoof] != 0 ) AddVehicleComponent(carid,TunInfo[vehid][nRoof]);
	if(TunInfo[vehid][nHydraulics] != 0 )AddVehicleComponent(carid,TunInfo[vehid][nHydraulics]);
	if(TunInfo[vehid][nFrontBumper] != 0 ) AddVehicleComponent(carid,TunInfo[vehid][nFrontBumper]);
	if(TunInfo[vehid][nRearBumper] != 0) AddVehicleComponent(carid,TunInfo[vehid][nRearBumper]);
	if(TunInfo[vehid][nPaintJob] != -1) ChangeVehiclePaintjob(carid,TunInfo[vehid][nPaintJob]);
	if(TunInfo[vehid][nNeon] != 0){
		VehObjects[carid][23] = CreateDynamicObject(TunInfo[vehid][nNeon],0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		VehObjects[carid][24] = CreateDynamicObject(TunInfo[vehid][nNeon],0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
		AttachDynamicObjectToVehicle(VehObjects[carid][23], carid, -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(VehObjects[carid][24], carid, 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
	}
	if(TunInfo[vehid][nSticker][0] != 0)CreateSticker(carid, 0, 1);
	if(TunInfo[vehid][nSticker][1] != 0)CreateSticker(carid, 1, 1);
	if(TunInfo[vehid][nSticker][2] != 0)CreateSticker(carid, 2, 1);
	if(TunInfo[vehid][nSticker][3] != 0)CreateSticker(carid, 3, 1);
	if(TunInfo[vehid][nSticker][4] != 0)CreateSticker(carid, 4, 1);
	return true;
}
stock DelTunCar(carid)
{
	new vehid = GetVehicleID(carid);
    if(TunInfo[vehid][nHydraulics]!=0)RemoveVehicleComponent(carid,TunInfo[vehid][nHydraulics]);
    if(TunInfo[vehid][nSpoiler]!=0) RemoveVehicleComponent(carid,TunInfo[vehid][nSpoiler]);
	if(TunInfo[vehid][nHood]!=0)RemoveVehicleComponent(carid,TunInfo[vehid][nHood]);
	if(TunInfo[vehid][nSideskirt]!=0)RemoveVehicleComponent(carid,TunInfo[vehid][nSideskirt]);
	if(TunInfo[vehid][nNitro]!=0)RemoveVehicleComponent(carid,TunInfo[vehid][nNitro]);
	if(TunInfo[vehid][nExhaust]!=0)RemoveVehicleComponent(carid,TunInfo[vehid][nExhaust]);
	if(TunInfo[vehid][nWheels]!=0)RemoveVehicleComponent(carid,TunInfo[vehid][nWheels]);
	if(TunInfo[vehid][nRoof]!=0)RemoveVehicleComponent(carid,TunInfo[vehid][nRoof]);
	if(TunInfo[vehid][nFrontBumper] !=0)RemoveVehicleComponent(carid,TunInfo[vehid][nFrontBumper]);
	if(TunInfo[vehid][nRearBumper]!=0)RemoveVehicleComponent(carid,TunInfo[vehid][nRearBumper]);
	if(TunInfo[vehid][nPaintJob]!=-1)ChangeVehiclePaintjob(carid,-1);
	if(TunInfo[vehid][nNeon]!=0){
		DestroyDynamicObject(VehObjects[carid][23]);
		DestroyDynamicObject(VehObjects[carid][24]);
	}
	if(TunInfo[vehid][nSticker][0]!=0)DestroySticker(carid, 0);
	if(TunInfo[vehid][nSticker][1]!=0)DestroySticker(carid, 1);
	if(TunInfo[vehid][nSticker][2]!=0)DestroySticker(carid, 2);
	if(TunInfo[vehid][nSticker][3]!=0)DestroySticker(carid, 3);
	if(TunInfo[vehid][nSticker][4]!=0)DestroySticker(carid, 4);
	TunInfo[vehid][nHydraulics] = 0;//
    TunInfo[vehid][nSpoiler] = 0;//
    TunInfo[vehid][nHood] = 0;//
    TunInfo[vehid][nSideskirt] = 0;//
    TunInfo[vehid][nNitro] = 0;//
    TunInfo[vehid][nExhaust] = 0;//
    TunInfo[vehid][nWheels] = 0;//
    TunInfo[vehid][nRoof] = 0;//
    TunInfo[vehid][nFrontBumper] = 0;//
    TunInfo[vehid][nRearBumper] = 0;//
	TunInfo[vehid][nNeon] = 0;//
	TunInfo[vehid][nSticker][0] = 0;
	TunInfo[vehid][nSticker][1] = 0;
	TunInfo[vehid][nSticker][2] = 0;
	TunInfo[vehid][nSticker][3] = 0;
	TunInfo[vehid][nSticker][4] = 0;
	TunInfo[vehid][nPaintJob] = -1;//
	return true;
}
stock IsPlayerInHisVehicle(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
	    if(IsPlayerHaveCar(playerid,GetPlayerVehicleID(playerid))) return true;
	}
	return false;
}
stock IsAtGunShop(playerid)
{
	switch(BizEntered[playerid])
	{
	    case 1..3,10: return true;
	}
	return false;
}
stock IsAtBar(playerid)
{
	switch(BizEntered[playerid])
	{
	    case 4..6: return true;
	}
	return false;
}
public PlayerFishing(playerid)
{
	new rand_fish = 1+random(sizeof(FishName) + 8);
	new string[150];
	new Fished;
	TogglePlayerControllable(playerid, true);
	RemovePlayerAttachedObjectEx(playerid, 6);
	ClearAnims(playerid);
	Fishing[playerid] = false;
	switch(rand_fish)
	{
	    case 1..13:
	    {
			for(new i;i < 5;i ++)
			{
			    if(!PlayerFish[playerid][i])
			    {
			        new fish_massa = 1 + random(5);
	        		format(string,sizeof(string),"Вы поймали ' {7396FB}%s{FFFFFF} ' массой %d кг",FishName[rand_fish],fish_massa);
	        		SendClientMessage(playerid,COLOR_WHITE,string);
			        PlayerFish[playerid][i] = rand_fish;
			        FishMassa[playerid][i] = fish_massa;
			        PlayerInfo[playerid][pWorms] --;
			        Fished = 1;
			        break;
			    }
			}
			if(!Fished)
			{
			    new fish_massa = 1 + random(5);
	        	format(string,sizeof(string),"{BE2D2D}Вы поймали {FFFFFF}( %s ){BE2D2D} массой %d Кг, но вы не унесете больше 5-и рыб",FishName[rand_fish],fish_massa);
	        	SendClientMessage(playerid,COLOR_WHITE,string);
			}
	    }
	    case 14..17:
	    {
	        format(string,sizeof(string),"{BE2D2D}Рыба {FFFFFF}( %s ){BE2D2D} сорвалась и съела наживку",FishName[1+random(13)]);
	        SendClientMessage(playerid,COLOR_GRAY,string);
	        PlayerInfo[playerid][pWorms] --;
	    }
	    default:
	    {
	        format(string,sizeof(string),"{BE2D2D}Рыба{FFFFFF} ( %s ){BE2D2D} сорвалась, но наживка осталась на крючке",FishName[1+random(13)]);
	        SendClientMessage(playerid,COLOR_GRAY,string);
	    }
	}
	for(new i;i < sizeof(FishZone);i ++)
	{
		if(IsPlayerInDynamicArea(playerid, Fish_CP[i][1]))return ShowPlayerDialogEx(playerid,212,0,"{43CD80}Место для рыбалки","{FFFFFF}Вы действительно хотите порыбачить?\nДля рыболовли вам необходима удочка, которую можно приобрести в любом 24/7\nи наживка для рыбалки, ее так же можно там купить.\nРыбу можно продать в магазин","да","Нет");
	}
	return true;
}
stock ShowRules(playerid, dialogid = 0)
{
	new listitems[1465];
	strcat(listitems, "{43CD80}1. Игровой процесс{FFFFFF}");
	strcat(listitems, "\n1.1 Запрещено использовать читы, трейнеры, моды и т.д");
	strcat(listitems, "\n1.2 Запрещено убивать игроков на месте спауна");
	strcat(listitems, "\n1.3 Запрещено использовать <ESC> в целях 'спасения' от оппонента");
	strcat(listitems, "\n1.4 Запрещено стоять на паузе в игре длительное время");
	strcat(listitems, "\n1.5 Запрещено использование багов, ошибок, недоработок мода");
	strcat(listitems, "\n1.6 Запрещена любая ускоренная прокачка персонажа и навыков");
	strcat(listitems, "\n1.7 Запрещено заниматься не игровой коммерцией");
	strcat(listitems, "\n1.8 Запрещено передавать свой пароль на сервере другим лицам");
	strcat(listitems, "\n\n{43CD80}2. Процесс общения{FFFFFF}");
	strcat(listitems, "\n2.1 Запрещено проявлять неуважение к серверу и его разработчикам");
	strcat(listitems, "\n2.2 Запрещены угрозы игрокам (не относящиеся к игровому процессу)");
	strcat(listitems, "\n2.3 Запрещено слишком часто писать заглавными буквами");
	strcat(listitems, "\n2.4 Запрещено рекламировать что-либо (сайты, форумы, сервера)");
	strcat(listitems, "\n2.5 Запрещено часто повторять одинаковые фразы");
	strcat(listitems, "\n\n{43CD80}3. Администрирование сервера{FFFFFF}");
	strcat(listitems, "\n3.1 Запрещено обсуждать/критиковать действия администрации");
	strcat(listitems, "\n3.2 Запрещено препятствовать администрации в работе");
	strcat(listitems, "\n3.3 Запрещено оскорблять администрацию сервера");
	strcat(listitems, "\n\n{43CD80}4. Помощь по игре{FFFFFF}");
	strcat(listitems, "\n4.1 Основные функции сервера в меню персонажа, нажмите Y");
	if(!ShowPlayerDialogEx(playerid,dialogid,0,"{43CD80}Правила сервера",listitems,"Принять",""))SendError(playerid,"Недоступно в данный момент");
	return true;
}
stock SetPlayerAttachedObjectEx(playerid, index, modelid, bone, Float:fOffsetX = 0.0, Float:fOffsetY = 0.0, Float:fOffsetZ = 0.0, Float:fRotX = 0.0, Float:fRotY = 0.0, Float:fRotZ = 0.0, Float:fScaleX = 1.0, Float:fScaleY = 1.0, Float:fScaleZ = 1.0)
{
	SetPlayerAttachedObject(playerid, index, modelid, bone, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	return true;
}
stock IsGiveWarn(playerid, targetid)
{
	if(PlayerInfo[playerid][pMember] == PlayerInfo[targetid][pMember])
	{
	    if(PlayerInfo[playerid][pRank] >= OrgInfo[PlayerInfo[playerid][pMember]][Max_Rang]-1) return true;
	}
	return false;
}
stock ShowDonate(playerid)
{
	new string[600],donate[600];
	new Cache:resultcache,donat;
	format(string,sizeof(string),"SELECT `user_nodonate` FROM `accounts` WHERE `NickName` = '%s'",PlayerName[playerid]);
	resultcache = mysql_query(mysql, string, true);
	if(cache_num_rows())
	{
		donat = cache_get_field_content_int(0, "user_nodonate", mysql);
		if(PlayerInfo[playerid][PromoActive] != -1 && donat >= 100)
		{
			switch(PromoInfo[PlayerInfo[playerid][PromoActive]][prType])
			{
			case 1: PlayerInfo[playerid][pVirMoney] += PromoInfo[PlayerInfo[playerid][PromoActive]][prAmount];
			case 2: PlayerInfo[playerid][pVirMoney] += donat*PromoInfo[PlayerInfo[playerid][PromoActive]][prAmount];
			}
			PlayerInfo[playerid][PromoActive] = -1;
		}
		else PlayerInfo[playerid][pVirMoney] += donat;
		SaveAccount(playerid);
		new query[256];
		format(query, sizeof(query), "UPDATE `accounts` SET `user_nodonate` = '0' WHERE `NickName` = '%s' LIMIT 1",PlayerName[playerid]);
		mysql_pquery(mysql, query);
		DayDonate += donat;
		PlayerInfo[playerid][Donate_Score] += donat;
	}
	cache_delete(resultcache, mysql);
	format(donate,sizeof(donate), "\n\n\\c{ffffff}Для пополнения счета посетите сайт: {7396FB}%s/donate\n", Mode_Site);
    format(string,sizeof(string),"\n\\cНомер аккаунта: [{43CD80}%d{ffffff}]",PlayerInfo[playerid][pID]);
	strcat(donate,string);
	format(string,sizeof(string),"\n\\cТекущий баланс счёта: [{43CD80}%d DP{ffffff}]",PlayerInfo[playerid][pVirMoney]);
	strcat(donate,string);
	format(string,sizeof(string),"\n\\cДоступно к выводу: [{43CD80}%d DP{ffffff}]",PlayerInfo[playerid][RoulBalance]);
	strcat(donate,string);
	if(PlayerInfo[playerid][pVIP])
	{
	    if(PlayerInfo[playerid][pVIP]==5)
	    {
	        format(string,sizeof(string),"\n\\c{FFFFFF}Статус: {43CD80}GG+ (Навсегда)");
			strcat(donate,string);
	    }
		else
		{
			new esc = floatround( (PlayerInfo[playerid][pVipTime]-gettime())/3600/24, floatround_ceil );
		 	if(esc>=1)
			{
				format(string,sizeof(string),"\n\\c{FFFFFF}Статус будет понижен/снят через {7396FB}%d дней{ffffff}. Транспорт останется",esc);
				strcat(donate,string);
			}
			else
			{
				format(string,sizeof(string),"\n\\c{FFFFFF}Статус: {7396FB}Необходимо продлить");
				strcat(donate,string);
			}
   		}
	}
	strcat(donate, "\n\n");
	if(!Dialog_Open(playerid,222,DIALOG_STYLE_MSGBOX,"{43CD80}Платные услуги",donate,"Заказать","Отмена"))SendError(playerid,"Недоступно в данный момент");
	return true;
}
stock IsACopGate(gate)
{
	switch(GateInfo[gate][gOrg])
	{
	    case TEAM_LSPD,TEAM_FBI,TEAM_PDLV, TEAM_SFPD: return true;
	    default: return false;
	}
	return false;
}
stock IsACopBarrier(barrier)
{
	switch(BarrierInfo[barrier][brOrg])
	{
	    case TEAM_LSPD,TEAM_PDLV,TEAM_FBI,TEAM_SFPD: return true;
	    default: return false;
	}
	return false;
}
stock IsValidPlayer(player, playerid)
{
	return (player != INVALID_PLAYER_ID && player == playerid);
}

stock IsPlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if((x <= max_x && x >= min_x) && (y <= max_y && y >= min_y)) return 1;
	return 0;
}
stock PlayerToPlayer(playerid, toplayer, Float:radi)
{
	new Float:newposx, Float:newposy, Float:newposz;
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tmpposx, Float:tmpposy, Float:tmpposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	GetPlayerPos(toplayer, newposx, newposy, newposz);
	tmpposx = (oldposx -newposx);
	tmpposy = (oldposy -newposy);
	tmpposz = (oldposz -newposz);
	if (((tmpposx < radi) && (tmpposx > -radi)) && ((tmpposy < radi) && (tmpposy > -radi)) && ((tmpposz < radi) && (tmpposz > -radi)))return 1;
	return 0;
}
stock FindTheNearestJob(playerid)
{
    JobsInfo[Position][0] = GetPlayerDistanceFromPoint(playerid, JobsPos[0][0], JobsPos[0][1], JobsPos[0][2]);
    for(new i; i < sizeof(JobsInfo); ++i)
    {
        if(JobsInfo[Position][0] <= (JobsInfo[Position][1] = GetPlayerDistanceFromPoint(playerid, JobsPos[i][0], JobsPos[i][1], JobsPos[i][2]))) continue;
        JobsInfo[Position][0] = JobsInfo[Position][1];
        JobsInfo[JobsId] = i;
    }
    EnableGPSForPlayer(playerid, JobsPos[JobsInfo[JobsId]][0], JobsPos[JobsInfo[JobsId]][1], JobsPos[JobsInfo[JobsId]][2]);
    return false;
}
stock endrabavt(i)
{
	if(pTemp[i][pArendaCar]!=-1)
	{
	    new string[200],carsid=GetPlayerVehicleID(i),playerid=i;
		strring = "";
	    GetVehicleHealth(carsid,VehicleHealth[carsid] );
	    if(VehicleHealth[carsid]<700.0)
	    {
	        new money = floatround(1000.0-VehicleHealth[carsid]);
			if(SlotValue[playerid][0]>=money)
			{
				GiveMoney(playerid,-money);
				format(string,sizeof(string),"Вы заплатили $%d за порчу государственного имущества! (( Вы сильно побили машину ))",money);
				SendClientMessage(playerid,COLOR_LIGHTRED,string);
			}
			else if(PlayerInfo[playerid][pBank]>=money)
			{
				GiveBankMoney(playerid,-money);
				format(string,sizeof(string),"С банковского счета было изьято $%d за порчу гос.имущества (( Вы сильно побили машину ))",money);
				SendClientMessage(playerid,COLOR_LIGHTRED,string);
			}
			else if(PlayerInfo[playerid][pZKP]>=10)
			{
		 		PlayerInfo[playerid][pZKP]-=10;
		 		SendClientMessage(playerid,COLOR_LIGHTRED,"У вас не достаточно денег чтобы заплатить за разбитое авто. Ваша законопослушность была снижена");
			}
	    }
		format(string,sizeof(string),"Рабочий день завершен. Вами заработано: $%d", BusMoney[i]);
		SendClientMessage(i, COLOR_ACHAT,string);
		GiveMoney(i,BusMoney[i]);
		new logtime[3],logdate[3],logtimestring[16];
		getdate(logdate[2],logdate[1],logdate[0]);
		gettime(logtime[0],logtime[1],logtime[2]);
		f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
		WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[i][pID],Name(i),-1,"Система","Зарплата автобусника",BusMoney[i],PlayerIp[i],"127.0.0.1",GetMoney(playerid));
		SetVehicleToRespawn(pTemp[i][pArendaCar]);
		BusTime[i]=0;
		pTemp[i][pArendaCar] = -1;
		BusMoney[i]=0;
		pPressed[i] = 0;
		DisablePlayerRaceCheckpoint(i);
		Vehs[i][vReis] = 0;
	}
	return 1;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(gpss[playerid]==1){
		SendInfo(playerid, "Вы прибыли в место назначения");
		DisableGPSForPlayer(playerid, 1);
	}
    new getcar = GetPlayerVehicleID(playerid);
   	if(PlayerInfo[playerid][pJob] == 1 && GetVehicleModelEx(getcar) == 431 && GetPlayerState(playerid)==2)
    {
        DisablePlayerRaceCheckpoint(playerid);
        switch(Vehs[playerid][vReis])
		{
		    case 1:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 36)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusCityLS[0][BUSSTATION1],BusCityLS[0][BUS_COORD1][0],BusCityLS[0][BUS_COORD1][1],BusCityLS[0][BUS_COORD1][2],BusCityLS[1][BUS_COORD1][0],BusCityLS[1][BUS_COORD1][1],BusCityLS[1][BUS_COORD1][2],10.0);
			        return 1;
			    }
			    if(BusCityLS[pPressed[playerid]-1][BUSSTATION1] == 1)
				{
	 				new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					format(string,sizeof(string),"Автобус по маршруту Пригород Los-Santos отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
				if(!IsPlayerInRangeOfPoint(playerid,30,BusCityLS[pPressed[playerid]-1][BUS_COORD1][0],BusCityLS[pPressed[playerid]-1][BUS_COORD1][1],BusCityLS[pPressed[playerid]-1][BUS_COORD1][2]))ToCheat(1,playerid);
    			SetPlayerRaceCheckpoint(playerid,BusCityLS[pPressed[playerid]][BUSSTATION1],BusCityLS[pPressed[playerid]][BUS_COORD1][0],BusCityLS[pPressed[playerid]][BUS_COORD1][1],BusCityLS[pPressed[playerid]][BUS_COORD1][2],BusCityLS[pPressed[playerid]+1][BUS_COORD1][0],BusCityLS[pPressed[playerid]+1][BUS_COORD1][1],BusCityLS[pPressed[playerid]+1][BUS_COORD1][2],10.0);
			}
			case 2:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 66)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusFarm[0][BUSSTATION2],BusFarm[0][BUS_COORD2][0],BusFarm[0][BUS_COORD2][1],BusFarm[0][BUS_COORD2][2],BusFarm[1][BUS_COORD2][0],BusFarm[1][BUS_COORD2][1],BusFarm[1][BUS_COORD2][2],10.0);
			        return 1;
			    }
			    if(BusFarm[pPressed[playerid]-1][BUSSTATION2] == 1)
				{
				    new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
                    format(string,sizeof(string),"Автобус по маршруту ЖДЛС » Виноградник » Завод отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusFarm[pPressed[playerid]][BUSSTATION2],BusFarm[pPressed[playerid]][BUS_COORD2][0],BusFarm[pPressed[playerid]][BUS_COORD2][1],BusFarm[pPressed[playerid]][BUS_COORD2][2],BusFarm[pPressed[playerid]+1][BUS_COORD2][0],BusFarm[pPressed[playerid]+1][BUS_COORD2][1],BusFarm[pPressed[playerid]+1][BUS_COORD2][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,BusFarm[pPressed[playerid]-1][BUS_COORD2][0],BusFarm[pPressed[playerid]-1][BUS_COORD2][1],BusFarm[pPressed[playerid]-1][BUS_COORD2][2]))return Kick(playerid);
			}
			case 3:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 38)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusZav[0][BUSSTATION3],BusZav[0][BUS_COORD3][0],BusZav[0][BUS_COORD3][1],BusZav[0][BUS_COORD3][2],BusZav[1][BUS_COORD3][0],BusZav[1][BUS_COORD3][1],BusZav[1][BUS_COORD3][2],10.0);
			        return 1;
			    }
			    if(BusZav[pPressed[playerid]-1][BUSSTATION3] == 1)
				{
				    new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					format(string,sizeof(string),"Автобус по маршруту ЖДЛС » Завод отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusZav[pPressed[playerid]][BUSSTATION3],BusZav[pPressed[playerid]][BUS_COORD3][0],BusZav[pPressed[playerid]][BUS_COORD3][1],BusZav[pPressed[playerid]][BUS_COORD3][2],BusZav[pPressed[playerid]+1][BUS_COORD3][0],BusZav[pPressed[playerid]+1][BUS_COORD3][1],BusZav[pPressed[playerid]+1][BUS_COORD3][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,BusZav[pPressed[playerid]-1][BUS_COORD3][0],BusZav[pPressed[playerid]-1][BUS_COORD3][1],BusZav[pPressed[playerid]-1][BUS_COORD3][2]))ToCheat(1,playerid);
			}
			case 4:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 27)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusAvto[0][BUSSTATION4],BusAvto[0][BUS_COORD4][0],BusAvto[0][BUS_COORD4][1],BusAvto[0][BUS_COORD4][2],BusAvto[1][BUS_COORD4][0],BusAvto[1][BUS_COORD4][1],BusAvto[1][BUS_COORD4][2],10.0);
			        return 1;
			    }
			    if(BusAvto[pPressed[playerid]-1][BUSSTATION4] == 1)
				{
				    new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					format(string,sizeof(string),"Автобус по маршруту Внутригородской Los-Santos отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusAvto[pPressed[playerid]][BUSSTATION4],BusAvto[pPressed[playerid]][BUS_COORD4][0],BusAvto[pPressed[playerid]][BUS_COORD4][1],BusAvto[pPressed[playerid]][BUS_COORD4][2],BusAvto[pPressed[playerid]+1][BUS_COORD4][0],BusAvto[pPressed[playerid]+1][BUS_COORD4][1],BusAvto[pPressed[playerid]+1][BUS_COORD4][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,BusAvto[pPressed[playerid]-1][BUS_COORD4][0],BusAvto[pPressed[playerid]-1][BUS_COORD4][1],BusAvto[pPressed[playerid]-1][BUS_COORD4][2]))ToCheat(1,playerid);
			}
			case 5:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 50)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusLv[0][BUSSTATION5],BusLv[0][BUS_COORD5][0],BusLv[0][BUS_COORD5][1],BusLv[0][BUS_COORD5][2],BusLv[1][BUS_COORD5][0],BusLv[1][BUS_COORD5][1],BusLv[1][BUS_COORD5][2],10.0);
			        return 1;
			    }
			    if(BusLv[pPressed[playerid]-1][BUSSTATION5] == 1)
				{
				    new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					format(string,sizeof(string),"Автобус по маршруту ЖДЛС » ЖДЛВ отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusLv[pPressed[playerid]][BUSSTATION5],BusLv[pPressed[playerid]][BUS_COORD5][0],BusLv[pPressed[playerid]][BUS_COORD5][1],BusLv[pPressed[playerid]][BUS_COORD5][2],BusLv[pPressed[playerid]+1][BUS_COORD5][0],BusLv[pPressed[playerid]+1][BUS_COORD5][1],BusLv[pPressed[playerid]+1][BUS_COORD5][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,BusLv[pPressed[playerid]-1][BUS_COORD5][0],BusLv[pPressed[playerid]-1][BUS_COORD5][1],BusLv[pPressed[playerid]-1][BUS_COORD5][2]))return Kick(playerid);
			}
			case 6:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 51)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusLvv[0][BUSSTATION6],BusLvv[0][BUS_COORD6][0],BusLvv[0][BUS_COORD6][1],BusLvv[0][BUS_COORD6][2],BusLvv[1][BUS_COORD6][0],BusLvv[1][BUS_COORD6][1],BusLvv[1][BUS_COORD6][2],10.0);
			        return 1;
			    }
			    if(BusLvv[pPressed[playerid]-1][BUSSTATION6] == 1)
				{
				    new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					format(string,sizeof(string),"Автобус по маршруту Внутригородской Las-Venturas отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusLvv[pPressed[playerid]][BUSSTATION6],BusLvv[pPressed[playerid]][BUS_COORD6][0],BusLvv[pPressed[playerid]][BUS_COORD6][1],BusLvv[pPressed[playerid]][BUS_COORD6][2],BusLvv[pPressed[playerid]+1][BUS_COORD6][0],BusLvv[pPressed[playerid]+1][BUS_COORD6][1],BusLvv[pPressed[playerid]+1][BUS_COORD6][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,BusLvv[pPressed[playerid]-1][BUS_COORD6][0],BusLvv[pPressed[playerid]-1][BUS_COORD6][1],BusLvv[pPressed[playerid]-1][BUS_COORD6][2]))ToCheat(1,playerid);
			}
			case 7:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 53)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,BusLvvv[0][BUSSTATION7],BusLvvv[0][BUS_COORD7][0],BusLvvv[0][BUS_COORD7][1],BusLvvv[0][BUS_COORD7][2],BusLvvv[1][BUS_COORD7][0],BusLvvv[1][BUS_COORD7][1],BusLvvv[1][BUS_COORD7][2],10.0);
			        return 1;
			    }
			    if(BusLvvv[pPressed[playerid]-1][BUSSTATION7] == 1)
				{
				    new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					format(string,sizeof(string),"Автобус по маршруту ЖДЛВ » Fort Carson отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,BusLvvv[pPressed[playerid]][BUSSTATION7],BusLvvv[pPressed[playerid]][BUS_COORD7][0],BusLvvv[pPressed[playerid]][BUS_COORD7][1],BusLvvv[pPressed[playerid]][BUS_COORD7][2],BusLvvv[pPressed[playerid]+1][BUS_COORD7][0],BusLvvv[pPressed[playerid]+1][BUS_COORD7][1],BusLvvv[pPressed[playerid]+1][BUS_COORD7][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,BusLvvv[pPressed[playerid]-1][BUS_COORD7][0],BusLvvv[pPressed[playerid]-1][BUS_COORD7][1],BusLvvv[pPressed[playerid]-1][BUS_COORD7][2]))ToCheat(1,playerid);
			}

			case 8:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 66)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,bussf[0][BUSSTATION8],bussf[0][BUS_COORD8][0],bussf[0][BUS_COORD8][1],bussf[0][BUS_COORD8][2],bussf[1][BUS_COORD8][0],bussf[1][BUS_COORD8][1],bussf[1][BUS_COORD8][2],10.0);
			        return 1;
			    }
			    if(bussf[pPressed[playerid]-1][BUSSTATION8] == 1)
				{
				    new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					format(string,sizeof(string),"Автобус по маршруту ЖДЛС » ЖДСФ » Автошкола отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,bussf[pPressed[playerid]][BUSSTATION8],bussf[pPressed[playerid]][BUS_COORD8][0],bussf[pPressed[playerid]][BUS_COORD8][1],bussf[pPressed[playerid]][BUS_COORD8][2],bussf[pPressed[playerid]+1][BUS_COORD8][0],bussf[pPressed[playerid]+1][BUS_COORD8][1],bussf[pPressed[playerid]+1][BUS_COORD8][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,bussf[pPressed[playerid]-1][BUS_COORD8][0],bussf[pPressed[playerid]-1][BUS_COORD8][1],bussf[pPressed[playerid]-1][BUS_COORD8][2]))return Kick(playerid);
			}

			case 9:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 68)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,buslvsf[0][BUSSTATION9],buslvsf[0][BUS_COORD9][0],buslvsf[0][BUS_COORD9][1],buslvsf[0][BUS_COORD9][2],buslvsf[1][BUS_COORD9][0],buslvsf[1][BUS_COORD9][1],buslvsf[1][BUS_COORD9][2],10.0);
			        return 1;
			    }
			    if(buslvsf[pPressed[playerid]-1][BUSSTATION9] == 1)
				{
				    new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					format(string,sizeof(string),"Автобус по маршруту ЖДЛВ » Fort Carson » ЖДСФ отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,buslvsf[pPressed[playerid]][BUSSTATION9],buslvsf[pPressed[playerid]][BUS_COORD9][0],buslvsf[pPressed[playerid]][BUS_COORD9][1],buslvsf[pPressed[playerid]][BUS_COORD9][2],buslvsf[pPressed[playerid]+1][BUS_COORD9][0],buslvsf[pPressed[playerid]+1][BUS_COORD9][1],buslvsf[pPressed[playerid]+1][BUS_COORD9][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,buslvsf[pPressed[playerid]-1][BUS_COORD9][0],buslvsf[pPressed[playerid]-1][BUS_COORD9][1],buslvsf[pPressed[playerid]-1][BUS_COORD9][2]))return Kick(playerid);
			}
			case 10:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 54)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,bussfsf[0][BUSSTATION10],bussfsf[0][BUS_COORD10][0],bussfsf[0][BUS_COORD10][1],bussfsf[0][BUS_COORD10][2],bussfsf[1][BUS_COORD10][0],bussfsf[1][BUS_COORD10][1],bussfsf[1][BUS_COORD10][2],10.0);
			        return 1;
			    }
			    if(bussfsf[pPressed[playerid]-1][BUSSTATION10] == 1)
				{
				    new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					format(string,sizeof(string),"Автобус по маршруту Внутригородской San-Fierro отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,bussfsf[pPressed[playerid]][BUSSTATION10],bussfsf[pPressed[playerid]][BUS_COORD10][0],bussfsf[pPressed[playerid]][BUS_COORD10][1],bussfsf[pPressed[playerid]][BUS_COORD10][2],bussfsf[pPressed[playerid]+1][BUS_COORD10][0],bussfsf[pPressed[playerid]+1][BUS_COORD10][1],bussfsf[pPressed[playerid]+1][BUS_COORD10][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,bussfsf[pPressed[playerid]-1][BUS_COORD10][0],bussfsf[pPressed[playerid]-1][BUS_COORD10][1],bussfsf[pPressed[playerid]-1][BUS_COORD10][2]))return Kick(playerid);
			}
			case 11:
			{
			    BusMoney[playerid]+=GLS[7];
        		pPressed[playerid]++;
			    if(pPressed[playerid] >= 74)
			    {
			        pPressed[playerid] = 0;
			        SetPlayerRaceCheckpoint(playerid,bussffa[0][BUSSTATION11],bussffa[0][BUS_COORD11][0],bussffa[0][BUS_COORD11][1],bussffa[0][BUS_COORD11][2],bussffa[1][BUS_COORD11][0],bussffa[1][BUS_COORD11][1],bussffa[1][BUS_COORD11][2],10.0);
			        return 1;
			    }
			    if(bussffa[pPressed[playerid]-1][BUSSTATION11] == 1)
				{
				    new string[100];
					TimeBus[playerid]=10;
					GameTextForPlayer(playerid, "~r~Stop", 2000, 1);
					PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
					format(string,sizeof(string),"Автобус по маршруту ЖДСФ » Виноградник » Завод отъезжает через 10 секунд");
					ProxDetector(45,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
					SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0,0.0,0.0);
					return 1;
				}
    			SetPlayerRaceCheckpoint(playerid,bussffa[pPressed[playerid]][BUSSTATION11],bussffa[pPressed[playerid]][BUS_COORD11][0],bussffa[pPressed[playerid]][BUS_COORD11][1],bussffa[pPressed[playerid]][BUS_COORD11][2],bussffa[pPressed[playerid]+1][BUS_COORD11][0],bussffa[pPressed[playerid]+1][BUS_COORD11][1],bussffa[pPressed[playerid]+1][BUS_COORD11][2],10.0);
    			if(!IsPlayerInRangeOfPoint(playerid,30,bussffa[pPressed[playerid]-1][BUS_COORD11][0],bussffa[pPressed[playerid]-1][BUS_COORD11][1],bussffa[pPressed[playerid]-1][BUS_COORD11][2]))return Kick(playerid);
			}
		}
    }
	return 1;
}
forward GetVehicleType(model);
public GetVehicleType(model)
{
	switch(model)
	{
	    case 430, 446, 452, 453, 454, 472, 473, 484, 493: return  VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  return VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: return VEHICLE_STATE_BIKE;
		case 509, 481, 510: return VEHICLE_STATE_VELIK;
		case 462,448: return VEHICLE_STATE_MOPED;
		case 538, 537: return VEHICLE_STATE_TRAIN;
		default: return VEHICLE_STATE_CAR;
	}
	return 0;
}
stock Send2BarBot(playerid)
{
    if(HouseEntered[playerid]!=-1) return 1;
    switch(random(3))
    {
        case 0: SendBotMessage(playerid,"Бармен:\n{FFFFFF}Приятного аппетита");
        case 1: SendBotMessage(playerid,"Бармен:\n{FFFFFF}Как говорится, смотри не переедайся. *Улыбается*");
        case 2: SendBotMessage(playerid,"Бармен:\n{FFFFFF}Запивать чем-то будешь?");
    }
	return true;
}
stock SendAmmoBot(playerid)
{
    switch(random(3))
    {
        case 0: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Спасибо за покупку");
        case 1: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Ты только эт смотри не балуйся");
        case 2: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Ладно, держи и заходи еще *Улыбается*");
    }
	return true;
}
stock SendBotMessage(playerid,const mesage[])
{
	if(!IsPlayerLogged[playerid])return 0;
	if(!IsAtBankomat(playerid,2.0))
	{
	    new Float:x, Float:y, Float:z,Float:x1, Float:y1, Float:z1;
	    new Float: minDist,minA=-1;
	    GetPlayerPos(playerid, x1, y1, z1);
	    for(new i;i<MAX_ACTORSS;i++)
		{
			if(!IsActorStreamedIn(i,playerid)) continue;
			if(GetActorVirtualWorld(i)!=GetPlayerVirtualWorld(playerid)) continue;
			GetActorPos(i, x, y, z);
			new Float: Dist=PointToPoint(x,y,z,x1,y1,z1);
			if(Dist<30)
			{
				if (minDist>Dist || minDist==0)
				{
				    minA = i;
				    minDist = Dist;
				}
			}
		}
		if(minA!=-1)
		{
			ApplyActorAnimation(minA,"PED", "IDLE_CHAT",4.1,0,1,1,1,1);
		    Update3DTextLabelText(tActor[minA], COLOR_GRAY, mesage);
		    actortime[minA]=10;
		}
	}
	if(strfind(mesage, "\n")==-1) SendClientMessage(playerid,COLOR_GRAY,mesage);
	return true;
}
stock SendPedBot(playerid)
{
    switch(random(4))
    {
        case 0: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Хороший выбор! Давно хотел себе такой");
        case 1: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Этот костюм прям на вас сшитый\n*Улыбается*");
        case 2: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Такое чувство, что он прям для вас сшит\n*Улыбается*");
        case 3: SendBotMessage(playerid,"Продавец:\n{FFFFFF}Вы просто восхитительны в нём!");
    }
	return true;
}
stock SendBarBot(playerid)
{
    if(HouseEntered[playerid]!=-1) return 1;
    switch(random(3))
    {
        case 0: SendBotMessage(playerid, "Бармен:\n{FFFFFF}Ух!.. Смотри, не напивайся\n*Улыбается*");
        case 1: SendBotMessage(playerid, "Бармен:\n{FFFFFF}Хороший выбор");
        case 2: SendBotMessage(playerid, "Бармен:\n{FFFFFF}Надеюсь, тебе понравится");
    }
	return true;
}
stock SendBankBot(playerid)
{
	if(!IsAtBankomat(playerid,5))
	{
	    switch(random(4))
	    {
	        case 0: SendBotMessage(playerid, "Работник банка:\n{FFFFFF}Благодарим за обращение");
	        case 1: SendBotMessage(playerid, "Работник банка:\n{FFFFFF}Всё готово, можете проверить\n*Улыбается*");
	        case 2: SendBotMessage(playerid, "Работник банка:\n{FFFFFF}Хорошо, что вы обратились именно ко мне\n*Улыбается*");
	        case 3: SendBotMessage(playerid, "Работник банка:\n{FFFFFF}Спасибо за обращение!");
	    }
	}
	else SendBotMessage(playerid, "Всего доброго");
	return true;
}
cmd:podcreate(playerid, const params[]) 
{
	if(PlayerInfo[playerid][pAdmin] < 9)return 1;
	if(sscanf(params, "iii", params[0], params[1], params[2]))return SendInfo(playerid, "Используйте: /podcreate {7396FB}[id дома] [цены квартир] [этажи]");
	new Float:X,Float:Y,Float:Z,query[500]; 
	if(lasthouse != params[0]){
		nfake = 1;
		lasthouse = params[0];
	}
	GetPlayerPos(playerid, X,Y,Z); 
	Allpod++;
	PodeezdInfo[Allpod][podEtazi] = params[2]; 
	PodeezdInfo[Allpod][podPic][0] = X; 
	PodeezdInfo[Allpod][podPic][1] = Y; 
	PodeezdInfo[Allpod][podPic][2] = Z; 
	PodeezdInfo[Allpod][podeezd] = Allpod;
	format(query,sizeof query,"INSERT INTO `podeezd` (`pEnterX`, `pEnterY`, `pEnterZ`, `pEtazi`, `house`, `podeezd`) VALUES ('%f','%f','%f','%d','%d','%d')", PodeezdInfo[Allpod][podPic][0],PodeezdInfo[Allpod][podPic][1],PodeezdInfo[Allpod][podPic][2],PodeezdInfo[Allpod][podEtazi], params[0], Allpod);
	mysql_pquery(mysql, query);
	for(ALLKVARTIRI = 0; ALLKVARTIRI < PodeezdInfo[Allpod][podEtazi]; ALLKVARTIRI++)
	{
		HMIR++;KID++;
		kvartinfo[ALLKVARTIRI][kID] = KID; 
		kvartinfo[ALLKVARTIRI][kvPic][0] = 2266.0430; 
		kvartinfo[ALLKVARTIRI][kvPic][1] = 1652.5789; 
		kvartinfo[ALLKVARTIRI][kvPic][2] = 1084.2344; 
		kvartinfo[ALLKVARTIRI][kvExit][0] = 2283.1663; 
		kvartinfo[ALLKVARTIRI][kvExit][1] = -1139.1794; 
		kvartinfo[ALLKVARTIRI][kvExit][2] = 1050.8984; 
		strmid(kvartinfo[ALLKVARTIRI][vladelec], "None", 0, 5, 5);
		kvartinfo[ALLKVARTIRI][kvLock] = 0;
		kvartinfo[ALLKVARTIRI][kvPlata] = 0;
		kvartinfo[ALLKVARTIRI][kvWorld] = HMIR;
		kvartinfo[ALLKVARTIRI][fake] = nfake;
		kvartinfo[ALLKVARTIRI][podeezd] = Allpod;
		format(query,sizeof query,"INSERT INTO `kvartiri` (`kID`,`ID`,`pXpic`, `pYpic`, `pZpic`,`pXexit`,`pYexit`,`pZexit`,`pCount`,`pDay`, `vladelec`, `lock`, `world`, `plata`, `fake`, `podeezd`) VALUES ('%d','%d','%f','%f','%f','%f','%f','%f','%d','1200','%s','%d','%d','%d','%d','%d')",kvartinfo[ALLKVARTIRI][kID],params[0], kvartinfo[ALLKVARTIRI][kvPic][0],kvartinfo[ALLKVARTIRI][kvPic][1],kvartinfo[ALLKVARTIRI][kvPic][2], kvartinfo[ALLKVARTIRI][kvExit][0],kvartinfo[ALLKVARTIRI][kvExit][1],kvartinfo[ALLKVARTIRI][kvExit][2],params[1],kvartinfo[ALLKVARTIRI][vladelec],kvartinfo[ALLKVARTIRI][kvLock],kvartinfo[ALLKVARTIRI][kvWorld],kvartinfo[ALLKVARTIRI][kvPlata],kvartinfo[ALLKVARTIRI][fake],kvartinfo[ALLKVARTIRI][podeezd]);
		mysql_pquery(mysql, query);
		KID++;
		nfake++;
		kvartinfo[ALLKVARTIRI][kID] = KID; 
		kvartinfo[ALLKVARTIRI][kvPic][0] = 2266.0415; 
		kvartinfo[ALLKVARTIRI][kvPic][1] = 1662.5385; 
		kvartinfo[ALLKVARTIRI][kvPic][2] = 1084.2344; 
		kvartinfo[ALLKVARTIRI][kvExit][0] = 2283.1663; 
		kvartinfo[ALLKVARTIRI][kvExit][1] = -1139.1794; 
		kvartinfo[ALLKVARTIRI][kvExit][2] = 1050.8984; 
		strmid(kvartinfo[ALLKVARTIRI][vladelec], "None", 0, 5, 5);
		kvartinfo[ALLKVARTIRI][kvLock] = 0;
		kvartinfo[ALLKVARTIRI][kvPlata] = 0;
		kvartinfo[ALLKVARTIRI][kvWorld] = HMIR;
		kvartinfo[ALLKVARTIRI][fake] = nfake;
		kvartinfo[ALLKVARTIRI][podeezd] = Allpod;
		format(query,sizeof query,"INSERT INTO `kvartiri` (`kID`,`ID`,`pXpic`, `pYpic`, `pZpic`,`pXexit`,`pYexit`,`pZexit`,`pCount`,`pDay`, `vladelec`, `lock`, `world`, `plata`, `fake`, `podeezd`) VALUES ('%d','%d','%f','%f','%f','%f','%f','%f','%d','1200','%s','%d','%d','%d','%d','%d')",kvartinfo[ALLKVARTIRI][kID],params[0], kvartinfo[ALLKVARTIRI][kvPic][0],kvartinfo[ALLKVARTIRI][kvPic][1],kvartinfo[ALLKVARTIRI][kvPic][2], kvartinfo[ALLKVARTIRI][kvExit][0],kvartinfo[ALLKVARTIRI][kvExit][1],kvartinfo[ALLKVARTIRI][kvExit][2],params[1],kvartinfo[ALLKVARTIRI][vladelec],kvartinfo[ALLKVARTIRI][kvLock],kvartinfo[ALLKVARTIRI][kvWorld],kvartinfo[ALLKVARTIRI][kvPlata],kvartinfo[ALLKVARTIRI][fake],kvartinfo[ALLKVARTIRI][podeezd]);
		mysql_pquery(mysql, query);
		KID++;
		nfake++;
		kvartinfo[ALLKVARTIRI][kID] = KID; 
		kvartinfo[ALLKVARTIRI][kvPic][0] = 2271.3350; 
		kvartinfo[ALLKVARTIRI][kvPic][1] = 1662.5641; 
		kvartinfo[ALLKVARTIRI][kvPic][2] = 1084.2344; 
		kvartinfo[ALLKVARTIRI][kvExit][0] = 2283.1663; 
		kvartinfo[ALLKVARTIRI][kvExit][1] = -1139.1794; 
		kvartinfo[ALLKVARTIRI][kvExit][2] = 1050.8984; 
		strmid(kvartinfo[ALLKVARTIRI][vladelec], "None", 0, 5, 5);
		kvartinfo[ALLKVARTIRI][kvLock] = 0;
		kvartinfo[ALLKVARTIRI][kvPlata] = 0;
		kvartinfo[ALLKVARTIRI][kvWorld] = HMIR;
		kvartinfo[ALLKVARTIRI][fake] = nfake;
		kvartinfo[ALLKVARTIRI][podeezd] = Allpod;
		format(query,sizeof query,"INSERT INTO `kvartiri` (`kID`,`ID`,`pXpic`, `pYpic`, `pZpic`,`pXexit`,`pYexit`,`pZexit`,`pCount`,`pDay`, `vladelec`, `lock`, `world`, `plata`, `fake`, `podeezd`) VALUES ('%d','%d','%f','%f','%f','%f','%f','%f','%d','1200','%s','%d','%d','%d','%d','%d')",kvartinfo[ALLKVARTIRI][kID],params[0], kvartinfo[ALLKVARTIRI][kvPic][0],kvartinfo[ALLKVARTIRI][kvPic][1],kvartinfo[ALLKVARTIRI][kvPic][2], kvartinfo[ALLKVARTIRI][kvExit][0],kvartinfo[ALLKVARTIRI][kvExit][1],kvartinfo[ALLKVARTIRI][kvExit][2],params[1],kvartinfo[ALLKVARTIRI][vladelec],kvartinfo[ALLKVARTIRI][kvLock],kvartinfo[ALLKVARTIRI][kvWorld],kvartinfo[ALLKVARTIRI][kvPlata],kvartinfo[ALLKVARTIRI][fake],kvartinfo[ALLKVARTIRI][podeezd]);
		mysql_pquery(mysql, query);
		KID++;
		nfake++;
		kvartinfo[ALLKVARTIRI][kID] = KID; 
		kvartinfo[ALLKVARTIRI][kvPic][0] = 2271.3333; 
		kvartinfo[ALLKVARTIRI][kvPic][1] = 1652.5981; 
		kvartinfo[ALLKVARTIRI][kvPic][2] = 1084.2344; 
		kvartinfo[ALLKVARTIRI][kvExit][0] = 2283.1663; 
		kvartinfo[ALLKVARTIRI][kvExit][1] = -1139.1794; 
		kvartinfo[ALLKVARTIRI][kvExit][2] = 1050.8984; 
		strmid(kvartinfo[ALLKVARTIRI][vladelec], "None", 0, 5, 5);
		kvartinfo[ALLKVARTIRI][kvLock] = 0;
		kvartinfo[ALLKVARTIRI][kvPlata] = 0;
		kvartinfo[ALLKVARTIRI][kvWorld] = HMIR;
		kvartinfo[ALLKVARTIRI][fake] = nfake;
		kvartinfo[ALLKVARTIRI][podeezd] = Allpod;
		format(query,sizeof query,"INSERT INTO `kvartiri` (`kID`,`ID`,`pXpic`, `pYpic`, `pZpic`,`pXexit`,`pYexit`,`pZexit`,`pCount`,`pDay`, `vladelec`, `lock`, `world`, `plata`, `fake`, `podeezd`) VALUES ('%d','%d','%f','%f','%f','%f','%f','%f','%d','1200','%s','%d','%d','%d','%d','%d')",kvartinfo[ALLKVARTIRI][kID],params[0], kvartinfo[ALLKVARTIRI][kvPic][0],kvartinfo[ALLKVARTIRI][kvPic][1],kvartinfo[ALLKVARTIRI][kvPic][2], kvartinfo[ALLKVARTIRI][kvExit][0],kvartinfo[ALLKVARTIRI][kvExit][1],kvartinfo[ALLKVARTIRI][kvExit][2],params[1],kvartinfo[ALLKVARTIRI][vladelec],kvartinfo[ALLKVARTIRI][kvLock],kvartinfo[ALLKVARTIRI][kvWorld],kvartinfo[ALLKVARTIRI][kvPlata],kvartinfo[ALLKVARTIRI][fake],kvartinfo[ALLKVARTIRI][podeezd]);
		mysql_pquery(mysql, query);
		KID++;
		nfake++;
		kvartinfo[ALLKVARTIRI][kID] = KID; 
		kvartinfo[ALLKVARTIRI][kvPic][0] = 2271.3372; 
		kvartinfo[ALLKVARTIRI][kvPic][1] = 1642.1604; 
		kvartinfo[ALLKVARTIRI][kvPic][2] = 1084.2344; 
		kvartinfo[ALLKVARTIRI][kvExit][0] = 2283.1663; 
		kvartinfo[ALLKVARTIRI][kvExit][1] = -1139.1794; 
		kvartinfo[ALLKVARTIRI][kvExit][2] = 1050.8984; 
		strmid(kvartinfo[ALLKVARTIRI][vladelec], "None", 0, 5, 5);
		kvartinfo[ALLKVARTIRI][kvLock] = 0;
		kvartinfo[ALLKVARTIRI][kvPlata] = 0;
		kvartinfo[ALLKVARTIRI][kvWorld] = HMIR;
		kvartinfo[ALLKVARTIRI][fake] = nfake;
		kvartinfo[ALLKVARTIRI][podeezd] = Allpod;
		format(query,sizeof query,"INSERT INTO `kvartiri` (`kID`,`ID`,`pXpic`, `pYpic`, `pZpic`,`pXexit`,`pYexit`,`pZexit`,`pCount`,`pDay`, `vladelec`, `lock`, `world`, `plata`, `fake`, `podeezd`) VALUES ('%d','%d','%f','%f','%f','%f','%f','%f','%d','1200','%s','%d','%d','%d','%d','%d')",kvartinfo[ALLKVARTIRI][kID],params[0], kvartinfo[ALLKVARTIRI][kvPic][0],kvartinfo[ALLKVARTIRI][kvPic][1],kvartinfo[ALLKVARTIRI][kvPic][2], kvartinfo[ALLKVARTIRI][kvExit][0],kvartinfo[ALLKVARTIRI][kvExit][1],kvartinfo[ALLKVARTIRI][kvExit][2],params[1],kvartinfo[ALLKVARTIRI][vladelec],kvartinfo[ALLKVARTIRI][kvLock],kvartinfo[ALLKVARTIRI][kvWorld],kvartinfo[ALLKVARTIRI][kvPlata],kvartinfo[ALLKVARTIRI][fake],kvartinfo[ALLKVARTIRI][podeezd]);
		mysql_pquery(mysql, query);
		KID++;
		nfake++;
		kvartinfo[ALLKVARTIRI][kID] = KID; 
		kvartinfo[ALLKVARTIRI][kvPic][0] = 2271.3359; 
		kvartinfo[ALLKVARTIRI][kvPic][1] = 1633.5387; 
		kvartinfo[ALLKVARTIRI][kvPic][2] = 1084.2344; 
		kvartinfo[ALLKVARTIRI][kvExit][0] = 2283.1663; 
		kvartinfo[ALLKVARTIRI][kvExit][1] = -1139.1794; 
		kvartinfo[ALLKVARTIRI][kvExit][2] = 1050.8984; 
		strmid(kvartinfo[ALLKVARTIRI][vladelec], "None", 0, 5, 5);
		kvartinfo[ALLKVARTIRI][kvLock] = 0;
		kvartinfo[ALLKVARTIRI][kvPlata] = 0;
		kvartinfo[ALLKVARTIRI][kvWorld] = HMIR;
		kvartinfo[ALLKVARTIRI][fake] = nfake;
		kvartinfo[ALLKVARTIRI][podeezd] = Allpod;
		format(query,sizeof query,"INSERT INTO `kvartiri` (`kID`,`ID`,`pXpic`, `pYpic`, `pZpic`,`pXexit`,`pYexit`,`pZexit`,`pCount`,`pDay`, `vladelec`, `lock`, `world`, `plata`, `fake`, `podeezd`) VALUES ('%d','%d','%f','%f','%f','%f','%f','%f','%d','1200','%s','%d','%d','%d','%d','%d')",kvartinfo[ALLKVARTIRI][kID],params[0], kvartinfo[ALLKVARTIRI][kvPic][0],kvartinfo[ALLKVARTIRI][kvPic][1],kvartinfo[ALLKVARTIRI][kvPic][2], kvartinfo[ALLKVARTIRI][kvExit][0],kvartinfo[ALLKVARTIRI][kvExit][1],kvartinfo[ALLKVARTIRI][kvExit][2],params[1],kvartinfo[ALLKVARTIRI][vladelec],kvartinfo[ALLKVARTIRI][kvLock],kvartinfo[ALLKVARTIRI][kvWorld],kvartinfo[ALLKVARTIRI][kvPlata],kvartinfo[ALLKVARTIRI][fake],kvartinfo[ALLKVARTIRI][podeezd]);
		mysql_pquery(mysql, query);
		KID++;
		nfake++;
		kvartinfo[ALLKVARTIRI][kID] = KID; 
		kvartinfo[ALLKVARTIRI][kvPic][0] = 2266.0481; 
		kvartinfo[ALLKVARTIRI][kvPic][1] = 1633.4941; 
		kvartinfo[ALLKVARTIRI][kvPic][2] = 1084.2344; 
		kvartinfo[ALLKVARTIRI][kvExit][0] = 2283.1663; 
		kvartinfo[ALLKVARTIRI][kvExit][1] = -1139.1794; 
		kvartinfo[ALLKVARTIRI][kvExit][2] = 1050.8984; 
		strmid(kvartinfo[ALLKVARTIRI][vladelec], "None", 0, 5, 5);
		kvartinfo[ALLKVARTIRI][kvLock] = 0;
		kvartinfo[ALLKVARTIRI][kvPlata] = 0;
		kvartinfo[ALLKVARTIRI][kvWorld] = HMIR;
		kvartinfo[ALLKVARTIRI][fake] = nfake;
		kvartinfo[ALLKVARTIRI][podeezd] = Allpod;
		format(query,sizeof query,"INSERT INTO `kvartiri` (`kID`,`ID`,`pXpic`, `pYpic`, `pZpic`,`pXexit`,`pYexit`,`pZexit`,`pCount`,`pDay`, `vladelec`, `lock`, `world`, `plata`, `fake`, `podeezd`) VALUES ('%d','%d','%f','%f','%f','%f','%f','%f','%d','1200','%s','%d','%d','%d','%d','%d')",kvartinfo[ALLKVARTIRI][kID],params[0], kvartinfo[ALLKVARTIRI][kvPic][0],kvartinfo[ALLKVARTIRI][kvPic][1],kvartinfo[ALLKVARTIRI][kvPic][2], kvartinfo[ALLKVARTIRI][kvExit][0],kvartinfo[ALLKVARTIRI][kvExit][1],kvartinfo[ALLKVARTIRI][kvExit][2],params[1],kvartinfo[ALLKVARTIRI][vladelec],kvartinfo[ALLKVARTIRI][kvLock],kvartinfo[ALLKVARTIRI][kvWorld],kvartinfo[ALLKVARTIRI][kvPlata],kvartinfo[ALLKVARTIRI][fake],kvartinfo[ALLKVARTIRI][podeezd]);
		mysql_pquery(mysql, query);
		KID++;
		nfake++;
		kvartinfo[ALLKVARTIRI][kID] = KID; 
		kvartinfo[ALLKVARTIRI][kvPic][0] = 2266.0464; 
		kvartinfo[ALLKVARTIRI][kvPic][1] = 1642.1359; 
		kvartinfo[ALLKVARTIRI][kvPic][2] = 1084.2344; 
		kvartinfo[ALLKVARTIRI][kvExit][0] = 2283.1663; 
		kvartinfo[ALLKVARTIRI][kvExit][1] = -1139.1794; 
		kvartinfo[ALLKVARTIRI][kvExit][2] = 1050.8984; 
		strmid(kvartinfo[ALLKVARTIRI][vladelec], "None", 0, 5, 5);
		kvartinfo[ALLKVARTIRI][kvLock] = 0;
		kvartinfo[ALLKVARTIRI][kvPlata] = 0;
		kvartinfo[ALLKVARTIRI][kvWorld] = HMIR;
		kvartinfo[ALLKVARTIRI][fake] = nfake;
		kvartinfo[ALLKVARTIRI][podeezd] = Allpod;
		format(query,sizeof query,"INSERT INTO `kvartiri` (`kID`,`ID`,`pXpic`, `pYpic`, `pZpic`,`pXexit`,`pYexit`,`pZexit`,`pCount`,`pDay`, `vladelec`, `lock`, `world`, `plata`, `fake`, `podeezd`) VALUES ('%d','%d','%f','%f','%f','%f','%f','%f','%d','1200','%s','%d','%d','%d','%d','%d')",kvartinfo[ALLKVARTIRI][kID],params[0], kvartinfo[ALLKVARTIRI][kvPic][0],kvartinfo[ALLKVARTIRI][kvPic][1],kvartinfo[ALLKVARTIRI][kvPic][2], kvartinfo[ALLKVARTIRI][kvExit][0],kvartinfo[ALLKVARTIRI][kvExit][1],kvartinfo[ALLKVARTIRI][kvExit][2],params[1],kvartinfo[ALLKVARTIRI][vladelec],kvartinfo[ALLKVARTIRI][kvLock],kvartinfo[ALLKVARTIRI][kvWorld],kvartinfo[ALLKVARTIRI][kvPlata],kvartinfo[ALLKVARTIRI][fake],kvartinfo[ALLKVARTIRI][podeezd]);
		mysql_pquery(mysql, query);
		nfake++;
	}
	SendClientMessage(playerid, COLOR_WHITE, "Заверши расстановку всех подъездов и иди спать :*"); 
	return 1;
}
cmd:apart(playerid)
{
	if(SlotValue[playerid][2] != -1)
	{
		new stringase[400];
		new bouse = SlotValue[playerid][2];
		new vvv = kvartinfo[bouse][pCount];
		new text1[40];
		if(kvartinfo[bouse][kvLock])text1 = "{FF4400}Квартира закрыта";
		else text1 = "{43CD80}Квартира открыта";
		new string1[1024];
		format(stringase, 200,"\n\n\\c{ffffff}Адрес: {43CD80}« Дом номер %d - Квартира %d »\n",kvartinfo[bouse][pID], kvartinfo[bouse][fake]);
		strcat(string1,stringase);
		format(stringase, 200,"\\c{ffffff}Стоимость: {43CD80}« $%d »\n",vvv);
		strcat(string1,stringase);
		format(stringase, 200,"\\c{ffffff}Проплачено: {43CD80}« %d / 30 дней »\n",kvartinfo[bouse][kvPlata]);
		strcat(string1,stringase);
		format(stringase, 200,"\\c{ffffff}Квартплата: {43CD80}« $%i / сутки »\n",kvartinfo[bouse][pDay]);
		strcat(string1,stringase);
		format(stringase, 250, "\\c{ffffff}Статус: {43CD80}« %s {43CD80}»\n\n",text1);
		strcat(string1,stringase);
		strcat(string1,"{93C722}Для открытия панели управления вашей квартирой\n");
		strcat(string1,"нажмите кнопку \"Изменить\"\n\n");
		Dialog_Open(playerid,8002, 0, "{43CD80}Информация о квартире", string1, "Изменить", "Отмена");
	}
	return 1;
}
forward RespawnVehicleOwn(vehicleid);
public RespawnVehicleOwn(vehicleid)
{
	new number = GetVehicleID(vehicleid);
	DestroyVehicleEx(vehicleid);
	J_AddStaticVehicleEx(CarInfo[number][cModel],CarInfo[number][cPos][0],CarInfo[number][cPos][1],CarInfo[number][cPos][2],CarInfo[number][cPos][3],CarInfo[number][cColor_1],CarInfo[number][cColor_2],1000000);
 	return 1;
}
cmd:bomb(playerid, const params[])
{
	if(PlayerInfo[playerid][pBomb] > 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 100.0, 265.9013,78.3257,1001.0391) || IsPlayerInRangeOfPoint(playerid, 100.0, 1468.6514,-1741.8002,13.5469)|| IsPlayerInRangeOfPoint(playerid, 100.0, 2388.1479,-1926.6962,13.5500)|| IsPlayerInRangeOfPoint(playerid, 100.0, 2587.1738,-1236.9465,1212.7019) ||
		IsPlayerInRangeOfPoint(playerid, 100.0, 1914.9935,177.8372,37.2813) || IsPlayerInRangeOfPoint(playerid, 100.0, 2571.9922,-1303.6332,1044.1250) || IsPlayerInRangeOfPoint(playerid, 100.0, 2065.4238,-1374.4506,1001.2960)|| IsPlayerInRangeOfPoint(playerid, 100.0, 1497.3561,-1281.8790,14.5419 ) ||
		IsPlayerInRangeOfPoint(playerid, 100.0, 1789.8708,-1897.3647,13.3965) || IsPlayerInRangeOfPoint(playerid, 100.0, 191.0939,-108.1999,1.5488) || IsPlayerInRangeOfPoint(playerid, 100.0, 760.6195,-1418.3060,13.6124) || IsPlayerInRangeOfPoint(playerid, 100.0, 1976.8551,-1965.9889,13.5825) || IsPlayerInRangeOfPoint(playerid, 35.0, 200.8742,-239.7395,1.5744) ||
		IsPlayerInRangeOfPoint(playerid, 100.0, 1392.5906,-2267.2756,13.5469) || IsPlayerInRangeOfPoint(playerid, 100.0, 2804.7432,-1448.3627,20.1999) || IsPlayerInRangeOfPoint(playerid, 70.0, 2817.6655,1289.3645,10.9609)|| IsPlayerInRangeOfPoint(playerid, 50.0, 1595.0094,1825.6066,10.8203)|| IsPlayerInRangeOfPoint(playerid, 50.0, 2235.1648,1628.0640,1006.1799) ||
		IsPlayerInRangeOfPoint(playerid, 50.0, -72.6627,30.2661,3.1172)) return SendError(playerid,"Вы не можете здесь заложить бомбу");
		new time, string[120];
		if(sscanf(params,"d",time)) return SendInfo(playerid, "Используйте:{7396FB} /bomb [таймер (сек)]");
		if(time >= 10 && time <= 300)
		{
		    new bombid = MAX_BOMBS;
		    for(new i; i < MAX_BOMBS;i ++)
		    {
		        if(!BombInfo[i][bbCreated])
		        {
	                bombid = i;
	                break;
		        }
		    }
		    if(bombid < MAX_BOMBS)
		    {
		        new Float:X, Float:Y, Float:Z;
		        GetPlayerPos(playerid, X, Y, Z);
		        ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		        format(string, sizeof(string),"Вы заложили бомбу. Таймер на %s", Convert(time));
		        SendClientMessage(playerid, COLOR_LIME, string);
		        CreteBomb[playerid]=0;
		        RemovePlayerAttachedObjectEx(playerid, 6);
		        BombInfo[bombid][bbCreated] = true;
		        BombInfo[bombid][bbTime] = time;
		        format(string, sizeof(string),"{FFFFFF} Бомба \n{7396FB}%s", Convert(time));
		        BombInfo[bombid][bbText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, X, Y, Z, 10.0);
		        BombInfo[bombid][bbObject] = CreateDynamicObject(1252, X, Y, Z, 0, 0, 0);
		        BombInfo[bombid][bbPos][0] = X;
		        BombInfo[bombid][bbPos][1] = Y;
		        BombInfo[bombid][bbPos][2] = Z;
		        PlayerInfo[playerid][pBomb] --;
		    }
		}
		else SendError(playerid,"Не больше 300 и не меньше 10");
	}
	else SendError(playerid,"У вас нет бомбы");
	return true;
}
cmd:createbomb(playerid)
{
    if(!IsAtGang(playerid) && !IsAtMafia(playerid)) return SendError(playerid,"Вы не состоите ни в банде, ни в мафии");
	if(SlotValue[playerid][11]<1500)return SendError(playerid,"У вас недостаточно материалов для изготовления! (( 1500 ))");
	if(PlayerInfo[playerid][pBomb]>=1)return SendError(playerid,"Вы уже сделали бомбу");
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	SlotValue[playerid][11]-=1500;
	CreteBomb[playerid]=30;
	SendError(playerid,"Вы начали делать бомбу");
	return true;
}
cmd:roll(playerid)
{
	if(!(PlayerInfo[playerid][pJob] == JOB_GUIDE && InJob[playerid]))return SendError(playerid,"У Вас нет доступа");
	if(!GetPVarInt(playerid,"RoulTable"))return SendError(playerid,"Нужно находиться возле столика");
	if(RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rGameStart])return SendError(playerid,"Дождитесь окончания ролла");
	if(!RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rBets])return SendError(playerid,"Дождитесь, пока игроки сделают ставки");
	RollTimer[GetPVarInt(playerid,"RoulTable")-1] = 7;
	TimeRoll[GetPVarInt(playerid,"RoulTable")-1] = SetTimerEx("Roll",300,true,"i",GetPVarInt(playerid,"RoulTable")-1);
	RoulInfo[GetPVarInt(playerid,"RoulTable")-1][rGameStart] = 1;
	deal[playerid]++;
	for(new i; i < 11; i++)
	{
		if(RoulGamers[GetPVarInt(playerid,"RoulTable")][i] == INVALID_PLAYER_ID)continue;
		PlayerPlaySound(RoulGamers[GetPVarInt(playerid,"RoulTable")][i], 33400, 0.0,0.0,0.0);
	}
	return 1;
}
cmd:coins(playerid, const params[])
{
	if(GetPlayerVirtualWorld(playerid) != 2)return SendError(playerid, "Вы должны быть в казино");
	if(CoinsOpponent[playerid] != INVALID_PLAYER_ID)return SendError(playerid, "Вы уже предложили сыграть в монетку");
	if(!GetPVarInt(playerid, "CoinsGet"))return SendError(playerid, "У Вас нет монеток для игры");
	if(sscanf(params,"dd",params[0],params[1])) return SendInfo(playerid, "Используйте:{7396FB} /coins [id] [сумма игры]");
	if(!IsPlayerLogged[params[0]])return SendError(playerid, "Игрок не найден");
	if(!ProxDetectorS(3.0,playerid,params[0])) return SendError(playerid,"Вы далеко от игрока");
	if(GetPlayerVirtualWorld(params[0]) != 2)return SendError(playerid, "Оппонент должен быть в казино");
	if(params[1] < 1000 || params[1] > 100000)return SendError(playerid, "Сумма игр должна быть от $1000 до $100000");
	if(GetMoney(playerid) < params[1])return SendError(playerid, "У Вас недостаточно средств");
	new string[128];
	f(string, "Вы предложили сыграть %s[%d] в монетку на $%d", Name(params[0]), params[0], params[1]);
	SendClientMessage(playerid, COLOR_LIGHTGREEN, string);
	return SetCoinsPlayers(playerid, params[0], params[1]);
}
cmd:stoppromo(playerid)
{
	if(PlayerInfo[playerid][PromoActive] == -1)return SendError(playerid, "У Вас нет активных промо-кодов");
	PlayerInfo[playerid][PromoActive] = -1;
	SendInfo(playerid,"Активный промо-код был удалён. Теперь вы можете использовать новый");
	SaveAccount(playerid);
	return 1;
}
cmd:setspawn(playerid)
{
	if(PlayerInfo[playerid][pDCTime]==2 && SlotValue[playerid][1]==-1)PlayerInfo[playerid][pDCTime]=0;
	if(PlayerInfo[playerid][pDCTime]==1 && SlotValue[playerid][2]==-1)PlayerInfo[playerid][pDCTime]=0;
	new string[512];
	new spewn[64];
	switch(PlayerInfo[playerid][pDCTime])
	{
	    case 0: spewn = "{FF4400}Вокзал";
	    case 1: spewn = "{7396FB}Квартира";
	    case 2: spewn = "{7396FB}Дом";
	    case 3: spewn = "{7396FB}Организация";
		case 4: spewn = "{7396FB}Точка при выходе из игры";
		case 5: spewn = "{7396FB}Алькатрас";
		default: spewn = "{7396FB}Личный транспорт";
	}
	format(string,sizeof(string),"\
	{C9EAFF}Текущее место спавна: %s\n\
	{7396FB}[1] {ffffff}Установить квартиру местом спавна\n\
	{7396FB}[2] {ffffff}Установить дом местом спавна\n\
	{7396FB}[3] {ffffff}Установить организацию местом спавна\n\
	{7396FB}[4] {ffffff}Установить вокзал местом спавна\n\
	{7396FB}[5] {ffffff}Установить местом спавна точку при выходе из игры\n\
	{7396FB}[6] {ffffff}Установить Алькатрас местом спавна (Для полиции)\n\
	{7396FB}[7] {ffffff}Установить личный транспорт местом спавна",spewn);
	Dialog_Open(playerid,1781,2,"{43CD80}Выберите место спавна",string,"Принять","Закрыть");
	return true;
}
cmd:setbiztype(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin]<9)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
 	if(sscanf(params,"dd",params[0],params[1])) return SendInfo(playerid, "Используйте:{7396FB} /setbiztype [id][type]");
    BizInfo[params[0]][bState]=params[1];
    SaveBiz(params[0]);
    SendError(playerid,"gotov");
	return true;
}

cmd:resbiz(playerid)
{
	new num,string[30];
    if(PlayerInfo[playerid][pAdmin]<9)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    for(new i = 0;i < OWNABLEBIZES;i ++)
	{
	    if(BizInfo[i][bState] == B_GUNSHOP) SetString(BizInfo[i][bName],"Амуниция"),num++;
	    if(BizInfo[i][bState] == 7) SetString(BizInfo[i][bName],"Закусочная"),num++;
	    if(BizInfo[i][bState] == 1) SetString(BizInfo[i][bName],"Бар"),num++;
	    if(BizInfo[i][bState] == 2) SetString(BizInfo[i][bName],"Магазин 24/7"),num++;
	    if(BizInfo[i][bState] == 8) SetString(BizInfo[i][bName],"Аренда транспорта"),num++;
	    if(BizInfo[i][bState] == 6) SetString(BizInfo[i][bName],"АЗС/Магазин механики"),num++;
	    if(BizInfo[i][bState] == 3) SetString(BizInfo[i][bName],"Магазин одежды"),num++;
	    if(BizInfo[i][bState] == 4) SetString(BizInfo[i][bName],"Предприятие"),num++;
	    if(BizInfo[i][bState] == 5) SetString(BizInfo[i][bName],"Тюнинг салон"),num++;
	    if(BizInfo[i][bState] == 9) SetString(BizInfo[i][bName],"Магазин аксессуаров"),num++;
	    BizInfo[i][bProducts]=2000;
	    UpdateBiz(i,1);
	}
	format(string,sizeof(string),"Обновлено %d предприятий",num);
	SendClientMessage(playerid,COLOR_ORANGE,string);
	return true;
}
cmd:ahelp(playerid)
{
	if(!PlayerInfo[playerid][pAdmin] && !PlayerInfo[playerid][pHelper]) return 1;
	new string[4096];
	strcat(string, "\n\n\\c{C9EAFF}Доступные команды:\n\n");
	if(PlayerInfo[playerid][pHelper])
	{
		strcat(string, "\\c{C9EAFF}Хелперы: {7396FB}\n");
		strcat(string, "\\c/ans, /admins, /pm\n\n");
	}
	if(PlayerInfo[playerid][pAdmin])
	{
		strcat(string, "\\c{C9EAFF}1 уровень: {7396FB}\n");
		strcat(string, "\\c/tp, /slap, /a, /ans, /admins, /pm, /check, /switch, /killlog(/klog)\n");
		strcat(string, "\\c/gm, /srp, /spawn, /weapcheck, /govinfo, /mute, /deathlog(/dlog), /checkcars\n");
		strcat(string, "\\c/checkweap, /uncuff, /spec(/sp), /getwarn, /kick, /chatlog(/clog)\n\n");
	}
	if(PlayerInfo[playerid][pAdmin] > 1)
	{
		strcat(string, "\\c{C9EAFF}2 уровень: {7396FB}\n");
		strcat(string, "\\c/eventsetpos, /eventstart, /eventstop, /weap, /jail, /getskills, /goto(/g), /unmute\n");
		strcat(string, "\\c/spcar, /sethp, /unjail, /jailoff, /freeze, /alock, /online, /fix, /jp\n\n");
	}
	if(PlayerInfo[playerid][pAdmin] > 2)
	{
		strcat(string, "\\c{C9EAFF}3 уровень: {7396FB}\n");
		strcat(string, "\\c/skick, /getcar, /gethere(/gh), /iint, /getip, /hpall, /gunall, /veh\n");
		strcat(string, "\\c/gotohouse, /warn, /ban, /agl, /get, /dveh, /vw, /ao\n");
		strcat(string, "\\c/weapall, /givegun, /pgetip, /weather, /amember\n\n");
	}
	if(PlayerInfo[playerid][pAdmin] > 3)
	{
		strcat(string, "\\c{C9EAFF}4 уровень: {7396FB}\n");
		strcat(string, "\\c/setgangzone, /unwarn, /setskin, /aleave, /prison\n");
		strcat(string, "\\c/rban, /unrban, /givelic, /setbizcontrol, /makeleader\n");
		strcat(string, "\\c/gotocar, /banoff, /warnoff, /getvirt\n\n");
	}
	if(PlayerInfo[playerid][pAdmin] > 4)
	{
		strcat(string, "\\c{C9EAFF}5 уровень: {7396FB}\n");
		strcat(string, "\\c/rasform, /delboard, /fasthour, /fullorgs, /adminsall\n");
		strcat(string, "\\c/fullferms, /setname, /economy, /pos, /acceptadmin, /iban, /ibanoff\n\n");
	}
	if(PlayerInfo[playerid][pAdmin] > 5)
	{
		strcat(string, "\\c{C9EAFF}6 уровень: {7396FB}\n");
		strcat(string, "\\c/asellbiz, /asellhouse, /asellcar, /deladmin, /unban, /aselltune\n");
		strcat(string, "\\c/asellcasino, /sban, /addadmin, /addhelper, /delhelper\n\n");
	}
	if(PlayerInfo[playerid][pAdmin] > 6)
	{
		strcat(string, "\\c{C9EAFF}7 уровень: {7396FB}\n");
		strcat(string, "\\c/otkat, /restart, /acpanel, /givemoney, /setstat, /setorgbank, /setfactory, /resetmoney\n\n");
	}
	if(PlayerInfo[playerid][pAdmin] > 8)
	{
		strcat(string, "\\c{877296}9 уровень: {43CD80}\n");
		strcat(string, "\\c/setbiztype, /changebizenter, /setbizexit, /settalent, /givetalent\n");
		strcat(string, "\\c/resbiz, /setallbizexit, /changehouse, /changecasino, /podcreate\n");
		strcat(string, "\\c/timestat, /houseprice, /savebizes, /housescost, /profilerdump\n");
	}
	Dialog_Open(playerid, 0, 0, "{43CD80}Команды администратора",string,"Скрыть","");
	return 1;
}
cmd:changebizenter(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin]<9)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new Float:x, Float:y, Float:z;
 	GetPlayerPos(playerid, x, y, z);
 	if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /changebizenter [id]");
    BizInfo[params[0]][bEnter][0] = x;
    BizInfo[params[0]][bEnter][1] = y;
    BizInfo[params[0]][bEnter][2] = z;
    SaveBiz(params[0]);
    SendError(playerid,"gotov");
	return true;
}
cmd:setbizexit(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin]<9)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new Float:x, Float:y, Float:z;
 	GetPlayerPos(playerid, x, y, z);
 	if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /changebizenter [id]");
    BizInfo[params[0]][bExit][0] = x;
    BizInfo[params[0]][bExit][1] = y;
    BizInfo[params[0]][bExit][2] = z;
    BizInfo[params[0]][bInt] = GetPlayerInterior(playerid);
    SaveBiz(params[0]);
    SendError(playerid,"gotov");
	return true;
}
cmd:setallbizexit(playerid, const params[])
{
	new string[200];
	if(PlayerInfo[playerid][pAdmin]<9)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new Float:x, Float:y, Float:z;
 	GetPlayerPos(playerid, x, y, z);
 	if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /changebizzeexit [param]");
    for(new i = 0;i < OWNABLEBIZES;i ++)
	{
	    if(BizInfo[i][bState] == params[0])
	    {
	        BizInfo[i][bExit][0] = x;
	        BizInfo[i][bExit][1] = y;
	        BizInfo[i][bExit][2] = z;
	        BizInfo[i][bInt] = GetPlayerInterior(playerid);
	        format(string,sizeof(string),"%d",(i-1));
	        SendClientMessage(playerid,COLOR_RED,string);
	        SaveBiz(i);
	    }
	}
	return true;
}
cmd:changehouse(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin]<9)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new Float:x, Float:y, Float:z;
 	GetPlayerPos(playerid, x, y, z);
 	new id;
    if(sscanf(params,"d",id)) return SendInfo(playerid, "Используйте:{7396FB} /changehouse [id]");
    if(id > MAX_HOUSES)return 1;
	ac_DestroyDynamicCP(HouseCP[id][0],HouseCP[id][1]);
	DestroyDynamic3DTextLabel(House3DText[id]);
    HouseInfo[id][hEnter][0] = x;
    HouseInfo[id][hEnter][1] = y;
    HouseInfo[id][hEnter][2] = z;
    SendClientMessage(playerid,-1,"GATOVA");
    HouseIcon[id] = CreateDynamicMapIcon(HouseInfo[id][hEnter][0], HouseInfo[id][hEnter][1], HouseInfo[id][hEnter][2], 31, 0);
    ac_CreateDynamicCP(HouseCP[id][0],HouseCP[id][1],HouseInfo[id][hEnter][0], HouseInfo[id][hEnter][1], HouseInfo[id][hEnter][2], 1.0, -1, -1, -1, 10.0);
   	House3DText[id] = CreateDynamic3DTextLabel(" Дом ",0xE1AE3CFF,HouseInfo[id][hEnter][0], HouseInfo[id][hEnter][1],HouseInfo[id][hEnter][2],10.0);
    UpdateHouse(id);
    //SaveHouse(id);
    return true;
}

cmd:changecasino(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin]<9)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new Float:x, Float:y, Float:z;
 	GetPlayerPos(playerid, x, y, z);
 	new id;
    if(sscanf(params,"d",id)) return SendInfo(playerid, "Используйте:{7396FB} /changecasino [id]");
    if(id >= MAX_OWNABLECASINO)return 1;
    DestroyDynamicPickup(CasinoCPEn[id]);
	DestroyDynamic3DTextLabel(Casino3DText[id]);
    CasinoInfo[id][casPos][0] = x;
    CasinoInfo[id][casPos][1] = y;
    CasinoInfo[id][casPos][2] = z;

    CasinoCPEn[id] = CreateDynamicPickup(19132,1,CasinoInfo[id][casPos][0], CasinoInfo[id][casPos][1], CasinoInfo[id][casPos][2],-1);
   	Casino3DText[id] = CreateDynamic3DTextLabel("{7396FB}Для входа используйте ~k~~SNEAK_ABOUT~",0xE1AE3CFF,CasinoInfo[id][casPos][0], CasinoInfo[id][casPos][1],CasinoInfo[id][casPos][2],10.0);
   	SaveCasino(id);
   	SendClientMessage(playerid,-1,"GATOVA");
    return true;
}

cmd:satiety(playerid)
{
	new string[250],str[150];
    switch(Fullness[playerid])
	{
	    case 0..10: str = "{E12525}очень голодны{A6A9A7}";
	    case 11..50: str = "{F99C32}голодны{A6A9A7}";
	    case 51..70: str = "{6ED947}немного проголодались{A6A9A7}";
	    case 71..150: str = "{54C977}сыты{A6A9A7}";
	}
	format(string,sizeof(string),"{A6A9A7}На данный момент вы %s.\nВаша сытость: {FFFFFF}%d/100.{A6A9A7}\n\n\nПополнить сытость можно в любой закусочной штата.\nЕсли долго не есть ваше здоровье начнет ухудшаться",str,Fullness[playerid]);
	ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
	return true;
}
cmd:casinoinfo(playerid)
{
	new string[400];
	if(GetString(CasinoInfo[0][casOwner],PlayerName[playerid]))
	{
		if(IsPlayerInRangeOfPoint(playerid,20.0,CasinoInfo[0][casExit][0],CasinoInfo[0][casExit][1],CasinoInfo[0][casExit][2]) || IsPlayerInRangeOfPoint(playerid,50.0,CasinoInfo[0][casPos][0],CasinoInfo[0][casPos][1],CasinoInfo[0][casPos][2]))
		{
		    mycasino[playerid]=0;
		    new lock[45];
			switch(CasinoInfo[0][casLock])
			{
			    case 0: format(lock,sizeof(lock),"{9C381A}Закрыть{FFFFFF}");
			    case 1: format(lock,sizeof(lock),"{1A9C38}Открыть{FFFFFF}");
			}
			format(string,sizeof(string),"%s казино\nПополнить баланс\nСнять с баланса\n{E4633C}Статистика казино{FFFFFF}\n{897C78}Информация о казино\n{FFFFFF}Изменить стоимость входа\nУстановить зарплату крупье\n{E4633C}Оплата налогов: $%d",lock,CasinoInfo[0][casNalog]);
		    ShowPlayerDialogEx(playerid,3413,2,"{43CD80}Выберите действие",string,"Выбрать","Закрыть");
		}
		else
		{
			SendError(playerid,"Вы должны находиться в здании своего казино или возле него");
			mycasino[playerid]=-1;
		}
		return 1;
	}
	SendError(playerid,"Вы не владеете из Casino Royal");
	return true;
}
//==============event===============
cmd:eventsetpos(playerid, const params[])
{
    if(PlayerInfo[playerid][pAdmin] < 2)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	GetPlayerPos(playerid, eventXYZ[0], eventXYZ[1], eventXYZ[2]);
	SendInfo(playerid, "Теперь на месте сбора /eventstart");
	return 1;
}
cmd:eventstart(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params, "d", eventMoney)) return SendInfo(playerid, "Используйте: {7396FB}/eventstart [money]");
    GetPlayerPos(playerid, eventStartXYZ[0], eventStartXYZ[1], eventStartXYZ[2]);
    eventMoneyAll = 0;
    eventPls = 0;
    eventStats = 1;
    new str[256];
    SendInfo(playerid, "Чтобы остановить набор используйте {7396FB}'/eventstop'");
    format(str, sizeof(str), "Администратор %s(%d) устраивает мероприятие. Для участия напишите /invent", PlayerName[playerid], playerid);
    if(eventMoney>0) format(str, sizeof(str), "%s. Стоимость участия: $%d", str, eventMoney);
	SendClientMessageToAll(-1, str);
	return 1;
}
cmd:eventstop(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 2)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(!eventStats) return SendInfo(playerid, "Используйте:{7396FB} /eventsetpos");
	eventStats = 0;
	new str[256], num;
	foreach(new i:Player)
	{
		eventIN[i] = 0;
	    if(!eventIN[i])num++;
	}
	OrgInfo[GLS[13]][oBank] += eventMoneyAll;
	SendInfo(playerid, "Собранные средства пошли в казну штата");
	format(str, sizeof(str), "Всего %d участников, насобирали $%d при ставке $%d.\nНе добрались до места сбора %d человек", eventPls, eventMoneyAll, eventMoney, num);
	ShowPlayerDialogEx(playerid, 0, 0, "{43CD80}Информация", str, "Скрыть", "");
	return 1;
}
cmd:invent(playerid)
{
	if(!eventStats)return SendError(playerid,"Набор на мероприятие закрыт");
	if(eventIN[playerid] == 1)return SendError(playerid, "Вы уже на месте проведения мероприятия");
	if(GetPlayerState(playerid)!=1) return SendError(playerid, "Вы должны быть пешком");
	if(SlotValue[playerid][0]<eventMoney) return SendError(playerid,"У вас недостаточно средств. Вы можете пополнить свой баланс [/donate]");
	GiveMoney(playerid, -eventMoney, "МП");
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Телепорт на мероприятие",-eventMoney,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
	eventMoneyAll+=eventMoney;
	J_SetPlayerPos(playerid, eventStartXYZ[0], eventStartXYZ[1], eventStartXYZ[2]);
	eventIN[playerid] = 1;
	return 1;
}
cmd:shopss(playerid)
{
	new string[300];
    new vid[30];
    if(PlayerInfo[playerid][pVID]==0) vid = "наличными";
    else vid = "картой";
    format(string,sizeof(string),"{FF4400}« Оплата %s »\n{7396FB}Продать рыбу\n{FFFFFF}Продукты\nКанцелярия\nАксессуары\nТехника\nТабачные изделия\nРыбалка\n{43CD80}Разное",vid);
	ShowPlayerDialogEx(playerid,103,2,"{43CD80}Меню",string,"Выбор","Отмена");
	return true;
}
cmd:carm(playerid, const params[])
{
	new string[500];
	//if(GetVehicleModelEx(GetPlayerVehicleID(playerid)) != 433 && GetPlayerVehicleID(playerid)) != 548) return SendError(playerid,"Вы не в машине для перевозки материалов");
	if(!IsAArmy(playerid)) return SendError(playerid,"Вы не состоите в военных войсках");
    if(!TeamDuty[playerid]) return SendClientMessage(playerid,COLOR_VALIK,"Вы не на дежурстве");
    if(GetVehicleModelEx(GetPlayerVehicleID(playerid))==433)
    {
    	format(string,sizeof(string),"\
		{43CD80}Загрузиться\n\
		{FF4400}Разгрузить на склад LSPD [%d/30000]\n\
		{FF4400}Разгрузить на склад RCSD [%d/30000]\n\
		{FF4400}Разгрузить на склад FBI [%d/30000]\n\
		{FF4400}Разгрузить на склад SFPD [%d/30000]\n\
		{FF4400}Разгрузить на склад LVPD [%d/30000]",
		FractionValue[TEAM_LSPD][0],
		FractionValue[TEAM_RCPD][0],
		FractionValue[TEAM_FBI][0],
		FractionValue[TEAM_SFPD][0],
		FractionValue[TEAM_PDLV][0]);
    	ShowPlayerDialogEx(playerid,9653,2,"{43CD80}Выберите действие",string,"Принять","Закрыть");
	}
	return true;
}

cmd:cpark(playerid)
{
	if(!IsACop(playerid)) return  SendError(playerid,"Вы не полицейский");
    if(PlayerInfo[playerid][pRank] < 4) return SendError(playerid,"Эта возможность доступна с 4 ранга");
    if(GetPlayerState(playerid)!=2)return SendError(playerid,"Вы должны находиться за рулем");
   	if(GetVehicleModelEx(GetPlayerVehicleID(playerid)) != 525) return SendError(playerid,"Вы должны находиться в эвакуаторе");
	ShowPlayerDialogEx(playerid,193,1,"{43CD80}Введите сумму","Введите сумму залога\n\n{43CD80}- Не менее $800 и не более $10000","Далее","Отмена");
	return 1;
}
cmd:tp(playerid, const params[])
{
	if(!PlayerInfo[playerid][pAdmin])return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new meber;
    if(sscanf(params,"d",meber))
	{
		ShowPlayerDialogEx(playerid, 9000, DIALOG_STYLE_LIST, "{43CD80}Телепорт", "\
		Casino Royal\n\
		Информационный центр\n\
		Глен парк\n\
		Мотель Джефферсон\n\
		Мэрия ЛС / Центральный банк\n\
		Админ интерьер\n\
		Алькатрас\n\
		Винозавод\n\
		Виноградное поле\n\
		Шахта\n\
		Ферма", "Выбрать", "Закрыть");
		return SendInfo(playerid, "Используйте:{7396FB} /tp [id фракции]");
	}
    if(meber > 27 || meber < 1) return SendError(playerid,"OT 1 DO 27");
 	SetPlayerInterior(playerid,0);
    SetPlayerVirtualWorld(playerid,0);
	J_SetPlayerPos(playerid, SpawnInfo[meber][0], SpawnInfo[meber][1], SpawnInfo[meber][2]);
	return 1;
}
cmd:amember(playerid,const params[])
{
	new string[200];
   	new meber = PlayerInfo[playerid][pMember];
   	if(PlayerInfo[playerid][pAdmin] < 3) return 1;
   	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"d",meber)) return SendInfo(playerid, "Используйте:{7396FB} /amember [id]");
    if(meber > 27 || meber < 1) return SendError(playerid,"От 1 до 27");
	if(meber == 25)return SendError(playerid, "Фракция недоступна");
	PlayerInfo[playerid][pMember] = meber;
	PlayerInfo[playerid][pRank] = 9;
	TeamDuty[playerid] = true;
	SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
	PlayerInfo[playerid][pFracSkin] = GetSkinForPlayer(playerid);
	SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
	format(string,sizeof(string),"[A] %s[%d] вступил в организацию %s",PlayerName[playerid],playerid,OrgInfo[GetTeamID(playerid)][oName]);
	SendAdminsMessage(COLOR_GRAY,string);
	return true;
}
cmd:asellbiz(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new biz;
    if(sscanf(params,"d",biz)) return SendInfo(playerid, "Используйте:{7396FB} /asellbiz [bizid]");
    foreach(new i:Player)
	{
	    if(SlotValue[playerid][3]==biz && IsPlayerConnected(i))
			SlotValue[playerid][3]=-1;
	}
	new str[256];
	format(str, sizeof(str), "UPDATE `accounts` SET `BizKey`='-1' WHERE `NickName` = '%s'; ", BizInfo[biz][bOwner]);
	mysql_pquery(mysql, str);
    SetString(BizInfo[biz][bOwner],"The State");
   	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы продали бизнес");
   	if(BizInfo[biz][bProducts] < 0) BizInfo[biz][bProducts] = 1000;
	if(BizInfo[biz][bMoney] < 0) BizInfo[biz][bMoney] = 1000;
	UpdateBiz(biz,1);
	//SaveBiz(biz);
	return true;
}
cmd:asellcasino(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(!GetPVarInt(playerid, "DeleteCasino"))
	{
		SetPVarInt(playerid, "DeleteCasino", 1);
		return SendError(playerid, "Для подтверждения введите команду ещё раз");
	}
    SetString(CasinoInfo[0][casOwner],"The State");
   	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы продали казино");
	DeletePVar(playerid, "DeleteCasino");
	SaveCasino(0);
	return true;
}
cmd:aselltune(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new biz;
	if(sscanf(params,"d",biz)) return SendInfo(playerid, "Используйте:{7396FB} /aselltune [tuneid]");
    foreach(new i:Player)
	{
	    if(SlotValue[playerid][4]==biz && IsPlayerConnected(i))
			SlotValue[playerid][4]=-1;
	}
	new str[256];
	format(str, sizeof(str), "UPDATE `accounts` SET `pSTO`='-1' WHERE `NickName` = '%s'; ", TuningInfo[biz][stoOwner]);
	mysql_pquery(mysql, str);
    SetString(TuningInfo[biz][stoOwner],"None");
   	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы продали СТО");
	UpdateSTO(biz);
	return true;
}
cmd:asellhouse(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new biz;
    if(sscanf(params,"d",biz)) return SendInfo(playerid, "Используйте:{7396FB} /asellhouse [houseid]");
    foreach(new i:Player)
	{
	    if(SlotValue[playerid][1]==biz && IsPlayerConnected(i))
			SlotValue[playerid][1]=-1;
	}
	new str[256];
	format(str, sizeof(str), "UPDATE `accounts` SET `HouseKey`='-1',`DropCarTime`='0' WHERE `NickName` = '%s'; ", HouseInfo[biz][hOwner]);
	mysql_pquery(mysql, str);
    SetString(HouseInfo[biz][hOwner],"The State");
   	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы продали дом");
	ClosetValue[biz][0]=0;
	UpdateHouse(biz);
	//SaveHouse(biz);
	return true;
}

cmd:asellcar(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new car;//, string[300];
	if(sscanf(params,"d",car)) return SendInfo(playerid, "Используйте:{7396FB} /asellcar [carid]");
	if(!IsAOwnableCar(car)) return false;
	SellCar(car);
	return true;
}
cmd:timestat(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 9) return 0;
	new str[256];
	format(str, sizeof(str), "Последнее время прокрутки GrandTimer: %d мс. пик: %d мс.\n", time_grandtimer, time_grandtimer_max);
	format(str, sizeof(str), "%sПоследнее время прокрутки OnPlayerUpdate: %d мс.\nПоследнее время прокрутки Newkeys: %d mc.\nПоследнее время прокрутки enterpickup: %d mc", str, time_update_max,time_newkeys,time_pickup);
	ShowPlayerDialogEx(playerid, 0,0,"{43CD80}Нагрузка мода", str, "Скрыть", "");
	return 1;
}
cmd:mbiz(playerid)
{
	new bstr[3600];
    if(!IsAtMafia(playerid)) return SendError(playerid,"Вы не состоите в мафии");
	strcat(bstr,"Название\tВладелец\n");
    for(new i;i<OWNABLEBIZES;i++)
	{
 		if(BizInfo[i][bKrasher] != PlayerInfo[playerid][pMember]) continue;
		format(bstr,sizeof(bstr),"%s{FFFFFF}%s{ffffff}\t{FFCB8C}%s\n",bstr,BizInfo[i][bName],BizInfo[i][bOwner]);
	}
	if(strlen(bstr) > 22) ShowPlayerDialogEx(playerid,0,5,"{43CD80}Бизнесы",bstr,"Скрыть", "");
	else ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{FFFFFF}На данный момент под вашим контролем нет бизнесов","Скрыть", "");
	return true;
}
cmd:bizwar(playerid, const params[])
{
	if(!IsAtMafia(playerid)) return SendError(playerid,"У Вас нет доступа");
    if(PlayerInfo[playerid][pRank] < 6) return SendError(playerid,"У Вас нет доступа");
    if(BizTime > 0) return SendError(playerid,"Сейчас уже кто-то забил стрелу");
	if(sscanf(params, "d",params[0]) || params[0] < 1 || params[0] > 4) return SendInfo(playerid,"Используйте: {7396FB}/bizwar [ID стрелы (1 - Лесопилка | 2 - Аэродром | 3 - Ферма FC | 4 - Деревня)]");
	if(RecoveryTime[PlayerInfo[playerid][pMember]] > gettime()) return SendError(playerid,"Интервал между стрелами 30 минут");
	for(new i;i<OWNABLEBIZES;i++)
	{
		if(!IsPlayerInRangeOfPoint(playerid,10.0,BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2])) continue;
		{
			if(!IsPlayerInRangeOfPoint(playerid,10.0,BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2])) continue;
			if(RecoveryTime[BizInfo[i][bKrasher]] > gettime()) return SendError(playerid,"Этой мафии недавно забивали стрелу");
			if(BizInfo[i][bKrasher] == PlayerInfo[playerid][pMember]) return SendError(playerid,"Вы и так крышуете этот бизнес");
			if(BizInfo[i][bKrasher] == 0)
			{
				BizInfo[i][bKrasher] = PlayerInfo[playerid][pMember];
				SendClientMessage(playerid,COLOR_VALIK,"Теперь вы крышуете этот бизнес");
				UpdateBiz(i,1);
				RecoveryTime[PlayerInfo[playerid][pMember]] = gettime()+1800;
			}
			new Attack, Deff;
			foreach(new x:Player)
			{
				switch(PlaceWar)
				{
				case 1: if(!IsPlayerInRangeOfPoint(x, 100.0, -553.5379,-189.4500,78.4063)) continue;
				case 2: if(!IsPlayerInRangeOfPoint(x, 200.0, 400.7428,2505.4106,16.4844)) continue;
				case 3: if(!IsPlayerInRangeOfPoint(x, 200.0, 331.5244,1116.4584,11.2496)) continue;
				case 4: if(!IsPlayerInRangeOfPoint(x, 200.0, -1297.4867,2551.0503,87.1012)) continue;
				}
				if(PlayerInfo[x][pMember] == PlayerInfo[playerid][pMember]) Attack++;
				if(PlayerInfo[x][pMember] == BizInfo[i][bKrasher]) Deff++;
			}
			if(Attack < 1 || Deff < 1)return SendError(playerid, "Для забива стрелы нужно онлайн 3 человека у обоих сторон");
			new tername[32];
			switch(params[0])
			{
			case 1:tername = "Лесопилка";
			case 2:tername = "Заброшенный аэродром";
			case 3:tername = "Ферма в Fort Carson";
			case 4:tername = "Заброшенная деревня";
			}
			new string[256];
			f(string, "%s забил стрелу %s. Бизнес: %s. Место встречи: %s",PlayerName[playerid],OrgInfo[BizInfo[i][bKrasher]][oName], BizInfo[i][bName],tername);
			SendTeamMessage(GetTeamID(playerid),COLOR_LIGHTGREEN,string);
			SendTeamMessage(GetTeamID(playerid),COLOR_LIGHTGREEN,"Победит та мафия, которая наберёт больше убийств в конце времени");
            f(string, "%s забили вашей мафии стрелу. Бизнес: %s. Место встречи: %s",OrgInfo[PlayerInfo[playerid][pMember]][oName], BizInfo[i][bName],tername);
			SendTeamMessage(BizInfo[i][bKrasher],COLOR_RED,string);
			format(string,sizeof(string),"[A] %s забили стрелу %s. Бизнес: %s. Место встречи: %s",OrgInfo[PlayerInfo[playerid][pMember]][oName],OrgInfo[BizInfo[i][bKrasher]][oName], BizInfo[i][bName],tername);
			SendAdminsMessage(COLOR_ORANGE,string);
			SendAdminsMessage(COLOR_ORANGE,"Используйте '/switch' для переключения между каптами/бизваром");
			PlaceWar = params[0];
			BizTime = 600;
			BizAtack = GetTeamID(playerid);
			BizDeff = BizInfo[i][bKrasher];
			BizDeffkill = 0;
			BizAtakkill = 0;
			BizWar = i;
			RecoveryTime[BizAtack] = gettime()+1800;
			RecoveryTime[BizDeff] = gettime()+1800;
			f(string, "TIMELEFT %s",Convert(BizTime));
			TextDrawSetString(CaptureTD[4][2], OrgInfo[BizAtack][oName]);
			TextDrawSetString(CaptureTD[5][2], OrgInfo[BizDeff][oName]);
			TextDrawSetString(CaptureTD[7][2], string);
			TextDrawSetString(CaptureTD[12][2], IntToStr(BizDeffkill));
			TextDrawSetString(CaptureTD[11][2], IntToStr(BizAtakkill));
			foreach(new b:Player)
			{
				if(PlayerInfo[b][pMember] == BizAtack || PlayerInfo[b][pMember] == BizDeff)
				{
					switch(PlaceWar)
					{
						case 1: EnableGPSForPlayer(b,-553.5379,-189.4500,78.4063);
						case 2: EnableGPSForPlayer(b,400.7428,2505.4106,16.4844);
						case 3: EnableGPSForPlayer(b,331.5244,1116.4584,11.2496);
						case 4: EnableGPSForPlayer(b,-1297.4867,2551.0503,87.1012);
					}
					ShowCapture(b, 2);
				}
			}
		}
	}
	return true;
}
cmd:wedding(playerid, const params[])
{
	new string[128];
	if(Merrit[0] != 0) return SendError(playerid,"Свадьба уже проводится");
    if(sscanf(params,"dd",params[0],params[1])) return SendInfo(playerid, "Используйте:{7396FB} /wedding [id/Жениха] [id/Невесты]");
 	if(!IsAMeria(playerid))return SendError(playerid,"Вы не сотрудник Мэрии");
	if(PlayerInfo[playerid][pRank] < 8) return SendError(playerid,"Провести помолвку может только человек имеющий должность 'Нач.юридического отдела' и выше");
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1234.2189,-1564.9213,3277.1960 )) return SendError(playerid,"Вы не возле места проведения помолвки");
	if(!IsPlayerInRangeOfPoint(params[0], 10.0, 1234.2189,-1564.9213,3277.1960 )) return SendError(playerid,"Жених не в церкови");
	if(!IsPlayerInRangeOfPoint(params[1], 10.0, 1234.2189,-1564.9213,3277.1960 )) return SendError(playerid,"Невеста не в церкови");
	if(params[0] == playerid ) return SendClientMessage(playerid, COLOR_RED, "Вы не можете поженить человека на себе");
	if(params[1] == playerid ) return SendClientMessage(playerid, COLOR_RED, "Вы не можете поженить человека на себе");
	if(PlayerInfo[params[0]][pSex] != 1) return SendClientMessage(playerid, COLOR_RED, "Сначало укажите жениха,  потом невесту");
	if(PlayerInfo[params[1]][pSex] != 2) return SendClientMessage(playerid, COLOR_RED, "Сначало укажите жениха,  потом невесту");
	if(strlen(PlayerInfo[params[0]][pMerrit])>0 || strlen(PlayerInfo[params[1]][pMerrit])>0) return SendClientMessage(playerid, COLOR_RED, "Опачки а кто-то уже женат или замужем");
 	if(!Ring[params[0]]) return SendError(playerid,"Похоже кто-то не купил кольца");
	Merrit[0] = 1;
	Merrit[1] = playerid;
	Merrit[2] = params[0];
	Merrit[3] = params[1];
	format(string,sizeof(string),"%s: Жених %s готовы ли вы взять в жены %s?",PlayerName[playerid],PlayerName[params[0]],PlayerName[params[1]]);
	ProxDetector(25,playerid,string,COLOR_SCHAT,COLOR_SCHAT,COLOR_SCHAT,COLOR_SCHAT,COLOR_SCHAT);
	SendClientMessage(params[0],COLOR_GRAY,"Для того чтобы сделать свой выбор напиши в игровой чат да/нет");
	return true;
}
cmd:unwedding(playerid, const params[])
{
	if(SlotValue[playerid][0] < 4000) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
    if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1234.2189,-1564.9213,3277.1960 )) return SendError(playerid,"Развестись можно только в церкови");
	if(!strlen(PlayerInfo[playerid][pMerrit])) return SendClientMessage(playerid, COLOR_RED, "У вас нет супруги/супруга");
	foreach(new i:Player)
    {
        if(!strcmp(PlayerName[playerid], PlayerInfo[i][pMerrit], true) && IsPlayerConnected(i))
		{
			SendClientMessage(i,COLOR_RED,"Ваш супруг/супруга покинула вас");
			format(PlayerInfo[i][pMerrit], 25, "");
			format(PlayerInfo[playerid][pMerrit], 25, "");
			return 1;
		}
    }
	new str[256];
	format(str, sizeof(str), "UPDATE `accounts` SET `Merrit`='' WHERE `NickName` = '%s'; ", PlayerInfo[playerid][pMerrit]);
	mysql_pquery(mysql, str);
	format(PlayerInfo[playerid][pMerrit], 25, "");
	return 1;
}
new CMDstr[450];
cmd:chatlog(playerid, const params[]){
	new str[128];
	new string[1024];
	if(!PlayerInfo[playerid][pAdmin]) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"s[24]",params[0])) return SendInfo(playerid,"Используйте: {7396FB}/chatlog [nickname]");
	f(str, "SELECT * FROM `chatlog` WHERE `name`= '%s' ORDER BY ID LIMIT 60;", params[0]);
	new Cache:result = mysql_query(mysql, str, true);
	new rows = cache_get_row_count(mysql);
	if(!rows)return SendError(playerid, "Ничего не найдено");
	strcat(string, "{FFCB8C}Последний 60 сообщений в чат\n\n");
	for(new i = rows-1; i >= 0; --i){
		cache_get_row(i, 2, str, mysql, 128);
		strcat(string, str);
		strcat(string, "\n");
	}
	ShowPlayerDialogEx(playerid, 0, 0, params[0], string, "Скрыть","");
	cache_delete(result, mysql);
	return 1;
}
cmd:deathlog(playerid, const params[]){
	new str[128];
	new string[1024];
	if(!PlayerInfo[playerid][pAdmin]) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"s[24]",params[0])) return SendInfo(playerid,"Используйте: {7396FB}/deathlog [nickname]");
	f(str, "SELECT * FROM `deathlog` WHERE `name`= '%s' ORDER BY ID LIMIT 60;", params[0]);
	new Cache:result = mysql_query(mysql, str, true);
	new rows = cache_get_row_count(mysql);
	if(!rows)return SendError(playerid, "Ничего не найдено");
	strcat(string, "{FFCB8C}Последний 60 смертей от игроков\n\n");
	for(new i = rows-1; i >= 0; --i){
		cache_get_row(i, 2, str, mysql, 128);
		strcat(string, str);
		strcat(string, "\n");
	}
	ShowPlayerDialogEx(playerid, 0, 0, params[0], string, "Скрыть","");
	cache_delete(result, mysql);
	return 1;
}
cmd:killlog(playerid, const params[]){
	new str[128];
	new string[1024];
	if(!PlayerInfo[playerid][pAdmin]) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"s[24]",params[0])) return SendInfo(playerid,"Используйте: {7396FB}/killlog [nickname]");
	f(str, "SELECT * FROM `killlog` WHERE `name`= '%s' ORDER BY ID LIMIT 60;", params[0]);
	new Cache:result = mysql_query(mysql, str, true);
	new rows = cache_get_row_count(mysql);
	if(!rows)return SendError(playerid, "Ничего не найдено");
	strcat(string, "{FFCB8C}Последний 60 убийств игроков\n\n");
	for(new i = rows-1; i >= 0; --i){
		cache_get_row(i, 2, str, mysql, 128);
		strcat(string, str);
		strcat(string, "\n");
	}
	ShowPlayerDialogEx(playerid, 0, 0, params[0], string, "Скрыть","");
	cache_delete(result, mysql);
	return 1;
}
cmd:weather(playerid, const params[])
{
	new string[300];
	if(PlayerInfo[playerid][pAdmin] < 3) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"d",params[0])) return SendInfo(playerid,"Используйте: {7396FB}/weather [id]");
	if(params[0] != 3 && params[0] != 2 && params[0] != 4 && params[0] != 6 && params[0] != 8
	&& params[0] != 10 && params[0] !=  11 && params[0] != 12 && params[0] != 13
	&& params[0] != 17 && params[0] != 1 && params[0] != 14 && params[0] !=  15 && params[0] != 7)
	{
		SendInfo(playerid, "Доступные ID: 1, 2, 3, 4, 6, 8, 10, 11, 12, 13, 17, 14, 15, 7");
		return SendInfo(playerid,"Используйте: {7396FB}/weather [id]");
	}
    format(string,sizeof(string),"%s сменил погоду",PlayerName[playerid]);
	SendAdminsMessage(COLOR_GRAY,string);
    Weather = params[0];
    SetWeather(Weather);
	return true;
}
cmd:armour(playerid)
{
	new string[300];
	if(!PlayerInfo[playerid][pArmours]) return SendError(playerid,"У вас нет бронежилета");
	PlayerInfo[playerid][pArmours] --;
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы надели бронежилет");
	J_SetPlayerArmour(playerid,100);
	format(string,sizeof(string),"%s[%d] одел бронежилет",PlayerName[playerid],playerid);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
cmd:houseinfo(playerid)
{
    new house = SlotValue[playerid][1];
	if(!IsPlayerLogged[playerid])return false;
	if(SlotValue[playerid][1] == -1) return SendError(playerid,"Вы не живете ни в 1 из домов");
	if(HouseEntered[playerid]!=SlotValue[playerid][1] && GetPlayerVirtualWorld(playerid)!=0)return SendError(playerid,"Вы не у своего дома");
	if(!IsPlayerInRangeOfPoint(playerid,100.0,HouseInfo[house][hExit][0],HouseInfo[house][hExit][1],HouseInfo[house][hExit][2]) && !IsPlayerInRangeOfPoint(playerid,20.0,HouseInfo[house][hEnter][0],HouseInfo[house][hEnter][1],HouseInfo[house][hEnter][2])) return SendError(playerid,"Вы не у своего дома");
	if(HouseEntered[playerid]==-1) return ShowPlayerDialogEx(playerid,174,2,"{43CD80}Дом","Открыть/Закрыть","Выбор","Отмена");
	if(GetString(HouseInfo[house][hOwner],Name(playerid)))
	{
	    new string[620];
	    format(string,sizeof(string),"\
		Открыть/Закрыть дом\n\
		Меню дома\n\
		Улучшить дом\n\
		Налоги\n\
		Продукты\n\
		Подселить игрока\n\
		Список жителей\n\
		Аптечек в доме: {FFCB8C}%d",HouseInfo[house][hMed]);
		ShowPlayerDialogEx(playerid,174,2,"{43CD80}Выберите действие",string,"Выбор","Отмена");
	}
	else ShowPlayerDialogEx(playerid,174,2,"{43CD80}Выберите действие","Открыть/Закрыть дом\nМеню дома","Выбор","Отмена");
	return true;
}
cmd:med(playerid)
{
	new house = HouseEntered[playerid],string[214];
	if(house ==-1)return SendError(playerid,"Вы ни в одном из домов");
	if(HouseInfo[house][hMed]<1)return SendError(playerid,"В доме нет аптечек");
	HouseInfo[house][hMed]--;
	format(string,sizeof(string),"[Информация] {FFFFFF}Вы использовали аптечку. В доме осталось: {DEAF79}%d{FFFFFF} аптечек",HouseInfo[house][hMed]);
	SendClientMessage(playerid,COLOR_GREEN,string);
	new Float:Health = PlayerInfo[playerid][pHealth];
	if(TalentsInfo[playerid][0][1] == 2){
		GameTextForPlayer(playerid, "~g~+5 HP (talent)", 1, 1);
		Health += 5.0;
	}
	if(Health+50 <= MAX_PLAYER_HEALTH(playerid)) J_SetPlayerHealth(playerid,Health+50);
	else J_SetPlayerHealth(playerid,MAX_PLAYER_HEALTH(playerid));
	PlayerInfo[playerid][pHospital]=25;
 	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	return 1;
}
cmd:usemed_gg(playerid)
{
	if(!SlotValue[playerid][12]) return SendError(playerid,"У вас нет аптечек");
	if(GetPlayerVirtualWorld(playerid)==534)return false;
	new string[100];
	new Float:Health = PlayerInfo[playerid][pHealth];
	SlotValue[playerid][12] --;
	format(string, sizeof(string), "%s употребил(а) лекарство", PlayerName[playerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы выпили лекарство");
	if(TalentsInfo[playerid][0][1] == 2){
		GameTextForPlayer(playerid, "~g~+5 HP (talent)", 1, 1);
		Health += 5.0;
	}
	if(Health+50 <= MAX_PLAYER_HEALTH(playerid)) J_SetPlayerHealth(playerid,Health+50);
	else J_SetPlayerHealth(playerid,MAX_PLAYER_HEALTH(playerid));
	PlayerInfo[playerid][pHospital]=25;
 	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	if(GetPVarInt(playerid, "showedinv"))UpdateInventory(playerid, SelectedSlot[playerid]);
	return 1;
}
cmd:first_help(playerid){
	new string[64];
	if(Talent_KD[playerid][0] > gettime()){
		f(string, "Способность перезаряжается. Осталось %d секунд", gettime() - Talent_KD[playerid][0]);
		return SendError(playerid, string);
	}
	format(string, sizeof(string), "%s оказал(а) первую помощь", PlayerName[playerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы оказали себе первую помощь");
	new Float:Health = PlayerInfo[playerid][pHealth];
	if(TalentsInfo[playerid][0][1] == 2){
		GameTextForPlayer(playerid, "~g~+5 HP (talent)", 1, 1);
		Health += 5.0;
	}
	if(Health+25 <= MAX_PLAYER_HEALTH(playerid)) J_SetPlayerHealth(playerid,Health+25);
	else J_SetPlayerHealth(playerid,MAX_PLAYER_HEALTH(playerid));
	PlayerInfo[playerid][pHospital]=25;
 	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	new cooldown = (TalentsInfo[playerid][0][2] == 1) ? 90 : 120;
	Talent_KD[playerid][0] = gettime()+cooldown;
	return 1;
}
cmd:second_health(playerid){
	new string[64];
	if(Talent_KD[playerid][3] > gettime()){
		f(string, "Способность перезаряжается. Осталось %d секунд", gettime() - Talent_KD[playerid][3]);
		return SendError(playerid, string);
	}
	if(startlomka[playerid]==1)PlayerInfo[playerid][pOldRepl]=0;
	startlomka[playerid]=0;
	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	Talent_KD[playerid][3] = gettime()+120;
	SendInfo(playerid, "Вы открыли {7396FB}'Второе дыхание'{ffffff}, чтобы справиться с ломкой");
	return 1;
}
cmd:exit(playerid)
{
	if(!IsPlayerLogged[playerid])return false;
	new i = GetPlayerVirtualWorld(playerid)-50;
	if(i < 0)return 1;
	if(!IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[i][hExit][0],HouseInfo[i][hExit][1],HouseInfo[i][hExit][2])) return SendError(playerid,"Вы не у двери дома");
	J_SetPlayerPos(playerid,HouseInfo[i][hEnter][0],HouseInfo[i][hEnter][1],HouseInfo[i][hEnter][2]);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	HouseEntered[playerid] = -1;
	return 1;
}

cmd:blacklist(playerid, const params[])
{
	if(IsAtFrakcia(playerid) && PlayerInfo[playerid][pLeader]>0)
	{
	    if(sscanf(params,"us[72]",params[0],params[1])) return SendInfo(playerid, "Используйте:{7396FB} /blacklist [id] [причина]");
		if(PlayerInfo[params[0]][pLeader] > 0 ) return SendError(playerid,"Вы не можете добавить лидера в ЧС");
		if(!IsPlayerConnected(params[0])) return SendError(playerid,"Игрок не найден");
		if(!IsAtFrakcia(params[0]) && PlayerInfo[params[0]][pMember]!=0) return SendError(playerid,"Игрок должен быть вне гос.организации");
		if(PlayerInfo[params[0]][pBL]) return SendError(playerid,"Игрок уже в черном списке организации");
		if(params[0]==playerid)return false;
		PlayerInfo[params[0]][pBL] = 1;
		PlayerInfo[params[0]][pZKP] = 0;
		CMDstr = "";
		format(CMDstr,115,"%s[%d] внёс %s[%i] в чёрный список закона. Причина: %s",PlayerName[playerid],playerid, Name(params[0]), params[0], params[1]);
		SendGosMessage(COLOR_DEPAR,CMDstr);
		format(CMDstr,144,"%s занёс вас в чёрный список закона. Причина: %s", Name(playerid), params[1]);
		SendClientMessage(params[0],COLOR_GRAY,CMDstr);
		SendClientMessage(params[0],COLOR_GRAY,"Чтобы выйти из него необходимо набрать 50 очков законопослушности");
	}
	else SendError(playerid,"У вас нет доступа к этой системе");
    return true;
}
cmd:unblacklist(playerid, const params[])
{
	if(IsAtFrakcia(playerid) && PlayerInfo[playerid][pLeader]>0)
	{
		if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /unblacklist [id]");
		if(!IsPlayerConnected(params[0])) return SendError(playerid,"Игрок не найден");
		if(!PlayerInfo[params[0]][pBL]) return SendError(playerid,"Этого игрока нет в черном списке");
		PlayerInfo[params[0]][pBL] = 0;
		CMDstr = "";
		format(CMDstr,74,"Вы удалили %s(%i) чёрного списка закона",Name(params[0]),params[0]);
		SendClientMessage(playerid,COLOR_LIGHTBLUE,CMDstr);
		format(CMDstr,63,"%s удалил вас из чёрного списка закона",Name(playerid));
		SendClientMessage(params[0],COLOR_GRAY,CMDstr);
    }
	else SendError(playerid,"У вас нет доступа к этой системе");
    return true;
}
cmd:rules(playerid) return ShowRules(playerid, INVALID_DIALOG_ID);
cmd:makeleader(playerid, const params[])
{
    if(!IsPlayerLogged[playerid]) return false;
	if(PlayerInfo[playerid][pAdmin] < 4) return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /makeleader [id]");
	if(params[0] == playerid)return SendError(playerid,"Используйте /amember");
	CMDstr = "";
	new org[32],allorgs[720];
	for(new i = 1;i < MAX_ORGS;i ++)
	{
		format(org,32,"%s\n",OrgInfo[i][oName]);
		strcat(allorgs,org);
	}
	format(CMDstr, MAX_PLAYER_NAME,"%s", Name(params[0]));
	ShowPlayerDialogEx(playerid,26,2,CMDstr,allorgs,"Выбор","Отмена");
	MLPlayer[playerid] = params[0];
	return true;
}
cmd:bail(playerid, const params[])
{
    if(!IsPlayerInRangeOfPoint(playerid,1.5,1722.5358,2279.5251,1422.9221)) return SendError(playerid, "Внести залог можно только в полицейском участке");
    if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /bail [id]");
    if(PlayerInfo[params[0]][pJailTime] == 0) return SendBotMessage(playerid,"Извините, но такого человека сейчас нет в тюрьме");
    if(GetMoney(playerid) < GLS[21]) return SendBotMessage(playerid,"Извините, но у вас не хватает денег");
    if(playerid == params[0])return Kick(playerid);
    CMDstr = "";
	format(CMDstr,54,"Вы внесли залог за %s",Name(params[0]));
	SendClientMessage(playerid,COLOR_LIGHTBLUE,CMDstr);
	GiveMoney(playerid,-GLS[21],"Bail");
	OrgInfo[TEAM_RCPD][oBank]+=(GLS[21]*20)/100;
	OrgInfo[TEAM_LSPD][oBank]+=(GLS[21]*20)/100;
	OrgInfo[TEAM_SFPD][oBank]+=(GLS[21]*20)/100;
	OrgInfo[TEAM_FBI][oBank]+=(GLS[21]*20)/100;
	OrgInfo[TEAM_PDLV][oBank]+=(GLS[21]*20)/100;
	SendClientMessage(params[0],COLOR_LIGHTBLUE,"За вас внесли залог и вы были выпущены");
	SetPlayerInterior(params[0], 0);
	SetPlayerVirtualWorld(params[0], 0);
    SendBotMessage(playerid,"Дежурный полицейский:\n{FFFFFF}В следующий раз деньги не помогут");
	PlayerInfo[params[0]][pJailTime] = 0;
	PlayerInfo[params[0]][pBailPrice] = 0;
	new org = GetTeamID(params[0]);
	SetCameraBehindPlayer(params[0]);
	SetPlayerSkinEx(params[0],PlayerInfo[params[0]][pSkin]);
	ResetSpawnInfo(params[0], org);
	if(PlayerInfo[params[0]][pSprunks]==1)
	{
		J_SetPlayerPos(params[0],611.0152,-585.7537,17.2266);
		SetPlayerFacingAngle(params[0], 270);
	}
    else if(PlayerInfo[params[0]][pSprunks]==2)
    {
        J_SetPlayerPos(params[0],2286.7205,2429.0698,10.8203);
		SetPlayerFacingAngle(params[0], 181.2884);
    }
    else
    {
        J_SetPlayerPos(params[0],-1606.1509,713.7501,13.2902);
		SetPlayerFacingAngle(params[0], 359.7803);
    }
    PlayerInfo[params[0]][pSprunks]=0;
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),PlayerInfo[params[0]][pID],Name(params[0]),"Внёс залог",-GLS[21],PlayerIp[playerid],PlayerIp[params[0]],GetMoney(playerid));
    return true;
}
cmd:free(playerid, const params[])
{
	if(PlayerInfo[playerid][pJob]!=JOB_ADVOKAT) return SendError(playerid,"Вы не адвокат");
	new id, string[200];
    if(sscanf(params,"ud",id)) return SendInfo(playerid, "Используйте:{7396FB} /free [id]");
    if(id == playerid)return 1;
    if(!IsPlayerInRangeOfPoint(playerid,20.5,1722.5358,2279.5251,1422.9221)) return SendError(playerid, "Вы должны быть в полицейском участке возле дежурной части");
    if(OldFreePlayer[playerid] == id) return SendError(playerid,"Вы уже сокращали срок этому игроку");
	new time = PlayerInfo[id][pJailTime],price = PlayerInfo[id][pBailPrice];
    if(time == 0) return SendError(playerid,"Этот игрок не в тюрьме");
    if(LawyerOffer[playerid] != INVALID_PLAYER_ID)
    {
        format(string, sizeof(string), "Адвокат %s отменил свое предложение на сокращение срока", Name(playerid));
        SendClientMessage(LawyerOffer[playerid], COLOR_GRAY, string);
    }
 	format(string,sizeof(string),"{FFFFFF}Адвокат {E4AE25}%s{FFFFFF} предлагает вам сократить ваш срок.\nВремя {E4AE25}%s{FFFFFF}\nСтоимость: {E4AE25}$%d{FFFFFF}", Name(playerid), Convert(time/2), price);
 	if(!ShowPlayerDialogEx(id, 259, 0, "{43CD80}Сокращение срока", string, "Согласен", "Отмена"))SendError(playerid,"Недоступно в данный момент");
 	else
 	{
 	    LawyerOffer[playerid] = id;
        LawyerOffer[id] = playerid;
        format(string,sizeof(string),"Вы предлагаете сократить срок %s на %s за $%d", Name(id), Convert(time/2), price);
     	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
 	}
    return true;
}
cmd:lic(playerid, const params[])
{
	new id, string[100];
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /lic [id]");
	if(!ProxDetectorS(5.0, playerid, id)) return SendClientMessage(playerid, COLOR_RED, "Вы далеко от цели");
	ShowLicenses(id, playerid);
	format(string, sizeof(string), "%s показал(а) свои лицензии %s", Name(playerid), Name(id));
	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
	ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
cmd:badge(playerid, const params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GRAY,"У вас нет этого документа");
	new id, allstr[150];
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /badge [id]");
	if(!ProxDetectorS(5.0, playerid, id)) return SendError(playerid,"Вы далеко от игрока");
	new team = GetTeamID(playerid);
	new rank = PlayerInfo[playerid][pRank];
	format(allstr, sizeof(allstr), "\n\n\\c{7396FB}%s\n\n\\c{FFFFFF}Имя: {C9EAFF}« %s »\n\\c{FFFFFF}Должность: {C9EAFF}« %s »\n\n",OrgInfo[team][oName], Name(playerid), GetRankName(team, rank));
	Dialog_Open(id,INVALID_DIALOG_ID,0,"{43CD80}Удостоверение",allstr,"Скрыть","");
	format(allstr, sizeof(allstr), "%s показал(а) своё удостоверение %s", PlayerName[playerid], PlayerName[id]);
	ProxDetector(25.0, playerid, allstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SetPlayerChatBubble(playerid, allstr, COLOR_PURPLE, 10.0, 5000);
	return true;
}
cmd:pass(playerid, const params[])
{
	if(!IsValidPassport(playerid)) return SendClientMessage(playerid, COLOR_GRAY,"У вас нет паспорта");
    new id, str[100], allstr[330];
    new Year, Month, Day;
	getdate(Year, Month, Day);
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /pass [id]");
    if(!ProxDetectorS(5.0, playerid, id)) return SendError(playerid,"Вы далеко от игрока");
	format(str,sizeof(str),"\n\n\\c{FFFFFF}Имя: {C9EAFF}« %s »\n",Name(playerid));
	strcat(allstr,str);
	format(str,sizeof(str),"\\c{FFFFFF}Возраст: {C9EAFF}« %d лет »\n",(Year-PassInfo[playerid][psDateBirth][2]));
	strcat(allstr,str);
	format(str,sizeof(str),"\\c{FFFFFF}Серия/Номер: {C9EAFF}« %d/%d »\n",PassInfo[playerid][psSeria],PassInfo[playerid][psNumber]);
	strcat(allstr,str);
	format(str,sizeof(str),"\\c{FFFFFF}Законопослушность: {C9EAFF}« %d/100 »\n\n",PlayerInfo[playerid][pZKP]);
	strcat(allstr,str);
	if(PlayerInfo[playerid][pMember]!=0)
	{
	    if(!IsAtGang(playerid) && !IsAtMafia(playerid))
	    {
			format(str,sizeof(str),"\\c{FFFFFF}Организация: {C9EAFF}« %s »\n",OrgInfo[GetTeamID(playerid)][oName]);
			strcat(allstr,str);
			format(str,sizeof(str),"\\c{FFFFFF}Должность: {C9EAFF}« %s »\n",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]));
			strcat(allstr,str);
		}
	}
	format(str,sizeof(str),"\\c{FFFFFF}Работа: {C9EAFF}« %s »\n\n",GetJobName(PlayerInfo[playerid][pJob]));
	strcat(allstr,str);
	Dialog_Open(id,INVALID_DIALOG_ID,0,PlayerName[playerid],allstr,"Скрыть","");
	format(allstr, sizeof(allstr), "%s показал(а) свой паспорт %s", PlayerName[playerid], PlayerName[id]);
  	SetPlayerChatBubble(playerid, allstr, COLOR_PURPLE, 10.0, 5000);
	ProxDetector(25.0, playerid, allstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
cmd:carpass(playerid, const params[])
{
    new player,car,string[512];
    if(sscanf(params,"ud",player,car)) return SendInfo(playerid, "Используйте:{7396FB} /carpass [id игрока] [id машины]");
    if(!ProxDetectorS(5.0, playerid, player))  return SendError(playerid,"Вы далеко от игрока");
    if(!IsPlayerHaveCar(playerid,car)) return  SendError(playerid,"Это не ваш транспорт");
    format(string, sizeof(string), "%s показывает тех. паспорт %s", PlayerName[playerid], PlayerName[player]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    new number = GetVehicleID(car);
    new registers[124],numbere[124];
    if(!GetString(CarInfo[number][cRegister],"The State")) format(registers,sizeof(registers),"{7396FB}%s{FFFFFF}",CarInfo[number][cRegister]);
    else registers = "{D94141}Отсутствует{FFFFFF}";
	if(!GetString(CarInfo[number][cOnNumber],"The State")) format(numbere,sizeof(numbere),"{E53737}%s | Есть разрешение на %s{FFFFFF}",CarInfo[number][cNumber],CarInfo[number][cOnNumber]);
	else format(numbere,sizeof(numbere),"{A63737}%s",CarInfo[number][cNumber]);
    if(IsAPlane(car))
	{
    	format(string,sizeof(string),"\n\n\
		\\c{C9EAFF}%s{FFFFFF}\n\n\
		\\cВладелец: {7396FB}%s{FFFFFF}\n\
		\\cПосредник: {7396FB}%s{FFFFFF}\n\
		\\cНалог: {7396FB}$%d{FFFFFF} / $60000\n\
		\\cШтраф: {7396FB}$%d{FFFFFF} / $120000",VehicleName[GetVehicleModelEx(car)-400],CarInfo[number][cOwner],CarInfo[number][cKeyer],CarInfo[number][cShtrafer],CarInfo[number][cShtraf]);
    	format(string,sizeof(string),"%s\n\n\
		\\cНомер автомобиля: %s{FFFFFF}\n\
		\\cРегистратор автомобиля: %s\n\n",string,numbere,registers);
		format(string,sizeof(string),"%s\\c{FF4400}За транспорт необходимо платить налоги или он будет продан государству!\n\\cОплатить налог можно в банке\n\n",string);
    }
    else
    {
        format(string,sizeof(string),"\n\n\
		\\c{C9EAFF}%s{FFFFFF}\n\
		\\cВладелец: {7396FB}%s{FFFFFF}\n\
		\\cПосредник: {7396FB}%s{FFFFFF}\n\
		\\cПробег: {7396FB}%.0f километров{FFFFFF}\n\
		\\cНалог: {7396FB}$%d{FFFFFF} / $60000\n\
		\\cШтраф: {7396FB}$%d{FFFFFF} / $120000",VehicleName[GetVehicleModelEx(car)-400],CarInfo[number][cOwner],CarInfo[number][cKeyer], CarInfo[number][cMilage], CarInfo[number][cShtrafer],CarInfo[number][cShtraf]);
        format(string,sizeof(string),"%s\n\n\
		\\cНомер автомобиля: %s{FFFFFF}\n\
		\\cРегистратор автомобиля: %s\n\n",string,numbere,registers);
        format(string,sizeof(string),"%s\\c{FF4400}За транспорт необходимо платить налоги или он будет продан государству!\n\\cОплатить налог можно в банке\n\n",string);
    }

    Dialog_Open(player,0,0,"{43CD80}Информация",string,"Принять","");
	return true;
}
cmd:skill(playerid, const params[])
{
    if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /skill [id]");
    if(!ProxDetectorS(5.0, playerid, params[0]))  return SendError(playerid,"Вы далеко от игрока");
	ShowSkills(params[0], playerid);
	SetPlayerChatBubble(playerid, "Что-то показал(а)", COLOR_PURPLE, 10.0, 5000);
	return true;
}
cmd:mc(playerid, const params[])
{
	if(!IsValidPassport(playerid)) return SendClientMessage(playerid, COLOR_GRAY,"У вас нет этого документа");
    new id, str[200], allstr[250];
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /mc [id]");
    if(!ProxDetectorS(5.0, playerid, id))  return SendError(playerid,"Вы далеко от игрока");
    new Med[30];
	switch(MedCardInfo[playerid][mcState])
	{
	    case -1: return SendError(playerid,"У вас нет мед. карты");
	   	case 0: Med = "Не определен";
	   	case 1: Med = "Психически не здоров(а)";
	   	case 2: Med = "Наблюдаются отклонения";
	   	case 3: Med = "Полностью здоровый(ая)";
	}
	format(str,sizeof(str),"\n\n\\c{FFFFFF}Имя: {C9EAFF}« %s »\n",Name(playerid));
	strcat(allstr,str);
	format(str,sizeof(str),"\\c{FFFFFF}Выдал: {C9EAFF}« %s »\n",MedCardInfo[playerid][mcGiver]);
	strcat(allstr,str);
	format(str,sizeof(str),"\\c{FFFFFF}Дата: {C9EAFF}« %s »\n",MedCardInfo[playerid][mcDate]);
	strcat(allstr,str);
	format(str,sizeof(str),"\\c{FFFFFF}Статус: {C9EAFF}« %s »\n",Med);
	strcat(allstr,str);
	format(str,sizeof(str),"\\c{D94141}Наркозависимость: {C9EAFF}« %d »\n\n",PlayerInfo[playerid][pAllRepl]);
	strcat(allstr,str);
	Dialog_Open(id,INVALID_DIALOG_ID,0,PlayerName[playerid],allstr,"Скрыть","");
	format(allstr, sizeof(allstr), "%s показал(а) свою мед.карту %s", PlayerName[playerid], PlayerName[id]);
	ProxDetector(25.0, playerid, allstr, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return true;
}
cmd:setgangzone(playerid, const params[])
{
	new string[35];
	if(PlayerInfo[playerid][pAdmin] < 4) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new gang;
	if(sscanf(params,"d",gang)) return SendInfo(playerid, "Используйте:{7396FB} /setgangzone [11 - 15 или 25]");
	if((11 > gang || gang > 15) && gang != 25) return SendInfo(playerid, "Используйте:{7396FB} /setgangzone [11 - 15]");
	new zone = GetPlayerGangZone(playerid);
	if(CaptureZone[0] == zone || CaptureZone[1] == zone) return SendError(playerid,"Эту зону уже захватывают");
	new lastgang = GZInfo[zone][gzFracID];
	GangZoneHideForAll(GangZone[zone]);
    GangZoneShowForAll(GangZone[zone],TeamColors[gang]);
    GZInfo[zone][gzFracID] = gang;
    format(string,sizeof(string),"%d територия",zone);
    SendClientMessage(playerid,COLOR_WHITE,string);
    SendTeamMessage(gang,COLOR_VALIK,"[Информация] {FFFFFF}Ваша банда захватила новую территорию");
    UpdateDorm(gang);
    UpdateDorm(lastgang);
    SaveGangZone(zone);
	return 1;
}
cmd:setbizcontrol(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params, "dd", params[0], params[1])) return SendError(playerid,"Используй: /setbizcontrol [ID бизнеса] [номер мафии]");
    if(BizTime > 0)return SendError(playerid,"У кого то сейчас стрела, пока она идет вы не можете отдать бизнес");
	if(params[1] < 16 || params[1] > 19)return SendError(playerid, "16 - РМ | 17 - Yakuza | 18 - LCN | 19 - Warlocks MC");
	BizInfo[params[0]][bKrasher] = params[1];
    SendClientMessage(playerid,COLOR_VALIK,"Контроль бизнеса установлен");
    UpdateBiz(params[0],1);
	return true;
}
cmd:givebiz(playerid, const params[])
{
    new giveplayerid, string[350];
    if(sscanf(params, "u", giveplayerid)) return SendError(playerid,"Используй: /givebiz [ID/Name]");
    if(PlayerInfo[playerid][pRank] < 9) return SendError(playerid,"Доступно только лидеру и заместителю");
    if(!IsAtMafia(playerid) || !IsAtMafia(giveplayerid))return SendError(playerid,"Либо вы, либо тот, кому вы хотите продать бизнес, не состоит в мафии");
    if(giveplayerid == playerid) return SendError(playerid,"Вы не можете отдать самому себе");
    if(!ProxDetectorS(5.0, playerid, giveplayerid, 1)) return SendError(playerid,"Вы далеко от игрока");
    if(BizTime > 0)return SendError(playerid,"У кого то сейчас стрела, пока она идет вы не можете отдать бизнес");
    for(new i;i<OWNABLEBIZES;i++)
	{
	    if(!IsPlayerInRangeOfPoint(playerid,10.0,BizInfo[i][bEnter][0],BizInfo[i][bEnter][1],BizInfo[i][bEnter][2])) continue;
	    if(BizInfo[i][bKrasher] != PlayerInfo[playerid][pMember]) return SendError(playerid,"Вы не крешуете этот бизнес");
	    BizInfo[i][bKrasher] = PlayerInfo[giveplayerid][pMember];
     	SendClientMessage(giveplayerid,COLOR_VALIK,"Теперь вы крышуете этот бизнес");
     	SendClientMessage(playerid,COLOR_VALIK,"Вы отдали свой бизнес");
     	UpdateBiz(i,1);
	}
	format(string,sizeof(string),"Игрок %s отдал вам контроль над своим бизнесом",PlayerName[playerid]);
	SendClientMessage(giveplayerid,COLOR_RED,string);
	return true;
}
cmd:sellgangzone(playerid, const params[])
{
    new zone = GetPlayerGangZone(playerid);
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendError(playerid,"Используй: /sellgangzone [ID/Name] [Цена]");
    if(!ProxDetectorS(2.0, playerid, giveplayerid, 1)) return SendError(playerid,"Вы далеко от игрока");
	if(!IsAtGang(playerid) || !IsAtGang(giveplayerid))return SendError(playerid,"Либо вы либо тот кому вы хотите продать зону,  не состоит в банде");
	if(GZInfo[zone][gzFracID] != PlayerInfo[playerid][pMember]) return SendError(playerid,"Это не ваша зона");
	if(giveplayerid == playerid) return SendError(playerid,"Вы не можете продать самому себе");
	if(PlayerInfo[playerid][pLeader]==0 || PlayerInfo[giveplayerid][pLeader]==0) return SendError(playerid,"Только лидер лидеру может продавать зоны");
	if(CaptureZone[0] == zone || CaptureZone[1] == zone) return SendError(playerid,"Эту зону уже захватывают");
	if(count<0)return SendError(playerid,"Вы указываете отрицательную сумму? серьезно? вы хотите ему заплатить?");
	if(SlotValue[giveplayerid][0]< count)return SendError(playerid,"У этого бандита недостаточно денег чтобы оплатить");
 	SellGzone[giveplayerid] = count;
	SellPGzone[giveplayerid] = playerid;
 	SendError(playerid,"Вы отправили предложение о покупке територии");
	format(string,sizeof(string),"Игрок %s предлагает купить у него територию за $%d\nВы согласны?",PlayerName[playerid],count);
	ShowPlayerDialogEx(giveplayerid,377,0,"{43CD80}Подтверждение",string,"Согласен","Отклонить");
	return 1;
}
cmd:capture(playerid, const params[])
{
	if(!IsAtGang(playerid)) return SendError(playerid,"У Вас нет доступа");
	if(PlayerInfo[playerid][pRank] < 7) return SendError(playerid,"Для захвата территории необходимо иметь 7 ранг");
	new hour,minuite,second;
	gettime(hour,minuite,second);
	if(hour < 16 && hour > 22)return SendError(playerid, "Производить захват можно с 16:00 до 22:00");
	new slot;
	if(CaptureTime[slot] > 0) slot = 1;
	if(CaptureTime[slot] > 0) slot = -1;
	if(slot == -1) return SendError(playerid,"В данный момент идёт 2 захвата территорий");
    new Atac = GetTeamID(playerid);
    if(RecoveryTime[Atac] > gettime()) return SendError(playerid,"Интервал между захватами 30 минут");
    new zone = GetPlayerGangZone(playerid);
    if(zone == -1) return SendError(playerid,"Вы не находитесь ни в одной из территорий");
	if(!IsGangToZone(Atac, zone, 50.0)) return SendError(playerid,"Для захвата территории хотя бы половина всех членов банды должны присутствовать на захвате");
    if(GZInfo[zone][gzFracID] == Atac) return SendError(playerid,"Это ваша территория");
	if(RecoveryTime[GZInfo[zone][gzFracID]] > gettime())return SendError(playerid, "Недавно уже производили захват территории этой банды");
	if(!GZInfo[zone][gzFracID])
	{
	    GangZoneHideForAll(GangZone[zone]);
        GangZoneShowForAll(GangZone[zone],TeamColors[Atac]);
        GZInfo[zone][gzFracID] = Atac;
        RecoveryTime[Atac] = gettime()+1800;
        SendTeamMessage(Atac,COLOR_LIGHTGREEN,"Ваша банда захватила территорию, которая никому не принадлежала");
        UpdateDorm(Atac);
        SaveGangZone(zone);
	}
	else
	{
		new string[300];
	    if(IsGangConnected(GZInfo[zone][gzFracID])<3) return SendError(playerid,"У вражеской банды онлайн меньше 3 человек");
		f(string, "%s начал захват территории банды %s",PlayerName[playerid], OrgInfo[GZInfo[zone][gzFracID]][oName]);
		SendTeamMessage(Atac,COLOR_LIGHTGREEN,string);
		SendTeamMessage(Atac,COLOR_LIGHTGREEN,"Победит та банда, которая наберёт больше убийств в конце времени");
		f(string, "На вашу территорию напала банда %s",OrgInfo[PlayerInfo[playerid][pMember]][oName]);
		SendTeamMessage(GZInfo[zone][gzFracID],COLOR_RED,string);
		//
		format(string,sizeof(string),"[A] %s начали захват територии банды %s",OrgInfo[Atac][oName],OrgInfo[GZInfo[zone][gzFracID]][oName]);
		SendAdminsMessage(COLOR_ORANGE,string);
		SendAdminsMessage(COLOR_ORANGE,"Используйте '/switch' для переключения между каптами/бизваром");
		///
		CaptureZone[slot] = zone;
		CaptureDef[slot] = GZInfo[zone][gzFracID];
		CaptureAtac[slot] = Atac;
		CaptureAtacKill[slot] = 0;
		CaptureDefKill[slot] = 0;
		CaptureTime[slot] = 600;
		GangZoneFlashForAll(GangZone[CaptureZone[slot]],TeamColors[CaptureAtac[slot]]);
		f(string, "TIMELEFT %s",Convert(CaptureTime[slot]));
		TextDrawSetString(CaptureTD[4][slot], OrgInfo[CaptureAtac[slot]][oName]);
		TextDrawSetString(CaptureTD[5][slot], OrgInfo[CaptureDef[slot]][oName]);
		TextDrawSetString(CaptureTD[7][slot], string);
		TextDrawSetString(CaptureTD[11][slot], IntToStr(CaptureAtacKill[slot]));
		TextDrawSetString(CaptureTD[12][slot], IntToStr(CaptureDefKill[slot]));
		RecoveryTime[CaptureAtac[slot]] = gettime()+1800;
		RecoveryTime[CaptureDef[slot]] = gettime()+1800;
		foreach(Player, i)
		{
			if(PlayerInfo[i][pMember] == CaptureDef[slot] || PlayerInfo[i][pMember] == CaptureAtac[slot])
				ShowCapture(i, slot);
		}
		f(string,"{D94141}Нападают %s\n{43CD80}Защищаются %s\n{C9EAFF}Осталось %s",OrgInfo[Atac][oName],OrgInfo[GZInfo[zone][gzFracID]][oName],Convert(CaptureTime[slot]));
		new Float:gzzX = GZInfo[zone][gzX][0] + (floatabs(GZInfo[zone][gzX][1] - GZInfo[zone][gzX][0]) / 2);
		new Float:gzzY = GZInfo[zone][gzY][0] + (floatabs(GZInfo[zone][gzY][1] - GZInfo[zone][gzY][0]) / 2);
		new Float:_tmpz;
		MapAndreas_FindZ_For2DCoord(gzzX, gzzY, _tmpz);
		CaptureText[slot] = CreateDynamic3DTextLabel(string, -1, gzzX, gzzY, _tmpz + 4.0, 30.0);
	}
	return true;
}
cmd:slap(playerid, const params[])
{
	new string[300];
    if(PlayerInfo[playerid][pAdmin] < 1 ) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new id;
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /slap [id]");
	if(!IsPlayerConnected(id)) return SendError(playerid, "Игрок не законектился еще");
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(id,X,Y,Z);
    SetPlayerPos(id,X,Y,Z+5);
    format(string,sizeof(string),"[A] Администратор %s[%d] дал поджопник %s[%d]",Name(playerid),playerid,Name(id),id);
	SendAdminsMessage(COLOR_GRAY,string,1);
	return true;
}
cmd:weap(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2) return false;
	new id;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /weap [id]");
	if(!IsPlayerLogged[id])return SendError(playerid,"Игрок не авторизован");
	new string[150];
   	_ResetGun(id);
   	format(string,sizeof(string),"Вы отобрали оружие у игрока %s[%d]",Name(id),id);
   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	return true;
}
cmd:checkweap(playerid,const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1) return 1;
	if(sscanf(params,"u",params[0])) return SendInfo(playerid,"Используйте: {7396FB}/weap [id]");
	if(!IsPlayerConnected(params[0])) return SendError(playerid,"Неверный ID");
	new strings[1000],strin[100],strs[100];
	new weapons[13][2];
	new stringss[50];
	format(strs, 100, "%s", PlayerName[params[0]]);
	strcat(stringss, strs);
	for (new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(params[0], i, weapons[i][0], weapons[i][1]);
		format(strin,70,"{FFFFFF}Slot: %d\tWeaponid: %d\tAmmo: %d\n",i,weapons[i][0],weapons[i][1]);
		strcat(strings,strin);
	}
	ShowPlayerDialogEx(playerid,0,0,stringss,strings,"Закрыть","");
	return 1;
}
cmd:sprunk(playerid, const params[])
{
	if(!PlayerInfo[playerid][pSprunk]) return SendClientMessage(playerid, COLOR_RED, "У тебя нет спранка");
    new string[100];
    new Float:Health;
    GetPlayerHealth(playerid,Health);
    PlayerInfo[playerid][pSprunk] --;
    format(string, sizeof(string), "%s выпил(а) банку спранка", PlayerName[playerid]);
    ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
    if(Health+8 <= MAX_PLAYER_HEALTH(playerid)) J_SetPlayerHealth(playerid,Health+8);
    else J_SetPlayerHealth(playerid,MAX_PLAYER_HEALTH(playerid));
    return true;
}
cmd:beer(playerid, const params[])
{
	if(!PlayerInfo[playerid][pBeer]) return SendClientMessage(playerid, COLOR_RED, "У тебя нет пива");
    new string[100];
    new Float:Health;
    GetPlayerHealth(playerid,Health);
    PlayerInfo[playerid][pBeer] --;
    format(string, sizeof(string), "%s выпил(а) бутылку пива", PlayerName[playerid]);
    ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
    if(Health+10 <= MAX_PLAYER_HEALTH(playerid)) J_SetPlayerHealth(playerid,Health+10);
    else J_SetPlayerHealth(playerid,MAX_PLAYER_HEALTH(playerid));
    return true;
}
cmd:eat(playerid, const params[])
{
	if(!PlayerInfo[playerid][pCheeps]) return SendClientMessage(playerid, COLOR_RED, "У тебя нет чипсов");
    new string[100];
    new Float:Health;
    PlayerInfo[playerid][pCheeps]--;
    GetPlayerHealth(playerid,Health);
    format(string, sizeof(string), "%s скушал(а) пачку чипсов", PlayerName[playerid]);
    ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    if(Fullness[playerid] <= 75) GiveFullness(playerid,25);
    else SetFullness(playerid, 100);
	return true;
}
cmd:drink(playerid, const params[])
{
	if(HouseEntered[playerid] == -1) return SendError(playerid,"Вы не находитесь ни в 1-ом из домов");
    BarList(playerid);
	return true;
}
cmd:fwarn(playerid, const params[])
{
	if(PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pRank] < 9) return SendError(playerid,"Вы не можете это сделать");
	new id,reason[150],string[200];
	if(sscanf(params,"us[150]",id,reason)) return SendInfo(playerid, "Используйте:{7396FB} /fwarn [id] [причина]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_RED, "Неверный id игрока");
    if(!IsGiveWarn(playerid, id)) return SendClientMessage(playerid, COLOR_RED, "Вы не можете ему дать выговор");
    if(PlayerInfo[id][pLeader] > 0 ) return SendError(playerid,"Вы не можете выдать варн лидеру");
    if(PlayerInfo[playerid][pRank]==PlayerInfo[id][pRank])return SendClientMessage(playerid, COLOR_RED, "Вы не можете ему дать выговор");
    if(IsAIP(reason))return 1;
    PlayerInfo[id][pFWarns] ++;
    format(string,sizeof(string),"Вы дали выговор игроку %s с причиной %s",PlayerName[id],reason);
    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"%s дал вам выговор с причиной %s",PlayerName[playerid],reason);
    SendClientMessage(id,COLOR_LIGHTRED,string);
	if(PlayerInfo[id][pFWarns] >= 3)
	{
	    PlayerInfo[id][pFWarns] = 0;
	    SendClientMessage(id,COLOR_GRAY,"Вы были автоматически выгнаны из организации из-за 3-ёх выговоров");
	    format(string,sizeof(string),"%s покидает нашу организацию из-за 3-ёх выговоров",PlayerName[id]);
	    SendTeamMessage(PlayerInfo[id][pMember],COLOR_GRAY,string);
	    PlayerInfo[id][pMember] = 0;
	    PlayerInfo[id][pDCTime]=0;
	    SendClientMessage(id,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
        PlayerInfo[id][pRank] = 0;
        PlayerInfo[id][pJob] = 0;
        SetBumSkin(id);
    	PlayerSpawn(id);
	}
	return true;
}
cmd:unfwarn(playerid, const params[])
{
	if(PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pRank] < 9) return SendError(playerid,"Вы не можете это сделать");
	new id,string[200];
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /unfwarn [id]");
	if(!IsPlayerConnected(id)) return SendError(playerid, "Неверный ID игрока");
    if(GetTeamID(id) != GetTeamID(playerid)) return SendError(playerid, "Вы не можете снять выговор этому человеку");
	if(PlayerInfo[id][pFWarns] == 0) return SendError(playerid, "У этого человека нет выговоров");
	if(id==playerid)return SendError(playerid, "Вы не можете снять выговор самому себе");
    PlayerInfo[id][pFWarns] --;
    format(string,sizeof(string),"Вы сняли выговор игроку %s",PlayerName[id]);
    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"%s снял вам выговор",PlayerName[playerid]);
    SendClientMessage(id,COLOR_LIGHTRED,string);
	return true;
}
cmd:knock(playerid, const params[])
{
	new house = InfoHouse[playerid];
	if(house == -1) return true;
	if(!IsPlayerInDynamicArea(playerid, HouseCP[house][1])) return SendClientMessage(playerid, COLOR_RED, "Вы должны стоять у двери дома");
    foreach(new i:Player)
    {
        if(HouseEntered[i] == house)
        {
            SendClientMessage(i, COLOR_VALIK, "В дверь кто-то стучится");
		    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы стучитесь в дверь");

        }
    }
	return true;
}
cmd:reg(playerid, const params[])
{
    new result[150],is;
    if(!IsPlayerInRangeOfPoint(playerid, 20.0, -1619.8113,653.5823,-5.2422) ) return SendError(playerid,"Вы должны находиться возле пункта регистрации номера");
	if(RegTimeNumber[playerid] > 0 ) return SendError(playerid,"Вы уже подавали заявку на регистрацию номера! Подождите пока ее одобрят или отклонят");
    if(sscanf(params,"ds[150]",is,result)) return SendInfo(playerid, "Используйте:{7396FB} /reg [id машины] [Номер]");
    if(strlen(result)>10)return SendError(playerid,"Длина номера может составлять не больше 10 символов");
    if(!IsPlayerHaveCar(playerid,is)) return SendClientMessage(playerid, COLOR_RED, "Вы не можете подать заявку на смену номера чужой машине");
	if(GetMoney(playerid) < 5000) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
	new cops;
	foreach(new id:Player)
	{
		if((ProxDetectorS(30.0, playerid, id, 1) && PlayerInfo[id][pMember]==TEAM_SFPD && IsPlayerLogged[id] && TeamDuty[id]))
		{
			SendClientMessage(id,COLOR_ORANGE,"Кто-то оставил заявку на регистрацию номера, проверьте её в месте регистрации");
			cops++;
		}
	}
	if(cops<1)return SendError(playerid,"Вы не можете подать заявку на регистрацию номера, так как рядом нет работников которые смогут ее проверить");
	if(strfind(result, "_")!=-1) return SendError(playerid,"У вас в номере имеются запрещенные символы");
	if(strfind(result, "\n")!=-1) return SendError(playerid,"У вас в номере имеются запрещенные символы");
	if(strfind(result, "/")!=-1) return SendError(playerid,"У вас в номере имеются запрещенные символы");
	new number = GetVehicleID(is);
	if(!GetString(CarInfo[number][cOnNumber],"The State") && !GetString(CarInfo[number][cOnNumber],"0"))return SendError(playerid,"У вас уже есть разрешение на установку номера для этого авто");
	if(!GetString(CarInfo[number][cOnRegister],"The State") && !GetString(CarInfo[number][cOnRegister],"0"))return SendError(playerid,"У вас уже есть разрешение на установку номера для этого авто");
	SetString(CarInfo[number][cOnNumber],"The State");
 	SetString(CarInfo[number][cOnRegister],"The State");
	SendClientMessage(playerid,COLOR_ORANGE,"[Информация]{FFFFFF} Ваша заявка находится в обработке, сейчас вам желательно оставаться тут, ожидая одобрения на установку");
	SendClientMessage(playerid,-1,"Если что-то изменится, мы дадим вам знать");
    RegCarNumber[playerid]=number;
    RegCarID[playerid]= is;
	RegTimeNumber[playerid] = gettime();
	format(RegNumbers[playerid],128,"%s",result);
	return true;
}
cmd:findnumb(playerid, const params[])
{
	if(PlayerInfo[playerid][pMember]!=TEAM_SFPD) return SendError(playerid,"Только для сотрудников Полиции СФ");
	if(PlayerInfo[playerid][pRank]<7)return SendError(playerid,"Отказано в доступе! (Доступно с 7 ранга!)");
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве!)");
	new bstr[1024];
	foreach(new id:Player)
	{
		if(RegTimeNumber[id] > 0 )
			format(bstr,sizeof(bstr),"%s {FFD700}-{FFFFFF} %s. Требуемый номер: [{FFD700}%s{FFFFFF}]\n",bstr,PlayerName[id],RegNumbers[id]);
	}
	if(strlen(bstr) > 0) ShowPlayerDialogEx(playerid,2783,2,"{43CD80}Выберите действие",bstr,"Выбрать","Закрыть");
	else ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{FFFFFF}На данный момент заявок на регистрацию номеров нет","Скрыть", "");
	return true;
}

cmd:edit(playerid)
{
   	if(!IsANews(playerid)) return SendError(playerid,"Только для сотрудников СNN");
	new carid = GetPlayerVehicleID(playerid);
	if(!IsANewsCar(carid) && !IsPlayerInRangeOfPoint(playerid, 50.0, 23.2580,-20.4954,1231.9240))return SendError(playerid, "Вы должны быть в офисе/транспорте радиоцентра");
	if(PlayerInfo[playerid][pRank]<2)return SendError(playerid,"Отказано в доступе");
	new bstr[1024];
	strcat(bstr, "Отправитель\tСообщение\n");
	foreach(new id:Player)
	{
		if(AddTimeMessages[id] > 0 )
			format(bstr,sizeof(bstr),"%s%s\t%s\n",bstr,PlayerName[id],AddMessages[id]);
	}
	if(strlen(bstr) > 25) ShowPlayerDialogEx(playerid,556,5,"{43CD80}Редакция",bstr,"Выбрать","Закрыть");
	else ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{FFFFFF}На данный момент сообщений нет","Скрыть", "");
	return true;
}
cmd:ad(playerid, const params[])
{
    new result[128],string[200];
    if(TimeMessage[playerid]>gettime()) return SendError(playerid,"Вы не можете так часто подавать объявления");
	if(SlotValue[playerid][19] == 0 || SlotValue[playerid][19] == 1) return SendError(playerid,"У вас нет мобильного телефона или SIM-карты");
	if(AddTimeMessages[playerid] > 0 ) return SendError(playerid,"Вы уже подавали объявление на редакцию");
    if(sscanf(params,"s[128]",result)) return SendInfo(playerid, "Используйте:{7396FB} /ad [Текст]");
	if(GetMoney(playerid) < 500) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
	format(string,sizeof(string),"\n\n\\c{C9EAFF}Вы собираетесь отправить объявление\n\\c{43CD80}%s\n\n\\c{C9EAFF}Стоимость:{43CD80} $500\n\n\\c{8cc2ff}Объявление будет подано после проверки!\n\\cСпасибо, что воспользовались нашими услугами!",result);
	if(PlayerInfo[playerid][pVIP])strcat(string, "\n\\cОбъявления VIP-игроков выше по приоритету для редактирования\n\n");
	else strcat(string, "\n\n");
    Dialog_Open(playerid,8455,DIALOG_STYLE_MSGBOX,"{43CD80}Проверка",string,"Отправить","Отмена");
	format(AddMessages[playerid],128,"%s",result);
	
	return 1;
}
cmd:heal(playerid, const params[])
{
	if(!IsAMedic(playerid)) return SendError(playerid,"Вы не доктор");
	if(!TeamDuty[playerid])return SendError(playerid,"Чтобы лечить пациентов вы должны быть на дежурстве");
    new price,id,string[150];
    if(sscanf(params,"ud",id,price)) return SendInfo(playerid, "Используйте:{7396FB} /heal [id] [цена]");
	if(!ProxDetectorS(4,playerid,id)) return SendError(playerid,"Вы далеко от игрока");
	if(price < 1) return SendError(playerid,"Установите цену за лечение от 1$");
    if(price > 1000) return SendError(playerid,"За свои услуги вы можете брать не более $1000");
   	new carid = GetPlayerVehicleID(playerid);
	if(VehicleInfo[carid][vTeam] == TEAM_M4C || VehicleInfo[carid][vTeam] == TEAM_MERIALV || VehicleInfo[carid][vTeam] == TEAM_MEDICLV || IsPlayerInRangeOfPoint(playerid,150,2266.1377,42.4026,1040.7661))
	{
	    SendClientMessage(playerid,COLOR_VALIK,"Вы отправили предложение о лечении");
		format(string,sizeof(string),"Медик %s хочет вылечить вас за $%d",PlayerName[playerid],price);
		if(ShowPlayerDialogEx(id,131,0,"{43CD80}Лечение",string,"Далее","Отмена"))
		{
			HealOffer[id] = playerid;
			HealPrice[id] = price;
		}
		else SendError(playerid,"Недоступно в данный момент");
	}
	else SendError(playerid,"Вы должны находиться в больнице или машине МЧC");
	return true;
}
cmd:number(playerid, const params[])
{
	if(!PlayerInfo[playerid][pPhoneBook]) return SendError(playerid,"У вас нет телефонной книжки");
    new id,string[400];
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /number [id]");
    else format(string,sizeof(string),"{FFFFFF}%s[%d]:    {33CCFF}%d",Name(id),id,SlotValue[id][19]);
    if(!IsPlayerConnected(id)) return SendError(playerid, "Игрок не в сети");
    if(SlotValue[id][19]==0)return SendError(playerid,"У этого игрока нет мобильного телефона");
    SetPlayerChatBubble(playerid, "Смотрит телефонную книгу", COLOR_PURPLE, 10.0, 5000);
    SendClientMessage(playerid,-1,string);
	return true;
}
cmd:fishes(playerid)
{
	new str[20],string[200];
	for(new i;i < 5;i ++)
	{
		format(str,sizeof(str),"%s\n",FishName[PlayerFish[playerid][i]]);
		strcat(string,str);
	}
	if(!ShowPlayerDialogEx(playerid,INVALID_DIALOG_ID,0,"{43CD80}Список рыбы",string,"Скрыть",""))SendError(playerid,"Недоступно в данный момент");
	return true;
}
cmd:go_fished(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid))
	{
	    if(!InJob[playerid])
	    {
		    if(PlayerInfo[playerid][pSpining])
		    {
		        if(PlayerInfo[playerid][pWorms] > 0)
		        {
		            if(!Fishing[playerid])
		            {
						for(new i;i < sizeof(FishZone);i ++)
						{
						    if(IsPlayerInRangeOfPoint(playerid,2.0,FishZone[i][0],FishZone[i][1],FishZone[i][2]))
						    {
						        new string[150];
						        SetPlayerArmedWeapon(playerid, 0);
						        SetPlayerAttachedObjectEx(playerid, 6,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
						        TogglePlayerControllable(playerid, false);
						        ApplyAnimation(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 1, 0, 1);
								format(string,sizeof(string),"%s закидывает крючок и ловит рыбу",PlayerName[playerid]);
								ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SetPlayerTimer(playerid,"PlayerFishing",15000 + random(10000),false);
								Fishing[playerid] = true;
						    }
						}
					}
					else SendError(playerid,"Вы уже ловите рыбу");
				}
				else SendError(playerid,"У вас нет наживки");
			}
			else SendError(playerid,"У вас нет удочки");
		}
		else SendError(playerid,"Нельзя рыбачить во время работы");
	}
	return true;
}
cmd:interprice(playerid, const params[])
{
	if(SlotValue[playerid][3] == -1) return SendError(playerid,"У вас нет бизнеса");
    new price, biz = SlotValue[playerid][3];
    if(sscanf(params,"f",price)) return SendInfo(playerid, "Используйте:{7396FB} /interprice [price]");
    if(price < 1 || price > 50) return SendError(playerid,"Установите цену от 1 до 50");
    BizInfo[biz][bEnterPrice] = price;
    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы произвели изменения в своем бизнесе");
	return true;
}
cmd:usemask_gg(playerid)
{
    if(IsANotControllable(playerid)) return SendError(playerid, "Вы не можете двигаться");
    if(PlayerInfo[playerid][pMaskON]==0)
    {
		if(!SlotValue[playerid][13]) return SendError(playerid, "У вас нет маски");
		SlotValue[playerid][13]--;
		SetPlayerColor(playerid,0x665E5E01);
	    if(TalentsInfo[playerid][2][1] == 3)PlayerInfo[playerid][pMaskON] = 900;
		else PlayerInfo[playerid][pMaskON] = 600;
	    ApplyAnimation( playerid, "SHOP", "ROB_shifty", 4.1, 0, 1, 1, 0, 0 );
	    SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы надели маску");
    }
    else
	{
	    PlayerInfo[playerid][pMaskON]=0;
		if(TeamDuty[playerid]) SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
		else SetPlayerColor(playerid,0xEFEFF710);
        SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы выкинули маску");
	}
	if(GetPVarInt(playerid, "showedinv"))UpdateInventory(playerid, SelectedSlot[playerid]);
	return true;
}
cmd:unban(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return false;
 	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new name[24],string[200];
    if(sscanf(params,"s[24]",name)) return SendInfo(playerid, "Используйте:{7396FB} /unban [name]");
    if(!IsBannedName(name)) return  SendError(playerid, "Этот игрок не забанен");
    mysql_real_escape_string(name, UnbanName[playerid]);
    new seconds, reason[100], admin[24], Name[24];
    format(string, sizeof(string), "SELECT * FROM `bannames` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
	new Cache:result = mysql_query(mysql, string);
	if(cache_get_row_count(mysql) > 0)
	{
		cache_get_row(0, 1, Name, mysql);
		cache_get_row(0, 2, admin, mysql);
		cache_get_row(0, 3, reason, mysql);
		seconds = cache_get_field_content_int(0, "BanSeconds", mysql);

		new times = gettime();

		new tima[20],dima;
		if(floatround((seconds-times)/60/60/24)> 1)
		{
			tima = "дней";
			dima =floatround((seconds-times)/60/60/24,floatround_ceil);
		}
		else
	 	{
 			tima = "час(ов)";
 			dima = floatround((seconds-times)/60/60,floatround_ceil);
		}

	    format(string,sizeof(string),"\
		{FFFFFF}Заблокировал: [{D94141}%s{ffffff}]\n\
		{FFFFFF}Причина: [{D94141}%s{ffffff}]\n\
		{FFFFFF}До разблокировки: [{D94141}%d %s{ffffff}]",
		admin, reason, dima, tima);
	}
	ShowPlayerDialogEx(playerid,91,0,"{43CD80}Информация о забаненном",string,"Разбанить","Отмена");
	cache_delete(result, mysql);
	return true;
}
cmd:bizinfo(playerid)
{
	if(SlotValue[playerid][3] == -1) return SendError(playerid, "У вас нет бизнеса");
    new string[650],str[200],lock[15];
    new biz = SlotValue[playerid][3];
    if(BizInfo[biz][bLock]) lock = "{7396FB}Закрыт";
	else lock = "{43CD80}Открыт";
	strcat(string, "\n\n");
    if(!IsNoEnterBiz(biz))
    {
        if(BizInfo[biz][bState] == B_GAS || BizInfo[biz][bState] == 7)
		{
	        new Text[60];
	        switch(BizInfo[biz][bState])
			{
			    case B_GAS: Text = "Стоимость 1-го литра бензина";
			    case 7: Text = "Стоимость 1-го продукта";
			    default: Text = "";
	        }
		    format(str,sizeof(str),"\\c{FFFFFF}%s: {43CD80}$%.1f\n",Text,BizInfo[biz][bEnterPrice]);
		    strcat(string,str);
		}
	}
	new mafiastr[256];
	switch(BizInfo[biz][bKrasher])
	{
	    case TEAM_RM: format(mafiastr,sizeof(mafiastr),"Русская мафия");
		case TEAM_YAKUZA: format(mafiastr,sizeof(mafiastr),"Yakuza");
		case TEAM_LCN: format(mafiastr,sizeof(mafiastr),"La Cosa Nostra");
		case TEAM_BIKERS: format(mafiastr,sizeof(mafiastr),"Warlocks MC");
		default: format(mafiastr,sizeof(mafiastr),"Отсутствует");
	}
	if(BizInfo[biz][bState] == B_GAS)
	{
	    format(str,sizeof(str),"\\c{FFFFFF}Всего топлива: {43CD80}%d\n",BizInfo[biz][bProducts]);
	    strcat(string,str);
	}
	else if(BizInfo[biz][bState] == B_GUNSHOP)
	{
	    format(str,sizeof(str),"\\c{FFFFFF}Всего материалов: {43CD80}%d\n",BizInfo[biz][bProducts]);
	    strcat(string,str);
	}
	else if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 1  || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
	{
	    format(str,sizeof(str),"\\c{FFFFFF}Продуктов: {43CD80}%d\n",BizInfo[biz][bProducts]);
	    strcat(string,str);
	}
    format(str,sizeof(str),"\\c{FFFFFF}Бизнес: {43CD80}%s\n",BizInfo[biz][bName]);
	strcat(string,str);
	format(str,sizeof(str),"\\c{FFFFFF}Банк бизнеса: {43CD80}$%d\n",BizInfo[biz][bMoney]);
	strcat(string,str);
	format(str,sizeof(str),"\\c{FFFFFF}Открыт/Закрыт: %s\n",lock);
	strcat(string,str);
	format(str,sizeof(str),"\\c{FFFFFF}Крыша: {43CD80}%s\n",mafiastr);
	strcat(string,str);
	format(str,sizeof(str),"\\c{FFFFFF}Налог к оплате: {43CD80}%d/100000$\n",BizInfo[biz][bLevel]);
	strcat(string,str);

	if(BizInfo[biz][bState] == 7 || BizInfo[biz][bState] == 1 || BizInfo[biz][bState] == 2 || BizInfo[biz][bState] == 3 || BizInfo[biz][bState] == 9)
	{
	    if(BizInfo[biz][bBuyCost]>0 && BizInfo[biz][bNeedItem]>0)
		{
			format(str,sizeof(str),"\\c{FFFFFF}Открытый заказ на: {43CD80}%d товара\n",BizInfo[biz][bNeedItem]);
			strcat(string,str);
			format(str,sizeof(str),"\\c{FFFFFF}Стоимость скупки товара: {43CD80}$%d\n",BizInfo[biz][bBuyCost]);
			strcat(string,str);
		}
	}
	format(str,sizeof(str),"\n\\c{FFFFFF}Прибыль за {61B23D}%d{FFFFFF} часов: {61B23D}$%d{FFFFFF}\n\\cПосетителей за {61B23D}%d{FFFFFF} часов: {61B23D}%d{FFFFFF} человек\n\n",BizInfo[biz][bNum],BizInfo[biz][bWin],BizInfo[biz][bNum],BizInfo[biz][bVisit]);
	strcat(string,str);
	if(!Dialog_Open(playerid,156,0,"{43CD80}Меню",string,"Изменить","Отмена"))SendError(playerid, "Недоступно в данный момент");
	return true;
}
cmd:stoinfo(playerid)
{
	if(SlotValue[playerid][4] == -1) return SendError(playerid, "У вас нет СТО");
    new string[650],str[200];
	new hour, minuite, second;
	gettime(hour, minuite, second);
    new biz = SlotValue[playerid][4];
	strcat(string, "\n\n");
    format(str,sizeof(str),"\\c{43CD80}Автомастерская #%d\n\n",TuningInfo[biz][stoID]);
	strcat(string,str);
	format(str,sizeof(str),"\\c{FFFFFF}Баланс СТО: {43CD80}$%d\n",TuningInfo[biz][stoBalance]);
	strcat(string,str);
	strcat(string,"\\c{FFFFFF}Посуточная оплата: {43CD80}$10000\n");
	format(str,sizeof(str),"\\c{FFFFFF}Оплачено дней: {43CD80}%d/30\n",TuningInfo[biz][stoOplata]);
	strcat(string,str);
	format(str,sizeof(str),"\n{FFFFFF}Прибыль за {61B23D}%d{FFFFFF} часов: {61B23D}$%d{FFFFFF}\nКлиентов за {61B23D}%d{FFFFFF} часов: {61B23D}%d{FFFFFF} человек\n\n",hour-5,TuningInfo[biz][stoWin],hour-5,TuningInfo[biz][stoVisit]);
	strcat(string,str);
	if(!Dialog_Open(playerid,8013,0,"{43CD80}Меню",string,"Изменить","Отмена"))SendError(playerid, "Недоступно в данный момент");
	return true;
}
cmd:unjail(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /unjail [id]");
	format(CMDstr,144,"[A] Администратор %s[%d] выпустил %s[%d] из тюрьмы",Name(playerid),playerid,Name(params[0]),params[0]);
	SendAdminsMessage(COLOR_GRAY,CMDstr);
	SendClientMessage(params[0],COLOR_LIGHTGREEN,"Администратор выпустил вас из тюрьмы");
	PlayerInfo[params[0]][pView] = 0;
	PlayerInfo[params[0]][pJailTime] = 0;
	PlayerSpawn(params[0]);
	return true;
}
cmd:prison(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /prison [id]");
	if(!PlayerInfo[params[0]][pWanted])return SendError(playerid, "Этот игрок не в розыске");
	PlayerInfo[params[0]][pJailTime] = PlayerInfo[params[0]][pWanted] * 3600;
	if(SlotValue[params[0]][14] >0 || SlotValue[params[0]][11] >0) SendClientMessage(params[0],COLOR_RED,"[Информация] {FFFFFF}У вас отобрали наркотики и материалы");
	SettingSpawn(params[0]);
	_ResetGun(params[0]);
	PlayerInfo[params[0]][pWanted] = 0;
	SetPlayerWantedLevelEx(params[0],0);
	PlayerSpawn(params[0]);
	SlotValue[params[0]][14] = 0;
	SlotValue[params[0]][11] = 0;
	new string[128];
	format(string, sizeof(string), "Вы были посаженны в тюрьму на %d минут администратором %s", (PlayerInfo[params[0]][pJailTime]/60), Name(playerid));
	SendClientMessage(params[0], COLOR_LIGHTRED, string);
	format(string, sizeof(string), "[A] Администратор %s[%d] посадил игрока %s[%d] в Алькатрас",Name(playerid), playerid,Name(params[0]), params[0]);
	SendAdminsMessage(COLOR_GRAY,string,1);
	return 1;
}
cmd:jail(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new string[200],reason[200],time;
    if(sscanf(params,"uds[100]",params[0],time,reason)) return SendInfo(playerid, "Используйте:{7396FB} /jail [id] [time] [reason]");
    if(IsAIP(reason))return 1;
    if(strlen(reason)>30) return SendError(playerid,"Не больше 30 символов");
    if(PlayerInfo[params[0]][pJailTime]>0)return SendError(playerid,"Этот игрок уже в тюрьме");
    if(PlayerInfo[params[0]][pView]>0)return SendError(playerid,"Этот игрок уже в ДЕМОРГАНЕ");
    if(time == 0) return SendError(playerid, "Нельзя посадить на 0 минут");
    if(time> 1000) return SendError(playerid, "Нельзя посадить больше, чем на 1000 минут");
    if(PlayerInfo[params[0]][pView]>0 && PlayerInfo[playerid][pAdmin] < ADM_ADMIN) return SendError(playerid, "Ваш уровень не дает возможность менять время отсидки этого игрока");
    if(GetPVarInt(playerid,"ban")>gettime()) return SendError(playerid,"Можно раз в 10 секунд");
    SetPVarInt(playerid,"ban",gettime()+10);
	format(string, sizeof(string), " Администратор %s[%d] посадил игрока %s[%d] в деморган на %d минут. Причина: %s",Name(playerid), playerid,Name(params[0]), params[0],time,reason);
	AsendClientMessageToAll(COLOR_LIGHTRED, string);
	PlayerPlaySound(params[0], 1058, 0.0, 0.0, 0.0);
	_ResetGun(params[0]);
	PlayerInfo[params[0]][pView] = time*60;
	PlayerInfo[params[0]][pWanted] = 0;
	J_SetPlayerHealth(params[0],MAX_PLAYER_HEALTH(playerid));
	PlayerSpawn(params[0]);
	return true;
}
cmd:jailoff(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new string[200],reason[200],time,name[MAX_PLAYER_NAME];
    if(sscanf(params,"s[24]ds[100]",name,time,reason)) return SendInfo(playerid, "Используйте:{7396FB} /jailoff [nickname] [time] [reason]");
    if(IsAIP(reason))return 1;
	new player = NameID(name);
	if(player != INVALID_PLAYER_ID) return SendError(playerid,"Игрок онлайн");
    if(strlen(reason)>30) return SendError(playerid,"Не больше 30 символов");
    if(time == 0) return SendError(playerid, "Нельзя посадить на 0 минут");
    if(time> 1000) return SendError(playerid, "Нельзя посадить больше, чем на 1000 минут");
    if(GetPVarInt(playerid,"ban")>gettime()) return SendError(playerid,"Можно раз в 10 секунд");
    SetPVarInt(playerid,"ban",gettime()+10);
	format(string, sizeof(string), " Администратор %s[%d] посадил оффлайн игрока %s в деморган на %d минут. Причина: %s",Name(playerid), playerid,name,time,reason);
	AsendClientMessageToAll(COLOR_LIGHTRED, string);
	new query[128];
	mysql_format(mysql, query, sizeof(query), "UPDATE `accounts` SET `View` = '%d', `Wanted`='0' WHERE `NickName` = '%e'", time * 60, name);
	mysql_pquery(mysql, query);
	return true;
}
cmd:take(playerid, const params[])
{
	if(!IsACop(playerid) && GetTeamID(playerid) != TEAM_LICENSERS) return SendError(playerid,"Вы не можете забрать лицензии");
	new carid = GetPlayerVehicleID(playerid);
	if(!IsACopCar(carid) && GetTeamID(playerid) != TEAM_LICENSERS && !IsPlayerInRangeOfPoint(playerid,150,1721.4983,2287.0696,1422.9221) && !IsPlayerInRangeOfPoint(playerid,350,1435.9246,-1654.5375,1518.1765)) return SendError(playerid,"Вы должны находиться в полицейской машине или в участке полиции/ФБР");
    new id;
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /take [id]");
    if(PlayerInfo[playerid][pRank] < 6) return SendError(playerid,"Вы не можете забрать лицензии");
    if(!ProxDetectorS(2.0,playerid,id)) return SendError(playerid, "Вы далеко от игрока");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    TakeOffer[playerid] = id;
    if(IsACop(playerid))ShowPlayerDialogEx(playerid,88,2,"{43CD80}Что забрать?","Наркотики\nМатериалы\nОружие\nЛицензию","Забрать","Отмена");
	else ShowPlayerDialogEx(playerid,89,2,"{43CD80}Что конфиксовать?","Лицензию на авто\nЛицензию на мото\nЛицензию на полеты\nЛицензию на ловлю рыбы\nЛицензию на водный транспорт\nЛицензию на оружие","Отобрать","Отмена");
	return true;
}
cmd:put(playerid, const params[])
{
	new string[200];
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /put [id]");
	if(!ProxDetectorS(4,playerid,params[0])) return SendError(playerid, "Вы далеко от игрока");
	if(!IsACop(playerid))return SendError(playerid,"Вы не сотрудник правоохранительных органов");
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
	if(!Cuffed[params[0]]) return SendError(playerid, "Этот игрок не обездвижен");
	for(new i = 1;i <= ADD_VEHICLES;i ++)
	{
		if(i == ADD_VEHICLES)return SendError(playerid,"Вы должны быть рядом со служебным транспортом");
		if(!IsACar(i)) continue;
		if(!IsACopCar(i))continue;
		new Float:X,Float:Y,Float:Z;
		GetVehiclePos(i,X,Y,Z);
		if(!IsPlayerInRangeOfPoint(playerid,2.5,X,Y,Z)) continue;
		new seat = GetFreeSeat(i);
		if(seat == -1) return SendError(playerid,"В машине нет свободных мест");
		AC_PutPlayerInVehicle(params[0],i,seat);
		TogglePlayerControllable(params[0], false);
		format(string,sizeof(string)," %s затащил игрока %s в машину",PlayerName[playerid],PlayerName[params[0]]);
		ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		break;
	}
	return true;
}
cmd:arrest(playerid)
{
	if(!IsACop(playerid)) return SendError(playerid,"Вы не полицейский");
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    new Float:Distance[sizeof(PrisonPos)];
    Distance[0] = GetPlayerDistanceFromPoint(playerid,PrisonPos[0][0],PrisonPos[0][1],PrisonPos[0][2]);
    Distance[1] = GetPlayerDistanceFromPoint(playerid,PrisonPos[1][0],PrisonPos[1][1],PrisonPos[1][2]);
    Distance[2] = GetPlayerDistanceFromPoint(playerid,PrisonPos[2][0],PrisonPos[2][1],PrisonPos[2][2]);
    Distance[3] = GetPlayerDistanceFromPoint(playerid,PrisonPos[3][0],PrisonPos[3][1],PrisonPos[3][2]);
    Distance[4] = GetPlayerDistanceFromPoint(playerid,PrisonPos[4][0],PrisonPos[4][1],PrisonPos[4][2]);
    SendInfo(playerid,"Едьте на место, обозначенное на карте красным маркером");
	for(new i;i<5;i++) TogglePlayerDynamicCP(playerid,JailCP[i],false);
    if(Distance[0] < Distance[1] && Distance[0] < Distance[2] && Distance[0] < Distance[3] && Distance[0] < Distance[4])
    {
        PlayerJailCP[playerid] = 0;
        TogglePlayerDynamicCP(playerid,JailCP[0],true);
    }
    else if(Distance[1] < Distance[0] && Distance[1] < Distance[2] && Distance[1] < Distance[3] && Distance[1] < Distance[4])
    {
        PlayerJailCP[playerid] = 1;
        TogglePlayerDynamicCP(playerid,JailCP[1],true);
    }
    else if(Distance[2] < Distance[0] && Distance[2] < Distance[1] && Distance[2] < Distance[3] && Distance[2] < Distance[4])
    {
        PlayerJailCP[playerid] = 2;
        TogglePlayerDynamicCP(playerid,JailCP[2],true);
    }
    else if(Distance[3] < Distance[0] && Distance[3] < Distance[1] && Distance[3] < Distance[2] && Distance[3] < Distance[4])
    {
        PlayerJailCP[playerid] = 3;
        TogglePlayerDynamicCP(playerid,JailCP[3],true);
    }
    else if(Distance[4] < Distance[0] && Distance[4] < Distance[1] && Distance[4] < Distance[2] && Distance[1] < Distance[3])
    {
        PlayerJailCP[playerid] = 4;
        TogglePlayerDynamicCP(playerid,JailCP[4],true);
    }
	return true;
}
public ChangeInterior(playerid)
{
	new string[30];
	if(BuyInt[playerid] == 1)
	{
	    SetPlayerInterior(playerid,IntInfo[1][iInterior]);
		SetPlayerCameraPos(playerid,IntInfo[1][iCam_X],IntInfo[1][iCam_Y],IntInfo[1][iCam_Z]); //
		SetPlayerCameraLookAt(playerid,IntInfo[1][iCamAt_X],IntInfo[1][iCamAt_Y],IntInfo[1][iCamAt_Z]); //
		format(string,sizeof(string),"Level: %d~n~Cost: $%d",IntInfo[1][iLevel],IntInfo[1][iCost]);
		PlayerTextDrawSetString(playerid, InfoText[playerid],string);
		PlayerTextDrawShow(playerid,InfoText[playerid]);
		for(new i; i < sizeof ActionMenu; i++)
			TextDrawShowForPlayer(playerid, ActionMenu[i]);
		SelectTextDraw(playerid, -16776961); //0xFFFFFFFF
		SendClientMessage(playerid,COLOR_LIGHTBLUE,"Чтобы посмотреть следующий интерьер нажмите {43CD80}>");
		SendClientMessage(playerid,COLOR_LIGHTBLUE,"Чтобы посмотреть предыдущий интерьер нажмите {43CD80}<");
		SendClientMessage(playerid,COLOR_LIGHTBLUE,"Чтобы выбрать интерьер нажмите {43CD80}Accept");
		SendClientMessage(playerid,COLOR_LIGHTBLUE,"Для отмены нажмите {43CD80}Cancel");
		SetPVarInt(playerid, "PauseUpdate", 3);
	}
	return true;
}
cmd:en(playerid)
{
	if(GetPlayerState(playerid) != 2) return SendError(playerid,"Вы не за рулём");
	if(engines[playerid]>gettime())return SendError(playerid,"Нельзя так часто заводить двигатель");
	new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid) || carid == royalcar || GetPVarInt(playerid, "StoWaiting")) return false;
	if(GetEngineStatus(carid) < 1)
	{
	    if(IsAArendCar(carid))
	    {
	        new rentid = GetArendCarID(carid);
	        if(ArendInfo[rentid][aRentID] != playerid) return false;
	    }
	    if(GetVehicleModelEx(carid)==431)if(pTemp[playerid][pArendaCar]==-1)return ToCheat(1,playerid);
	    if(GetPlayerVirtualWorld(playerid)!=1228)
	    {
		    if(IsACar(carid) && !PlayerInfo[playerid][pCarLic] && CarTest[playerid] == -1) return false;
		    if(IsABike(carid) && !PlayerInfo[playerid][pBikeLic]) return false;
		    if(IsABoat(carid) && !PlayerInfo[playerid][pBoatLic]) return false;
	    }
	    if(Fuel[carid] > 0.0)
	    {
	        if(IsASellCar(carid))return 1;
   			if(!IsAOwnableCar(carid) || CarInfo[GetVehicleID(carid)][cKeyIN])
			{
				new Float:Health;
				GetVehicleHealth(carid, Health);
				if(Health > 1000) Health = 1000.0;
				else if(Health < 400) return SendError(playerid, "Вы не можете завести двигатель. Для его починки вызовите механика");
				if(IsPlayerInVehicle(playerid,carid))
				{
					if(!IsAOwnableCar(carid) || CarInfo[GetVehicleID(carid)][cKeyIN])
					{
						GetVehicleHealth(carid, Health);
						if(Health > 1000.0) Health = 1000.0;
						new hp = 11 - floatround(Health / 100.0);
						new uEngine = random(hp);
						if(uEngine < 4)SetEngineStatus(carid, true, playerid);
						else SendError(playerid, "Двигатель не завёлся");
					}
				}
				engines[playerid]=gettime()+4;
			}
		    else return SendError(playerid,"Ключи не вставлены");
	    }
	    else return SendError(playerid,"Нет топлива");
	}
	else
	{
		new string[70];
		SetEngineStatus(carid,false, playerid);
		format(string,sizeof(string)," %s заглушил(а) двигатель",PlayerName[playerid]);
		ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
cmd:live(playerid, const params[])
{
	if(!IsANews(playerid)) return SendError(playerid, "Вы не репортёр");
	if(PlayerInfo[playerid][pRank]<6)return SendError(playerid,"Отказано в доступе");
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    new carid = GetPlayerVehicleID(playerid);
	if(IsANewsCar(carid) || IsPlayerInRangeOfPoint(playerid,50,23.2580,-20.4954,1231.9240))
	{
	    if(LiveOffer[playerid] != INVALID_PLAYER_ID) return SendError(playerid, "Недоступно в данный момент");
	    new string[150],id;
	    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /live [id/name]");
	    if(!IsPlayerConnected(id) || id == playerid) return SendError(playerid,"Игрок не найден");
        if(IsPlayerInAnyVehicle(playerid) && !IsPlayerInVehicle(id,carid)) return SendError(playerid,"Вы должны быть в одной машине");
		if(PlayerInfo[id][pRedio] != PlayerInfo[playerid][pRedio])return SendError(playerid, "Вы должны быть на одной волне с этим человеком (( /setradio ))");
	    format(string,sizeof(string),"Репортер %s предлагает вам провести с ним беседу в прямом эфире",Name(playerid));
	    ShowPlayerDialogEx(id,146,0,"{43CD80}Беседа",string,"Согласен","Не надо");
		LiveOfferID[id] = playerid;
	}
	else SendError(playerid,"Вы должны находиться в машине радиостудии или в студии новостного агенства (за ресепшеном)");
	return true;
}
cmd:endlive(playerid)
{
	if(!IsANews(playerid)) return SendError(playerid, "Вы не репортёр");
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    if(LiveOffer[playerid] == INVALID_PLAYER_ID) return SendError(playerid,"Недоступно в данный момент");
    new id = LiveOffer[playerid];
    new string[150];
    new getradio[40];
    switch(PlayerInfo[playerid][pMember])
    {
        case TEAM_RADIO: getradio = "LS";
        case TEAM_RADIOSF: getradio = "SF";
        case TEAM_RADIOLV: getradio = "LV";
        default: getradio = "";
    }
    if(!IsPlayerConnected(id) || id == playerid) return SendError(playerid,"Неверный ID");
    TogglePlayerControllable(LiveOfferID[id], true);
    format(string,sizeof(string),"Ведущий %sFM %s закончил беседу с вами",getradio,Name(playerid));
	SendClientMessage(id, COLOR_GRAY, string);
	format(string,sizeof(string),"Вы закончили беседу с %s",Name(id));
	SendClientMessage(playerid, COLOR_GRAY, string);
	LiveOffer[LiveOffer[playerid]] = INVALID_PLAYER_ID;
	LiveOffer[playerid] = INVALID_PLAYER_ID;
	LiveOfferID[playerid] = INVALID_PLAYER_ID;
	LiveOfferID[id] = INVALID_PLAYER_ID;
	return true;
}
cmd:advokats(playerid)
{
	new string[100];
	SendClientMessage(playerid,COLOR_ORANGE,"Адвокаты онлайн:");
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pJob] == 6 && SlotValue[i][19]!=0)
			{
			    format(string,sizeof(string),"Адвокат %s(%d) | Номер телефона: %d",PlayerName[i],i,SlotValue[i][19]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
			}
		}
	}
	return true;
}
stock FindOrgNumbers(playerid,id)
{
    new string[128],num=1;
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == id && SlotValue[i][19]!=0 && TeamDuty[i])
			{
			    format(string,sizeof(string),"{FFFFFF}%d. {C7C4C4}%s %s(%d){FFFFFF} | Номер телефона: {C7C4C4}%d{FFFFFF}",num,GetRankName(GetTeamID(i),PlayerInfo[i][pRank]),PlayerName[i],i,SlotValue[i][19]);
				SendClientMessage(playerid,-1,string);
				num++;
			}
		}
	}
	format(string,sizeof(string),"{FFFFFF}\n\nВсего в онлайне %d человек\n\n",(num-1));
	ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
	return true;
}
stock FindJobNumbers(playerid,id)
{
    new string[100],num=1;
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pJob] == id && SlotValue[i][19]!=0)
			{
			    format(string,sizeof(string),"{FFFFFF}%d. {C7C4C4}%s %s(%d){FFFFFF} | Номер телефона: {C7C4C4}%d.{FFFFFF}",num,GetJobName(id),PlayerName[i],i,SlotValue[i][19]);
				SendClientMessage(playerid,-1,string);
				num++;
			}
		}
	}
	format(string,sizeof(string),"{FFFFFF}\n\nВсего в онлайне %d человек\n\n",(num-1));
	ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
	return true;
}
cmd:prisoners(playerid)
{
	if(PlayerInfo[playerid][pJob]!=JOB_ADVOKAT) return SendError(playerid, "Вы не адвокат");
	new string[100];
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pJailTime] > 0)
			{
				format(string,sizeof(string),"%s(%i) | Время: %d мин | Залог: $%d",Name(i),i,PlayerInfo[i][pJailTime]/60,PlayerInfo[i][pBailPrice]);
				SendClientMessage(playerid,COLOR_GRAY,string);
			}
		}
	}
	return true;
}
cmd:cuff(playerid, const params[])
{
	if(!IsACop(playerid)) return SendClientMessage(playerid,COLOR_RED, "Вы не полицейский!");
	if(!TeamDuty[playerid]) return SendClientMessage(playerid,COLOR_RED,"Вы не на дежурстве");
	new string[200], id;
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте: {7396FB}/cuff [id]");
	if(IsACop(id))return SendError(playerid,"Нельзя надеть наручники на полицейского");
	if(!ProxDetectorS(2.5,playerid,id)) return SendError(playerid, "Вы далеко от игрока");
	if(CuffedTime[id] <= 0 || PlayerSpeed(id)) return SendError(playerid, "Сначала нужно оглушить игрока");
	if(Cuffed[id]) return SendError(playerid, "Игрок уже скован");
	if(PlayerOfCuff[playerid] != INVALID_PLAYER_ID) return SendError(playerid, "Вы уже кого-то сковываете");
	if(PlayerOfCuff[id] != INVALID_PLAYER_ID) return SendError(playerid, "Игрока уже сковывают");
	PlayerOfCuff[playerid] = id;
	PlayerOfCuff[id] = playerid;
	TimeOfCuff[playerid] = 4;
	Recuffer[id]=playerid;
	CuffedTime[id] = 30;
	format(string,sizeof(string)," %s начинает сковывать %s",Name(playerid),Name(id));
	ProxDetector(25,playerid,string,COLOR_PURPLE);
	ApplyAnimation(playerid, "ROB_BANK", "CAT_Safe_Rob", 4.1, 0, 1, 1, 1, 0, 1);
	return true;
}
cmd:uncuff(playerid, const params[])
{
	if(!IsACop(playerid) && PlayerInfo[playerid][pAdmin] < 1) return SendError(playerid, "Вы не полицейский");
	new string[200], id;
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /uncuff [id/name]");
	if(!ProxDetectorS(2.5,playerid,id)) return SendError(playerid, "Вы далеко от игрока");
	if(!Cuffed[id]) return SendError(playerid, "Игрок не скован");
	format(string,sizeof(string)," %s расковал %s",PlayerName[playerid],PlayerName[id]);
	ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	Cuffed[id] = false;
	CuffedTime[id] = 0;
	Recuffer[id]=INVALID_PLAYER_ID;
	TogglePlayerControllable(id,true);
	SetPlayerSpecialAction(id, 0);
	if(GotoInfo[playerid][gtID] == id)
	{
	    CheckPlayerGoCuff(id);
		CheckPlayerGoCuff(playerid);
	}
	return 1;
}
cmd:bot(playerid, const params[])
{
    if(!IsACop(playerid) && !PlayerInfo[playerid][pAdmin]) return SendError(playerid, "Вы не полицейский");
    if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /bot [id/name]");
    if(!ProxDetectorS(1.5,playerid,params[0])) return SendError(playerid, "Вы далеко от игрока");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
	if(pTemp[params[0]][BreakCount]==0) return SendError(playerid,"Этот игрок не пытается взломать наручники");
    CheckBreakCuff(params[0]);
    PlayerInfo[params[0]][pClip]=0;
    SendError(params[0],"У вас отобрали скрепки");
	SendClientMessage(playerid,COLOR_VALIK,"Вы отобрали скрепки");
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
	return 1;
}
cmd:break(playerid)
{
	new string[100];
	if(GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID)return SendError(playerid, "Вы не можете использовать скрепки при конвоя");
	if(PlayerInfo[playerid][pClip] == 0) return SendError(playerid, "У вас нет скрепок");
	if(!Cuffed[playerid]) return SendError(playerid, "Вы не скованы");
    if(CuffedTime[playerid]) return SendError(playerid, "Вы обездвижены");
    CheckBreakCuff(playerid);
    SetPlayerRandomKey(playerid, pTemp[playerid][BreakKey], true);
    ShowPlayerActionBand(playerid, 0, 20);
    format(string,sizeof(string)," %s достал скрепки для взлома наручников",PlayerName[playerid]);
    SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
	return 1;
}
cmd:up(playerid)
{
	for(new i; i < 10; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.2, AlkatrazDrop[i][alX],AlkatrazDrop[i][alY],AlkatrazDrop[i][alZ]) && AlkatrazDrop[i][alCreated] == true)
		{
			switch(AlkatrazDrop[i][alType])
			{
			case 0:PlayerInfo[playerid][pOtvertka]++;
			case 1:SlotValue[playerid][13]++;
			case 2:PlayerInfo[playerid][pGlue]++;
			}
			DestroyDynamicObject(AlkatrazDrop[i][alObj]);
			DestroyDynamic3DTextLabel(AlkatrazDrop[i][alText]);
			AlkatrazDrop[i][alCreated] = false;
			return 1;
		}
	}
	return 1;
}
cmd:jb(playerid)
{
	if(!PlayerInfo[playerid][pJailTime])return SendError(playerid, "Вы не заключённый");
	if(!PlayerInfo[playerid][pOtvertka])return SendError(playerid, "У Вас нет отвёртки или вилки, чтобы взломать замок");
	if(!PlayerInfo[playerid][pGlue])return SendError(playerid, "У Вас нет клея. Вы не сможете починить лестницу, чтобы завершить побег");
	if(PlayerInfo[playerid][pJB])return SendError(playerid, "С момента прошлого побега не прошло 2 часа");
	new Float:temp_y, Chain;
	for(new i; i <= 33; i++)
	{
		if(i == 33)return SendError(playerid, "Вы должны быть возле решётки вентиляции в камере");
		if(IsPlayerInRangeOfPoint(playerid, 2, AlkatrazVent[i][0], AlkatrazVent[i][1], AlkatrazVent[i][2]))
		{
			SetPVarInt(playerid, "JailBreak", 300);
			for(new z; z < sizeof AlkMenu; z++)
				TextDrawShowForPlayer(playerid, AlkMenu[z]);
			ApplyAnimation(playerid,"BOMBER", "BOM_Plant",1.0,1,1,1,1,4000,1);
			PlayerInfo[playerid][pOtvertka]--;
			PlayerInfo[playerid][pChainComplete] = 0;
			for(new m; m <= 6; m++)	
			{
				switch(m)
				{
				case 0: temp_y = 244.408874;
				case 1: temp_y = 257.355438;
				case 2: temp_y = 270.795532;
				case 3: temp_y = 284.240020;
				case 4: temp_y = 297.684478;
				case 5: temp_y = 311.128875;
				case 6: temp_y = 324.573272;
				}
				PlayerTextDrawShow(playerid, AlkTD[playerid][7]);
				rerandom: Chain = random(sizeof ChainPos);
				if(Chain == 1)goto rerandom;
				PlayerInfo[playerid][pChainPos][m] = Chain;
				AlkTD[playerid][m] = CreateChain(playerid, ChainPos[Chain], temp_y, 0x82CFFFFF);
			}
			SelectTextDraw(playerid, 0x0099FFAA);
			SendClientMessage(playerid, COLOR_ORANGE, "Вы начали побег. У Вас есть 5 минут, чтобы покинуть территорию тюрьмы");
			SendClientMessage(playerid, COLOR_ORANGE, "Используйте маску, чтобы оставаться незамеченным");
			return 1;
		}
	}
	return 1;
}
cmd:freeze(playerid,const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2)return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"u",params[0])) return SendInfo(playerid,"Используйте: {7396FB}/freeze [id]");
	if(!IsPlayerConnected(params[0])) return SendError(playerid, "Игрок не найден");
	if(!IsPlayerLogged[params[0]]) return SendError(playerid,"Игрок не авторизован");
	if(!GetPVarInt(playerid,"Freezed"))
	{
		TogglePlayerControllable(params[0],0);
		SetPVarInt(playerid,"Freezed",1);
		new temp[145];
		format(temp, sizeof(temp), "[A] Администратор %s[%d] заморозил %s[%d]",  Name(playerid),playerid,Name(params[0]),params[0]);
		SendAdminsMessage(COLOR_GRAY, temp);
		format(temp, sizeof(temp), "Администратор %s заморозил вас",  Name(playerid));
		SendClientMessage(params[0],0xF36223FF,temp);
		SendClientMessage(playerid,0x56a85eff,"Используйте повторно /freeze, чтобы разморозить");
	}
	else
	{
		TogglePlayerControllable(params[0],1);
		DeletePVar(playerid,"Freezed");
		new temp[145];
		format(temp, sizeof(temp), "[A] Администратор %s[%d] разморозил %s[%d]",  Name(playerid),playerid,Name(params[0]),params[0]);
		SendAdminsMessage(COLOR_GRAY, temp);
		format(temp, sizeof(temp), "Администратор %s разморозил вас",  Name(playerid));
		SendClientMessage(params[0],0xF36223FF,temp);
		ClearAnimations(params[0]);
	}
	return 1;
}
cmd:unwarn(playerid, const params[])
{
    if(PlayerInfo[playerid][pAdmin] < 4) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new name[24],string[200];
	if(sscanf(params,"s[24]",name)) return SendInfo(playerid, "Используйте:{7396FB} /unwarn [name]");
	format(string,sizeof(string),"Администратор %s снял варны у игрока %s",Name(playerid),name);
	SendAdminsMessage(COLOR_LIGHTRED,string,1);
	new id = GetPlayerID(name);
	if(id != INVALID_PLAYER_ID){
		SendClientMessage(id,COLOR_GREEN,"[Информация] {FFFFFF}Администратор снял вам все предупреждения");
		PlayerInfo[id][pWarns] = 0;
	}else{
		format(string, sizeof(string), "UPDATE `accounts` SET `Warns`=0 WHERE BINARY `Name` = '%s'",name);
        mysql_pquery(mysql, string);
	}
	return 1;
}
cmd:clear(playerid, const params[])
{
	if(!IsACop(playerid)) return SendError(playerid,"Вы не полицейский");
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
	new carid = GetPlayerVehicleID(playerid);
    if(!IsACopCar(carid) || carid == 0) return SendError(playerid,"Вы должны находиться в полицейском транспорте");
    if(PlayerInfo[playerid][pRank] < 4) return SendError(playerid,"Ваш ранг недостаточен для этой операции");
    new id, string[100];
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /clear [id/name]");
	if(!IsPlayerConnected(id)) return SendError(playerid, "Неверный ID игрока");
	if(!PlayerInfo[id][pWanted])return SendError(playerid, "Этого игрока нет в базе разыскиваемых");
    PlayerInfo[id][pWanted] = 0;
    SetPlayerWantedLevelEx(id, 0);
    format(string,sizeof(string),"[%s] %s %s[%d] убрал из списка разыскиваемых %s[%i]",OrgInfo[PlayerInfo[playerid][pMember]][oName], GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), Name(playerid), playerid, Name(id), id);
    SendCopsMessage(COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"Полицейский %s убрал вас из списка разыскиваемых",Name(playerid));
    SendClientMessage(id,COLOR_LIGHTBLUE,string);
	return 1;
}
cmd:setskin(playerid, const params[])
{
    if(PlayerInfo[playerid][pAdmin] < 4) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new id,skin,string[150],oll;
    if(sscanf(params,"udd",id,skin,oll)) return SendInfo(playerid, "Используйте:{7396FB} /setskin [id] [0 - 300] [0 - временный / 1 - постоянный]");
    if(oll<0 || oll > 1)return SendInfo(playerid, "Используйте:{7396FB} /setskin [id] [0 - 300] [0 - временный / 1 - постоянный]");
    if(oll==1 && PlayerInfo[playerid][pAdmin]<6) return SendError(playerid, "Ты не можешь выдать вечный скин");
	if(!IsPlayerConnected(id)) return false;
    if(oll==1 && PlayerInfo[playerid][pAdmin]>5) PlayerInfo[id][pSkin]=skin;
    if(skin < 1 || skin > 311 || skin == 74) return false;
	SetPlayerSkinEx(id,skin);
	new tampo[16];
	tampo = (oll == 1) ? "постоянный" : "временный";
	format(string,sizeof(string),"Вы дали %s %s скин #%d",tampo, Name(id),skin);
	SendClientMessage(playerid,-1,string);
	format(string,sizeof(string),"[A] %s[%d] установил %s скин [ID: %d] игроку %s[%d]", Name(playerid),playerid,tampo,skin,Name(id),id);
	SendAdminsMessage(COLOR_GRAY,string,1);
	format(string,sizeof(string),"Администратор %s выдал вам %s скин",PlayerName[playerid], tampo);
	SendClientMessage(id,COLOR_RED,string);
    return true;
}
cmd:givemoney(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new id,money,string[150];
    if(sscanf(params,"ud",id,money)) return SendInfo(playerid, "Используйте:{7396FB} /givemoney [id/name] [money]");
    if(!IsPlayerConnected(id)) return false;
	GiveMoney(id,money,"GiveMoney(adm)");
	format(string,sizeof(string),"Вы дали %s $%d",Name(id),money);
	SendClientMessage(playerid,-1,string);
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),PlayerInfo[params[0]][pID],Name(params[0]),"Выдано администратором",money,PlayerIp[playerid],PlayerIp[params[0]],GetMoney(playerid));
	return true;
}
cmd:ans(playerid)
{
	if(!PlayerInfo[playerid][pAdmin] && !PlayerInfo[playerid][pHelper])return 1;
	new temp[200];
	ReportID[playerid] = -1;
	for(new s = MAX_REPORTS-1; s >= 0 ; s--)
	{
		if(!ReportInfo[s][re_OwnerSQLID]) continue;
		if(!IsPlayerConnected(ReportInfo[s][re_OwnerID]) || PlayerInfo[ReportInfo[s][re_OwnerID]][pID] != ReportInfo[s][re_OwnerSQLID])ClearReport(s);
		else
		{
			format(temp,sizeof temp,"{ffffff}%s[%d]: %s", PlayerName[ReportInfo[s][re_OwnerID]],ReportInfo[s][re_OwnerID],ReportInfo[s][re_Text]);
			ShowPlayerDialogEx(playerid,8020,1,"{43CD80}Сообщение",temp,"Готово","Отмена");
			ReportID[playerid] = s;
			format(temp, sizeof temp, "Администратор {7396FB}%s{ffffff} скоро ответит на Ваш репорт, ожидайте",PlayerName[playerid]);
			SendInfo(ReportInfo[s][re_OwnerID],temp);
			break;
		}
	}
	if(ReportID[playerid] == -1) return SendError(playerid, "Очередь на сообщения пуста");
	return 1;
}
cmd:pm(playerid,const params[])
{
	if(!PlayerInfo[playerid][pAdmin] && !PlayerInfo[playerid][pHelper]) return 1;
	new ktext[128];
	if(sscanf(params,"us[84]",params[0],ktext)) return SendInfo(playerid,"Используйте: {7396FB}/pm [id] [текст]");
	if(!IsPlayerConnected(params[0])) return SendError(playerid, "Игрок не найден");
	new temp[145];
	new otvetil[16];
	if(PlayerInfo[playerid][pAdmin])SetString(otvetil, "Администратор");
	else SetString(otvetil, "Хелпер");
	format(temp, sizeof(temp), "[A] %s %s[%d] для %s[%d]: {ffffff}%s", otvetil, PlayerName[playerid],playerid,PlayerName[params[0]],params[0],ktext);
	AdminChat(COLOR_ORANGE, temp);
	format(temp, sizeof(temp), "[A] %s %s: {ffffff}%s", otvetil, PlayerName[playerid],ktext);
	if(!PlayerInfo[params[0]][pAdmin])SendClientMessage(params[0], COLOR_ORANGE, temp);
	PlayerPlaySound(params[0], 5205, 0.0, 0.0, 0.0);
	for(new s; s < MAX_REPORTS; s++)
	{
		if(ReportInfo[s][re_OwnerSQLID] != PlayerInfo[params[0]][pID]) continue;
		ClearReport(s);
		break;
	}
	return 1;
}
cmd:id(playerid, const params[])
{
    if(!IsPlayerLogged[playerid]) return false;
    new id,string[256];
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /id [id/name]");
    if(!IsPlayerConnected(id)) return SendError(playerid,"Неверный ID");
    format(string,sizeof(string),"{FFFFFF}ID: {33CCFF}%d{FFFFFF} | Имя: {33CCFF}%s",id,Name(id));
    if(!ShowPlayerDialogEx(playerid,INVALID_DIALOG_ID,0,Name(id),string, "Скрыть",""))SendError(playerid, "Недоступно в данный момент");
    return true;
}
cmd:admins(playerid)
{
 	if(!PlayerInfo[playerid][pAdmin] && !PlayerInfo[playerid][pHelper]) return false;
	new str[256];
	new string[1026];
	new admrank[32];
	strcat(string, "Никнейм\tУровень\tСтатус");
	foreach(new i:Admins)
	{
		if(!IsPlayerConnected(i)) continue;
		if((!PlayerInfo[i][pAdmin] && !PlayerInfo[i][pHelper]) || PlayerInfo[i][pAdmin] > 6) continue;
		switch(PlayerInfo[i][pAdmin])
		{
			case 0: admrank = "Хелпер";
			case ADM_MODER: admrank = "1 уровень";
			case ADM_SUPER_MODER: admrank = "2 уровень";
			case ADM_ADMIN: admrank = "3 уровень";
			case ADM_SUPER_ADMIN: admrank = "4 уровень";
			case ADM_GRAND_ADMIN: admrank = "5 уровень";
			case 6: admrank = "6 уровень";
		}
		if(PlayerAFKTime[i][0] > 5)format(str,sizeof(str),"\n%s[%d]\t{C9EAFF}%s\t{D94141}[AFK: %d]",Name(i),i,admrank,PlayerAFKTime[i][0]);
		else if(ADuty[i] != 228 && !PlayerInfo[i][pHelper])format(str,sizeof(str),"\n%s[%d]\t{C9EAFF}%s\t{ACACAC}[Не авторизован]",Name(i),i,admrank);
		else if(SpecAd[i] != 65535)format(str,sizeof(str),"\n%s[%d]\t{C9EAFF}%s\t{FFCB8C}[/spec %d]",Name(i),i,admrank,SpecAd[i]);
		else format(str,sizeof(str),"\n%s[%d]\t{C9EAFF}%s\t{56A85E}[В игре]",Name(i),i,admrank);
		strcat(string,str);
	}
	ShowPlayerDialogEx(playerid, 0, 5, "Администрация онлайн", string, "Скрыть", "");
	return 1;
}
cmd:leaders(playerid,const params[])
{
	new string[2048],dirit[32];
	strcat(string,"Никнейм\tОрганизация\tТелефон\n");
	foreach(new i:Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(PlayerInfo[i][pLeader] == 0) continue;
		CMDstr = "";
		if(SlotValue[i][19]==0 || SlotValue[i][19]==1) dirit ="Отсутствует";
		else format(dirit,sizeof(dirit),"%d",SlotValue[i][19]);
		format(CMDstr,144,"%s[%d]\t%s\t%s\n",Name(i),i,OrgInfo[PlayerInfo[i][pLeader]][oName],dirit);
		strcat(string,CMDstr);
	}
	ShowPlayerDialogEx(playerid, 0, 5, "{43CD80}Список лидеров в сети", string, "Скрыть", "");
	return 1;
}
cmd:help(playerid)
{
	return ShowHelpDialog(playerid);
}
cmd:settings(playerid)
{
	ShowUpdateSettings(playerid);
}
cmd:stats(playerid)
{
	return ShowStats(playerid,playerid);
}
cmd:menu(playerid)
{
    if(Clother[playerid] != -1 || BuyInt[playerid] != -1  || BuyGuns[playerid] != -1 || Buyitem[playerid]!=-1) return false;
	if(CuffedTime[playerid] > 0) return SendError(playerid,"Вы обездвижены и не можете двигаться");
	if(Cuffed[playerid]) return SendError(playerid,"Вы скованы и не можете двигаться");
	if(!IsPlayerLogged[playerid]) return false;
	ShowMenu(playerid);
	return true;
}
stock ShowMenu(playerid) return ShowPlayerDialogEx(playerid, 722, 2, "{43CD80}Игровое меню", "\
	{7396FB}[1] {C9EAFF}Статистика персонажа\n\
	{7396FB}[2] {FFFFFF}Действия\n\
	{7396FB}[3] {FFFFFF}Обращение к администрации\n\
	{7396FB}[4] {FFFFFF}Игровая справка\n\
	{7396FB}[5] {FFFFFF}Параметры персонажа\n\
	{7396FB}[6] {FFFFFF}Лидерское меню\n\
	{7396FB}[7] {43CD80}Донат\n\
	{7396FB}[8] {7396FB}Использовать телефон\n\
	{7396FB}[9] {FF4400}Акции\n\
	{7396FB}[10] {FFCB8C}Квесты", "Выбор", "Отмена");
cmd:jobhelp(playerid)
{
    if(!IsPlayerLogged[playerid]) return false;
	ShowJobInfo(playerid, PlayerInfo[playerid][pJob]);
	return true;
}
cmd:quitjob(playerid)
{
    if(!IsPlayerLogged[playerid]) return false;
	if(PlayerInfo[playerid][pJob] == JOB_NONE) return SendError(playerid, "Вы и так уже безработный");
    else if(InJob[playerid] != 0) return SendError(playerid, "В данный момент вы работаете. Закончите работу и введите '/quitjob'");
    PlayerInfo[playerid][pJob] = JOB_NONE;
    SendClientMessage(playerid, COLOR_GREEN, "[Информация] {FFFFFF}Вы уволились с работы");
    _ResetGun(playerid);
    J_SetPlayerArmour(playerid,0);
    ResetDynamicCPs(playerid);
	return true;
}
cmd:unmute(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /unmute [id]");
	if(params[0]==playerid)return false;
	if(PlayerInfo[params[0]][pMuteTime]==0)return SendError(playerid, "У игрока нет мута");
	format(CMDstr,144," Администратор %s снял заглушку с игрока %s",Name(playerid),Name(params[0]));
	AsendClientMessageToAll(COLOR_LIGHTRED,CMDstr);
	PlayerInfo[params[0]][pMuteTime] = 0;
	return true;
}
cmd:getcar(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new
		id,
		string[150],
		Float:X,
		Float:Z,
		Float:Y;
    if(sscanf(params,"d",id)) return SendInfo(playerid, "Используйте:{7396FB} /getcar [id]");
    if(!IsAOwnableCar(id)) return SendError(playerid, "Такие авто нельзя телепортировать");
    GetPlayerPos(playerid,X,Y,Z);
    SetVehicleVirtualWorld(id,GetPlayerVirtualWorld(playerid));
    J_SetVehiclePos(id, X-4, Y, Z+1);
    format(string,sizeof(string),"Вы телепортировали к себе авто, id: %d",id);
    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"[%s] Телепортировал к себе авто, id: %d",Name(playerid),id);
	SendAdminsMessage(COLOR_GRAY,string);
	return true;
}
cmd:gethere(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new
		id,
		string[150],
		Float:X,
		Float:Z,
		Float:Y,
		Float:A;
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /gethere [id]");
    if(!IsPlayerConnected(id) || !IsPlayerLogged[id]) return SendError(playerid, "Игрок не авторизован");
	if(PlayerAFKTime[id][0]>0)return SendError(playerid,"Игрок на паузе");
    GetPlayerPos(playerid,X,Y,Z);
    GetPlayerFacingAngle(playerid, A);
    ShiftCords(0, X, Y, A, 1.0);
    SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
    SetPlayerInterior(id,GetPlayerInterior(playerid));
    if(GetPlayerState(id) != 2) J_SetPlayerPos(id, X, Y, Z);
    else J_SetVehiclePos(GetPlayerVehicleID(id), X, Y, Z);
    BizEntered[id] = BizEntered[playerid];
    HouseEntered[id] = HouseEntered[playerid];
    format(string,sizeof(string),"Вы были телепортированы администратором  %s",Name(playerid));
    SendClientMessage(id,COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"Вы телепортировали к себе игрока %s",Name(id));
    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"[A] %s[%d] телепортировал к себе игрока %s[%d]",Name(playerid),playerid,Name(id),id);
	SendAdminsMessage(COLOR_GRAY,string);
	return true;
}
cmd:getwarn(playerid, const params[])
{
	new string[300];
	if(PlayerInfo[playerid][pAdmin]<1)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /getwarn [id]");
    format(string,sizeof(string),"\
	{FF4400}%s[%d]{FFFFFF}\n\n\
	Тюрьма: %s\n\
	Деморган: %s\n\
	Заглушка: %s\n\
	Варны: %d",Name(params[0]),params[0],Convert(PlayerInfo[params[0]][pJailTime]),Convert(PlayerInfo[params[0]][pView]),Convert(PlayerInfo[params[0]][pMuteTime]),PlayerInfo[params[0]][pWarns]);
    ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Скрыть", "");
	return true;
}
cmd:getskills(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin]<2)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /getskills [id]");
	if(!IsPlayerConnected(params[0]) || !IsPlayerLogged[params[0]]) return SendError(playerid, "Игрок не авторизован");
	ShowSkills(playerid, params[0]);
	return 1;
}
cmd:spcar(playerid, const params[])
{
	new string[90];
    if(PlayerInfo[playerid][pAdmin]<2)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /spcar [id]");
	format(string,sizeof(string),"[A] %s[%d] зареспавнил авто под id: %d",PlayerName[playerid],playerid,params[0]);
	SendAdminsMessage(COLOR_GRAY,string);
	SetVehicleToRespawn(params[0]);
	return true;
}
cmd:rasform(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin]<5)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /rasform [id банды]");
	if(params[0] != TEAM_GROOVE && params[0] != TEAM_VAGOS
	&& params[0] != TEAM_BALLAS && params[0] != TEAM_CORONOS 
	&& params[0] != TEAM_RIFA)
	{
		SendInfo(playerid,"12 - Грув | 13 - Вагос | 14 - Баллас | 15 - Ацтек | 16 - Рифа");
		return SendInfo(playerid, "Используйте:{7396FB} /rasform [id банды]");
	}
    for(new i = 1;i < GANGZONES;i ++)
    {
		if(GZInfo[i][gzFracID] != params[0])continue;
        GZInfo[i][gzFracID] = 0;
        GangZoneHideForAll(GangZone[i]);
	    GangZoneShowForAll(GangZone[i],TeamColors[0]);
	    SaveGangZone(i);
    }
	UpdateDorm(params[0]);
    SendTeamMessage(playerid,COLOR_VALIK,"Вы перекрасили все территории");
   	return true;
}
////////////
cmd:buydrugs(playerid, const params[])
{
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /buydrugs [количество]");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    if(params[0]<1)return 1;
    new str[450];
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
            if(GLS[45]<params[0])return SendBotMessage(playerid,"Брат, сорян но у меня уже нет товара");
            if(SlotValue[playerid][0]<(GLS[50]*params[0]))return SendBotMessage(playerid,"Брат, у тебя же нет денег чтобы мне заплатить");
            GiveMoney(playerid,-(GLS[50]*params[0]));
            GLS[45]-=params[0];
            GLS[60]+=GLS[50]*params[0];
            SlotValue[playerid][14]+=params[0];
            SendBotMessage(playerid,"Вот, держи свою траву");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[45],GLS[60],GLS[55],GLS[50]);
            UpdateDynamic3DTextLabelText(NarkoText[0], COLOR_WHITE, str);
        }
        case 2:
        {
            if(GLS[46]<params[0])return SendBotMessage(playerid,"Брат, сорян но у меня уже нет товара");
            if(SlotValue[playerid][0]<(GLS[51]*params[0]))return SendBotMessage(playerid,"Брат, у тебя же нет денег чтобы мне заплатить");
            GiveMoney(playerid,-(GLS[51]*params[0]));
            GLS[46]-=params[0];
            GLS[61]+=GLS[51]*params[0];
            SlotValue[playerid][14]+=params[0];
            SendBotMessage(playerid,"Вот, держи свою траву");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[46],GLS[61],GLS[56],GLS[51]);
            UpdateDynamic3DTextLabelText(NarkoText[1], COLOR_WHITE, str);
        }
        case 3:
        {
            if(GLS[47]<params[0])return SendBotMessage(playerid,"Брат, сорян но у меня уже нет товара");
            if(SlotValue[playerid][0]<(GLS[52]*params[0]))return SendBotMessage(playerid,"Брат, у тебя же нет денег чтобы мне заплатить");
            GiveMoney(playerid,-(GLS[52]*params[0]));
            GLS[47]-=params[0];
            GLS[62]+=GLS[52]*params[0];
            SlotValue[playerid][14]+=params[0];
            SendBotMessage(playerid,"Вот, держи свою траву");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[47],GLS[62],GLS[57],GLS[52]);
            UpdateDynamic3DTextLabelText(NarkoText[2], COLOR_WHITE, str);
        }
        case 4:
        {
            if(GLS[48]<params[0])return SendBotMessage(playerid,"Брат, сорян но у меня уже нет товара");
            if(SlotValue[playerid][0]<(GLS[53]*params[0]))return SendBotMessage(playerid,"Брат, у тебя же нет денег чтобы мне заплатить");
            GiveMoney(playerid,-(GLS[53]*params[0]));
            GLS[48]-=params[0];
            GLS[63]+=GLS[53]*params[0];
            SlotValue[playerid][14]+=params[0];
            SendBotMessage(playerid,"Вот, держи свою траву");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[48],GLS[63],GLS[58],GLS[53]);
            UpdateDynamic3DTextLabelText(NarkoText[3], COLOR_WHITE, str);
        }
        case 5:
        {
            if(GLS[49]<params[0])return SendBotMessage(playerid,"Брат, сорян но у меня уже нет товара");
            if(SlotValue[playerid][0]<(GLS[54]*params[0]))return SendBotMessage(playerid,"Брат, у тебя же нет денег чтобы мне заплатить");
            GiveMoney(playerid,-(GLS[54]*params[0]));
            GLS[49]-=params[0];
            GLS[64]+=GLS[54]*params[0];
            SlotValue[playerid][14]+=params[0];
            SendBotMessage(playerid,"Вот, держи свою траву");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[49],GLS[64],GLS[59],GLS[54]);
            UpdateDynamic3DTextLabelText(NarkoText[4], COLOR_WHITE, str);
        }
        default: return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    }
	return true;
}
cmd:selldrugs(playerid, const params[])
{
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /selldrugs [количество]");
    if(SlotValue[playerid][14]<params[0]) return SendBotMessage(playerid,"Брат, ну у тебя же нет столько товара на продажу");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    if(params[0]<1)return 1;
    new str[450];
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
            if(GLS[60]<(params[0]*GLS[55])) return SendBotMessage(playerid,"Брат, сорян но у меня нет денег чтобы тебе заплатить");
            GiveMoney(playerid,(GLS[55]*params[0]));
            GLS[60]-=(GLS[55]*params[0]);
            GLS[45]+=params[0];
            SlotValue[playerid][14]-=params[0];
            SendBotMessage(playerid,"Вот, держи свои деньги");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[45],GLS[60],GLS[55],GLS[50]);
            UpdateDynamic3DTextLabelText(NarkoText[0], COLOR_WHITE, str);
        }
        case 2:
        {
            if(GLS[61]<(params[0]*GLS[56])) return SendBotMessage(playerid,"Брат, сорян но у меня нет денег чтобы тебе заплатить");
            GiveMoney(playerid,(GLS[56]*params[0]));
            GLS[61]-=(GLS[56]*params[0]);
            GLS[46]+=params[0];
            SlotValue[playerid][14]-=params[0];
           	SendBotMessage(playerid,"Вот, держи свои деньги");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[46],GLS[61],GLS[56],GLS[51]);
            UpdateDynamic3DTextLabelText(NarkoText[1], COLOR_WHITE, str);
        }
        case 3:
        {
            if(GLS[62]<(params[0]*GLS[57])) return SendBotMessage(playerid,"Брат, сорян но у меня нет денег чтобы тебе заплатить");
            GiveMoney(playerid,(GLS[57]*params[0]));
            GLS[62]-=(GLS[57]*params[0]);
            GLS[47]+=params[0];
            SlotValue[playerid][14]-=params[0];
            SendBotMessage(playerid,"Вот, держи свои деньги");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[47],GLS[62],GLS[57],GLS[52]);
            UpdateDynamic3DTextLabelText(NarkoText[2], COLOR_WHITE, str);
        }
        case 4:
        {
            if(GLS[63]<(params[0]*GLS[58])) return SendBotMessage(playerid,"Брат, сорян но у меня нет денег чтобы тебе заплатить");
            GiveMoney(playerid,(GLS[58]*params[0]));
            GLS[63]-=(GLS[58]*params[0]);
            GLS[48]+=params[0];
            SlotValue[playerid][14]-=params[0];
            SendBotMessage(playerid,"Вот, держи свои деньги");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[48],GLS[63],GLS[58],GLS[53]);
            UpdateDynamic3DTextLabelText(NarkoText[3], COLOR_WHITE, str);
        }
        case 5:
        {
            if(GLS[64]<(params[0]*GLS[59])) return SendBotMessage(playerid,"Брат, сорян но у меня нет денег чтобы тебе заплатить");
            GiveMoney(playerid,(GLS[59]*params[0]));
            GLS[64]-=(GLS[59]*params[0]);
            GLS[49]+=params[0];
            SlotValue[playerid][14]-=params[0];
            SendBotMessage(playerid,"Вот, держи свои деньги");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[49],GLS[64],GLS[59],GLS[54]);
            UpdateDynamic3DTextLabelText(NarkoText[4], COLOR_WHITE, str);
        }
        default: return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    }
	return true;
}

cmd:putmoney(playerid, const params[])
{
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /putmoney [количество]");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    if(CanUse[playerid]==0)return SendError(playerid,"Вы не имеете возможности управлять этим наркопритоном");
    if(SlotValue[playerid][0]<params[0]) return SendBotMessage(playerid,"Брат, как ты мне можешь дать столько денег, если у тебя их нет?");
    if(params[0]<1)return 1;
	if(params[0]>5000000) return SendError(playerid,"Вы не можете за раз положить столько денег");
    if(PlayerInfo[playerid][pRank]<9)return 1;
    new str[450];
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
			GiveMoney(playerid,-params[0]);
			SendBotMessage(playerid,"Воу, норм теперь мы сможем скупать траву");
			GLS[60]+=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[45],GLS[60],GLS[55],GLS[50]);
            UpdateDynamic3DTextLabelText(NarkoText[0], COLOR_WHITE, str);
        }
        case 2:
        {
            GiveMoney(playerid,-params[0]);
            SendBotMessage(playerid,"Воу, норм теперь мы сможем скупать траву");
            GLS[61]+=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[46],GLS[61],GLS[56],GLS[51]);
            UpdateDynamic3DTextLabelText(NarkoText[1], COLOR_WHITE, str);
        }
        case 3:
        {
            GiveMoney(playerid,-params[0]);
            SendBotMessage(playerid,"Воу, норм теперь мы сможем скупать траву");
            GLS[62]+=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[47],GLS[62],GLS[57],GLS[52]);
            UpdateDynamic3DTextLabelText(NarkoText[2], COLOR_WHITE, str);
        }
        case 4:
        {
            GiveMoney(playerid,-params[0]);
            SendBotMessage(playerid,"Воу, норм теперь мы сможем скупать траву");
            GLS[63]+=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[48],GLS[63],GLS[58],GLS[53]);
            UpdateDynamic3DTextLabelText(NarkoText[3], COLOR_WHITE, str);
        }
        case 5:
        {
            GiveMoney(playerid,-params[0]);
            SendBotMessage(playerid,"Воу, норм теперь мы сможем скупать траву");
            GLS[64]+=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[49],GLS[64],GLS[59],GLS[54]);
            UpdateDynamic3DTextLabelText(NarkoText[4], COLOR_WHITE, str);
        }
        default: return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    }
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Положил на баланс наркопритона",-params[0],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
	return true;
}
cmd:setdbuy(playerid, const params[])
{
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /setdbuy [Стоимость продажи наркотиков]");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    if(CanUse[playerid]==0)return SendError(playerid,"Вы не имеете возможности управлять этим наркопритоном");
    if(params[0]<1)return 1;
    if(params[0]>5000)return SendError(playerid,"Вы не можете установить такую цену");
    if(PlayerInfo[playerid][pRank]<9)return 1;
    new str[450];
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
			SendBotMessage(playerid,"Окей, теперь наркопритон будет скупать траву по такой цене");
			GLS[50]=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[45],GLS[60],GLS[55],GLS[50]);
            UpdateDynamic3DTextLabelText(NarkoText[0], COLOR_WHITE, str);
        }
        case 2:
        {
            SendBotMessage(playerid,"Окей, теперь наркопритон будет скупать траву по такой цене");
            GLS[51]=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[46],GLS[61],GLS[56],GLS[51]);
            UpdateDynamic3DTextLabelText(NarkoText[1], COLOR_WHITE, str);
        }
        case 3:
        {
            SendBotMessage(playerid,"Окей, теперь наркопритон будет скупать траву по такой цене");
            GLS[52]=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[47],GLS[62],GLS[57],GLS[52]);
            UpdateDynamic3DTextLabelText(NarkoText[2], COLOR_WHITE, str);
        }
        case 4:
        {
            SendBotMessage(playerid,"Окей, теперь наркопритон будет скупать траву по такой цене");
            GLS[53]=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[48],GLS[63],GLS[58],GLS[53]);
            UpdateDynamic3DTextLabelText(NarkoText[3], COLOR_WHITE, str);
        }
        case 5:
        {
           	SendBotMessage(playerid,"Окей, теперь наркопритон будет скупать траву по такой цене");
            GLS[54]=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[49],GLS[64],GLS[59],GLS[54]);
            UpdateDynamic3DTextLabelText(NarkoText[4], COLOR_WHITE, str);
        }
        default: return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    }
	return true;
}

cmd:setdsell(playerid, const params[])
{
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /setdsell [Стоимость скупки наркотиков]");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    if(CanUse[playerid]==0)return SendError(playerid,"Вы не имеете возможности управлять этим наркопритоном");
    if(params[0]<1)return 1;
    if(params[0]>5000)return SendError(playerid,"Вы не можете установить такую цену");
    if(PlayerInfo[playerid][pRank]<9)return 1;
    new str[450];
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
			SendBotMessage(playerid,"Окей, будем продавать траву по такой цене");
			GLS[55]=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[45],GLS[60],GLS[55],GLS[50]);
            UpdateDynamic3DTextLabelText(NarkoText[0], COLOR_WHITE, str);
        }
        case 2:
        {
            SendBotMessage(playerid,"Окей, будем продавать траву по такой цене");
            GLS[56]=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[46],GLS[61],GLS[56],GLS[51]);
            UpdateDynamic3DTextLabelText(NarkoText[1], COLOR_WHITE, str);
        }
        case 3:
        {
            SendBotMessage(playerid,"Окей, будем продавать траву по такой цене");
            GLS[57]=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[47],GLS[62],GLS[57],GLS[52]);
            UpdateDynamic3DTextLabelText(NarkoText[2], COLOR_WHITE, str);
        }
        case 4:
        {
            SendBotMessage(playerid,"Окей, будем продавать траву по такой цене");
            GLS[58]=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[48],GLS[63],GLS[58],GLS[53]);
            UpdateDynamic3DTextLabelText(NarkoText[3], COLOR_WHITE, str);
        }
        case 5:
        {
           	SendBotMessage(playerid,"Окей, будем продавать траву по такой цене");
            GLS[59]=params[0];
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[49],GLS[64],GLS[59],GLS[54]);
            UpdateDynamic3DTextLabelText(NarkoText[4], COLOR_WHITE, str);
        }
        default: return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    }
	return true;
}
cmd:gm(playerid,const params[])
{
	if(!PlayerInfo[playerid][pAdmin]) return 1;
	if(sscanf(params,"u",params[0])) return SendInfo(playerid,"Используйте: {7396FB}/gm [id]");
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(!IsPlayerConnected(params[0])) return SendError(playerid,"Неверный ID");
	if(PlayerAFKTime[playerid][0] > 10) return SendError(playerid, "Игрок на паузе");
	if(GetPlayerState(params[0]) != 2)
	{
		new Float: velocity[3];
		GetPlayerVelocity(params[0], velocity[0], velocity[1], velocity[2]);
		if(velocity[2] != 0.0) return SendError(playerid, "Этот игрок прыгает или падает");
		new Float:pos[3], Float: armour, Float:Health__GodMode;
		GetPlayerArmour(params[0], armour);
		SetPlayerArmour(params[0], 0);
		GetPlayerHealth(params[0], Health__GodMode);
		GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
		CreateExplosionForPlayer(params[0],pos[0], pos[1], pos[2] - 2.8, 12, 0.5);
		SetTimerEx("GodModeTest", 200, false, "ddff", params[0], playerid, Health__GodMode, armour);
	}
	else
	{
		if(GetPVarInt(params[0],"GMFREEZE")==1)return SendError(playerid,"Игрока уже проверяют");
		new Float:pos[4], Float:Health__GodMode;
		GetVehiclePos(GetPlayerVehicleID(params[0]), pos[0], pos[1], pos[2]);
		GetVehicleZAngle(GetPlayerVehicleID(params[0]), pos[3]);
		pos[0] += (15.0 * floatsin(-pos[3], degrees));
		pos[1] += (15.0 * floatcos(-pos[3], degrees));
		GetVehicleHealth(GetPlayerVehicleID(params[0]), Health__GodMode);
		GMTEST[params[0]]=CreateDynamicObject(19442,pos[0],pos[1],pos[2]+1.0,0,0,pos[3]+90);
		SetTimerEx("GodModeTest", 1000, false, "ddff", params[0], playerid, Health__GodMode,0);
		SetPVarInt(params[0],"GMFREEZE",1);
	}	
	new query[80];
	format(query, sizeof(query), "[A] %s[%i] произвел ГМ-проверку %s[%i]", Name(playerid),playerid, Name(params[0]), params[0]);
	SendAdminsMessage(COLOR_GRAY, query, 1);
	return 1;
}
forward GodModeTest(playerid, showid, Float: starthealth, Float: startarmour);
public GodModeTest(playerid, showid, Float: starthealth, Float: startarmour)
{
	new Float: currenthealth, Float: diff, query[200],ames[128];
	if(GetPlayerState(playerid) != 2)GetPlayerHealth(playerid, currenthealth),diff = starthealth - currenthealth;
	if(GetPlayerState(playerid) == 2)GetVehicleHealth(GetPlayerVehicleID(playerid), currenthealth),diff = starthealth - currenthealth;
	format(query, sizeof(query),
	"{00FFFF}Пинг: %d\n\
		{B4B5B7}HP до проверки: {FF6600}%.0f%%\n\
		{B4B5B7}HP после проверки: {FF6600}%.0f%%\n\n\
		{B4B5B7}Разница: {FF6600}%.0f%%\n",GetPlayerPing(playerid),starthealth,currenthealth,diff);
	if(diff > 0.0) strcat(query, "{00CC00}GodMode не используется");
	else
	{
		strcat(query, "{FF0000}GodMode возможно используется");
		format(ames,sizeof ames,"[A] Возможно %s[%d] использует GM. /spec %d для проверки", Name(playerid),playerid,playerid);
		SendAdminsMessage(COLOR_RED,ames,1);
	}
	ShowPlayerDialogEx(showid, 0, DIALOG_STYLE_MSGBOX, "{43CD80}Тест на GM", query, "Скрыть", "");
	DestroyDynamicObject(GMTEST[playerid]);
	SetPVarInt(playerid,"GMFREEZE",0);
	if(GetPlayerState(playerid) != 2)SetPlayerArmour(playerid, startarmour),SetPlayerHealth(playerid, starthealth);
	if(GetPlayerState(playerid) == 2)SetVehicleHealth(GetPlayerVehicleID(playerid), starthealth);
}
cmd:weapcheck(playerid,const params[])
{
    if(!PlayerInfo[playerid][pAdmin]) return false;
    new id;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /weapcheck [id]");
	new string[400];
	format(string,sizeof(string),"На данный момент у игрока имеется данный вид оружия, которое он получил без помощи читов:\n\n");
    for(new i; i<13; i++)
	{
	    if(PlayerInfo[id][pGuns][i]>0 && PlayerInfo[id][pAmmos][i]>0) format(string,sizeof(string),"%s\nID оружия/материалы - %d[%d]",string,PlayerInfo[id][pGuns][i],PlayerInfo[id][pAmmos][i]);
	}
	ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация",string,"Принять","");
	return 1;
}
cmd:dropgun(playerid)
{
    if(IsPlayerInAnyVehicle(playerid)) return false;
	new weapon = GetPlayerWeapon(playerid);
	new ammo = GetPlayerAmmo(playerid);
	new slot = GetWeaponSlot(weapon);
	if(ammo<1)return false;
	if(weapon < 1) return SendError(playerid, "У тебя в руках нет оружия");
	if(PlayerInfo[playerid][pGuns][GetWeaponSlot(weapon)] != weapon)return false;
	if(PlayerInfo[playerid][pAmmos][slot]!=GetPlayerAmmo(playerid))return false;
	if(PlayerInfo[playerid][oInTir]==1) return false;
    new Float:x, Float:y, Float:z,Float:eagle;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFAngle(playerid,eagle);
	new idgun;
	switch(weapon)
    {
        case 17:idgun=343;
		case 22:idgun=346;
		case 23:idgun=347;
		case 24:idgun=348;
		case 25:idgun=349;
		case 28:idgun=352;
		case 29:idgun=353;
		case 30:idgun=355;
		case 31:idgun=356;
		case 32:idgun=372;
		case 33:idgun=357;
		case 34:idgun=358;
		case 42:idgun=366;
		case 43:idgun=367;
		default: return SendError(playerid,"Это оружие нельзя выкинуть");
    }
	new idobject=-1;
    for(new i;i<MAX_DGUNS;i++)
    {
        if(dguns[i]==-1)
		{
 			idobject=i;
	 		break;
		}
    }
    if(idobject==-1)
    {
        new min1=gettime();
        for(new i;i<MAX_DGUNS;i++)
        {
            if(dguntime[i]<min1)
            {
                min1=dguntime[i];
                idobject=i;
            }
        }
        DestroyDynamicObject(dguns[idobject]);
    }
    dguntime[idobject]=gettime();
    dpatrons[idobject]=ammo;
    dgunn[idobject]=weapon;
    dguns[idobject] = CreateDynamicObject(idgun, x, y, z-0.97, 96, 110, eagle, GetPlayerVirtualWorld(playerid));
	_SetGun(playerid,weapon,-ammo);
	PlayerInfo[playerid][pGuns][slot] = 0;
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
	SendError(playerid,"Вы положили оружие на землю");
	PlayerInfo[playerid][pLastGun]=0;
	PlayerInfo[playerid][pLastAmmo]=0;
    return 1;
}
cmd:drug(playerid)
{
	if(GetPlayerWeapon(playerid)!=6)return SendError(playerid, "Вам нужна лопата, чтобы посадить коноплю. Купить её можно в магазине механики");
    if(!IsAtGang(playerid)) return SendError(playerid, "Садить коноплю могут только члены банд");
    if(!IsPlayerToKvadrat(playerid,2163.3979,-1697.2588,  2166.3228,-1687.7272) && !IsPlayerToKvadrat(playerid,2165.2397,-1510.9233,  2171.0142,-1504.9988) &&
    !IsPlayerToKvadrat(playerid,1790.4725,-2014.1749,  1799.6927,-2004.0822) && !IsPlayerToKvadrat(playerid,1790.5725,-1989.2954,  1799.8381,-1978.8665) &&
    !IsPlayerToKvadrat(playerid,2306.3516,-2008.3705,  2320.1846,-2005.4993) && !IsPlayerToKvadrat(playerid,2351.5613,-1926.0016,  2360.9636,-1915.7379) &&
    !IsPlayerToKvadrat(playerid,2351.4980,-1904.1448,  2360.9351,-1893.7114)) return SendError(playerid, "Посадить семена можно только на огороде возле наркопритона");
	///////////////
	if(IsPlayerInAnyVehicle(playerid)) return false;
	if(PlayerInfo[playerid][pD_Packets]<1)return SendError(playerid,"Для того, чтобы посадить коноплю, необходимо иметь семя, которые можно найти в лесу за городом");
	new zone = GetPlayerGangZone(playerid),num=0;
	if(GZInfo[zone][gzFracID] != PlayerInfo[playerid][pMember]) return SendError(playerid, "Посадить коноплю можно только в своем наркопритоне");
	//////////
	new Float:x, Float:y, Float:z,Float:eagle,string[300];
	for(new i;i<MAX_NARKO;i++)
	{
	    if(ddrugs[i]!=-1)
	    {
	        GetDynamicObjectPos(ddrugs[i],x,y,z);
			if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) return SendError(playerid,"Вы не можете здесь посадить коноплю, так как рядом есть уже саженец/конопля");
			if(IsPlayerInRangeOfPoint(playerid,20,x,y,z)) num++;
		}
	}
	if(num>4)return SendError(playerid,"На этом огороде растет больше 5-ти саженцев! Соберите урожай или сажайте на другом огороде");
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFAngle(playerid,eagle);
	new idgun = 859;
	new idobject=-1;
    for(new i;i<MAX_NARKO;i++)
    {
        if(ddrugs[i]==-1)
		{
 			idobject=i;
	 		break;
		}
    }
    if(idobject==-1)
    {
        new min1=gettime();
        for(new i;i<MAX_NARKO;i++)
        {
            if(ddrugtime[i]<min1)
            {
                min1=ddrugtime[i];
                idobject=i;
            }
        }
        DestroyDynamicObject(ddrugs[idobject]);
    }
    ddrugtime[idobject]=gettime();
   	ddTimer[idobject] = 600;//изменить
    ddrugs[idobject] = CreateDynamicObject(idgun, x,y,z-1.0,0, 0, eagle);
    f(string, "Саженец конопли\nВ процессе созревания. Осталось: {FAAC58}%d{FFFFFF} минут(ы)",floatround(float(ddTimer[idobject])/60.0));
	ddText[idobject] = CreateDynamic3DTextLabel(string,-1,x, y, z,4.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0);
	PlayerInfo[playerid][pD_Packets]--;
 	ApplyAnimation(playerid,"CHAINSAW","CSAW_G",4.0,0,0,0,0,0,1);
 	GameTextForPlayer(playerid, "planted", 0, 1);
	//////////
	return 1;
}
cmd:getmoney(playerid, const params[])
{
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /getmoney [количество]");
    if(!IsPlayerInRangeOfPoint(playerid,10,331.9075,1119.5465,1083.8903)) return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    if(CanUse[playerid]==0)return SendError(playerid,"Вы не имеете возможности управлять этим наркопритоном");
	if(params[0]<1)return 1;
	if(PlayerInfo[playerid][pRank]<9)return 1;
    new str[450];
    switch(GetPlayerVirtualWorld(playerid))
    {
        case 1:
        {
            if(GLS[60]<params[0]) return SendBotMessage(playerid,"Брат, у меня нет столько денег");
			GiveMoney(playerid,params[0]);
			GLS[60]-=params[0];
			SendBotMessage(playerid,"Вот, держи свою прибыль");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[45],GLS[60],GLS[55],GLS[50]);
            UpdateDynamic3DTextLabelText(NarkoText[0], COLOR_WHITE, str);
        }
        case 2:
        {
            if(GLS[61]<params[0]) return SendBotMessage(playerid,"Брат, у меня нет столько денег");
            GiveMoney(playerid,params[0]);
            GLS[61]-=params[0];
            SendBotMessage(playerid,"Вот, держи свою прибыль");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[46],GLS[61],GLS[56],GLS[51]);
            UpdateDynamic3DTextLabelText(NarkoText[1], COLOR_WHITE, str);
        }
        case 3:
        {
        	if(GLS[62]<params[0]) return SendBotMessage(playerid,"Брат, у меня нет столько денег");
            GiveMoney(playerid,params[0]);
            GLS[62]-=params[0];
            SendBotMessage(playerid,"Вот, держи свою прибыль");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[47],GLS[62],GLS[57],GLS[52]);
            UpdateDynamic3DTextLabelText(NarkoText[2], COLOR_WHITE, str);
        }
        case 4:
        {
            if(GLS[63]<params[0]) return SendBotMessage(playerid,"Брат, у меня нет столько денег");
            GiveMoney(playerid,params[0]);
            GLS[63]-=params[0];
            SendBotMessage(playerid,"Вот, держи свою прибыль");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[48],GLS[63],GLS[58],GLS[53]);
            UpdateDynamic3DTextLabelText(NarkoText[3], COLOR_WHITE, str);
        }
        case 5:
        {
            if(GLS[64]<params[0]) return SendBotMessage(playerid,"Брат, у меня нет столько денег");
            GiveMoney(playerid,params[0]);
            GLS[64]-=params[0];
            SendBotMessage(playerid,"Вот, держи свою прибыль");
            format(str, sizeof(str), "Наркопритон\nВ наличии {ffcb8c}%d грамм{ffffff}\nНа балансе: {ffcb8c}$%d{ffffff}\n\nСтоимость скупки наркотиков: {ffcb8c}$%d{FFFFFF}\nСтоимость 1 грамма: {ffcb8c}$%d{FFFFFF}\n\n{D94141}Купить наркотики - '/buydrugs'\n{56A85E}Продать наркотики - '/selldrugs'",GLS[49],GLS[64],GLS[59],GLS[54]);
            UpdateDynamic3DTextLabelText(NarkoText[4], COLOR_WHITE, str);
        }
        default: return SendError(playerid,"Вы не находитесь в вашем наркопритоне");
    }
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Снял с баланса наркопритона",params[0],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
	return true;
}
cmd:wanted(playerid)
{
	if(!IsACop(playerid)) return SendError(playerid, "Вы не полицейский");
	new string[8000];
	strcat(string, "Имя\tУровень розыска\n");
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pWanted])
		    {
		        format(string,sizeof(string),"%s{FFFFFF}%s[%i]\t{FF4400}%d уровень\n", string,Name(i),i,PlayerInfo[i][pWanted]);
			}
		}
	}
	ShowPlayerDialogEx(playerid, 0, 5, "{43CD80}Список разыскивыемых", string,  "Скрыть", "");
	return true;
}

cmd:orderlist(playerid, const params[])
{
	if(PlayerInfo[playerid][pJob]!=3)return SendError(playerid,"Вы не развозчик продуктов");
	for(new i; i < 22; i ++) DBizitem[playerid][i] = -1;
	new string[12400],num;
	for(new i;i<OWNABLEBIZES;i++)
	{
	    if(!GetString(BizInfo[i][bOwner],"The State"))
    	{
		    if(BizInfo[i][bState] == 7 || BizInfo[i][bState] == 1 || BizInfo[i][bState] == 2 || BizInfo[i][bState] == 3 || BizInfo[i][bState] == 9)
			{
			    if(num<21)
	      		{
				    if(BizInfo[i][bBuyCost]>0 && BizInfo[i][bNeedItem]>0)
				    {
				        format(string,sizeof(string),"%s{FFFFFF}- %s {CBB42F}($%d).{FFFFFF} Закупает: {CBB42F}%d п.{FFFFFF} Цена: {CBB42F}$%d\n",string,BizInfo[i][bName],BizInfo[i][bMoney],BizInfo[i][bNeedItem],BizInfo[i][bBuyCost]);
				        DBizitem[playerid][num] = i;
				        num++;
				    }
				}
				else break;
			}
		}
	}
	if(num>0) ShowPlayerDialogEx(playerid,8761,2,"{43CD80}Поиск предпринимателя",string,"Принять","Отмена");
	else ShowPlayerDialogEx(playerid,0,0,"{43CD80}Поиск предпринимателя","{FFFFFF}К сожалению на данный момент нет заказов","Принять","");

	return 1;
}
stock RsendClientMessageToAll(color,type,const text[])
{
	foreach(new i:Player)
	{
	    if(PlayerInfo[i][pRedio]==type)
	    {
	        if(!IsPlayerConnected(i)) continue;
	        SendClientMessage(i,color,text);
	    }
	}
}
cmd:setradio(playerid)
{
	new string[300],verh[121];
	switch(PlayerInfo[playerid][pRedio])
	{
	    case 0: verh = "{FFFFFF}Текущая радиостанция: {58A31C}LSFM";
	    case 1: verh = "{FFFFFF}Текущая радиостанция: {1696C5}SFFM";
	    case 2: verh = "{FFFFFF}Текущая радиостанция: {E4C516}LVFM";
	    default: verh = "{FFFFFF}Текущая радиостанция: {E21717}Не выбрана";
	}
	format(string,sizeof(string),"{FFFFFF}- Переключиться на радиостанцию LSFM\n- Переключиться на радиостанцию SFFM\n- Переключиться на радиостанцию LVFM\n- Выключить радио");
	ShowPlayerDialogEx(playerid,5872,2,verh,string,"Принять","Отмена");
	return 1;
}
cmd:gotocar(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin]<4)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /gotocar [id]");
	new Float: x,Float:y,Float:z;
	GetVehiclePos(params[0],x,y,z);
	J_SetPlayerPos(playerid,x,y,z );
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(params[0]));
	return true;
}
cmd:gotohouse(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin]<3)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /gotohouse [id]");
	J_SetPlayerPos(playerid,HouseInfo[params[0]][hEnter][0],HouseInfo[params[0]][hEnter][1],HouseInfo[params[0]][hEnter][2] );
	return true;
}
cmd:srp(playerid, const params[])
{
	if(!PlayerInfo[playerid][pAdmin])return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(!sscanf(params,"u",params[0]))
	{
     	J_SetPlayerPos(params[0], -774.1894,493.0985,1376.5850);
		SetPlayerFacingAngle(params[0], 52.1);
		SetPlayerVirtualWorld(params[0], 1466);
		SetPlayerInterior(params[0], 1);
		SendClientMessage(params[0],COLOR_RED,"Администратор телепортировал вас на собеседование");
	}
 	J_SetPlayerPos(playerid, -774.1894,493.0985,1376.5850);
	SetPlayerFacingAngle(playerid, 52.1);
	SetPlayerVirtualWorld(playerid, 1466);
	SetPlayerInterior(playerid, 1);
	return true;
}
cmd:scutes(playerid, const params[])
{
	if(PlayerInfo[playerid][pMember]!=TEAM_FBI)return SendError(playerid,"Вы не состоите в FBI");
	if(!TeamDuty[playerid])return SendError(playerid,"Вы не на дежурстве");
	new string[300],id;

	if(PlayerInfo[playerid][pMScutes]!=-1)
	{
	 	format(string,sizeof(string),"{4D7D22}-{FFFFFF} Носитель: {4D7D22}%s{FFFFFF}\n\n{FFFFFF}Вы будете получать сообщения как только человек за которым включена\nслежка позвонит кому-либо или напишет смс",PlayerName[PlayerInfo[playerid][pMScutes]]);
		ShowPlayerDialogEx(playerid,1081,0,"{43CD80}Информация",string,"{DE3737}Отключить{FFFFFF}","Отмена");
		return false;
	}
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /scutes [id]");
	if(SlotValue[id][19]<=1) return SendError(playerid, "У этого игрока нет телефона");
	if(id==playerid)return false;
	if(!IsPlayerConnected(id)) return false;
	if(!ProxDetectorS(2.0, playerid, id, 1)) return SendError(playerid, "Вы далеко от игрока");
	if(PlayerInfo[id][pScutes]==-1)
	{
		PlayerInfo[id][pScutes]=playerid,format(string,sizeof(string),"Вы прикрепили жучек к мобильному телефону игрока %s",PlayerName[id]);
		PlayerInfo[playerid][pMScutes]=id;
	}
	else SendError(playerid,"К этому игроку уже прикреплен жучек");
	ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
	SetPlayerChatBubble(playerid, "Сделал что-то странное", COLOR_PURPLE, 10.0, 5000);
	SendClientMessage(playerid,COLOR_GREEN,string);

	return true;
}
cmd:goto(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new
		id,
		string[150],
		Float:X,
		Float:Z,
		Float:Y;
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /goto [id]");
	if(!IsPlayerConnected(id) || !IsPlayerLogged[id]) return SendError(playerid, "Игрок не авторизован");
    GetPlayerPos(id,X,Y,Z);
    if(GetPlayerState(playerid) != 2) J_SetPlayerPos(playerid,X+1,Y,Z);
    else J_SetVehiclePos(GetPlayerVehicleID(playerid),X+1,Y,Z);
    BizEntered[playerid] = BizEntered[id];
    HouseEntered[playerid] = HouseEntered[id];
    SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
    SetPlayerInterior(playerid,GetPlayerInterior(id));
    format(string,sizeof(string),"Вы телепортировались к игроку %s",Name(id));
    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	return true;
}
cmd:kick(playerid, const params[])
{
    new id, string[150], reason[100];
	if(!PlayerInfo[playerid][pAdmin]) return false;
	if(GetPVarInt(playerid,"kikk")>gettime()+18) return J_Kick(playerid);
	if(GetPVarInt(playerid,"kikk")>gettime())
	{
	    SendError(playerid,"Можно раз в 7 секунд");
		SetPVarInt(playerid,"kikk",gettime()+3);
		return false;
	}
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"us[150]",id,reason)) return SendInfo(playerid, "Используйте:{7396FB} /kick [id] [Причина]");
    if(IsAIP(reason))return 1;
    if(PlayerInfo[playerid][pAdmin]<PlayerInfo[id][pAdmin])return SendError(playerid, "Отказано в доступе");
	if(id == playerid) return SendError(playerid,"Нельзя кикать самого себя");
    format(string,sizeof(string)," Администратор %s[%d] кикнул игрока %s[%d]. Причина: %s",Name(playerid),playerid,Name(id),id,reason);
    AsendClientMessageToAll(COLOR_LIGHTRED,string);
    J_Kick(id);
    SetPVarInt(playerid,"kikk",gettime()+7);
	return true;
}
cmd:mute(playerid, const params[])
{
	if(!PlayerInfo[playerid][pAdmin]) return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"uds[50]",params[0],params[1],params[2])) return SendInfo(playerid, "Используйте:{7396FB} /mute [id] [время] [причина]");
	if(!IsPlayerLogged[params[0]])return false;
    if(IsAIP(params[2]))return 1;
 	if(params[1]<1)return SendInfo(playerid, "Используйте:{7396FB} /mute [id] [время > 1] [причина]");
 	if(strlen(params[2])>30) return SendError(playerid,"Не больше 30 символов");
 	if(params[1]>300)return SendError(playerid,"Нельзя выдать БЧ больше чем на 300 минут");
 	if(PlayerInfo[params[0]][pMuteTime]>0)return SendError(playerid,"У этого игрока уже есть бан чата");
 	if(GetPVarInt(playerid,"ban")>gettime()) return SendError(playerid,"Можно раз в 10 секунд");
    SetPVarInt(playerid,"ban",gettime()+10);
	format(CMDstr,144," Администратор %s[%d] заглушил игрока %s[%d] на %d минут. Причина: %s",Name(playerid),playerid,Name(params[0]),params[0],params[1],params[2]);
	AsendClientMessageToAll(COLOR_LIGHTRED,CMDstr);
	ShowPlayerDialogEx(params[0],0,0,"{43CD80}Информация","{ffffff}Вы получили бан чата, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}"Mode_Forum,"Скрыть", "");
	PlayerInfo[params[0]][pMuteTime] = params[1]*60;
	return true;
}
cmd:sban(playerid,const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(GetPVarInt(playerid,"ban")>gettime())
	{
	    SendError(playerid,"Можно раз в 10 секунд");
		SetPVarInt(playerid,"ban",gettime()+3);
		return false;
	}
	if(sscanf(params,"u",params[0])) return SendInfo(playerid,"Используйте: {7396FB}/sban [id]");
	if(!IsPlayerConnected(params[0])) return SendError(playerid, "Игрок не найден");
	if(PlayerInfo[params[0]][pAdmin] > PlayerInfo[playerid][pAdmin])return SendError(playerid, "Данное действие запрещено");
	PlayerInfo[params[0]][pMember] = 0;
	PlayerInfo[params[0]][pLeader] = 0;
	PlayerInfo[params[0]][pRank] = 0;
	new temp[145];
	format(temp, sizeof(temp),"[A] %s[%d] тихо забанил игрока %s[%d]", Name(playerid),playerid,Name(params[0]),params[0]);
	SendAdminsMessage(COLOR_GRAY,temp,1);
	format(temp,sizeof(temp),"[IP: %s] [Reg IP: %s]", PlayerIp[params[0]],PlayerRegIP[params[0]]);
	SendAdminsMessage(COLOR_GRAY,temp,1);
	BanName(PlayerName[params[0]], PlayerName[playerid], 3650, "Silent Ban");
	BanEx(params[0],"SBAN");
	Adminlog(playerid, params[0], "SBAN", 0,"");
	SetPVarInt(playerid,"ban",gettime()+10);
	return 1;
}
cmd:govinfo(playerid)
{
	if(!PlayerInfo[playerid][pAdmin])return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	ShowGovInfo(playerid);
	return 1;
}
cmd:ban(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(GetPVarInt(playerid,"ban")>gettime())
	{
	    SendError(playerid,"Можно раз в 10 секунд");
		SetPVarInt(playerid,"ban",gettime()+3);
		return false;
	}
    new id, string[150], days, reason[200];
    if(sscanf(params,"uds[150]", id, days, reason)) return SendInfo(playerid, "Используйте:{7396FB} /ban [id] [days 1-30] [Причина]");
    if(!IsPlayerLogged[id])return false;
    if(PlayerInfo[id][pLeader])return SendError(playerid, "Снимите лидера через /apanel");
	if(PlayerInfo[playerid][pAdmin]<PlayerInfo[id][pAdmin])return SendError(playerid, "Отказано в доступе");
	if(strlen(reason)>30) return SendError(playerid,"Не больше 30 символов");
 	if(IsAIP(reason))return 1;
    if(PlayerInfo[id][pAskBan]==22)return SendError(playerid, "Игрок использует клиент");
	if(days>30 || 1>days) return SendInfo(playerid, "Используйте:{7396FB} /ban [id] [days 1-30] [Причина]");
    format(string,sizeof(string),"Администратор %s[%d] забанил игрока %s[%d] на %d дней. Причина: %s",PlayerName[playerid],playerid,PlayerName[id],id, days, reason);
    AsendClientMessageToAll(COLOR_LIGHTRED,string);
	new temp[145];
	format(temp,sizeof(temp),"[IP: %s] [Reg IP: %s]", PlayerIp[params[0]],PlayerRegIP[params[0]]);
	SendAdminsMessage(COLOR_LIGHTRED,temp,1);
    ShowPlayerDialogEx(id,0,0,"{43CD80}Информация","{ffffff}Вы получили бан аккаунта, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}"Mode_Forum,"Скрыть", "");
    PlayerInfo[id][pWarns]=0;
    J_Kick(id);
    BanName(PlayerName[id], PlayerName[playerid], days, reason);
    SetPVarInt(playerid,"ban",gettime()+10);
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[id][pID],Name(id),PlayerInfo[playerid][pID],Name(playerid),"Забанил аккаунт(Онлайн)",days,PlayerIp[id],reason);
	return true;
}
cmd:iban(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(GetPVarInt(playerid,"ban")>gettime())
	{
	    SendError(playerid,"Можно раз в 10 секунд");
		SetPVarInt(playerid,"ban",gettime()+3);
		return false;
	}
    new id, string[150], reason[200];
    if(sscanf(params,"us[150]", id, reason)) return SendInfo(playerid, "Используйте:{7396FB} /iban [id] [Причина]");
    if(!IsPlayerLogged[id])return false;
    if(PlayerInfo[id][pLeader])return SendError(playerid, "Снимите лидера через /apanel");
	if(PlayerInfo[playerid][pAdmin]<PlayerInfo[id][pAdmin])return SendError(playerid, "Отказано в доступе");
	if(strlen(reason)>30) return SendError(playerid,"Не больше 30 символов");
 	if(IsAIP(reason))return 1;
    if(PlayerInfo[id][pAskBan]==22)return SendError(playerid, "Игрок использует клиент");
    format(string,sizeof(string),"Администратор %s[%d] заблокировал игрока %s[%d]. Причина: %s",PlayerName[playerid],playerid,PlayerName[id],id, reason);
    AsendClientMessageToAll(COLOR_LIGHTRED,string);
	new temp[145];
	format(temp,sizeof(temp),"[IP: %s] [Reg IP: %s]", PlayerIp[params[0]],PlayerRegIP[params[0]]);
	SendAdminsMessage(COLOR_LIGHTRED,temp,1);
    ShowPlayerDialogEx(id,0,0,"{43CD80}Информация","{ffffff}Вы получили бан аккаунта, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\n{2D8E35}"Mode_Forum,"Скрыть", "");
    PlayerInfo[id][pWarns]=0;
    J_Kick(id);
    BanName(PlayerName[id], PlayerName[playerid], 3650, reason);
    SetPVarInt(playerid,"ban",gettime()+10);
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[id][pID],Name(id),PlayerInfo[playerid][pID],Name(playerid),"Заблокировал навсегда аккаунт",3650,PlayerIp[id],reason);
	return true;
}
cmd:banoff(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(GetPVarInt(playerid,"bann")>gettime()+18) return J_Kick(playerid);
	if(GetPVarInt(playerid,"ban")>gettime())
	{
	    SendError(playerid,"Можно раз в 7 секунд");
		SetPVarInt(playerid,"bann",gettime()+3);
		return false;
	}
    new name[25], day, string[150], reason[100];
    if(sscanf(params,"s[25]ds[150]",name,day, reason)) return SendInfo(playerid, "Используйте:{7396FB} /banoff [name] [дней] [Причина]");
	if(day <1 && 30<day) return SendInfo(playerid, "Используйте:{7396FB} /banoff [name] [дней] [Причина]");
	if(!strcmp(name,"Neal_Maskoni",true) || !strcmp(name,"Union_Unlimited",true) || !strcmp(name,"Sweet_Jonson",true) || !strcmp(name,"Sam_Mason",true))return false;
    if(IsAIP(reason))return 1;
 	new player = NameID(name);
    if(player != INVALID_PLAYER_ID) return SendError(playerid,"Игрок онлайн");
    format(string,sizeof(string)," Администратор %s забанил в оффлайне игрока %s. Причина: %s",Name(playerid),name,reason);
    SendClientMessageToAll(COLOR_LIGHTRED,string);
    BanName(name, Name(playerid), day, reason);
    SetPVarInt(playerid,"ban",gettime()+7);
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,-1,name,PlayerInfo[playerid][pID],Name(playerid),"Забанил аккаунт(оффлайн)",day,"127.0.0.1",reason);
	return true;
}
cmd:ibanoff(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(GetPVarInt(playerid,"bann")>gettime()+18) return J_Kick(playerid);
	if(GetPVarInt(playerid,"ban")>gettime())
	{
	    SendError(playerid,"Можно раз в 7 секунд");
		SetPVarInt(playerid,"bann",gettime()+3);
		return false;
	}
    new name[25], string[150], reason[100];
    if(sscanf(params,"s[25]s[150]",name, reason)) return SendInfo(playerid, "Используйте:{7396FB} /ibanoff [name] [Причина]");
	if(!strcmp(name,"Neal_Maskoni",true) || !strcmp(name,"Union_Unlimited",true) || !strcmp(name,"Sweet_Jonson",true) || !strcmp(name,"Sam_Mason",true))return false;
    if(IsAIP(reason))return 1;
 	new player = NameID(name);
    if(player != INVALID_PLAYER_ID) return SendError(playerid,"Игрок онлайн");
    format(string,sizeof(string)," Администратор %s забанил в оффлайне игрока %s. Причина: %s",Name(playerid),name,reason);
    SendClientMessageToAll(COLOR_LIGHTRED,string);
    BanName(name, Name(playerid), 3650, reason);
    SetPVarInt(playerid,"ban",gettime()+7);
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,-1,name,PlayerInfo[playerid][pID],Name(playerid),"Заблокировал навсегда(оффлайн)",3650,"127.0.0.1",reason);
	return true;
}
cmd:rban(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params, "s[32]", params[0])) return SendInfo(playerid, "Используйте: {7396FB}/rban [IP]");
	#define ip params[0]
	new string[40];
	format(string, sizeof(string), "banip %s", ip);
	SendRconCommand(string);
	new baned[128];
	format(baned, sizeof(baned), "[A] Администратор %s[%d] заблокировал IP: %s", PlayerName[playerid], playerid,ip);
	SendAdminsMessage(COLOR_GRAY, baned);
	format(baned,sizeof(baned),"INSERT INTO `banip` (`IP`) VALUE ('%s')",ip);
	mysql_pquery(mysql, baned);
	Adminlog(playerid, 0 , "RBAN", 0,params[0]);
	#undef ip
	return 1;
}
cmd:unrban(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params, "s[32]", params[0])) return SendInfo(playerid, "Используйте: {7396FB}/unrban [IP]");
	#define ip params[0]
	new string[40];
	format(string, sizeof(string), "unbanip %s", ip);
	SendRconCommand(string);
	new baned[128];
	format(baned, sizeof(baned), "[A] Администратор %s[%d] разблокировал IP: %s", PlayerName[playerid], playerid,ip);
	SendAdminsMessage(COLOR_GRAY, baned);
	Adminlog(playerid, params[0], "UN RBAN", 0,"");
	format(baned,sizeof(baned),"DELETE FROM `banip` WHERE `IP` = '%s'",ip);
	mysql_pquery(mysql, baned);
	#undef ip
	return 1;
}
cmd:warnoff(playerid, const params[])
{
	new string[300];
    if(PlayerInfo[playerid][pAdmin] < 4)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new name[25],reason[25], admin, str[256];
    if(sscanf(params, "s[25]ds[25]", name, admin, reason)) return SendInfo(playerid, "Используйте:{7396FB} /warnoff [name] [количество] [причина]");
    if(!strcmp(name,"Neal_Maskoni",true) || !strcmp(name,"Union_Unlimited",true) || !strcmp(name,"Sweet_Jonson",true) || !strcmp(name,"Sam_Mason",true))return false;
    foreach(new i:Player)
    {
     	if(IsPlayerLogged[i]) if(strcmp(PlayerName[i], name, true)==0) return SendError(playerid, "Игрок онлайн");
    }
 	new player = NameID(name);
    if(player != INVALID_PLAYER_ID) return SendError(playerid,"Игрок онлайн");
    format(str, sizeof(str), "UPDATE `accounts` SET `Warns`='%d', `TimeToLastWarn`='%d' WHERE `NickName`='%s';", admin, gettime(), name);
	mysql_pquery(mysql, str);
    format(string,sizeof(string)," Администратор %s установил в оффлайне %d варнов игроку %s. Причина: %s",Name(playerid),admin,name, reason);
    SendClientMessageToAll(COLOR_LIGHTRED,string);
    return 1;
}
cmd:warn(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(GetPVarInt(playerid,"bann")>gettime()+18) return J_Kick(playerid);
	if(GetPVarInt(playerid,"ban")>gettime())
	{
	    SendError(playerid,"Можно раз в 7 секунд");
		SetPVarInt(playerid,"bann",gettime()+3);
		return false;
	}
    new
		string[150],
		reason[100];
    if(sscanf(params,"us[150]",params[0],reason)) return SendInfo(playerid, "Используйте:{7396FB} /warn [id] [Причина]");
    if(!IsPlayerLogged[params[0]])return false;
    if(PlayerInfo[params[0]][pLeader]==6)return SendError(playerid, "Снимите лидера через /apanel");
    if(IsAIP(reason))return 1;
    if(PlayerInfo[playerid][pAdmin]<PlayerInfo[params[0]][pAdmin])return SendError(playerid, "Отказано в доступе");
    if(strlen(reason)>30) return SendError(playerid,"Не больше 30 символов");
    if(IsACop(params[0]))
	{
		if(UsingShield[params[0]])RemovePlayerAttachedObject(params[0], 6);
		PlayerInfo[params[0]][pShield] = 0.0;
	}
	if(PlayerInfo[params[0]][pAskBan]==22)return SendError(playerid, "Игрок использует клиент");
 	if(params[0]==playerid)return SendError(playerid, "Отказано в доступе");
    PlayerInfo[params[0]][pLeader] = 0;
    PlayerInfo[params[0]][pMember] = 0;
    PlayerInfo[params[0]][pDCTime]=0;
    SendClientMessage(params[0],COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
    PlayerInfo[params[0]][pRank] = 0;
    PlayerUnleader(params[0], Name(params[0]));
    PlayerInfo[params[0]][pJob] = 0;
    SetPlayerColor(params[0],TeamColors[0]);
    ResetSpawnInfo(params[0], 0);
    SetBumSkin(params[0]);
    PlayerInfo[params[0]][pTimeToLastWarn] = gettime();
	PlayerInfo[params[0]][pWarns] ++;
    format(string,sizeof(string),"Администратор %s[%d] выдал предупреждение игроку %s[%d] [%d/3] Причина: %s",Name(playerid),playerid,Name(params[0]),params[0],PlayerInfo[params[0]][pWarns],reason);
    AsendClientMessageToAll(COLOR_LIGHTRED,string);
    ShowPlayerDialogEx(params[0],0,0,"{43CD80}Информация","{ffffff}Вы получили предупреждение, если вы не согласны с решением Администратора, то напишите жалобу на форум, приложив данный скриншот.\nВарн можно снять с помощью /donate.\n{2D8E35}"Mode_Forum,"Скрыть", "");
    SetPVarInt(playerid,"ban",gettime()+7);
    if(PlayerInfo[params[0]][pWarns]>2)
	{
	    PlayerInfo[params[0]][pWarns]=0;
		//BanPlayer(params[0]);
		BanName(PlayerName[params[0]], PlayerName[playerid], 10, reason);
		J_Kick(params[0]);
	}
    J_Kick(params[0]);
	return true;
}
cmd:bankmenu(playerid, const params[])
{
    new id;
	if(GetTeamID(playerid) != TEAM_BANK) return SendError(playerid,"Отказано в доступе");
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /bankmenu [id]");
    if(!IsPlayerLogged[id]) return SendError(playerid,"Игрок не в сети");
	if(id == playerid) return  SendError(playerid,"Себе нельзя");
	if(!IsPlayerInRangeOfPoint(playerid, 40.0,1471.0728,658.8788,980.0761))return SendError(playerid,"Воспользоваться этой командой вы можете только у Reception");
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
	if(!ProxDetectorS(10,playerid,id)) return SendError(playerid, "Вы далеко от игрока");
	PanelPlayerID[playerid] = id;
	new rank = PlayerInfo[playerid][pRank];
	if(rank<5)return SendError(playerid,"Отказано в доступе");
    ShowPlayerDialogEx(playerid,713,2,"{43CD80}Выберите действие","\
	{7396FB}[1]{7396FB} Выдать кредит [6]\n\
	{7396FB}[2]{7396FB} Узнать долг банку [1]\n\
	{7396FB}[3]{7396FB} Узнать количество денег в банке [1]\n\
	{7396FB}[4]{7396FB} Выдать банковскую карту [1]\n\
	{7396FB}[5]{7396FB} Восстановить банковскую карту [8]","Выбрать","Отмена");
	return true;
}
cmd:givelic(playerid, const params[])
{
    new id;
	if(PlayerInfo[playerid][pAdmin] < 4 && GetTeamID(playerid) != TEAM_LICENSERS) return SendError(playerid,"Отказано в доступе");
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /givelic [id]");
    if(!ProxDetectorS(10,playerid,id)) return SendError(playerid, "Вы далеко от игрока");
    if(!IsPlayerLogged[id]) return SendError(playerid,"Игрок не в сети");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    if(id == playerid && PlayerInfo[playerid][pAdmin]==0) return SendError(playerid,"Вы не можете выдать лицензии сами себе");
	PanelPlayerID[playerid] = id;
	PanelPlayerID[id] = playerid;
	new rank = PlayerInfo[playerid][pRank];
	if(rank >= 3)
	{
        ShowPlayerDialogEx(playerid,6,5,"{43CD80}Выберите лицензию","Лицензия\tСтоимость\t\n\
		На вождение авто\t{52A32A}1000${FFFFFF}\n\
		На вождение мото\t{52A32A}2000${FFFFFF}\n\
		На полеты\t{52A32A}10000${FFFFFF}\n\
		На рыбалку\t{52A32A}1000${FFFFFF}\n\
		На вождение водного транспорта\t{52A32A}5000${FFFFFF}\n\
		На оружие\t{52A32A}10000${FFFFFF}","Выдать","Отмена");
	}
	else
	{
	    if(GetTeamID(playerid) == TEAM_LICENSERS) return SendError(playerid, "Ваш ранг слишком мал");
	    ShowPlayerDialogEx(playerid,6,5,"{43CD80}Выберите лицензию","Лицензия\tСтоимость\t\n\
		На вождение авто\t{52A32A}1000${FFFFFF}\n\
		На вождение мото\t{52A32A}2000${FFFFFF}","Выдать","Отмена");
	}
	return true;
}
cmd:spec(playerid, const params[])
{
	if(!PlayerInfo[playerid][pAdmin]) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(!strcmp(params,"OFF",true) && Spectate[playerid]) return StopSpectate(playerid);
	if(!Spectate[playerid] && !strcmp(params,"OFF",true)) return SendError(playerid, "Вы не в режиме наблюдения");
	if(sscanf(params, "u",params[0]))
	{
		if(SpecAd[playerid] != INVALID_PLAYER_ID) SpecID[SpecAd[playerid]] = 65535;
		SpecAd[playerid] = 65535;
		if(!Spectate[playerid])
		{
			GetPlayerPos(playerid,SpecPlayer[playerid][0],SpecPlayer[playerid][1],SpecPlayer[playerid][2]);
			SpecPlayerInt[playerid] = GetPlayerInterior(playerid);
			SpecPlayerWorld[playerid] = GetPlayerVirtualWorld(playerid);
			GetPlayerFacingAngle(playerid, SpecPlayerAngle[playerid]);
		}
		ReconSelect[playerid] = 7;
		ReconSelectSub[playerid] = INVALID_TEXT_DRAW;
		for(new i = 7; i < sizeof(ReconPlayer); i++)
		DisableEnableReconButton(playerid, i, 0, 0);
		for(new i = 0; i < 16; i++)
		PlayerTextDrawShow(playerid, ReconPlayer[i]);
		DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
		Spectate[playerid] = 1;
		TogglePlayerSpectating(playerid, 1);
		return 1;
	}
	if(!IsPlayerConnected(params[0]) || !IsPlayerLogged[params[0]]) return SendError(playerid, "Игрок не найден");
	if(params[0] == playerid) return SendError(playerid, "Вы не можете наблюдать за самим собой");
	if(Spectate[params[0]]) return SendError(playerid, "Администратор в режиме наблюдения");
	if(!Spectate[playerid])
	{
		GetPlayerPos(playerid,SpecPlayer[playerid][0],SpecPlayer[playerid][1],SpecPlayer[playerid][2]);
		SpecPlayerInt[playerid] = GetPlayerInterior(playerid);
		SpecPlayerWorld[playerid] = GetPlayerVirtualWorld(playerid);
		GetPlayerFacingAngle(playerid, SpecPlayerAngle[playerid]);
	}
	if(SpecAd[playerid] != INVALID_PLAYER_ID) SpecID[SpecAd[playerid]] = 65535;
	SpecAd[playerid] = 65535;
	SpecAd[playerid] = params[0];
	SpecID[params[0]] = playerid;
	RemovePlayerFromVehicle(playerid);
	ReconSelect[playerid] = 7;
	ReconSelectSub[playerid] = INVALID_TEXT_DRAW;
	for(new i = 7; i < sizeof(ReconPlayer); i++)
		DisableEnableReconButton(playerid, i, 0, 0);
	for(new i = 0; i < 16; i++)
		PlayerTextDrawShow(playerid, ReconPlayer[i]);
	DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
	Spectate[playerid] = 1;
	SetPVarInt(playerid, "StartedSkinFarm",GetPlayerSkin(playerid));
	SetTimerEx("SpecPlayers", 100, false, "i", playerid);
	return 1;
} 
cmd:skick(playerid, const params[])
{
	new string[100];
	if(PlayerInfo[playerid][pAdmin] < 4) return false;
 	if(GetPVarInt(playerid,"skick")>gettime())
	{
	    SendError(playerid,"Можно раз в 5 секунд");
		return false;
	}
   	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /skick [id]");
    if(!IsPlayerLogged[params[0]])return false;
    if(PlayerInfo[playerid][pAdmin]<PlayerInfo[params[0]][pAdmin])return SendError(playerid, "Отказано в доступе");
	if(params[0] == playerid) return SendError(playerid,"Нельзя кикать самого себя");
	SetPVarInt(playerid,"skick",gettime()+5);
    J_Kick(params[0]);
	format(string,sizeof(string),"[A] %s[%d] тихо кикнул игрока %s[%d]",Name(playerid),playerid,Name(params[0]),params[0]);
	SendAdminsMessage(COLOR_GRAY,string,1);
	return true;
}
cmd:online(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 2) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new string[2048], str[64];
	strcat(string, "\n");
	for (new i = 1; i < MAX_ORGS; i++)
	{
		format(str, sizeof(str), "\n\\c{ffffff}%s: {C9EAFF}« %d человек »", OrgInfo[i][oName], GetOnlineNumbers(i));
		strcat(string, str);
	}
	strcat(string, "\n\n");
	Dialog_Open(playerid, 0, 0, "{43CD80}Онлайн фракций", string, "Скрыть", "");
	return 1;
}
cmd:fix(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /fix [id транспорта]");
	new model = GetVehicleModel(params[0]);
	if(!model) return SendError(playerid,"Неверный ID авто");
	GHealth[playerid] = 1000;
	J_SetVehicleHealth(params[0],GHealth[playerid]);
	RepairVehicle(params[0]);
	SendClientMessage(playerid,COLOR_LIME,"Вы починили транспорт");
	return 1;
}
stock GetOnlineNumbers(fractid)
{
	new numbers;
	foreach(new i: Player)
	{
		if (!IsPlayerConnected(i) || !IsPlayerLogged[i] || PlayerInfo[i][pMember] != fractid)continue;
		numbers ++;
	}
	return numbers;
}
cmd:get(playerid,const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new kLibName[24];
	if(sscanf(params,"s[24]",kLibName)) return SendInfo(playerid,"Используйте: {7396FB}/get [Ник Игрока]");
	new query[300];
	mysql_format(mysql, query,sizeof query, "SELECT * FROM `accounts` WHERE `NickName` = '%s' LIMIT 1",kLibName);
	new Cache:resultcache = mysql_query(mysql, query, true);
	if(cache_num_rows())
	{
		new datareg[50],ipreg[50],ipigrr[50],id3,strv[26],strvv[26],splitt[4][4],spli[4][4],iptext[33],lastip1[26],lastip2[26];
		id3 = cache_get_field_content_int(0, "ID", mysql);
		cache_get_field_content(0, "RegIP", ipreg, 50);
		cache_get_field_content(0, "LastIP", ipigrr, 50);
		cache_get_field_content(0, "CheckIP1", lastip1, 26);
		cache_get_field_content(0, "CheckIP2", lastip2, 26);
		cache_get_field_content(0, "LastLogin", datareg, 50);
		split(ipigrr,splitt,'.');
		format(strv,sizeof(strv),"%s.%s",splitt[0],splitt[1]);
		split(ipreg,spli,'.');
		format(strvv,sizeof(strvv),"%s.%s",spli[0],spli[1]);
		if(strcmp(strv,strvv, true)) iptext = "{D94141}Подсеть не совпадает";
		else iptext = "{43CD80}Подсеть совпадает";
		format(query,sizeof(query),"{ffffff}Аккаунт: %s\n\
		Номер аккаунта: %d\n\
		{56A85E}IP адрес(регистрационный): %s\n\
		{7396FB}IP адрес(Check IP 1): %s\n\
		IP адрес(Check IP 2): %s\n\
		IP адрес(последний): %s\n\
		Дата последнего входа: %s\n\n%s",kLibName,id3,ipreg,lastip1,lastip2,ipigrr,datareg,iptext);
		ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация об аккаунте",query,"Закрыть","");
		format(query, sizeof query, "[A] Администратор %s[%d] сверяет IP-адреса %s",PlayerName[playerid],playerid,kLibName);
		SendAdminsMessage(COLOR_GRAY,query, 1);
	}
	else SendError(playerid,"Игрок с введенным ником не найден");
	cache_delete(resultcache, mysql);
	return 1;
}
split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}
cmd:agl(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 3) return 1;
	SendError(playerid,"Вы получили все лицензии");
	PlayerInfo[playerid][pCarLic] = 2;
	PlayerInfo[playerid][pFlyLic] = 2;
	PlayerInfo[playerid][pGunLic] = 2;
	PlayerInfo[playerid][pBoatLic] = 2;
	PlayerInfo[playerid][pBikeLic] = 2;
	return 1;
}
cmd:fammute(playerid)
{
    if(PlayerInfo[playerid][FamilyID] == -1)return SendError(playerid,"Вы не состоите в семье");
    if(GetString(FamilyInfo[playerid][famZam],PlayerName[playerid]) || GetString(FamilyInfo[playerid][famLider],PlayerName[playerid]))
	{
	    if(PlayerInfo[playerid][FamilyMute] == 0)
	    {
            ShowPlayerDialogEx(playerid,495,1,"{43CD80}Выдача мута","{FFFFFF}Введите ID игрока, время и причину через запятую.\n\nНапример:0,30,Не адекват","Выдать","Отмена");
		}
		else SendError(playerid,"Вы не можете давать мут другим");
	}
	else SendError(playerid,"Эта функция недоступна");
	return true;
}
cmd:unfammute(playerid)
{
    if(PlayerInfo[playerid][FamilyID] == -1)return SendError(playerid,"Вы не состоите в семье");
    if(GetString(FamilyInfo[playerid][famZam],PlayerName[playerid]) || GetString(FamilyInfo[playerid][famLider],PlayerName[playerid]))
	{
	    if(PlayerInfo[playerid][FamilyMute] == 0)
	    {
			ShowPlayerDialogEx(playerid,496,1,"{43CD80}Снятие мута","{FFFFFF}Снятие мута, введите ID игрока","Снять","Отмена");
		}
		else SendError(playerid,"Вы не можете снимать мут другим");
	}
	else SendError(playerid,"Эта функция недоступна");
	return true;
}
cmd:faminvite(playerid)
{
	if(GetString(FamilyInfo[playerid][famZam],PlayerName[playerid]) || GetString(FamilyInfo[playerid][famLider],PlayerName[playerid]))
	{
		if(GetPVarInt(playerid,"Timerak") == 1)return SendError(playerid,"Подождите немного...");
	    if(PlayerInfo[playerid][FamilyID] == -1)return SendError(playerid,"Вы не состоите в семье");
	    ShowPlayerDialogEx(playerid,497,1,"Приглашение в семью","{FFFFFF}Приглашение в семью, введите ID игрока","Пригласить","Отмена");
  	}
  	else SendClientMessage(playerid,COLOR_ORANGE,"Извините! Но для вас эта функция не доступна!");
	return true;
}
cmd:unfaminvite(playerid)
{
	if(GetString(FamilyInfo[playerid][famZam],PlayerName[playerid]) || GetString(FamilyInfo[playerid][famLider],PlayerName[playerid]))
	{
	    if(PlayerInfo[playerid][FamilyID] == -1)return SendError(playerid,"Вы не состоите в семье");
	    ShowPlayerDialogEx(playerid,499,1,"{43CD80}Изгнание из семьи","{FFFFFF}Введите ID игрока и через запятую причину\n\nНапример:0,По С/Ж","Изгнать","Отмена");
  	}
    else SendError(playerid,"Эта функция недоступна");
	return true;
}
cmd:famonline(playerid)
{
    if(PlayerInfo[playerid][FamilyID] == -1)return SendError(playerid,"Вы не состоите в семье");
    new num,string[3000],str[3000];
    foreach(Player, i)
	{
		if(PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
		{
		  	num ++;
	  		format(str,sizeof(str),"{ffffff}%s[{7396FB}%d{ffffff}] [На паузе: {7396FB}%s{ffffff}] [Телефон: {7396FB}%d{ffffff}]\n",PlayerName[i],i,Convert(PlayerAFKTime[playerid][0]),SlotValue[i][19]);
			strcat(string,str);
			format(str,sizeof(str),"{43CD80}%d человек онлайн",num);
		  	ShowPlayerDialogEx(playerid,0,0,str,string,"Скрыть","");
		}
	}
	return true;
}
cmd:family(playerid)
{
    if(PlayerInfo[playerid][FamilyID] == -1) return SendError(playerid,"Вы не состоите в семье");
	if(!ShowPlayerDialogEx(playerid,491,2,"{43CD80}Управление семьёй","\
	Изменить цвет чата(в /k)\n\
	Изменить название семьи\n\
	Выдать мут\n\
	Снять мут\n\
	Пригласить в семью\n\
	Выгнать из семьи\n\
	Покинуть семью\n\
	Назначить заместителя\n\
	Снять заместителя\n\
	Члены семьи онлайн","Выбрать","Отмена"))SendError(playerid, "Недоступно в данный момент");
    return true;
}
cmd:k(playerid, const params[])
{
	if(PlayerInfo[playerid][FamilyMute] > 1)return SendError(playerid,"У вас мут в чате семьи");
    if(PlayerInfo[playerid][FamilyID] == -1)return SendError(playerid,"Вы не состоите в семье");
    if(sscanf(params,"s[168]", params[0])) return SendInfo(playerid, "Используте: {7396FB}/k [Teкст]");
    new string[168];
    format(string,sizeof(string),"{%s}[%s] %s[%d]: %s",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],playerid,params[0]);
    SendFama(playerid,-1,string);
    return true;
}
cmd:fullferms(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5)return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	{
		GLS[27] += 50000; // фермы
		GLS[28] += 50000; // грузчики
		GLS[70] += 50000;
	}
	SendClientMessage(playerid,COLOR_LIGHTGREEN,"Вы пополнили склады фермы и грузчиков");
	return 1;
}
cmd:fullorgs(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5)return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	for(new i = 1; i < MAX_ORGS; i++){
		FractionValue[i][0] += 10000;
		SaveOrg(i);
	}
	SendClientMessage(playerid,COLOR_LIGHTGREEN,"Вы пополнили склады организаций");
	return 1;
}
cmd:monitorbilbord(playerid)
{
 	if(PlayerInfo[playerid][pAdmin] < 3) return 1;
	new string[3200] = "Место размещения\tСтатус\tВладелец", str[124];
	for(new x; x < MAX_BILLBORDS; x++)
	{
	    if(strlen(BildInfo[x][bOwner]) < 4) format(str,124,"\n%s\t{00CD66}Свободен\t{00CD66}Нет владельца",BildInfo[x][bPosText]);
	    else format(str,124,"\n%s\t{CD5555}Арендован\t{1A8FA9}%s",BildInfo[x][bPosText],BildInfo[x][bOwner]);
	    strcat(string,str);
	}
	return ShowPlayerDialogEx(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"{43CD80}Мониторинг билбордов",string,"Скрыть","");
}
cmd:delboard(playerid, const params[])
{
    new query[256];
    if(PlayerInfo[playerid][pAdmin] < 5) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params, "d",params[0])) return SendInfo(playerid, "Используйте: {7396FB}/delboard [id щита]");
    if(params[0] < 0 || params[0] > MAX_BILLBORDS) return SendError(playerid,"Используйте корректный ID баннера");
    SetPVarInt(playerid,"UseBilb",params[0]);
    format(query, sizeof(query),"{FFFFFF}Владелец билборда: %s\nID билборда: %d\n\nМестонахождение: {43CD80}%s",BildInfo[params[0]][bOwner], params[0], BildInfo[params[0]][bPosText]);
	ShowPlayerDialogEx(playerid,721,DIALOG_STYLE_MSGBOX,"{43CD80}Управление арендной",query,"Да","Нет");
	return true;
}
cmd:adminsall(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5)return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	mysql_pquery(mysql, "SELECT ID, NickName, LastLogin, Admin FROM accounts WHERE Admin > 0 ORDER BY Admin DESC", "OnAllAdminsLoaded", "d", playerid);
	return 1;
}
forward OnAllAdminsLoaded(showid);
public OnAllAdminsLoaded(showid)
{
    new totalMembers = cache_num_rows();
	if(totalMembers)
	{
		new string[64], bigstring[1024];
		new admin, membername[MAX_PLAYER_NAME], accountid;
		if(strlen(bigstring) < 1) strcat(bigstring, "ID\tУровень\tНикнейм\n\n{FFFFFF}");
		for(new i = 0; i < totalMembers; i++)
		{
			admin = cache_get_field_content_int(i, "Admin", mysql);
			accountid = cache_get_field_content_int(i, "ID", mysql);
			cache_get_field_content(i, "NickName", membername, mysql);
			format(bigstring, sizeof(bigstring), "%s%d\t%d\t\t%s\n", bigstring, accountid, admin, membername);
		}
		format(string, sizeof(string), "{FF6347}Всего %d администраторов", totalMembers);
		ShowPlayerDialogEx(showid, 0, 0, string, bigstring, "Скрыть", "");
	}
	else SendError(showid, "Администраторы не найдены");
}
stock aReportDells()
{
    for(new j; j < MAX_REPORTS; j++)
		ClearReport(j);
	TotalReports = 0;
    return 1;
}
cmd:setstat(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new id, param1, param2, string[150];
    if(sscanf(params,"udd",id,param1,param2))
	{
		SendClientMessage(playerid, -1, "Используй: /setstat [id] [код] [значение]");
		SendClientMessage(playerid, -1, "[0]Часы | [2]Пол | [4]Предупреждения | [5]VIP | [6]Выговоры");
		SendClientMessage(playerid, -1, "[7]Номер телефона | [8]Ключи от дома | [9]Ключи от бизнеса | [10]Материалы | [11]Детали");
		SendClientMessage(playerid, -1, "[12]Работа | [13]Наркотики | [14]Счет в банке | [15]Donate счет" );
		SendClientMessage(playerid, -1, "[16]Ключи отеля | [17]Очки фермы | [18]Спавн[0/3]" );
		return true;
	}
	switch(param1)
	{
	    case 0:
	    {
	        J_SetPlayerScore(id,param2);
			format(string,sizeof(string),"Вы изменили часы игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
	    }
	    case 2:
	    {
	        PlayerInfo[id][pSex] = param2;
			format(string,sizeof(string),"Вы изменили пол игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
	    }
	    case 4:
	    {
	        PlayerInfo[id][pWarns] = param2;
			format(string,sizeof(string),"Вы изменили кол-во предупреждений игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
	    }
	    case 5:
	    {
	        PlayerInfo[id][pVIP] = param2;
			format(string,sizeof(string),"Вы изменили VIP статус игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
	    }
	    case 6:
	    {
	        PlayerInfo[id][pFWarns] = param2;
			format(string,sizeof(string),"Вы изменили кол-во выговоров %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
	    }
	    case 8:
	    {
	        format(string,sizeof(string),"Вы изменили ключи от дома игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
			SlotValue[id][1] = param2;
	    }
	    case 9:
	    {
	        format(string,sizeof(string),"Вы изменили ключи от бизнеса игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
			SlotValue[id][3] = param2;
	    }
	    case 10:
	    {
	        format(string,sizeof(string),"Вы изменили кол-во материалов игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
			SlotValue[id][11] = param2;
	    }
	    case 12:
	    {
	        format(string,sizeof(string),"Вы изменили работу игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
			PlayerInfo[id][pJob] = param2;
	    }
	    case 13:
	    {
	        format(string,sizeof(string),"Вы изменили кол-во наркотиков игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
			SlotValue[id][14] = param2;
	    }
	    case 14:
	    {
	        format(string,sizeof(string),"Вы изменили счет в банке игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
			PlayerInfo[id][pBank] = param2;
	    }
	    case 15:
	    {
	        format(string,sizeof(string),"Вы изменили Donate счет игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
			PlayerInfo[id][pVirMoney] = param2;
	    }
	    case 18:
	    {
	        if(param2>3 || param2<0)return SendClientMessage(playerid,-1,"ща сниму!!");
	        format(string,sizeof(string),"Вы изменили спавн игрока %s(%d) на %d",Name(id),id,param2);
			SendClientMessage(playerid,-1,string);
			PlayerInfo[id][pDCTime] = param2;
			SendClientMessage(id,COLOR_LIGHTBLUE,"Место спавна изменилось. Изменить место спавна >> /setspawn");
	    }
	}
	SaveAccount(id);
	return true;
}
cmd:settalent(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9) return 1;
	if(sscanf(params,"uddd",params[0],params[1],params[2],params[3]))return SendClientMessage(playerid, -1, "Используй: /settalent [id] [ветка 0-3] [уровень 0-2] [0-3]");
	TalentsInfo[params[0]][params[1]][params[2]] = params[3];
	SendInfo(playerid, "Готово");
	return 1;
}
cmd:givetalent(playerid, const params[]){
	if(PlayerInfo[playerid][pAdmin] < 9) return 1;
	if(sscanf(params,"udd",params[0],params[1],params[2],params[3]))return SendClientMessage(playerid, -1, "Используй: /givetalent [id] [ветка 0-3] [количество]");
	PlayerInfo[params[0]][pTalents][params[1]] = params[2];
	SendInfo(playerid, "Готово");
	return 1;
}
cmd:radio(playerid)
{
	if(GetPVarInt(playerid, "BBOX"))callcmd::bbox(playerid, "");
	if(!PlayerPlayed[playerid])ShowPlayerDialogEx(playerid, 1489, DIALOG_STYLE_LIST, "{43CD80}Онлайн радио","\
	{7396FB}[1] {FFFFFF}Radio Record | Deep\n\
	{7396FB}[2] {FFFFFF}Radio Record | NY Classics\n\
	{7396FB}[3] {FFFFFF}Radio Record | Супердискотека 90-ых\n\
	{7396FB}[4] {FFFFFF}Radio {43CD80}Studio 21", "Выбрать", "Закрыть");
	else
 	{
		StopAudioStreamForPlayer(playerid);
		RemovePlayerAttachedObject(playerid, 6);
		PlayerPlayed[playerid]=false;
		StopAudioStreamForPlayer(playerid);
		SendClientMessage(playerid, 0xFE6500FF, "Онлайн радио отключено");
	}
	return true;
}
cmd:bbox(playerid, const const params[])
{
	if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
	if(!PlayerInfo[playerid][pRadio])return SendError(playerid, "У вас нет бумбокса");
	if(PlayerPlayed[playerid])callcmd::radio(playerid);
	if(!GetPVarInt(playerid, "BBOX"))
	{
		if(sscanf(params,"s[256]",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /bbox [ссылка на звуковую дорожку]");
		SetPlayerAttachedObject(playerid, 6, 2226, 6, 0.256999, -0.157000, 0.024000, 79.200027, -126.399948, 75.200012, 0.760999, 0.735000, 0.806000);
		SetPVarInt(playerid, "BBOX", 1);
		SendClientMessage(playerid, 0x66CC00ff, "Бумбокс включен. Слышать музыку будут все вокруг вас");
		new Float:pos[3];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		PlayerBBOX[playerid] = CreateDynamicSphere(pos[0], pos[1], pos[2], 30.0);
		AttachDynamicAreaToPlayer(PlayerBBOX[playerid], playerid);
		format(PlayerSound[playerid], 256, "%s", params[0]);
		PlayAudioStreamForPlayer(playerid, PlayerSound[playerid]);
	}
	else
	{
		DestroyDynamicArea(PlayerBBOX[playerid]);
		SendClientMessage(playerid, 0xFE6500FF, "Бумбокс отключен");
		DeletePVar(playerid,"BBOX");
		RemovePlayerAttachedObject(playerid, 6);
		StopAudioStreamForPlayer(playerid);
	}
	return 1;
}
cmd:news(playerid, const params[])
{
    new result[150], string[256];
    if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    if(!IsANews(playerid)) return SendError(playerid,"Вам недоступна эта команда");
    if(PlayerInfo[playerid][pRank]<5)return SendError(playerid,"Вам недоступна эта команда");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[150]",result)) return SendInfo(playerid, "Используйте:{7396FB} /news [текст]");
    if(IsAIP(result))return 1;
    if(GetPVarInt(playerid,"newser")>gettime())return SendError(playerid,"Не флуди");
	new carid = GetPlayerVehicleID(playerid);
	new getradio[40],type;
    switch(PlayerInfo[playerid][pMember])
    {
        case TEAM_RADIO: getradio = "Los-Santos",type = 0;
        case TEAM_RADIOSF: getradio = "San-Fierro",type = 1;
        case TEAM_RADIOLV: getradio = "Las-Venturas",type = 2;
        default: getradio = "",type = 2;
    }
	if(PlayerInfo[playerid][pRedio] != type)return SendError(playerid,"Сначала настройтесь на нужную волну (( /setradio ))");
	if(IsANewsCar(carid) || IsPlayerInRangeOfPoint(playerid,50,23.2580,-20.4954,1231.9240))
	{
	 	format(string,sizeof(string),"[ %s FM ] %s %s[%d]:{FFFFFF} %s",getradio,GetRankName(TEAM_RADIO,PlayerInfo[playerid][pRank]),Name(playerid),playerid,result);
		RsendClientMessageToAll(0x73B461FF,type,string);
		SetPVarInt(playerid,"newser",gettime()+4);
	}
	else SendError(playerid,"Вы не находитесь в транспорте радиостудии");
	return true;
}
cmd:gov(playerid)
{
    new result[400];
    if(!IsAtFrakcia(playerid)) return SendError(playerid, "У Вас нет доступа");
	if(PlayerInfo[playerid][pRank] < 9) return SendError(playerid, "У Вас нет доступа");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
	strcat(result, "Редактировать строку #1\n");
	strcat(result, "Редактировать строку #2\n");
	strcat(result, "Редактировать строку #3\n");
	strcat(result, "{7396FB}Опубликовать новость");
	ShowPlayerDialogEx(playerid, 1228, 2, "{43CD80}Государственные новости",result,"Изменить","Отмена");
	return true;
}
cmd:m(playerid, const params[])
{
    new result[100], string[150];
    if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
	if(sscanf(params,"s[100]",result)) return SendInfo(playerid, "Используйте:{7396FB} /m [текст]");
	if( IsAIP(result) ) return false;
	new carid = GetPlayerVehicleID(playerid);
	if(!IsACop(playerid)) return SendError(playerid,"Вы не полицейский");
	if(!IsPlayerInAnyVehicle(playerid) && !IsACopCar(carid)) return SendError(playerid,"Мегафон доступен в служебном транспорте");
	format(string,sizeof(string),"[M] %s %s(%d): %s",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]),PlayerName[playerid],playerid,result);
	ProxDetector(30,playerid,string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
	SetPlayerChatBubble(playerid, string, COLOR_YELLOW, 10.0, 5000);
	return true;
}

cmd:s(playerid, const params[])
{
    new result[100], string[150];
    if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",result)) return SendInfo(playerid, "Используйте:{7396FB} /s [текст]");
	if(IsAMg(result))
    {
		SendError(playerid,"Вы использовали слово связанное с реальной жизнью, в Role Play режиме они недоступны");
    	SendError(playerid,"Для отправки таких сообщений используйте /b");
		return false;
    }
	if( IsAIP(result) ) return false;
	if(GetPVarInt(playerid,"payer")>gettime())return SendError(playerid,"Не флуди");
	SetPVarInt(playerid,"payer",gettime()+3);
	SetPlayerChatBubble(playerid, result, COLOR_YELLOW, 25.0, 5000);
	format(string,sizeof(string),"%s[%d] кричит: %s!",PlayerName[playerid],playerid,result);
	ProxDetector(25,playerid,string,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
	if(!IsPlayerInAnyVehicle(playerid) && !PlayerLie[playerid])	ApplyAnimation(playerid, "ON_LOOKERS", "shout_01",1000.0,0,0,0,0,0,1);
	return true;
}
cmd:b(playerid, const params[])
{
    new result[100], string[150];
    if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",result)) return SendInfo(playerid, "Используйте:{7396FB} /b [текст]");
	if( IsAIP(result) ) return false;
	format(string,sizeof(string),"(( %s[%d]: %s ))",PlayerName[playerid],playerid,result);
	ProxDetector(10,playerid,string,0xFFE6E6AA,0xFFE6E6AA,0xFFE6E6AA,0xFFE6E6AA,0xFFE6E6AA);
	LastMessage(playerid, string);
	return true;
}
cmd:c(playerid, const params[])
{
    new result[100], string[150];
    if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",result)) return SendInfo(playerid, "Используйте:{7396FB} /c [текст]");
	if(IsAIP(result)) return false;
	format(string,sizeof(string),"%s[%d] сказал(а) шепотом: {FFFFFF}%s",PlayerName[playerid],playerid,result);
	ProxDetector(2,playerid,string,COLOR_SYSTEM,COLOR_SYSTEM,COLOR_SYSTEM,COLOR_SYSTEM,COLOR_SYSTEM);
	return true;
}
cmd:me(playerid, const params[])
{
    new result[100], string[150];
	if(GetPVarInt(playerid,"me")>gettime())return SendError(playerid,"Можно раз в 5 секунд");
    if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",result)) return SendInfo(playerid, "Используйте:{7396FB} /me [действие]");
	if(IsAIP(result)) return false;
	format(string,sizeof(string),"%s[%d] %s",PlayerName[playerid],playerid,result);
	ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
	format(string,sizeof(string),"%s",result);
	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
	SetPVarInt(playerid,"me",gettime()+5);
	return true;
}
cmd:ame(playerid, const params[])
{
    new result[100], string[150];
	if(GetPVarInt(playerid,"me")>gettime())return SendError(playerid,"Можно раз в 5 секунд");
    if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",result)) return SendInfo(playerid, "Используйте:{7396FB} /ame [действие]");
	if(IsAIP(result)) return false;
	format(string,sizeof(string),"%s",result);
	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
	format(string,sizeof(string),"%s[%d] %s",PlayerName[playerid],playerid,result);
	SendClientMessage(playerid, COLOR_PURPLE, string);
	SetPVarInt(playerid,"me",gettime()+5);
	return true;
}
cmd:do(playerid, const params[])
{
    new result[100], string[150];
	if(GetPVarInt(playerid,"do")>gettime())return SendError(playerid,"Можно раз в 5 секунд");
    if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",result)) return SendInfo(playerid, "Используйте:{7396FB} /do [действие]");
	if( IsAIP(result) ) return false;
	format(string,sizeof(string)," %s (( %s[%d] ))",result, PlayerName[playerid],playerid);
	ProxDetector(25,playerid,string,COLOR_DOCHAT,COLOR_DOCHAT,COLOR_DOCHAT,COLOR_DOCHAT,COLOR_DOCHAT);
	format(string,sizeof(string),"%s",result);
	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
	SetPVarInt(playerid,"do",gettime()+5);
	return true;
}
cmd:try(playerid, const params[])
{
    new result[100], string[150], rand = random(10);
	if(GetPVarInt(playerid,"try")>gettime())return SendError(playerid,"Можно раз в 5 секунд");
    if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизоваться");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	if(sscanf(params,"s[100]",result)) return SendInfo(playerid, "Используйте:{7396FB} /try [действие]");
	if( IsAIP(result) ) return false;
	if(rand < 5) format(string,sizeof(string)," %s[%d] %s -{43CD80} Удачно ", PlayerName[playerid],playerid, result);
	else  format(string,sizeof(string)," %s[%d] %s - {FF0000} Неудачно ", PlayerName[playerid],playerid, result);
	ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
	format(string,sizeof(string),"%s",result);
	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
	SetPVarInt(playerid,"try",gettime()+5);
	return true;
}
cmd:todo(playerid, const params[])
{
	new string[128];
	if(!IsPlayerLogged[playerid]) return SendError(playerid,"Сначала нужно авторизироваться");
	if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
	new dstr[300],allstr[400];
	if(sscanf(params, "p<*>s[128]s[128]", dstr, string)) return SendInfo(playerid,"Используйте: {7396FB}/todo Фраза*Действие");
	if( IsAIP(dstr) || IsAIP(string) ) return false;
	format(allstr, sizeof(allstr), "%s - {E59CE5}сказал(а) %s[%d], %s",dstr,PlayerName[playerid],playerid,string);
	ProxDetector(30.0, playerid, allstr, -1,-1,-1,-1,-1);
	return 1;
}
cmd:lmenu(playerid)
{
	if(!IsAtMafia(playerid)&& !IsAtGang(playerid))
	{
		if((PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pRank] >= 9)&& IsACop(playerid)) return ShowPlayerDialogEx(playerid,1214,2,"Меню ПД/ФБР","Пригласить в организацию\nИгроки онлайн\nПеревод\nСписок игроков во фракции\nЗарплата в организации\n{FFCB8C}Изменить название должности/организации","Далее","Отмена");
		else if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pRank] >= 9) return ShowPlayerDialogEx(playerid,1214,2,"Меню государственных организаций","Пригласить в организацию\nИгроки онлайн\nПеревод {D94141}[Недоступно]\nСписок игроков во фракции\nЗарплата в организации\n{FFCB8C}Изменить название должности/организаци","Далее","Отмена");
		else SendError(playerid, "У Вас нет доступа");
	}
	else
	{
		if(PlayerInfo[playerid][pLeader] > 0 || PlayerInfo[playerid][pRank] >= 9)
		{
			new ob4ak[30],string[204];
			switch(OrgInfo[PlayerInfo[playerid][pMember]][oOb4ak])
			{
			case 0: ob4ak = "{407930}Открыт";
			case 1: ob4ak = "{D24449}Закрыт";
			}
			format(string,sizeof(string),"Пригласить в организацию\nИгроки онлайн\nОбщак [%s]\nСписок игроков во фракции\nЗарплата в организации\n{FFCB8C}Изменить название должности/организаци",ob4ak);
			ShowPlayerDialogEx(playerid,1214,2,"Меню криминальных структур",string,"Далее","Отмена");
		}
	}
	return 1;
}
cmd:skin(playerid, const params[])
{
	if(!PlayerInfo[playerid][pMember] || PlayerInfo[playerid][pRank] < 8)return SendError(playerid, "Вам недоступна эта функция");
	if(sscanf(params, "u", params[0])) return SendInfo(playerid, "Используйте: {7396FB}/skin [id]");
	if(!IsPlayerConnected(params[0])) return SendError(playerid, "Игрок не найден");
	if(!IsPlayerLogged[params[0]]) return SendError(playerid,"Игрок не авторизован");
	if(!PlayerInfo[params[0]][pMember]) return SendError(playerid, "Игрок не находится в организации");
	if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SendError(playerid, "Игрок находится в другой организации");
	if(PlayerInfo[params[0]][pRank] > PlayerInfo[playerid][pRank] || PlayerInfo[params[0]][pJailTime] > 0) return SendError(playerid, "Данный сотрудник не нуждается в новой форме");
	if(!TeamDuty[params[0]]) return SendError(playerid, "Данный сотрудник не на работе");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid, 6.0, x, y, z)) return SendError(playerid,"Игрок далеко от вас");
	if(IsPlayerInAnyVehicle(params[0])) return SendError(playerid, "Игрок не должен находиться в транспорте");
	SetPVarInt(playerid, "PlayerChange", params[0]);
	new mes[400];
	for(new i; i < 11; i ++)
	{
		new skinid = (PlayerInfo[params[0]][pSex] == 2)?GOrgSkins[GetTeamID(playerid)][i]:MOrgSkins[GetTeamID(playerid)][i];
		if(!skinid) break;
		if(skinid == PlayerInfo[params[0]][pFracSkin])
		{
			if(!i) format(mes,sizeof(mes),"{7396FB}[%d] {ffffff}(ID %d)",i+1,skinid);
			else format(mes,sizeof(mes),"%s\n{7396FB}[%d] (ID %d)",mes,i+1,skinid);
		}
		else
		{
			if(!i) format(mes,sizeof(mes),"{7396FB}[%d] {ffffff}(ID %d)",i+1,skinid);
			else format(mes,sizeof(mes),"%s\n{7396FB}[%d] {ffffff}(ID %d)",mes,i+1,skinid);
		}
	}
	ShowPlayerDialogEx(playerid,1479,DIALOG_STYLE_LIST,Name(params[0]),mes,"Выбрать","Закрыть");
	return 1;
}
cmd:invite(playerid, const params[])
{
    if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /invite [id]");
	if(!IsPlayerLogged[params[0]])return SendError(playerid, "Игрок не найден");
    if(CuffedTime[params[0]]>0)return SendError(playerid,"Игрок находится в шоковом состоянии");
 	if(PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pRank] < 9) return SendError(playerid,"Отказано в доступе");
	if(PlayerInfo[params[0]][pMember] > 0) return SendError(playerid, "Игрок состоит в другой организации");
	//if(PlayerInfo[playerid][pMember] == TEAM_LSPD || PlayerInfo[playerid][pMember] == TEAM_SFPD || PlayerInfo[playerid][pMember] == TEAM_PDLV || PlayerInfo[playerid][pMember] == TEAM_RCPD) return SendError(playerid, "В полицию можно попасть только переводом из армии");
	if(PlayerInfo[playerid][pMember] == TEAM_FBI)return SendError(playerid,"В ФБР можно попасть только переводом из полиции");
	if(IsAtFrakcia(playerid) && PlayerInfo[params[0]][pBL]!=0)
    {
        SendError(playerid,"Вы не можете принять этого игрока. Возможные причины:");
		SendError(playerid,"- Этот игрок находится в чёрном списке закона");
		return true;
	}
	if(Clother[params[0]]!=-1)return 0;
	if(GetPlayerVirtualWorld(playerid)!=GetPlayerVirtualWorld(params[0]))return 0;
	if(!ProxDetectorS(5.0, playerid, params[0])) return SendError(playerid,"Вы должны находиться рядом с игроком");
	if(InviteOffer[params[0]] != INVALID_PLAYER_ID) return SendError(playerid,"Этому игроку уже было выслано приглашение на вступление в организацию");
	new Leader[15];
	CMDstr = "";
	if(PlayerInfo[params[0]][pWarns] > 0) return SendError(playerid,"Игрока с варном нельзя принять в организацию");
	if(PlayerInfo[playerid][pLeader] > 0) Leader = "Лидер";
	else Leader = "Зам. лидера";
	InviteOffer[params[0]] = playerid;
	format(CMDstr,100,"Вы приглашаете игрока %s к себе в организацию",Name(params[0]));
	SendClientMessage(playerid,COLOR_LIGHTBLUE,CMDstr);
	format(CMDstr,100,"%s %s приглашает вас к себе в организацию %s",Leader, Name(playerid),OrgInfo[GetTeamID(playerid)][oName]);
	ShowPlayerDialogEx(params[0],8,0,"{43CD80}Приглашение",CMDstr,"Принять","Отмена");

	return true;
}
cmd:frisk(playerid, const params[])
{
	if(!IsACop(playerid)) return SendError(playerid,"Вы не полицейский");
	new id,string[200],Drugs[20],Mats[20],Gun[20];
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /frisk [id]");
    if(!ProxDetectorS(1.0,playerid,id)) return SendError(playerid,"Вы далеко от игрока");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    strcat(string,"{FFFFFF}");
    if(SlotValue[id][11] > 0) Mats = "{33AA33}[Есть]\n";
    else Mats = "{FF0000}[Нет]";
    if(SlotValue[id][14] > 0) Drugs = "{33AA33}[Есть]\n";
    else Drugs = "{FF0000}[Нет]";
    new gunid, ammo;
    Gun = "{FF0000}[Нет]";
    for(new i;i < 13;i ++)
    {
        GetPlayerWeaponData(id, i, gunid, ammo);
        if(!gunid || !ammo) continue;
        Gun = "{33AA33}[Есть]\n";
        break;
    }
    format(string, sizeof(string), "Материалы: [{D94141}%s{ffffff}]\n", Mats);
    format(string, sizeof(string), "%sНаркотики: [{D94141}%s{ffffff}]\n", string, Drugs);
    format(string, sizeof(string), "%sОружие: [{D94141}%s{ffffff}]\n", string, Gun);
    ShowPlayerDialogEx(playerid,INVALID_DIALOG_ID,0,Name(id),string,"Скрыть","");
    format(string,sizeof(string)," %s обыскивает %s",PlayerName[playerid],PlayerName[id]);
	ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    return true;
}
cmd:ticket(playerid, const params[])
{
	if(!IsACop(playerid)) return SendError(playerid,"Вы не полицейский");
	new id,string[256],ticket,reason[50];
    if(sscanf(params,"uds[50]",id,ticket,reason)) return SendInfo(playerid, "Используйте:{7396FB} /ticket [id] [сумма] [причина]");
    if(!ProxDetectorS(15.0,playerid,id)) return SendError(playerid, "Вы далеко от игрока");
    if(PlayerInfo[id][pExp] < 15) return SendError(playerid, "Нельзя выписывать штраф игрокам с малым количеством часов");
	if(LastTicket[playerid] == PlayerInfo[id][pID])return SendError(playerid, "Вы недавно выписывали штраф этому игроку");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    if(ticket < 1 || ticket > 10000) return SendError(playerid, "Штраф не менее $1 и не более $10000");
	format(string,sizeof(string),"\n\n\\c{FF4400}Полицейский %s выписал вам штраф\n\n\\c{7396FB}Сумма: $%d\n\\cПричина: %s\n\n\\c{C9EAFF}Оплатить штраф можно в банке, внеся сумму на кредитный счёт",PlayerName[playerid],ticket,reason);
	if(!Dialog_Open(id,0,0,"{43CD80}Штраф",string,"Скрыть","")) SendError(playerid,"Недоступно в данный момент");
	else
	{
		format(string,sizeof(string),"Вы выписали штраф %s[%d] | Сумма: $%d | Причина: %s",Name(id),id,ticket,reason);
		SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		SendClientMessage(playerid,COLOR_LIGHTBLUE,"Сумма штрафа добавлена на кредитный счёт нарушителя");
		format(string,sizeof(string),"[%s] %s %s[%d] выписал штраф %s[%i] в размере $%d с причиной: %s",OrgInfo[PlayerInfo[playerid][pMember]][oName], GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), Name(playerid), playerid, Name(id), id, ticket, reason);
		SendCopsMessage(COLOR_LIGHTBLUE,string);
		PlayerInfo[id][pCredit] += ticket;
		LastTicket[playerid] = PlayerInfo[id][pID];
		GiveMoney(playerid, floatround(ticket/10));
		OrgInfo[GLS[13]][oBank] += ticket;
	}
	return true;
}
cmd:throwfish(playerid, const params[])
{
	new string[100], massa, Fish[20];
	for(new i; i < 5; i ++)
 	{
 		new fish = PlayerFish[playerid][i];
 		if(fish == 0) strcat(string, "{AFAFAF}None\n");
 		else
 		{
 			format(Fish, sizeof(Fish), "{33CCFF}%s %d Kg\n", FishName[fish], FishMassa[playerid][fish]);
 			strcat(string, Fish);
 			massa += FishMassa[playerid][fish];
 		}
 	}
	if(massa > 0)
	{
		format(Fish, sizeof(Fish), "{33CCFF}Всю рыбу %d Kg\n", massa);
		strcat(string, Fish);
	}
 	ShowPlayerDialogEx(playerid,263,2,"{43CD80}Что выбросить?",string,"Выбросить","Отмена");
 	return true;
}
cmd:credit(playerid)
{
	if(PlayerInfo[playerid][pMember]!=TEAM_BANK) return SendError(playerid,"У вас нет доступа");
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
	if(PlayerInfo[playerid][pLeader]==0 && PlayerInfo[playerid][pRank]<9) return SendError(playerid,"Данная функция доступна только лидеру и заместителю банка");
	ShowPlayerDialogEx(playerid,329,2,"{43CD80}Меню банка","{7396FB}[1]{FFFFFF} Процент\n{7396FB}[2]{FFFFFF} Процента\n{7396FB}[3]{FFFFFF} Процента\n{7396FB}[4]{FFFFFF} Процента\n{7396FB}[5]{FFFFFF} Процентов\n{7396FB}[6]{FFFFFF} Процентов","Принять","Отмена");
	return true;
}
cmd:pay(playerid, const params[])
{
	new id,money,string[200];
	if(GetPVarInt(playerid,"payer")>gettime())return SendError(playerid,"Не флуди");
    if(sscanf(params,"ud",id,money)) return SendInfo(playerid, "Используйте:{7396FB} /pay [id] [сумма]");
    if(!ProxDetectorS(3.0,playerid,id)) return SendError(playerid,"Вы далеко от игрока");
	if(playerid == id) return SendError(playerid,"Нельзя передавать деньги самому себе");
	if(money < 1 || GetMoney(playerid) < money) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
	if(PlayerInfo[playerid][pExp] < 10 && money > 200)return SendError(playerid,"Игроки с малым количеством часов могут передавать только по 200$");
	if(money > 10000) return SendError(playerid,"Нельзя передавать больше $10000");
	if(PlayerInfo[playerid][pCredit] > 15000)return SendError(playerid,"Вы не можете перемещать наличность из-за долга в банке");
	if(GetPVarInt(playerid, "showedcoins"))return SendError(playerid, "Нельзя передавать деньги при игре");
	GiveMoney(playerid,-money,"Pay-");
	GiveMoney(id,money,"Pay+");
	SetPVarInt(playerid,"payer",gettime()+2);
	ApplyAnimation(playerid,"DEALER","shop_pay",4.1, 0, 1, 1, 0, 0, 1);
	format(string,sizeof(string),"%s передаёт %s наличные",PlayerName[playerid],PlayerName[id]);
	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
	format(string,sizeof(string),"%s передал вам $%d",PlayerName[playerid],money);
	SendClientMessage(id,COLOR_GRAY,string);
	format(string,sizeof(string),"Вы передали $%d %s",money,PlayerName[id]);
	SendClientMessage(playerid,COLOR_GRAY,string);
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),PlayerInfo[id][pID],Name(id),"Передача наличных",-money,PlayerIp[playerid],PlayerIp[id],GetMoney(playerid));
	return true;
}
cmd:putobject(playerid)
{
	new string[200];
    if(!IsACop(playerid) && !PlayerInfo[playerid][pAdmin]) return SendError(playerid, "Вы не сотрудник PD/FBI");
	if(PlayerInfo[playerid][pRank]<5)return SendError(playerid,"Эта возможность доступна с 5 ранга");
    if(GetPlayerInterior(playerid) != 0 || GetPlayerInterior(playerid)!=0) return SendError(playerid, "Использовать в здании запрещено");
    format(string,sizeof(string),"{43CD80}Осталось: %d обьектов",PlayerInfo[playerid][pObjikt]);
    ShowPlayerDialogEx(playerid,399,2,string,"\
	{7396FB}Ограждение [1]\n\
	{7396FB}Отбойник\n\
	{7396FB}Конус\n\
	{7396FB}Ограждение [2]\n\
	{7396FB}Табличка\n\
	{7396FB}Лежачий полицеский\n\
	{7396FB}Железный забор\n\
	{7396FB}Железный забор [2]\n\
	{FF4400}[ЗНАК] Ограничение скорости\n\
	{FF4400}[ЗНАК] Запрет движения прямо\n\
	{FF4400}[ЗНАК] Закрыто\n\
	{FF4400}[ЗНАК] Stop\n\
	{FF4400}[ЗНАК] Уступить дорогу\n\
	{FF4400}[ЗНАК] Ремонт дороги\n\
	{FF4400}[ЗНАК] Ехать прямо\n\
	{FF4400}[ЗНАК] Поворот налево\n\
	{FF4400}[ЗНАК] Поворот направо\n \n{FFCB8C}Убрать обьект","Принять","Отмена");
    return 1;
}
cmd:demoute(playerid, const params[])
{
	if(PlayerInfo[playerid][pMember]!=TEAM_FBI && PlayerInfo[playerid][pMember]!=TEAM_MERIALS)return SendError(playerid,"Доступно только правительству и FBI");
    if(PlayerInfo[playerid][pRank] < 8) return SendError(playerid,"Отказано в доступе");
    if(!IsPlayerConnected(playerid) ||  !IsPlayerLogged[playerid]) return false;
    new id,string[200],reason[100];
    if(sscanf(params,"us[100]",id,reason)) return SendInfo(playerid, "Используйте:{7396FB} /demoute [id] [причина]");
    if(!ProxDetectorS(5.0, playerid, id, 1)) return SendError(playerid,"Вы далеко от игрока");
	if(!IsAtFrakcia(id)) return SendError(playerid,"Вы можете уволить только гос.служащих");
	if(id == playerid) return SendError(playerid,"Вы не можете уволить сами себя");
	if(PlayerInfo[id][pLeader] > 0 ) return SendError(playerid,"Вы не можете уволить лидера");
	if(IsACop(id))
	{
		if(UsingShield[id])RemovePlayerAttachedObject(id, 6);
	}
	PlayerInfo[id][pMember] = 0;
	PlayerInfo[id][pDCTime]=0;
	SendClientMessage(id,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
	PlayerInfo[id][pRank] = 0;
	pSportZal[id]=0;
	TeamDuty[id] = false;
	format(string,sizeof(string),"{FFFFFF}%s выгнал вас из организации.\nПричина: %s",Name(playerid), reason);
	SendClientMessage(id,COLOR_LIGHTBLUE,string);
	format(string,sizeof(string),"Вы выгнали %s. Причина: %s",Name(id), reason);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	format(string,sizeof(string),"[D]%s[%d] Уволил %s, Причина: %s",Name(playerid),playerid,Name(id), reason);
	SendGosMessage(COLOR_DEPAR,string);
	SetPlayerColor(id,0xEFEFF710);
	_ResetGun(id);
	J_SetPlayerArmour(id,0);
	ResetSpawnInfo(id, 0);
	SetBumSkin(id);
	return true;
}
cmd:uninvite(playerid, const params[])
{
	new string[400];
	if(PlayerInfo[playerid][pRank] < 9 && PlayerInfo[playerid][pLeader] == 0) return SendError(playerid,"Отказано в доступе");
	if(!IsPlayerConnected(playerid) ||  !IsPlayerLogged[playerid]) return false;
	new id,reason[100];
	if(sscanf(params,"us[100]",id,reason)) return SendInfo(playerid, "Используйте:{7396FB} /uninvite [id] [причина]");
    if(IsAIP(reason))return 1;
	if(PlayerInfo[playerid][pRank]==PlayerInfo[id][pRank])return false;
	if(!IsGiveWarn(playerid, id)) return SendError(playerid,"Этот игрок состоит в другой организации");
	if(id == playerid) return SendError(playerid,"Себя нельзя уволить");
	if(PlayerInfo[id][pLeader] > 0 ) return SendError(playerid,"Вы не можете уволить лидера");
	if(IsPlayerInAnyVehicle(id))RemovePlayerFromVehicle_Ex(id);
	if(IsACop(id))
	{
		if(UsingShield[id])RemovePlayerAttachedObject(id, 6);
		PlayerInfo[id][pShield] = 0.0;
	}
	PlayerInfo[id][pMember] = 0;
	PlayerInfo[id][pDCTime] = 0;
	SendClientMessage(id,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
	PlayerInfo[id][pRank] = 0;
	pSportZal[id]=0;
	TeamDuty[id] = false;
	format(string,sizeof(string),"%s выгнал вас из организации.\nПричина: %s",Name(playerid), reason);
	SendClientMessage(id,COLOR_LIGHTBLUE,string);
	format(string,sizeof(string),"%s выгнал %s из организации.\nПричина: %s",Name(playerid),Name(id), reason);
	SendTeamMessage(PlayerInfo[playerid][pMember],COLOR_LIGHTBLUE,string);
	SetPlayerColor(id,0xEFEFF710);
	ResetSpawnInfo(id, 0);
	_ResetGun(id);
	SetBumSkin(id);
	return true;
}
cmd:uninviteoff(playerid, const params[])
{
	if(!PlayerInfo[playerid][pLeader]) return SendError(playerid,"Команда доступна только лидеру организации");
	new kLibName[24];
	if(sscanf(params, "s[24]", kLibName)) return SendInfo(playerid, "Используйте: {7396FB}/uninviteoff [никнейм]");
	if(!strcmp(kLibName, PlayerName[playerid], true)) return SendError(playerid, "Вы ввели свой никнейм");
	new query[256];
	format(query,sizeof(query), "SELECT * FROM `accounts` WHERE `Member` = '%d' AND `NickName` = '%s' LIMIT 1",PlayerInfo[playerid][pMember],kLibName);
	new Cache:resultcache = mysql_query(mysql, query, true);
	if(cache_num_rows())
	{
		new uninviteid;
		sscanf(kLibName, "u", uninviteid);
		if(IsPlayerConnected(uninviteid) && IsPlayerLogged[uninviteid]) return SendError(playerid, "Игрок, которого вы хотите уволить, в сети. Используйте /uninvite");
		format(query, sizeof(query), "%s уволил в оффлайне %s",PlayerName[playerid], kLibName);
		SendTeamMessage(PlayerInfo[playerid][pMember],COLOR_ORANGE,query);
		mysql_format(mysql, query, sizeof(query), "UPDATE `accounts` SET `Member` = '0', `Rank` = '0' WHERE `NickName` = '%e' AND `Member`='%d' LIMIT 1", kLibName, PlayerInfo[playerid][pMember]);
		mysql_pquery(mysql, query);
	}
	else SendError(playerid,"Игрок с введенным ником не найден в Вашей организации");
	cache_delete(resultcache, mysql);
	return 1;
}
cmd:rang(playerid, const params[])
{
	if(PlayerInfo[playerid][pMember]<=0)return false;
    if(PlayerInfo[playerid][pRank] < 9 && !PlayerInfo[playerid][pLeader]) return SendError(playerid,"Отказано в доступе");
	if(sscanf(params,"ud",params[0],params[1])) return SendInfo(playerid, "Используйте:{7396FB} /rang [id] [ранг]");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendError(playerid,"Вы должны находиться рядом с игроком");
    if(PlayerInfo[params[0]][pLeader] > 0 ) return SendError(playerid,"Вы не можете изменять ранг лидеру");
    if(params[1] < 1) return SendError(playerid,"Нельзя понизить до этого ранга");
	if(!IsPlayerConnected(params[0])) return SendError(playerid, "Игрок не найден");
	if(PlayerInfo[playerid][pRank] <= PlayerInfo[params[0]][pRank]) return SendError(playerid, "Вы не можете повысить/понизить этого игрока");
	if(PlayerInfo[playerid][pRank] == 9 && params[1] > 8) return SendError(playerid,"Нельзя выдать ранг больше 8");
 	if(params[1] > 9) return SendError(playerid,"Нельзя повысить до этого ранга");
	if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SendError(playerid, "Игрок находится в другой организации");
	if(MedCardInfo[params[0]][mcState] < 2 && IsAtFrakcia(playerid) && params[1] >= 4)return SendError(playerid, "Игрок психически нездоров");
	CMDstr = "";
	format(CMDstr,100,"%s %s[%d] %s вас до %s[%d]",GetRankName(PlayerInfo[playerid][pMember], PlayerInfo[playerid][pRank]), Name(playerid), playerid, PlayerInfo[params[0]][pRank] > params[1] ? ("понизил"):("повысил"),GetRankName(PlayerInfo[playerid][pMember], params[1]),params[1]);
	SendClientMessage(params[0],COLOR_LIGHTBLUE,CMDstr);
	format(CMDstr,100,"Вы %sи игрока %s до %s[%d]",PlayerInfo[params[0]][pRank] > params[1] ? ("понизил"):("повысил"),Name(params[0]),GetRankName(PlayerInfo[playerid][pMember], params[1]),params[1]);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,CMDstr);
	PlayerInfo[params[0]][pRank] = params[1];
	PlayerInfo[params[0]][pNeedMessage]=1;			
	PlayerInfo[params[0]][pNeedMessage]=0;
	return true;
}
cmd:spawn(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3 && PlayerInfo[playerid][pAdmin] > 0)
	{
		if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
		PlayerSpawn(playerid);
		return 1;
	}
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params, "d", params[0]))return PlayerSpawn(playerid),SendClientMessage(playerid, COLOR_BLUE, "Вы можете спавнить игроков, указав {66cc00}/spawn ID");
	if(!IsPlayerConnected(params[0]))return SendError(playerid, "Игрок не подключен");
	if(!IsPlayerLogged[params[0]])return SendError(playerid, "Игрок не авторизован");
	if(params[0] == playerid)return SendInfo(playerid,"Используйте: {7396FB}/spawn");
	PlayerSpawn(params[0]);
	new str[144];
	format(str, sizeof(str), "Администратор %s заспавнил игрока %s[%d]", PlayerName[playerid], PlayerName[params[0]], params[0]);
	SendAdminsMessage(COLOR_GRAY, str);
	return 1;
}
cmd:pos(playerid, const params[])
{
	if (PlayerInfo[playerid][pAdmin] < 5) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new Float:x,Float:y,Float:z;
	if(sscanf(params, "fffdd", x,y,z, params[0], params[1])) return SendInfo(playerid, "Используйте: {7396FB}/pos [x] [y] [z] [вирт.мир] [интерьер]");
	SetPlayerPos(playerid, x,y,z);
	SetPlayerVirtualWorld(playerid, params[0]);
	SetPlayerInterior(playerid, params[1]);
	return 1;
}
cmd:ztp(playerid)
{
	ToCheat(1, playerid);
	return 1;
}
cmd:acpanel(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new string[3000];
	if(sscanf(params, "dd",params[0],params[1]) || (params[1] < 0 || params[1] > 1))
	{
		format(string, sizeof string,"\
		{ffffff}0 | Anti-AirBreak (onfoot): {7396FB}%d\n\
		{ffffff}1 | Anti-AirBreak (in vehicle): {7396FB}%d\n\
		{ffffff}2 | Anti-teleport hack (onfoot): {7396FB}%d\n\
		{ffffff}3 | Anti-teleport hack (in vehicle): {7396FB}%d\n\
		{ffffff}4 | Anti-teleport hack (into/between vehicles): {7396FB}%d\n\
		{ffffff}5 | Anti-teleport hack (vehicle to player): {7396FB}%d\n\
		{ffffff}6 | Anti-teleport hack (pickups): {7396FB}%d\n\
		{ffffff}7 | Anti-FlyHack (onfoot): {7396FB}%d\n\
		{ffffff}8 | Anti-FlyHack (in vehicle): {7396FB}%d\n\
		{ffffff}9 | Anti-SpeedHack (onfoot): {7396FB}%d\n\
		{ffffff}10 | Anti-SpeedHack (in vehicle): {7396FB}%d\n\
		{ffffff}11 | Anti-Health hack (in vehicle): {7396FB}%d\n\
		{ffffff}12 | Anti-Health hack (onfoot): {7396FB}%d\n\
		{ffffff}13 | Anti-Armour hack: {7396FB}%d\n\
		{ffffff}14 | Anti-Money hack: {7396FB}%d\n\
		{ffffff}15 | Anti-Weapon hack: {7396FB}%d\n\
		{ffffff}16 | Anti-Ammo hack (add): {7396FB}%d\n\
		{ffffff}17 | Anti-Ammo hack (infinite): {7396FB}%d\n\
		{ffffff}18 | Anti-Special actions hack: {7396FB}%d\n\
		{ffffff}19 | Anti-GodMode from bullets (onfoot): {7396FB}%d\n\
		{ffffff}20 | Anti-GodMode from bullets (in vehicle): {7396FB}%d\n\
		{ffffff}21 | Anti-Invisible hack: {7396FB}%d\n\
		{ffffff}22 | Anti-lagcomp-spoof: {7396FB}%d\n\
		{ffffff}23 | Anti-Tuning hack: {7396FB}%d\n\
		{ffffff}24 | Anti-Parkour mod: {7396FB}%d\n\
		{ffffff}25 | Anti-Quick turn: {7396FB}%d\n\
		{ffffff}26 | Anti-Rapid fire: {7396FB}%d\n\
		{ffffff}27 | Anti-FakeSpawn: {7396FB}%d\n\
		{ffffff}28 | Anti-FakeKill: {7396FB}%d\n\
		{ffffff}29 | Anti-Pro Aim: {7396FB}%d\n\
		{ffffff}30 | Anti-CJ run: {7396FB}%d\n\
		{ffffff}31 | Anti-CarShot: {7396FB}%d\n\
		{ffffff}32 | Anti-CarJack: {7396FB}%d\n\
		{ffffff}33 | Anti-UnFreeze: {7396FB}%d\n\
		{ffffff}34 | Anti-AFK Ghost: {7396FB}%d\n\
		{ffffff}35 | Anti-Full Aiming: {7396FB}%d\n\
		{ffffff}36 | Anti-Fake NPC: {7396FB}%d\n\
		{ffffff}37 | Anti-Reconnect: {7396FB}%d\n\
		{ffffff}38 | Anti-High ping: {7396FB}%d\n\
		{ffffff}39 | Anti-Dialog hack: {7396FB}%d\n\
		{ffffff}40 | Protection from the sandbox: {7396FB}%d\n\
		{ffffff}41 | Protection against an invalid version: {7396FB}%d\n\
		{ffffff}42 | Anti-Rcon hack: {7396FB}%d\n\
		{ffffff}43 | Anti-Tuning crasher: {7396FB}%d\n\
		{ffffff}44 | Anti-Invalid seat crasher: {7396FB}%d\n\
		{ffffff}45 | Anti-Dialog crasher: {7396FB}%d\n\
		{ffffff}46 | Anti-Attached object crasher: {7396FB}%d\n\
		{ffffff}47 | Anti-Weapon Crasher: {7396FB}%d\n\
		{ffffff}48 | Flood protection connects to one slot: {7396FB}%d\n\
		{ffffff}49 | Anti-flood callback functions: {7396FB}%d\n\
		{ffffff}50 | Anti-flood change seat: {7396FB}%d\n\
		{ffffff}51 | Anti-Ddos: {7396FB}%d\n\
		{ffffff}52 | Anti-NOP's: {7396FB}%d",
		ac_ACAllow[0],ac_ACAllow[1],ac_ACAllow[2],ac_ACAllow[3],ac_ACAllow[4],ac_ACAllow[5],
		ac_ACAllow[6],ac_ACAllow[7],ac_ACAllow[8],ac_ACAllow[9],ac_ACAllow[10],ac_ACAllow[11],
		ac_ACAllow[12],ac_ACAllow[13],ac_ACAllow[14],ac_ACAllow[15],ac_ACAllow[16],ac_ACAllow[17],
		ac_ACAllow[18],ac_ACAllow[19],ac_ACAllow[20],ac_ACAllow[21],ac_ACAllow[22],ac_ACAllow[23],
		ac_ACAllow[24],ac_ACAllow[25],ac_ACAllow[26],ac_ACAllow[27],ac_ACAllow[28],ac_ACAllow[29],
		ac_ACAllow[30],ac_ACAllow[31],ac_ACAllow[32],ac_ACAllow[33],ac_ACAllow[34],ac_ACAllow[35],
		ac_ACAllow[36],ac_ACAllow[37],ac_ACAllow[38],ac_ACAllow[39],ac_ACAllow[40],ac_ACAllow[41],
		ac_ACAllow[42],ac_ACAllow[43],ac_ACAllow[44],ac_ACAllow[45],ac_ACAllow[46],ac_ACAllow[47],
		ac_ACAllow[48],ac_ACAllow[49],ac_ACAllow[50],ac_ACAllow[51],ac_ACAllow[52]);
		ShowPlayerDialogEx(playerid, 0, 0, "{43CD80}Помощь",string,"Скрыть","");
		SendClientMessage(playerid, COLOR_SYSTEM, "--------------------------------------");
		SendClientMessage(playerid, COLOR_SYSTEM, STATS_STRING_1);
		SendClientMessage(playerid, COLOR_SYSTEM, STATS_STRING_2);
		format(string, sizeof string, STATS_STRING_3, ac_sInfo[0]);
		SendClientMessage(playerid, COLOR_SYSTEM, string);
		format(string, sizeof string, STATS_STRING_4, ac_sInfo[1]);
		SendClientMessage(playerid, COLOR_SYSTEM, string);
		format(string, sizeof string, STATS_STRING_5, ac_sInfo[2]);
		SendClientMessage(playerid, COLOR_SYSTEM, string);
		format(string, sizeof string, STATS_STRING_6, ac_sInfo[3]);
		SendClientMessage(playerid, COLOR_SYSTEM, string);
		format(string, sizeof string, STATS_STRING_7, ac_sInfo[4]);
		SendClientMessage(playerid, COLOR_SYSTEM, string);
		format(string, sizeof string, STATS_STRING_8, ac_sInfo[5]);
		SendClientMessage(playerid, COLOR_SYSTEM, string);
		SendClientMessage(playerid, COLOR_SYSTEM, "--------------------------------------");
		return SendInfo(playerid, "Используйте: {7396FB} /acpanel [id] [ 1/0 ]");
	}
	EnableAntiCheat(params[0], params[1]);
	format(string,128,"[AC]: Античит: %i | Статус: %i",params[0], params[1]);
	SendClientMessage(playerid,COLOR_RED,string);
	return true;
}
cmd:acceptadmin(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin]<5)return false;
	if(ADuty[playerid]!=228) return SendError(playerid, NO_DUTY_TEXT);
	if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /acceptadmin [id]");
	if(!PlayerInfo[params[0]][pAdmin])return SendError(playerid, "Неверный ID");
	if(params[0]==playerid)return SendError(playerid, "Неверный ID");
	SetString(PlayerCheckIP2[params[0]], PlayerCheckIP1[params[0]]);
	SetString(PlayerCheckIP1[params[0]], PlayerInfo[params[0]][pLastIP]);
	SetString(PlayerInfo[params[0]][pLastIP], PlayerIp[params[0]]);
	SendClientMessage(playerid,COLOR_VALIK,"Вы подтвердили права администратора");
	SendClientMessage(params[0],COLOR_VALIK,"Вам подтвердили права администратора");
	return true;
}
cmd:jp(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 2) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
	SendInfo(playerid, "Чтобы скинуть JetPack нажмите клавишу {7396FB}'F'");
	return 1;
}
cmd:apanel(playerid)
{
	if(!ConfirmIP(playerid) && PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] < 8)
	{
		new string[128];
		SendClientMessage(playerid, COLOR_RED, "С вашего IP-Адреса наблюдается попытка несанкционированного доступа к панели администрирования");
		format(string,sizeof(string),"%s[%d] подозревается во взломе, проверьте его и авторизируйте через /acceptadmin",PlayerName[playerid], playerid);
		SendAdminsMessage(COLOR_RED,string, 1);
		format(string,sizeof(string),"[A] IP-Адрес не совпадает с тремя последними [GET IP:%s]",PlayerIp[playerid]);
		SendAdminsMessage(COLOR_RED, string, 1);
		format(string,sizeof(string),"[A] [LAST IP:%s]",PlayerInfo[playerid][pLastIP]);
		SendAdminsMessage(COLOR_RED, string, 1);
		format(string,sizeof(string),"[A] [Check IP 1:%s]",PlayerCheckIP1[playerid]);
		SendAdminsMessage(COLOR_RED, string, 1);
		format(string,sizeof(string),"[A] [Check IP 2:%s]",PlayerCheckIP2[playerid]);
		SendAdminsMessage(COLOR_RED, string, 1);
		return false;
	}
	if(ADuty[playerid]!=228)
	{
		new mquery[125],Cache:resultcache;
		mysql_format(mysql, mquery, sizeof(mquery), "select * from `acc_adm` where `login` = '%e' limit 1", Name(playerid));
		resultcache = mysql_query(mysql, mquery,true);
		if(cache_num_rows())
		{
			if(PlayerInfo[playerid][pMember]) return SendError(playerid, "Покиньте организацию и повторите попытку");
			if(PlayerInfo[playerid][pHelper]) return SendError(playerid, "Покиньте пост хелпера и повторите попытку");
			if(PlayerInfo[playerid][AuthAct] == 0)return SendError(playerid, "У Вас не подключен Google Authenticator");
			cache_delete(resultcache, mysql);
			ShowPlayerDialogEx(playerid,210,1,"{43CD80}Первый вход в систему","{FFFFFF}Придумайте пароль для авторизации в системе администрирования\n\n{D94141}Данный пароль будет у вас запрашиваться при каждом входе","Готово","Отмена");
			return 1;
		}
		cache_delete(resultcache, mysql);
	}
	if(ADuty[playerid]!=228 && PlayerInfo[playerid][pAdmin])return ShowPlayerDialogEx(playerid,211,1,"{43CD80}Авторизация","{FFFFFF}Введите ваш пароль от админ-панели","Готово","Отмена");
	if(ADuty[playerid]==228)ShowPlayerDialogEx(playerid, 265, 2, "{D94141}Панель администратора", "{ffffff}\
	[1] Список доступных команд\n\
	[1] Список администраторов онлайн\n\
	[4] Очистить чат\n\
	[3] Заправить машины\n\
	[2]{FF0000} Список заблаченных\n{ffffff}\
	[1] Заспавниться\n\
	[2] Починить машину\n\
	[3] Спавн транспорта\n\
	[3]{FF0000} Список забаненных{ffffff}\n\
	[4] Список лидеров\n\
	[8]{D94141} PayDay\n\
	[8]{D94141} Настройки сервера\n\
	[3] Мониторинг баннеров\n\
	[5] {43CD80}Пополнить склады организациям\n{ffffff}\
	[5]{D94141} Список всех администраторов\n{ffffff}\
	[9]{D94141} Устроить гонку\n\
	[5] {43CD80}Пополнить склад фермы и грузчиков\n\
	[4] Очистка всех вопросов/жалоб\n\
	[8] {D94141}Промо-акции{FFFFFF}\n\
	[5] Заявки на смену названий рангов/организаций\n\
	[3] Онлайн лидеров/администраторов", "Выбор", "Отмена");
	return true;
}
cmd:sethp(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(GetPVarInt(playerid,"sethp")>gettime())return SendError(playerid,"Можно раз в 5 секунд");
	new id, Float:hp, string[256];
    if(sscanf(params,"uf",id,hp)) return SendInfo(playerid, "Используйте:{7396FB} /sethp [id] [ammount]");
    if(hp>150)return SendInfo(playerid, "Используйте:{7396FB} /sethp [id] hp < 150");
    if(!IsPlayerConnected(id)) return false;
	J_SetPlayerHealth(id,hp);
	format(string,sizeof(string),"[A] %s[%d] установил игроку %s[%d] %.0f ХП",Name(playerid),playerid,Name(id),id,hp);
	SendAdminsMessage(COLOR_GRAY,string);
	SetPVarInt(playerid,"sethp",gettime()+5);
	return true;
}
cmd:a(playerid, const params[])
{
	if(!PlayerInfo[playerid][pAdmin]) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new result[150], string[200];
    if(sscanf(params,"s[150]",result)) return SendInfo(playerid, "Используйте:{7396FB} /a [текст]");
	format(string,sizeof(string),"[A] %s[%d]: %s",Name(playerid),playerid,result);
    SendAdminsMessage(COLOR_YELLOW,string);
	return true;
}
cmd:iint(playerid, const params[])
{
    if(PlayerInfo[playerid][pAdmin] < 3) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"d",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /iint [id]");
    SetPlayerInterior(playerid,params[0]);
	return true;
}
cmd:vw(playerid, const params[])
{
    if(PlayerInfo[playerid][pAdmin] < 3) return 1;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"dd",params[0], params[1])) return SendError(playerid, "Используй: /vw [id] [vw]");
	if(params[1] < 0 || params[1] > 100000)return SendClientMessage(playerid,COLOR_GRAY,"ID мира от 0 до 100000");
	new temp[145];
	format(temp, sizeof(temp), "[A] Администратор %s[%d] переместил в %d вирт.мир %s[%d]",  Name(playerid),playerid,params[1],Name(params[0]),params[0]);
	SendAdminsMessage(COLOR_GRAY, temp);
	SetPlayerVirtualWorld(params[0],params[1]);
	return true;
}
cmd:getvirt(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 4) return 1;
	new temp[30];
	format(temp,sizeof(temp),"Вы сейчас в %d вирт.мире",GetPlayerVirtualWorld(playerid));
	SendClientMessage(playerid,COLOR_GRAY,temp);
	return 1;
}
cmd:hpall(playerid, const params[])
{
	new string[300];
    if(PlayerInfo[playerid][pAdmin] < 3) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new Float:id,Float:x,Float:y,Float:z;
    if(sscanf(params,"f",id)) return SendInfo(playerid, "Используйте:{7396FB} /hpall [радиус]");
    if(id<1 || id > 100)return SendInfo(playerid, "Используйте:{7396FB} /hpall [радиус > 0 или < 100]");
    new num;
    foreach(new i:Player)
    {
        if(IsPlayerLogged[i])
        {
	        GetPlayerPos(playerid,x,y,z);
	        if(IsPlayerInRangeOfPoint(i,id,x,y,z))
	        {
	            J_SetPlayerHealth(i,100);
	            num++;
	        }
		}
    }
    format(string,sizeof(string),"[Информация] {FFFFFF}Вы выдали хп %d игрокам в вашем радиусе",num);
    SendClientMessage(playerid,COLOR_GREEN,string);
    format(string,sizeof(string),"[A] %s выдал здоровье %d игрокам",PlayerName[playerid],num);
    SendAdminsMessage(COLOR_GREEN,string);
    return true;
}
cmd:gunall(playerid, const params[])
{
	new string[300],num;
    if(PlayerInfo[playerid][pAdmin] < 3) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new Float:x,Float:y,Float:z;
    new Float:id,mid,did;
    if(sscanf(params,"fii",id,mid,did)) return SendInfo(playerid, "Используйте:{7396FB} /gunall  [radius] [gunid] [ammo]");
    if(id<1 || id > 100)return SendInfo(playerid, "Используйте:{7396FB} /gunall [радиус > 0 или < 100]");
    foreach(new i:Player)
    {
        if(IsPlayerLogged[i])
        {
	        GetPlayerPos(playerid,x,y,z);
	        if(IsPlayerInRangeOfPoint(i,id,x,y,z)) _SetGun(i,mid,did),num++;
		}
    }
    format(string,sizeof(string),"[A] %s выдал оружие %s %d игрокам",PlayerName[playerid],GunName(mid),num);
    SendAdminsMessage(COLOR_GREEN,string);
    return true;
}
////
cmd:weapall(playerid, const params[])
{
	new string[300],num;
    if(PlayerInfo[playerid][pAdmin] < 3) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new Float:x,Float:y,Float:z;
    new Float:id;
    if(sscanf(params,"f",id)) return SendInfo(playerid, "Используйте:{7396FB} /weapall  [radius]");
    if(id<1 || id > 100)return SendInfo(playerid, "Используйте:{7396FB} /weapall [радиус > 0 или < 100]");
    GetPlayerPos(playerid,x,y,z);
    foreach(new i:Player)
    {
        if(IsPlayerLogged[i])
        {
	        if(IsPlayerInRangeOfPoint(i,id,x,y,z))
	        {
	            _ResetGun(i);
	            num++;
	        }

		}
    }
    format(string,sizeof(string),"[A] %s удалил оружие %d игрокам",PlayerName[playerid],num);
    SendAdminsMessage(COLOR_GREEN,string);
    return true;
}
////
cmd:givegun(playerid, const params[])
{
	new string[100];
	if(PlayerInfo[playerid][pAdmin] < 3) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"uii",params[0],params[1],params[2])) return SendInfo(playerid, "Используйте:{7396FB} /givegun [id] [gunid] [ammo]");
 	if(params[2]>500)return SendError(playerid,"Не больше 500 патронов");
	_SetGun(params[0],params[1],params[2]);
	format(string,sizeof(string),"[A] %s [ID: %d] выдал %s игроку %s[%d] ",Name(playerid),playerid,GunName(params[1]),Name(params[0]),params[0]);
	SendAdminsMessage(COLOR_GRAY,string,1);
	new weapname[25];
	GetWeaponName(params[0], weapname, 25);
	return true;
}

cmd:ao(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new
        result[150],
		string[256];
	if(PlayerInfo[playerid][pAdmin]<5)
		if(GLS[35]>=5)return SendError(playerid,"В общий чат можно писать не более 5 строк в 10 минут");
    if(sscanf(params,"s[150]",result)) return SendInfo(playerid, "Используйте:{7396FB} /ao [текст]");
    if(IsAIP(result))return 1;
	format(string,sizeof(string),"(( Администратор %s: %s ))",Name(playerid),result);
    SendClientMessageToAll(COLOR_LIGHTRED,string);
    GLS[35]++;
	return true;
}
cmd:taxi(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	if( PlayerInfo[playerid][pJob] != JOB_TAXI)return SendError(playerid,"Вы не таксист");
	if(!IsATaxi(carid))return false;
	if(!TaxiTarif[playerid]) Dialog_Open(playerid,56,1,"{43CD80}Тариф","\n\n\\c{FFFFFF}Введите ваш тариф и слоган через запятую\n\n{7396FB}\\cТариф от $1 до $100\n\\cСлоган не более 10-и символов\n\n\\c{514FFB}Пример: 100,Форсаж\n\n","Далее","Отмена");
	else SendError(playerid,"Вы уже установили тариф");
	return true;
}
cmd:kiss(playerid,const params[])
{
	new string[300];
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /kiss [id]");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0]))return 1;
	if(animan[playerid]==1 || animan[params[0]]==1) return SendError(playerid,"Вы уже используете анимации");
 	if(PlayerInfo[playerid][pHeal] > 0 || PlayerInfo[params[0]][pHeal] > 0)return SendError(playerid,"В больнице нельзя использовать");
    if(Cuffed[playerid] || Cuffed[params[0]]) return SendError(playerid,"Вы скованы и не можете двигаться");
    if(CuffedTime[playerid] || CuffedTime[params[0]]) return SendError(playerid,"Вы парализованы");
	if(GetPlayerVirtualWorld(playerid)==534 || GetPlayerVirtualWorld(params[0])==534)return false;
	if(PlayerInfo[playerid][oInTir]==1) return false;
	if(IsPlayerConnected(params[0]))
	{
		if(playerid == params[0]) return SendError(playerid, "Вы не можете поцеловать сами себя");
		if(!ProxDetectorS(3.0,playerid,params[0])) return SendError(playerid,"Вы далеко от игрока");
		format(string,sizeof(string),"Поцеловал(a) %s",PlayerName[params[0]]);
	    SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);

        format(string,sizeof(string),"Поцеловал(a) %s",PlayerName[playerid]);
	    SetPlayerChatBubble(params[0], string, COLOR_PURPLE, 30.0, 5000);

		new Float:angle;
		GetPlayerFacingAngle(playerid, angle);
		J_SetPlayerFacingAngle(params[0], angle + 180);

		ApplyAnimation(playerid,"BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0);
		ApplyAnimation(params[0],"BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0);

	}
	return true;
}
cmd:piss(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))return 1;
	if(animan[playerid]==1) return SendError(playerid,"Вы уже используете анимации");
 	if(PlayerInfo[playerid][pHeal] > 0)return SendError(playerid,"В больнице нельзя использовать");
    if(Cuffed[playerid]) return SendError(playerid,"Вы скованы и не можете двигаться");
    if(CuffedTime[playerid]) return SendError(playerid,"Вы парализованы");
	SetPlayerSpecialAction(playerid, 68); 
	return 1;
}
cmd:iznas(playerid, const params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "Нельзя использовать в машине");
	if(sscanf(params, "u", params[0])) return SendInfo(playerid, "Используйте:{7396FB} /iznas [id]");
	if(!IsPlayerConnected(params[0])) return SendError(playerid, "Игрок не найден");
	if(!ProxDetectorS(8.0, playerid, params[0])) return SendError(playerid, "Игрок далеко от вас");
	if(Iznas[playerid]>gettime())return SendClientMessage(playerid, COLOR_LIGHTRED, "Жертва оказала сопротивление и вызвала наряд полиции");
	new Float:HP;
	GetPlayerHealth(playerid,HP);
	if(HP <= 30) return SendClientMessage(playerid, COLOR_LIGHTRED, "Ваше здоровье не позволяет совершить данное злодеяние");
	if(params[0] == playerid) return SendError(playerid, "Вы указали свой ID");
	Iznas[playerid]=gettime()+120;
	new wanted = PlayerInfo[playerid][pWanted];
	if(wanted+2 > 6)wanted = 6;
	else wanted += 2;
	new string[128];
	SetPlayerCriminal(params[0],playerid,wanted,"Изнасилование");
	switch(random(3))
	{
	case 0:
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Жертва вырвалась, сильно ударив вас в пах, и убежала");
			J_SetPlayerHealth(playerid, HP - 25.0);
			return 1;
		}
	default:
		{
			new Float:angle;
			GetPlayerFacingAngle(playerid, angle);
			SetPlayerFacingAngle(params[0], angle + 180);
			GetPlayerHealth(params[0],HP);
			J_SetPlayerHealth(params[0], HP - 25.0);
			format(string, sizeof(string), "%s изнасиловал(а) %s",PlayerName[playerid] ,PlayerName[params[0]]);
			ProxDetector(15.0, playerid, string, COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
			ApplyAnimation(params[0], "SNM", "SPANKINGW",4.1,0,1,1,1,1,1);
			ApplyAnimation(playerid, "SNM", "SPANKEDW",4.1,0,1,1,1,1,1);
		}
	}
	return 1;
}
cmd:anims(playerid, const params[])
{
	if(GetPlayerVirtualWorld(playerid)==534)return false;
	if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid,"В машине вы не можете использовать анимации");
    if(animan[playerid]==1) return SendError(playerid,"Вы уже используете анимации");
	if(PlayerInfo[playerid][pHeal] > 0)return SendError(playerid,"В больнице нельзя использовать анимации");
    if(Cuffed[playerid]) return SendError(playerid,"Вы скованы и не можете двигаться");
    if(CuffedTime[playerid]) return SendError(playerid,"Вы парализованы");
    if(sscanf(params, "i", params[0]) || params[0] == 0)
	{
		static list_animations [] =
			"1. Танец 1\n2. Танец 2\n3. Танец 3\n4. Танец 4\n5. Танец 5\n6. Танец 6\n\
                7. Махать рукой\n8. Лечь на землю\n9. Походка пьяного\n10. Кувыркаться\n\
                11. Попрощаться\n12. Читать рэп\n13. Укрыться\n14. Подложить бомбу\n\
                15. Надеть маску\n16. Вытянуть руку перед собой\n17. Сложить руки вместе\n\
                18. Съел что-то не то...\n19. Перекусить\n20. Шлёпнуть кому-то по заднице\n\
                21. Предложить наркотики\n22. Эффект электрошокера\n23. Мужское курение\n\
                24. Женское курение\n25. Присесть\n26. Восточное единоборство\n27. Выпить напиток\n\
                28. Танец на одной ноге\n29. Поза вратаря\n30. Facepalm\n\
                31. Элемент восточного танца\n32. Позвать кого-то\n33. Руки вверх!\n\
                34. Спать на боку\n35. Спать на спине\n36. Смотреть по сторонам\n\
                37. Облокотиться на бок\n38. Толкнуть боком\n39. Раздумье\n\
                40. Лечь, оперевшись на ладонь\n41. Сесть на стул\n\
                42. Сидеть уставшим за компьютером\n43. Сидеть за столом\n\
                44. Сидеть и печатать\n45. Взять что-то и рассмотреть\n\
                46. Сесть, закинув ногу на ногу\n47. Отказаться от чего-либо\n\
                48. Поцелуй 1\n49. Поцелуй 2\n50. Поцелуй 3\n\
                51. Размахивать руками на месте\n52. Искуственное дыхание\n\
                53. Пощёчины для лежачего\n54. Подглядывать через что-то\n\
                55. Движение тореодора\n56. Сесть на стул (2)\n57. Сесть на стул (3)\n\
                58. Смотреть наверх\n59. Указать рукой наверх\n60. Быть в страхе\n\
                61. Призывать к чему-либо\n62. Сходить по-маленькому\n63. Гангстерский жест\n\
                64. Голосовать на остановке\n65. Удар ногой\n66. Стучаться в дверь\n\
                67. Устроить бунт\n68. Пританцовывать\n69. Лечь на землю (2)\n\
                70. Плохое самочувствие\n71. Приветствие 1\n72. Приветствие 2\n\
                73. Приветствие 3\n74. Приветствие 4\n{66cc00}Информация";
		ShowPlayerDialogEx(playerid,133,DIALOG_STYLE_LIST, "{43CD80}Список анимаций", list_animations, "Выбрать", "Отмена");
		return 1;
	}
	if(params[0] < 1 || params[0] > 74) return SendError(playerid, "Номер анимации от 1 до 74");
	switch(params[0]-1)
	{
	case 0: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
	case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
	case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
	case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
	case 4: ApplyAnimation(playerid, "DANCING", "DAN_Left_A" ,4.1,1,0,0,0,0,0);
	case 5: ApplyAnimation(playerid, "DANCING", "dnce_M_a" ,4.1,1,0,0,0,0,0);
	case 6: ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop" ,4.1,1,0,0,0,0,0);
	case 7: ApplyAnimation(playerid, "BEACH", "bather" ,4.1,1,0,0,0,0,0);
	case 8: ApplyAnimation(playerid, "ped", "WALK_drunk" ,4.1,1,1,1,0,0,0);
	case 9: ApplyAnimation(playerid, "ped", "Crouch_Roll_L" , 4.1,1,1,1,0,0,0);
	case 10: ApplyAnimation(playerid, "ped", "endchat_03" ,4.1,1,0,0,0,0,0);
	case 11: ApplyAnimation(playerid, "benchpress", "gym_bp_celebrate" ,4.1,1,0,0,0,0,0);
	case 12: ApplyAnimation(playerid, "ped", "cower" ,4.1,1,0,0,0,0,0);
	case 13: ApplyAnimation(playerid, "BOMBER", "BOM_Plant" ,4.1,0,0,0,0,0,0);
	case 14: ApplyAnimation(playerid, "SHOP", "ROB_Shifty" ,4.1,0,0,0,0,0,0);
	case 15: ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat" ,4.1,1,0,0,0,0,0);
	case 16: ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop" ,4.1,1,0,0,0,0,0);
	case 17: ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P" ,4.1,0,0,0,0,0,0);
	case 18: ApplyAnimation(playerid, "FOOD", "EAT_Burger" ,4.1,0,0,0,0,0,0);
	case 19: ApplyAnimation(playerid, "SWEET", "sweet_ass_slap" ,4.1,0,0,0,0,0,0);
	case 20: ApplyAnimation(playerid, "DEALER", "DEALER_DEAL" ,4.1,0,0,0,0,0,0);
	case 21: ApplyAnimation(playerid, "CRACK", "crckdeth2" ,4.1,1,0,0,0,0,0);
	case 22: ApplyAnimation(playerid, "LOWRIDER", "M_smklean_loop" ,4.1,1,0,0,0,0,0);
	case 23: ApplyAnimation(playerid, "LOWRIDER", "F_smklean_loop" ,4.1,1,0,0,0,0,0);
	case 24: ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop" ,4.1,1,0,0,0,0,0);
	case 25: ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop" ,4.1,1,0,0,0,0,0);
	case 26: ApplyAnimation(playerid, "BAR", "dnk_stndF_loop" ,4.1,1,0,0,0,0,0);
	case 27: ApplyAnimation(playerid, "DANCING", "DAN_Right_A" ,4.1,1,0,0,0,0,0);
	case 28: ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_loop" ,4.1,1,0,0,0,0,0);
	case 29: ApplyAnimation(playerid, "MISC", "plyr_shkhead" ,4.1,0,0,0,0,0,0);
	case 30: ApplyAnimation(playerid, "BSKTBALL", "BBALL_idle" ,4.1,0,0,0,0,0,0);
	case 31: ApplyAnimation(playerid, "CAMERA", "camstnd_cmon" ,4.1,1,0,0,0,0,0);
	case 32: ApplyAnimation(playerid, "SHOP", "SHP_Rob_HandsUP" ,4.1,1,0,0,0,0,0);
	case 33: ApplyAnimation(playerid, "CRACK", "crckidle2" ,4.1,1,0,0,0,0,0);
	case 34: ApplyAnimation(playerid, "CRACK", "crckidle4" ,4.1,1,0,0,0,0,0);
	case 35: ApplyAnimation(playerid, "DEALER", "DEALER_IDLE" ,4.1,1,0,0,0,0,0);
	case 36: ApplyAnimation(playerid, "GANGS", "leanIDLE" ,4.1,1,0,0,0,0,0);
	case 37: ApplyAnimation(playerid, "GANGS", "shake_carSH" ,4.1,0,0,0,0,0,0);
	case 38: ApplyAnimation(playerid, "GANGS", "smkcig_prtl" ,4.1,0,0,0,0,0,0);
	case 39: ApplyAnimation(playerid, "BEACH", "ParkSit_W_loop" ,4.1,1,0,0,0,0,0);
	case 40: ApplyAnimation(playerid, "INT_HOUSE", "LOU_Loop" ,4.1,1,0,0,0,0,0);
	case 41: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Bored_Loop" ,4.1,1,0,0,0,0,0);
	case 42: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Idle_Loop" ,4.1,1,0,0,0,0,0);
	case 43: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Type_Loop" ,4.1,1,0,0,0,0,0);
	case 44: ApplyAnimation(playerid, "INT_SHOP", "shop_shelf" ,4.1,1,0,0,0,0,0);
	case 45: ApplyAnimation(playerid, "JST_BUISNESS", "girl_02" ,4.1,1,0,0,0,0,0);
	case 46: ApplyAnimation(playerid, "KISSING", "GF_StreetArgue_02" ,4.1,0,0,0,0,0,0);
	case 47: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_01" ,4.1,0,0,0,0,0,0);
	case 48: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_02" ,4.1,0,0,0,0,0,0);
	case 49: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_03" ,4.1,0,0,0,0,0,0);
	case 50: ApplyAnimation(playerid, "LOWRIDER", "RAP_B_Loop" ,4.1,1,0,0,0,0,0);
	case 51: ApplyAnimation(playerid, "MEDIC", "CPR" ,4.1,1,0,0,0,0,0);
	case 52: ApplyAnimation(playerid, "MISC", "bitchslap" ,4.1,1,0,0,0,0,0);
	case 53: ApplyAnimation(playerid, "MISC", "bng_wndw" ,4.1,1,0,0,0,0,0);
	case 54: ApplyAnimation(playerid, "MISC", "KAT_Throw_K" ,4.1,0,0,0,0,0,0);
	case 55: ApplyAnimation(playerid, "MISC", "SEAT_LR" ,4.1,1,0,0,0,0,0);
	case 56: ApplyAnimation(playerid, "ped", "SEAT_idle" ,4.1,1,0,0,0,0,0);
	case 57: ApplyAnimation(playerid, "ON_LOOKERS", "lkup_loop" ,4.1,1,0,0,0,0,0);
	case 58: ApplyAnimation(playerid, "ON_LOOKERS", "Pointup_loop" ,4.1,1,0,0,0,0,0);
	case 59: ApplyAnimation(playerid, "ON_LOOKERS", "panic_loop" ,4.1,1,0,0,0,0,0);
	case 60: ApplyAnimation(playerid, "ON_LOOKERS", "shout_02" ,4.1,1,0,0,0,0,0);
	case 61: ApplyAnimation(playerid, "PAULNMAC", "Piss_loop" ,4.1,1,0,0,0,0,0);
	case 62: ApplyAnimation(playerid, "GHANDS", "gsign1LH" ,4.1,1,0,0,0,0,0);
	case 63: ApplyAnimation(playerid, "ped", "IDLE_taxi" ,4.1,1,0,0,0,0,0);
	case 64: ApplyAnimation(playerid, "POLICE", "Door_Kick" ,4.1,0,0,0,0,0,0);
	case 65: ApplyAnimation(playerid, "POLICE", "CopTraf_Stop" ,4.1,1,0,0,0,0,0);
	case 66: ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY_B" ,4.1,1,0,0,0,0,0);
	case 67: ApplyAnimation(playerid, "LOWRIDER", "RAP_C_Loop" ,4.1,1,0,0,0,0,0);
	case 68: ApplyAnimation(playerid, "SWAT", "gnstwall_injurd" ,4.1,1,0,0,0,0,0);
	case 69: ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop" ,4.1,1,0,0,0,0,0);
	case 70: ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY" ,4.1,1,0,0,0,0,0);
	case 71: ApplyAnimation(playerid, "GHANDS", "gsign2" ,4.1,1,0,0,0,0,0);
	case 72: ApplyAnimation(playerid, "GHANDS", "gsign4" ,4.1,1,0,0,0,0,0);
	case 73: ApplyAnimation(playerid, "GHANDS", "gsign5" ,4.1,1,0,0,0,0,0);
	}
	if(params[0])
	{
		animan[playerid]=1;
		TextDrawShowForPlayer(playerid, StopAnimation);
	}
	return true;
}
forward AC_PutPlayerInVehicle(playerid,vehicleid,seatid);
public AC_PutPlayerInVehicle(playerid,vehicleid,seatid)
{
	VehicleID[playerid]=vehicleid;
 	PutPlayerInVehicle(playerid,vehicleid,seatid);
}
cmd:park(playerid)
{
    if(GetPlayerState(playerid) != 2) return SendError(playerid,"Вы должны быть за рулём cвоего авто");
	if(!IsPlayerInHisVehicle(playerid)) return SendError(playerid,"Это не ваша машина");
	new check = -1;
	new house = SlotValue[playerid][1];
	if(house != -1 && IsPlayerInRangeOfPoint(playerid, 50, HouseInfo[house][hEnter][0],HouseInfo[house][hEnter][1],HouseInfo[house][hEnter][2]))check++;
	if(GetPlayerVirtualWorld(playerid) > 10000)check++;
	if(IsABoat(GetPlayerVehicleID(playerid)) || IsAPlane(GetPlayerVehicleID(playerid)))check++;
	if(check == -1)return SendError(playerid,"Парковать транспорт можно только рядом с домом или на подземной парковке");
	new carid = GetPlayerVehicleID(playerid);
	new panels,doors_,lights_,tires;
	GetVehicleDamageStatus(carid,panels,doors_,lights_,tires);
	new number = GetVehicleID(carid);
	GetVehiclePos(carid,CarInfo[number][cPos][0],CarInfo[number][cPos][1],CarInfo[number][cPos][2]);
	GetVehicleZAngle(carid,CarInfo[number][cPos][3]);
	CarInfo[number][cVirt] = GetPlayerVirtualWorld(playerid);
	SaveOwnableCar(number);
	SendInfo(playerid,"Транспорт припаркован");
	return true;
}
cmd:sellcar_gg(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid))return SendError(playerid,"Вы должны сидеть в личном транспорте");
    new carid = GetPlayerVehicleID(playerid);
	if(!IsAOwnableCar(carid)) return false;
	if(!IsPlayerInHisVehicle(playerid) || !IsPlayerRegCar(playerid,carid)) return SendError(playerid,"Вы должны сидеть в личном транспорте");
	ShowPlayerDialogEx(playerid,803,0,"{43CD80}Предупреждение","{FFFFFF}Вы действительно хотите продать свой транспорт?\n{7396FB}Обратите внимание, что при продаже транспорта вы получите лишь 50 процентов от общей стоимости","Принять","Отмена");
	return true;
}
cmd:key(playerid)
{
	if(!IsPlayerInHisVehicle(playerid) && !PlayerInfo[playerid][pAdmin]) return SendError(playerid,"Вы не в своем авто");
	if(IsANotControllable(playerid)) return SendError(playerid, "Вы не можете двигаться в данный момент");
	new string[128];
	new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid)) return 1;
	new number = GetVehicleID(carid);
	if(CarInfo[number][cShtraf] > 0) return SendError(playerid,"Этот транспорт стоит на штрафстоянке");
	if(CarInfo[number][cKeyIN])
	{
		CarInfo[number][cKeyIN] = 0;
	    format(string,sizeof(string)," %s вытащил(а) ключи из замка зажигания",PlayerName[playerid]);
	    ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetEngineStatus(carid,false, playerid);
 	}
	else
	{
	    CarInfo[number][cKeyIN] = 1;
	    format(string,sizeof(string)," %s вставил(а) ключи в замок зажигания",PlayerName[playerid]);
	    ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return true;
}
cmd:alarm(playerid, const params[])
{
	new car;
	if(sscanf(params,"d",car)) return SendInfo(playerid, "Используйте:{7396FB} /alarm [id]");
	if(!IsPlayerHaveCar(playerid,car)) return false;
    new number = GetVehicleID(car);
	if(!CarInfo[number][cAlarmON])
	{
		CarInfo[number][cAlarmON] = 1;
		SendClientMessage(playerid,COLOR_YELLOW,"Сигнализация включена");
	}
	else
	{
		CarInfo[number][cAlarmON] = 0;
		SendError(playerid,"Сигнализация выключена");
		SetAlarmStatus(car,false);
	}
	return true;
}
cmd:jlock(playerid)
{
    new string[50];
    new Float: x,Float: y,Float: z;
	new tyk = jlock[playerid];
    if(tyk!=0)GetVehiclePos(tyk, x, y, z);
    if(VehicleInfo[tyk][vLock] && IsPlayerInRangeOfPoint(playerid,5,x,y,z))
	{
	    if(VehicleInfo[tyk][vJob] ==0 && !IsAArendCar(tyk))return SendError(playerid,"Закрывать/Открывать можно только рабочий и арендованный транспорт");
	    VehicleInfo[tyk][vLock]=0;
	    SetDoorsStatus(tyk, 0, playerid);
		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~CAR~g~ UNLOCK",3000,3);
		format(string,sizeof(string),"%s открывает рабочий транспорт", PlayerName[playerid]);
		ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		tyk=0;
		jlock[playerid]=tyk;
	}
	else
	{
	    if(GetPlayerState(playerid) != 2) return SendError(playerid,"Доступно только на водительском месте");
	    if(VehicleInfo[GetPlayerVehicleID(playerid)][vJob]==0 && !IsAArendCar(GetPlayerVehicleID(playerid))) return SendError(playerid,"Закрывать/Открывать можно только рабочий и арендованный транспорт");
	    VehicleInfo[GetPlayerVehicleID(playerid)][vLock]=1;
		SetDoorsStatus(GetPlayerVehicleID(playerid), 1, playerid);
		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~CAR~r~ LOCK",3000,3);
		format(string,sizeof(string),"%s закрывает рабочий транспорт", PlayerName[playerid]);
		ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		tyk=GetPlayerVehicleID(playerid);
		jlock[playerid]=tyk;
	}
	return true;
}
cmd:alock(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2)return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new string[50];
	new Float:X,Float:Y,Float:Z;
	if(sscanf(params,"d", params[0])) return SendInfo(playerid, "Используйте:{7396FB} /alock [id транспорта] (( См. /dl ))");
	GetVehiclePos(params[0],X,Y,Z);
	if(!IsPlayerInRangeOfPoint(playerid,12.0,X,Y,Z))return SendError(playerid, "Вы должны быть рядом с транспортом");
	new number = GetVehicleID(params[0]);
	if(CarInfo[number][cLock])
	{
		CarInfo[number][cLock] = 0;
		SetDoorsStatus(params[0], 0);
		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~DOORS~g~ UNLOCK",3000,3);
		format(string,sizeof(string),"%s взломал замок транспорта", PlayerName[playerid]);
		ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(Player,i)
		{
			if(IsPlayerInRangeOfPoint(i,10.0,X,Y,Z))
				PlayerPlaySound(i, 25800, X,Y,Z);
		}
	}
	else
	{
		CarInfo[number][cLock] = 1;
		SetDoorsStatus(params[0], 1, playerid);
		GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~DOORS~r~ LOCK",3000,3);
		format(string,sizeof(string),"%s закрывает транспорт", PlayerName[playerid]);
		ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		foreach(Player,i)
		{
			if(IsPlayerInRangeOfPoint(i,10.0,X,Y,Z))
				PlayerPlaySound(i, 25800, X,Y,Z);
		}
	}
	return true;
}
cmd:lock(playerid)
{
	new string[50];
	foreach(OWNABLECARS, carid)
	{
		if(!IsPlayerHaveCar(playerid,OwnableCar[carid]))continue;
		new Float:X,Float:Y,Float:Z;
		GetVehiclePos(OwnableCar[carid],X,Y,Z);
		if(!IsPlayerInRangeOfPoint(playerid,3.5,X,Y,Z))continue;
		if(CarInfo[carid][cLock])
		{
			CarInfo[carid][cLock] = 0;
			SetDoorsStatus(OwnableCar[carid], 0, playerid);
			GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~DOORS~g~ UNLOCK",3000,3);
			format(string,sizeof(string),"%s открывает личный транспорт", PlayerName[playerid]);
			ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			foreach(Player,i)
			{
				if(IsPlayerInRangeOfPoint(i,10.0,X,Y,Z))
					PlayerPlaySound(i, 25800, X,Y,Z);
			}
		}
		else
		{
			CarInfo[carid][cLock] = 1;
			SetDoorsStatus(OwnableCar[carid], 1, playerid);
			GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~DOORS~r~ LOCK",3000,3);
			format(string,sizeof(string),"%s закрывает личный транспорт", PlayerName[playerid]);
			ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			foreach(Player,i)
			{
				if(IsPlayerInRangeOfPoint(i,10.0,X,Y,Z))
					PlayerPlaySound(i, 25800, X,Y,Z);
			}
		}
		return true;
	}
	SendError(playerid,"Вы должны стоять рядом с транспортом");
	return true;
}
cmd:findcar(playerid, const params[])
{
	new car;
	if(sscanf(params,"d",car)) return SendInfo(playerid, "Используйте:{7396FB} /findcar [id транспорта]");
	if(!IsPlayerHaveCar(playerid,car)) return SendError(playerid,"Это не ваш транспорт");
	if(CarInfo[GetVehicleID(car)][cVirt] > 10000)
	{
		for(new i; i < MAX_PARKING; i++)
		{
			if(ParkInfo[i][parkWorld] == CarInfo[GetVehicleID(car)][cVirt])
			{
				EnableGPSForPlayer(playerid, ParkInfo[i][parkPos][0],ParkInfo[i][parkPos][1],ParkInfo[i][parkPos][2]);
				break;
			}
		}
	}
	else
	{
		new id = GetVehicleSeat(car, 0);
		new Float:X,Float:Y,Float:Z;
		GetVehiclePos(car,X,Y,Z);
		if(id == INVALID_PLAYER_ID)J_SetVehiclePos(car,X,Y,Z);
		EnableGPSForPlayer(playerid,X,Y,Z);
	}
	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ваш транспорт отмечен на карте");
	return true;
}
cmd:setname(playerid, const params[])
{
 	if(PlayerInfo[playerid][pAdmin] < 5) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new name[24], id;
    if(sscanf(params,"us[24]",id,name)) return SendInfo(playerid, "Используйте:{7396FB} /setname [id] [name]");
    if(IsPlayerNPC(id))return 1;
    new query[256];
    mysql_format(mysql, query, sizeof(query), "SELECT `ID` FROM `accounts` WHERE `NickName` = '%s' LIMIT 1", name);
    mysql_pquery(mysql, query, "MysqlCheckNameSetName", "dds", playerid, id, name);
    return true;
}
forward MysqlCheckNameSetName(playerid, id, name[]);
public MysqlCheckNameSetName(playerid, id, name[])
{
    if(cache_get_row_count(mysql)>0) return SendError(playerid, "Это имя уже занято");
    if(PlayerInfo[id][pLeader]>0)return SendError(playerid,"Лидер не может сменить ник");
	new string[256];
    format(string, sizeof(string), "Вы сменили имя игрока %s[%d] на %s", Name(id),id,name);
    SendClientMessage(playerid, -1, string);
    format(string, sizeof(string), " Администратор %s сменил вам ник на %s", Name(playerid),name);
    SendClientMessage(id, -1, string);
    RenamePlayer(id,name);
    return 1;
}

cmd:aleave(playerid, const params[])
{
	new id;
	if(PlayerInfo[playerid][pAdmin] < 4) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /aleave [id]");
	if(!IsPlayerConnected(id) || !IsPlayerLogged[id]) return SendError(playerid, "Игрок не авторизован");
    if(PlayerInfo[id][pLeader] > 0) return SendError(playerid,"Используйте /apanel");
    if(IsACop(id))
	{
		if(UsingShield[id])RemovePlayerAttachedObject(id, 6);
		PlayerInfo[id][pShield] = 0.0;
	}
    PlayerInfo[id][pMember] = 0;
    PlayerInfo[id][pRank] = 0;
    PlayerInfo[id][pDCTime]=0;
    SendClientMessage(id,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
    TeamDuty[id] = false;
    format(CMDstr,sizeof(CMDstr),"[A] %s[%d] уволил игрока %s[%d] из организации",Name(playerid),playerid,Name(id),id);
	SendAdminsMessage(COLOR_RED,CMDstr,1);
	_ResetGun(id);
	J_SetPlayerArmour(id,0);
    format(CMDstr,70,"Вы выгнали %s из организации",Name(id));
 	SendClientMessage(playerid,COLOR_LIGHTBLUE,CMDstr);
	format(CMDstr,sizeof(CMDstr),"Администратор %s выгнал вас из организации",Name(playerid));
	SendClientMessage(id,COLOR_LIGHTBLUE,CMDstr);
    SetPlayerColor(id,0xEFEFF710);
    ResetSpawnInfo(id, 0);
    SetBumSkin(id);
	return true;
}
cmd:out_gg(playerid)
{
    if(TalentsInfo[playerid][3][2] != 1) return SendError(playerid,"Вы не изучили еще этот талант");
    if(PlayerInfo[playerid][pLeader] > 0) return SendError(playerid,"Вы не можете уволиться с поста лидера");
	if(!PlayerInfo[playerid][pMember])return SendError(playerid, "Вы нигде не состоите");
    if(IsACop(playerid))
	{
		if(UsingShield[playerid])RemovePlayerAttachedObject(playerid, 6);
		PlayerInfo[playerid][pShield] = 0.0;
	}
	new string[128];
	f(string, "%s[%d] покинул организацию по собственному желанию",Name(playerid),playerid);
	SendTeamMessage(PlayerInfo[playerid][pMember], COLOR_ORANGE, string);
    PlayerInfo[playerid][pLeader] = 0;
    PlayerInfo[playerid][pMember] = 0;
    PlayerInfo[playerid][pRank] = 0;
    PlayerInfo[playerid][pDCTime]=0;
    SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
    pSportZal[playerid]=0;
    SetBumSkin(playerid);
    PlayerInfo[playerid][pJob] = 0;
    TeamDuty[playerid] = false;
 	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Вы ушли из организации");
    SetPlayerColor(playerid,0xEFEFF710);
    if(TeamDuty[playerid])_ResetGun(playerid);
    ResetSpawnInfo(playerid, 0);
	return true;
}
cmd:su(playerid, const params[])
{
	if(!IsACop(playerid)) return SendError(playerid,"Вы не полицейский");
	if(PlayerInfo[playerid][pRank]<2 ) return SendError(playerid,"Подавать в розыск доступно со 2 ранга");
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
	new reason[100], id, wanted, string[180];
    if(sscanf(params, "uds[100]", id, wanted, reason)) return SendInfo(playerid, "Используйте:{7396FB} /su [id] [розыск] [причина]");
    if(IsAIP(reason))return 1;
    if(PlayerInfo[id][pWanted]>=6)return SendError(playerid,"У этого игрока уже 6-ой уровень розыска");
    if(PlayerInfo[id][pWanted]==wanted) return SendError(playerid,"Этот игрок и так уже имеет такой уровень розыска");
    if(!IsPlayerConnected(id)) return SendError(playerid,"Неверный ID игрока");
    if(PlayerInfo[id][pJailTime]) return SendError(playerid,"Нельзя объявить в розыск заключенного");
    if(wanted < 1 || wanted > 6) return SendError(playerid,"Нельзя дать меньше 1 и больше 6 звезд");
	if(!ProxDetectorS(150.0, playerid, id, 1))return SendError(playerid, "Игрок далеко от вас");
	SetPlayerCriminal(playerid,id,PlayerInfo[id][pWanted]+wanted,reason);
	f(string, "%s %s[%d] объявил вас в розыск | Причина: %s", GetRankName(PlayerInfo[playerid][pMember], PlayerInfo[playerid][pRank]), Name(playerid), playerid, reason);
	SendClientMessage(id, COLOR_LIGHTRED, string);
	format(string,sizeof(string),"Ваш текущий уровень розыска: %d",PlayerInfo[id][pWanted]);
	SendClientMessage(id,COLOR_YELLOW,string);
    return true;
}
cmd:setradar(playerid)
{
	if(!IsACop(playerid)) return SendError(playerid,"Вы не полицейский");
	if(!GetPVarInt(playerid, "TempRadar")) return SendError(playerid,"Вы не получали радар на складе");
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
	if(GetPVarInt(playerid, "TempRadar") == 2)return SendError(playerid, "Сначала уберите установленный радар");
	ShowPlayerDialogEx(playerid, 1486, 5, "Установка радара", "\
	Местность\tОграничение\n\
	Жилая зона\t{ff4400}30 км/ч\n\
	Город\t{ff4400}60 км/ч\n\
	Трасса\t{ff4400}90 км/ч\n\
	Магистраль\t{ff4400}130 км/ч", "Установить", "Отмена");
	return 1;
}
///
cmd:f(playerid, const params[])
{
    if(!IsAtGang(playerid) && !IsAtMafia(playerid) && !IsACop(playerid))return SendError(playerid, "У Вас нет доступа");
	new string[200];
	if(GetTeamID(playerid) == 0) return false;
    if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(PlayerInfo[playerid][pFMuteTime] > 0) return SendError(playerid, "Лидер заглушил(а) вас и вы не можете писать в /f чат");
    if(sscanf(params,"s[150]",string)) return SendInfo(playerid, "Используйте:{7396FB} /f [text]");
    if(IsAIP(string))return 1;
	if(PlayerInfo[playerid][pAdmin]) format(string,sizeof(string),"[F] Администратор %s[%d]: %s",PlayerName[playerid],playerid,string);
	else if(!PlayerInfo[playerid][pAdmin])format(string,sizeof(string),"[F] %s %s[%d]: %s",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]),PlayerName[playerid],playerid,string);
	else if(IsACop(playerid))
	{
		format(string,sizeof(string),"[%s] %s %s[%d]: %s",OrgInfo[PlayerInfo[playerid][pMember]][oName], GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]),PlayerName[playerid],playerid,string);
		SendCopsMessage(COLOR_RACIO,string);
		return 1;
	}
	SendTeamMessage(GetTeamID(playerid),COLOR_RACIO,string);
	return true;
}
///
cmd:r(playerid, const params[])
{
	new string[200];
	if(IsAtGang(playerid) || IsAtMafia(playerid))return SendInfo(playerid, "Используйте:{7396FB} /f [text]");
    if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    if(PlayerInfo[playerid][pFMuteTime] > 0) return SendError(playerid, "Лидер заглушил(а) вас и вы не можете писать в /r чат");
	if(GetTeamID(playerid) == 0) return false;
    if(sscanf(params,"s[150]",string)) return SendInfo(playerid, "Используйте:{7396FB} /r [text]");
    if(IsAIP(string))return 1;
	if(PlayerInfo[playerid][pAdmin]==0) format(string,sizeof(string),"[R] %s %s[%d]: %s",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]),PlayerName[playerid],playerid,string);
	else format(string,sizeof(string),"[R] Администратор %s[%d]: %s",PlayerName[playerid],playerid,string);
	SendTeamMessage(GetTeamID(playerid),COLOR_RACIO,string);
	SetPlayerChatBubble(playerid, "Сообщение по рации", COLOR_PURPLE, 10.0, 5000);
	return true;
}
cmd:fb(playerid, const params[])
{
    if(!IsAtGang(playerid) && !IsAtMafia(playerid))return SendInfo(playerid, "Используйте:{7396FB} /rb [text]");
	new string[128];
    if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(PlayerInfo[playerid][pFMuteTime] > 0) return SendError(playerid, "Лидер заглушил(а) вас и вы не можете писать в /fb чат");
	if(GetTeamID(playerid) == 0) return false;
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    if(sscanf(params,"s[150]",string)) return SendInfo(playerid, "Используйте:{7396FB} /fb [text]");
    if(IsAIP(string))return 1;
	if(PlayerInfo[playerid][pAdmin]==0) format(string,sizeof(string),"[F] %s %s[%d]:(( %s ))",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]),PlayerName[playerid],playerid,string);
	else format(string,sizeof(string),"[F] Администратор %s[%d]:(( %s ))",PlayerName[playerid],playerid,string);
	SendTeamMessage(GetTeamID(playerid),COLOR_RACIO,string);
	return true;
}

cmd:rb(playerid, const params[])
{
	new string[128];
	if(IsAtGang(playerid) || IsAtMafia(playerid))return SendInfo(playerid, "Используйте:{7396FB} /fb [text]");
    if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(PlayerInfo[playerid][pFMuteTime] > 0) return SendError(playerid, "Лидер заглушил(а) вас и вы не можете писать в /rb чат");
	if(GetTeamID(playerid) == 0) return false;
	if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    if(sscanf(params,"s[150]",string)) return SendInfo(playerid, "Используйте:{7396FB} /rb [text]");
    if(IsAIP(string))return 1;
	if(PlayerInfo[playerid][pAdmin]==0)format(string,sizeof(string),"[R] %s %s[%d]:(( %s ))",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]),PlayerName[playerid],playerid,string);
	else format(string,sizeof(string),"[R] Администратор %s[%d]:(( %s ))",PlayerName[playerid],playerid,string);
	SendTeamMessage(GetTeamID(playerid),COLOR_RACIO,string);
	SetPlayerChatBubble(playerid, "Сообщение по рации", COLOR_PURPLE, 10.0, 5000);
	return true;
}
cmd:rt(playerid, const params[])
{
	new ttext[128], tttext[128];
    if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
   	if(PlayerInfo[playerid][pJob] != JOB_TAXI && PlayerInfo[playerid][pJob] != JOB_TRUCKER) return SendError(playerid, "Вам недоступна эта функция");
	if(!IsPlayerInAnyVehicle(playerid))return SendError(playerid, "Вы должны находиться в транспорте");
   	if(sscanf(params,"s[150]",tttext)) return SendInfo(playerid, "Используйте:{7396FB} /rt [text]");
    if(IsAIP(tttext))return 1;
    foreach(Player, i)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerInfo[i][pJob] == JOB_TAXI || PlayerInfo[i][pJob] == JOB_TRUCKER)
	        {
	            format(ttext,sizeof(ttext),"[%s]%s[%d]: %s",GetJobName(PlayerInfo[playerid][pJob]),PlayerName[playerid],playerid,tttext);
				SendClientMessage(i,COLOR_GOLD,ttext);
				SetPlayerChatBubble(playerid, "Сообщение по рации", COLOR_PURPLE, 10.0, 5000);
	        }
	    }
	}
	foreach(Player,ch)
	{
		if(SERIU[ch][sID] == playerid)
			SendClientMessage(ch,COLOR_RACIO,ttext);
	}
	return true;
}
cmd:d(playerid, const params[])
{
    if(!IsPlayerLogged[playerid]) return false;
	new string[200];
	if(!IsDepartament(playerid)) return SendError(playerid, "Вы не уполномочены писать в государственную волну");
	if(PlayerInfo[playerid][pRank]<5)return SendError(playerid,"Писать в государственную волну можно с 5-го ранга");
    if(PlayerInfo[playerid][pMuteTime] > 0) return SendMuteMessage(playerid);
    if(sscanf(params,"s[150]",string)) return SendInfo(playerid, "Используйте:{7396FB} /d [text]");
    if(IsAIP(string))return 1;
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
	if(PlayerInfo[playerid][pAdmin]==0)format(string,sizeof(string),"[D] %s %s[%d]: %s",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]),PlayerName[playerid],playerid,string);
	else format(string,sizeof(string),"[D] Администратор %s[%d]: %s",PlayerName[playerid],playerid,string);
	SendGosMessage(COLOR_DEPAR,string);
	return true;
}

cmd:tow(playerid)
{
    if(GetPlayerState(playerid) != 2) return SendError(playerid,"Вы не за рулём");
    new carid = GetPlayerVehicleID(playerid);
	if(GetVehicleModelEx(carid) != 525) return SendError(playerid,"Вы не за рулём эвакуатора");
    if(IsTrailerAttachedToVehicle(carid)) DetachTrailerFromVehicle(carid);
	else
	{
	    for(new i = 1;i <= GetVehiclePoolSize();i ++)
	    {
			if(i == GetVehiclePoolSize())return SendError(playerid, "Поблизости нет машин, которые можно эвакуировать");
	        new Float:X,Float:Y,Float:Z;
	        GetVehiclePos(i,X,Y,Z);
	        if(IsPlayerInRangeOfPoint(playerid,7.0,X,Y,Z) && i != carid && GetVehicleModelEx(i) != 525)
			{
				AttachTrailerToVehicle(i,carid);
				break;
			}
			else continue;
	    }
    }
	return true;
}
cmd:stopjob(playerid)
{
	switch(PlayerInfo[playerid][pJob])
	{
	    case JOB_NALOG:
	    {
	        HouseNalogState2[playerid] = 0;
		    HouseNalog[playerid] = -1;
		    SendClientMessage(playerid,COLOR_VALIK,"Вы закончили работу");
	    }
	}
	InJob[playerid]=0;
	ResetDynamicCPs(playerid);
	DisableAllRaceCPs(playerid);
	return 1;
}
cmd:gotaxi(playerid, const params[])
{
	if(PlayerInfo[playerid][pJob] != JOB_TAXI) return SendError(playerid,"Вы не таксист");
    new id;
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /gotaxi [id]");
    if(!IsPlayerConnected(id)) return false;
    if(TaxiTarif[playerid]==0)return SendError(playerid,"Принять вызов можно только с автомобиля такси с настроеным тарифом");
    if(!TaxiON[id]) return SendError(playerid,"Этот игрок не заказывал такси либо заказ уже взяли");
    new string[100];
    format(string,sizeof(string),"Таксист %s принял ваш вызов, ждите",Name(playerid));
    SendClientMessage(id,COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"Игрок %s отмечен на карте",Name(id));
    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(id,X,Y,Z);
    EnableGPSForPlayer(playerid,X,Y,Z);
    TaxiON[id] = false;
    format(string,sizeof(string),"Таксист %s принял вызов игрока %s",Name(playerid),Name(id));
	foreach(new i:Player)
	{
	    if(!IsPlayerConnected(i)) continue;
	    if(PlayerInfo[i][pJob] == JOB_TAXI) SendClientMessage(i,COLOR_LIGHTBLUE,string);
	}
	return true;
}
cmd:gomechanic(playerid, const params[])
{
	if(PlayerInfo[playerid][pJob] != JOB_MECHANIC) return SendError(playerid,"Вы не механик");
    new id;
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /gomechanic [id]");
    if(!IsPlayerConnected(id)) return false;
    if(!MehanON[id]) return SendError(playerid,"Этот игрок не вызывал механика либо его вызов уже приняли");
    new string[100];
    format(string,sizeof(string),"Механик %s принял ваш вызов, ждите",Name(playerid));
    SendClientMessage(id,COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"Игрок %s отмечен на карте",Name(id));
    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(id,X,Y,Z);
    EnableGPSForPlayer(playerid,X,Y,Z);
    MehanON[id] = false;
    format(string,sizeof(string),"Механик %s принял вызов игрока %s",Name(playerid),Name(id));
	foreach(new i:Player)
	{
	    if(!IsPlayerConnected(i)) continue;
	    if(PlayerInfo[i][pJob] == JOB_MECHANIC) SendClientMessage(i,COLOR_LIGHTBLUE,string);
	}
	return true;
}
cmd:gomedik(playerid, const params[])
{
	if(!IsAMedic(playerid)) return SendError(playerid,"Вы не врач");
    new id;
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /gomedik [id]");
    if(!IsPlayerConnected(id)) return false;
    if(!MedikON[id]) return SendError(playerid,"Этот игрок не вызывал скорую помощь либо его вызов уже приняли");
    new string[100];
    format(string,sizeof(string),"Медик %s принял ваш вызов, ждите",Name(playerid));
    SendClientMessage(id,COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"Игрок %s отмечен на карте",Name(id));
    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(id,X,Y,Z);
    EnableGPSForPlayer(playerid,X,Y,Z);
    MedikON[id] = false;
	return true;
}
cmd:gopolice(playerid, const params[])
{
	if(!IsACop(playerid)) return SendError(playerid,"Вы полицейский");
    new id;
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /gopolice [id]");
    if(!IsPlayerConnected(id)) return false;
    if(!PoliseON[id]) return SendError(playerid,"Этот игрок не вызывал полицию либо его вызов уже приняли");
    new string[100];
    format(string,sizeof(string),"Дежурный %s принял ваш вызов, ждите",Name(playerid));
    SendClientMessage(id,COLOR_LIGHTBLUE,string);
    format(string,sizeof(string),"Игрок %s отмечен на карте",Name(id));
    SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(id,X,Y,Z);
    EnableGPSForPlayer(playerid,X,Y,Z);
    PoliseON[id] = false;
	return true;
}
cmd:flowers(playerid,const params[])
{
	new string[300];
	if(PlayerInfo[playerid][pJailTime] > 0) return SendError(playerid, "Во время пребывания в тюрьме нельзя подарить цветы");
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /flowers [id]");
	new weapon = GetPlayerWeapon(playerid);
	new ammo = GetPlayerAmmo(playerid);
	if(weapon != 14) return SendError(playerid, "У тебя в руках нет цветов");
	if(PlayerInfo[playerid][pGuns][GetWeaponSlot(weapon)] != weapon)return false;
	if(PlayerInfo[playerid][oInTir]==1) return false;
	if(IsPlayerConnected(params[0]))
	{
		if(playerid == params[0]) return SendError(playerid, "Вы не можете передать цветы сами себе");
		if(!ProxDetectorS(3.0,playerid,params[0])) return SendError(playerid,"Вы далеко от игрока");
		format(string,sizeof(string),"Подарил цветы %s",PlayerName[params[0]]);
	    SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 30.0, 5000);
	    _SetGun(params[0],weapon,ammo);

	    new rguns[13],sguns[13];
		for(new i;i<13;i++)
		{
		    rguns[i] = PlayerInfo[playerid][pAmmos][i];
			sguns[i] = PlayerInfo[playerid][pGuns][i];
		}
		_ResetGun(playerid);

		for(new x; x < 13; x ++)
		{
		    if(sguns[x]!=14) 	_SetGun(playerid,sguns[x],rguns[x]);
		}

	    format(string,sizeof(string),"[Информация] {FFFFFF}Вы подарили цветы игроку %s",PlayerName[params[0]]);
	    SendClientMessage(playerid,COLOR_VALIK,string);
	    format(string,sizeof(string),"[Информация] {FFFFFF}Игрок %s[%d] подарил вам цветы",PlayerName[playerid],playerid);
	    SendClientMessage(params[0],COLOR_VALIK,string);
	    PlayerInfo[playerid][pLastGun]=0;
		PlayerInfo[playerid][pLastAmmo]= 0;

		new Float:angle;
		GetPlayerFacingAngle(playerid, angle);
		J_SetPlayerFacingAngle(params[0], angle + 180);

		ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
		ApplyAnimation(params[0],"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);

	}
	return true;
}

cmd:giveweapon(playerid,const params[])
{
	new string[300];
	if(PlayerInfo[playerid][pJailTime] > 0) return SendError(playerid, "На время пребывания в тюрьме твоё оружие было изъято");
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /giveweapon [id]");
	new weapon = GetPlayerWeapon(playerid);
	new ammo = GetPlayerAmmo(playerid);
	new slot = GetWeaponSlot(weapon);
	if(PlayerInfo[playerid][pAmmos][slot]!=GetPlayerAmmo(playerid))return false;
	if(weapon < 1) return SendError(playerid, "У тебя в руках нет оружия");
	if(PlayerInfo[playerid][pGuns][GetWeaponSlot(weapon)] != weapon)return false;
	if(PlayerInfo[playerid][oInTir]==1) return false;
	if(!IsAFireGun(weapon)) return SendError(playerid, "Передавать можно только огнестрельное оружие");
	if(IsPlayerConnected(params[0]))
	{
		if(playerid == params[0]) return SendClientMessage(playerid, COLOR_GREEN, "Вы не можете передать оружие сами себе");
		if(!ProxDetectorS(3.0,playerid,params[0])) return SendError(playerid,"Вы далеко от игрока");
	    SetPlayerChatBubble(playerid, "Что-то передал", COLOR_PURPLE, 30.0, 5000);
	    _SetGun(params[0],weapon,ammo);
	    _SetGun(playerid,weapon,-ammo);
	    format(string,sizeof(string),"[Информация] {FFFFFF}Вы передали оружие игроку %s",PlayerName[params[0]]);
	    SendClientMessage(playerid,COLOR_VALIK,string);
	    format(string,sizeof(string),"[Информация] {FFFFFF}Игрок %s[%d] передал вам оружие: %s в котором %d материалов",PlayerName[playerid],playerid,GunName(weapon),ammo);
	    SendClientMessage(params[0],COLOR_VALIK,string);
	    PlayerInfo[playerid][pLastGun]=0;
		PlayerInfo[playerid][pLastAmmo]= 0;
	}
	return true;
}
cmd:economy(playerid)
{
	if(PlayerInfo[playerid][pMember]!= TEAM_MERIALS) return SendError(playerid,"У Вас нет доступа");
	if(PlayerInfo[playerid][pLeader]==0 && PlayerInfo[playerid][pAdmin]<5)return SendError(playerid,"Проводить изменения в экономике может только губернатор");
	if(!IsPlayerInRangeOfPoint(playerid,300,-1369.5955,541.0167,1042.1315))return SendError(playerid,"Вы должны находиться в здании мэрии");
 	ShowPlayerDialogEx(playerid,401,2,"{43CD80}Управление штатом","{7396FB}[1]{FFFFFF} Внести изменения в налоги\n{7396FB}[2]{FFFFFF} Изменить цены на аренду транспорта\n{7396FB}[3]{FFFFFF} Изменить премию гос.служащим\n{7396FB}[4]{FFFFFF} Глобальные настройки","Принять","Отмена");
	return true;
}
cmd:gps(playerid)
{
	if(InJob[playerid]!=0)return SendError(playerid,"Вы не можете включить GPS во время работы");
	if(gpss[playerid])DisableGPSForPlayer(playerid, 1);
    if(VehicleInfo[GetPlayerVehicleID(playerid)][vJob]==1) return SendError(playerid,"Сейчас вы не можете открыть GPS");
	ShowPlayerDialogEx(playerid, 705, 2, "{43CD80}GPS Навигатор", "\
	{7396FB}[1]{C9EAFF} Найти рядом\n\
	{7396FB}[2]{FFFFFF} Важные места\n\
	{7396FB}[3]{FFFFFF} Работы для новичков\n\
	{7396FB}[4]{FFFFFF} По работе\n\
	{7396FB}[5]{FFFFFF} Авторынки\n\
	{7396FB}[6]{FFFFFF} Разное\n\
	{7396FB}[7]{FFFFFF} Автомастерские\n\
	{7396FB}[8]{D94141} Криминал", "Выбор", "Отмена");
	return true;
}
cmd:time(playerid)
{
	new string[200];
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
	format(string, sizeof(string), "%s взглянул(a) на часы", PlayerName[playerid]);
	SetPlayerChatBubble(playerid, string, COLOR_PURPLE, 10.0, 5000);
	new mtext[20];
	new year, month,day;
	getdate(year, month, day);
	switch(month)
	{
	    case 1:mtext = "January";
	    case 2: mtext = "February";
	    case 3: mtext = "March";
	    case 4: mtext = "April";
	    case 5:mtext = "May";
	    case 6: mtext = "June";
	    case 7: mtext = "July";
	    case 8: mtext = "August";
	    case 9: mtext = "September";
	    case 10:mtext = "October";
	    case 11: mtext = "November";
	    case 12: mtext = "December";
	}
	new hour,minuite,second;
	gettime(hour,minuite,second);
	if (minuite < 10)
	{
		if (PlayerInfo[playerid][pJailTime] > 0)format(string, sizeof(string), "~y~%d %s %d~n~~w~%d:0%d~n~ ~g~ concluded ~w~%d~n~~b~%s", day, mtext, year, hour, minuite, PlayerInfo[playerid][pJailTime]-10, Mode_City);
		else format(string, sizeof(string), "~y~%d %s %d~n~~w~%d:0%d~n~~b~%s", day, mtext, year, hour, minuite, Mode_City);
	}
	else
	{
		if (PlayerInfo[playerid][pJailTime] > 0) format(string, sizeof(string), "~y~%d %s %d~n~~w~%d:%d~n~ ~g~ concluded ~w~%d~n~~b~%s", day, mtext, year, hour, minuite, PlayerInfo[playerid][pJailTime]-10, Mode_City);
		else format(string, sizeof(string), "~y~%d %s %d~n~~w~%d:%d~n~~b~%s", day, mtext, year, hour, minuite, Mode_City);
	}
	GameTextForPlayer(playerid, string, 4000, 1);
	return true;
}
cmd:donate(playerid)
{
	ShowDonate(playerid);
	return 1;
}
cmd:givemats(playerid, const params[])
{
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givemats [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
    if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > SlotValue[playerid][11]) return SendError(playerid, "У вас нет столько материалов");
    if(SlotValue[giveplayerid][11] + count > 2000) return SendError(playerid, "Этот игрок не сможет унести с собой более 2000 материалов");
	SlotValue[playerid][11] -= count;
    SlotValue[giveplayerid][11] += count;
	format(string,sizeof(string),"Игрок %s передал материалы в руки игрока %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"Игрок %s передал вам %d материалов",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d материалов игроку %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givedrugs(playerid, const params[])
{
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givedrugs [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(giveplayerid==playerid)return false;
    if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > SlotValue[playerid][14]) return SendError(playerid, "У вас нет столько наркотиков");
    if(SlotValue[giveplayerid][14] + count > 500) return SendError(playerid, "Этот игрок не сможет унести с собой более 500г.");
	SlotValue[playerid][14] -= count;
    SlotValue[giveplayerid][14] += count;
	format(string,sizeof(string),"%s передал наркотики в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d наркотиков",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d наркотиков %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givesigs(playerid, const params[])
{
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givesigs [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > SlotValue[playerid][15]) return SendError(playerid, "У вас нет столько сигарет");
	SlotValue[playerid][15] -= count;
    SlotValue[giveplayerid][15] += count;
	format(string,sizeof(string),"%s передал сигареты в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d сигарет",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d сигарет %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givecheeps(playerid, const params[])
{
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givecheeps [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count >  PlayerInfo[playerid][pCheeps]) return SendError(playerid, "У вас нет столько чипсов");
    PlayerInfo[playerid][pCheeps] -= count;
    PlayerInfo[giveplayerid][pCheeps] += count;
	format(string,sizeof(string),"%s передал чипсы в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d пачек чипсов",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d пачек чипсов %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givesprunk(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givesprunk [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > PlayerInfo[playerid][pSprunk]) return SendError(playerid, "У вас нет столько спранка");
    PlayerInfo[playerid][pSprunk] -= count;
    PlayerInfo[giveplayerid][pSprunk] += count;
	format(string,sizeof(string),"%s передал спранк в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d банок спранка",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d банок спранка %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givebeer(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givebeer [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > PlayerInfo[playerid][pBeer]) return SendError(playerid, "У вас нет столько пива");
    PlayerInfo[playerid][pBeer] -= count;
    PlayerInfo[giveplayerid][pBeer] += count;
	format(string,sizeof(string),"%s передал пиво в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d бутылок пива",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d бутылок пива %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:giveworms(playerid, const params[])
{
	if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /giveworms [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > PlayerInfo[playerid][pWorms]) return SendError(playerid, "У вас нет столько червей");
    PlayerInfo[playerid][pWorms] -= count;
    PlayerInfo[giveplayerid][pWorms] += count;
	format(string,sizeof(string),"%s передал червей в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d червей",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d червей %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}

cmd:givebron(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givebron [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > PlayerInfo[playerid][pArmours]) return SendError(playerid, "У вас нет столько бронежилетов");
	if(PlayerInfo[giveplayerid][pArmours]>=5)return SendError(playerid, "У игрока нет места для бронежилетов");
    PlayerInfo[playerid][pArmours] -= count;
    PlayerInfo[giveplayerid][pArmours] += count;
	format(string,sizeof(string),"%s передал бронежилет в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d бронежилетов",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d бронежилетов %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givetabl(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givetabl [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > TruckReset[playerid]) return SendError(playerid, "У вас нет столько таблеток");
	if(TruckReset[giveplayerid]>=20)return SendError(playerid, "У игрока нет места для таблеток");
    TruckReset[playerid] -= count;
    TruckReset[giveplayerid] += count;
	format(string,sizeof(string),"%s передал таблетки в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d таблеток",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d таблеток %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givemed(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givemed [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > SlotValue[playerid][12]) return SendError(playerid, "У вас нет столько аптечек");
	if(SlotValue[giveplayerid][12]>=5)return SendError(playerid, "У игрока нет места для аптечек");
    SlotValue[playerid][12] -= count;
    SlotValue[giveplayerid][12] += count;
	format(string,sizeof(string),"%s передал аптечки в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d аптечек",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d аптечек %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}

///////////////
cmd:givesyringe(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givesyringe [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > PlayerInfo[playerid][pSyringe]) return SendError(playerid, "У вас нет столько шприцов");
    PlayerInfo[playerid][pSyringe] -= count;
    PlayerInfo[giveplayerid][pSyringe] += count;
	format(string,sizeof(string),"%s передал шприцы в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d шприцов",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d шприцов %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givepoison(playerid, const params[])
{
   	if(!IsPlayerConnected(playerid)) return false;
 	new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /givepoison [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(count < 1 || count > SlotValue[playerid][18]) return SendError(playerid, "У вас нет столько яда");
    SlotValue[playerid][18] -= count;
    SlotValue[giveplayerid][18] += count;
	format(string,sizeof(string),"%s передал яд в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d яда",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d яда %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:giveclip(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, count, string[100];
    if(sscanf(params, "ud", giveplayerid, count)) return SendInfo(playerid, "Используйте:{7396FB} /giveclip [ID/Name] [Кол-во]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
	if(count < 1 || count > PlayerInfo[playerid][pClip]) return SendError(playerid, "У вас нет столько скрепок");
    PlayerInfo[playerid][pClip] -= count;
    PlayerInfo[giveplayerid][pClip] += count;
	format(string,sizeof(string),"%s передал скрепки в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам %d скрепок",PlayerName[playerid],count);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали %d скрепок %s",count,PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givemask(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, string[100];
    if(sscanf(params, "u", giveplayerid)) return SendInfo(playerid, "Используйте:{7396FB} /givemask [ID/Name]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(!SlotValue[playerid][13]) return SendError(playerid, "У вас нет маски");
    if(SlotValue[giveplayerid][13]>=3) return SendError(playerid, "У этого игрока уже есть 3 маски");
    SlotValue[playerid][13]--;
    SlotValue[giveplayerid][13]++;
	format(string,sizeof(string),"%s передал маску в руки  %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам маску",PlayerName[playerid]);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
	return true;
}
cmd:givefuel(playerid, const params[])
{
   	if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, string[100];
    if(sscanf(params, "u", giveplayerid)) return SendInfo(playerid, "Используйте:{7396FB} /givefuel [ID/Name]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(!SlotValue[playerid][20]) return  SendError(playerid, "У вас нет канистры");
    if(SlotValue[giveplayerid][20]) return SendError(playerid, "У этого игрока уже есть канистра");
    SlotValue[giveplayerid][20] = SlotValue[playerid][20];
    SlotValue[playerid][20] = 0;
	format(string,sizeof(string),"%s передал канистру в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам канистру",PlayerName[playerid]);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
	return true;
}
//////////
cmd:givespining(playerid, const params[])
{
   	if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, string[100];
    if(sscanf(params, "u", giveplayerid)) return SendInfo(playerid, "Используйте:{7396FB} /givespining [ID/Name]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(!PlayerInfo[playerid][pSpining]) return  SendError(playerid, "У вас нет спининга");
    if(PlayerInfo[giveplayerid][pSpining]) return SendError(playerid, "У этого игрока уже есть спининг");
    PlayerInfo[giveplayerid][pSpining] = PlayerInfo[playerid][pSpining];
    PlayerInfo[playerid][pSpining] = 0;
	format(string,sizeof(string),"%s передал спининг в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам спининг",PlayerName[playerid]);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали спининг %s",PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givebook(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, string[100];
    if(sscanf(params, "u", giveplayerid)) return SendInfo(playerid, "Используйте:{7396FB} /givebook [ID/Name]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(!PlayerInfo[playerid][pPhoneBook]) return SendError(playerid, "У вас нет телефонной книги");
    if(PlayerInfo[giveplayerid][pPhoneBook]) return SendError(playerid, "У этого игрока уже есть телефонная книга");
    PlayerInfo[giveplayerid][pPhoneBook] = PlayerInfo[playerid][pPhoneBook];
    PlayerInfo[playerid][pPhoneBook] = 0;
	format(string,sizeof(string),"%s передал телефонную книгу в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам телефонную книгу",PlayerName[playerid]);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали телефонную книгу %s",PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:givelighter(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, string[100];
    if(sscanf(params, "u", giveplayerid)) return SendInfo(playerid, "Используйте:{7396FB} /givelighter [ID/Name]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(!SlotValue[playerid][16]) return SendError(playerid, "У вас нет зажигалки");
    if(SlotValue[giveplayerid][16]) return SendError(playerid, "У этого игрока уже есть зажигалка");
    SlotValue[giveplayerid][16] = SlotValue[playerid][16];
    SlotValue[playerid][16] = 0;
	format(string,sizeof(string),"%s передал зажигалку в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам зажигалку",PlayerName[playerid]);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали зажигалку %s",PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:giveradio(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, string[100];
    if(sscanf(params, "u", giveplayerid)) return SendInfo(playerid, "Используйте:{7396FB} /giveradio [ID/Name]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(!PlayerInfo[playerid][pRadio]) return SendError(playerid, "У вас нет бумбокса");
    if(PlayerInfo[giveplayerid][pRadio]) return SendError(playerid, "У этого игрока уже есть бумбокс");
    PlayerInfo[giveplayerid][pRadio] = PlayerInfo[playerid][pRadio];
    PlayerInfo[playerid][pRadio] = 0;
	format(string,sizeof(string),"%s передал бумбокс в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам бумбокс",PlayerName[playerid]);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали бумбокс %s",PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:giverope(playerid, const params[])
{
    if(!IsPlayerConnected(playerid)) return false;
    new giveplayerid, string[100];
    if(sscanf(params, "u", giveplayerid)) return SendInfo(playerid, "Используйте:{7396FB} /giverope [ID/Name]");
	if(!IsPlayerConnected(giveplayerid) || !IsPlayerLogged[giveplayerid]) return false;
	if(!ProxDetectorS(3.0, giveplayerid, playerid)) return SendError(playerid, "Вы далеко от игрока");
    if(!PlayerInfo[playerid][pRope]) return SendError(playerid, "У вас нет верёвки");
    if(PlayerInfo[giveplayerid][pRope]) return SendError(playerid, "У этого игрока уже есть верёвка");
    PlayerInfo[giveplayerid][pRope] = PlayerInfo[playerid][pRope];
    PlayerInfo[playerid][pRope] = 0;
	format(string,sizeof(string),"%s передал веревку в руки %s",PlayerName[playerid],PlayerName[giveplayerid]);
	ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    format(string,sizeof(string),"%s передал вам веревку",PlayerName[playerid]);
    SendClientMessage(giveplayerid,COLOR_GRAY,string);
    format(string,sizeof(string),"Вы передали веревку %s",PlayerName[giveplayerid]);
    SendClientMessage(playerid,COLOR_GRAY,string);
	return true;
}
cmd:licensers(playerid)
{
	new string[100];
	foreach(new i:Player)
	{
	    if(IsPlayerConnected(i))
	    {
		    if(GetTeamID(i) == TEAM_LICENSERS)
		    {
		        format(string,sizeof(string),"%s[%i] | Тел: %d\n",Name(i),i,SlotValue[i][19]);
		        SendClientMessage(playerid, COLOR_WHITE, string);
		    }
	    }
	}
	return true;
}
cmd:blackplayers(playerid)
{
    if(IsAtFrakcia(playerid) && PlayerInfo[playerid][pLeader]>0)
	{
	    new string[2048],kol;
		foreach(new i:Player)
		{
		    if(PlayerInfo[i][pBL]!=0)
		    {
                format(string,sizeof(string),"%s{FFFFFF}%s[%i]{FFFFFF}\n", string,Name(i),i);
		        kol++;
		    }
		}
		format(string,sizeof(string),"%s\n\n\n{FAAC58}Всего: %d человек", string,kol);
		ShowPlayerDialogEx(playerid,0,0,"{43CD80}Черный список закона штата",string,"Принять","");
	}
	else SendError(playerid,"У вас нет доступа к этой системе");
	return true;
}
cmd:flist(playerid)
{
 	if(PlayerInfo[playerid][pMember]==0) return SendError(playerid,"Ты не состоишь в организации");
	new str[6000];
	strcat(str, "\n\n");
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i))
	    {
	  		if(GetTeamID(i) == GetTeamID(playerid) && !PlayerInfo[i][pAdmin]) format(str,sizeof(str),"%s\
			\\c{FFFFFF}%s[%i] - %s(%d) {BE2D2D}- [Выговоров: %d] - [Время АФК: %d сек.]{FFFFFF}\n", str,Name(i),i,GetRankName(GetTeamID(i),PlayerInfo[i][pRank]),PlayerInfo[i][pRank], PlayerInfo[i][pFWarns],PlayerAFKTime[i][0]);
		}
	}
	strcat(str, "\n\n");
	Dialog_Open(playerid, 0, 0, "{43CD80}Информация", str,  "Скрыть", "");
	return 1;
}
cmd:hi(playerid, const params[])
{
	if(!IsPlayerConnected(playerid))return SendError(playerid, "Вы не авторизованы");
	if(IsPlayerInAnyVehicle(playerid)) return SendError(playerid, "Нельзя использовать в машине");
	new id,string[200];
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /hi [id]");
	if(id==playerid)return SendError(playerid, "Неверный ID");
	if(!IsPlayerConnected(id))return SendError(playerid, "Игрок не найден");
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(id, X, Y, Z);
	new Float:distance = GetPlayerDistanceFromPoint(playerid, X, Y, Z);
	if( distance < 1.5 && distance > 0.5 )
	{
		if(PlayerLie[id])return SendError(playerid, "Повернитесь лицом к игроку");
		if(!GetPlayerFaceToPlayer(playerid, id, 25.0)) return SendError(playerid, "Повернитесь лицом к игроку");
		if(!GetPlayerFaceToPlayer(id, playerid, 25.0)) return SendError(playerid, "Этот игрок не повёрнут к вам лицом");
		new Float:angle;
		GetPlayerFacingAngle(playerid, angle);
		J_SetPlayerFacingAngle(id, angle + 180);
		format(string, sizeof(string), " %s пожал(а) руку %s", PlayerName[playerid],PlayerName[id]);
		ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		ApplyAnimation(playerid,"GANGS","hndshkfa",4.1, 0, 1, 1, 0, 0, 1);
		ApplyAnimation(id,"GANGS","hndshkfa",4.1, 0, 1, 1, 0, 0, 1);
		return true;
	}
	else if (distance < 20.0)
	{
		format(string,sizeof(string)," %s машет рукой %s",Name(playerid),Name(id));
		ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		ApplyAnimation(playerid, "PED", "endchat_03", 4.1, 0, 1, 1, 0, 0, 1);
	}
	else SendError(playerid, "Вы находитесь либо слишком близко к игроку, либо слишком далеко");
	return true;
}
cmd:killme_gg(playerid)
{
	if(!SlotValue[playerid][18]) return SendError(playerid,"У вас нет яда");
    SlotValue[playerid][18] --;
	if(!Crack[playerid] && !IsPlayerInAnyVehicle(playerid))
	{
		new string[50];
	    format(string, sizeof(string), " %s принял дозу яда", PlayerName[playerid]);
	    ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    SetPlayerDrunkLevel(playerid, 50000);
		ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.1, 0, 1, 1, 0, 0, 1);
		SlotValue[playerid][18] = 0;
		SetPlayerTimer(playerid,"DeathPlayer",1700,false);
	}
	else DeathPlayer(playerid);
	if(GetPVarInt(playerid, "showedinv"))UpdateInventory(playerid, SelectedSlot[playerid]);
	return true;
}
public DeathPlayer(playerid)
{
    SetPlayerDrunkLevel(playerid, 0);
    return J_SetPlayerHealth(playerid,0);
}
cmd:usesmoke_gg(playerid)
{
	new string[200];
	if(PlayerInfo[playerid][pHeal]) return SendError(playerid,"Пока вы находитесь на лечении вам запрещено курить");
	if(SlotValue[playerid][15] <1) return SendError(playerid,"У вас нет сигарет");
	if(Cuffed[playerid])return false;
	if(SlotValue[playerid][16] == 0) return SendError(playerid,"У вас нет зажигалки");
    if(!Smoke[playerid])
    {
	    new randsig = random(2);
	    if(!randsig)
	    {
	        format(string,sizeof(string)," %s[%d] достал(а) сигарету с зажигалкой и попытался(лась) закурить (Неудачно)",PlayerName[playerid],playerid);
	        ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    }
	    else
	    {
	        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
	        format(string,sizeof(string)," %s[%d] достал(а) сигарету с зажигалкой и закурил(а)",PlayerName[playerid],playerid);
	        ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        SlotValue[playerid][16] --;
	        SlotValue[playerid][15] --;
	        Smoke[playerid] = 1;
			SmokeTime[playerid] = 10;
			Smokes[playerid] = 0;
	    }
    }
	if(GetPVarInt(playerid, "showedinv"))UpdateInventory(playerid, 16);
	if(GetPVarInt(playerid, "showedinv"))UpdateInventory(playerid, 15);
	return true;
}
cmd:repcar_gg(playerid)
{
	new string[100];
	if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid,"Вы должны быть за рулём");
    if(SlotValue[playerid][17] == 0) return SendError(playerid,"У вас нет набора для починки");
    SendClientMessage(playerid,COLOR_GREEN,"[Информация] {FFFFFF}Вы починили транспорт");
    J_RepairVehicle(GetPlayerVehicleID(playerid));
    SlotValue[playerid][17]--;
    format(string,sizeof(string)," %s отремонтировал машину",PlayerName[playerid]);
	ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
	if(GetPVarInt(playerid, "showedinv"))UpdateInventory(playerid, SelectedSlot[playerid]);
    return true;
}
cmd:report(playerid)
{
	if(!IsPlayerLogged[playerid]) return false;
    ShowReportDialog(playerid);
	return true;
}
stock ShowGovInfo(playerid)
{
	new str[1280], num;
	for(new i = 1; i < MAX_ORGS; i++)
	{
		if(!IsGos(i))continue;
		GovSlot[num] = i;
		num++;
		format(str, sizeof str, "%s\n{%s}%s",str,CheckColor(TeamColors[i]),OrgInfo[i][oName]);
	}
	ShowPlayerDialogEx(playerid, 1230, 2, "{43CD80}Государственные новости", str, "Читать", "Закрыть");
	return 1;
}
stock ShowReportDialog(playerid)
{
	if(GetPVarInt(playerid,"reportdelay")>gettime())return SendError(playerid,"Писать репорт можно раз в 15 секунд");
	new sctring[360];
	format(sctring, sizeof sctring, "{FFFFFF}Вы собираетесь написать сообщение Администрации\n\
					Перед тем, как написать администрации, Вы должны помнить, что вы ответственны за свои слова\n\
					Прежде, чем задавать вопрос в репорт, попробуйте найти решение с помощью {ff4400}/help\n\n\
					{7396FB}С уважением, команда администрации Good Game");
	return ShowPlayerDialogEx(playerid,32,1,"{43CD80}Репорт",sctring,"Отправить","Отмена");
}
cmd:sellgun(playerid, const params[])
{
	new zona = GetPlayerGangZone(playerid);
	if(!IsAtGang(playerid)) return SendError(playerid,"Вы не состоите в банде");
	if(zona == -1)return SendError(playerid, "Вы должны быть в гетто");
	if(IsAtGang(playerid) && GZInfo[zona][gzFracID]!=PlayerInfo[playerid][pMember])return SendError(playerid,"Вы не можете создавать оружие вне своей территории");
	if(GetPlayerInterior(playerid))return SendError(playerid, "Вы не должны быть в помещении");
    if(IsANotControllable(playerid)) return SendError(playerid,"Вы не можете двигаться");
	new id,name[30],ammo,price,string[200];
	if(sscanf(params,"us[10]dd",id,name,ammo,price))
	{
		SendInfo(playerid, "Используйте:{7396FB} /sellgun [id] [Название] [Кол-во] [цена]");
		SendError(playerid,"Названия: deagle,shotgun,mp5,m4,ak47,rifle,sniper,uzi");
		return true;
	}
	if(id == INVALID_PLAYER_ID || !IsPlayerLogged[id])return SendError(playerid, "Игрок не найден");
	if(ammo > 300) return SendError(playerid,"Вы не можете сразу сделать больше 300 патронов");
	if(PlayerInfo[playerid][pJailTime]>0)return false;
	if(PlayerInfo[playerid][pView]>0)return false;
	if(!ProxDetectorS(3,playerid,id)) return SendError(playerid,"Вы далеко от игрока");
    if(price > 0 && ammo > 0)
	{
		if(price > 15000) return SendError(playerid,"За свои услуги вы можете брать не более $15000");
		SGunOffer[id] = playerid;
		SGunPrice[id] = price;
		SGunAmmo[id] = ammo;

		if(GetString(name,"deagle"))
		{
			SGunMats[id] = ammo*EagleMats;
			SGunID[id] = 24;
		}
		else if(GetString(name,"shotgun"))
		{
			SGunMats[id] = ammo*ShotGunMats;
			SGunID[id] = 25;
		}
		else if(GetString(name,"mp5"))
		{
			SGunMats[id] = ammo*MP5Mats;
			SGunID[id] = 29;
		}
		else if(GetString(name,"m4"))
		{
			SGunMats[id] = ammo*M4Mats;
			SGunID[id] = 31;
		}
		else if(GetString(name,"ak47"))
		{
			SGunMats[id] = ammo*AK47Mats;
			SGunID[id] = 30;
		}
		else if(GetString(name,"rifle"))
		{
			SGunMats[id] = ammo*RifleMats;
			SGunID[id] = 33;
		}
		else if(GetString(name,"sniper"))
		{
			SGunMats[id] = ammo*SniperMats;
			SGunID[id] = 34;
		}
		else if(GetString(name,"uzi"))
		{
			SGunMats[id] = ammo*UziMats;
			SGunID[id] = 28;
		}
		else return false;
		if(SlotValue[playerid][11] >= SGunMats[id])
		{
			format(string,sizeof(string),"\
			\n\n\\c{FFFFFF}%s предлагает вам купить у него оружие\n\n\
			\\cОружие: {D94141}« %s »{ffffff}\n\
			\\cБоеприпасы: {D94141}« %d »{ffffff}\n\
			\\cЦена: {D94141}« $%d »{ffffff}\n\n",
			Name(playerid),
			GunName(SGunID[id]),
			ammo,
			price);
			Dialog_Open(id,24,0,"{43CD80}Покупка оружия",string,"Купить","Отмена");
		}
		else SendError(playerid,"У вас недостаточно материалов для изготовления этого оружия");
	}
	return true;
}
cmd:fightstyle(playerid)
{
	if(!ShowPlayerDialogEx(playerid,58,2,"{43CD80}Выберите стиль боя","Обычный\nBoxing\nKungfu\nKeenhead\nElbow\nКак изучить?","Выбрать","Отмена"))
		SendError(playerid, "Недоступно в данный момент");
	return true;
}
cmd:next(playerid)
{
    new string[100];
   	if(BuyInt[playerid] != -1)
	{
	    if(BuyInt[playerid] == (sizeof(IntInfo)-1)) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyInt[playerid] == (sizeof(IntInfo)-2)) TextDrawHideForPlayer(playerid, ActionMenu[4]);
		TextDrawShowForPlayer(playerid, ActionMenu[3]);
     	BuyInt[playerid] ++;
		new dnt = BuyInt[playerid];
		format(string,sizeof(string),"Level: %d~n~Cost: $%d",IntInfo[dnt][iLevel],IntInfo[dnt][iCost]);
		PlayerTextDrawSetString(playerid, InfoText[playerid],string);
		SetPlayerCameraPos(playerid,IntInfo[dnt][iCam_X],IntInfo[dnt][iCam_Y],IntInfo[dnt][iCam_Z]); //
		SetPlayerCameraLookAt(playerid,IntInfo[dnt][iCamAt_X],IntInfo[dnt][iCamAt_Y],IntInfo[dnt][iCamAt_Z]); //
		SetPlayerInterior(playerid,IntInfo[dnt][iInterior]);
		SetPVarInt(playerid, "PauseUpdate", 3);
	}
	else if(GetPVarInt(playerid, "StoWaiting"))
	{
		if(TPInfo[playerid][tPaintjob] == false)
		{
				new compid = -1, vehicleid = GetPlayerVehicleID(playerid);
	            for(new i = (TPInfo[playerid][tID]+1); i < MAX_COMPONENTS; i++)
				{
					if(ComponentInfo[i][cType] == TPInfo[playerid][tType])
					{
						if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
						{
							compid = i;
							break;
						}
					}
				}
				if(compid == -1)
				{
					PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
					return TextDrawHideForPlayer(playerid, ActionMenu[4]);
				}
				if(TPInfo[playerid][tType] != 2281488){
					TextDrawShowForPlayer(playerid, ActionMenu[3]);
					RemoveVehicleComponent(vehicleid, ComponentInfo[TPInfo[playerid][tID]][cID]);
				}else{
					TextDrawShowForPlayer(playerid, ActionMenu[3]);
					DestroyDynamicObject(VehObjects[vehicleid][23]);
					DestroyDynamicObject(VehObjects[vehicleid][24]);
				}
	            TPInfo[playerid][tID] = compid;
				f(string, "%s~n~price: $%d", ComponentInfo[compid][cName], ComponentInfo[compid][cPrice]);
				PlayerTextDrawSetString(playerid, InfoText[playerid], string);
				SelectTextDraw(playerid, COLOR_ORANGE);
				if(TPInfo[playerid][tType] != 2281488)AddVehicleComponent(vehicleid, ComponentInfo[compid][cID]);
				else
				{
					VehObjects[vehicleid][23] = CreateDynamicObject(ComponentInfo[compid][cID],0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
					VehObjects[vehicleid][24] = CreateDynamicObject(ComponentInfo[compid][cID],0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
					AttachDynamicObjectToVehicle(VehObjects[vehicleid][23], vehicleid, -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
					AttachDynamicObjectToVehicle(VehObjects[vehicleid][24], vehicleid, 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
					Streamer_Update(playerid);
				}
				return 1;
			}
			else if(TPInfo[playerid][tPaintjob] == true)
			{
			    new paintid = -1, vehicleid = GetPlayerVehicleID(playerid);
			    for(new i = (TPInfo[playerid][tID]+1 ); i < NUMBER_TYPE_PAINTJOB; i++)
				{
			    	if(pjInfo[i][vehID] == GetVehicleModel(vehicleid))
					{
						paintid = i;
						break;
					}
			   	}
			   	if(paintid == -1)
				{
					PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
					return TextDrawHideForPlayer(playerid, ActionMenu[4]);
				}
				TextDrawShowForPlayer(playerid, ActionMenu[3]);
                TPInfo[playerid][tID] = paintid;
                f(string, "%s~n~price: $%d", pjInfo[paintid][pjName], pjInfo[paintid][pjPrice]);
				PlayerTextDrawSetString(playerid, InfoText[playerid], string);
                ChangeVehiclePaintjob(vehicleid, pjInfo[paintid][pjNumber]);
                SelectTextDraw(playerid, COLOR_ORANGE);
				return 1;
			}
	}
	else if(Clother[playerid] != -1)
	{
	    PlayerInfo[playerid][pNeedMessage]=1;
	    new nskin = PlayerInfo[playerid][pSkin];
		if(IsPlayerInRangeOfPoint(playerid,2.0,199.1063, -128.3574, 1003.5152) && PlayerInfo[playerid][pSkin] != 0)
		{
		    new race = PlayerInfo[playerid][pRace];
		    new clother = Clother[playerid];
			if(PlayerInfo[playerid][pSex] < 2)
			{
				if( (clother + 1) == sizeof(MSkins[]) ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if( (clother + 2) == sizeof(MSkins[]) ) TextDrawHideForPlayer(playerid, ActionMenu[4]);
				else if(!MSkins[race][clother + 1]) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if(!MSkins[race][clother + 2]) TextDrawHideForPlayer(playerid, ActionMenu[4]);
				TextDrawShowForPlayer(playerid, ActionMenu[3]);
				Clother[playerid] ++;
				clother = Clother[playerid];
				if(MSkins[race][clother] != 0)
				{
					SetPlayerSkin(playerid,MSkins[race][clother]);
					format(string,sizeof(string),"~g~Cost: ~r~$%d",MSkinCost[clother]);
				}
			}
			else
			{
			    if( (clother + 1) == sizeof(GSkins[]) ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				else if( (clother + 2) == sizeof(GSkins[]) ) TextDrawHideForPlayer(playerid, ActionMenu[4]);
				TextDrawShowForPlayer(playerid, ActionMenu[3]);
				Clother[playerid] ++;
				clother = Clother[playerid];
				SetPlayerSkin(playerid,GSkins[race][clother]);
				format(string,sizeof(string),"~g~Cost: ~r~$%d",GSkinCost[clother]);
			}
			if(nskin != 0)
			{
  	 			PlayerTextDrawSetString(playerid, InfoText[playerid],string);
				PlayerTextDrawShow(playerid,InfoText[playerid]);
			}
			else PlayerTextDrawHide(playerid,InfoText[playerid]);
		}
	}
	else if(Buyitem[playerid] != -1)
	{
	    new race = PlayerInfo[playerid][pType];
 		if(ItemsId[race][Buyitem[playerid]+2]==1) TextDrawHideForPlayer(playerid, ActionMenu[4]);
 		if(ItemsId[race][Buyitem[playerid]+1]==1) return false;
 		TextDrawShowForPlayer(playerid, ActionMenu[3]);
 		Buyitem[playerid] ++;
 		DestroyPlayerObject(playerid, TempBGObject[playerid]);
 		new price = ItemsCost[race][Buyitem[playerid]];//SetPlayerBuyItem'

		switch(ItemsId[race][Buyitem[playerid]])
		{
			case 19421,19422,19423,19424: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5407,0.0000, 0.0000, 198.9623);
			case 19069,19068,19067: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5606,360.0000, 30.0000, 93.3478);
			case 19554: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.6006,331.0000, -94.0000, 89.0000);
			case 18953,18954: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5606,342.0000, -94.0000, 89.0000);
			case 18968,18967,18969: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5606,360.0000, 11.0000, 215.0000);
			case 18955,18956,18957,18959: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5406,360.0000, -328.0000, 153.0000);
			case 18926,18927,18928,18929,18930,18931,18932,18933: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5406,360.0000, -90.0000,42.2641);
			case 19104,19105,19106,19107,19108,19109,18977,18978,18979,18645: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.6004,349.0000, 271.0000, 153.0000);
			case 18925,18922,18923,18924,18921: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.6004,349.0000, 271.0000, 342.2888);
			case 19519,19274: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5002,180.0000, 86.0000, 18.0000);
			case 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5604,360.0000, -2.0000, 213.3229);
			case 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,19472,19037,19036,19038: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.6166,61.0000, 10.0000, 226.0000);
			//шляпы
			case 18947,18948,18949,18950,18951,11704: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5564,350.0000, 270.0000, 107.3994);
			//часы
			case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5364,158.0000, 360.0000, 278.0000);
			//портфели
			case 3026, 19515: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5604,270.0000, -76.0000, 105.0000);
			case 371: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5604,270.0000, -76.0000, 13.8877);
			case 19559: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.4804,270.0000, -76.0000, 16.9056);
			case 18910, 18909, 18908, 18907, 18906: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], 2564.1163, 1785.7730, 1059.5122, 106.1400, -2.6400, -110.5800 );
			case 18970, 18973, 18972, 18971,19137,19528: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], 2564.1163, 1785.7730, 1059.5350, -0.3000, 11.7600, -24.9600 );
		}
		format(string, sizeof(string), "~g~Cost: ~r~$%d", price);
		PlayerTextDrawSetString(playerid, InfoText[playerid], string);
	}

	else if(BuyGuns[playerid] != -1)
	{
	    if(BuyGuns[playerid] == MAX_GUNS) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyGuns[playerid] == MAX_GUNS-1) TextDrawHideForPlayer(playerid, ActionMenu[4]);
	    TextDrawShowForPlayer(playerid, ActionMenu[3]);
		BuyGuns[playerid] ++;
		BuyGunAmmo[playerid] = 0;
	    new bgid = BuyGuns[playerid];
		new gunid = BuyGunInfo[bgid][bgGunid];
	    new model = GetWeaponModel(gunid);
	    new price = BuyGunInfo[bgid][bgPrice];
  		price += BuyGunInfo[bgid][bgGPrice];
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
		TextDrawHideForPlayer(playerid, ButtonDown);
	    if(IsAFireGun(BuyGunInfo[bgid][bgGunid])) TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, FIRE_GUN_ROT);
	    else TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, GUN_ROT);
        format(string, sizeof(string), "~w~Name: %s~n~Ammo: %d~n~Cost: $%d", WeaponNames[gunid], BuyGunInfo[bgid][bgAmmo][0], price);
		PlayerTextDrawSetString(playerid, InfoText[playerid], string);
	}
	return true;
}

cmd:back(playerid)
{
    new string[100];
    if(BuyInt[playerid] != -1)
	{
	    if(BuyInt[playerid] == 1) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyInt[playerid] == 2) TextDrawHideForPlayer(playerid, ActionMenu[3]);
		TextDrawShowForPlayer(playerid, ActionMenu[4]);
	    BuyInt[playerid] --;
		new dnt = BuyInt[playerid];
		SetPlayerInterior(playerid,IntInfo[dnt][iInterior]);
		SetPlayerCameraPos(playerid,IntInfo[dnt][iCam_X],IntInfo[dnt][iCam_Y],IntInfo[dnt][iCam_Z]); //
		SetPlayerCameraLookAt(playerid,IntInfo[dnt][iCamAt_X],IntInfo[dnt][iCamAt_Y],IntInfo[dnt][iCamAt_Z]); //
		format(string,sizeof(string),"Level: %d~n~Cost: $%d",IntInfo[dnt][iLevel],IntInfo[dnt][iCost]);
		PlayerTextDrawSetString(playerid, InfoText[playerid],string);
		SetPVarInt(playerid, "PauseUpdate", 3);
	}
	else if(GetPVarInt(playerid, "StoWaiting"))
	{
		if(TPInfo[playerid][tPaintjob] == false)
		{
			new compid = -1, vehicleid = GetPlayerVehicleID(playerid);
			for(new i = (TPInfo[playerid][tID]-1); i > 0; i--)
			{
				if(ComponentInfo[i][cType] == TPInfo[playerid][tType])
				{
					if(ComponentInfo[i][cID] == IsComponentidCompatible(GetVehicleModel(vehicleid), ComponentInfo[i][cID]))
					{
						compid = i;
						break;
					}
				}
			}
			if(compid == -1)
			{
				PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				return TextDrawHideForPlayer(playerid, ActionMenu[3]);
			}
			if(TPInfo[playerid][tType] != 2281488){
				TextDrawShowForPlayer(playerid, ActionMenu[4]);
				RemoveVehicleComponent(vehicleid, ComponentInfo[TPInfo[playerid][tID]][cID]);
			}else{
				TextDrawShowForPlayer(playerid, ActionMenu[4]);
				DestroyDynamicObject(VehObjects[vehicleid][23]);
				DestroyDynamicObject(VehObjects[vehicleid][24]);
			}
			TPInfo[playerid][tID] = compid;
			f(string, "%s~n~price: $%d", ComponentInfo[compid][cName], ComponentInfo[compid][cPrice]);
			PlayerTextDrawSetString(playerid, InfoText[playerid], string);
			AddVehicleComponent(vehicleid, ComponentInfo[compid][cID]);
			SelectTextDraw(playerid, COLOR_ORANGE);
			if(TPInfo[playerid][tType] != 2281488)AddVehicleComponent(vehicleid, ComponentInfo[compid][cID]);
			else
			{
				VehObjects[vehicleid][23] = CreateDynamicObject(ComponentInfo[compid][cID],0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				VehObjects[vehicleid][24] = CreateDynamicObject(ComponentInfo[compid][cID],0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				AttachDynamicObjectToVehicle(VehObjects[vehicleid][23], vehicleid, -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(VehObjects[vehicleid][24], vehicleid, 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
				Streamer_Update(playerid);
			}
			return 1;
		}
		else if(TPInfo[playerid][tPaintjob] == true)
		{
			new paintid = -1, vehicleid = GetPlayerVehicleID(playerid);
			for(new i = (TPInfo[playerid][tID]-1); i > 0; i--)
			{
				if(pjInfo[i][vehID] == GetVehicleModel(vehicleid))
				{
					paintid = i;
					break;
				}
			}
			if(paintid == -1)
			{
				PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				return TextDrawHideForPlayer(playerid, ActionMenu[3]);
			}
			TextDrawShowForPlayer(playerid, ActionMenu[4]);
			TPInfo[playerid][tID] = paintid;
			f(string, "%s~n~price: $%d", pjInfo[paintid][pjName], pjInfo[paintid][pjPrice]);
			PlayerTextDrawSetString(playerid, InfoText[playerid], string);
			ChangeVehiclePaintjob(vehicleid, pjInfo[paintid][pjNumber]);
			SelectTextDraw(playerid, COLOR_ORANGE);
			return 1;
		}
	}
	else if(Clother[playerid] != -1)
	{
	    PlayerInfo[playerid][pNeedMessage]=1;
	    new nskin = PlayerInfo[playerid][pSkin];
		if(IsPlayerInRangeOfPoint(playerid,2.0,199.1063, -128.3574, 1003.5152) && PlayerInfo[playerid][pSkin] != 0)
		{
	        new race = PlayerInfo[playerid][pRace];
	        if(Clother[playerid] == 0 ) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	        else if(Clother[playerid] == 1 ) TextDrawHideForPlayer(playerid, ActionMenu[3]);
			TextDrawShowForPlayer(playerid, ActionMenu[4]);
			Clother[playerid] --;
			if(PlayerInfo[playerid][pSex] < 2)
			{
				SetPlayerSkin(playerid,MSkins[race][Clother[playerid]]);
				format(string,sizeof(string),"~g~Cost: ~r~$%d",MSkinCost[Clother[playerid]]);
			}
			else
			{
				SetPlayerSkin(playerid,GSkins[race][Clother[playerid]]);
				format(string,sizeof(string),"~g~Cost: ~r~$%d",GSkinCost[Clother[playerid]]);
			}
			if(nskin != 0)
			{
  	 			PlayerTextDrawSetString(playerid, InfoText[playerid],string);
				PlayerTextDrawShow(playerid,InfoText[playerid]);
			}
			else PlayerTextDrawHide(playerid,InfoText[playerid]);
		}
	}
	else if(Buyitem[playerid] != -1)
	{
	    new race = PlayerInfo[playerid][pType];
 		if(Buyitem[playerid]==1) TextDrawHideForPlayer(playerid, ActionMenu[3]);
 		if(Buyitem[playerid]==0) return false;
 		TextDrawShowForPlayer(playerid, ActionMenu[4]);
 		Buyitem[playerid] --;
 		DestroyPlayerObject(playerid, TempBGObject[playerid]);
 		new price = ItemsCost[race][Buyitem[playerid]];//SetPlayerBuyItem'
 		switch(ItemsId[race][Buyitem[playerid]])
		{
			case 19421,19422,19423,19424: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5407,0.0000, 0.0000, 198.9623);
			case 19069,19068,19067: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5606,360.0000, 30.0000, 93.3478);
			case 19554: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.6006,331.0000, -94.0000, 89.0000);
			case 18953,18954: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5606,342.0000, -94.0000, 89.0000);
			case 18968,18967,18969: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5606,360.0000, 11.0000, 215.0000);
			case 18955,18956,18957,18959: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5406,360.0000, -328.0000, 153.0000);
			case 18926,18927,18928,18929,18930,18931,18932,18933: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5406,360.0000, -90.0000,42.2641);
			case 19104,19105,19106,19107,19108,19109,18977,18978,18979,18645: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.6004,349.0000, 271.0000, 153.0000);
			case 18925,18922,18923,18924,18921: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.6004,349.0000, 271.0000, 342.2888);
			case 19519,19274: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5002,180.0000, 86.0000, 18.0000);
			case 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5604,360.0000, -2.0000, 213.3229);
			case 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,19472,19037,19036,19038: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.6166,61.0000, 10.0000, 226.0000);
			//шляпы
			case 18947,18948,18949,18950,18951,11704: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5564,350.0000, 270.0000, 107.3994);
			//часы
			case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5364,158.0000, 360.0000, 278.0000);
			//портфели
			case 3026, 19515: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5604,270.0000, -76.0000, 105.0000);
			case 371: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.5604,270.0000, -76.0000, 13.8877);
			case 19559: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]],2564.1163, 1785.7730, 1059.4804,270.0000, -76.0000, 16.9056);
			case 18910, 18909, 18908, 18907, 18906: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], 2564.1163, 1785.7730, 1059.5122, 106.1400, -2.6400, -110.5800 );
			case 18970, 18973, 18972, 18971,19137,19528: TempBGObject[playerid] = CreatePlayerObject(playerid,ItemsId[race][Buyitem[playerid]], 2564.1163, 1785.7730, 1059.5350, -0.3000, 11.7600, -24.9600 );
		}
		format(string, sizeof(string), "~g~Cost: ~r~$%d", price);
		PlayerTextDrawSetString(playerid, InfoText[playerid], string);
	}
	else if(BuyGuns[playerid] != -1)
	{
	    if(BuyGuns[playerid] == 0) return PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
	    else if(BuyGuns[playerid] == 1) TextDrawHideForPlayer(playerid, ActionMenu[3]);
		TextDrawShowForPlayer(playerid, ActionMenu[4]);
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
		TextDrawHideForPlayer(playerid, ButtonDown);
		BuyGuns[playerid] --;
	    BuyGunAmmo[playerid] = 0;
	    new bgid = BuyGuns[playerid];
		new gunid = BuyGunInfo[bgid][bgGunid];
	    new model = GetWeaponModel(gunid);
	    new price = BuyGunInfo[bgid][bgPrice];
 		price += BuyGunInfo[bgid][bgGPrice];
	    if(IsAFireGun(BuyGunInfo[bgid][bgGunid])) TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, FIRE_GUN_ROT);
	    else TempBGObject[playerid] = CreatePlayerObject(playerid, model, GUN_POS, GUN_ROT);
        format(string, sizeof(string), "~w~Name: %s~n~Ammo: %d~n~Cost: $%d", WeaponNames[gunid], BuyGunInfo[bgid][bgAmmo][0], price);
		PlayerTextDrawSetString(playerid, InfoText[playerid], string);
	}
	return true;
}
cmd:otkat(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 7)return false;
	SetTimer("OnGameModeExit",5000,false);
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA,"Уважаемые игроки, откат сервера произойдёт через 5 секунд");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	return 1;
}
cmd:restart(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7) return 1;
	new message[64];
	if(sscanf(params, "d",params[0])) return SendInfo(playerid, "Используйте: {7396FB}/restart [минуты]");
	format(message, sizeof message, "Через %d минут произойдёт вынужденный рестарт сервера", params[0]);
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80ff, message);
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SendClientMessageToAll(0x43CD80AA," ");
	SetTimer("UnLoadMod", 60000 * params[0], false);
	return 1;
}
cmd:done(playerid)
{
    if(BuyInt[playerid] != -1)
 	{
 	    if(SlotValue[playerid][1] != -1)
 	    {
		    new inte = BuyInt[playerid];
			if(GetMoney(playerid) >= IntInfo[inte][iCost])
		    {
		        switch(HouseInfo[SlotValue[playerid][1]][hKlass])
		        {
					case 1: if(HouseRooms[inte]>1)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","Увы, но в ваш дом не поместится такой ремонт","Принять","");
				    case 2: if(HouseRooms[inte]>2)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","Увы, но в ваш дом не поместится такой ремонт","Принять","");
				    case 3: if(HouseRooms[inte]>3)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","Увы, но в ваш дом не поместится такой ремонт","Принять","");
					case 4: if(HouseRooms[inte]>4)return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","Увы, но в ваш дом не поместится такой ремонт","Принять","");
		        }
		        new string[12];
		        if(PlayerInfo[playerid][pDCTime]!=2) PlayerInfo[playerid][pDCTime]=2;
		        TogglePlayerControllable(playerid, true);
				SendClientMessage(playerid,COLOR_GREEN,"Поздравляю вас с покупкой нового интерьера");
				format(string, sizeof(string), "Покупка интерьера (%i)", inte);
				GiveMoney(playerid,-IntInfo[inte][iCost],string);
				SetHouseInt( SlotValue[playerid][1], inte);
				BuyInt[playerid] = -1;
     			SettingSpawn(playerid);
				if(pTemp[playerid][SPECTPLAYER]==true)SpecPl(playerid, false);
				PlayerTextDrawHide(playerid,InfoText[playerid]);
				SaveHouse(SlotValue[playerid][1]);
				PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система",string,-IntInfo[inte][iCost],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
			}
			else
			{
			    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
				SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
				return true;
			}
		}
	}
	else if(Clother[playerid] != -1)
	{
	    new nskin = PlayerInfo[playerid][pSkin];
	    new skin = Clother[playerid];
	    if(nskin != 0)
	    {
		    new cost;
		    new race = PlayerInfo[playerid][pRace];
		    new clother = Clother[playerid];//tika
		    if(PlayerInfo[playerid][pSex]==1)
			{
				if(MSkins[race][clother]!=GetPlayerSkin(playerid))return false;
			}
			if(PlayerInfo[playerid][pSex]==2)
			{
			    if(GSkins[race][clother]!=GetPlayerSkin(playerid))return false;
			}
            new bizid = BizEntered[playerid];
		    if(PlayerInfo[playerid][pSex] == 2) cost = GSkinCost[skin];
		    else cost = MSkinCost[skin];
		    if(cost <= 0) cost = 140;
		    if(GetMoney(playerid) < cost) return SendError(playerid,"У вас недостаточно денег. Вы можете пополнить свой баланс [/donate]");
		    if(BizInfo[bizid][bProducts]<(cost/100))return SendError(playerid,"Извините, но у нас закончился товар");
			new slot = GetFreeSlot(playerid);
			if(slot == -1)return SendError(playerid, "У Вас нет свободного места в инвентаре, чтобы поместить эту одежду");
			Clother[playerid] = -1;
			TogglePlayerControllable(playerid, true);
			J_SetPlayerPos(playerid, 199.0545,-131.5248,1003.5152);
			TogglePlayerDynamicCP(playerid, Binko_CP, true);
			SlotValue[playerid][slot] = GetPlayerSkin(playerid);
			SetPlayerSkinEx(playerid, GetSkinOfPlayer(playerid));
			new string[32];
			f(string, "Покупка скина (%d)",PlayerInfo[playerid][pSkin]);
			GiveMoney(playerid,-cost,"Binko");
   			GiveBizMoney(bizid,cost);
			SendInfo(playerid, "Одежда помещена в ваш инвентарь");
			BizInfo[bizid][bProducts]-=(cost/100);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid,OldWorld[playerid]);
			SendPedBot(playerid);
			new logtime[3],logdate[3],logtimestring[16];
			getdate(logdate[2],logdate[1],logdate[0]);
			gettime(logtime[0],logtime[1],logtime[2]);
			f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
			WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система",string,-cost,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		}
	}
	else if(GetPVarInt(playerid, "StoWaiting"))
	{
		new Float:Pos[6], vehicleid = GetPlayerVehicleID(playerid);
		if(TPInfo[ playerid ][ tPaintjob ] == false)
		{
			if(GetMoney(playerid) < ComponentInfo[TPInfo[playerid][tID]][cPrice]) return SendError(playerid, "У Вас недостаточно средств для покупки этой детали");
			new cid = TPInfo[playerid][tID];
			RemoveVehicleComponent(vehicleid, ComponentInfo[TPInfo[playerid][tID]][cID]);
			if(TPInfo[playerid][tType] != 2281488)AddComponentToVehicle(vehicleid, ComponentInfo[cid][cID]);
			else
			{
				VehObjects[vehicleid][23] = CreateDynamicObject(ComponentInfo[TPInfo[playerid][tID]][cID],0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				VehObjects[vehicleid][24] = CreateDynamicObject(ComponentInfo[TPInfo[playerid][tID]][cID],0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				AttachDynamicObjectToVehicle(VehObjects[vehicleid][23], vehicleid, -0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
				AttachDynamicObjectToVehicle(VehObjects[vehicleid][24], vehicleid, 0.8, 0.0, -0.55, 0.0, 0.0, 0.0);
				Streamer_Update(playerid);
			}
			GiveMoney(playerid, -ComponentInfo[TPInfo[playerid][tID]][cPrice]);
			SaveTuning(GetVehicleID(vehicleid), GetTuningName(ComponentInfo[cid][cID]), ComponentInfo[cid][cID]);
			TuningInfo[GetPVarInt(playerid, "StoWaiting")-1][stoBalance] += ComponentInfo[TPInfo[playerid][tID]][cPrice]/10;
			TuningInfo[GetPVarInt(playerid, "StoWaiting")-1][stoWin] += ComponentInfo[TPInfo[playerid][tID]][cPrice]/10;
			new logtime[3],logdate[3],logtimestring[16];
			getdate(logdate[2],logdate[1],logdate[0]);
			gettime(logtime[0],logtime[1],logtime[2]);
			f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
			WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Покупка компонента тюнинга",-ComponentInfo[TPInfo[playerid][tID]][cPrice],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		}
		else if(TPInfo[playerid][tPaintjob] == true)
		{
			if(GetMoney(playerid) < pjInfo[TPInfo[playerid][tID]][pjPrice]) return SendError(playerid, "У Вас недостаточно средств для покупки покрасочной работы");
			new paintid = TPInfo[playerid][tID];
			TunInfo[GetVehicleID(vehicleid)][nPaintJob] = pjInfo[paintid][pjNumber];
			GiveMoney(playerid, -pjInfo[TPInfo[playerid][tID]][pjPrice]);
			ChangeVehicleColor(vehicleid, CarInfo[GetVehicleID(vehicleid)][cColor_1], CarInfo[GetVehicleID(vehicleid)][cColor_2]);
			ChangeVehiclePaintjob(vehicleid, pjInfo[paintid][pjNumber]);
			SaveTuning(GetVehicleID(vehicleid), "PaintJob", pjInfo[paintid][pjNumber]);
			TuningInfo[GetPVarInt(playerid, "StoWaiting")-1][stoBalance] += pjInfo[TPInfo[playerid][tID]][pjPrice]/10;
			TuningInfo[GetPVarInt(playerid, "StoWaiting")-1][stoWin] += pjInfo[TPInfo[playerid][tID]][pjPrice]/10;
			new logtime[3],logdate[3],logtimestring[16];
			getdate(logdate[2],logdate[1],logdate[0]);
			gettime(logtime[0],logtime[1],logtime[2]);
			f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
			WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Покупка покрасочной работы",-pjInfo[TPInfo[playerid][tID]][pjPrice],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
		}
		GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 0, 6, 2);
		SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
		GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
		SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
		CancelSelectTextDraw(playerid);
		PlayerTextDrawHide(playerid, InfoText[playerid]);
		for(new i; i < sizeof ActionMenu; i++)
			TextDrawHideForPlayer(playerid, ActionMenu[i]);
		return ShowTuning(playerid);
	}
	else if(Buyitem[playerid] != -1)
	{
	    new race = PlayerInfo[playerid][pType],slot = GetFreeSlot(playerid),price = ItemsCost[race][Buyitem[playerid]];
	    new item = ItemsId[race][Buyitem[playerid]];//,skin = GetPlayerSkin(playerid);
	    new biz = BizEntered[playerid];
		if(!ItemsCount[race][Buyitem[playerid]])return Dialog_Open(playerid, 0, 0, "Информация", "\n\n\\c{FFFFFF}Данного предмета в данный момент нет в наличии\n{FFCB8C}Ассортимент обновляется каждый час, успейте приобрести\n\n", "Скрыть", "");
        if(SlotValue[playerid][0]<price)return SendBotMessage(playerid,"Извините, но у вас недостаточно денег для покупки");
        if(BizInfo[biz][bProducts]<(price/100))return SendBotMessage(playerid,"Извините, но у нас закончился товар");
		if(slot == -1)return SendError(playerid, "У Вас нет свободного места в инвентаре, чтобы поместить этот предмет");
		PlayerInfo[playerid][pNeedMessage]=1;
	    SendBotMessage(playerid,"Спасибо за покупку, приходите еще");
		SendInfo(playerid, "Аксессуар помещён в ваш инвентарь");
        ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
		GiveMoney(playerid,-price);
		ItemsCount[race][Buyitem[playerid]]--;
		GiveBizMoney(biz,price);
		BizInfo[biz][bProducts]-=(price/100);
		SlotValue[playerid][slot] = item;
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
        TogglePlayerControllable(playerid, true);
        PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		SetCameraBehindPlayer(playerid);
		Buyitem[playerid] = -1;
		PlayerInfo[playerid][pType]=-1;
		PlayerInfo[playerid][pNeedMessage]=0;
	}
	else if(BuyGuns[playerid] != -1)
	{
	    new string[100];
	    new bgid = BuyGuns[playerid];
	    new ammo = BuyGunAmmo[playerid];
	    new Float:flprice = float(BuyGunInfo[bgid][bgPrice]);
	    new Float:flammo = float(BuyGunInfo[bgid][bgAmmo][0]);
	    new weaponid = BuyGunInfo[bgid][bgGunid];
		new ammos = BuyGunInfo[bgid][bgAmmo][ammo];
	    new money = floatround( (flprice / flammo) * float(BuyGunInfo[bgid][bgAmmo][ammo]) );
	    money += BuyGunInfo[bgid][bgGPrice];
	    PlayerTextDrawHide(playerid, InfoText[playerid]);
     	new biz = BizEntered[playerid];
	    if(biz != -1)
		{
			if(BizInfo[biz][bProducts] < (money/10) ) return SendBotMessage(playerid,"Приносим свои извинения, у нас закончились продукты");
			if(SlotValue[playerid][0]<money)return SendBotMessage(playerid,"Извините, но у вас недостаточно денег");
		    BizInfo[biz][bProducts] -= (money/10);
			GiveBizMoney(biz,money);
		}
	    new weapon = _SetGun(playerid, weaponid, ammos);
	    if(weapon != -1)
	    {
	        if(SlotValue[playerid][0]<money)return SendBotMessage(playerid,"Извините, но у вас недостаточно денег");
		    GiveMoney(playerid, -money, "BuyGun");
		    format(string, sizeof(string), "[Информация] {FFFFFF}Вы купили %s с %d боеприпасами за $%d", WeaponNames[weaponid], ammos, money);
		    SendClientMessage(playerid, COLOR_VALIK, string);
		    SendAmmoBot(playerid);
		    BuyGuns[playerid] = -1;
		    SetCameraBehindPlayer(playerid);
		    DestroyPlayerObject(playerid, TempBGObject[playerid]);
		    PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
			if(QuestProgress[playerid][10] < QI[10][LastProgress] && AcceptQuest[playerid][10] == 1)QuestProgress[playerid][10] += ammos;
			if(QuestProgress[playerid][10] >= QI[10][LastProgress] && QuestProgress[playerid][10] < 10000){
				PlayerInfo[playerid][pTalents][2]++;
				SendInfo(playerid, "У Вас появились новые очки талантов");
				QuestProgress[playerid][10] = 10000;
			}
	    }
	}
	PlayerTextDrawHide(playerid,InfoText[playerid]);
	for(new i; i < sizeof ActionMenu; i++)
		TextDrawHideForPlayer(playerid,ActionMenu[i]);
	CancelSelectTextDraw(playerid);
	return false;
}
cmd:cancel(playerid)
{
    if(BuyInt[playerid] != -1)
 	{
 	    if(PlayerInfo[playerid][pDCTime]!=2) PlayerInfo[playerid][pDCTime]=2;
        TogglePlayerControllable(playerid, true);
		BuyInt[playerid] = -1;
		SpawnPlayer(playerid);
		SpecPl(playerid, false);
		PlayerTextDrawHide(playerid,InfoText[playerid]);
		PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
	}
	else if(Clother[playerid] != -1)
	{
	    new nskin = PlayerInfo[playerid][pSkin];
	    if(nskin != 0)
	    {
	        J_SetPlayerPos(playerid, 199.0545, -131.5248, 1003.5152);
			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
	  		SetPlayerVirtualWorld(playerid,OldWorld[playerid]);
			TogglePlayerDynamicCP(playerid, Binko_CP, true);
			PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
			Clother[playerid] = -1;
			SetPlayerSkinEx(playerid,PlayerInfo[playerid][pSkin]);
	    }
		else return SendError(playerid, "Вы должны выбрать скин");
	}
	else if(GetPVarInt(playerid, "StoWaiting"))
	{
		new Float:Pos[6], vehicleid = GetPlayerVehicleID(playerid),carid = GetVehicleID(vehicleid);
		if(TPInfo[playerid][tPaintjob] == false)
		{
			if(TPInfo[playerid][tType] != 2281488)RemoveVehicleComponent(vehicleid, ComponentInfo[TPInfo[playerid][tID]][cID]);
			else
			{
				DestroyDynamicObject(VehObjects[vehicleid][23]);
				DestroyDynamicObject(VehObjects[vehicleid][24]);
				Streamer_Update(playerid);
			}
			ModCar(vehicleid);
		}
		else if(TPInfo[playerid][tPaintjob] == true)
		{
			ChangeVehiclePaintjob(vehicleid, 3);
			ChangeVehicleColor(vehicleid, CarInfo[carid][cColor_1], CarInfo[carid][cColor_2]);
		}
		GetVehicleCameraPos(vehicleid, Pos[0], Pos[1], Pos[2], 0, 6, 2);
		SetPlayerCameraPos(playerid, Pos[0], Pos[1], Pos[2]);
		GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
		SetPlayerCameraLookAt(playerid, Pos[0],Pos[1],Pos[2]);
		CancelSelectTextDraw(playerid);
		PlayerTextDrawHide(playerid, InfoText[playerid]);
		for(new i; i < sizeof ActionMenu; i++)
		TextDrawHideForPlayer(playerid, ActionMenu[i]);
		return ShowTuning(playerid);
	}
	else if(Buyitem[playerid] != -1)
	{
        TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		Buyitem[playerid] = -1;
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
		PlayerInfo[playerid][pType]=-1;
		SetPVarInt(playerid,"timetobuy2",0);
	}
	else if(BuyGuns[playerid] != -1)
	{
	    BuyGuns[playerid] = -1;
	    PlayerTextDrawHide(playerid, InfoText[playerid]);
	    SendClientMessage(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы отказались покупать оружие");
	    PlayerPlaySound(playerid, 30802, 0.0, 0.0, 0.0);
		SetCameraBehindPlayer(playerid);
		DestroyPlayerObject(playerid, TempBGObject[playerid]);
	}
	PlayerTextDrawHide(playerid,InfoText[playerid]);
	for(new i; i < sizeof ActionMenu; i++)
		TextDrawHideForPlayer(playerid,ActionMenu[i]);
	CancelSelectTextDraw(playerid);
	return true;
}
cmd:opengate(playerid)
{
    if(OGReset[playerid] > 0) return true;
    OGReset[playerid] = 2;
	if(GetPlayerState(playerid) != PLAYER_STATE_SPECTATING){
	    new forcount = MuchNumber(sizeof(GateInfo), sizeof(BarrierInfo));
	    for(new i;i < forcount;i ++){
		    if(i < sizeof(GateInfo)){
		        if(GateInfo[i][gCreated]){
					if(IsPlayerInRangeOfPoint(playerid,6.2,GateInfo[i][gClose_X],GateInfo[i][gClose_Y],GateInfo[i][gClose_Z])){
					    if(GateInfo[i][gWorld]==-1 || GetPlayerVirtualWorld(playerid)==GateInfo[i][gWorld]){
							if(GateInfo[i][gOrg] == TEAM_NONE || GetTeamID(playerid) == GateInfo[i][gOrg] || ( IsACopGate(i) && IsACop(playerid) ) || PlayerInfo[playerid][pAdmin] >= ADM_GRAND_ADMIN){
								if(!GateInfo[i][gOpen]){
								    MoveDynamicObject(gGate[i],GateInfo[i][gOpen_X],GateInfo[i][gOpen_Y],GateInfo[i][gOpen_Z],3.0);
									SetTimerEx("GateClose",6000,0,"i",i);
									GateInfo[i][gOpen] = true;
									if(GateInfo[i][gForGateid] != -1)
									{
									    new gateid = GateInfo[i][gForGateid];
									    MoveDynamicObject(gGate[gateid],GateInfo[gateid][gOpen_X],GateInfo[gateid][gOpen_Y],GateInfo[gateid][gOpen_Z],3.0);
										GateInfo[gateid][gOpen] = true;
										SetPlayerChatBubble(playerid, "Открыл дверь", COLOR_GREEN, 10.0, 5000);
									}
								}
							}
							else SendError(playerid, "У вас нет ключей от этой двери");
							break;
						}
					}
				}
			}
			if(i < sizeof(BarrierInfo))
			{
				if(IsPlayerInRangeOfPoint(playerid,8,BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]))
				{
					if(BarrierInfo[i][brOrg] == TEAM_NONE || GetTeamID(playerid) == BarrierInfo[i][brOrg] || ( IsACopBarrier(i) && IsACop(playerid) ) || PlayerInfo[playerid][pAdmin] >= ADM_GRAND_ADMIN)
					{
						if(!BarrierInfo[i][brOpen])
						{
							MoveDynamicObject(gBarrier[i],BarrierInfo[i][brPos_X],BarrierInfo[i][brPos_Y],BarrierInfo[i][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[i][brPos_A]+180);
							SetTimerEx("BarrierClose",6000,0,"i",i);
							BarrierInfo[i][brOpen] = true;
							SendInfo(playerid,"Шлагбаум закроется через 5 секунд");
							SetPlayerChatBubble(playerid, "Открыл шлагбаум", COLOR_GREEN, 10.0, 5000);
							if(BarrierInfo[i][brForBarrierID] != -1)
							{
							    new barrierid = BarrierInfo[i][brForBarrierID];
							    MoveDynamicObject(gBarrier[barrierid],BarrierInfo[barrierid][brPos_X],BarrierInfo[barrierid][brPos_Y],BarrierInfo[barrierid][brPos_Z]+0.7,BARRIER_SPEED,0.0,0.0,BarrierInfo[barrierid][brPos_A]+180);
								BarrierInfo[barrierid][brOpen] = true;

							}
						}
					}
					else SendError(playerid, "У вас нет ключей от этой двери");
					break;
				}
			}
		}
	}
	return true;
}
cmd:eject(playerid, const params[])
{
	new id, string[100];
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /eject [ID/Name]");
	if(GetPlayerState(playerid) != 2) return SendError(playerid, "Только водитель может сделать это");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(id)) return false;
	new power = random(10);
	if(power > 5)
	{
		format(string, sizeof(string), " %s неудачно попытался выкинуть из транспорта игрока %s", PlayerName[playerid], PlayerName[id]);
		ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else
	{
	    GangZoneHideForPlayer(id, HideMapZone);
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(id,true);
		format(string, sizeof(string), " %s выкинул из транспорта %s", PlayerName[playerid], PlayerName[id]);
		ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		RemovePlayerFromVehicle(id);
	}
	return true;
}
cmd:medcard(playerid, const params[])
{
	new id, status, string[150];
	if(!IsAMedic(playerid)) return SendError(playerid, "Вы не доктор");
    if(PlayerInfo[playerid][pRank]< 3) return SendError(playerid,  "Ваш ранг недостаточно высок для этого");
    if(sscanf(params, "ui", id, status))
	{
		SendInfo(playerid, "Используйте:{7396FB} /medcard [id] [статус]");
		SendClientMessage(playerid, COLOR_WHITE, "__________ Статусы __________");
		SendClientMessage(playerid, COLOR_RED,   "-1. Нет мед. карты");
		SendClientMessage(playerid, COLOR_GRAY,  " 0. Не определен");
		SendClientMessage(playerid, COLOR_WHITE, " 1. Психически не здоров(а)");
		SendClientMessage(playerid, COLOR_WHITE, " 2. Наблюдаются отклонения");
		SendClientMessage(playerid, COLOR_WHITE, " 3. Полностью здоровый(ая)");
		return true;
	}
	if(!ProxDetectorS(3.0, playerid, id, 1))return SendError(playerid, "Вы далеко от игрока");
	if(!IsPlayerConnected(id)) return SendError(playerid,"Этот игрок не в сети");
    if(!IsPlayerLogged[id]) return SendError(playerid, "Этот игрок не в сети");
    if(!IsValidPassport(id)) return SendError(playerid, "У этого игрока нет паспорта");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    new Med[30];
    MedCardInfo[id][mcState] = status;
	switch(MedCardInfo[id][mcState])
	{
	    case -1: Med = "Нет мед. карты";
	    case 0: Med = "Не определен";
	    case 1: Med = "Психически не здоров(а)";
	    case 2: Med = "Наблюдаются отклонения";
	    case 3: Med = "Полностью здоровый(ая)";
	}
    SetString(MedCardInfo[id][mcGiver], PlayerName[playerid]);
    new year, month, day;
    getdate(year, month, day);
    format(string, sizeof(string), "%i/%i/%i", day, month, year);
    SetString(MedCardInfo[id][mcDate], string );
    format(string, sizeof(string), "[Информация] {FFFFFF}Медик %s выдал вам медицинскую карту: %s", PlayerName[playerid], Med);
    SendClientMessage(id, COLOR_LIGHTBLUE, string);
    format(string, sizeof(string), "[Информация] {FFFFFF}Вы выдали медицинскую карту %s: %s", PlayerName[id], Med );
    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
    format(string, sizeof(string), "UPDATE `passports` SET `McGiver` = '%s', `McDate` = '%s', `McState` = '%d' WHERE `Name` = '%s'",
    MedCardInfo[id][mcGiver],
    MedCardInfo[id][mcDate],
    MedCardInfo[id][mcState],
	PlayerName[id]);
    mysql_pquery(mysql, string);
	if(QuestProgress[playerid][5] < QI[5][LastProgress] && AcceptQuest[playerid][5] == 1)QuestProgress[playerid][5] ++;
	if(QuestProgress[playerid][5] >= QI[5][LastProgress] && QuestProgress[playerid][5] < 10000){
		PlayerInfo[playerid][pTalents][0]++;
		SendInfo(playerid, "У Вас появились новые очки талантов");
		QuestProgress[playerid][5] = 10000;
	}
	return true;
}
cmd:savebizes(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 9) return 0;
	for(new i; i < OWNABLEBIZES; i ++) SaveBiz(i);
	return true;
}
cmd:fmute(playerid, const params[])
{
	if(!PlayerInfo[playerid][pLeader] && PlayerInfo[playerid][pRank] < 9) return SendError(playerid, "Вам недоступна эта команда");
    new id, time, reason[100], string[150];
    if(sscanf(params,"dds[100]", id, time, reason)) return SendInfo(playerid, "Используйте:{7396FB} /fmute [id] [time] [reason]");
    if(IsAIP(reason))return 1;
    if(PlayerInfo[playerid][pMuteTime]>0)return false;
    if(time>180)return SendError(playerid, "Установить время заглушки можно не более, чем на 60 минут");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    if(GetTeamID(id) != GetTeamID(playerid)) return SendError(playerid, "Этот игрок не состоит в вашей организации");
    if(time == 0) return SendError(playerid, "На 0 минут нельзя");
    if(PlayerInfo[id][pLeader] > 0 ) return SendError(playerid,"Вы не можете выдать мут лидеру");
    format(string,sizeof(string),"Сотрудник %s заглушил(а) игрока %s на %d минут. Причина: %s",Name(playerid),Name(id),time,reason);
    SendTeamMessage(GetTeamID(playerid), COLOR_LIGHTRED, string);
    PlayerInfo[id][pFMuteTime] = time*60;
	return true;
}
cmd:funmute(playerid, const params[])
{
	if(!PlayerInfo[playerid][pLeader] && PlayerInfo[playerid][pRank] < 9) return SendError(playerid, "Вам недоступна эта команда");
    new id, string[150];
    if(sscanf(params,"d", id)) return SendInfo(playerid, "Используйте:{7396FB} /funmute [id]");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    if(GetTeamID(id) != GetTeamID(playerid)) return SendError(playerid, "Этот игрок не состоит в вашей организации");
    format(string,sizeof(string),"Сотрудник %s разглушил игрока %s",Name(playerid),Name(id));
	SendTeamMessage(GetTeamID(playerid), COLOR_LIGHTRED, string);
	PlayerInfo[id][pFMuteTime] = 0;
	return true;
}
cmd:referals(playerid)
{
	if(!IsPlayerConnected(playerid)) return false;
    if(!IsPlayerLogged[playerid]) return false;
    new string[600], Name[24], level;
    format(string, sizeof(string), "SELECT `NickName`, `Exp` FROM `accounts` WHERE `Referal` = '%s' LIMIT 10", PlayerName[playerid]);
	new Cache:result = mysql_query(mysql, string);
	string = "";
	new accounts = cache_get_row_count(mysql);
	if(accounts == 0) return SendError(playerid, "Вас никто не указывал, как реферала");
	string[0] = 0; FirstReferal[playerid] = 0;
	strcat(string,"{C9EAFF}••••••••••••••••••••••••••••••••••••••••••••••••••••\n\n");
    for(new i; i < accounts; i ++)
	{
		cache_get_row(i, 0, Name, mysql);
		level = cache_get_field_content_int(i, "Exp", mysql);
        if(level >= 30)format(string, sizeof(string), "%s\\c{7396FB}[%i] {ffffff}%s {C9EAFF}| Заработано $50000\n", string, i+1, Name);
		else format(string, sizeof(string), "%s\\c{7396FB}[%i] {ffffff}%s\n", string, i+1, Name);
    }
	strcat(string,"\n{C9EAFF}••••••••••••••••••••••••••••••••••••••••••••••••••••\n\n");
	cache_delete(result, mysql);
    if(!Dialog_Open(playerid, 69, 0, "{43CD80}Приглашённые", string, "Далее", "Назад"))SendError(playerid, "В данный момент список недоступен");
	return true;
}
cmd:unrentcar(playerid, const params[])
{
	if(ArendKey[playerid] == INVALID_VEHICLE_ID) return false;
    new car = ArendKey[playerid];
	new vehid = ArendCar[0] + car;
	if(ArendInfo[car][aRentID] == playerid)
	{
		ArendInfo[car][aRentID] = INVALID_PLAYER_ID;
		SetVehicleToRespawn(vehid);
	}
	ArendKey[playerid] = INVALID_VEHICLE_ID;
	SendClientMessage(playerid, COLOR_VALIK, "[Информация] {FFFFFF}Вы отказались от аренды транспорта");
	return true;
}
cmd:houseprice(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9)return 1;
	if(sscanf(params,"dd",params[0], params[1])) return SendInfo(playerid, "Используйте:{7396FB} /houseprice [id дома] [cost]");
	HouseInfo[params[0]][hCost] = params[1];
	new str[128];
	format(str, sizeof str,"Для дома #%d установлена стоимость в $%d", params[0], params[1]);
	SendInfo(playerid, str);
	SaveHouse(params[0]);
	UpdateHouse(params[0]);
	return 1;
}
cmd:housescost(playerid)
{
	if(PlayerInfo[playerid][pAdmin]<9)return false;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new string[600],lefter[60],righter[60],cofer[60],naloge[60];

	if(PlayerInfo[playerid][pLeftPosx]==0) lefter = "{84805A}Не добавлено{FFFFFF}";
	else format(lefter,sizeof(lefter),"{C8B827}%f - %f{FFFFFF}",PlayerInfo[playerid][pLeftPosx],PlayerInfo[playerid][pLeftPosy]);

	if(PlayerInfo[playerid][pRightPosx]==0) righter = "{84805A}Не добавлено{FFFFFF}";
	else format(righter,sizeof(righter),"{C8B827}%f - %f{FFFFFF}",PlayerInfo[playerid][pRightPosx],PlayerInfo[playerid][pRightPosy]);

	if(GetPVarInt(playerid,"kofecient")==0) cofer = "{84805A}Не добавлено{FFFFFF}";
	else format(cofer,sizeof(cofer),"{C8B827}%d{FFFFFF}",GetPVarInt(playerid,"kofecient"));

	if(GetPVarInt(playerid,"naloger")==0) naloge = "{84805A}Не добавлено{FFFFFF}";
	else format(naloge,sizeof(naloge),"{C8B827}%d{FFFFFF}",GetPVarInt(playerid,"naloger"));

	format(string,sizeof(string),"Левая нижняя точка:\t\t%s\nПравая верхняя точка:\t%s\nКоефициент умножения:\t%s\nУстановить налог:\t\t%s\nИзменить стоимомость домов с низкой ценой\n{19A725}Начать операцию",lefter,righter,cofer,naloge);
	ShowPlayerDialogEx(playerid,7811,2,"{43CD80}Подтверждение",string,"Принять","Отмена");

	return true;
}
cmd:fillcar_gg(playerid)
{
    new string[100];
	new carid = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return SendError(playerid,"Вы должны находиться в транспорте");
    if(SlotValue[playerid][20] == 0) return SendError(playerid,"У вас нет канистры");
    SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Вы заправили транспорт");
    Fuel[carid] += 30;
    if(Fuel[carid]>=100)Fuel[carid] = 100;
    SlotValue[playerid][20] --;
    format(string,sizeof(string)," %s заправил машину",PlayerName[playerid]);
	ProxDetector(25,playerid,string,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME,COLOR_ME);
	if(GetPVarInt(playerid, "showedinv"))UpdateInventory(playerid, SelectedSlot[playerid]);
    return true;
}
cmd:deltun(playerid, const params[])
{
	if(PlayerInfo[playerid][pVIP] < 1) return SendError(playerid,"Вы не VIP игрок");
	new car;
	if(sscanf(params,"d",car)) return SendInfo(playerid, "Используйте:{7396FB} /deltun [id транспорта]");
	new number = GetVehicleID(car);
	if(car == -1 || !GetString(CarInfo[number][cOwner],PlayerName[playerid])) return SendError(playerid, "Это не ваш транспорт");
	if(SlotValue[playerid][0]<10000)return SendError(playerid,"У вас недостаточно денег. Необходимо $10000");
	GiveMoney(playerid,-10000);
	DelTunCar(car);
	ResetTuningC(car);
	if(!IsAVelik(car)) SetEngineStatus(car,false, -1);
	else SetEngineStatus(car,true, -1);
	SaveOwnableCar(number);
	SendInfo(playerid,"Вы удалили тюнинг и стикеры с вашего транспорта");
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Удаление тюнинга с транспорта",-10000,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
	return true;
}
cmd:fill(playerid, const params[])
{
	if(GetPlayerState(playerid) == 2)
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(GetVehicleKindFuel(carid) != -1)
	    {
	 		if(IsAtGasStation(playerid))
			{
	  			new fuelid = GetGasStation(playerid);
				new bizid = FuelInfo[fuelid][fBizzID];
				if(BizInfo[bizid][bProducts] >= 100)
				{
		 			if(Fuel[carid] < 100.0)
		 			{
		 			    if(KindFuel[playerid] == -1)
		 			    {
           					if(GetVehicleKindFuel(carid) != 0)
		 			        {
								GameTextForPlayer(playerid,"~w~This type of fuel~n~~r~is not suitable~w~~n~for your vehicle",10000,4);
							}
							PlayerFuel[playerid] = fuelid;
			 			    CountFuel[playerid] = 0.0;
					        KindFuel[playerid] = 0;
					        SendInfo(playerid, "Используйте курсор, чтобы выбрать тип топлива и его количество");
						 	PlayerTextDrawSetString(playerid,PlayerFuelTD[playerid][1], "0 ~y~L");
						 	PlayerTextDrawSetString(playerid,PlayerFuelTD[playerid][2], "$0");
						 	PlayerTextDrawSetString(playerid,PlayerFuelTD[playerid][0], FuelName[0]);
							for(new i; i < sizeof FuelTD; i++)
								TextDrawShowForPlayer(playerid, FuelTD[i]);
							PlayerTextDrawShow(playerid, PlayerFuelTD[playerid][0]);
							PlayerTextDrawShow(playerid, PlayerFuelTD[playerid][1]);
							PlayerTextDrawShow(playerid, PlayerFuelTD[playerid][2]);
							SelectTextDraw(playerid, 0xD94141AA);
						}
					}
					else SendError(playerid,"Ваш транспорт полностью заправлен");
				}
				else SendError(playerid,"На этой заправке не осталось топлива");
			}
			else SendError(playerid,"Вы ни на одной из заправок");
		}
		else SendError(playerid,"Топлива для вашего вида транспорта у нас нет");
	}
	return true;
}
cmd:find(playerid, const params[])
{
	if(!IsACop(playerid)) return SendError(playerid, "Вы не полицейский");
    if(IsANotControllable(playerid)) return SendError(playerid, "Вы не можете двигаться");
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /find [id]");
	if(playerid == params[0]) return SendError(playerid, "Неверный ID");
	if(!IsPlayerConnected(params[0])) return SendError(playerid, "Игрок не авторизован");
	if(GetPVarInt(playerid, "Marked"))return SendError(playerid, "Ожидайте ответа от спутников");
	SetPVarInt(playerid,"Marked",1);
	marktimer[playerid] = SetTimerEx("SetMark",15*1000,false,"dd",playerid,params[0]);
	SendClientMessage(playerid,COLOR_ORANGE,"Система спутникового поиска преступника активирована. Ожидайте ответа от спутника");
	return true;
}
forward SetMark(playerid, id);
public SetMark(playerid, id)
{
	DeletePVar(playerid,"Marked");
	KillTimer(marktimer[playerid]);
	if(GetPlayerInterior(id) || GetPlayerVirtualWorld(id) || !IsPlayerConnected(id))return SendClientMessage(playerid,COLOR_ORANGE,"Местоположение преступника определить не удалось. Попробуйте позже");
	if(gpss[playerid]) return SendError(playerid,"У Вас уже есть метка на радаре");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(id,x,y,z);
	EnableGPSForPlayer(playerid, x,y,z);
	SendClientMessage(playerid,COLOR_BLUE,"В последний раз нарушитель был обнаружен в отмеченном месте. Чтобы убрать метку введите {7396FB}'/gps'");
	return 1;
}
cmd:usebad(playerid, const params[])
{
    if(TruckReset[playerid]==0)return SendError(playerid,"У вас нет лекарства для лечения наркозависимости");
    if(medlomka[playerid]>0)return SendError(playerid,"Вы уже приняли лекарство");
	if(PlayerInfo[playerid][pAllRepl]==0)return SendError(playerid,"Вы не больны наркозависимостью");
	if(startlomka[playerid]==1) return SendError(playerid,"Вы не можете принять лекарства во время ломки");
	if(CuffedTime[playerid]!=0 || Cuffed[playerid])return SendError(playerid,"Вы не можете сейчас принять лекарства");
	if(!IsPlayerInRangeOfPoint(playerid, 100.0,2065.5859,-1374.3174,1001.2960))return SendError(playerid,"Принять лекарства можно только в больнице");
	TruckReset[playerid]--;
	SendError(playerid,"Вы приняли лекарство для лечения от наркозависимости");
	SendError(playerid,"Скоро могут начатся побочные эфекты");
	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	medlomka[playerid]=240;
	return true;
}

cmd:recept(playerid, const params[])
{
	new id,string[100];
	if(CuffedTime[playerid]!=0 || Cuffed[playerid])return false;
	if(!IsAMedic(playerid))return SendError(playerid,"Рецепт может выдать только доктор");
	if(PlayerInfo[playerid][pRank]<4)return SendError(playerid,"Рецепт может выдать только доктор с 4-го ранга");
	if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /recept [id]");
    if(!ProxDetectorS(3.0, playerid, id, 1)) return SendError(playerid,"Вы далеко от игрока");
    if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
    format(string,sizeof(string),"%s выдал %s рецепт для покупки лекарств",PlayerName[playerid],PlayerName[id]);
    ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    SendError(playerid,"Вы выдали рецепт");
    SendClientMessage(id,COLOR_GRAY,"[Информация] {FFFFFF}Вам выдали рецепт, благодаря которому вы можете купить аптечки или лекарство от нарк.зависимости");
 	PlayerDrunkLevel[id]=1;
	return true;
}
cmd:usedrugs_gg(playerid)
{
    if(GetPlayerVirtualWorld(playerid)==534)return false;
	if(SlotValue[playerid][14] < 1) return SendError(playerid,"У вас нет наркотиков");
    if(PlayerInfo[playerid][pHeal] > 0) return SendError(playerid,"Пока ты в больнице, ты не можешь использовать наркотики");
    if(UseDrugsTime[playerid] > 120) return false;
    if(GetPVarInt(playerid,"narko")>gettime())return SendError(playerid,"Подождите несколько секунд");
    new Float:Health, string[100];
    GetPlayerHealth(playerid,Health);
	Health += 30;
	if(Health > MAX_PLAYER_HEALTH(playerid)) Health = MAX_PLAYER_HEALTH(playerid);
    J_SetPlayerHealth(playerid,Health);
    if(IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	SlotValue[playerid][14] --;
	UseDrugsTime[playerid] += 60;
	PlayerInfo[playerid][pAllRepl]++;
	if(startlomka[playerid]==1)PlayerInfo[playerid][pOldRepl]=0;
	startlomka[playerid]=0;
	SetPlayerDrunkLevel (playerid, 3900);
	format(string,sizeof(string)," %s принимает дозу наркотиков",PlayerName[playerid]);
	ProxDetector(30,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	if(!IsPlayerInAnyVehicle(playerid))J_ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetPVarInt(playerid,"narko",gettime()+6);
	if(GetPVarInt(playerid, "showedinv"))UpdateInventory(playerid, SelectedSlot[playerid]);
	return true;
}
stock OnlineFrac(frac,playerid)
{
	if(frac == 0) return SendError(playerid, "Вы не состоите во фракции");
	new full,strin[2048],strr[26];
	strin = "";
	foreach(new i:Player)
	{
	    if(!IsPlayerConnected(i)) continue;
		if(frac == PlayerInfo[i][pMember])
		{
			pTemp[playerid][pWW][full] = i;
			format(strr,26,"%s\n",Name(i));
			strcat(strin, strr);
			full++;
		}
	}
	if(full == 0) return SendError(playerid, "Нет членов организации в сети");
	else ShowPlayerDialogEx(playerid,1215,DIALOG_STYLE_LIST,"{43CD80}Члены организации в сети",strin,"Далее","Закрыть");
	format(strr,18,"Всего в сети: %d",full);
	SendClientMessage(playerid,COLOR_ORANGE,strr);
	return 1;
}
stock delmenutext(playerid){
	for(new A; A < 9; A++){
		PlayerTextDrawHide(playerid, IconsMenu[playerid][A]);
		DestroyPlayerTD(playerid, IconsMenu[playerid][A]);
	}
	CancelSelectTextDraw(playerid);
	DeletePVar(playerid, "showedtarget");
	return 1;
}
stock showmenutext(playerid, target){
	IconsMenu[playerid][0] = CreatePlayerTextDraw(playerid, 4.666666, 171.982223, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, IconsMenu[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, IconsMenu[playerid][0], 70.666671, 86.115570);
	PlayerTextDrawAlignment(playerid, IconsMenu[playerid][0], 1);
	PlayerTextDrawColor(playerid, IconsMenu[playerid][0], 572662425);
	PlayerTextDrawSetShadow(playerid, IconsMenu[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, IconsMenu[playerid][0], 0);
	PlayerTextDrawFont(playerid, IconsMenu[playerid][0], 4);
	PlayerTextDrawSetPreviewModel(playerid, IconsMenu[playerid][0], 0);
	PlayerTextDrawSetPreviewRot(playerid, IconsMenu[playerid][0], 0.000000, 0.000000, 0.000000, 0.000000);
	PlayerTextDrawShow(playerid, IconsMenu[playerid][0]);
	new string[32];
	format(string, sizeof(string), "%s (%i)", Name(target), target);
	IconsMenu[playerid][1] = CreatePlayerTextDraw(playerid, 40.000003, 173.226730, string);
	PlayerTextDrawLetterSize(playerid, IconsMenu[playerid][1], 0.119998, 0.858309);
	PlayerTextDrawAlignment(playerid, IconsMenu[playerid][1], 2);
	PlayerTextDrawColor(playerid, IconsMenu[playerid][1], -3437313);
	PlayerTextDrawSetShadow(playerid, IconsMenu[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, IconsMenu[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, IconsMenu[playerid][1], 51);
	PlayerTextDrawFont(playerid, IconsMenu[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, IconsMenu[playerid][1], 1);
	PlayerTextDrawShow(playerid, IconsMenu[playerid][1]);
	IconsMenu[playerid][2] = CreatePlayerTextDraw(playerid, 39.799999, 188.011108, Translate(Language[23][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, IconsMenu[playerid][2], 0.119999, 0.858310);
	PlayerTextDrawTextSize(playerid, IconsMenu[playerid][2], 8.888891, 61.724441);
	PlayerTextDrawAlignment(playerid, IconsMenu[playerid][2], 2);
	PlayerTextDrawColor(playerid, IconsMenu[playerid][2], 255);
	PlayerTextDrawUseBox(playerid, IconsMenu[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, IconsMenu[playerid][2], -3437313);
	PlayerTextDrawSetShadow(playerid, IconsMenu[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, IconsMenu[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, IconsMenu[playerid][2], -3437313);
	PlayerTextDrawFont(playerid, IconsMenu[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, IconsMenu[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, IconsMenu[playerid][2], true);
	PlayerTextDrawShow(playerid, IconsMenu[playerid][2]);
	IconsMenu[playerid][3] = CreatePlayerTextDraw(playerid, 13.333333, 182.933334, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, IconsMenu[playerid][3], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, IconsMenu[playerid][3], 52.666664, 0.995544);
	PlayerTextDrawAlignment(playerid, IconsMenu[playerid][3], 1);
	PlayerTextDrawColor(playerid, IconsMenu[playerid][3], -3437313);
	PlayerTextDrawSetShadow(playerid, IconsMenu[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, IconsMenu[playerid][3], 0);
	PlayerTextDrawFont(playerid, IconsMenu[playerid][3], 4);
	PlayerTextDrawShow(playerid, IconsMenu[playerid][3]);
	IconsMenu[playerid][4] = CreatePlayerTextDraw(playerid, 39.799999, 199.500000, Translate(Language[24][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, IconsMenu[playerid][4], 0.119999, 0.858310);
	PlayerTextDrawTextSize(playerid, IconsMenu[playerid][4], 8.888891, 61.724441);
	PlayerTextDrawAlignment(playerid, IconsMenu[playerid][4], 2);
	PlayerTextDrawColor(playerid, IconsMenu[playerid][4], 255);
	PlayerTextDrawUseBox(playerid, IconsMenu[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, IconsMenu[playerid][4], -3437313);
	PlayerTextDrawSetShadow(playerid, IconsMenu[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, IconsMenu[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, IconsMenu[playerid][4], -3437313);
	PlayerTextDrawFont(playerid, IconsMenu[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, IconsMenu[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, IconsMenu[playerid][4], true);
	PlayerTextDrawShow(playerid, IconsMenu[playerid][4]);
	IconsMenu[playerid][5] = CreatePlayerTextDraw(playerid, 39.799999, 211.000000, Translate(Language[25][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, IconsMenu[playerid][5], 0.119998, 0.858309);
	PlayerTextDrawTextSize(playerid, IconsMenu[playerid][5], 8.888891, 61.724441);
	PlayerTextDrawAlignment(playerid, IconsMenu[playerid][5], 2);
	PlayerTextDrawColor(playerid, IconsMenu[playerid][5], 255);
	PlayerTextDrawUseBox(playerid, IconsMenu[playerid][5], true);
	PlayerTextDrawBoxColor(playerid, IconsMenu[playerid][5], -3437313);
	PlayerTextDrawSetShadow(playerid, IconsMenu[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, IconsMenu[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, IconsMenu[playerid][5], -3437313);
	PlayerTextDrawFont(playerid, IconsMenu[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, IconsMenu[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, IconsMenu[playerid][5], true);
	PlayerTextDrawShow(playerid, IconsMenu[playerid][5]);
	IconsMenu[playerid][6] = CreatePlayerTextDraw(playerid, 39.799999, 222.500000, Translate(Language[26][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, IconsMenu[playerid][6], 0.119998, 0.858309);
	PlayerTextDrawTextSize(playerid, IconsMenu[playerid][6], 8.888891, 61.724441);
	PlayerTextDrawAlignment(playerid, IconsMenu[playerid][6], 2);
	PlayerTextDrawColor(playerid, IconsMenu[playerid][6], 255);
	PlayerTextDrawUseBox(playerid, IconsMenu[playerid][6], true);
	PlayerTextDrawBoxColor(playerid, IconsMenu[playerid][6], -3437313);
	PlayerTextDrawSetShadow(playerid, IconsMenu[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, IconsMenu[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, IconsMenu[playerid][6], -3437313);
	PlayerTextDrawFont(playerid, IconsMenu[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, IconsMenu[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, IconsMenu[playerid][6], true);
	PlayerTextDrawShow(playerid, IconsMenu[playerid][6]);
	IconsMenu[playerid][7] = CreatePlayerTextDraw(playerid, 39.799999, 234.000000, Translate(Language[27][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, IconsMenu[playerid][7], 0.119998, 0.858309);
	PlayerTextDrawTextSize(playerid, IconsMenu[playerid][7], 8.888891, 61.724441);
	PlayerTextDrawAlignment(playerid, IconsMenu[playerid][7], 2);
	PlayerTextDrawColor(playerid, IconsMenu[playerid][7], 255);
	PlayerTextDrawUseBox(playerid, IconsMenu[playerid][7], true);
	PlayerTextDrawBoxColor(playerid, IconsMenu[playerid][7], -3437313);
	PlayerTextDrawSetShadow(playerid, IconsMenu[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, IconsMenu[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, IconsMenu[playerid][7], -3437313);
	PlayerTextDrawFont(playerid, IconsMenu[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, IconsMenu[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, IconsMenu[playerid][7], true);
	PlayerTextDrawShow(playerid, IconsMenu[playerid][7]);
	IconsMenu[playerid][8] = CreatePlayerTextDraw(playerid, 39.799999, 245.500000, Translate(Language[28][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, IconsMenu[playerid][8], 0.119998, 0.858309);
	PlayerTextDrawTextSize(playerid, IconsMenu[playerid][8], 8.888891, 61.724441);
	PlayerTextDrawAlignment(playerid, IconsMenu[playerid][8], 2);
	PlayerTextDrawColor(playerid, IconsMenu[playerid][8], 255);
	PlayerTextDrawUseBox(playerid, IconsMenu[playerid][8], true);
	PlayerTextDrawBoxColor(playerid, IconsMenu[playerid][8], -3437313);
	PlayerTextDrawSetShadow(playerid, IconsMenu[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, IconsMenu[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, IconsMenu[playerid][8], -3437313);
	PlayerTextDrawFont(playerid, IconsMenu[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, IconsMenu[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, IconsMenu[playerid][8], true);
	PlayerTextDrawShow(playerid, IconsMenu[playerid][8]);
	SelectTextDraw(playerid, 0x0099FFAA);
	SetPVarInt(playerid, "showedtarget", 1);
	return 1;
}
stock SeccureAnimation(playerid, const animlib[], const animname[])
{
    ClearAnimations(playerid);
    ApplyAnimation(playerid, animlib, animname, 4.0, 0, 0, 0, 0, 0, 1);
	return 1;
}
stock AntiMoneyCheat(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerSpawned[playerid])
		{
		    //if(IntroState[playerid] != -1) return true;
		    if(!AntiCheatOFF[playerid][MONEY_HACK])
			{
				if(SlotValue[playerid][0] > GetPlayerMoney(playerid)) SlotValue[playerid][0] = GetPlayerMoney(playerid);
				
				else if(SlotValue[playerid][0] < GetPlayerMoney(playerid))SetPlayerMoney(playerid,GetMoney(playerid));
			}
			else AntiCheatOFF[playerid][MONEY_HACK] --;
		}
	}
	return true;
}
stock J_AddStaticVehicleEx(model,Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300,siren = 0,interior = 0,world = 0)
{
	new carid = AddStaticVehicleEx(model, x, y, z, a, color_1, color_2, spawntime, siren);
	VehicleInfo[carid][vAntiRepair]=2;
	VehicleInfo[carid][vLock]=0;
	//VehicleHealth[carid] = 1000;
	VehicleInfo[carid][vModel] = model;
	VehicleInfo[carid][vPos][0] = x;
	VehicleInfo[carid][vPos][1] = y;
	VehicleInfo[carid][vPos][2] = z;
	VehicleInfo[carid][vPos][3] = a;
	VehicleInfo[carid][vColor_1] = color_1;
	VehicleInfo[carid][vColor_2] = color_2;
	VehicleInfo[carid][vSpawnTime] = spawntime;
	LinkVehicleToInterior(carid, interior);
	SetVehicleVirtualWorld(carid, world);
	SetVehicleNumberPlate(carid, "ggrp.ru");
    switch(model)
	{
	    case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[carid] = VEHICLE_STATE_BOAT;
		case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
		563, 577, 592, 593:  VehicleState[carid] = VEHICLE_STATE_PLANE;
		case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[carid] = VEHICLE_STATE_BIKE;
		case 509, 481, 510: VehicleState[carid] = VEHICLE_STATE_VELIK;
		case 462,448: VehicleState[carid] = VEHICLE_STATE_MOPED;
		case 538, 537: VehicleState[carid] = VEHICLE_STATE_TRAIN;
		default: VehicleState[carid] = VEHICLE_STATE_CAR;
	}
	return carid;
}
stock J_SetPlayerFacingAngle(playerid, Float:angle)
{
    SetPlayerFacingAngle(playerid, angle);
    SetCameraBehindPlayer(playerid);
    return true;
}
stock J_GetPlayerDrunkLevel(playerid)
{
	return PlayerDrunkLevels[playerid];
}
stock J_SetPlayerDrunkLevel(playerid,level)
{
	if(SetPlayerDrunkLevel(playerid,level))PlayerDrunkLevels[playerid] = level;
    return false;
}
stock J_SetPlayerScore(playerid,score)
{
    if(SetPlayerScore(playerid,score))PlayerInfo[playerid][pExp] = score;
    return false;
}
forward SpecPlayers(playerid);
public SpecPlayers(playerid)
	StartSpectate(playerid, SpecAd[playerid]);
stock StartSpectate(playerid, specid)
{
	new query[120];
	DisallowSpawn[playerid] = 1;
	format(query, sizeof(query), "%s[%d]",Name(specid),specid);
	PlayerTextDrawSetString(playerid, ReconPlayer[6],query);
	if(PlayerInfo[playerid][pAdmin] > 3)format(query, sizeof(query), "%s[%d] | [IP: %s] | [PING: %d]",Name(specid),specid,PlayerIp[specid],GetPlayerPing(specid));
	else format(query, sizeof(query), "%s[%d] | [PING: %d]",Name(specid),specid,PlayerIp[specid],GetPlayerPing(specid));
	SendClientMessage(playerid,0x2c8a7cFF,query);
	PlayerTextDrawShow(playerid, ReconPlayer[32]);
	PlayerTextDrawShow(playerid, ReconPlayer[33]);
	if(IsPlayerInAnyVehicle(specid))
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specid));
	}
	else
	{
		SetPlayerInterior(playerid,GetPlayerInterior(specid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specid));
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, specid);
	}
	return true;
}
stock SubTextDelete(playerid)
{
	for(new i = 16; i < sizeof(ReconPlayer); i++)PlayerTextDrawHide(playerid, ReconPlayer[i]),DisableEnableReconButton(playerid, i, 0, 0);
	ReconSelectSub[playerid] = INVALID_TEXT_DRAW;
	DisableEnableReconButton(playerid, ReconSelect[playerid], 1);
	return 1;
}
stock StopSpectate(playerid)
{
	if(!Spectate[playerid]) return true;
	DisallowSpawn[playerid] = 0;
	if(SpecAd[playerid] != INVALID_PLAYER_ID)SpecID[SpecAd[playerid]] = 65535;
	SpecAd[playerid] = 65535;
	PlayerTextDrawHide(playerid, ReconPlayer[31]);
	TogglePlayerSpectating(playerid, 0);
	TogglePlayerControllable(playerid, true);
	for(new i = 0; i < sizeof(ReconPlayer); i++)PlayerTextDrawHide(playerid, ReconPlayer[i]);
	for(new i = 7; i < sizeof(ReconPlayer); i++)DisableEnableReconButton(playerid, i, 0, 0);
	CancelSelectTextDraw(playerid);
	PlayerTextDrawSetString(playerid, ReconPlayer[5],"");
	PlayerTextDrawSetString(playerid, ReconPlayer[6],"");
	return true;
}
stock DisableEnableReconButton(playerid, button, enable, show = 1)
{
	PlayerTextDrawHide(playerid, ReconPlayer[button]);
	if(!enable)PlayerTextDrawBoxColor(playerid,ReconPlayer[button], 0xFFFFFFFF);
	else PlayerTextDrawBoxColor(playerid,ReconPlayer[button], 0xF1AEF2FF);
	if(show)PlayerTextDrawShow(playerid, ReconPlayer[button]);
	return 1;
}
stock J_SetPlayerArmour(playerid,Float:armour)
{
    if(armour < 0.0) armour = 0.0;
	if(SetPlayerArmour(playerid,armour))
	{
		AntiCheatOFF[playerid][ARMOUR_HACK] = 2;
		PlayerInfo[playerid][pArmour] = armour;
		return true;
	}
	return false;
}
stock J_SetPlayerHealth(playerid,Float:armour)
{
    new Float:Health;
    GetPlayerHealth(playerid,Health);
    if(armour < 0.0) armour = 0.0;
	SetPlayerHealth(playerid,armour);
	AntiCheatOFF[playerid][HEALTH_HACK] = 2;
	PlayerInfo[playerid][pHealth] = armour;
	return false;
}
forward J_SetVehicleHealth(carid,Float:health);
public J_SetVehicleHealth(carid,Float:health)
{
    if(health < 0.0) health = 0.0;
    VehicleInfo[carid][vAntiRepair]=2;
	if(SetVehicleHealth(carid,health))VehicleHealth[carid] = health;
	return true;
}
forward MysqlLoadFamily(playerid);
public MysqlLoadFamily(playerid)
{
    FamilyInfo[playerid][famID] = cache_get_field_content_int(0, "ID", mysql);
	cache_get_field_content(0, "FamilyName", FamilyInfo[playerid][famName],mysql, 40);
	cache_get_field_content(0, "FamilyLider", FamilyInfo[playerid][famLider],mysql, 24);
	cache_get_field_content(0, "FamilyZam", FamilyInfo[playerid][famZam],mysql, 24);
	FamilyInfo[playerid][famColor] = cache_get_field_content_int(0, "Color", mysql);
	FamilyValue[playerid][0] = cache_get_field_content_int(0, "Money", mysql);
	cache_get_field_content(0, "SkladZam", FamilyInfo[playerid][famSkladZam],mysql, 24);
	FamilyInfo[playerid][famStatusSklad] = cache_get_field_content_int(0, "StatusSklad", mysql);
	FamilyValue[playerid][1] = cache_get_field_content_int(0, "Mats", mysql);
	FamilyValue[playerid][2] = cache_get_field_content_int(0, "Drugs", mysql);
	FamilyValue[playerid][3] = cache_get_field_content_int(0, "Maska", mysql);
	FamilyValue[playerid][4] = cache_get_field_content_int(0, "Benz", mysql);
	FamilyValue[playerid][5] = cache_get_field_content_int(0, "Remote", mysql);
	FamilyInfo[playerid][famSpawn][0] = cache_get_field_content_float(0, "Spawn_X", mysql);
	FamilyInfo[playerid][famSpawn][1] = cache_get_field_content_float(0, "Spawn_Y", mysql);
	FamilyInfo[playerid][famSpawn][2] = cache_get_field_content_float(0, "Spawn_Z", mysql);
	FamilyInfo[playerid][famSpawn][3] = cache_get_field_content_float(0, "Spawn_A", mysql);
	FamilyInfo[playerid][famVirtalWorld] = cache_get_field_content_int(0, "VirtalWorld", mysql);
	FamilyInfo[playerid][famInterior] = cache_get_field_content_int(0, "Interior", mysql);
	FamilyInfo[playerid][famHouse] = cache_get_field_content_int(0, "House", mysql);
    FamilyInfo[playerid][famAmount] = cache_get_field_content_int(0, "Amount", mysql);
	SetPVarInt(playerid,"SkladCode",-1);
	for(new i = 6; i < 25; i++){
		static column_item[] = "Slot%d";
		new format_item[8];
		f(format_item, column_item, i);
		FamilyValue[playerid][i] = cache_get_field_content_int(0, format_item, mysql);
	}
	return true;
}
forward MysqlCheckFamily3(playerid, inputtext[]);
public MysqlCheckFamily3(playerid, inputtext[])
{
    new query[156],string[128];
    if(cache_get_row_count(mysql))return ShowPlayerDialogEx(playerid,494,1,"{43CD80}Изменить название семьи","На складе должно быть 200.000$, чтобы можно было изменить название{FFFFFF}\n\nВведите новое название семьи:\n\n{D94141}Данное название занято","Выбор","Отмена");
	else
	{
        foreach(Player, i)
	    {
			if(PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
			{
				strmid(FamilyInfo[i][famName], inputtext, 0, strlen(inputtext), 300);
				FamilyValue[i][0] -= 200000;
			}
		}
		format(query, sizeof(query), "UPDATE `family` SET `FamilyName` = '%s',`Money` = '%d' WHERE `ID` = '%d'",inputtext,FamilyValue[playerid][0],PlayerInfo[playerid][FamilyID]);
		mysql_pquery(mysql, query);
		format(string,sizeof(string),"{%s}[%s] %s изменил название семьи на %s",GetFamColor(playerid),FamilyInfo[playerid][famName],PlayerName[playerid],inputtext);
        SendFama(playerid,-1,string);
	}
	return true;
}
forward MysqlCheckFamily(playerid, inputtext[]);
public MysqlCheckFamily(playerid, inputtext[])
{
	if(cache_get_row_count(mysql))return ShowPlayerDialogEx(playerid,492,1,"{43CD80}Создание семей","{ffffff}Вы собираетесь создать семью. Цена: 1.000.000$\n\nНапишите название вашей будущей семьи\n\n{D94141}Название семьи уже занято","Создать","Отмена");
	else
	{
	    if(PlayerInfo[playerid][FamilyID]!=-1)return SendError(playerid,"Вы уже состоите в семье");
	    if(GetMoney(playerid) < 1000000)return ShowPlayerDialogEx(playerid,492,1,"{43CD80}Создание семей","{ffffff}Вы собираетесь создать семью. Цена: 1.000.000$\n{FFFFFF}\nНапишите название вашей будущей семей","Создать","Отмена");
        new query[128];
		format(query, sizeof(query), "INSERT INTO `family` (`FamilyName`,`FamilyLider`) VALUES ('%s','%s')",inputtext,PlayerName[playerid]);
		mysql_pquery(mysql, query);
		GiveMoney(playerid, -1000000, "Создание семьи");
		new string[128];
  		format(string,sizeof(string),"Вы создали семью %s",inputtext);
		SendClientMessage(playerid,COLOR_GOLD,string);
  		format(string,sizeof(string),"[A] %s создал семью %s",PlayerName[playerid],inputtext);
		SendAdminsMessage(COLOR_GREEN,string,1);
		SetPVarInt(playerid,"Load",1);
		SendInfo(playerid,"Для управления семьёй используйте {7396FB}'/family'");
		SetTimerEx("SaveFamilyID", 2000, false, "i", playerid);
		SetString(FamilyInfo[playerid][famName],inputtext);
		SetString(FamilyInfo[playerid][famLider],PlayerName[playerid]);
		FamilyInfo[playerid][famZam] = -1;
		FamilyInfo[playerid][famColor] = 2;
		FamilyValue[playerid][0] = 0;
		FamilyInfo[playerid][famSkladZam] = -1;
		FamilyInfo[playerid][famStatusSklad] = 0;
		FamilyValue[playerid][1] = 0;
		FamilyValue[playerid][2] = 0;
		FamilyValue[playerid][3] = 0;
		FamilyValue[playerid][4] = 0;
		FamilyValue[playerid][5] = 0;
		for(new x = 6; x < 25; x++)FamilyValue[playerid][x] = 0;
		FamilyInfo[playerid][famSpawn][0] = 0;
		FamilyInfo[playerid][famSpawn][1] = 0;
		FamilyInfo[playerid][famSpawn][2] = 0;
		FamilyInfo[playerid][famSpawn][3] = 0;
		FamilyInfo[playerid][famVirtalWorld] = 0;
		FamilyInfo[playerid][famAmount] = 1;
		FamilyInfo[playerid][famInterior] = 0;
		FamilyInfo[playerid][famHouse] = 0;
		for(new i = 6; i < 25; i++)FamilyValue[playerid][i] = 0;
		SaveAccount(playerid);
	}
	return true;
}
forward SaveFamilyID(playerid);
public SaveFamilyID(playerid)
{
    new query[128];
    mysql_format(mysql, query, sizeof(query), "SELECT `ID` FROM `family` WHERE `FamilyLider` = '%s'", PlayerName[playerid]);
	mysql_pquery(mysql, query, "MysqlLoadFamily2", "d", playerid);
	SetTimerEx("SaveFamilyID2", 2000, false, "i", playerid);
	return true;
}
forward MysqlLoadFamily2(playerid);
public MysqlLoadFamily2(playerid)
{
	FamilyInfo[playerid][famID] = cache_get_row_int(0, 0, mysql);
	return true;
}
forward SaveFamilyID2(playerid);
public SaveFamilyID2(playerid)
{
	PlayerInfo[playerid][FamilyID] = FamilyInfo[playerid][famID];
	return true;
}
stock J_RepairVehicle(carid)
{
	VehicleInfo[carid][vAntiRepair]=2;
	RepairVehicle(carid);
	VehicleHealth[carid] = 1000;
	return true;
}
forward J_SetPlayerPos(playerid, Float:X, Float:Y, Float:Z);
public J_SetPlayerPos(playerid, Float:X, Float:Y, Float:Z)
{
	tm_FreezePlayer(playerid);
	acPos[playerid][0] = X;
    acPos[playerid][1] = Y;
    acPos[playerid][2] = Z;
    SetPlayerPos(playerid, acPos[playerid][0], acPos[playerid][1], acPos[playerid][2]);
	SetPVarInt(playerid, "PauseUpdate", 3);
    Streamer_Update(playerid);
	return true;
}
stock J_SetVehiclePos(vehicleid,Float:X,Float:Y,Float:Z)
{
	if(SetVehiclePos(vehicleid,X,Y,Z))
	{
	    foreach(new i:Player)
		{
		    if(!IsPlayerConnected(i)) continue;
		    if(IsPlayerInVehicle(i,vehicleid))
			{
				acPos[i][0] = X;
				acPos[i][1] = Y;
				acPos[i][2] = Z;
				SetPVarInt(i, "PauseUpdate", 3);
			}
		}
	    return true;
    }
    return false;
}
stock J_Kick(playerid)
{
    if(IsPlayerNPC(playerid)) return false;
	if(PlayerInfo[playerid][pAdmin]>5)return false;
	Kick(playerid);
	return true;
}
stock SpecPl(playerid,bool:spec)
{
	pTemp[playerid][SPECTPLAYER] = spec;
	TogglePlayerSpectating(playerid,spec);
}
stock Float:DistanceCameraTargetToLocation(Float:CamX, Float:CamY, Float:CamZ, Float:ObjX, Float:ObjY, Float:ObjZ, Float:FrX, Float:FrY, Float:FrZ)
{
	new Float:TGTDistance;
	TGTDistance = floatsqroot((CamX - ObjX) * (CamX - ObjX) + (CamY - ObjY) * (CamY - ObjY) + (CamZ - ObjZ) * (CamZ - ObjZ));
	new Float:tmpX, Float:tmpY, Float:tmpZ;
	tmpX = FrX * TGTDistance + CamX;
	tmpY = FrY * TGTDistance + CamY;
	tmpZ = FrZ * TGTDistance + CamZ;
	return floatsqroot((tmpX - ObjX) * (tmpX - ObjX) + (tmpY - ObjY) * (tmpY - ObjY) + (tmpZ - ObjZ) * (tmpZ - ObjZ));
}
stock Float:GetPointAngleToPoint(Float:x2, Float:y2, Float:X, Float:Y)
{
  	new Float:DX, Float:DY;
  	new Float:angle;

  	DX = floatabs(floatsub(x2,X));
  	DY = floatabs(floatsub(y2,Y));

  	if (DY == 0.0 || DX == 0.0)
	{
	    if(DY == 0 && DX > 0) angle = 0.0;
	    else if(DY == 0 && DX < 0) angle = 180.0;
	    else if(DY > 0 && DX == 0) angle = 90.0;
	    else if(DY < 0 && DX == 0) angle = 270.0;
	    else if(DY == 0 && DX == 0) angle = 0.0;
  	}
  	else
	{
    	angle = atan(DX/DY);
    	if(X > x2 && Y <= y2) angle += 90.0;
    	else if(X <= x2 && Y < y2) angle = floatsub(90.0, angle);
    	else if(X < x2 && Y >= y2) angle -= 90.0;
    	else if(X >= x2 && Y > y2) angle = floatsub(270.0, angle);
  	}
  	return floatadd(angle, 90.0);
}
stock GetXYInFrontOfPoint(&Float:x, &Float:y, Float:angle, Float:distance)
{
	x += (distance * floatsin(-angle, degrees));
	y += (distance * floatcos(-angle, degrees));
}
stock IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius)
{
  	new Float:camera_x,Float:camera_y,Float:camera_z,Float:vector_x,Float:vector_y,Float:vector_z;
  	GetPlayerCameraPos(playerid, camera_x, camera_y, camera_z);
  	GetPlayerCameraFrontVector(playerid, vector_x, vector_y, vector_z);
	new Float:vertical, Float:horizontal;
	switch (GetPlayerWeapon(playerid))
	{
	  	case 34,35,36:
	  	{
	  		if (DistanceCameraTargetToLocation(camera_x, camera_y, camera_z, x, y, z, vector_x, vector_y, vector_z) < radius) return true;
	  		return false;
	  	}
	  	case 30,31: {vertical = 4.0; horizontal = -1.6;}
	  	case 33: {vertical = 2.7; horizontal = -1.0;}
	  	default: {vertical = 6.0; horizontal = -2.2;}
	}
  	new Float:angle = GetPointAngleToPoint(0, 0, floatsqroot(vector_x*vector_x+vector_y*vector_y), vector_z) - 270.0;
  	new Float:resize_x, Float:resize_y, Float:resize_z = floatsin(angle+vertical, degrees);
  	GetXYInFrontOfPoint(resize_x, resize_y, GetPointAngleToPoint(0, 0, vector_x, vector_y)+horizontal, floatcos(angle+vertical, degrees));
  	if (DistanceCameraTargetToLocation(camera_x, camera_y, camera_z, x, y, z, resize_x, resize_y, resize_z) < radius) return true;
  	return false;
}
stock Float:GetAngleToPoint(Float:X, Float:Y, Float:A, Float:x, Float:y)
{
	new Float:angle = 185.0 - atan2(X-x, Y-y);
	A -= (angle - 5.0);
	return A;
}
stock Float:GetVehicleAngleToPoint(vehicleid, Float:x, Float:y)
{
    new Float:ix, Float:iy, Float:iz, Float:a;
	GetVehicleZAngle(vehicleid, a);
	GetVehiclePos(vehicleid, ix, iy, iz);
	return GetAngleToPoint(ix, iy, a, x, y);
}
forward GetPlayerAngleToPoint(playerid, Float:x, Float:y);
stock GetPlayerAngleToPoint(playerid, Float:x, Float:y)
{
	new Float:ix, Float:iy, Float:iz, Float:a;
	GetPlayerFacingAngle(playerid, a);
	GetPlayerPos(playerid, ix, iy, iz);
	return floatround(GetAngleToPoint(ix, iy, a, x, y));
}
stock Float:GetPlayerAngleToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	return float(GetPlayerAngleToPoint(playerid, x, y));
}
stock GetPlayerFaceToPlayer(playerid, targetid, Float:facing)
{
	new Float:radius = GetPlayerAngleToPlayer(playerid, targetid);
	return (radius > -facing && radius < facing);
}
stock TurnPlayerFaceToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	SetPlayerFaceToPoint(playerid, x, y);
	return true;
}
stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y)
{
    new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
    return true;
}
/*
if(PlayerInfo[playerid][pAdmin] < 3 ) return false;
if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
new Name[24];
new Cache:result = mysql_query(mysql, "SELECT `Name` FROM `bannames` ORDER BY `ID` DESC LIMIT 0,  20");
new accounts = cache_get_row_count(mysql);
if(accounts == 0) return SendError(playerid,"Список забаненных пуст");
FirstBL[playerid] = 0;
for(new i; i < accounts; i ++)
{
    cache_get_row(i, 0, Name, mysql);
    format(string, sizeof(string), "%s%s\n", string, Name);
}
if(accounts == 20) format(string, sizeof(string), "%s{AFAFAF}Далее >>>\n", string);
cache_delete(result, mysql);

	*/
stock CheckBanned(playerid,listitem)
{
	if(listitem == 20) FirstBL[playerid] += 20;
	else FirstBL[playerid] -= 20;
	if(FirstBL[playerid] < 0)
	{
		FirstBL[playerid] = 0;
		return SendError(playerid,"Больше нет забаненных");
	}
	new bstring[600];
	format(bstring, sizeof(bstring), "SELECT `Name` FROM `bannames` ORDER BY `ID` DESC LIMIT %i,  20", FirstBL[playerid]);
	mysql_pquery(mysql, bstring, "MysqlCheckBanned", "d", playerid);
	return 1;
}
forward MysqlCheckBanned(playerid);
public MysqlCheckBanned(playerid)
{
	new bstring[600], Name[25];
	new accounts = cache_get_row_count(mysql);
	if(accounts == 0) return SendError(playerid,"Больше нет забаненных");
	for(new i; i < accounts; i ++)
	{
		cache_get_row(i, 0, Name, mysql);
		format(bstring, sizeof(bstring), "%s%s\n", bstring, Name);
	}
	if(accounts == 20) strcat(bstring, "{7396FB}Далее >>>\n");
	if(FirstBL[playerid]) strcat(bstring, "{7396FB}<<< Назад");
	if(!ShowPlayerDialogEx(playerid, 96, 2, "{43CD80}Забаненные", bstring, "Выбор", "Назад"))SendError(playerid,"Недоступно в данный момент");
	return 1;
}
stock UslugDonate(playerid)
{
	new donate[1280];
	strcat(donate, "Позиция\tСтоимость\n");
	for(new i;i < sizeof(DonateText);i ++)
	{
		strcat(donate,DonateText[i]);
		strcat(donate,"\n");
	}
	ShowPlayerDialogEx(playerid,223,5,"{43CD80}Good Game Shop",donate,"Выбор","Назад");
	return 1;
}
stock GetWeaponModel(weaponid)
{
    switch(weaponid)
    {
        case 1: 		return 331;
        case 2..8: 		return weaponid+331;
        case 9: 		return 341;
        case 10..15: 	return weaponid+311;
        case 16..18: 	return weaponid+326;
        case 22..29: 	return weaponid+324;
        case 30,31: 	return weaponid+325;
        case 32: 		return 372;
        case 33..45: 	return weaponid+324;
        case 46: 		return 371;
        default: return false;
    }
    return false;
}
stock SpeedVehicle(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else return 0;
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 180.0;
    return floatround(ST[3]);
}
stock BadFloat(Float:x)
{
	if(x >= 10.0 || x <= -10.0)
	    return true;

	return false;
}
forward NoRoof(playerid);
public NoRoof(playerid)
{
    new carid = GetPlayerSurfingVehicleID(playerid);
    if(carid != INVALID_VEHICLE_ID )
    {
        new Float:speed = GetVehicleSpeed(carid);
        new cm = GetVehicleModelEx(carid);
        switch(cm)
        {
            case 430,446,452,453,454,472,473,478,484,493,554,543,595,422,605,600,592:{return 1;}
            default:{}
        }
        if(speed > 30)
        {
            new Float:slx, Float:sly, Float:slz;
            GetPlayerPos(playerid, slx, sly, slz);
            J_SetPlayerPos(playerid, slx, sly, slz+2.5);
            ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
        }
    }
    return 1;
}
forward LoginDialogMysql(playerid);
public LoginDialogMysql(playerid)
{
	if(cache_get_row_count(mysql))
	{
		new cIP1[16], cIP2[16], cIP3[16], cKey, checkKey, tempip[16];
		GetPlayerIp(playerid, tempip, 16);
		cache_get_row(0, 0, cIP1, mysql);
		cache_get_row(0, 1, cIP2, mysql);
		cache_get_row(0, 3, cIP3, mysql);
		cKey = cache_get_field_content_int(0, "KeyCheck", mysql);
		checkKey = cache_get_field_content_int(0, "Key", mysql);
		cache_get_field_content(0, "AuthCode", PlayerInfo[playerid][AuthCode], 17);
		PlayerInfo[playerid][AuthAct] = cache_get_field_content_int(0, "AuthAct", mysql);
		if(cKey == 0 && checkKey != 0 && !(IsASuccesIP(tempip, cIP1) || IsASuccesIP(tempip, cIP2) || IsASuccesIP(tempip, cIP3)))
		{
			SendInfo(playerid,"У вас привязан защитный код, введите его с помощью экранной панели");
			format(pclicklen[playerid],10,"");
			SetKlickNumbers();
			for(new i; i < 21; i++)TextDrawShowForPlayer(playerid,klick[i]);
			pKlicked[playerid] = CreatePlayerTextDraw(playerid, 320.000000, 185.000000, "_");
			PlayerTextDrawLetterSize(playerid, pKlicked[playerid], 0.178927, 1.125548);
			PlayerTextDrawAlignment(playerid, pKlicked[playerid], 2);
			PlayerTextDrawColor(playerid, pKlicked[playerid], -6749953);
			PlayerTextDrawSetShadow(playerid, pKlicked[playerid], 0);
			PlayerTextDrawSetOutline(playerid, pKlicked[playerid], 0);
			PlayerTextDrawBackgroundColor(playerid, pKlicked[playerid], 51);
			PlayerTextDrawFont(playerid, pKlicked[playerid], 2);
			PlayerTextDrawSetProportional(playerid, pKlicked[playerid], 1);
			SelectTextDraw(playerid, 0xD94141AA);
			clickerstat[playerid]=1;
		}
		else if(PlayerInfo[playerid][AuthAct] == 1 && checkKey == 0 && !(IsASuccesIP(tempip, cIP1) || IsASuccesIP(tempip, cIP2) || IsASuccesIP(tempip, cIP3)))
		{
			SetPVarInt(playerid, "CodeActivated", 60);
			TogglePlayerControllable(playerid, 0);
			return ShowPlayerDialogEx(playerid, 947, DIALOG_STYLE_INPUT, "{43CD80}Google Authenticator", "{ffffff}Система безопасности запрашивает код из приложения Google Authenticator\nДля игры вам нужно ввести шестизначный код из приложения в поле ниже:", "Далее", "Выход");
		}
		else OnPlayerLogin(playerid);
	}
	else
	{
		gPlayerLogTries[playerid] --;
		if(gPlayerLogTries[playerid] <= 0) return J_Kick(playerid);
		new str[100],string2[270];
	    format(str,sizeof(str),"\n\n\\c{FFFFFF}Добро пожаловать на {EBA225}Good Game Role Play{FFFFFF}\n\n");
		strcat(string2,str);
		strcat(string2,"\\c{FF0000}Неверный пароль!\n");
		format(str,sizeof(str),"\\c{FFFFFF}Попыток для ввода пароля: {28910B}%d\n\n",gPlayerLogTries[playerid]);
		strcat(string2,str);
	    return Dialog_Open(playerid,2,DIALOG_STYLE_PASSWORD,"{43CD80}Авторизация",string2,"Готово","");
	}
	return 1;
}
FarmReady(playerid)
{
	TogglePlayerControllable(playerid,1);
	RemovePlayerMapIcon(playerid,97);
	if(!IsPlayerInDynamicCP(playerid, MinerCP[channelfarm[playerid]]))
	{
		KillCraftTD2(playerid);
		ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
		crafttry[playerid] = 0;
		PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
		return SendError(playerid,"Вы растеряли весь урожай");
	}
	switch(crafttry[playerid])
	{
	case 3:
		{
			new chancecraft = random(7);
			switch(chancecraft)
			{
				case 0:
				{
					InJob[playerid] = 3;
					TogglePlayerDynamicCP(playerid, MinerDownCP, true);
					CarryAnim(playerid);
					SendInfo(playerid,"Отнесите урожай на {7396FB}склад");
					crafttry[playerid] = 0;
					PlayerPlaySound(playerid, 1138, 0.0, 0.0, 0.0);
					SetPlayerAttachedObject(playerid, 6,  2901, 1,0.11,0.36,0.0,0.0,90.0);
					for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], false);
					return 1;
				}
				default:
				{
					SendError(playerid,"Вы не смогли собрать урожай");
					ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
					PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
					crafttry[playerid]=0;
					return 1;
				}
			}
			return 1;
		}
	case 4:
		{
			new chancecraft = random(4);
			switch(chancecraft)
			{
				case 0:
				{
					InJob[playerid] = 3;
					TogglePlayerDynamicCP(playerid, MinerDownCP, true);
					CarryAnim(playerid);
					SendInfo(playerid,"Отнесите урожай на {7396FB}склад");
					crafttry[playerid] = 0;
					PlayerPlaySound(playerid, 1138, 0.0, 0.0, 0.0);
					SetPlayerAttachedObject(playerid, 6,  2901, 1,0.11,0.36,0.0,0.0,90.0);
					for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], false);
					return 1;
				}
				default:
				{
					SendError(playerid,"Вы не смогли собрать урожай");
					ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
					PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
					crafttry[playerid]=0;
					return 1;
				}
			}
			return 1;
		}
	case 5:
		{
			InJob[playerid] = 3;
	        TogglePlayerDynamicCP(playerid, MinerDownCP, true);
			CarryAnim(playerid);
			SendInfo(playerid,"Отнесите урожай на {7396FB}склад");
			crafttry[playerid] = 0;
			PlayerPlaySound(playerid, 1138, 0.0, 0.0, 0.0);
            SetPlayerAttachedObject(playerid, 6,  2901, 1,0.11,0.36,0.0,0.0,90.0);
            for(new i; i < sizeof(MinPos); i ++) TogglePlayerDynamicCP(playerid, MinerCP[i], false);
			return 1;
		}
	default:SendClientMessage(playerid,COLOR_RED,"Произошла ошибка. Сообщите о ней в тех.раздел (#FarmReady)");
	}
	return 1;
}
forward CraftTimer(playerid);
public CraftTimer(playerid)
{
	if(GetPVarInt(playerid, "SPAMTIMER"))
	{
		PlayerTextDrawHide(playerid, TDCraft[3][playerid]);
		DestroyPlayerTD(playerid,TDCraft[3][playerid]);
		CraftTD2(playerid);
	}
	else return false;
	return true;
}
forward CraftTD1(playerid);
public CraftTD1(playerid)
{
	TDCraft[0][playerid] = CreatePlayerTextDraw(playerid,263.666534, 175.466705, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid,TDCraft[0][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid,TDCraft[0][playerid], 116.000015, 139.377761);
	PlayerTextDrawAlignment(playerid,TDCraft[0][playerid], 1);
	PlayerTextDrawColor(playerid,TDCraft[0][playerid], 0xD68400FF);
	PlayerTextDrawSetShadow(playerid,TDCraft[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid,TDCraft[0][playerid], 0);
	PlayerTextDrawFont(playerid,TDCraft[0][playerid], 4);
	PlayerTextDrawShow(playerid, TDCraft[0][playerid]);
	TDCraft[1][playerid] = CreatePlayerTextDraw(playerid,266.999969, 178.785186, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid,TDCraft[1][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid,TDCraft[1][playerid], 109.666664, 131.911102);
	PlayerTextDrawAlignment(playerid,TDCraft[1][playerid], 1);
	PlayerTextDrawColor(playerid,TDCraft[1][playerid], 0x4F4F4FFF);
	PlayerTextDrawSetShadow(playerid,TDCraft[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid,TDCraft[1][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid,TDCraft[1][playerid], 10092288);
	PlayerTextDrawFont(playerid,TDCraft[1][playerid], 4);
	PlayerTextDrawShow(playerid, TDCraft[1][playerid]);
	TDCraft[2][playerid] = CreatePlayerTextDraw(playerid,300.333312, 220.681488, "LD_SPAC:white"),
	PlayerTextDrawLetterSize(playerid,TDCraft[2][playerid], 0.000000, 0.000000),
	PlayerTextDrawTextSize(playerid,TDCraft[2][playerid], 43.000000, 49.362976),
	PlayerTextDrawAlignment(playerid,TDCraft[2][playerid], 1),
	PlayerTextDrawColor(playerid,TDCraft[2][playerid], 0xD68400FF),
	PlayerTextDrawSetShadow(playerid,TDCraft[2][playerid], 177),
	PlayerTextDrawSetOutline(playerid,TDCraft[2][playerid], 1),
	PlayerTextDrawFont(playerid,TDCraft[2][playerid], 4);
	PlayerTextDrawShow(playerid, TDCraft[2][playerid]);
	CraftTD2(playerid);
}
forward KillCraftTD1(playerid);
public KillCraftTD1(playerid)
{
	craftpos[1][playerid] = -1;
	craftpos[0][playerid] = -1;
	SendClientMessage(playerid,COLOR_ORANGE,"Время истекло. Вы проиграли");
	crafttry[playerid] = 0;
	DeletePVar(playerid,"SPAMTIMER");
	TogglePlayerControllable(playerid,1);
	ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
	for(new i;i <= 4;i++)DestroyPlayerTD(playerid, TDCraft[i][playerid]);
	PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
	return true;
}
forward KillCraftTD2(playerid);
public KillCraftTD2(playerid)
{
	KillTimer(timerkc1[playerid]);
	craftpos[1][playerid] = -1;
	craftpos[0][playerid] = -1;
	DeletePVar(playerid,"SPAMTIMER");
	for(new i;i <= 4;i++)DestroyPlayerTD(playerid, TDCraft[i][playerid]);
	return true;
}
forward CraftTD2(playerid);
public CraftTD2(playerid)
{
	SetTimerEx("CraftTimer",1201,false,"i",playerid);
	switch(crafttry[playerid])
	{
	case 0:
		{
			switch(random(8))
			{
			case 0: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,269.000152, 236.533358, "x");craftpos[0][playerid] = 0;}
			case 1: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,267.000152, 236.533358, "x");craftpos[0][playerid] = 1;}
			case 2: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,275.000152, 236.533358, "x");craftpos[0][playerid] = 2;}
			case 3: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,300.000152, 236.533358, "x");craftpos[0][playerid] = 3;}
			case 4: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,310.000152, 236.533358, "x");craftpos[0][playerid] = 4;}
			case 5: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,325.000152, 236.533358, "x");craftpos[0][playerid] = 5;}
			case 6: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,350.000152, 236.533358, "x");craftpos[0][playerid] = 6;}
			case 7: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,349.500152, 236.533358, "x");craftpos[0][playerid] = 7;}
			}
		}
	case 1..2:
		{
			switch(random(8))
			{
			case 0: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,318.000000, 205.333358, "x");craftpos[1][playerid] = 0;}
			case 1: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,318.000000, 190.500000, "x");craftpos[1][playerid] = 1;}
			case 2: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,318.000000, 223.150000, "x");craftpos[1][playerid] = 2;}
			case 3: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,318.000000, 235.610000, "x");craftpos[1][playerid] = 3;}
			case 4: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,318.000000, 242.250000, "x");craftpos[1][playerid] = 4;}
			case 5: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,318.000000, 267.555555, "x");craftpos[1][playerid] = 5;}
			case 6: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,318.000000, 170.000000, "x");craftpos[1][playerid] = 6;}
			case 7: {TDCraft[3][playerid] = CreatePlayerTextDraw(playerid,318.000000, 180.858000, "x");craftpos[1][playerid] = 7;}
			}
		}
	}
	PlayerTextDrawLetterSize(playerid,TDCraft[3][playerid], 0.148933, 0.949203);
	PlayerTextDrawAlignment(playerid,TDCraft[3][playerid], 1);
	PlayerTextDrawColor(playerid,TDCraft[3][playerid], -16776961);
	PlayerTextDrawUseBox(playerid,TDCraft[3][playerid], true);
	PlayerTextDrawSetShadow(playerid,TDCraft[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid,TDCraft[3][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,TDCraft[3][playerid], 0xFFFFFFFF);
	PlayerTextDrawFont(playerid,TDCraft[3][playerid], 2);
	PlayerTextDrawSetProportional(playerid,TDCraft[3][playerid], 1);
	PlayerTextDrawBoxColor(playerid,TDCraft[3][playerid], 0xFFFFFF00);
	PlayerTextDrawShow(playerid, TDCraft[3][playerid]);
	return 1;
}
stock craft_menu(playerid)
{
	if(GetPVarInt(playerid, "SPAMTIMER") == 1)
	{
		switch(crafttry[playerid])
		{
		case 0:
			{
				switch(craftpos[0][playerid])
				{
				case 3..5:
					{
						SendClientMessage(playerid, COLOR_LIME, "Отлично! Теперь поймайте мишень на вертикальной оси");
						KillTimer(timerkc1[playerid]);
						timerkc1[playerid]=SetTimerEx("KillCraftTD1",16500,false,"d",playerid);
						craftpos[0][playerid]=-1;
						crafttry[playerid]=1;
					}
				default:
					{
						SendClientMessage(playerid, COLOR_ORANGE, "Вы не поймали цель. Теперь поймайте мишень на вертикальной оси");
						KillTimer(timerkc1[playerid]);
						timerkc1[playerid]=SetTimerEx("KillCraftTD1",16500,false,"d",playerid);
						craftpos[0][playerid]=-1;
						crafttry[playerid]=2;
					}
				}
				return 1;
			}
		case 1:
			{
				switch(craftpos[1][playerid])
				{
				case 2..4:
					{
						SendClientMessage(playerid, COLOR_LIME, "Отлично! Вы поймали цель на вертикальной оси");
						crafttry[playerid]=5;
						KillCraftTD2(playerid);
						FarmReady(playerid);
					}
				default:
					{
						SendClientMessage(playerid, COLOR_ORANGE, "Вы не поймали цель на вертикальной оси");
						crafttry[playerid]=4;
						KillCraftTD2(playerid);
						FarmReady(playerid);
					}
				}
				crafttry[playerid]=0;
			}
		case 2:
			{
				switch(craftpos[1][playerid])
				{
				case 2..4:
					{
						SendClientMessage(playerid, COLOR_LIME, "Отлично! Вы поймали цель на вертикальной оси");
						crafttry[playerid] = 4;
						KillCraftTD2(playerid);
						FarmReady(playerid);
					}
				default:
					{
						SendClientMessage(playerid, COLOR_ORANGE, "Вы не поймали цель на вертикальной оси");
						crafttry[playerid]=3;
						KillCraftTD2(playerid);
						FarmReady(playerid);
					}
				}
				crafttry[playerid]=0;
			}
		}
	}
	return 1;
}
MineReady(playerid)
{
	TogglePlayerControllable(playerid,1);
	if(!IsPlayerInDynamicArea(playerid, MinerInfo[channelfarm[playerid]][1]))
	{
		KillMiner(playerid);
		ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 6))
			RemovePlayerAttachedObject(playerid, 6);
		PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
		crafttry[playerid] = 0;
		return SendError(playerid,"Вы растеряли всё сырьё");
	}
	switch(crafttry[playerid])
	{
	case 0..3:
		{
			ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
			KillMiner(playerid);
			PlayerPlaySound(playerid, 1139, 0.0, 0.0, 0.0);
			return SendError(playerid,"Время вышло. Вы не собрали нужное количество камней");
		}
	case 4..7:
		{
			KillMiner(playerid);
			InJob[playerid] = 2;
			ApplyAnimation(playerid, "GANGS", "PRTIAL_GNGTLKA", 1.1, 0, 1, 1, 1, 1, 1);
			SetPlayerAttachedObject(playerid,6, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);// Дали телегу с камнем
            SetPlayerAttachedObject(playerid,7, 905, 1, -0.275758, 1.305280, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			SendInfo(playerid,"Отвезите сырьё на {7396FB}склад");
			PlayerPlaySound(playerid, 1138, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "MineDobito", random(15)+30);
			return 1;
		}
	default:SendClientMessage(playerid,COLOR_RED,"Произошла ошибка. Сообщите о ней в тех.раздел (#MineReady)");
	}
	return 1;
}
stock KillMiner(playerid)
{
	ClearAnims(playerid);
	crafttry[playerid] = 0;
	DeletePVar(playerid,"SPAMTIMER");
	TogglePlayerControllable(playerid,1);
	for(new i; i < 10;i++)
		TextDrawHideForPlayer(playerid, FactoryGame[i]);
	PlayerTextDrawHide(playerid, FactoryKamen[playerid]);
	DestroyPlayerTD(playerid, FactoryKamen[playerid]);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 6))
		RemovePlayerAttachedObject(playerid, 6);
	CancelSelectTextDraw(playerid);
	return true;
}
forward MinerTimer(playerid);
public MinerTimer(playerid)
{
	if(GetPVarInt(playerid, "SPAMTIMER") == 13)return MineReady(playerid);
	if(GetPVarInt(playerid, "SPAMTIMER"))
	{
		PlayerTextDrawHide(playerid, FactoryKamen[playerid]);
		DestroyPlayerTD(playerid, FactoryKamen[playerid]);
		MinerRepeat(playerid);
	}
	else return false;
	return true;
}
stock StartMinerGame(playerid)
{
	for(new i; i < 10;i++)
		TextDrawShowForPlayer(playerid, FactoryGame[i]);
	MinerRepeat(playerid);
	ClearAnim(playerid);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы начали добычу сырья. Нажимайте на камень, когда он появится в одной из ячеек");
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Чтобы добыть сырьё, Вам нужно собрать минимум 4 камня");
	ApplyAnimation(playerid,"BASEBALL","Bat_4",4.1,1,0,0,1,11000);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 6))
		RemovePlayerAttachedObject(playerid, 6);
	SetPlayerAttachedObject(playerid, 6, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
	SelectTextDraw(playerid, 0x0099FFAA);
	return 1;
}
forward MinerRepeat(playerid);
public MinerRepeat(playerid)
{
	SetPVarInt(playerid, "SPAMTIMER", GetPVarInt(playerid, "SPAMTIMER")+1);
	switch(GetPVarInt(playerid, "SPAMTIMER")){
	case 2, 4, 6, 8, 10, 12:return SetTimerEx("MinerRepeat",1201,false,"i",playerid);
	}
	SetTimerEx("MinerTimer",1201,false,"i",playerid);
	new rand = random(9);
	FactoryKamen[playerid] = CreatePlayerTextDraw(playerid,FactoryGamePos[rand][0], FactoryGamePos[rand][1], "_");
	PlayerTextDrawLetterSize(playerid, FactoryKamen[playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, FactoryKamen[playerid], 37.333332, 37.333343);
	PlayerTextDrawAlignment(playerid, FactoryKamen[playerid], 2);
	PlayerTextDrawColor(playerid, FactoryKamen[playerid], -1);
	PlayerTextDrawUseBox(playerid, FactoryKamen[playerid], true);
	PlayerTextDrawBoxColor(playerid, FactoryKamen[playerid], 255);
	PlayerTextDrawBackgroundColor(playerid, FactoryKamen[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, FactoryKamen[playerid], 0);
	PlayerTextDrawSetOutline(playerid, FactoryKamen[playerid], 1);
	PlayerTextDrawFont(playerid, FactoryKamen[playerid], 5);
	PlayerTextDrawSetProportional(playerid, FactoryKamen[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, FactoryKamen[playerid], true);
	PlayerTextDrawSetPreviewModel(playerid, FactoryKamen[playerid], 3930);
	PlayerTextDrawSetPreviewRot(playerid, FactoryKamen[playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid, FactoryKamen[playerid]);
	return 1;
}
SetVehicleSpeed(vehicleid, speed_kmph)
{
	if(speed_kmph < 1) speed_kmph = 1;
	new Float: v[3], cur_speed_kmph;
	GetVehicleVelocity(vehicleid, v[0], v[1], v[2]);
	cur_speed_kmph = floatround(200.0 * floatsqroot( v[0]*v[0] + v[1]*v[1] + v[2]*v[2]), floatround_floor);
	if(cur_speed_kmph <= 0)
	{
		new Float: zAngle;
		GetVehicleZAngle(vehicleid, zAngle);
		new Float: newVelX = floatcos((zAngle -= 270.0), degrees ) * speed_kmph / 200.0;
		SetVehicleVelocity(vehicleid, newVelX, floattan(zAngle,degrees) * newVelX, 0.0);
		return;
	}
	new Float: vMultiplier = float(speed_kmph) / float(cur_speed_kmph);
	SetVehicleVelocity(vehicleid, v[0] * vMultiplier, v[1] * vMultiplier, v[2] * vMultiplier);
}
stock GetVehicleSpeed(vehicleid)
{
    new Float:Px,Float:Py,Float:Pz;
    GetVehicleVelocity(vehicleid,Px,Py,Pz);
    return floatround(floatsqroot(Px*Px+Py*Py+Pz*Pz) * 100.0);
}
forward Stopenanim(playerid);
public Stopenanim(playerid)
{
 	ClearAnims(playerid);
	TogglePlayerControllable(playerid, true);
	ClearAnims(playerid);
	return 1;
}
stock SaveCasino(casinoid)
{
	new string[500];
	format(string, sizeof(string), "UPDATE `casinos` SET `Pos_X` = '%.4f',`Pos_Y` = '%.4f', `Pos_Z` = '%.4f', `Pos_A` = '%.4f', \
	`Exit_X` = '%.4f',`Exit_Y` = '%.4f', `Exit_Z` = '%.4f', `Exit_A` = '%.4f', \
	`Owner` = '%s', `Balance` = '%d', `World` = '%d',`Cost` = '%d',`Lock` = '%d',`Win` = '%d',`Lose` = '%d',`Visit` = '%d',`Enter` = '%d',`Nalog` = '%d',`Num` = '%d',`Deal` = '%d'  WHERE `ID` = '%i'",
	CasinoInfo[casinoid][casPos][0],
	CasinoInfo[casinoid][casPos][1],
	CasinoInfo[casinoid][casPos][2],
	CasinoInfo[casinoid][casPos][3],
	CasinoInfo[casinoid][casExit][0],
	CasinoInfo[casinoid][casExit][1],
	CasinoInfo[casinoid][casExit][2],
	CasinoInfo[casinoid][casExit][3],
	CasinoInfo[casinoid][casOwner],
	CasinoInfo[casinoid][casBalance],
	CasinoInfo[casinoid][casWorld],
	CasinoInfo[casinoid][casCost],
	CasinoInfo[casinoid][casLock],
	CasinoInfo[casinoid][casWin],
	CasinoInfo[casinoid][casLose],
	CasinoInfo[casinoid][casVisit],
	CasinoInfo[casinoid][casEnter],
	CasinoInfo[casinoid][casNalog],
	CasinoInfo[casinoid][casNum],
	CasinoInfo[casinoid][casDeal],
	casinoid + 1);
	if(!EXITSAVEMODE)mysql_pquery(mysql, string); else mysql_query(mysql, string, false);

	return true;
}
SendError(playerid, const text[])
{
	new string[512];
	format(string, sizeof string,"{cc3b12}[!] {949494}%s",text);
	SendClientMessage(playerid,COLOR_GRAY,string);
	return 1;
}
SendInfo(playerid, const text[])
{
	new string[512];
	format(string, sizeof string,"{7396FB}[?] {FFFFFF}%s",text);
	SendClientMessage(playerid,0xFFFFFFFF,string);
	return 1;
}
tm_FreezePlayer(playerid)
{
	TogglePlayerControllable(playerid, false);
	if(PlayerInfo[playerid][pLoading])PlayerLoadingTexturesShow(playerid);
	SetTimerEx("player_unfreeze",(40 * GetPlayerPing(playerid)), false, "i", playerid);
}
stock LoadCasino()
{
	new Cache:result = mysql_query(mysql, "SELECT * FROM `casinos`");
	OWNABLECASINO = cache_get_row_count(mysql);
	for (new i = 0;i < OWNABLECASINO;i ++)
	{
		CasinoInfo[i][casPos][0] = cache_get_row_float(i, 1, mysql);
		CasinoInfo[i][casPos][1] = cache_get_row_float(i, 2, mysql);
		CasinoInfo[i][casPos][2] = cache_get_row_float(i, 3, mysql);
		CasinoInfo[i][casPos][3] = cache_get_row_float(i, 4, mysql);
		CasinoInfo[i][casExit][0] = cache_get_row_float(i, 5, mysql);
		CasinoInfo[i][casExit][1] = cache_get_row_float(i, 6, mysql);
		CasinoInfo[i][casExit][2] = cache_get_row_float(i, 7, mysql);
		CasinoInfo[i][casExit][3] = cache_get_row_float(i, 8, mysql);
		cache_get_row(i, 9, CasinoInfo[i][casOwner], mysql,24);
		CasinoInfo[i][casBalance] = cache_get_field_content_int(i, "Balance", mysql);
		CasinoInfo[i][casWorld] = cache_get_field_content_int(i, "World", mysql);
		CasinoInfo[i][casCost] = cache_get_field_content_int(i, "Cost", mysql);
		CasinoInfo[i][casLock] = cache_get_field_content_int(i, "Lock", mysql);
		CasinoInfo[i][casWin] = cache_get_field_content_int(i, "Win", mysql);
		CasinoInfo[i][casLose] = cache_get_field_content_int(i, "Lose", mysql);
		CasinoInfo[i][casVisit] = cache_get_field_content_int(i, "Visit", mysql);
		CasinoInfo[i][casEnter] = cache_get_field_content_int(i, "Enter", mysql);
		CasinoInfo[i][casNalog] = cache_get_field_content_int(i, "Nalog", mysql);
		CasinoInfo[i][casNum] = cache_get_field_content_int(i, "Num", mysql);
		CasinoInfo[i][casDeal] = cache_get_field_content_int(i, "Deal", mysql);
	}
	cache_delete(result, mysql);
	return true;
}
stock isNum(const text[]) // by OFFREAL
{
	for(new i; i < strlen(text); i++) switch(text[i]) { case '0'..'9': return false; }
	return true;
}
COMMAND:balon(playerid, const params[])
{
    new color_1,color_2;
    if(PlayerInfo[playerid][pRepBan] < 1) return SendError(playerid, "У вас нет балончика с краской");
    if(sscanf(params,"dd",color_1,color_2)) return SendInfo(playerid, "Используйте:{7396FB} /balon [цвет 1] [цвет 2]");
    if(color_1 < 1 || color_2 < 1)return SendInfo(playerid, "Используйте:{7396FB} /balon [цвет 1 > 0] [цвет 2 > 0]");
    SendError(playerid,"Подойдите к машине и переодически жмите левую клавишу мышки, чтобы ее покрасить");
    SendClientMessage(playerid, COLOR_GOLD, "[Информация] {FFFFFF}Узнать цвета можно на форуме "Mode_Forum);
    _SetGun(playerid, 41, 300);
    SetPVarInt(playerid,"balon",color_1);
    SetPVarInt(playerid,"balon1",color_2);
	return true;
}
LoadInforamtion()
{
	new Cache:result = mysql_query(mysql, "SELECT * FROM `config`");
	GLS[0] = cache_get_field_content_int(0, "credit", mysql); //?????? ??????
	GLS[1] = cache_get_field_content_int(0, "cnalog", mysql); //?????? ??????
	GLS[2] = cache_get_field_content_int(0, "hnalogi", mysql); //?????? ??????
	GLS[3] = cache_get_field_content_int(0, "bnalog", mysql); //?????? ??????
	GLS[4] = cache_get_field_content_int(0, "ferma", mysql); //?????? ??????
	GLS[5] = cache_get_field_content_int(0, "zavod", mysql); //?????? ??????
	GLS[6] = cache_get_field_content_int(0, "gryz", mysql); //?????? ??????
	GLS[7] = cache_get_field_content_int(0, "avob", mysql); //?????? ??????
	GLS[8] = cache_get_field_content_int(0, "mysor", mysql); //?????? ??????
	GLS[9] = cache_get_field_content_int(0, "daln", mysql); //?????? ??????
	GLS[10] = cache_get_field_content_int(0, "metal", mysql); //?????? ??????
	GLS[11] = cache_get_field_content_int(0, "incas", mysql); //?????? ??????
	GLS[12] = cache_get_field_content_int(0, "naloga", mysql); //?????? ??????
	GLS[13] = cache_get_field_content_int(0, "GLS[13]", mysql); //?????? ??????
	GLS[14] = cache_get_field_content_int(0, "GLS[14]", mysql); //?????? ??????
	GLS[15] = cache_get_field_content_int(0, "GLS[15]", mysql); //?????? ??????
	GLS[16] = cache_get_field_content_int(0, "arest", mysql); //?????? ??????
	GLS[17] = cache_get_field_content_int(0, "dostav", mysql); //?????? ??????
	GLS[18] = cache_get_field_content_int(0, "ybil", mysql); //?????? ??????
	GLS[19] = cache_get_field_content_int(0, "redak", mysql); //?????? ??????
	GLS[20] = cache_get_field_content_int(0, "pomol", mysql); //?????? ??????
	GLS[21] = cache_get_field_content_int(0, "bail", mysql); //?????? ??????
	GLS[22] = cache_get_field_content_int(0, "donate", mysql); //?????? ??????
	GLS[23] = cache_get_field_content_int(0, "exp", mysql); //?????? ??????
	GLS[24] = cache_get_field_content_int(0, "death", mysql); //?????? ??????
	GLS[25] = cache_get_field_content_int(0, "armyls", mysql); //?????? ??????
	GLS[26] = cache_get_field_content_int(0, "armylv", mysql); //?????? ??????
	GLS[27] = cache_get_field_content_int(0, "farmsklad", mysql); //?????? ??????
	GLS[28] = cache_get_field_content_int(0, "GLS[28]", mysql); //?????? ??????
	GLS[29] = cache_get_field_content_int(0, "GLS[29]", mysql); //?????? ??????
	GLS[30] = cache_get_field_content_int(0, "GLS[30]", mysql); //?????? ??????
	GLS[31] = cache_get_field_content_int(0, "GLS[31]", mysql); //?????? ??????
	GLS[32] = cache_get_field_content_int(0, "GLS[32]", mysql); //?????? ??????
	GLS[33] = cache_get_field_content_int(0, "GLS[33]", mysql); //?????? ??????
	GLS[34] = cache_get_field_content_int(0, "GLS[34]", mysql); //?????? ??????
	GLS[37] = cache_get_field_content_int(0, "GLS[37]", mysql); //?????? ??????
	GLS[38] = cache_get_field_content_int(0, "GLS[38]", mysql); //?????? ??????
	GLS[39] = cache_get_field_content_int(0, "GLS[39]", mysql); //?????? ??????
	GLS[40] = cache_get_field_content_int(0, "GLS[40]", mysql); //?????? ??????
	GLS[41] = cache_get_field_content_int(0, "GLS[41]", mysql); //?????? ??????
	GLS[42] = cache_get_field_content_int(0, "GLS[42]", mysql); //?????? ??????
	GLS[43] = cache_get_field_content_int(0, "GLS[43]", mysql); //?????? ??????
	GLS[45] = cache_get_field_content_int(0, "Narko1", mysql); //?????? ??????
	GLS[46] = cache_get_field_content_int(0, "Narko2", mysql); //?????? ??????
	GLS[47] = cache_get_field_content_int(0, "Narko3", mysql); //?????? ??????
	GLS[48] = cache_get_field_content_int(0, "Narko4", mysql); //?????? ??????
	GLS[49] = cache_get_field_content_int(0, "Narko5", mysql); //?????? ??????
	GLS[50] = cache_get_field_content_int(0, "buyNarko1", mysql); //?????? ??????
	GLS[51] = cache_get_field_content_int(0, "buyNarko2", mysql); //?????? ??????
	GLS[52] = cache_get_field_content_int(0, "buyNarko3", mysql); //?????? ??????
	GLS[53] = cache_get_field_content_int(0, "buyNarko4", mysql); //?????? ??????
	GLS[54] = cache_get_field_content_int(0, "buyNarko5", mysql); //?????? ??????
	GLS[55] = cache_get_field_content_int(0, "sellNarko1", mysql); //?????? ??????
	GLS[56] = cache_get_field_content_int(0, "sellNarko2", mysql); //?????? ??????
	GLS[57] = cache_get_field_content_int(0, "sellNarko3", mysql); //?????? ??????
	GLS[58] = cache_get_field_content_int(0, "sellNarko4", mysql); //?????? ??????
	GLS[59] = cache_get_field_content_int(0, "sellNarko5", mysql); //?????? ??????
	GLS[60] = cache_get_field_content_int(0, "bankNarko1", mysql); //?????? ??????
	GLS[61] = cache_get_field_content_int(0, "bankNarko2", mysql); //?????? ??????
	GLS[62] = cache_get_field_content_int(0, "bankNarko3", mysql); //?????? ??????
	GLS[63] = cache_get_field_content_int(0, "bankNarko4", mysql); //?????? ??????
	GLS[64] = cache_get_field_content_int(0, "bankNarko5", mysql); //?????? ??????
	GLS[65] = cache_get_field_content_int(0, "reshouse", mysql); //?????? ??????
	GLS[66] = cache_get_field_content_int(0, "canneed", mysql); //?????? ??????
	GLS[67] = cache_get_field_content_int(0, "bbudget", mysql); //?????? ??????
	GLS[68] = cache_get_field_content_int(0, "bmaterials", mysql); //?????? ??????
	GLS[69] = cache_get_field_content_int(0, "bgotovnost", mysql); //?????? ??????
	GLS[70] = cache_get_field_content_int(0, "wineware", mysql); //?????? ??????
	GLS[71] = cache_get_field_content_int(0, "lastownable", mysql);
	cache_delete(result, mysql);
	return true;
}
SaveInforamtion()
{
	new string[2048];
	format(string, sizeof string, "UPDATE `config` SET `credit` = '%d', `cnalog` = '%d', `hnalogi` = '%d', `bnalog` = '%d',\
	`ferma` = '%d', `zavod` = '%d', `gryz` = '%d', `avob` = '%d', `mysor` = '%d', `daln` = '%d', `metal` = '%d',\
	`incas` = '%d', `naloga` = '%d', `GLS[13]` = '%d', `GLS[14]` = '%d', `GLS[15]` = '%d', `arest` = '%d',\
	`dostav` = '%d', `ybil` = '%d', `redak` = '%d', `pomol` = '%d', `bail` = '%d', `donate` = '%d', `exp` = '%d',\
	`death` = '%d', `armyls` = '%d', `armylv` = '%d', `farmsklad` = '%d', `GLS[28]` = '%d', `GLS[29]` = '%d',\
	`GLS[30]` = '%d', `GLS[31]` = '%d', `GLS[32]` = '%d', `GLS[33]` = '%d', `GLS[34]` = '%d', `GLS[37]` = '%d',\
	`GLS[38]` = '%d', `GLS[39]` = '%d', `GLS[40]` = '%d', `GLS[41]` = '%d', `GLS[42]` = '%d', `GLS[43]` = '%d',\
	`Narko1` = '%d', `Narko2` = '%d', `Narko3` = '%d', `Narko4` = '%d', `Narko5` = '%d', `buyNarko1` = '%d',\
	`buyNarko2` = '%d', `buyNarko3` = '%d', `buyNarko4` = '%d', `buyNarko5` = '%d', `sellNarko1` = '%d',\
	`sellNarko2` = '%d', `sellNarko3` = '%d', `sellNarko4` = '%d', `sellNarko5` = '%d', `bankNarko1` = '%d',\
	`bankNarko2` = '%d', `bankNarko3` = '%d', `bankNarko4` = '%d', `bankNarko5` = '%d', `podarki` = '%d',\
	`reshouse` = '%d', `canneed` = '%d', `bbudget` = '%d', `bmaterials` = '%d', `bgotovnost` = '%d', `wineware` = '%d', `lastownable` = '%d'",
	GLS[0],GLS[1],GLS[2],GLS[3],GLS[4],GLS[5],GLS[6],GLS[7],GLS[8],GLS[9],GLS[10],GLS[11],GLS[12],GLS[13],
	GLS[14],GLS[15],GLS[16],GLS[17],GLS[18],GLS[19],GLS[20],GLS[21],GLS[22],GLS[23],GLS[24],GLS[25],GLS[26],
	GLS[27],GLS[28],GLS[29],GLS[30],GLS[31],GLS[32],GLS[33],GLS[34],GLS[37],GLS[38],GLS[39],GLS[40],GLS[41],
	GLS[42],GLS[43],GLS[45],GLS[46],GLS[47],GLS[48],GLS[49],GLS[50],GLS[51],GLS[52],GLS[53],GLS[54],GLS[55],
	GLS[56],GLS[57],GLS[58],GLS[59],GLS[60],GLS[61],GLS[62],GLS[63],GLS[64],GLS[65],GLS[66],GLS[67],GLS[68],
	GLS[69],GLS[70],GLS[71]);
	mysql_query(mysql, string, false);
	return true;
}
strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
///////////казино
ShowPlayerSlots(playerid,slot1,slot2,slot3)
{
	TextDrawHideForPlayer(playerid,Digit1[0]);
    TextDrawHideForPlayer(playerid,Digit2[0]);
    TextDrawHideForPlayer(playerid,Digit3[0]);
    TextDrawHideForPlayer(playerid,Digit1[1]);
    TextDrawHideForPlayer(playerid,Digit2[1]);
    TextDrawHideForPlayer(playerid,Digit3[1]);
    TextDrawHideForPlayer(playerid,Digit1[2]);
    TextDrawHideForPlayer(playerid,Digit2[2]);
    TextDrawHideForPlayer(playerid,Digit3[2]);
    TextDrawHideForPlayer(playerid,Digit1[3]);
    TextDrawHideForPlayer(playerid,Digit2[3]);
    TextDrawHideForPlayer(playerid,Digit3[3]);
    TextDrawHideForPlayer(playerid,Digit1[4]);
    TextDrawHideForPlayer(playerid,Digit2[4]);
    TextDrawHideForPlayer(playerid,Digit3[4]);
    TextDrawHideForPlayer(playerid,Digit1[5]);
    TextDrawHideForPlayer(playerid,Digit2[5]);
    TextDrawHideForPlayer(playerid,Digit3[5]);
    TextDrawShowForPlayer(playerid,Digit1[slot1]);
    TextDrawShowForPlayer(playerid,Digit2[slot2]);
    TextDrawShowForPlayer(playerid,Digit3[slot3]);
    TextDrawShowForPlayer(playerid,Box);
}
HideSlotsForPlayer(playerid)
{
    TextDrawHideForPlayer(playerid,Digit1[0]);
    TextDrawHideForPlayer(playerid,Digit2[0]);
    TextDrawHideForPlayer(playerid,Digit3[0]);
    TextDrawHideForPlayer(playerid,Digit1[1]);
    TextDrawHideForPlayer(playerid,Digit2[1]);
    TextDrawHideForPlayer(playerid,Digit3[1]);
    TextDrawHideForPlayer(playerid,Digit1[2]);
    TextDrawHideForPlayer(playerid,Digit2[2]);
    TextDrawHideForPlayer(playerid,Digit3[2]);
    TextDrawHideForPlayer(playerid,Digit1[3]);
    TextDrawHideForPlayer(playerid,Digit2[3]);
    TextDrawHideForPlayer(playerid,Digit3[3]);
    TextDrawHideForPlayer(playerid,Digit1[4]);
    TextDrawHideForPlayer(playerid,Digit2[4]);
    TextDrawHideForPlayer(playerid,Digit3[4]);
    TextDrawHideForPlayer(playerid,Digit1[5]);
    TextDrawHideForPlayer(playerid,Digit2[5]);
    TextDrawHideForPlayer(playerid,Digit3[5]);
    TextDrawHideForPlayer(playerid,Box);
}
PutPlayerInSlotMachine(playerid, firstBet=MIN_Bet,  startBalance=0)
{
    if(Gambling[playerid] != G_STATE_NOT_GAMBLING) return SendError(playerid,"Вы уже запустили автомат");
	new fiski = GetMoney(playerid);
	if(fiski<startBalance) return SendError(playerid,"У вас недостаточно средств для продолжения игры");
	GiveMoney(playerid, -startBalance, "Slot Machine");
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Игра в однорукий бандит",-startBalance,PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
    Gambling[playerid] = G_STATE_READY;

    BetText[playerid] = TextDrawCreate(320.000000, 237.350000, "$0");
	TextDrawLetterSize(BetText[playerid], 0.270410, 1.150740);
	TextDrawAlignment(BetText[playerid], 2);
	TextDrawColor(BetText[playerid], 1453874943);
	TextDrawSetShadow(BetText[playerid], 0);
	TextDrawSetOutline(BetText[playerid], 0);
	TextDrawBackgroundColor(BetText[playerid], 51);
	TextDrawFont(BetText[playerid], 3);
	TextDrawSetProportional(BetText[playerid], 1);
	BalanceText[playerid] = TextDrawCreate(320.000000, 271.000000, "$0");
	TextDrawLetterSize(BalanceText[playerid], 0.270410, 1.150740);
	TextDrawAlignment(BalanceText[playerid], 2);
	TextDrawColor(BalanceText[playerid], -6749953);
	TextDrawSetShadow(BalanceText[playerid], 0);
	TextDrawSetOutline(BalanceText[playerid], 0);
	TextDrawBackgroundColor(BalanceText[playerid], 51);
	TextDrawFont(BalanceText[playerid], 3);
	TextDrawSetProportional(BalanceText[playerid], 1);

    TextDrawShowForPlayer(playerid,BetText[playerid]);
    TextDrawShowForPlayer(playerid,BalanceText[playerid]);
    SelectTextDraw(playerid, 0xD94141AA);
    for(new i;i<9;i++) TextDrawShowForPlayer(playerid,Bandito[i]);
    Slots[playerid][0] = random(5);
    Slots[playerid][1] = random(5);
    Slots[playerid][2] = random(5);
    ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);
    Bet[playerid] = firstBet;
    kasmenu[playerid]=1;
    Balance[playerid] = startBalance;
    UpdateBetText(playerid);
    TogglePlayerControllable(playerid,0);
    return 1;
}
ExitPlayerFromSlotMachine(playerid)
{
    if(Gambling[playerid] == G_STATE_NOT_GAMBLING) return 0;
    HideSlotsForPlayer(playerid);
    Gambling[playerid] = G_STATE_NOT_GAMBLING;
    TogglePlayerControllable(playerid,1);
    if(kasmenu[playerid]==1)
    {
	    TextDrawDestroy(BetText[playerid]);
	    TextDrawDestroy(BalanceText[playerid]);
	    kasmenu[playerid]=0;
    }
    for(new i;i<9;i++) TextDrawHideForPlayer(playerid,Bandito[i]);
    new str[128];
    if(Balance[playerid] > 0) format(str,sizeof(str),"~g~Your balance: %d",Balance[playerid]);
    GameTextForPlayer(playerid,str,5000,4);
   	GiveMoney(playerid, Balance[playerid], "Slot Machine");
	new logtime[3],logdate[3],logtimestring[16];
	getdate(logdate[2],logdate[1],logdate[0]);
	gettime(logtime[0],logtime[1],logtime[2]);
	f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
	WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Баланс однорукого бандита",Balance[playerid],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
    CancelSelectTextDraw(playerid);
    return 1;
}
forward Gambler(playerid);
public Gambler(playerid)
{
    if(Gambling[playerid] != G_STATE_GAMBLING)
    {
        print("Strange error @ gambler");
        KillTimer(SlotTimer[playerid]);
        SlotTimer[playerid] = -1;
        Gambling[playerid] = G_STATE_NOT_GAMBLING;
        return 0;
    }
    SlotCounter[playerid] -= 1;
    new slot = SlotCounter[playerid];
    if(slot < 10) Slots[playerid][2]+=random(3)+1;
    else if(slot < 20)
    {
        Slots[playerid][1]+=random(3)+1;
        Slots[playerid][2]+=random(3)+1;
    }
    else
    {
        Slots[playerid][0]+=random(3)+1;
        Slots[playerid][1]+=random(3)+1;
        Slots[playerid][2]+=random(3)+1;
    }
    if(Slots[playerid][0] >= 6) Slots[playerid][0] = 0;
    if(Slots[playerid][1] >= 6) Slots[playerid][1] = 0;
    if(Slots[playerid][2] >= 6) Slots[playerid][2] = 0;

    ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);

    if(SlotCounter[playerid] == 0)
    {
        KillTimer(SlotTimer[playerid]);
        SlotTimer[playerid] = -1;
        Gambling[playerid] = G_STATE_DISPLAY;

        if(Slots[playerid][0] == Slots[playerid][1] && Slots[playerid][0] == Slots[playerid][2])
        {
            new Multiplier=1;
            switch(Slots[playerid][0])
            {
            	case 0: Multiplier = 5;    // Cherries
                case 1: Multiplier = 10;   // Grapes
                case 2: Multiplier = 20;   // 69's
                case 3: Multiplier = 25;   // Bells
                case 4: Multiplier = 50;  // Bar
                case 5: Multiplier = 100;  // Double Bars
            }
            new money = floatround(Bet[playerid] * Multiplier * WIN_MULTIPLIER_GLOBAL);
            new str[128];
            format(str,sizeof(str),"~w~You win~n~~g~$%d",money);
            GameTextForPlayer(playerid,str,5000,4);
            Balance[playerid] += money;
            UpdateBetText(playerid);
            Slots[playerid][0] = random(5); // Randomize the slots again
            Slots[playerid][1] = random(5);
            Slots[playerid][2] = random(5);
        }
        else GameTextForPlayer(playerid,"~r~You lose",3000,4);
        SetTimerEx("PlayAgainTimer",DISPLAY_TIME,0,"d",playerid);
        return 1;
    }
    return 0;
}
forward PlayAgainTimer(playerid);
public PlayAgainTimer(playerid)
{
    Gambling[playerid] = G_STATE_READY;
    new keys,lr,ud;
    GetPlayerKeys(playerid,keys,ud,lr);
    if(keys & KEY_SPRINT) OnPlayerKeyStateChange(playerid,KEY_SPRINT,0);
}
GetNextValidBet(value)
{
    if(value + Bet_STEP > MAX_Bet) return MAX_Bet;
    return value + Bet_STEP;
}
//////
GetNextValidMBet(value)
{
    if(value - Bet_STEP < MIN_Bet) return MIN_Bet;
    return value - Bet_STEP;
}
//////////
UpdateBetText(playerid)
{
    new str[128];
    new prefix[4];
    if(Balance[playerid] == 0) strcat(prefix,"~r~");
    format(str,sizeof(str),"$%d",Bet[playerid]);
    TextDrawSetString(BetText[playerid],str);
	///////
	format(str,sizeof(str),"%s$%d",prefix,Balance[playerid]);
    TextDrawSetString(BalanceText[playerid],str);
}
stock ShowKeySettings(playerid)
{
	new key[60], string[200];
	switch(PlayerInfo[playerid][pKeyCheck])
	{
	    case 0: format(key,sizeof(key),"%s","{FFCB8C}Запрашивать при несовпадении IP");
	    default: format(key,sizeof(key),"%s","{AFAFAF}Никогда не запрашивать");
	}
	format(string, sizeof(string),"Удалить код безопасности\nСменить код безопасности\n%s",key);
	ShowPlayerDialogEx(playerid, 251, 2, "Настройки", string, "Далее", "Отмена");
	return true;
}
forward LentaTimer();
public LentaTimer()
{
	for(new l; l < 8; l++)
	{
		for(new i; i < 7; i++)
		{
			if(BottleState[l][i] == 6)
			{
				BottleState[l][i] = 0;
				DestroyDynamicObject(WineBottles[l][i]);
				WineBottles[l][i] = CreateDynamicObject(1484, BottlesPos[l][BottleState[l][i]][0], BottlesPos[l][BottleState[l][i]][1], BottlesPos[l][BottleState[l][i]][2], -8.70000, 31.98000, -1.56000);
			}
			BottleState[l][i]++;
			MoveDynamicObject(WineBottles[l][i],BottlesPos[l][BottleState[l][i]][0], BottlesPos[l][BottleState[l][i]][1], BottlesPos[l][BottleState[l][i]][2],2.0);
		}
	}
	return true;
}
stock BombTimer(i)
{
	new string[50];
	if(BombInfo[i][bbCreated])
    {
		BombInfo[i][bbTime] --;
		if(BombInfo[i][bbTime] <= 0)
		{
			BombInfo[i][bbTime] = 0;
			BombInfo[i][bbCreated] = false;
			BombInfo[i][bbBreak] = false;
			DestroyDynamicObject(BombInfo[i][bbObject]);
			DestroyDynamic3DTextLabel(BombInfo[i][bbText]);
			CreateExplosion(BombInfo[i][bbPos][0], BombInfo[i][bbPos][1], BombInfo[i][bbPos][2], 7, 20.0);
			for(new s = 1; s <= GetVehiclePoolSize(); s++)
			{
				new Float: x,Float: y,Float: z;
				GetVehiclePos(s,x,y,z);
				if(IsVehicleInRangeOfPoint(s, 10.0,BombInfo[i][bbPos][0], BombInfo[i][bbPos][1], BombInfo[i][bbPos][2]))
				{
				    OnVehicleDeath(s, INVALID_PLAYER_ID);
				    SetVehicleToRespawn(s);
				}
			}
			foreach(new p:Player)
			{
			    if(IsPlayerConnected(p))
			    {
			        if(IsPlayerInRangeOfPoint(p, 20.0, BombInfo[i][bbPos][0], BombInfo[i][bbPos][1], BombInfo[i][bbPos][2])) SendClientMessage(p, COLOR_GRAY, "Рядом взорвалась бомба");
			    }
			}
		}
		else
		{
			format(string, sizeof(string),"{FFFFFF} Бомба *\n{7396FB}%s", Convert(BombInfo[i][bbTime]));
			UpdateDynamic3DTextLabelText(BombInfo[i][bbText], COLOR_WHITE, string);
		}
	}
	return true;
}
stock Hunger(playerid,type)
{
	switch(type)
	{
	    case 1:ShowPlayerProgressBar(playerid,golod[playerid]);
		case 0:HidePlayerProgressBar(playerid,golod[playerid]);
	}
	SetPlayerProgressBarValue(playerid,golod[playerid], Fullness[playerid]);
}
cmd:fasthour(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 5) return 1;
	if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	switch(fasthour)
	{
	case 1:
		{
			PLANT_GROVE_TIME = 150;
			fasthour = 0;
		}
	case 0:
		{
			PLANT_GROVE_TIME = 300;
			fasthour = 1;
		}
	}
	if(!fasthour) SendInfo(playerid, "Режим быстрого роста растений включен");
	else SendInfo(playerid, "Режим быстрого роста растений выключен");
	return 1;
}
cmd:plant(playerid)
{
	if(PlayerInfo[playerid][pJob]!= 22)return SendError(playerid,"Вы не работаете на винограднике");
	if(!GetPVarInt(playerid, "WinePlant"))return SendError(playerid,"У вас нет куста для посадки");
	if(Iter_Count(TotalPlants) == MAX_PLANTS-1)return SendError(playerid,"Поле полностью засеяно");
	new Float:_tmpx, Float:_tmpy, Float:_tmpz, Float:_a;
	GetPlayerPos(playerid, _tmpx, _tmpy, _tmpz);
	GetPlayerFacingAngle(playerid, _a);
	_tmpx += (1.0 * floatsin(-_a, degrees));
	_tmpy += (1.0 * floatcos(-_a, degrees));
	foreach(new _i : TotalPlants)
		if((PlantInfo[_i][plantState] == PLANT_STATE_GROWING || PlantInfo[_i][plantState] == PLANT_STATE_GROWN))
			if(floatsqroot(floatpower(PlantInfo[_i][plantPosX] - _tmpx, 2.0) + floatpower(PlantInfo[_i][plantPosY] - _tmpy, 2.0)) < PLANT_DISTANCE)
				return SendError(playerid, "Растение находится слишком близко к другим");
	MapAndreas_FindZ_For2DCoord(_tmpx, _tmpy, _tmpz);
	if(IsPointInDynamicArea(WineArea, _tmpx, _tmpy, _tmpz))
	{
		new _plntID = GetFreePlant();
		PlantInfo[_plntID][plantState] = PLANT_STATE_GROWING;
		RemovePlayerAttachedObject(playerid, 6);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0,1);
		new _tmpm;
		gettime(.minute = _tmpm);
		PlantInfo[_plntID][plantStateTime] = 0;
		SendInfo(playerid,"Вы посадили куст винограда. Премия $100");
		GiveMoney(playerid, 100);
		PlantInfo[_plntID][plantPosX] = _tmpx;
		PlantInfo[_plntID][plantPosY] = _tmpy;
		PlantInfo[_plntID][plantPosZ] = _tmpz - 3.0;
		PlantInfo[_plntID][plantRotZ] = random(36000)/100.0;
		PlantInfo[_plntID][plantCreatedID] = CreateDynamicObjectEx(738, PlantInfo[_plntID][plantPosX], PlantInfo[_plntID][plantPosY], PlantInfo[_plntID][plantPosZ],   0.00000, 0.00000, PlantInfo[_plntID][plantRotZ], 100.0, 100.0);
		SetDynamicObjectMaterial(PlantInfo[_plntID][plantCreatedID], 1, 16644, "a51_detailstuff", "roucghstonebrtb", 0x00000000);
		PlantInfo[_plntID][plant3DTextID] = CreateDynamic3DTextLabel("{a7e88b}Незрелый виноград\n\n{e7e88b}Растение закрепляется", -1, PlantInfo[_plntID][plantPosX], PlantInfo[_plntID][plantPosY], _tmpz + 1.25, 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0);
		Streamer_Update(playerid);
		DeletePVar(playerid,"WinePlant");
		Iter_Add(TotalPlants, _plntID);
		return 1;
	}
	SendError(playerid, "Вы должны быть на территории виноградника");
	return 1;
}
stock CheckPlayerGoCuff(playerid)
{
    GotoInfo[playerid][gtX] = 0.0;
    GotoInfo[playerid][gtY] = 0.0;
    GotoInfo[playerid][gtZ] = 0.0;
    GotoInfo[playerid][gtTPX] = 0.0;
    GotoInfo[playerid][gtTPY] = 0.0;
    GotoInfo[playerid][gtTPZ] = 0.0;
    GotoInfo[playerid][gtID] = INVALID_PLAYER_ID;
    GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
    GotoInfo[playerid][gtState] = 0;
    GotoInfo[playerid][gtStayed] = 0;
    Recuffer[playerid]=INVALID_PLAYER_ID;
    cuffer[playerid]=0;
    return true;
}
cmd:gotome(playerid, const params[])
{
	if(IsACop(playerid))
	{
	    new id, string[150];
		if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /gotome [id]");
		if(!TeamDuty[playerid]) return SendError(playerid,"Вы не на дежурстве");
		if(ProxDetectorS(2.0, playerid, id))
		{
		    if(GotoInfo[playerid][gtID] == INVALID_PLAYER_ID)
		    {
		        if(GotoInfo[id][gtGoID] == INVALID_PLAYER_ID)
		        {
					if(Cuffed[id])
					{
                        CheckPlayerGoCuff(playerid);
                        CheckPlayerGoCuff(id);
					    GotoInfo[id][gtID] = INVALID_PLAYER_ID;
					    GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
					    GotoInfo[playerid][gtID] = id;
					    GotoInfo[id][gtGoID] = playerid;
					    GotoInfo[id][gtState] = GetPlayerState(playerid);
					    GetPlayerPos(id, GotoInfo[id][gtX], GotoInfo[id][gtY], GotoInfo[id][gtZ]);
					    SendClientMessage(playerid, COLOR_WHITE, "[Информация] {FFFFFF}Чтобы перестать тащить игрока введите {33AA33}/ungotome");
					    format(string, sizeof(string), "%s потащил игрока %s за собой", PlayerName[playerid], PlayerName[id]);
					    ProxDetector(25,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    TogglePlayerControllable(id, true);
					}
					else SendError(playerid, "Игрок не скован");
		        }
		        else SendError(playerid, "Этого игрока уже кто-то ведет за собой");
		    }
		    else SendError(playerid, "Вы уже кого-то ведете за собой");
		}
		else SendError(playerid, "Вы далеко от игрока");
	}
	return true;
}
cmd:ungotome(playerid, const params[])
{
	if(IsACop(playerid))
	{
		new string[200], id;
		if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /ungotome [id/name]");
		if(ProxDetectorS(1.5,playerid,id))
		{
			if(Cuffed[id] && GotoInfo[playerid][gtID] == id)
			{
				format(string,sizeof(string),"%s перестал тащить за собой игрока %s",PlayerName[playerid],PlayerName[id]);
				ProxDetector(25, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				TogglePlayerControllable(id, Cuffed[id]);
				CheckPlayerGoCuff(id);
				CheckPlayerGoCuff(playerid);
			}
			else SendError(playerid, "Игрок не скован, либо вы не тащите его");
		}
	}
	return true;
}
stock PlayerSeatedToVehicle(playerid, vehicleid)
{
	new Float:X, Float:Y, Float:Z;
	GetVehiclePos(vehicleid, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, X, Y, Z)) return false;
	for(new i = 1; i < 4; i ++)
 	{
		new passenger = VehicleSeat[vehicleid][i];
		if(passenger == INVALID_PLAYER_ID) AC_PutPlayerInVehicle(playerid, vehicleid, i);
	}
	return false;
}
stock GoPlayerAnimation(playerid, Float:X, Float:Y, Float:Z)
{
	if(IsPlayerInAnyVehicle(playerid)) return false;
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1);
	ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1);\
	return true;
}
cmd:pgetip(playerid, const params[])
{
	new string[300],stri[2000];
    if(PlayerInfo[playerid][pAdmin] >= 3)
    {
        if(sscanf(params,"s[16]", params[0])) return SendClientMessage(playerid, COLOR_WHITE, "Введите: /pgetip [ip]");
        format(string,sizeof(string),"Совпадения с %s:",params[0]);
        SendClientMessage(playerid,COLOR_YELLOW,string);
		foreach(new i:Player)
  		{
  		    new pip[16];
  		    if(i!=playerid && IsPlayerConnected(i))
  		    {
			    GetPlayerIp(i,pip,16);
			    if(GetString(pip,params[0]))
			    {
					format(stri,sizeof(stri),"- %s[%d][%s]",PlayerName[i],i,pip);
					SendClientMessage(playerid,COLOR_ORANGE,stri);
			    }
			}
		}
    }
    return true;
}
cmd:getip(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return false;
	if(sscanf(params,"u", params[0])) return SendInfo(playerid,"Используйте: {7396FB}/getip [id]");
	if(PlayerInfo[params[0]][pAdmin]>=5)return true;
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return SendError(playerid, "Игрок не найден");
	CMDstr = "";
	format(CMDstr,112,"%s[%d] | Reg IP: %s | Get IP: %s",Name(params[0]),params[0],PlayerRegIP[params[0]],PlayerIp[params[0]]);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,CMDstr);
	CMDstr = "";
	format(CMDstr, sizeof CMDstr, "[A] Администратор %s[%d] получает IP-адреса %s[%d]",PlayerName[playerid],playerid,Name(params[0]),params[0]);
	SendAdminsMessage(COLOR_GRAY,CMDstr, 1);
	return 1;
}
cmd:clist(playerid, const params[])  
{  
	if(!IsAtFrakcia(playerid, 1) || !TeamDuty[playerid])return SendError(playerid,"Вы не госслужащий");
	if(sscanf(params, "d", params[0]))  
	{  
		SendInfo(playerid,"Используйте: {7396FB}/clist [Цвет 0 - 33]");  
		new dialog[628];  
		strcat(dialog, "{EFEFF7}[0] Стандартный цвет\n{089401}[1] Зелёный\n{56FB4E}[2] Светло зелёный\n{49E789}[3] Ярко зелёный\n[4] Бирюзовый\n\
		[5] Жёлто-зелёный\n[6] Тёмно-зелёный\n[7] Серо-зелёный\n[8] Красный\n[9] Ярко-красный\n[10] Оранжевый\n\
		[11] Коричневый\n[12] Тёмно-красный\n[13] Cеро-красный\n[14] Жёлто-оранжевый\n[15] Малиновый\n\
		[16] Розовый\n[17] Синий\n[18] Голубой\n[19] Синяя сталь\n[20] Сине-зелёный\n[21] Тёмно-синий\n\
		[22] Фиолетовый\n");  
		strcat(dialog, "[23] Индиго\n[24] Серо-синий\n[25] Жёлтый\n[26] Кукурузный\n[27] Золотой\n\
		[28] Старое золото\n[29] Оливковый\n[30] Серый\n[31] Серебро\n[32] Чёрный\n[33] Белый");  
		ShowPlayerDialogEx(playerid,2001,DIALOG_STYLE_LIST, "{43CD80}Цвет",dialog, "Выбрать", "Отмена");  
		return 1;  
	}  
	switch(params[0])  
	{  
	case 0:
		{
			if(TeamDuty[playerid])SetPlayerColor(playerid,TeamColors[GetTeamID(playerid)]);
			else SetPlayerColor(playerid,0xEFEFF710);
		}
	case 1: SetPlayerColor(playerid,0x089401FF);  //
	case 2: SetPlayerColor(playerid,0x56FB4EFF);  //
	case 3: SetPlayerColor(playerid,0x49E789FF);  //
	case 4: SetPlayerColor(playerid,0x2A9170FF);  
	case 5: SetPlayerColor(playerid,0x9ED201FF);  
	case 6: SetPlayerColor(playerid,0x279B1EFF);  
	case 7: SetPlayerColor(playerid,0x003366FF);  
	case 8: SetPlayerColor(playerid,0xFF0606FF);  
	case 9: SetPlayerColor(playerid,0xFF6600FF);  
	case 10: SetPlayerColor(playerid,0xF45000FF);  
	case 11: SetPlayerColor(playerid,0xBE8A01FF);  
	case 12: SetPlayerColor(playerid,0xB30000FF);  
	case 13: SetPlayerColor(playerid,0x954F4FFF);  
	case 14: SetPlayerColor(playerid,0xE7961DFF);  
	case 15: SetPlayerColor(playerid,0xE6284EFF);  
	case 16: SetPlayerColor(playerid,0xFF9DB6FF);  
	case 17: SetPlayerColor(playerid,0x110CE7FF);  
	case 18: SetPlayerColor(playerid,0x0CD7E7FF);  
	case 19: SetPlayerColor(playerid,0x139BECFF);  
	case 20: SetPlayerColor(playerid,0x2C9197FF);  
	case 21: SetPlayerColor(playerid,0x114D71FF);  
	case 22: SetPlayerColor(playerid,0x8813E7FF);  
	case 23: SetPlayerColor(playerid,0xB313E7FF);  
	case 24: SetPlayerColor(playerid,0x758C9DFF);  
	case 25: SetPlayerColor(playerid,0xFFDE24FF);  
	case 26: SetPlayerColor(playerid,0xFFEE8AFF);  
	case 27: SetPlayerColor(playerid,0xDDB201FF);  
	case 28: SetPlayerColor(playerid,0xDDA701FF);  
	case 29: SetPlayerColor(playerid,0xB0B000FF);  
	case 30: SetPlayerColor(playerid,0x868484FF);  
	case 31: SetPlayerColor(playerid,0xB8B6B6FF);  
	case 32: SetPlayerColor(playerid,0x333333FF);  
	case 33: SetPlayerColor(playerid,0xFAFAFAFF);  
	}  
	return true;  
}
cmd:repare(playerid,param[])
{
    new carid = GetPlayerVehicleID(playerid);
	new string[400];
	if(PlayerInfo[playerid][pJob]!= JOB_MECHANIC) return SendError(playerid,"Вы не механик");
	if(VehicleInfo[carid][vJob]!=JOB_MECHANIC)return SendError(playerid,"Вы должны находиться в машине механика");
	if(sscanf(param,"ud",param[0],param[1])) return SendInfo(playerid, "Используйте:{7396FB} /repare [id] [цена]");
	if(param[1]<1 || param[1]>1000)return SendError(playerid,"Цена не может быть меньше $1 и не больше $1000");
	if(SlotValue[param[0]][0]<param[1])return SendError(playerid,"У этого человека нет столько денег чтобы вам заплатить");
	if(GetPlayerState(param[0])!=2)return SendError(playerid,"Игрок, которому вы хотите помочь, должен быть за рулем");
 	if(!ProxDetectorS(9.0, playerid, param[0], 1)) return SendError(playerid,"Вы далеко от игрока");
	if(param[0]==playerid)return false;
	if(!IsPlayerLogged[param[0]])return false;
	PanelPlayerID[param[0]] = playerid;
	CenaRaboti[param[0]] = param[1];
	format(string,sizeof(string),"Механик {52A32A}%s{FFFFFF} предлагает починить ваш транспорт за {52A32A}$%d{FFFFFF}",PlayerName[playerid],param[1]);
	ShowPlayerDialogEx(param[0],1898,0,"{43CD80}Вы согласны?",string,"Принять","Отмена");

    format(string,sizeof(string),"Вы предложили {52A32A}%s{FFFFFF} починить транспорт за {52A32A}$%d{FFFFFF}",PlayerName[param[0]],param[1]);
	SendClientMessage(playerid,COLOR_WHITE,string);

	Ingatre[param[0]]=1;
    return true;
}

cmd:filscar(playerid,param[])
{
    new carid = GetPlayerVehicleID(playerid);
	new string[400];
	if(PlayerInfo[playerid][pJob]!= JOB_MECHANIC) return SendError(playerid,"Вы не механик");
	if(VehicleInfo[carid][vJob]!=JOB_MECHANIC)return SendError(playerid,"Вы должны находиться в машине механика");
	if(sscanf(param,"ud",param[0],param[1])) return SendInfo(playerid, "Используйте:{7396FB} /filscar [id] [количество в литрах]");
	if(param[1]<1 || param[1]>100)return SendError(playerid,"Вы не можете продать меньше 1-го литра и не больше 100 литров");
	if(SlotValue[param[0]][0]<(param[1]*BenzinCena[carid]))return SendError(playerid,"У этого человека нет столько денег, чтобы вам заплатить");
	if(param[0]==playerid)return false;
	if(GetPlayerState(param[0])!=2)return SendError(playerid,"Игрок, которому вы хотите помочь, должен быть за рулем");
	if(!ProxDetectorS(9.0, playerid, param[0], 1)) return SendError(playerid,"Вы далеко от игрока");
	if(!IsPlayerLogged[param[0]])return false;
	if(BenzinCount[carid]<param[1])return SendError(playerid,"В вашей машине недостаточно бензина для продажи");
	if(Fuel[GetPlayerVehicleID(param[0])] + param[1] > 100)return SendError(playerid, "В бензобак нельзя залить больше 100 литров");
	PanelPlayerID[param[0]] = playerid;
	CenaRaboti[param[0]] = (param[1]*BenzinCena[carid]);
	format(string,sizeof(string),"Механик {52A32A}%s{FFFFFF} предлагает заправить ваш транспорт на {52A32A}%d{FFFFFF}л. за {52A32A}%.1f${FFFFFF}",PlayerName[playerid],param[1],(param[1]*BenzinCena[carid]));
	ShowPlayerDialogEx(param[0],1898,0,"{43CD80}Вы согласны?",string,"Принять","Отмена");

    format(string,sizeof(string),"Вы предложили {52A32A}%s{FFFFFF} заправить транспорт за {52A32A}%.1f${FFFFFF}",PlayerName[param[0]],((param[1]*BenzinCena[carid])));
	SendClientMessage(playerid,COLOR_WHITE,string);

	Ingatre[param[0]]=2;
	return true;
}
cmd:azsmonitor(playerid)
{
    new carid = GetPlayerVehicleID(playerid);
    if(PlayerInfo[playerid][pJob]!= JOB_MECHANIC) return SendError(playerid,"Вы не механик");
	if(VehicleInfo[carid][vJob]!=JOB_MECHANIC)return SendError(playerid,"Вы должны находиться в машине механика");
    new string[800];
    SendError(playerid,"Мониторинг АЗС");
	for(new i;i<OWNABLEBIZES;i++)
	{
	    if(BizInfo[i][bState] == 6 && !GetString(BizInfo[i][bOwner],"The State"))
	    {
	        format(string,sizeof(string),"-{FFFFFF} Номер заправки: %d. Стоимость {AFAFAF}1-го{FFFFFF} литра бензина: {AFAFAF}$%.1f${FFFFFF}",i,BizInfo[i][bEnterPrice]);
	        SendClientMessage(playerid,COLOR_GRAY,string);
	    }
	}
	return true;
}
cmd:contractfill(playerid, param[])
{
	new carid = GetPlayerVehicleID(playerid);
	new string[400];
	if(PlayerInfo[playerid][pJob]!= JOB_MECHANIC) return SendError(playerid,"Вы не механик");
	if(VehicleInfo[carid][vJob]!=JOB_MECHANIC)return SendError(playerid,"Вы должны находиться в машине механика");
    if(!IsAtGasStation(playerid)) return SendError(playerid,"Вы должны находиться возле одной из АЗС");
    new fuelid = GetGasStation(playerid);
	new bizid = FuelInfo[fuelid][fBizzID];
	new Float:cost = BizInfo[bizid][bEnterPrice],benz = BizInfo[bizid][bProducts];
	if(benz< (1000-BenzinCount[carid]))return SendError(playerid,"На этой АЗС недостаточно бензина");
	if(cost<2)return SendError(playerid,"На этой АЗС слишком дешёвый бензин для продажи");
	if(BenzinCount[carid]>950)return false;
	BizInfo[bizid][bProducts]-=(1000-BenzinCount[carid]);
	UpdateFuels(bizid);

	Contracter[carid] = bizid;
	BenzinCount[carid]= 1000;
	BenzinCena[carid]=cost;

	format(string,sizeof(string),"{57B22C}Заправка %.1f$\n{FFFFFF}Бензина: %d/1000",BenzinCena[carid],BenzinCount[carid]);
	UpdateDynamic3DTextLabelText(Benzin[carid], 0xFFFFFFFF, string);
	format(string,sizeof(string),"[Информация] {FFFFFF}Вы заключили контракт с этой АЗС и вы будете получать по {52A32A}%.1f${FFFFFF} за каждый литр бензина",BenzinCena[carid]/2);
	SendClientMessage(playerid,COLOR_VALIK,string);
	SendClientMessage(playerid,COLOR_VALIK,"[Информация] {FFFFFF}Чтобы прервать контракт с этой АЗС достаточно заключить его с другой");

	return true;
}
cmd:check(playerid, const params[])
{
	if(!PlayerInfo[playerid][pAdmin]) return false;
    if(!ADuty[playerid]) return SendError(playerid,NO_DUTY_TEXT);
    new id;
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /check [id]");
	if(!IsPlayerConnected(id)) return SendError(playerid, "Этот игрок не в сети");
	if(id == playerid) return SendInfo(playerid, "Используйте:{7396FB} /menu");
    if(PlayerInfo[playerid][pAdmin] < PlayerInfo[id][pAdmin]) return SendError(playerid, "Нельзя смотреть статистику администратора");
    ShowStats(playerid,id,1);
	new query[150];
	format(query, sizeof(query), "[A] Администратор %s[%d] проверяет данные игрока %s",PlayerName[playerid],playerid,PlayerName[id]);
	SendAdminsMessage(COLOR_GRAY,query);
	return true;
}
cmd:checkcars(playerid, const params[]){
	if(!PlayerInfo[playerid][pAdmin]) return false;
    if(!ADuty[playerid]) return SendError(playerid,NO_DUTY_TEXT);
    new id;
    if(sscanf(params,"u",id)) return SendInfo(playerid, "Используйте:{7396FB} /checkcars [id]");
	if(!IsPlayerConnected(id)) return SendError(playerid, "Этот игрок не в сети");
	new string[128];
	for(new i = 5; i < 10; i++){
		if(!SlotValue[id][i])continue;
		f(string, "%s\n{FFFFFF}ID %d - %s", string, SlotValue[id][i], VehicleName[GetVehicleModelEx(SlotValue[id][i])-400]);
	}
	if(strlen(string) < 1)strcat(string, "У этого игрока нет транспорта");
	ShowPlayerDialogEx(playerid, 0,0, Name(id), string, "Скрыть", "");
	return 1;
}
cmd:givekey(playerid, const params[])
{
	new id,car,string[200];
	if(sscanf(params,"ud",id,car)) return SendInfo(playerid, "Используйте:{7396FB} /givekey [id] [carid]");
	if(!IsPlayerRegCar(playerid,car)) return SendError(playerid,"Вы не владелец этого транспорта");
	if(ProxDetectorS(10.0,playerid,id))
	{
	    if(IsPlayerHaveCar(playerid,car))
	    {
	        if(IsValidNumberCars(id))
			{
		        SetCarKeyer(car,PlayerName[id]);
		        format(string,sizeof(string),"[Информация] {FFFFFF}Игрок %s дал вам копию ключей от транспорта № %d",PlayerName[playerid],car);
		        SendClientMessage(id,COLOR_LIGHTBLUE,string);
		        format(string,sizeof(string),"[Информация] {FFFFFF}Вы дали игроку %s копию ключей от транспорта № %d",PlayerName[id],car);
		        SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		        GetNumberCars(id,PlayerInfo[id][pCars]);
	        }
			else SendError(playerid,"Игрок, которому вы хотите дать ключи, не может их взять");
	    }
	}
	return true;
}

cmd:addadmin(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
    new string[200],kLibName[24];
    if(sscanf(params,"s[24]d",kLibName,params[1])) return SendInfo(playerid, "Используйте:{7396FB} /addadmin [nickname] [level (1 - 5)]");
	if(params[1] < 1 || params[1] > 5) return SendError(playerid,"Уровни администрирования от 1 до 5");
	if(!strcmp(kLibName,Name(playerid),true,MAX_PLAYER_NAME))return SendError(playerid,"Вы не можете добавить в БД самого себя");
	if(strlen(kLibName) < 5)return SendError(playerid,"Слишком короткий никнейм");
	mysql_format(mysql, string, sizeof(string), "INSERT INTO `acc_adm`(`login`, `level`) VALUES ('%s','%i')",kLibName,params[1]);
	mysql_pquery(mysql, string);
	format(string,sizeof(string),"[A] %s назначил %s администратором %i уровня",Name(playerid),kLibName,params[1]);
	SendAdminsMessage(COLOR_ORANGE, string, 1);
	Adminlog(playerid, playerid, "ADD ADMIN", params[1], kLibName);
	return 1;
}
cmd:addhelper(playerid, const params[]){
	new string[128];
	if(PlayerInfo[playerid][pAdmin] < 6) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params,"u",params[0])) return SendInfo(playerid, "Используйте:{7396FB} /addhelper [id]");
	if(PlayerInfo[params[0]][pAdmin])return SendError(playerid, "Этот игрок уже администратор, используйте /deladmin для снятия");
	if(PlayerInfo[params[0]][pHelper])return SendError(playerid, "Этот игрок уже хелпер, используйте /delhelper для снятия");
	PlayerInfo[params[0]][pHelper] = 1;
	f(string, "[H] Администратор %s[%d] назначил %s[%d] хелпером", Name(playerid), playerid, Name(params[0]), params[0]);
	SendAdminsMessage(COLOR_LIGHTBLUE, string);
	SendInfo(params[0], "Вы были назначены хелпером на проекте Good Game");
	SaveAccount(params[0]);
	return 1;
}
cmd:delhelper(playerid, const params[]){
	new Cache:resultcache;
	if(PlayerInfo[playerid][pAdmin] < 6) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new kname[24];
	if(sscanf(params,"s[24]",kname)) return SendInfo(playerid, "Используйте:{7396FB} /delhelper [name]");
	if(!strcmp(kname, Name(playerid), true)) return SendError(playerid, "Вы ввели свой никнейм");
	new query[130];
	format(query, sizeof(query), "select `Lotto` from `accounts` where `NickName` = '%s' and `Lotto`>0 LIMIT 1", kname);
	resultcache = mysql_query(mysql, query,true);
	if(cache_num_rows())
	{
		format(query, sizeof(query), "UPDATE `accounts` SET `Lotto` = '0' WHERE `NickName` = '%s' LIMIT 1",kname);
		mysql_query(mysql, query,true);
		format(query, sizeof(query), "[H] Администратор %s снял хелпера %s", Name(playerid),kname);
		SendAdminsMessage(0xfb4d00FF, query, 1);
		cache_delete(resultcache, mysql);
		Adminlog(playerid, playerid, "DEL HELPER", 0, kname);
		new id = GetPlayerID(kname);
		if(id != INVALID_PLAYER_ID)
		{
			PlayerInfo[id][pHelper] = 0;
			J_Kick(id);
		}
	}
	else
	{
		SendError(playerid,"Данный игрок не является хелпером");
		cache_delete(resultcache, mysql);
	}	
	return 1;
}
cmd:deladmin(playerid, const params[])
{
	new Cache:resultcache;
	if(PlayerInfo[playerid][pAdmin] < 6) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new kLibName[24];
	if (sscanf(params, "s[32]", kLibName)) return SendInfo(playerid, "Используйте:{7396FB} /deladmin [nickname]");
	if(!strcmp(kLibName, Name(playerid), true)) return SendError(playerid, "Вы ввели свой никнейм");
	new query[130];
	format(query, sizeof(query), "select `Admin` from `accounts` where `NickName` = '%s' and `Admin`>0 LIMIT 1", kLibName);
	resultcache = mysql_query(mysql, query,true);
	if(cache_num_rows())
	{
		format(query, sizeof(query), "UPDATE `accounts` SET `Admin` = '0' WHERE `NickName` = '%s' LIMIT 1",kLibName);
		mysql_query(mysql, query,true);
		format(query, sizeof(query), "[A] Администратор %s снял администратора %s", Name(playerid),kLibName);
		SendAdminsMessage(0xfb4d00FF, query, 1);
		cache_delete(resultcache, mysql);
		Adminlog(playerid, playerid, "DEL ADMIN", 0, kLibName);
		new id = GetPlayerID(kLibName);
		if(id != INVALID_PLAYER_ID)
		{
			PlayerInfo[id][pAdmin] = 0;
			J_Kick(id);
		}
	}
	else
	{
		SendError(playerid,"Данный игрок не является администратором");
		cache_delete(resultcache, mysql);
	}	
	return 1;
}
cmd:resetmoney(playerid, const params[])
{
	new Cache:resultcache;
	if(PlayerInfo[playerid][pAdmin] < 7) return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new kLibName[24];
	if (sscanf(params, "s[32]dd", kLibName,params[0],params[1])) return SendInfo(playerid, "Используйте:{7396FB} /resetmoney [nickname] [0 - нал/1 - банк] [значение]");
	if(params[0] < 0 || params[0] > 1)return SendInfo(playerid, "0 - Наличность / 1 - Банковский счёт");
	if(!strcmp(kLibName, Name(playerid), true)) return SendError(playerid, "Вы ввели свой никнейм");
	new id = GetPlayerID(kLibName);
	if(id != INVALID_PLAYER_ID)return SendError(playerid, "Игрок в сети");
	new query[130];
	if(params[0] == 0)format(query, sizeof(query), "select `Money` from `accounts` where `NickName` = '%s' LIMIT 1", kLibName);
	if(params[0] == 1)format(query, sizeof(query), "select `Bank` from `accounts` where `NickName` = '%s' LIMIT 1", kLibName);
	resultcache = mysql_query(mysql, query,true);
	if(cache_num_rows())
	{
		if(params[0] == 0)format(query, sizeof(query), "UPDATE `accounts` SET `Money` = '%d' WHERE `NickName` = '%s' LIMIT 1",params[1], kLibName);
		if(params[0] == 1)format(query, sizeof(query), "UPDATE `accounts` SET `Bank` = '%d' WHERE `NickName` = '%s' LIMIT 1",params[1], kLibName);
		mysql_query(mysql, query,true);
		cache_delete(resultcache, mysql);
		Adminlog(playerid, playerid, "DEL MONEY", 0, kLibName);
		SendInfo(playerid, "Готово");
	}
	else
	{
		SendError(playerid,"Игрок не найден в базе данных");
		cache_delete(resultcache, mysql);
	}	
	return 1;
}
stock Adminlog(admin, player, const action[], amount, const reason[])
{
	new query[512];
	mysql_format(mysql, query, sizeof(query), "INSERT INTO `logsadmin` (`admin`, `adminIP`, `player`, `action`, `amount`, `reason`, `date`) VALUES ( '%e', '%e', '%e', '%e', '%d', '%e', NOW() )",
	Name(admin), PlayerIp[admin], Name(player), action, amount, reason);
	mysql_pquery(mysql, query);
}
cmd:veh(playerid, const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return 1;
    if(!ADuty[playerid]) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params, "ddd", params[0],params[1],params[2])) return SendInfo(playerid, "Используйте: {7396FB}/veh [id машины] [цвет 1] [цвет 2]");
	if(params[0] > 611 || params[0] < 400) return SendError(playerid, "ID транспорта от 400 до 611!");
	if(params[1] > 255 || params[1] < 0) return SendError(playerid, "ID цвета от 0 до 255!");
	if(params[2] > 255 || params[2] < 0) return SendError(playerid, "ID цвета от 0 до 255!");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	x += 1.5;
	VehicleCreate[playerid] = J_AddStaticVehicleEx(params[0],x,y,z,0.0,params[1], params[2],1000000);
	SetVehicleNumberPlate(VehicleCreate[playerid], "ggrp.ru");
	SetVehicleVirtualWorld(VehicleCreate[playerid], GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(VehicleCreate[playerid], GetPlayerInterior(playerid));
	VehicleCreates[VehicleCreate[playerid]] = true;
	J_SetVehicleHealth(VehicleCreate[playerid],100000);
	TempStripObject[VehicleCreate[playerid]] = -1;
	Fuel[VehicleCreate[playerid]] = GasMax;
	new string[64];
	format(string, sizeof(string), "Вы создали транспорт {FFFFFF}[ID %d]", VehicleCreate[playerid]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	f(string, "Для удаления используйте {FFFFFF}'/dveh %d'", VehicleCreate[playerid]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	return 1;
}
cmd:dveh(playerid,const params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3) return 1;
	if(!ADuty[playerid]) return SendError(playerid,NO_DUTY_TEXT);
	if(sscanf(params, "d",params[0])) return SendInfo(playerid, "Используйте: {7396FB}/dveh [id машины]");
	new model = GetVehicleModel(params[0]);
	if(!model) return SendError(playerid,"Неверный ID авто");
	if(VehicleCreates[params[0]] != false)
	{
		DestroyVehicle(params[0]);
		SendClientMessage(playerid,COLOR_LIGHTBLUE,"Транспорт удалён");
	}
	else SendError(playerid,"Это не созданная машина");
	return 1;
}
stock CheckItem(playerid)
{
    if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
	return 1;
}
stock RemoveItem(playerid, slot)
{
    RemovePlayerAttachedObject(playerid, slot);
	new im = GetFreeSlot(playerid);
	if(im != -1)SlotValue[playerid][im] = PlayerInfo[playerid][pSlotItem][slot];
	else SendError(playerid, "У Вас нет свободного места, чтобы положить этот предмет в инвентарь");
    PlayerInfo[playerid][pSlotItem][slot] = 0;
	PlayerTextDrawSetPreviewModel(playerid, InventarOther[playerid][11+slot], (!PlayerInfo[playerid][pSlotItem][slot]) ? FREE_SLOT_OBJECT : PlayerInfo[playerid][pSlotItem][slot]);
	PlayerTextDrawShow(playerid, InventarOther[playerid][11+slot]);
	if(im >= 0 && im < 25)UpdateInventory(playerid, im);
	else if(im >= 25 && im < 50)UpdateInventory(playerid, im-25);
	else if(im >= 50)UpdateInventory(playerid, im-50);
	ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
	return 1;
}
stock PlayerPrint(playerid, slot, type, item){
	new temptype;
	if(PlayerInfo[playerid][pGun][slot] != 0)temptype = PlayerInfo[playerid][pGun][slot];
	PlayerInfo[playerid][pGun][slot] = type;
	if(!temptype)SlotValue[playerid][item] = 0;
	else SlotValue[playerid][item] = temptype+(slot*10)+100000000000;
	UpdateInventory(playerid, SelectedSlot[playerid]);
	UpdateGunSlot(playerid, slot);
	return 1;
}
stock PlayerCase(playerid, type, item){
	new temptype;
	if(PlayerInfo[playerid][pCCase] != 0)temptype = PlayerInfo[playerid][pCCase];
	PlayerInfo[playerid][pCCase] = type;
	if(!temptype)SlotValue[playerid][item] = 0;
	else SlotValue[playerid][item] = temptype+80+100000000000;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 9))RemovePlayerAttachedObject(playerid,9);
	UpdateInventory(playerid, SelectedSlot[playerid]);
	UpdateCaseSlot(playerid);
	return 1;
}
stock RemoveCase(playerid){
	new im = GetFreeSlot(playerid);
	if(im != -1)SlotValue[playerid][im] = PlayerInfo[playerid][pCCase]+80+100000000000;
	else SendError(playerid, "У Вас нет свободного места, чтобы положить этот предмет в инвентарь");
    PlayerInfo[playerid][pCCase] = 0;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 9))RemovePlayerAttachedObject(playerid,9);
	if(im >= 0 && im < 25)UpdateInventory(playerid, im);
	else if(im >= 25 && im < 50)UpdateInventory(playerid, im-25);
	else if(im >= 50)UpdateInventory(playerid, im-50);
	UpdateCaseSlot(playerid);
	return 1;
}
stock RemovePrint(playerid, slot){
	new im = GetFreeSlot(playerid);
	if(im != -1)SlotValue[playerid][im] = PlayerInfo[playerid][pGun][slot]+(slot*10)+100000000000;
	else SendError(playerid, "У Вас нет свободного места, чтобы положить этот предмет в инвентарь");
    PlayerInfo[playerid][pGun][slot] = 0;
	if(im >= 0 && im < 25)UpdateInventory(playerid, im);
	else if(im >= 25 && im < 50)UpdateInventory(playerid, im-25);
	else if(im >= 50)UpdateInventory(playerid, im-50);
	UpdateGunSlot(playerid, slot);
	return 1;
}
stock GiveItem(playerid,item)
{
	new skin = GetPlayerSkin(playerid);
	switch(item)
	{
		case 19042..19053: SetAttachToSkin(playerid, 15, skin, item);//часы
		case 19421..19424: SetAttachToSkin(playerid, 14, skin, item);//наушники
		case 18911..18920: SetAttachToSkin(playerid, 13, skin, item);//банданы
		case 11704,19472,19037,19036,19038: SetAttachToSkin(playerid, 32, skin, item);//банданы
		case 19011..19019,19024,19027,19028,19029,19022,19035,19031,19032,19033: SetAttachToSkin(playerid, 12, skin, item);//очки
		case 19069,19068,19067: SetAttachToSkin(playerid, 1, skin, item);//шапки
		case 19554: SetAttachToSkin(playerid, 3, skin, item);//шапка баллас
		case 18953,18954: SetAttachToSkin(playerid, 2, skin, item);//тёплые шапки
		case 18968,18967,18969: SetAttachToSkin(playerid, 4, skin, item);//панамки
		case 18955,18956,18957,18959: SetAttachToSkin(playerid, 5, skin, item);//кепки назад
		case 18926,18927,18928,18929,18930,18931,18932,18933: SetAttachToSkin(playerid, 6, skin, item);//кепки вперёд
		case 19104,19105,19106,19107,19108,19109,19137,19528: SetAttachToSkin(playerid, 9, skin, item);//каски
		case 19519: SetAttachToSkin(playerid, 10, skin, item);//парик 1
		case 19274: SetAttachToSkin(playerid, 11, skin, item);//парик 2
		case 18925,18922,18923,18924,18921: SetAttachToSkin(playerid, 8, skin, item);//береты
		case 18947,18948,18949,18950,18951: SetAttachToSkin(playerid, 7, skin, item);//шляпы
		//Рюкзаки
		case 3026: SetAttachToSkin(playerid, 16, skin, item);
		case 371: SetAttachToSkin(playerid, 17, skin, item);
		case 19515: SetAttachToSkin(playerid, 31, skin, item);
		case 19559: SetAttachToSkin(playerid, 18, skin, item);
		//Вип
		//Шляпы 1
		case 18970, 18973, 18972, 18971,18977,18978,18979,18645: SetAttachToSkin(playerid, 19, skin, item);
		//Шляпы 2
		case 19487, 19352: SetAttachToSkin(playerid, 20, skin, item);
		//Банданы на голову
		case 18910, 18909, 18908, 18907, 18906: SetAttachToSkin(playerid, 21, skin, item);
		//Усы
		case 19351: SetAttachToSkin(playerid, 22, skin, item);
		//Усы
		case 19350: SetAttachToSkin(playerid, 24, skin, item);
		//Гитары
		case 19319, 19318, 19317:
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid,5); 
			SetAttachToSkin(playerid, 23, skin, item);
		}
		case 19064..19066: SetAttachToSkin(playerid, 25, skin, item);//новогодние шапки
		case 19085: SetAttachToSkin(playerid, 26, skin, item);//пиратская повязка
		case 19054..19058: SetAttachToSkin(playerid, 27, skin, item);//новогодний рюкзак
		case 19878:
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid,5); 
			SetAttachToSkin(playerid, 30, skin, item);
		}
	}
	return true;
}
stock SetPlayerSkinEx(playerid,skin){
	CheckItem(playerid);
	SetPlayerSkin(playerid,skin);
	for(new i = 0; i < 6;i++){
 	    if(PlayerInfo[playerid][pSlotItem][i] != 0){
			GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
			if(PlayerInfo[playerid][NeedRemove][i]){
				new slot = GetFreeSlot(playerid);
				if(slot != -1)SlotValue[playerid][slot] = PlayerInfo[playerid][pSlotItem][i];
				else SendError(playerid, "У Вас нет свободного места, чтобы положить этот предмет в инвентарь");
				PlayerInfo[playerid][pSlotItem][i] = 0;
				PlayerInfo[playerid][NeedRemove][i] = false;
			}
		}
 	}
 	if(UsingShield[playerid]){
	    J_SetPlayerArmour(playerid, 0);
	    PlayerInfo[playerid][pShield] = 0.0;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 6))RemovePlayerAttachedObject(playerid, 6);
	 	_ResetGun(playerid);
	 	SendError(playerid,"У вас отобрали служебные предметы, потому что в них запрещено работать");
 	}
 	SetPlayerChatBubble(playerid, "Переоделся", COLOR_GREEN, 10.0, 5000);
	return true;
}
stock SetPlayerAcs(playerid, i, slot){
	new tempactive;
	if(PlayerInfo[playerid][pSlotItem][i] != 0)tempactive = PlayerInfo[playerid][pSlotItem][i];
	if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	GiveItem(playerid,SlotValue[playerid][slot]);
	if(PlayerInfo[playerid][NeedRemove][i])return GiveItem(playerid,PlayerInfo[playerid][pSlotItem][i]);
	ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
	PlayerInfo[playerid][pSlotItem][i] = SlotValue[playerid][slot];
	SlotValue[playerid][slot] = tempactive;
	PlayerTextDrawSetPreviewModel(playerid, InventarOther[playerid][11+i], (!PlayerInfo[playerid][pSlotItem][i]) ? FREE_SLOT_OBJECT : PlayerInfo[playerid][pSlotItem][i]);
	PlayerTextDrawShow(playerid, InventarOther[playerid][11+i]);
	UpdateInventory(playerid, SelectedSlot[playerid]);
	return 1;
}
stock UseSkin(playerid, slot){
	if(GetPlayerSkin(playerid) == PlayerInfo[playerid][pFracSkin])return SendError(playerid, "Нельзя переодеться, будучи в служебной форме");
	new tempactive;
	tempactive = PlayerInfo[playerid][pSkin];
	SetPlayerSkinEx(playerid,SlotValue[playerid][slot]);
	ApplyAnimation( playerid, "SHOP", "ROB_shifty", 4.1, 0, 1, 1, 0, 0 );
	PlayerInfo[playerid][pSkin] = SlotValue[playerid][slot];
	SlotValue[playerid][slot] = tempactive;
	new string[32];
	f(string, "ID %d", PlayerInfo[playerid][pSkin]);
	PlayerTextDrawSetString(playerid, InventarOther[playerid][3], string);
	PlayerTextDrawSetPreviewModel(playerid, InventarOther[playerid][0], GetSkinOfPlayer(playerid));
	PlayerTextDrawShow(playerid, InventarOther[playerid][0]);
	UpdateInventory(playerid, SelectedSlot[playerid]);
	return 1;
}
stock GetXYInFront(&Float:x, &Float:y, Float:angle, Float:distance){
    x += (distance * floatsin(-angle, degrees));
    y += (distance * floatcos(-angle, degrees));
}
stock SetAttachToSkin(playerid, type, skinid, setobject)
{
	if(type == 1)
	{
		switch (skinid)// расные шапки
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.033000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,0.000998, 0.000000,90.000000,95.899993, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.000999,0.000998, 0.000000,90.000000,95.899993, 1.175000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.006999,0.000998, 0.000000,90.000000,95.899993, 1.092000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,-0.006000,0.000998, 0.000000,90.000000,95.899993, 1.137000,1.050999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.013999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 0.987000,1.091999,0.866999);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.122000,1.091999,0.866999);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.021000,0.001998, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130997,0.017000,-0.003001, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.027000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.009000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.002999,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.024000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.035999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.014999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.005999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.002999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.012999,0.008999, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 63: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 64: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.025999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.024999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.004000,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.019999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.005999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 75: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.015000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.003000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.034000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 85: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016000,-0.010001, 0.000000,90.000000,95.400001, 1.151999,1.240999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.027000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.001999,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,-0.003999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.005000,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.011999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.032000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101997,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.002000,0.002999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,0.012000,0.003999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.019000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.010000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.000000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.026000,-0.010001, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.019000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.035998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 138: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 144: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.007999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.004999,0.010999, 0.000000,90.000000,95.400001, 1.176999,1.087000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.009000,0.000999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.002999,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,-0.007999,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.011000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.008000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182998,-0.009999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.003999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.026000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.014000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,-0.006999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.001000,0.002998, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001000,-0.001001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.004000,-0.009001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.011000,-0.004000, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.015000,0.000999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,0.015000,0.000999, 0.000000,90.000000,96.400009, 1.231999,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.005000,0.000999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.010000,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.010000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.022000,-0.003000, 0.000000,90.000000,96.400009, 0.964999,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.009999,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.004000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.004000,-0.005000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.004000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.003000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.013000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.015000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.005999,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			default:{
				SendError(playerid,"Шапка не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 2)
	{
		switch (skinid)//“Єплые шапки
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016000,-0.002001, 0.000000,-0.799996,-8.600006, 1.000000,1.000000,1.050999);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.022000,0.008999, 2.000010,-5.999990,5.400008, 1.000000,1.042000,1.079000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.032000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.007000,-0.002001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.032000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.008000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.020000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.016000,0.003998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.004000,0.000998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.014000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.023000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.005000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.063998,0.015000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.027000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.909000,1.206000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.005000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.974000,1.206000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.040000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.017000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.004000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.020000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.025000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.014000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,0.006000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.006000,-0.004000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.025000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.030000,-0.000000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.001000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.001000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.010000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.029000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.018000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.005000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.005000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.013000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.014000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.025000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.000999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.009999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.024000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.017000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.003999,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.017000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.018000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.005000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.011000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 199: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.020000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.012000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.004000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.010000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 218: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.015000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.012999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.017999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.014000,0.001999, 2.000010,2.000011,-26.199983, 1.000000,0.970000,1.166000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.003000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.029000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.023000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.132000,1.166000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.011000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.002999,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.015000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 243: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091998,0.023000,0.001998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,-0.004001, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.005000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.019000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.010000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.027000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.015000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.013000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.007999,0.002998, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.007999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.021000,-0.003001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.030000,-0.003001, 0.000000,0.899997,-23.200000, 1.000000,1.075999,1.131999);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.131999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			default:{
				SendError(playerid,"Шапка не будет отображаться на вашем скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 3)
	{
		switch (skinid)//Ўапки баллас
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.009999,0.001998, 0.400000,-3.699999,12.699994, 1.114999,1.000000,1.238999);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.013000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181997,0.000999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181997,0.000999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,0.025000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.007999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.000000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.238999);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.025000,0.004998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.238999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.011999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,-0.025000,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153997,0.005000,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,-0.003999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165997,-0.014999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.003999,0.000998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.010000,0.006999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,0.004000,0.006999, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.011000,-0.004001, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.005000,-0.004001, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.018999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108997,-0.009000,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108997,0.011999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,-0.008000,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.006999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,-0.014000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.007999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,-0.010000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,-0.020000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157997,0.013999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.000999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.311000,1.367000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.004999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.017999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.010000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.013999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.007999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.016000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,0.004999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,-0.006000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,-0.006000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.012000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.001000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.264000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.015000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.264000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.023000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.001999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.005000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.012999,-0.002001, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.314000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.314000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.108000,1.314000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,0.987000,1.314000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.007999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.003999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.374000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.000000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.374000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.002000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.002000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.008999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.007999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.011000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.010000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.019000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.371001,1.374000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,-0.001000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170997,-0.023000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.009999,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.000999,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.018000,1.294000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.008999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.005999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,-0.014000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.000999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.005000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.004000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.010000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.006999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.001999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.002001, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.006000,0.000998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,-0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.007000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.012000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,0.019999,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.003999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.177001,1.327999);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,-0.003000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.177001,1.327999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161997,-0.015000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.257001,1.429999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.015000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.257001,1.429999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153997,0.012999,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.386001,1.429999);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.020000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.386001,1.429999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.018999,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.128001,1.429999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.004999,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.288001,1.429999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,-0.005000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.429999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,-0.015000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.429999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096997,-0.007000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.283999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,-0.002000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.283999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.264001,1.283999);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.264001,1.283999);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182997,-0.004000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,0.004999,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.004999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.411999);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.411999);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.007000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.007000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.000000,-0.004001, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.008999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.008999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149997,-0.001999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.004999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.011000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159997,0.010000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.278001,1.319999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.001000,-0.001001, 0.400000,-3.699999,-0.400006, 1.268999,1.014001,1.137000);
			case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.001000,-0.001001, 0.400000,-3.699999,-0.400006, 1.268999,1.014001,1.216000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,0.008000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.231001,1.216000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.001000,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.231001,1.295000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,-0.006999,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.000999,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.178997,0.011000,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.101001,1.295000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.101001,1.295000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.012000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.006000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.006000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.001000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.000000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			default:{
				SendError(playerid,"Шапка не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 4)
	{
		switch (skinid)//ѕанамки
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.005001, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007999,0.001998, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.015000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.004999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.018000,-0.000001, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.012000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.000000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.027000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.013000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.002998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.009999,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.014000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.003000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.017999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.029000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.008999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.037999,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.023000,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.004999,-0.005000, 0.000000,90.000000,93.699989, 1.078999,1.138000,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.043999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.031999,-0.004000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.017999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.026999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.014999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.008999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.002999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.006999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.006999,0.006999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182998,0.025999,0.003999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.011999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.032999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.010999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.005999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.022999,0.001999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.001999,0.001999, 0.199999,91.999984,90.599967, 0.934999,0.991000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.015999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.035999,-0.003000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.015999,-0.005000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.006001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.001000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.020999,-0.002000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,0.003999, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.033999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 146: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,-0.002000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.001000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.009999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 199: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.021999,-0.000000, 0.199999,91.999984,90.599967, 0.855999,1.005000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.018999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 218: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 219: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.008999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.007000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179998,0.021999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.009000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.022999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.012999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.000999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.015999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 237: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.002999,1.090000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.001998, 0.000000,90.000000,82.699989, 1.000000,1.057000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.030000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.004999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.008999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.014999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.011999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.003000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.172998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.015000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			default:{
				SendError(playerid,"Панамка не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 5)// епки назад
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105997,0.034000,0.000998, 6.799999,90.000000,97.500000, 0.925999,1.092999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.034000,-0.005001, 8.500000,89.899986,76.199981, 1.024999,1.115999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.045000,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.028999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094997,0.015999,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.037000,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,-0.001999,-0.005001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.031000,-0.002001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085997,0.019000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.014000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.027000,-0.004001, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.027000,0.004998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.029000,-0.002001, 8.500000,89.899986,81.099990, 1.047000,1.030999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.029000,-0.007001, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082997,0.023000,-0.004000, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101997,0.023000,-0.003001, 8.500000,89.899986,81.099990, 1.047000,1.156999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.058998,0.026000,-0.009001, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083997,0.036000,0.002998, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.027000,-0.003001, 8.500000,89.899986,81.099990, 0.988000,1.017999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.045999,-0.003001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.035000,-0.006001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.018000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097997,0.046000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097997,0.056999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.010999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.010999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.037999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090997,0.017999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.026999,-0.004001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.026999,-0.005001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.037999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.033999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.025999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.040999,0.006998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.040999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.018999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.035999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.013999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.049999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.007999,-0.001001, 8.500000,89.899986,81.099990, 1.002000,1.065999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.027999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.022999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,0.009999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.031999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.028999,0.001998, 8.500000,89.899986,81.099990, 1.042000,1.123999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.044999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.033999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.028999,0.004999, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.019999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.023999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.037999,-0.004000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.031999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.030999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.029999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.029999,-0.005000, 8.500000,89.899986,81.099990, 1.042000,1.059999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.032999,-0.005000, 8.500000,89.899986,81.099990, 0.935000,1.012999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.017999,-0.005000, 8.500000,89.899986,81.099990, 0.980000,1.012999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.016000,0.004999, 0.000000,90.000000,115.000000, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.024000,-0.005001, 0.000000,90.000000,115.000000, 1.057999,1.191999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.030000,-0.001000, 0.000000,90.000000,93.100013, 1.057999,1.102999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.034000,-0.001000, 0.000000,90.000000,93.100013, 0.913999,1.102999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.013000,-0.001000, 0.000000,90.000000,93.100013, 0.970999,1.102999,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.027000,0.000999, 0.000000,90.000000,93.100013, 1.066999,1.102999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.046000,-0.008000, 0.000000,90.000000,93.100013, 1.099999,1.102999,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.028000,0.000999, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.078998,0.028000,-0.004000, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.013000,-0.000000, 0.000000,90.000000,93.100013, 0.913999,0.943999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 152: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,0.001000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.021000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100997,0.027000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.031000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.031000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.022000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.002999,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.025000,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.016000,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.016000,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149997,0.016000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,0.021999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,0.021999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.013999,-0.009000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.025999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.025999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.024000,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.018999,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155997,0.012999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155997,0.018999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.044999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083997,0.033999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.043999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084997,0.027999,0.002999, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.019999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.031999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.015999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.004999,0.000999, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.034000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.014000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.048000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.034000,-0.000000, 0.000000,90.000000,93.100013, 1.076999,1.121999,1.024999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094997,0.019000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099997,0.005000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.020000,-0.001001, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,0.032999,0.000998, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.031999,-0.000001, 0.000000,90.000000,101.900001, 1.059000,1.115999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.020999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.027999,-0.004001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.026999,0.007998, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.031999,0.002998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.025999,0.003998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.041999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,-0.002001, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,0.000998, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.020999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096997,0.025999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.024999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.034999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,0.024999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.032999,-0.001001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090997,0.028999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.028999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.023999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.005999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.015999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.035999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.024999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.027999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			default:{
				SendError(playerid,"Кепка не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 6)// епки вперЄд
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.000000,1.072000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.020000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.015001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.019001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.022000,-0.007000, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.014000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.016001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 24: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.012999,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,1.120000,1.075000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.000999,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.011000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.024000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.004000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.016999,-0.010001, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,-0.010000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.031000,-0.022001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.003999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.014999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.033000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.033000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.177997,0.000999,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.013000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,0.982000,1.019999);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.013000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.001000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,0.005999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,1.005999,1.019999);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.003999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.007999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,-0.023000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.012999,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,-0.026000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.186997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.027000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.004000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.003999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.028000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.028000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.021000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.002000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.002000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,-0.005000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.005000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,0.971000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.022000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,-0.018000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.018000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.018000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.024000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.010000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,0.019999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 138: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 139: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 141: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 145: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 146: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.033000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.178997,-0.028000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179997,-0.042000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,0.002999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,-0.001000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,-0.001000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,0.000999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145997,-0.009000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,-0.025000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.016000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,-0.029000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.016000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.021000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.128000,1.059000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.006000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.068999,1.009000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.012000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.016000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.022000,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.001000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.016000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.028000,-0.016001, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.037000,-0.020000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.023000,-0.017000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.033000,-0.019000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 195: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,-0.041000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.023000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.002000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.004000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.002999,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.033000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.025000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.019000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 219: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.045000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,-0.039000,-0.006000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.041000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.010999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,-0.015000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.012999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.003000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.006000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 233: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.009000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,-0.011000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,-0.004000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 237: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.009000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.068999);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.011000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.101999,1.106000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187998,-0.023000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.183000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.010000,-0.020000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.013000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.029000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.019000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.030000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.004000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.016000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.021000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,1.033999,1.004000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.027000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.012000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.006000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.011000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.013000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.021000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.019000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.176998,-0.031000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.015000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,-0.028000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.032000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.072000,-0.016000, -175.400024,173.999984,139.900024, 1.074999,0.970999,1.044000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.020000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.005000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.001999,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 306: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 307: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.028000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 308: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 309: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			default:{
				SendError(playerid,"Кепка не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 7)//Ўл¤пы
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.014000,-0.008000, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.126000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,13.600016, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.001000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.008000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.007000,0.003998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.027000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.001000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.005000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.015000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.006999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.024000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.037000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.008999,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.013000,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.028000,0.000998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.009999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.196998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,0.002999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.011000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.000000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.003999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.016000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.023000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.010999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.005000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,0.007999,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.022000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.007000,-0.005001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.008999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.004999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.009000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.001000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.005999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.176998,0.017000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.012999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.003000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,-0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.188998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.800999,0.970000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			default:{
				SendError(playerid,"Шляпа не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 8)//Ѕереты
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.000999,-0.010001, 0.199998,-5.700015,-8.800018, 1.000000,1.000000,1.085000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.000000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.005000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.015000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.011999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.021999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.002000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.006000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.016999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.015000,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,0.947999,1.029000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.008000,-0.00201, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.006000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.123000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.011999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.200000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.012000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.017000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.011999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,0.004000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.005999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.002000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.004999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.008000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.001000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.013000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.006999,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.005999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.014999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.015000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.003999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.002000,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.002999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.000000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.014999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.010999,-0.000001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.001999,-0.008001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.001999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003999,-0.006001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.005000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.018000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.020999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.027999,1.079000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,-0.013999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.208999,1.217000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.002000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.005999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.183998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.001000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.013999,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.002000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.002000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.012999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.012999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.004999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.005999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.010999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.002999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.003999,0.001999, 0.199998,-5.700015,-8.800018, 1.074000,0.936999,0.979000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.003000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.001999,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.177998,-0.007999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,-0.019999,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.012000,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.015999,-0.000000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.012000,-0.002000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.000000,-0.005000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.006999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.005999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.005000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.000999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.012000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.001999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.007000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.017999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179998,-0.007999,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			default:{
				SendError(playerid,"Берет не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 9)// аски
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.007000,0.012999, 0.000000,173.499969,-154.900054, 1.151999,1.000000,1.145000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.183998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.026000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.013000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.003000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.026000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.002999,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.004999,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.019999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.007999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 50: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.020000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.007999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.010000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 78: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.012000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.001999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.009001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,0.002999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.196000,1.089999,1.130000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.007000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.024000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.002000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.007000,0.002998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.012000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.019999,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.013000,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.007999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.019999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.001000,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.008999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.197998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.332000,1.058999,1.191000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.00001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			default:{
				SendError(playerid,"Каска не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 10)//ѕарик 1 19519
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079997,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079997,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,-0.004999,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.015000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,-0.011999,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.016000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.056998,-0.001000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.070998,-0.001000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,0.010999,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,0.012000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.070998,0.025000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.015000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.060998,0.015000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.023998,0.003000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.023000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.047998,0.015000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.015000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.062998,0.008000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,-0.003999,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.010000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.070998,0.016000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.056998,-0.014999,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.022000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.075998,-0.016999,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.013000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071998,0.004000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071998,0.004000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071998,0.021000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071998,0.012000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071998,0.008000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.060998,0.016000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.016000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.009000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.009000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080998,-0.014999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.068998,-0.001999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.068998,-0.001999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.068998,-0.001999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.068998,-0.018999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,0.002000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,-0.000999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.063998,-0.000999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.063998,-0.000999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.044998,-0.004999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,-0.004999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.060998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.060998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.018000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087998,0.018000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087998,0.018000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.009000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.075998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.075998,0.026000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.075998,0.039000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.075998,0.018000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.018000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 231: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.018000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 232: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,-0.023999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,-0.013999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.043998,-0.010999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.043998,-0.002999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.060998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.014000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.014000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.014000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.059998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.061998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.061998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.072998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.006000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.016000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,0.000000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.002000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.066998,-0.012999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.025000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.070998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.070998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			default:{
				SendError(playerid,"Парик не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 11)//ѕарик 19274
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,-0.008000,0.006998, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.012000,0.006998, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.017000,0.006998, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,-0.017000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.017000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.017000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.008000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082998,-0.033000,-0.000001, 0.000000,-8.500098,-12.200008, 0.871999,0.740000,0.807999);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082998,0.005000,-0.000001, 0.000000,-8.500098,-12.200008, 0.871999,0.740000,0.807999);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.740000,0.807999);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.740000,0.807999);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.740000,0.807999);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.821000,0.807999);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.821000,0.807999);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.043998,-0.013999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.821000,0.807999);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,0.016000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,-0.025999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086998,-0.020999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.021999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.014999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080998,-0.014999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082998,-0.019999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.001999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.012999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.015999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.008999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.008999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,-0.002999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.007999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.007999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.007999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.002999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.002999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.009999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.009999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.015999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,-0.020999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,-0.010999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,-0.010999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.001000,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.001999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.018999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,-0.018999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,-0.031999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.066998,-0.031999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,-0.019999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,-0.002999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.017999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.022999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,-0.022999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082998,-0.014999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.001000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,-0.004999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			default:{
				SendError(playerid,"Парик не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
  		}
  	}
	else if(type == 12)//ќчки
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.030999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.039999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.104998,0.044999,-0.000001, 0.000000,90.000000,90.500007, 1.000000,1.099000,1.080000);
			case 4: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.128998,0.026999,-0.001000, 76.200012,73.100074,15.000033, 1.000000,1.130000,1.080000);
			case 5: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.128998,0.037999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.217000,1.080000);
			case 6: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.105997,0.029999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.017000,1.080000);
			case 7: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098997,0.054999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 8: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088997,0.040999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 9: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.034999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 10: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081997,0.039999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 11: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.039999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 12: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.035999,0.001999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 13: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082998,0.031999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 14: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.056999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 15: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.019999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 17: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.035999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 19: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081998,0.035999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 20: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.030999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 21: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.047999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 22: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 23: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 24: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.037999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.085000,1.080000);
			case 25: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.034999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 26: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 27: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 28: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.046999,-0.006000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 29: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.051999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 31: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.052999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 39: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.080998,0.034999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 40: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.030999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 41: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.042999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 42: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.036999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 44: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.041999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.029000,1.027000);
			case 46: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.059999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 49: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.035999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 50: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.105998,0.012999,-0.008000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 54: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.052999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 58: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.028999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,0.994000,1.027000);
			case 59: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.036999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.100000,1.027000);
			case 60: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.050999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.130000,1.027000);
			case 61: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.048999,-0.004000, 138.500000,87.300071,-47.999965, 0.880000,0.993001,1.027000);
			case 66: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 67: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.041999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 68: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.051999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 69: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.070998,0.048999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 70: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.055999,0.005999, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 71: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 72: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.053999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 73: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.045999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 76: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.072998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.127000,1.027000);
			case 78: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.114998,0.023999,0.007999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 79: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.036999,0.009999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 83: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.042999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 90: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.046999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 91: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.040999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 93: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.051999,-0.001000, -121.799896,96.400039,-147.299835, 0.880000,1.139000,1.027000);
			case 94: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.045998,0.024999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.950000,1.027000);
			case 95: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.013999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.982000,1.027000);
			case 96: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.106998,0.041999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
			case 97: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.060998,0.040999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
			case 98: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.068999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 101: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.042999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 102: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.056999,-0.001000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 103: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.116000,1.027000);
			case 105: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
			case 106: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.050999,-0.003000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
			case 107: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.100998,0.039999,-0.003000, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
			case 108: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.037999,0.002999, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
			case 109: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.147000,1.027000);
			case 110: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.126000,1.027000);
			case 111: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.108998,0.029999,-0.003000, -92.899909,88.200088,-176.599822, 1.020000,1.079000,1.027000);
			case 112: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.027999,-0.003000, -92.899909,88.200088,-176.599822, 0.904000,0.976999,1.027000);
			case 113: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.109998,0.051999,-0.001000, -92.899909,88.200088,-176.599822, 0.904000,1.115000,1.027000);
			case 117: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
			case 118: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
			case 119: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.044999,-0.001000, -92.899909,94.700088,-176.599822, 0.904000,1.115000,1.027000);
			case 120: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.040999,0.001999, -92.899909,92.700088,-176.599822, 0.904000,1.115000,1.027000);
			case 121: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.279000,1.162999);
			case 122: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.122000,1.093999);
			case 124: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.033999,-0.002001, -92.899909,96.000068,-176.599822, 1.055000,1.122000,1.093999);
			case 125: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.002001, -92.899909,92.200057,-174.999862, 1.025000,1.062000,1.093999);
			case 126: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.000001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 127: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.041999,-0.001001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 128: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.047999,-0.003000, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 134: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082998,0.029999,0.001999, -92.899909,103.300056,-179.899917, 0.871000,1.031000,1.093999);
			case 135: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.037999,-0.002000, -92.899909,103.300056,-174.699890, 0.871000,1.031000,1.093999);
			case 136: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.025999,-0.002000, -92.899909,103.300056,-173.099945, 0.871000,1.031000,1.093999);
			case 142: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.049999,-0.005001, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
			case 147: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.031999,0.005999, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
			case 148: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.060998,0.045999,0.003999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
			case 150: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066998,0.043999,0.002999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
			case 153: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.077998,0.023999,0.007999, -92.899909,105.900032,-176.499954, 0.871000,1.085999,1.093999);
			case 154: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.058998,0.040999,-0.002001, -92.899909,96.300025,-176.099960, 0.871000,1.085999,1.093999);
			case 155: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.052999,-0.005001, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
			case 160: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.100998,0.028999,-0.001000, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
			case 163: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.030999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
			case 164: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
			case 165: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075998,0.046999,-0.000001, -92.899909,97.100036,-174.299972, 0.871000,1.085999,1.093999);
			case 166: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.074998,0.043999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
			case 169: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.067998,0.040999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
			case 170: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.053999,-0.005001, -92.899909,92.100044,-175.899978, 0.871000,1.069999,1.093999);
			case 171: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.042999,-0.001000, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
			case 172: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.067998,0.044999,0.001999, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
			case 176: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.047999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 177: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.041999,-0.007001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 179: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 180: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.099998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 181: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.122998,0.036999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 182: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.033999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 183: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.028999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 184: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.006001, -92.899909,92.100044,-175.899978, 0.980000,1.078999,1.093999);
			case 186: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.034999,0.000999, -92.899909,92.100044,-176.700012, 0.980000,1.078999,1.093999);
			case 187: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075998,0.023999,0.004999, -92.899909,105.300056,-176.700012, 0.980000,1.119999,1.093999);
			case 188: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.034999,-0.000001, -92.899909,105.300056,-173.700042, 0.980000,1.119999,1.093999);
			case 189: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.033999,0.000999, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 190: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 191: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 192: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.040999,-0.002000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 193: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 194: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 195: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.036999,0.000999, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
			case 200: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.037999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
			case 202: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 206: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 210: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.022999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 211: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.070998,0.040999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 212: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,92.900062,-176.100021, 0.839000,0.981999,1.093999);
			case 213: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.048999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 214: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.063998,0.045999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 216: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.063998,0.044999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 217: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.048999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 219: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.068998,0.044999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 220: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.054998,0.059999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 221: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.046999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
			case 222: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.053999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
			case 223: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.071999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 224: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 225: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 226: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 227: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.109998,0.057999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 228: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.068999,-0.000000, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 229: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.073998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,1.161999,1.093999);
			case 230: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.055998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,0.999000,1.093999);
			case 233: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.064998,0.048999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
			case 235: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.053998,0.027999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
			case 236: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.038999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,1.093000,1.093999);
			case 239: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.021999,0.004999, -92.899909,106.200004,-176.100021, 0.839000,0.959000,1.093999);
			case 240: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.051999,0.000999, -92.899909,87.499969,-176.100021, 0.839000,1.129000,1.093999);
			case 247: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.099998,0.051999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.129000,1.093999);
			case 248: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.062999,-0.001000, -92.899909,96.499946,-176.100021, 0.839000,1.182000,1.093999);
			case 250: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.054999,-0.004000, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
			case 252: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.045999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
			case 254: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.048999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,1.134000,1.093999);
			case 255: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.031999,0.005999, -92.899909,96.499946,-176.100021, 0.839000,0.972000,0.954999);
			case 258: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
			case 259: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
			case 261: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.023999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,0.945999,1.113999);
			case 262: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081998,0.048999,-0.002001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
			case 265: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094997,0.037999,-0.000001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
			case 266: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.103997,0.034999,-0.005001, -92.899909,88.299957,-177.600051, 0.839000,1.097000,1.113999);
			case 267: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 270: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 272: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093997,0.050999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 273: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.041999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 274: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088997,0.035999,-0.003001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 275: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 276: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.033999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.027999);
			case 280: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.037999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 281: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085997,0.036999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 282: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 283: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 286: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 287: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.072997,0.056999,0.007999, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 288: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.034999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 291: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.050999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 292: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075997,0.032000,-0.005001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.038999,-0.008001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.045999,-0.000001, 95.799949,87.600059,-4.900008, 0.878000,1.087000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.040999,-0.000001, 95.799949,67.300048,-4.900008, 0.878000,1.087000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.044999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.033999,-0.004001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.052999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			default:{
				SendError(playerid,"Очки не будут отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][1] = true;
			}
		}
	}
	else if(type == 13)//Ѕанданы
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093999,0.018000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.029000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104999,0.024000,0.001999, -86.200012,-1.500002,-96.000038, 1.083999,1.000000,1.107000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.131999,0.012999,0.001999, -84.100021,5.999998,-96.600036, 1.268999,1.000000,1.107000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.106999,0.023999,0.001999, -84.100021,5.999998,-96.600036, 1.354999,1.000000,1.107000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,0.006999,0.001999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.028999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 8: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.020999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.024999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.009999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.014999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.030999,0.000999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,-0.004000,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.018999,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.014999,-0.004000, -87.500000,2.199998,-95.200027, 1.123999,1.000000,1.032000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.007999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.005999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.023999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.027999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.003999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.032000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.008999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.025999,-0.006000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.034999,0.000999, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.019999,-0.007000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.022999,-0.006000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
			case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.008000,-0.003000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.975000);
			case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013999,0.009999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 35: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 36: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 37: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 38: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.032999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.018999,-0.002000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.006999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.975000);
			case 43: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.014999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
			case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.034999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
			case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.934000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.033000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
			case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018000,-0.004000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.102000);
			case 49: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.014000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.086999,0.024000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.004000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.017000,-0.001000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.006000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.011000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.015000,-0.000000, -87.500000,16.199996,-95.200027, 1.069999,1.000000,0.930000);
			case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.000000, -87.500000,16.199996,-95.200027, 0.967999,1.000000,0.930000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.048999,0.024000,0.000999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.930000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.021000,0.002999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
			case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
			case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 84: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.018000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008000,-0.002000, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.017999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.020000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.018999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.021999,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,0.965000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.035000,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.022999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 102: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 1.043999,1.000000,1.048000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.984000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.917000);
			case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.031999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.008000);
			case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.027999,-0.005000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024999,-0.004000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.024999,-0.007000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.003000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.117999,1.000000,1.177000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,1.177000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.024999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 128: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.035999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 134: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 0.912999,1.000000,0.925000);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.023999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.004000, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.020999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 142: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.997999,1.000000,1.059000);
			case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.009999,0.005999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 152: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,-0.002000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.023999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.068000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.024999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.031999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.018999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.045000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.012999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 173: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.030999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 174: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 175: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.098999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.009999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.026999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,0.007999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025999,0.002999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.016999,-0.001000, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 203: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 204: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.082000,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.892999,1.000000,1.014000);
			case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.026999,-0.002000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.024999,-0.003000, -87.500000,16.199996,-95.200027, 0.859000,1.000000,0.883000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.038999,-0.003000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,0.883000);
			case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.060999,1.000000,0.894000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,0.894000);
			case 220: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015000,0.029999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.205000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.021999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.030999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,0.965000);
			case 233: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.018999,0.000000, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.965000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.004000,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.003999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.028999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 237: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.009999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081999,0.015999,0.009000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.023999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.020999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,0.005000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041999,0.014999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.052999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,-0.000000,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.008999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 269: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.019999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
			case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
			case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.024999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 285: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.016999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.001000,-0.002999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.010999,0.008000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,-0.000999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.013999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.027999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.007999,-0.003999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.011999,-0.006999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.003000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.020999,0.001000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.020999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.017999,0.003000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,0.001000, -87.500000,16.199996,-95.200027, 1.059998,1.000000,1.062000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.011999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
			default:{
				SendError(playerid,"Бандана не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][3] = true;
			}
		}
	}
	else if(type == 14)//Ќаушники
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.286000,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.303999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 3: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.293999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 4: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 5: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.355999,0.071000,0.005000, -81.499992,-113.599922,94.599967, 1.099000,1.044999,1.000000);
			case 6: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.347999,0.090000,0.000000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.323998,0.104999,-0.008999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 8: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.301999,0.112999,0.001999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.314998,0.089999,0.001999, -90.599975,-108.399971,91.199943, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.243998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.313999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.361999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.338999,0.102000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.325999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 16: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.367999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.346999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.299998,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.354999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.336999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.336999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.357999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.349999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 27: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.338999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.343999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342999,0.102000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.294999,0.092000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.348999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 35: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.328999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 36: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 37: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 38: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.298999,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.299999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.323999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.343999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 57: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.354999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 58: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.278999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.319999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.344999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.319999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 71: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.329998,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 78: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.380998,0.109999,0.003000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.364998,0.109999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.328998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.260998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.266998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.360998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.311998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.318998,0.098999,0.000000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.341998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 102: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331998,0.102999,-0.008999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.366998,0.082000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.360998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.309998,0.084999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.332998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.339998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.339998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.335998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 128: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.316998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 134: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.247998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.247998,0.099999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 142: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.339998,0.097999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.348998,0.109000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.109000,0.007000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 148: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.110000,0.008000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.312998,0.110000,-0.004999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.110000,-0.010999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327998,0.110000,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.303998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.361998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.355998,0.107000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 173: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 174: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 175: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.333998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.103999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.330998,0.090999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.330998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.329998,0.111999,0.013000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.329998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 189: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 195: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.358998,0.101999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.318998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.256998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.330998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.252998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.327998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 219: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 220: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 221: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 222: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.092999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.361998,0.096999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.274998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.301998,0.101999,-0.003999, -90.599975,-104.999977,92.599967, 1.109000,1.000000,1.000000);
			case 233: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.336998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 234: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.277998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 235: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.268998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 236: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.274998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 239: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.387998,0.111999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 240: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.325998,0.087999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 247: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 248: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 250: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.103999,-0.002999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 252: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 254: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 255: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.332998,0.103999,0.009000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 258: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 259: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 261: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.276998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 262: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.317998,0.083999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 265: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.317998,0.083999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 266: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.304998,0.070999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 267: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.531998,0.082000,-0.039000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 269: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.368998,0.068000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 270: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.355998,0.091000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 271: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.339998,0.094000,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 272: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.334998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 273: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.315998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 274: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 275: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 276: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 280: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 281: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 282: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 283: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 284: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.104999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 285: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.342998,0.090999,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 286: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.337998,0.086999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 287: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.345998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 288: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.341998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 289: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.307996,0.097000,-0.000999, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 290: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 291: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 292: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.328996,0.074000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 294: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.260996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 296: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.260996,0.093999,0.007001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 297: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.318996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 298: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.312996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 300: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 301: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 302: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 307: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject(playerid, 4, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			default:{
				SendError(playerid,"Наушники не будут отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][4] = true;
			}
		}
	}
	else if(type == 15)//„асы
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.003998,-0.001999, 51.200016,53.199977,142.800018, 0.963999,0.916999,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.001999,-0.005999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.001999,-0.007999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.001999,-0.012999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011000,-0.018998,-0.000999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
			case 8: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011000,-0.003998,-0.011999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.002998,-0.015999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.010998,-0.012999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.018999,-0.009998,-0.011999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.008998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.003998,0.008001, 51.200016,70.499969,142.800018, 0.964999,0.921999,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.010999,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 35: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.054000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 36: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 37: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 38: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.024000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.024000,-0.003998,-0.010998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 41: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.005998,0.001001, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 42: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.005998,-0.012998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.015998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,-0.008998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.004000,0.001001,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,0.001001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 51: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 52: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 53: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.003998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.003998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.026999,0.005001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003000,-0.003998,-0.007998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003000,-0.011998,-0.004998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003000,-0.002998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.011999,-0.014998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.010998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,0.001001,-0.028998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.004998,-0.007998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.009998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.040998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.002998,0.001001, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.002998,-0.002998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.007998,-0.006998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.003998,-0.004998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.009999,0.001001,-0.001998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.026999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.363999,1.386999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.026999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.014999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.022999,-0.008998,-0.012998, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.006000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.128999,1.127999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.004999,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.004999,-0.001998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.007000,-0.010998,-0.010998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.007000,-0.004998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.024999,-0.005998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.009999,-0.011998,0.013001, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 133: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.009999,-0.005998,-0.008998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 134: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.009999,-0.012998,-0.005998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 142: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 0.984000,0.977999,1.000000);
			case 149: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.015998,-0.001998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.010998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.013998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.000998,-0.005998, 51.200016,70.499969,142.800018, 1.250000,1.087999,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.009999,-0.000998,-0.009998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.009998,-0.008998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 167: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.021000,-0.010998,-0.013999, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.005998,-0.004998, 51.200016,70.499969,142.800018, 1.016000,1.304999,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.005998,0.002001, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.005998,-0.007998, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.008998,0.001001, 51.200016,70.499969,142.800018, 0.956000,1.095999,1.000000);
			case 173: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.006998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
			case 174: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
			case 175: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.450000,1.353999,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.011998,-0.001998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.008998,-0.010999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.001998,0.000000, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.014998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 201: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.007998,0.008000, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.007998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 215: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.003998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 220: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.010998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 231: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.009998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.002998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.008998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 269: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.004998,0.005001, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.009000,-0.008998,-0.006999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.020000,-0.013998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 283: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 285: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.001000,-0.002998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 287: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.008998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 288: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 289: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 2, setobject, 6, 0.001999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.050999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.028999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 2, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			default:{
				SendError(playerid,"Часы не будут отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][2] = true;
			}
		}
	}
	else if(type == 16)//–юкзаки 1
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.204000,-0.064999,-0.002999,   -0.600000,-1.100000,0.000000,   1.075999,0.918998,0.905000 );
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.237000,-0.064999,-0.002999,   -0.600000,-1.100000,0.000000,   1.075999,0.918998,0.905000 );
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.228000,-0.062999,-0.002999,   -0.600000,-1.100000,0.000000,   1.075999,0.918998,0.905000 );
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.056999,-0.009999,   -0.600000,-1.100000,2.399999,   1.075999,0.918998,0.905000 );
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.117999,-0.009999,   -0.600000,-1.100000,2.399999,   1.075999,1.000998,0.905000 );
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.079999,-0.012999,   -0.600000,-1.100000,2.399999,   1.075999,1.000998,0.905000 );
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.219000,-0.057999,-0.012999,   -0.600000,-1.100000,2.399999,   1.075999,1.000998,0.905000 );
			case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207000,-0.061999,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.962998,0.834000 );
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207000,-0.058999,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.962998,0.834000 );
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.262000,-0.071999,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.962998,0.834000 );
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.189000,-0.068000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.184000,-0.068000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.116000,-0.068000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.158000,-0.068000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.077000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156000,-0.077000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.184999,-0.077000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.129999,-0.077000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.159999,-0.077000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.159999,-0.077000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.243000,-0.077000,-0.006999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.167000,-0.077000,-0.014999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.003999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.003999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.188000,-0.103000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.188000,-0.103000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 31: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.239000,-0.103000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.173000,-0.068999,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.199000,-0.080999,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.150000,-0.080999,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 38: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.222000,-0.080999,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.222000,-0.080999,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.080999,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.067000,-0.017999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.067000,-0.017999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.196000,-0.067000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.203000,-0.067000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.171999,-0.067000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 50: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 53: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.218999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.232999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.174999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.174999,-0.074000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.116999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.202999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.115999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.141999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.146999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.146999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.155999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.167999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.162999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.118999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.136999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.136999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.834000 );
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   1.049000,0.911998,0.888999 );
			case 88: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.124999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   0.840000,0.911998,0.753999 );
			case 89: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.124999,-0.085000,-0.010999,   -0.600000,-1.100000,2.399999,   0.840000,0.911998,0.753999 );
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.057000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.999998,0.826000 );
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.057000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.719998,0.696000 );
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.067000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.719998,0.696000 );
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.122999,-0.067000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.719998,0.696000 );
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.113999,-0.067000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.719998,0.696000 );
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.022999,-0.081000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.719998,0.696000 );
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.071999,-0.081000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.719998,0.696000 );
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.081000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.719998,0.806000 );
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.046999,-0.081000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.719998,0.806000 );
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.046999,-0.112000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.853998,0.900000 );
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.055999,-0.081000,-0.008999,   -0.600000,-1.100000,2.399999,   0.840000,0.853998,0.900000 );
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.055999,-0.123000,-0.008999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.987000 );
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.097999,-0.101000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.987000 );
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.035999,-0.101000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.987000 );
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.101000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.987000 );
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.093999,-0.101000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.987000 );
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.987000 );
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.987000 );
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.987000 );
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.051999,-0.069000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.987000 );
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.107999,-0.069000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.069000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.069000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.069000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.003999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.101000,-0.015999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.101000,-0.015999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.098999,-0.101000,-0.015999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.015999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.003999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.003999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.076000,-0.003999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.112999,-0.076000,-0.003999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 129: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.186999,-0.076000,-0.003999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 130: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.003999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 131: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.069000,-0.003999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.175999,-0.069000,-0.006999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.078000,-0.006999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156999,-0.064000,-0.006999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.093999,-0.094000,-0.006999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.881000 );
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161999,-0.082000,-0.006999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.111999,-0.086000,-0.006999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.076999,-0.094000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 146: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.068000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.068000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.060000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.081000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.115999,-0.064000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.072000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.107999,-0.072000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.086000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.086000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.065000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.067999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.127999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.127999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.095999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.094999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.044999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 203: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 204: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.095999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.154999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.063999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.148999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 224: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 225: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.103999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.043999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.068999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.139999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.103999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.067999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.045999,-0.078000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.078000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.072999,-0.078000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.078000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.078000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.063999,-0.078000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.113999,-0.078000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.062999,-0.078000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.130999,-0.078000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.078000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 263: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.078000,-0.002999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.078000,-0.011999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.097999,-0.078000,-0.011999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,   0.121000,-0.078000,-0.030000,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.064999,-0.102000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.064999,-0.102000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.102000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.102999,-0.102000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.109999,-0.102000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.090000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.012999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.080999,-0.090000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.080999,-0.090000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.090000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.069999,-0.090000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.069999,-0.090000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.090000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.090000,-0.005999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.057999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.060999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.070999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.135999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.130999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999,   -0.600000,-1.100000,2.399999,   0.894000,0.853998,0.809000 );
			default:{
				SendError(playerid,"Рюкзак не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][5] = true;
			}
		}
	}
	else if(type == 17)//–юкзаки 2
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.087999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.041999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.181999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.012000,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.122999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.107999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.077999,-0.127999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.030000,-0.105999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.021999,-0.126999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.098999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.032000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.032000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 53: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.097999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.037000,-0.125999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.038999,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.007999,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.020999,-0.106999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.103999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.031000,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.046000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.007999,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.002000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.017999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.051999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.024000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 85: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.002000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.121999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 88: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.111999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.009000,-0.094999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.009000,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.067999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.030999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.045000,-0.120999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.101999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.140999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.026999,-0.131999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.026999,-0.159999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.044999,-0.156999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.012999,-0.170999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.096999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.041999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.050999,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.017000,-0.094999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.091999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.127999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.098999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.089999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.084999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.135999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.122999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.086999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.035000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 196: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.047999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.030000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 199: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.067999,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.094999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.103999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.035000,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.024999,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.099999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.030999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.024000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.026000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 243: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.031999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.004999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.068000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.010999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.016000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.002999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.231000,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.157999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.010000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.005999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.002000,-0.136999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.127999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.055000,-0.119000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.041000,-0.130999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.106999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.123999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			default:{
				SendError(playerid,"Рюкзак не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][5] = true;
			}
		}
	}
	else if(type == 18)//–юкзаки 3
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.054999,-0.010000,   0.000000,90.000000,0.000000,   1.120000,1.079998,1.029000 );
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085000,-0.054999,-0.010000,   0.000000,90.000000,0.000000,   1.120000,1.079998,1.029000 );
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085000,-0.054999,-0.010000,   0.000000,90.000000,0.000000,   1.120000,1.079998,1.029000 );
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.046999,-0.002000,   0.000000,90.000000,0.000000,   1.067000,1.079998,1.029000 );
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.047999,-0.002000,   0.000000,90.000000,0.000000,   1.330000,1.319998,1.228000 );
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.095000,-0.047999,-0.002000,   0.000000,90.000000,0.000000,   0.978000,1.154998,1.164000 );
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049000,-0.039000,-0.008000,   0.000000,90.000000,0.000000,   1.084000,1.154998,1.164000 );
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062000,-0.039000,-0.001000,   0.000000,90.000000,0.000000,   0.942000,1.184998,1.164000 );
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.077000,-0.039000,-0.001000,   0.000000,90.000000,0.000000,   0.942000,1.184998,1.164000 );
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052000,-0.048999,-0.001000,   0.000000,90.000000,0.000000,   0.869000,1.184998,1.164000 );
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.093000,-0.035999,-0.006000,   0.000000,90.000000,0.000000,   0.869000,1.184998,1.164000 );
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.044999,-0.006000,   0.000000,90.000000,0.000000,   1.005000,1.184998,1.164000 );
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.044999,-0.006000,   0.000000,90.000000,0.000000,   1.005000,1.184998,1.164000 );
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.039999,-0.002000,   0.000000,90.000000,0.000000,   1.005000,1.184998,1.164000 );
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.039999,-0.002000,   0.000000,90.000000,0.000000,   0.979000,1.042998,1.093000 );
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.108000,-0.039999,-0.002000,   0.000000,90.000000,0.000000,   0.979000,1.042998,1.093000 );
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.014999,-0.002000,   0.000000,90.000000,0.000000,   0.979000,1.042998,1.093000 );
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.014999,-0.002000,   0.000000,90.000000,0.000000,   1.012000,1.071998,1.093000 );
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000,   0.000000,90.000000,0.000000,   1.078000,1.071998,1.093000 );
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000,   0.000000,90.000000,0.000000,   0.951000,1.071998,1.093000 );
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000,   0.000000,90.000000,0.000000,   1.062000,1.173999,1.093000 );
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000,   0.000000,90.000000,0.000000,   1.062000,1.173999,1.093000 );
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.033999,-0.008000,   0.000000,90.000000,0.000000,   1.119000,1.173999,1.093000 );
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.033999,-0.008000,   0.000000,90.000000,0.000000,   1.119000,1.173999,1.093000 );
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.058000,-0.008000,   0.000000,90.000000,0.000000,   0.885001,1.006999,1.093000 );
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000,   0.000000,90.000000,0.000000,   0.885001,1.006999,1.093000 );
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000,   0.000000,90.000000,0.000000,   1.068001,1.003999,1.093000 );
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000,   0.000000,90.000000,0.000000,   1.068001,1.003999,1.093000 );
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000,   0.000000,90.000000,0.000000,   1.068001,1.003999,1.093000 );
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000,   0.000000,90.000000,0.000000,   0.965001,0.922999,0.975000 );
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000,   0.000000,90.000000,0.000000,   0.917001,0.961999,0.894000 );
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.103000,-0.017000,-0.008000,   0.000000,90.000000,0.000000,   0.917001,0.961999,0.894000 );
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.103000,-0.030000,-0.004000,   0.000000,90.000000,0.000000,   1.100000,1.024998,0.999000 );
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.090000,-0.030000,-0.004000,   0.000000,90.000000,0.000000,   1.100000,1.024998,0.999000 );
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.090000,-0.030000,-0.004000,   0.000000,90.000000,0.000000,   1.100000,1.024998,0.999000 );
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.146999,-0.030000,-0.004000,   0.000000,90.000000,0.000000,   0.962001,0.902998,0.999000 );
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.030000,-0.004000,   0.000000,90.000000,0.000000,   0.851001,0.902998,0.999000 );
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.030000,-0.004000,   0.000000,90.000000,0.000000,   0.972001,1.047998,1.178999 );
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.009000,-0.004000,   0.000000,90.000000,0.000000,   0.972001,1.047998,1.178999 );
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.029000,-0.004000,   0.000000,90.000000,0.000000,   1.036001,0.948998,1.219999 );
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.020000,-0.004000,   0.000000,90.000000,0.000000,   1.036001,0.948998,1.219999 );
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.020000,-0.004000,   0.000000,90.000000,0.000000,   1.082001,1.035998,1.219999 );
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.031000,-0.004000,   0.000000,90.000000,0.000000,   1.082001,1.035998,1.219999 );
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.040000,-0.004000,   0.000000,90.000000,0.000000,   1.082001,1.035998,1.219999 );
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.091000,-0.050999,0.000000,   0.000000,90.000000,0.000000,   1.096999,0.971998,1.035001 );
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.102999,-0.031999,0.008000,   0.000000,90.000000,0.000000,   1.096999,0.971998,1.138001 );
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085999,-0.036998,0.008000,   0.000000,90.000000,0.000000,   1.096999,1.117999,1.138001 );
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085999,-0.072999,0.002999,   0.000000,90.000000,0.000000,   1.096999,1.117999,1.138001 );
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.022999,-0.043999,0.002999,   0.000000,90.000000,0.000000,   0.933999,1.000999,1.138001 );
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.022999,-0.043999,-0.005000,   0.000000,90.000000,0.000000,   0.901998,1.000999,1.138001 );
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.065999,-0.043999,-0.005000,   0.000000,90.000000,0.000000,   1.039999,1.176999,1.394001 );
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.005000,   0.000000,90.000000,0.000000,   1.039999,1.176999,1.394001 );
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.005000,   0.000000,90.000000,0.000000,   1.100999,1.176999,1.394001 );
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.007000,   0.000000,90.000000,0.000000,   1.100999,1.176999,1.394001 );
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.031999,-0.043999,-0.010000,   0.000000,90.000000,0.000000,   1.100999,1.176999,1.394001 );
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.010000,   0.000000,90.000000,0.000000,   1.100999,1.176999,1.394001 );
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.034999,-0.000000,   0.000000,90.000000,0.000000,   1.177999,1.176999,1.394001 );
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000,   0.000000,90.000000,0.000000,   1.198999,1.176999,1.394001 );
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000,   0.000000,90.000000,0.000000,   1.198999,1.176999,1.394001 );
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000,   0.000000,90.000000,0.000000,   1.026999,1.176999,1.394001 );
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000,   0.000000,90.000000,0.000000,   1.049999,1.331999,1.394001 );
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000,   0.000000,90.000000,0.000000,   1.049999,1.331999,1.394001 );
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.026999,-0.044999,-0.007000,   0.000000,90.000000,0.000000,   1.049999,1.331999,1.394001 );
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.018000,-0.066999,-0.007000,   0.000000,90.000000,0.000000,   1.049999,1.331999,1.394001 );
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.007000,   0.000000,90.000000,0.000000,   1.049999,1.331999,1.394001 );
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000,   0.000000,90.000000,0.000000,   1.049999,1.331999,1.394001 );
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000,   0.000000,90.000000,0.000000,   1.144999,1.436999,1.394001 );
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000,   0.000000,90.000000,0.000000,   1.100999,1.224999,1.394001 );
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000,   0.000000,90.000000,0.000000,   1.100999,1.224999,1.394001 );
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000,   0.000000,90.000000,0.000000,   1.100999,1.224999,1.394001 );
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000,   0.000000,90.000000,0.000000,   0.948999,1.224999,1.394001 );
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000,   0.000000,90.000000,0.000000,   1.054999,1.256999,1.394001 );
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000,   0.000000,90.000000,0.000000,   1.054999,1.265999,1.394001 );
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000,   0.000000,90.000000,0.000000,   1.054999,1.265999,1.394001 );
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000,   0.000000,90.000000,0.000000,   1.054999,1.265999,1.394001 );
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,0.001999,   0.000000,90.000000,0.000000,   1.123998,1.363999,1.394001 );
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,0.001999,   0.000000,90.000000,0.000000,   0.980999,1.067999,1.082000 );
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000,   0.000000,90.000000,0.000000,   1.067999,1.432999,1.372001 );
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000,   0.000000,90.000000,0.000000,   0.939999,0.939999,1.126001 );
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.007000,   0.000000,90.000000,0.000000,   0.869999,0.939999,1.126001 );
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000,   0.000000,90.000000,0.000000,   1.044999,1.166999,1.199001 );
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000,   0.000000,90.000000,0.000000,   1.044999,1.166999,1.199001 );
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000,   0.000000,90.000000,0.000000,   1.044999,1.166999,1.199001 );
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000,   0.000000,90.000000,0.000000,   1.154999,1.391999,1.199001 );
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000,   0.000000,90.000000,0.000000,   1.080999,1.245999,1.199001 );
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000,   0.000000,90.000000,0.000000,   0.870999,1.104999,1.199001 );
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000,   0.000000,90.000000,0.000000,   0.979999,1.306999,1.199001 );
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080999,-0.066999,-0.006000,   0.000000,90.000000,0.000000,   1.049999,1.487999,1.199001 );
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080999,-0.066999,-0.006000,   0.000000,90.000000,0.000000,   1.049999,1.487999,1.199001 );
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.001999,-0.066999,-0.006000,   0.000000,90.000000,0.000000,   1.049999,1.190999,1.199001 );
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.001999,-0.066999,-0.006000,   0.000000,90.000000,0.000000,   1.049999,1.190999,1.199001 );
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.040999,-0.006000,   0.000000,90.000000,0.000000,   1.049999,1.190999,1.199001 );
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.040999,-0.006000,   0.000000,90.000000,0.000000,   1.049999,1.088999,1.270001 );
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000,   0.000000,90.000000,0.000000,   1.049999,1.239999,1.270001 );
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000,   0.000000,90.000000,0.000000,   1.049999,1.239999,1.270001 );
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000,   0.000000,90.000000,0.000000,   1.049999,1.239999,1.270001 );
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.013000,   0.000000,90.000000,0.000000,   1.049999,1.239999,1.270001 );
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.068999,-0.047999,-0.013000,   0.000000,90.000000,0.000000,   1.049999,1.239999,1.270001 );
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000,   0.000000,90.000000,0.000000,   1.049999,1.239999,1.270001 );
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000,   0.000000,90.000000,0.000000,   1.049999,1.239999,1.270001 );
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000,   0.000000,90.000000,0.000000,   1.049999,1.239999,1.270001 );
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.044999,-0.047999,-0.013000,   0.000000,90.000000,0.000000,   1.049999,1.239999,1.270001 );
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000,   0.000000,90.000000,0.000000,   1.104999,1.239999,1.270001 );
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000,   0.000000,90.000000,0.000000,   1.104999,1.239999,1.270001 );
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.047999,-0.009000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.047999,-0.009000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.050999,-0.009000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.050999,-0.009000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.043999,-0.009000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.069999,-0.009000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.069999,-0.009000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.059999,-0.001000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.039999,-0.059999,-0.001000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.006000,-0.059999,-0.001000,   0.000000,90.000000,0.000000,   0.985999,1.239999,1.270001 );
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058999,-0.059999,-0.001000,   0.000000,90.000000,0.000000,   0.892999,1.239999,1.270001 );
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.016000,-0.059999,-0.001000,   0.000000,90.000000,0.000000,   0.892999,1.239999,1.270001 );
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.040999,-0.010000,   0.000000,90.000000,0.000000,   1.077999,1.239999,1.270001 );
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.040999,-0.010000,   0.000000,90.000000,0.000000,   0.950999,1.239999,1.270001 );
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.021999,-0.010000,   0.000000,90.000000,0.000000,   1.054999,1.239999,1.270001 );
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.034999,-0.043999,-0.010000,   0.000000,90.000000,0.000000,   1.095999,1.239999,1.270001 );
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.034999,-0.043999,-0.010000,   0.000000,90.000000,0.000000,   1.095999,1.239999,1.270001 );
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.017999,-0.043999,-0.010000,   0.000000,90.000000,0.000000,   1.095999,1.239999,1.270001 );
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078999,-0.080999,-0.010000,   0.000000,90.000000,0.000000,   1.095999,1.239999,1.270001 );
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000,   0.000000,90.000000,0.000000,   1.095999,1.239999,1.270001 );
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000,   0.000000,90.000000,0.000000,   0.895999,1.019999,1.270001 );
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000,   0.000000,90.000000,0.000000,   0.895999,1.019999,1.270001 );
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000,   0.000000,90.000000,0.000000,   0.895999,1.019999,1.270001 );
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000,   0.000000,90.000000,0.000000,   0.895999,1.019999,1.270001 );
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000,   0.000000,90.000000,0.000000,   0.895999,1.019999,1.270001 );
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.057999,-0.011000,   0.000000,90.000000,0.000000,   1.039998,1.337998,1.324001 );
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.057999,-0.004000,   0.000000,90.000000,0.000000,   0.982998,1.153998,1.324001 );
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.057999,-0.018000,   0.000000,90.000000,0.000000,   1.090999,1.460998,1.324001 );
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.077999,-0.018000,   0.000000,90.000000,0.000000,   1.090999,1.460998,1.324001 );
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.077999,-0.018000,   0.000000,90.000000,0.000000,   1.090999,1.460998,1.324001 );
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.068999,0.003999,   0.000000,90.000000,0.000000,   1.009999,1.295998,1.324001 );
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.030999,-0.013000,   0.000000,90.000000,0.000000,   1.097998,1.295998,1.324001 );
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.030999,-0.004000,   0.000000,90.000000,0.000000,   1.045999,1.053998,1.249001 );
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052999,-0.005999,-0.009000,   0.000000,90.000000,0.000000,   1.239999,1.130998,1.372001 );
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.042999,-0.012999,-0.014000,   0.000000,90.000000,0.000000,   1.239999,1.130998,1.372001 );
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.029999,-0.038999,-0.010000,   0.000000,90.000000,0.000000,   0.867999,0.918998,1.073001 );
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.015999,-0.008000,   0.000000,90.000000,0.000000,   1.082999,1.042998,1.238001 );
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.051999,-0.008000,   0.000000,90.000000,0.000000,   1.082999,1.113998,1.238001 );
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.245999,-0.034999,-0.011000,   0.000000,90.000000,0.000000,   1.082999,1.113998,1.238001 );
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.006000,   0.000000,90.000000,0.000000,   1.082999,1.113998,1.238001 );
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.048999,-0.006000,   0.000000,90.000000,0.000000,   1.082999,1.113998,1.238001 );
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.036999,-0.011999,-0.017000,   0.000000,90.000000,0.000000,   1.216999,1.113998,1.238001 );
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.036999,-0.009999,-0.009999,   0.000000,90.000000,0.000000,   1.026999,0.996998,1.238001 );
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999,   0.000000,90.000000,0.000000,   1.096999,0.996998,1.238001 );
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999,   0.000000,90.000000,0.000000,   1.096999,0.996998,1.238001 );
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999,   0.000000,90.000000,0.000000,   1.096999,0.996998,1.238001 );
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999,   0.000000,90.000000,0.000000,   1.096999,0.996998,1.238001 );
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999,   0.000000,90.000000,0.000000,   1.096999,0.996998,1.238001 );
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999,   0.000000,90.000000,0.000000,   1.096999,0.996998,1.238001 );
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999,   0.000000,90.000000,0.000000,   1.096999,0.996998,1.238001 );
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.037999,-0.034999,-0.009999,   0.000000,90.000000,0.000000,   1.096999,0.996998,1.238001 );
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.073999,-0.034999,-0.009999,   0.000000,90.000000,0.000000,   1.096999,0.996998,1.238001 );
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999,   0.000000,90.000000,0.000000,   1.096999,0.996998,1.238001 );
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999,   0.000000,90.000000,0.000000,   1.082999,0.974998,1.238001 );
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999,   0.000000,90.000000,0.000000,   1.082999,0.974998,1.238001 );
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.037999,-0.036999,-0.006999,   0.000000,90.000000,0.000000,   1.128999,1.172998,1.238001 );
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.051999,-0.006999,   0.000000,90.000000,0.000000,   1.128999,1.172998,1.238001 );
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.057999,-0.006999,   0.000000,90.000000,0.000000,   1.128999,1.172998,1.238001 );
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.057999,-0.006999,   0.000000,90.000000,0.000000,   0.964999,1.172998,1.238001 );
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.057999,-0.006999,   0.000000,90.000000,0.000000,   0.964999,1.172998,1.238001 );
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.079999,-0.057999,-0.006999,   0.000000,90.000000,0.000000,   0.964999,1.172998,1.238001 );
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.009000,-0.054999,-0.006999,   0.000000,90.000000,0.000000,   1.038999,1.172998,1.238001 );
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.009000,-0.054999,-0.006999,   0.000000,90.000000,0.000000,   1.085999,1.220998,1.238001 );
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.054999,-0.006999,   0.000000,90.000000,0.000000,   1.085999,1.220998,1.238001 );
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.074999,-0.054999,-0.006999,   0.000000,90.000000,0.000000,   1.085999,1.220998,1.238001 );
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   1.085999,1.220998,1.238001 );
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   1.085999,1.220998,1.238001 );
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   1.085999,1.220998,1.238001 );
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   1.085999,1.220998,1.238001 );
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   1.085999,1.220998,1.238001 );
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   1.085999,1.220998,1.238001 );
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   0.881999,1.220998,1.238001 );
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   0.881999,1.220998,1.238001 );
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   0.881999,1.220998,1.238001 );
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   0.881999,1.220998,1.238001 );
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   1.076999,1.220998,1.238001 );
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999,   0.000000,90.000000,0.000000,   1.076999,1.220998,1.238001 );
			default:{
				SendError(playerid,"Рюкзак не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][5] = true;
			}
		}
	}
	else if(type == 19)//¬ип Ўл¤пы 1
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.029000,-0.003001, 0.000000,90.000000,91.799987, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.029000,-0.003001, 0.000000,90.000000,91.799987, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024000,-0.001001, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024000,-0.001001, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.032999,-0.006001, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.028999,0.002999, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111997,0.024999,0.002999, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.024999,0.002999, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.013999,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.045000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.005000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.034000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.044000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.039000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.039000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.024000,0.002998, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074997,0.032000,0.002998, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.050000,0.002998, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.045000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.045000,-0.003001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130997,0.020999,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.054999,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.029000,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.022000,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.052999,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.037000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.025000,-0.002001, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.039999,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.039999,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.039999,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.014000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 80: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.024000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 81: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.024000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.047000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.037000,0.001999, 0.000000,90.000000,91.799987, 1.101000,1.142999,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.037000,0.001999, 0.000000,90.000000,91.799987, 1.101000,1.142999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.012000,0.001999, 0.000000,90.000000,91.799987, 0.891000,0.925999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.031000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.020000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.020000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.010000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.032000,-0.003001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.032000,-0.003001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.045000,-0.003001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.029000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.031000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.031000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.031000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.028000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.021000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.032000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.019000,-0.001001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.027000,0.000998, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.027000,0.000998, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.027000,-0.006001, 0.000000,90.000000,91.799987, 1.137000,1.146999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.040000,-0.006001, 0.000000,90.000000,91.799987, 1.137000,1.146999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.040000,-0.006001, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.026000,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.026000,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,0.048999,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.035000,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.038998,0.023000,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.023000,0.005998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.019000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,0.018000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.028000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.014000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.032000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.032000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.035000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.014999,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.026000,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.019999,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.019999,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.026000,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.033999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.033999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.022999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.038999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.038999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.038999,-0.008001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.029999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.021999,0.002998, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.016999,0.002998, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.032999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.025999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.035999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.039999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.026999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.037999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.037999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.020999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.013999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,0.039999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.014999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.044999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,0.035999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108998,0.022999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108998,0.014999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.077998,0.014999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.027999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.037999,0.000998, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.029000,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.036000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.036000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.028000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.028000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.028000,0.001998, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.025000,0.001998, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.041999,0.001998, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.031000,-0.000001, -1.599999,90.000000,91.399993, 0.957000,1.094000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.031000,-0.000001, -1.599999,90.000000,91.399993, 0.957000,1.094000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.031000,-0.000001, -1.599999,90.000000,91.399993, 0.957000,1.094000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.037999,-0.002001, -1.599999,90.000000,91.399993, 0.957000,1.137000,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.020999,-0.002001, -1.599999,90.000000,91.399993, 0.957000,1.137000,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.031999,-0.002001, -1.599999,90.000000,91.399993, 0.957000,1.137000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.031999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.031999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.031999,0.001998, -1.599999,90.000000,91.399993, 0.977999,1.104000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.040999,0.001998, -1.599999,90.000000,91.399993, 0.977999,1.104000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.030999,0.001998, -1.599999,90.000000,91.399993, 0.977999,1.104000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.035999,-0.006001, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.027999,-0.002001, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.005999,-0.002001, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.028999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.028999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 0.898000,0.969000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.027999,-0.000001, -1.599999,90.000000,91.399993, 0.898000,1.016000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.027999,-0.000001, -1.599999,90.000000,91.399993, 0.898000,1.016000,1.000000);
			default:{
				SendError(playerid,"Шляпа не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 20)//¬ип Ўл¤пы 2
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101999,0.004999,0.000000, 0.499999,87.200019,91.700004, 1.072000,1.068000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119999,0.010999,0.002000, 0.499999,87.200019,91.700004, 1.163999,1.109000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148000,0.001999,0.002000, 0.499999,87.200019,91.700004, 1.163999,1.109000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134999,-0.001000,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115999,0.021999,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085999,0.000999,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100999,0.003999,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,0.009999,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120999,-0.003000,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137999,0.010999,0.000000, 0.499999,87.200019,91.700004, 1.039999,1.097000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,-0.018000,0.000000, 0.499999,87.200019,91.700004, 1.039999,1.097000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115999,0.003999,0.000000, -78.300010,113.100013,-13.799970, 1.039999,1.097000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109999,-0.003000,-0.003999, -78.300010,113.100013,-13.799970, 1.039999,1.097000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109999,-0.003000,0.000000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109999,-0.003000,0.000000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094999,0.014999,0.004000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.012999,0.002000, -78.300010,103.000015,-13.799970, 1.233999,1.090000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.011999,-0.006999, -78.300010,103.000015,-13.799970, 1.190000,1.202000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,-0.001000,-0.003999, -78.300010,103.000015,-13.799970, 1.190000,1.202000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.031000,0.006999,-0.003999, -78.300010,103.000015,-13.799970, 1.063999,1.144000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080000,0.024999,0.002000, -78.300010,103.000015,-13.799970, 1.013999,1.013000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094000,-0.002000,0.000000, -78.300010,103.000015,-13.799970, 1.013999,1.013000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.017999,-0.002999, -78.300010,103.000015,-13.799970, 1.110000,1.071000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.009999,-0.002999, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,-0.014000,-0.004999, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.022999,0.002000, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,-0.007000,0.002000, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,-0.012000,0.007000, -78.300010,103.000015,-13.799970, 1.341000,1.138000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.011999,0.001000, -78.300010,103.000015,-13.799970, 1.243999,1.178000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088000,-0.000000,0.001000, -78.300010,103.000015,-13.799970, 1.009999,0.943000,0.814999);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107000,0.002999,-0.007999, -78.300010,108.500007,-13.799970, 1.091999,1.096000,0.814999);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122999,-0.011000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122999,0.008999,0.006000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108999,0.013999,0.001000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118999,0.013999,0.001000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118999,-0.012000,-0.002999, 83.900001,67.399971,0.000000, 1.137000,1.054999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,0.030000,-0.002999, 83.900001,67.399971,0.000000, 1.250000,1.192000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,0.011999,-0.002999, 83.900001,67.399971,0.000000, 1.263000,1.166000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,0.011999,-0.002999, 83.900001,67.399971,0.000000, 1.263000,1.166000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080999,-0.014000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080999,-0.014000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108999,0.006999,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108999,-0.004000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.019999,0.002000, 83.900001,81.599967,0.000000, 1.164000,1.059000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,-0.001000,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129999,0.005999,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129999,0.005999,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151000,-0.003000,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,-0.004000,-0.001999, 83.900001,81.599967,0.000000, 1.285000,1.145000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104000,0.009999,-0.001999, 83.900001,81.599967,0.000000, 1.069000,1.012000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104000,0.009999,-0.001999, 83.900001,81.599967,0.000000, 1.069000,1.012000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143000,0.005999,0.001000, 83.900001,81.599967,0.000000, 1.069000,1.096000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143000,-0.000000,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084000,0.021999,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084000,0.021999,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109000,0.007999,-0.003999, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,-0.017000,0.001000, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121000,-0.007000,0.001000, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121000,-0.005000,-0.001999, 83.900001,67.899978,0.000000, 1.201001,1.245000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121000,-0.005000,-0.001999, 83.900001,67.899978,0.000000, 1.201001,1.245000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,0.011999,-0.001999, 83.900001,67.899978,0.000000, 1.038001,1.037000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.007000,0.006000, 83.900001,67.899978,0.000000, 1.151000,1.146000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.001000,0.006000, 83.900001,67.899978,0.000000, 1.151000,1.146000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.024000,0.000999,0.001000, 83.900001,67.899978,0.000000, 0.996000,0.988000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094000,-0.015000,0.010000, 83.900001,67.899978,0.000000, 1.064000,1.090000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094000,-0.015000,0.004000, 83.900001,67.899978,0.000000, 1.260000,1.090000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.015000,0.004000, 83.900001,67.899978,0.000000, 1.260000,1.090000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.154000,1.075000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146000,-0.024000,0.004000, 83.900001,67.899978,3.199999, 1.154000,1.202000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080000,0.016999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.003999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.003999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.111000,1.102000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.111000,1.102000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,-0.027000,0.002000, 83.900001,67.899978,3.199999, 1.180000,1.102000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,0.002999,-0.002999, 83.900001,67.899978,3.199999, 1.108000,1.106000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123000,-0.008000,0.001000, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099000,-0.002000,0.001000, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099000,-0.002000,-0.006999, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.002999,-0.006999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145000,-0.017000,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,-0.002000,-0.001999, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,0.001999,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,-0.005000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.070000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111000,0.001999,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.070000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111000,0.021999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093000,0.004999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,0.012999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088000,0.008999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088000,-0.008000,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133000,-0.003000,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.138000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.120000,1.138000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143000,-0.020000,0.005000, 83.900001,67.899978,3.199999, 1.120000,1.238000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107000,-0.015000,0.005000, 83.900001,67.899978,3.199999, 1.293000,1.238000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,0.006999,0.005000, 83.900001,67.899978,3.199999, 1.329000,1.055001,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090000,-0.015000,-0.001999, 83.900001,67.899978,3.199999, 1.232000,1.192001,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.016999,-0.001999, 83.900001,67.899978,3.199999, 1.140000,1.131000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,0.005999,-0.001999, 83.900001,67.899978,3.199999, 1.206000,1.205001,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,-0.009000,-0.001999, 83.900001,67.899978,3.199999, 1.115000,1.071000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,-0.021000,0.002000, 83.900001,67.899978,3.199999, 1.021000,0.924000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069000,-0.009000,-0.001999, 83.900001,67.899978,3.199999, 1.021000,0.924000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,-0.002000,0.003000, 83.900001,67.899978,3.199999, 1.092000,1.010000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,-0.007000,0.003000, 83.900001,67.899978,3.199999, 1.136000,1.116000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,0.001999,-0.001999, 83.900001,67.899978,3.199999, 1.136000,1.116000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.009000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131000,-0.014000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086000,0.010999,-0.002999, 83.900001,67.899978,3.199999, 1.029000,1.033000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107000,-0.004000,-0.002999, 83.900001,67.899978,3.199999, 1.029000,1.033000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107000,-0.008000,-0.002999, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107000,-0.008000,-0.002999, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.002000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.002000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.000999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.000999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.008999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101000,0.011999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101000,0.006999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101000,0.014999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101000,0.007999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157000,-0.001000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085000,0.005999,-0.003999, 83.900001,67.899978,3.199999, 1.078999,0.962000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100000,-0.002000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.023000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152000,-0.016000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			default:{
				SendError(playerid,"Шляпа не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 21)//Ѕанданы на голову
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,-0.001000,0.000000, -92.499984,-7.199993,-98.099990, 1.114999,1.000000,0.901000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,0.006999,0.007000, -92.499984,-7.199993,-98.099990, 1.188999,1.256000,1.157000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123000,0.017000,0.001999, -84.299972,-5.799993,-98.099990, 1.216999,1.256000,1.011999);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091000,0.003000,0.001999, -84.299972,-5.799993,-98.099990, 1.237999,1.256000,1.057999);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104000,0.013000,0.006000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,1.122999);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.071000,-0.015999,-0.000000, -91.399986,-5.799993,-92.200004, 1.181999,1.256000,0.974999);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100000,0.009000,-0.000000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,0.974999);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 0.994999,1.256000,1.021000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.037999,1.256000,1.094000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.132999,1.256000,1.094000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.157999,1.056999,0.877000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.005999,1.056999,1.086000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116999,0.003000,-0.002000, -91.399986,-5.799993,-92.200004, 1.277999,1.056999,1.107000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,0.016000,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,0.863000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097999,-0.002999,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,1.034000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120999,0.020000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120999,0.011000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130999,-0.004999,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130999,0.024000,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.002000,-0.000000, -91.399986,-5.799993,-92.200004, 1.002999,1.056999,0.939000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126999,0.006000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,1.119000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,0.001000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,0.001000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,0.027000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,-0.017999,0.003999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,0.012000,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107999,-0.019999,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,1.005000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096000,-0.010999,0.000999, -91.399986,-5.799993,-92.200004, 1.084999,1.358999,0.969000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096000,-0.010999,0.007000, -91.399986,-5.799993,-92.200004, 1.206999,1.358999,1.074000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096000,-0.010999,-0.000000, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,0.004000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,-0.004999,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099000,0.021000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,1.086000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.003000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,-0.001999,-0.004000, -91.399986,-5.799993,-92.200004, 1.318998,1.358999,1.158000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.197998,1.126999,0.946000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.086000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.055998,1.126999,0.946000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.126999,1.101000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,0.975000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,-0.005999,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,0.000000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.242998,1.126999,1.113000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,-0.009999,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.119998,1.157999,1.061000);
			case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.181998,1.157999,1.135000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.449998,1.497999,1.211000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.003999,0.001999, -91.399986,-5.799993,-92.200004, 1.075998,1.218000,1.063000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,-0.002999,0.001999, -91.399986,-5.799993,-92.200004, 1.325998,1.434000,1.209000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084000,0.015000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.000998,1.086000,0.897000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.010000,0.005000, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.010000,-0.001999, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.215000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.142000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.006000,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139000,-0.006000,0.000000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135000,-0.002999,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124000,-0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,-0.010000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,-0.001000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,-0.008000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.222998,1.306000,1.103000);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.020999,0.001000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087000,0.006999,-0.000999, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.087000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.006000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,0.002000,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.174000);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,-0.007999,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.204000);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.004000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097000,-0.009999,0.002000, -91.399986,-5.799993,-92.200004, 1.200998,1.306000,1.009000);
			case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116000,-0.020999,0.002000, -91.399986,-5.799993,-92.200004, 0.980998,1.115000,0.973000);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.064000,-0.004999,0.002000, -91.399986,-5.799993,-92.200004, 1.021999,1.115000,0.973000);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095000,-0.003999,0.002000, -91.399986,-5.799993,-92.200004, 1.051999,1.115000,1.028000);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.010000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.237999,1.115000,1.182000);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104000,-0.002999,0.002000, -91.399986,-5.799993,-92.200004, 1.302999,1.267000,1.182000);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093000,0.002000,-0.000999, -91.399986,-5.799993,-92.200004, 1.200999,1.267000,0.945000);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100000,-0.008999,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,0.000000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081000,0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.016000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102000,0.004000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110000,0.011000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110000,0.005000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110000,-0.002999,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110000,0.002000,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,-0.017999,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			default:{
				SendError(playerid,"Бандана не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 22)//”сы
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.108000,0.003000, 0.000000,0.000000,-81.399993, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.117000,0.003000, 0.000000,0.000000,-60.399993, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.130000,0.000999, 0.000000,0.000000,-60.399993, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.126000,-0.000000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058000,0.125000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039000,0.112000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026000,0.127000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.001999,0.105000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017000,0.119000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005000,0.109000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023000,0.114000,0.000999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021000,0.136000,0.000999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004000,0.097000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029000,0.110000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002000,0.113000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025000,0.118000,-0.003000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026000,0.107000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028000,0.130000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034000,0.125000,-0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025000,0.123000,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.108000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.104000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018999,0.118000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.124000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.125000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.130000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.129000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016999,0.094000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.013999,0.101000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038000,0.119000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017999,0.117000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.009999,0.107000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.135000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.121000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.104000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.104000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.049999,0.122000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.109000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008999,0.112000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.124000,-0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.114000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014999,0.117000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.110000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.108000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.124000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.115000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.104000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.006000,0.088000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.083000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.118000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.133000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026999,0.120000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.109999,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.129000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.116999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.104999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.095999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.121999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.121999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.121999,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.123999,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014999,0.117999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014999,0.117999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.115999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.113999,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.118000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.119999,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.125999,-0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034999,0.122999,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034999,0.100000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.105999,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032999,0.119999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.019000,0.098999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.109999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.098000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.087000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001999,0.105000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.124000,-0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.108000,0.006999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004999,0.106000,0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017999,0.114000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.104000,0.005999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001999,0.107000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.124000,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.124000,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.104000,0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 161: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.116000,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.111000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010999,0.106000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010999,0.106000,0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.123000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.107000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.003999,0.110000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.118000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.009999,0.106999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.106999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.121999,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.108999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017999,0.108999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.118999,0.008000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.121999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.114999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032999,0.109999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.119999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037999,0.119999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.003999,0.109999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.115999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.097999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.006999,0.112999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.101999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.114999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.104999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036999,0.110999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018999,0.135999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.104999,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044999,0.125999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.134999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.108999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005999,0.104999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.079999,0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.005000,0.088999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.104000,0.007000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013999,0.111000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 243: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.002999,0.111000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.116000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.122000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.122000,0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.121000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004999,0.116000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.113000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.100000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.129000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027999,0.129000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 261: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032999,0.094000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.107000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.020999,0.105000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038999,0.098000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.107000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.109000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.114000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.119000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.095000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.101000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.100000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.098000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029999,0.099000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024999,0.099000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.131000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008999,0.118000,0.009000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.022999,0.095000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034999,0.101000,0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018999,0.104000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.114000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019999,0.105000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021999,0.110000,-0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.106000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010999,0.115000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.127000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033999,0.125000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038999,0.110000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.125000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.096000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.100000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025999,0.099000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			default:{
				SendError(playerid,"Усы не будут отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][3] = true;
			}
		}
	}
	else if(type == 23)//vитары
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080000,-0.118999,-0.045999, 0.000000,113.100006,0.000000, 0.717999,1.000000,0.702999);
			case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.023000,-0.130000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.023000,-0.127000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063000,-0.119000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082999,-0.159000,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082999,-0.148999,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082999,-0.120999,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.095999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.076999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.084999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.089999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.111999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.096999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.108999,-0.052999, -8.800000,119.000007,8.100000, 0.688000,1.000000,0.696000);
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.108999,-0.052999, 2.799998,119.000007,0.900001, 0.688000,1.000000,0.696000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.110999,-0.052999, 10.099999,119.000007,-6.299997, 0.688000,1.000000,0.696000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.119999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.142999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.129999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.117999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.117999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.106999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.145999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.105999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.079999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.102999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.102999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.094999,-0.112999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.094999,-0.092999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.134999,-0.106999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.134999,-0.134999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.120999,-0.052999, 10.799995,114.099998,-4.700001, 0.688000,1.000000,0.696000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.109999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.109999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.082999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.128999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.128999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.103999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.126999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.126999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.099999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.086000,-0.105999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.121999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.097999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.097999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.134999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.129999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.110999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.110999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.130999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.130999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.095999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.107000,-0.088999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.118999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.106999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.123999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.111999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.137999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.150000,-0.116999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.157000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.140999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.163000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.134000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.134000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.104000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.117000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.130000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.121000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.132000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.141000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.108000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.123000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.083000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.109000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.123000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.127000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.097000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.090000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.099000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.087000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.120000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.084000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.087000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.083000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.141000,-0.135000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.088000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.077000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.098000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.112000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.139000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.089000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.109000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.101000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.103000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.083000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.116000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.110000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.076000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.122000,-0.130000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.162000,-0.096000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.070000,-0.120000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.070000,-0.099000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.126000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.126000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.100000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.119000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 203: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 204: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.101000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.122999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.082000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.114000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.097000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.133000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.083000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 231: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.085000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.098000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.086000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.118000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.139000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 249: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.113000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.113000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.131000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.131000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.292000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052000,-0.178000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.133000,-0.127000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.111000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.116000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.176000,-0.108000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.176000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.094000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.131000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.114000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			default:{
				SendError(playerid,"Гитара не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][5] = true;
			}
		}
	}
	else if(type == 24)//”сы 2
	{
		switch( skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.113999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.126999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.137999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081998,0.137999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064998,0.135999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050998,0.116999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.139000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.003998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023998,0.129000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.119000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015998,0.118000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.148000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.108000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005998,0.124000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.127000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.117000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.139000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.133000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.123000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.118000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026998,0.125000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.128000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.135000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.139000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.143000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.139000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.102000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.006001,0.111000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 34: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.130000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 35: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.114000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 36: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.120000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 37: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.118000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 38: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047998,0.136000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.127000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.118000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 41: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.125000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.130000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010998,0.120000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.143000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026998,0.137000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.130000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 55: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016998,0.117000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 56: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015998,0.117000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055998,0.137000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.123000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.124000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.136000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 61: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.127000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 62: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.130000,0.005999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.122000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.120000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.009998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.130000,0.005999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 71: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.104000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010998,0.116000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072998,0.120000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.120000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 82: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.136000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.121000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 84: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.120000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.054998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.117000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 94: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.003001,0.102000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.099000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.026998,0.143000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.132000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.133000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.135000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.132000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.132000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.115000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.105000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.127000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.018998,0.127000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.127000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.129000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.131000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040998,0.133000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040998,0.109000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.116000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.131000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 132: SetPlayerAttachedObject (playerid, 3, setobject, 2, -0.014001,0.115000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.127000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.098000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.010998,0.118000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040998,0.124000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 151: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.128000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 152: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.110000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.117000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005998,0.122000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 156: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025998,0.134000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 158: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 159: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.128000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045998,0.114000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 161: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.129000,0.004999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.123000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.122000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013998,0.116000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.134000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.134000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060998,0.130000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.017998,0.119000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.119000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.136000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023998,0.125000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.023998,0.125000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.771000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.125000,0.005999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.129000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.126000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043998,0.130000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.130000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 207: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.117000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.128000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.123000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.112000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.044998,0.128000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.011998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 215: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 216: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.123000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 219: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.005998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016998,0.150000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 224: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.006998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 225: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.006998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 226: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.052998,0.137000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.148000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.032998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 230: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 231: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.145000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.099000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.001998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064998,0.113000,0.005999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015998,0.124000,0.002999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 241: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.134000,0.002999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 242: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.004998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 243: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.038998,0.126000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025998,0.134000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041998,0.134000,0.005999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031998,0.136000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.025998,0.123000,0.003999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.125000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.115000,0.006999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.143000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.143000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 261: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.108000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.019998,0.124000,-0.003000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.110000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.036998,0.116000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.054998,0.126000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.131000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.110000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.111000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.034998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.028998,0.109000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039998,0.140000,0.006999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.033998,0.107000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.016998,0.129000,0.004999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.108000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.042998,0.115000,0.003999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.021998,0.118000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.027998,0.125000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.024998,0.118000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.120000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.117000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.014998,0.124000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045998,0.138000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045998,0.122000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043998,0.134000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.112000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.113000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035998,0.108000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.029998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.037998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012998,0.126000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			default:{
				SendError(playerid,"Усы не будут отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][3] = true;
			}
		}
	}
	else if(type == 25)
	{
		switch (skinid)//Новогодние шапки (19064 19065 19066)
		{
			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120999,0.000000,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140000,0.001999,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161000,0.001999,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152000,-0.004000,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152000,0.007999,-0.003000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,0.000999,-0.003000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,0.000999,0.001999, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.018000,0.001999, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,0.019999,0.001999, 3.400000,87.100013,88.299980, 1.014000,1.183000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111000,-0.022000,0.001999, 3.400000,87.100013,88.299980, 0.920000,1.077000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 0.920000,1.077000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127000,0.004999,0.001999, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127000,0.015999,0.004000, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127000,0.015999,0.004000, 3.400000,87.100013,88.299980, 1.095999,1.077000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127000,0.024999,-0.001000, 3.400000,87.100013,88.299980, 1.172999,1.160000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127000,0.016999,0.000999, 3.400000,87.100013,88.299980, 1.172999,1.160000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.008000,0.003999, 3.400000,87.100013,88.299980, 1.172999,1.178000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.018999,0.003999, 3.400000,87.100013,88.299980, 0.858999,0.969000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.012000,0.003999, 3.400000,87.100013,88.299980, 0.858999,0.990000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144000,0.010999,0.003999, 3.400000,87.100013,88.299980, 0.959999,1.083999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144000,-0.000000,0.003999, 3.400000,87.100013,88.299980, 0.959999,1.122000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151000,-0.008000,-0.002000, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.009999,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.028999,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.011000,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.011000,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147000,0.022999,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109000,0.000999,0.004999, 3.400000,87.100013,88.299980, 0.882999,0.963999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152000,-0.001000,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.006999,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.006999,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.006999,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.025999,0.001999, 3.400000,87.100013,88.299980, 0.942998,0.978999,1.001000);
			case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,-0.012000,0.002999, 3.400000,87.100013,88.299980, 0.942998,1.102999,1.001000);
			case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.006999,0.007000, 3.400000,87.100013,88.299980, 0.942998,1.102999,1.001000);
			case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.006999,0.008000, 3.400000,87.100013,88.299980, 0.942998,1.102999,1.001000);
			case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.014999,-0.001000, 3.400000,87.100013,88.299980, 0.997998,1.126000,1.001000);
			case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130000,-0.013000,-0.001000, 3.400000,87.100013,88.299980, 1.016998,1.159000,1.001000);
			case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.009999,0.008000, 3.400000,87.100013,88.299980, 0.954998,1.135000,1.001000);
			case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180000,0.009999,0.008000, 3.400000,87.100013,88.299980, 0.976998,1.135000,1.001000);
			case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.172000,0.001999,0.008000, 3.400000,87.100013,88.299980, 1.003998,1.135000,1.001000);
			case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175000,-0.001000,0.008000, 3.400000,87.100013,88.299980, 1.005998,1.018000,1.001000);
			case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.005998,1.018000,1.001000);
			case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.108998,1.145000,1.001000);
			case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.135998,1.145000,1.044000);
			case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,-0.013000,0.001999, 3.400000,87.100013,88.299980, 0.939998,1.133000,1.044000);
			case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.016999,0.003000, 3.400000,87.100013,88.299980, 1.019998,1.160000,1.044000);
			case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117000,0.001999,0.003000, 3.400000,87.100013,88.299980, 1.055998,1.104000,1.044000);
			case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.019999,0.003000, 3.400000,87.100013,88.299980, 1.055998,1.104000,1.044000);
			case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.011999,0.005000, 3.400000,87.100013,88.299980, 1.116998,1.189000,1.044000);
			case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.008999,0.005000, 3.400000,87.100013,88.299980, 1.116998,1.189000,1.044000);
			case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,0.008999,-0.000999, 3.400000,87.100013,88.299980, 1.116998,1.320001,1.044000);
			case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.003999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132000,0.003999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147000,-0.010000,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138000,0.001999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139000,0.006999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134000,0.009000,0.000000, 1.699999,90.200042,89.400001, 1.000000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099000,0.009000,0.000000, 1.699999,90.200042,89.400001, 1.000000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145999,0.005000,0.000000, 1.699999,90.200042,89.400001, 1.012999,1.100999,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145999,0.005000,0.000000, 1.699999,90.200042,89.400001, 1.062999,1.139999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.018999,0.000000, 1.699999,90.200042,89.400001, 0.937999,1.009999,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,0.018999,0.000000, 1.699999,90.200042,89.400001, 0.937999,1.009999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133999,0.010999,0.000999, 1.699999,90.200042,89.400001, 0.937999,1.099999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133999,-0.003000,0.000999, 1.699999,90.200042,89.400001, 1.072000,1.099999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133999,0.000999,0.000999, 1.699999,90.200042,89.400001, 1.072000,1.148000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133999,0.000999,0.000999, 1.699999,90.200042,89.400001, 0.972000,1.061000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141000,0.000999,-0.003000, 1.699999,90.200042,89.400001, 1.165000,1.223000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141000,0.006999,0.003999, 1.699999,90.200042,89.400001, 1.056000,1.085000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120999,0.006999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.085000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134000,0.000999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134000,0.010999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150000,0.010999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109000,0.010999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.042000,0.000999,-0.000000, 1.699999,90.200042,89.400001, 0.942000,0.921000,1.000000);
			case 142: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133000,0.000999,-0.001000, 1.699999,90.200042,89.400001, 0.942000,1.146000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129000,-0.013000,0.008999, 1.699999,90.200042,89.400001, 0.942000,1.009000,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139000,-0.024000,0.008999, 1.699999,90.200042,89.400001, 0.942000,1.129000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139000,-0.029000,0.000999, 1.699999,90.200042,89.400001, 0.992000,1.235000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,-0.007000,0.000999, 1.699999,90.200042,89.400001, 0.992000,1.029000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165000,-0.034000,0.000999, 1.699999,90.200042,89.400001, 0.992000,1.198000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,-0.000000,0.000999, 1.699999,90.200042,89.400001, 1.047000,1.198000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118000,0.003999,0.000999, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147000,0.003999,0.000999, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.003999,0.000999, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.003999,-0.001000, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128000,0.003999,-0.001000, 1.699999,90.200042,89.400001, 0.886000,1.061999,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126000,0.003999,-0.001000, 1.699999,90.200042,89.400001, 0.886000,1.061999,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126000,-0.013000,-0.001000, 1.699999,90.200042,89.400001, 1.030000,1.197999,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126000,0.001999,-0.001000, 1.699999,90.200042,89.400001, 0.985000,1.197999,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141000,-0.005000,-0.001000, 1.699999,90.200042,89.400001, 1.070000,1.092000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136000,-0.005000,-0.001000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136000,-0.000000,-0.001000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137000,0.004999,-0.001000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159000,-0.009000,-0.003000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.909000,1.015999,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.106999,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126000,0.004999,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149000,-0.009000,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148000,-0.009000,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112000,-0.009000,0.004999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,0.004999,0.004999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136000,-0.000000,0.004999, 4.000000,90.900016,84.900016, 1.079001,1.112000,1.070999);
			case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153000,-0.015000,0.004999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153000,-0.015000,0.004999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153000,-0.006000,0.004999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153000,-0.006000,0.000999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140000,-0.006000,0.000999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140000,0.020999,0.000999, 4.000000,90.900016,84.900016, 0.903001,1.018000,1.070999);
			case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090000,0.005999,0.000999, 4.000000,90.900016,84.900016, 0.903001,1.018000,1.070999);
			case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.903001,1.018000,1.070999);
			case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126000,0.007999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.116000,1.070999);
			case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140000,0.007999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.116000,1.070999);
			case 220: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,0.023999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.116000,1.070999);
			case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154000,-0.011000,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.283000,1.070999);
			case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151000,-0.024000,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.283000,1.070999);
			case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161000,0.002999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.113000,1.070999);
			case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,-0.016000,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,0.026999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147000,0.001999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101000,0.001999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.067000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.900001,1.023000,1.070999);
			case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110000,-0.001000,0.000999, 4.000000,90.900016,84.900016, 0.900001,1.023000,1.070999);
			case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146000,-0.001000,0.000999, 4.000000,90.900016,84.900016, 0.995001,1.180000,1.070999);
			case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146000,-0.003000,0.000999, 4.000000,90.900016,84.900016, 1.114001,1.180000,1.070999);
			case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174000,-0.003000,0.000999, 4.000000,90.900016,84.900016, 1.114001,1.180000,1.070999);
			case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125000,0.007999,-0.007000, 4.000000,90.900016,84.900016, 1.022000,1.180000,1.070999);
			case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134000,0.004999,-0.007000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142000,0.000999,-0.001000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142000,0.000999,-0.001000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142000,0.000999,-0.001000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122000,0.009999,-0.001000, 4.000000,90.900016,84.900016, 0.954001,1.015000,1.070999);
			case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103000,0.009999,-0.001000, 4.000000,90.900016,84.900016, 0.954001,1.015000,1.070999);
			case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,0.009999,-0.001000, 4.000000,90.900016,84.900016, 0.954001,1.190000,1.070999);
			case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104000,0.002999,-0.001000, 4.000000,90.900016,84.900016, 1.005001,1.190000,1.070999);
			case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114000,0.002999,-0.001000, 4.000000,90.900016,84.900016, 1.005001,1.190000,1.070999);
			case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.005001,1.190000,1.070999);
			case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.141000,1.131000,1.070999);
			case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 0.912000,1.110000,1.070999);
			case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143000,0.004999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.110000,1.070999);
			case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.004999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.110000,1.070999);
			case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143000,-0.021000,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.110000,1.070999);
			case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155000,-0.010000,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155000,0.012999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.012999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.012999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.090000,1.070999);
			case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.090000,1.070999);
			case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.194000,1.070999);
			case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.194000,1.070999);
			case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.194000,1.070999);
			default:{
				SendError(playerid,"Шапка не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][0] = true;
			}
		}
	}
	else if(type == 26)
	{
		switch (skinid)//Пиратская повязка (19085)
		{
			case 1: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.102999,0.020000,-0.003999, -2.900000,91.700050,94.000015, 0.911999,1.068999,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.087999,0.038000,-0.003999, -2.900000,91.700050,94.000015, 0.911999,1.068999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.094999,0.036000,-0.003999, -2.900000,91.700050,94.000015, 0.987000,1.141999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.121000,0.023000,-0.004999, -52.799995,103.800048,143.000045, 0.987000,1.141999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.102000,0.025000,-0.004999, -52.799995,103.800048,143.000045, 1.080000,1.207999,1.000000);
			case 6: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076000,0.035000,-0.003999, -52.799995,103.800048,142.700042, 0.952000,1.031999,0.780000);
			case 7: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076999,0.048999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 8: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068000,0.033999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 9: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.042000,0.033999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 10: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050000,0.036999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 11: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050000,0.040999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 12: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050000,0.034999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 13: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.063999,0.032999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 14: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.038999,0.002000, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 15: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.058000,0.001999,-0.005999, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 17: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.028000,-0.005999, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 19: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.028000,-0.005999, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 20: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074000,0.024000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 21: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074000,0.034000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 22: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074000,0.034000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 23: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078000,0.032000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 24: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.033000,0.003000, -57.499988,103.800048,145.000152, 0.945000,1.044000,0.866000);
			case 25: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.030000,0.003000, -57.499988,103.800048,145.000152, 0.945000,1.044000,0.866000);
			case 26: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.033000,-0.000999, -57.499988,103.800048,145.000152, 0.948000,1.050999,0.866000);
			case 28: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.039000,-0.000999, -57.499988,103.800048,145.000152, 0.916000,1.050999,0.866000);
			case 29: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.048000,0.000000, -57.499988,103.800048,145.000152, 0.916000,1.050999,0.866000);
			case 31: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.050000,0.000000, -57.499988,103.800048,145.000152, 0.916000,1.050999,0.866000);
			case 33: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.013999,0.017000,0.000000, -57.499988,103.800048,145.000152, 0.916000,0.944999,0.755000);
			case 35: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075999,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.916000,0.944999,0.755000);
			case 36: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075999,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.916000,0.944999,0.755000);
			case 37: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075999,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.964000,0.976999,0.755000);
			case 40: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.052000,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.964000,0.976999,0.755000);
			case 44: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.073000,0.035000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.011999,0.814999);
			case 46: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.066000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.111000,0.814999);
			case 56: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.055000,0.037000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.111000,0.814999);
			case 58: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.072999,0.026000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.018000,0.814999);
			case 59: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.063000,0.046000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 60: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075999,0.049000,-0.006999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 61: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.067999,0.040000,-0.006999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 66: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.036000,0.000000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 67: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.036000,0.000000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 68: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.040000,0.000000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 69: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.055999,0.044000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 70: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.045000,0.004000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 71: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.030000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 72: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.067999,0.052000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 73: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.067999,0.052000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 76: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.055999,0.041000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 78: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.093999,0.021000,0.004000, -57.499988,103.800048,145.000152, 0.870000,0.997999,0.814999);
			case 79: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.031000,0.004000, -57.499988,103.800048,145.000152, 0.870000,0.997999,0.814999);
			case 83: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076999,0.037000,-0.001999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 90: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.048999,0.045000,-0.001999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 91: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.048999,0.040000,-0.001999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 93: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.048999,0.046000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 95: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.010000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 96: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.081999,0.034000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 97: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.047999,0.032000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 98: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.072999,0.062000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 101: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.072999,0.039000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 102: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.072999,0.044000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 103: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082999,0.044000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 105: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082999,0.046000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 106: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082999,0.046000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 107: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082999,0.046000,-0.006999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 108: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.033000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 109: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.046000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 110: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.046000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 111: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.035000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 112: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075000,0.025000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.007999,0.814999);
			case 113: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.085999,0.047000,-0.003999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 114: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.069000,0.042000,-0.002999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 117: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.059000,0.042000,-0.002999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 118: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.059000,0.042000,-0.002999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 119: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.073999,0.038000,-0.005999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 120: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.038000,-0.005999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 121: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.039000,-0.003999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 122: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.039000,-0.003999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 124: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079999,0.039000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 125: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076999,0.035000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.089999,0.814999);
			case 126: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076999,0.035000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 127: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076999,0.045000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 128: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082000,0.052000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 132: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.010999,0.015000,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.059999,0.814999);
			case 133: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084000,0.042000,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.059999,0.814999);
			case 134: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.076000,0.022000,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.059999,0.814999);
			case 135: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.057000,0.033000,-0.000999, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 136: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070000,0.023000,0.001000, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 137: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.052000,0.011000,0.001000, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 142: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.087000,0.048999,-0.002999, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 147: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080000,0.028000,0.004000, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.857000);
			case 153: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066000,0.022999,0.004000, -57.499988,103.800048,145.000152, 0.843999,0.962999,0.857000);
			case 154: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.045000,0.040999,-0.006999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 155: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.082000,0.044999,-0.004999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 157: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.057000,0.050999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 158: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.067000,0.032999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 159: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.067000,0.039999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 160: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.023999,-0.002999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 161: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084000,0.042999,0.007000, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 162: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084000,0.047999,0.000000, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 163: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.075000,0.035999,-0.005999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 164: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.077000,0.032999,-0.005999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 165: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066000,0.044999,-0.004999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 166: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.058000,0.036999,-0.002999, -57.499988,103.800048,145.000152, 0.922999,1.066999,0.857000);
			case 170: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070000,0.045999,-0.009999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 171: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070000,0.033999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 172: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.044000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 173: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 175: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 176: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 177: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 179: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.079000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 180: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.083000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.168999,0.857000);
			case 181: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.107000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 182: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.063000,0.042999,-0.005999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 183: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.034999,-0.005999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 184: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.051999,-0.007999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 186: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.043999,-0.000999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 187: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.073999,0.033999,0.005000, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 188: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084999,0.040999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.048999,0.857000);
			case 189: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.043999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 190: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 191: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 192: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 193: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 194: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 195: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.044999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 200: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.025999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 202: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.089999,0.047999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 206: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.089999,0.047999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 207: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.042999,0.039999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 210: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.022999,-0.003999, -57.499988,103.800048,145.000152, 0.822999,1.006999,0.857000);
			case 211: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050999,0.054999,-0.003999, -57.499988,103.800048,145.000152, 0.822999,1.006999,0.857000);
			case 212: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.072999,0.030999,-0.003999, -57.499988,103.800048,145.000152, 0.822999,1.006999,0.857000);
			case 213: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.086999,0.039999,0.002000, -57.499988,103.800048,145.000152, 0.843999,1.047999,0.857000);
			case 217: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.037999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.047999,0.857000);
			case 220: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.033999,0.052999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.047999,0.857000);
			case 221: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.038999,-0.001999, -57.499988,103.800048,145.000152, 0.902999,1.143998,0.857000);
			case 222: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.038999,-0.001999, -57.499988,103.800048,145.000152, 0.902999,1.143998,0.857000);
			case 223: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.061999,-0.003999, -57.499988,103.800048,145.000152, 0.899999,1.153998,0.857000);
			case 227: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.089999,0.050999,-0.007999, -57.499988,103.800048,145.000152, 0.899999,1.127998,0.857000);
			case 228: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.086999,0.057999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.127998,0.857000);
			case 229: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.025999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.127998,0.857000);
			case 230: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.035999,0.030999,-0.002999, -57.499988,103.800048,145.000152, 0.899999,1.013998,0.759999);
			case 235: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.034999,0.017999,-0.005999, -57.499988,103.800048,145.000152, 0.899999,1.032998,0.759999);
			case 236: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.028999,-0.001999, -57.499988,103.800048,145.000152, 0.899999,1.070998,0.759999);
			case 239: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.098999,0.014999,0.000000, -57.499988,103.800048,145.000152, 0.899999,1.026998,0.759999);
			case 247: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.086999,0.036999,-0.000999, -57.499988,103.800048,145.000152, 0.899999,1.104998,0.867999);
			case 248: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.049999,-0.000999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 251: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.052999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 252: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.081999,0.038999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 254: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084999,0.037999,0.000000, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 255: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.062999,0.014999,0.000000, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 258: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.047999,-0.001999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 259: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.047999,-0.001999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 262: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.059999,0.034999,-0.006999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 265: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.068999,0.025999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 266: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.084999,0.017999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 267: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.074999,0.023999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 270: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.031999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 272: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.088999,0.036999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 273: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.057999,0.033999,-0.001999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 274: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 275: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 276: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 280: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 281: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 282: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 283: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 285: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.083999,0.034999,0.004000, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 287: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.055999,0.036999,0.007000, -57.499988,103.800048,145.000152, 0.905000,1.056998,0.867999);
			case 288: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.065999,0.019999,-0.002999, -57.499988,103.800048,145.000152, 0.948000,1.056998,0.867999);
			case 291: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.080999,0.034999,-0.002999, -57.499988,103.800048,145.000152, 0.948000,1.056998,0.867999);
			case 292: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.061999,0.021999,-0.006999, -57.499988,103.800048,145.000152, 0.948000,1.056998,0.867999);
			case 293: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.070999,0.029999,-0.008999, -57.499988,103.800048,145.000152, 0.977999,1.027998,0.867999);
			case 295: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.056999,0.026999,-0.001999, -57.499988,103.800048,145.000152, 1.076999,1.143998,0.867999);
			case 296: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.090999,0.012999,-0.001999, -57.499988,103.800048,145.000152, 1.076999,1.143998,0.867999);
			case 297: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.021999,-0.000999, -57.499988,103.800048,145.000152, 1.163999,1.255998,0.867999);
			case 299: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.078999,0.034999,-0.005999, -57.499988,103.800048,145.000152, 1.052999,1.174998,0.867999);
			case 300: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.024999,-0.005999, -57.499988,103.800048,145.000152, 0.945999,1.057998,0.867999);
			case 301: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.024999,-0.005999, -57.499988,103.800048,145.000152, 0.945999,1.057998,0.867999);
			case 302: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.024999,-0.005999, -57.499988,103.800048,145.000152, 0.945999,1.057998,0.867999);
			case 303: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.029999,-0.005999, -57.499988,103.800048,145.000152, 0.895999,1.057998,0.867999);
			case 304: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.029999,-0.005999, -57.499988,103.800048,145.000152, 0.895999,1.057998,0.867999);
			case 305: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.064999,0.029999,-0.005999, -57.499988,103.800048,145.000152, 0.895999,1.057998,0.867999);
			case 306: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050999,0.037999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 307: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050999,0.037999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 308: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050999,0.037999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 309: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.050999,0.033999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 310: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.028999,-0.004999, -57.499988,103.800048,145.000152, 0.923998,1.033998,0.867999);
			case 311: SetPlayerAttachedObject (playerid, 1, setobject, 2, 0.071999,0.028999,-0.004999, -57.499988,103.800048,145.000152, 0.923998,1.033998,0.867999);
			default:{
				SendError(playerid,"Повязка не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][1] = true;
			}
		}
	}
	else if(type == 27)
	{
		switch (skinid)//Новогодний рюкзак (19054 19055 19056 19057 19058)
		{
			case 1..4: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.128999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.213999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 6..8: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.195999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.170999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.009999,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115000,-0.140999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.108999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 16: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.191999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.174999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.152999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.063999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.083999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.083999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.060999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.060999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 38: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018999,-0.153999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018999,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.079999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.102999,-0.146999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.069999,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.043999,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.043999,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.077999,-0.165999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107999,-0.169999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107999,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107999,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107999,-0.158999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058999,-0.142999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058999,-0.142999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.144999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.065999,-0.151999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.124999,-0.151999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.154999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.115999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 74: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.066000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.127000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.127000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 85: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.148999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.075000,-0.148999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.152999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.026000,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.065000,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.143999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.100000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.100000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.100000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.153000,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.060000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.209999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.196999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.196999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.189999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.189999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.167999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.160999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.108000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.108000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.108000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.053000,-0.162999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.162999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.162999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.184999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.151999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.160999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 149: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.206999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.155999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.184999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.153999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.191999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.155999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.082000,-0.177999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.127000,-0.177999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.112000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.112000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.179999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.179999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.179999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.073000,-0.194999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.073000,-0.194999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.167998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.184998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.110000,-0.164998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.145000,-0.159998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.145000,-0.159998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.145000,-0.159998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.125000,-0.163998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 196: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.173998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 197: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.043000,-0.187998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.156000,-0.157998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 199: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.046000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.187998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.117000,-0.153998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.074000,-0.153998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.074000,-0.185998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.074000,-0.185998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.108000,-0.153998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.066000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.066000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.066000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.120000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 224: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.120000,-0.151998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 225: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.120000,-0.151998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.076000,-0.151998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.135000,-0.186998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.135000,-0.186998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.078000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.128000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.192998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.192998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 243: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.174998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.192998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 249: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.178998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.186998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.167998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.090000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 256: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107000,-0.165998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 257: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107000,-0.165998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107000,-0.165998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 260: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.107000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.046000,-0.164998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.088000,-0.175998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 264: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.088000,-0.175998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.088000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.088000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.239000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.122000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.089000,-0.223998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.185998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.101000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 277: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.210998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 278: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.210998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.137000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.137000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.058000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.149000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			default:{
				SendError(playerid,"Новогодний рюкзак не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][5] = true;
			}
		}
	}
	else if(type == 30)
	{
		switch(skinid)
		{
			case 1..311:SetPlayerAttachedObject(playerid, 5, 19878, 1, 0.055999,-0.173999,-0.007000, -95.999893,-1.600010,24.099992,1.000000,1.000000,1.000000);
			default:{
				SendError(playerid,"Скейт не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][5] = true;
			}
		}
	}
	else if(type == 31)
	{
		switch(skinid)
		{
			case 1..311:SetPlayerAttachedObject(playerid, 5, 19515, 1, 0.08,0.04,0.00,-5.0,0.0,-7.4,1.100000,1.100000,1.100000);
			default:{
				SendError(playerid,"Бронежилет не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][5] = true;
			}
		}
	}
	else if(type == 32)//маски
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093999,0.018000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
			case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.029000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
			case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104999,0.024000,0.001999, -86.200012,-1.500002,-96.000038, 1.083999,1.000000,1.107000);
			case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.131999,0.012999,0.001999, -84.100021,5.999998,-96.600036, 1.268999,1.000000,1.107000);
			case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.106999,0.023999,0.001999, -84.100021,5.999998,-96.600036, 1.354999,1.000000,1.107000);
			case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,0.006999,0.001999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.028999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 8: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.020999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.024999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.009999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.014999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.030999,0.000999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,-0.004000,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
			case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.018999,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
			case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.014999,-0.004000, -87.500000,2.199998,-95.200027, 1.123999,1.000000,1.032000);
			case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.007999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.005999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.023999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.027999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.003999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.032000);
			case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.008999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.025999,-0.006000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
			case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.034999,0.000999, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
			case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.019999,-0.007000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
			case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.022999,-0.006000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
			case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.008000,-0.003000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.975000);
			case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013999,0.009999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 35: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 36: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 37: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 38: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.032999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.018999,-0.002000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.006999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.975000);
			case 43: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.014999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
			case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.034999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
			case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.934000);
			case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.033000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
			case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
			case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018000,-0.004000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.102000);
			case 49: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.014000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.086999,0.024000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.004000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.017000,-0.001000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.006000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.011000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.015000,-0.000000, -87.500000,16.199996,-95.200027, 1.069999,1.000000,0.930000);
			case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.000000, -87.500000,16.199996,-95.200027, 0.967999,1.000000,0.930000);
			case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.048999,0.024000,0.000999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.930000);
			case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.021000,0.002999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
			case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
			case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 84: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.018000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008000,-0.002000, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.017999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.020000);
			case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
			case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.018999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
			case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
			case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.021999,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
			case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,0.965000);
			case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.035000,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.022999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 102: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 1.043999,1.000000,1.048000);
			case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.984000);
			case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.917000);
			case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.031999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.008000);
			case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.027999,-0.005000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024999,-0.004000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.024999,-0.007000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
			case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.003000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
			case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
			case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
			case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.117999,1.000000,1.177000);
			case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,1.177000);
			case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.024999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 128: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.035999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 134: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 0.912999,1.000000,0.925000);
			case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.023999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.004000, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.020999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 142: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.997999,1.000000,1.059000);
			case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.009999,0.005999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 152: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
			case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,-0.002000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
			case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.023999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.068000);
			case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.024999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.031999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.018999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.045000);
			case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.012999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 173: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.030999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 174: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 175: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.098999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.009999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.026999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,0.007999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025999,0.002999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.016999,-0.001000, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 203: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 204: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.082000,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.892999,1.000000,1.014000);
			case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
			case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.026999,-0.002000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
			case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.024999,-0.003000, -87.500000,16.199996,-95.200027, 0.859000,1.000000,0.883000);
			case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.038999,-0.003000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,0.883000);
			case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.060999,1.000000,0.894000);
			case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,0.894000);
			case 220: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015000,0.029999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.205000);
			case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.021999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
			case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.030999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
			case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,0.965000);
			case 233: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.018999,0.000000, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.965000);
			case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.004000,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.003999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.028999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 237: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.009999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081999,0.015999,0.009000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.023999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.020999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,0.005000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
			case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
			case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041999,0.014999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.052999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,-0.000000,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.008999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 269: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.019999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
			case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
			case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.024999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 285: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.016999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.001000,-0.002999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.010999,0.008000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,-0.000999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.013999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.027999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.007999,-0.003999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.011999,-0.006999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.003000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.020999,0.001000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.020999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.017999,0.003000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,0.001000, -87.500000,16.199996,-95.200027, 1.059998,1.000000,1.062000);
			case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
			case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.011999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
			default:{
				SendError(playerid,"Бандана не будет отображаться на этом скине");
				PlayerInfo[playerid][NeedRemove][3] = true;
			}
		}
	}
	return true;
}
forward ShowPlayerMessages(playerid);
public ShowPlayerMessages(playerid)
{
	new str[4000];
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
		strcat(str,"От кого\tВремя\tСтатус\n");
		for(new row; row<rows; row++)
		{
		    new Name[25], Namez[25],text[256],read,time,stat[60],nazad,vh[40];
			cache_get_row(row, 0, Name, mysql);
			cache_get_row(row, 1, Namez, mysql);
			cache_get_row(row, 2, text, mysql);
			read = cache_get_row_int(row, 3, mysql);
			time = cache_get_row_int(row, 4, mysql);
		   	if(read==1) stat = "{66CC00}Новое{FFFFFF}"; else stat = "{9E8F91}Прочитано{FFFFFF}";
			if(strcmp(Namez,PlayerName[playerid], true)==0)vh="{7396FB}[Контакт]{FFFFFF} ";else vh="{85FC65}[Вы]{FFFFFF} ";
			nazad = gettime()-time;
			new ctr[48];
   			if(nazad>24*3600)format(ctr,sizeof(ctr),"{7396FB}%d{FFFFFF} дней(я) назад",floatround(nazad/(24*3600)));
			else if (nazad>3600)format(ctr,sizeof(ctr),"{7396FB}%d{FFFFFF} час(ов) назад",floatround(nazad/3600));
			else if (nazad>60)format(ctr,sizeof(ctr),"{7396FB}%d{FFFFFF} минут(ы) назад",floatround(nazad/60));
			else if (nazad>1)format(ctr,sizeof(ctr),"{7396FB}%d{FFFFFF} секунд(ы) назад",nazad);
			format(str,sizeof(str),"%s\n %s \t%s\t%s",str,Name,ctr,stat);
		}
	}
	else return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{ffffff}Входящих сообщений нет","Скрыть","");
	ShowPlayerDialogEx(playerid,954,5,"{43CD80}Сообщения",str,"Принять","Отмена");
	return 1;
}
forward ShowPlayerMessage(playerid);
public ShowPlayerMessage(playerid)
{
    new str[2400];
	new Namez[25];
	new rows = cache_get_row_count(mysql);
	format(str, sizeof str,"\n");
	if(rows > 0)
	{
		for(new row; row<rows; row++)
		{
		    new Name[25],text[256],read,time,stat[60],nazad,vh[40];
			cache_get_row(row, 0, Name, mysql);
			cache_get_row(row, 1, Namez, mysql);
			cache_get_row(row, 2, text, mysql);
			read = cache_get_row_int(row, 3, mysql);
			time = cache_get_row_int(row, 4, mysql);
			if(read==1) stat = "{2BC12D}[Не прочитано]{FFFFFF}"; else stat = "{9E8F91}[Прочитано]{FFFFFF}";
			if(strcmp(Namez,PlayerName[playerid], true)==0)vh="{7396FB}[Контакт]{FFFFFF} ";else vh="{85FC65}[Вы]{FFFFFF} ";
			nazad = gettime()-time;
			new ctr[90];
			if(nazad>24*3600)format(ctr,sizeof(ctr),"[{7396FB}%d{FFFFFF} дней(я) назад]",floatround(nazad/(24*3600)));
			else if (nazad>3600)format(ctr,sizeof(ctr),"[{7396FB}%d{FFFFFF} час(ов) назад]",floatround(nazad/3600));
			else if (nazad>60)format(ctr,sizeof(ctr),"[{7396FB}%d{FFFFFF} минут(ы) назад]",floatround(nazad/60));
			else if (nazad>1)format(ctr,sizeof(ctr),"[{7396FB}%d{FFFFFF} секунд(ы) назад]",nazad);
			else if (nazad==0)format(ctr,sizeof(ctr),"[{7396FB}Только что{FFFFFF}]");
			format(str,sizeof(str),"%s\n\\c%s - %s%s %s",str,ctr,vh,text,stat);
		}
	}
	Dialog_Open(playerid,955,1,PlayerInfo[playerid][pSendName],str,"Отправить","Отмена");
	return 1;
}
forward MysqlShowContacts(playerid);
public MysqlShowContacts(playerid)
{
    new str[5200];
	new rows = cache_get_row_count(mysql);
	strcat(str,"Контакт\tНомер телефона\tПропущенных\n");
	strcat(str,"Добавить контакт\n");
	if(rows)
	{
		for(new row; row<rows; row++)
		{
		    new Namez[25],num,stats,stat[50],tellnum;
			cache_get_row(row, 0, Namez, mysql);
			num  = cache_get_row_int(row, 1, mysql);
			tellnum = cache_get_row_int(row, 2, mysql);
			stats = cache_get_row_int(row, 3, mysql);
			if(stats!=1001) stat = "{66CC00}На связи{FFFFFF}"; else stat = "{D94141}Недоступен{FFFFFF}";
			format(str,sizeof(str),"%s\n{7396FB}%s{FFFFFF} [%s]\t{AFAFAF}%d{FFFFFF}\t{7396FB}%d{FFFFFF}",str,Namez,stat,tellnum,num);
		}
	}
	ShowPlayerDialogEx(playerid,952,5,"{43CD80}Список контактов",str,"Принять","Отмена");
	return 1;
}
forward MysqlAddContact(playerid, id);
public MysqlAddContact(playerid, id)
{
	if(cache_get_row_int(0, 0, mysql)>0) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","Нельзя добавить данный контакт, так как он уже добавлен","Принять","");
	new string[256];
	format(string,sizeof(string),"SELECT COUNT(*) FROM `phonebook` WHERE `Name`='%s';",PlayerName[playerid]);
	mysql_pquery(mysql, string, "MysqlAddContactTwo", "dd", playerid, id);
	return 1;
}
GetFamColor(playerid) return FamilyColor[FamilyInfo[playerid][famColor]];
SendFama(playerid,color,const string[] = "")
{
    foreach(Player, i)
    {
		if(PlayerInfo[i][FamilyID] == PlayerInfo[playerid][FamilyID])
		{
            SendClientMessage(i,color,string);
		}
	}
	return true;
}
forward MysqlAddContactTwo(playerid, id);
public MysqlAddContactTwo(playerid, id)
{
	if(cache_get_row_int(0, 0, mysql)>29) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","Память вашей SIM-Карты заполнена","Принять","");
    if(id == playerid) return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","Вы не можете добавить сами себя в контакты","Принять","");
    if(SlotValue[id][19]==0 || SlotValue[id][19]==1 )return ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","У этого человека нет мобильного телефона или sim карты","Принять","");
    new string[256];
    format(string,sizeof(string),"INSERT INTO `phonebook`(`Name`, `Namez`, `Num`, `Group`) VALUES ('%s','%s','0','1')",PlayerName[playerid],PlayerName[id]);
    mysql_pquery(mysql, string);
    ShowPlayerDialogEx(playerid,0,0,"{43CD80}Информация","{7396FB}Ваш контакт был успешно добавлен","Принять","");
    format(string,sizeof(string),"%s добавил вас в контакты",PlayerName[playerid]);
	SendClientMessage(id,0x73B461FF,string);
	return 1;
}

forward MysqlAddMessage(playerid);
public MysqlAddMessage(playerid)
{
	new string[256];
	format(string,sizeof(string),"SELECT * FROM `phonemes` WHERE (`Name`='%s' AND `Namez`='%s') OR (`Namez`='%s' AND `Name`='%s') ORDER BY `time` ASC LIMIT 0,20;",PlayerName[playerid],PlayerInfo[playerid][pSendName],PlayerName[playerid],PlayerInfo[playerid][pSendName]);
	mysql_pquery(mysql, string, "ShowPlayerMessage", "d", playerid);
	return 1;
}
forward MysqlCheckTelNum(playerid, telephone);
public MysqlCheckTelNum(playerid, telephone)
{
	if(cache_get_row_count(mysql)>0) return SendError(playerid, "Произошла ошибка при покупке SIM карты, попробуйте еще раз");
	new num;
	foreach(Player, i)
	{
		if((SlotValue[i][19] == telephone) && (i != playerid) )
		{
			SendError(playerid, "Произошла ошибка при покупке SIM карты, попробуйте еще раз");
			num++;
			break;
		}
	}
	if(!num)
	{
		new string[256];
		Buying(playerid,15,PlayerInfo[playerid][pPhone],1,700,"мобильный телефон"," Используйте {7396FB}/phone{FFFFFF}, чтобы достать телефон");
		format(string, sizeof(string), "Ваш номер телефона: {0AD6FF}%d", telephone);
		SendClientMessage(playerid, COLOR_VALIK, string);
		SlotValue[playerid][19]=telephone;
	}
	return 1;
}
SetKlickNumbers()
{
	new tempnum[2];
	coderow = random(20);
	for(new i = 13; i < 19; i++)
	{
		format(tempnum, sizeof tempnum, "%d", checkcode[coderow][i-13]);
		TextDrawSetString(klick[i], tempnum);
	}
}
stock ShowCapture(playerid, slot){
	for(new i; i < 13; i++)TextDrawShowForPlayer(playerid, CaptureTD[i][slot]);
	SetPVarInt(playerid, "showedcapture",slot+1);
	return 1;
}
stock HideCapture(playerid, slot){
	for(new i; i < 13; i++)TextDrawHideForPlayer(playerid, CaptureTD[i][slot]);
	DeletePVar(playerid, "showedcapture");
}	
cmd:switch(playerid){
	if(!PlayerInfo[playerid][pAdmin])return false;
    if(ADuty[playerid]!=228) return SendError(playerid,NO_DUTY_TEXT);
	new slot = GetPVarInt(playerid, "showedcapture");
	if(slot == 3)slot = 0;
	if(GetPVarInt(playerid, "showedcapture"))HideCapture(playerid, GetPVarInt(playerid, "showedcapture")-1);
	if(!slot && CaptureTime[0] > 0)return ShowCapture(playerid, slot);
	else if(slot == 1 && CaptureTime[1] > 0)return ShowCapture(playerid, slot);
	else if(slot == 2 && BizTime > 0)return ShowCapture(playerid, slot);
	SendError(playerid, "Сейчас не идут захваты/стрела");
	return 1;
}
stock checkHouse(houseid)
{
    if(HouseInfo[houseid][hCost]>=600000)
	{
	    HouseInfo[houseid][hCost]=500000;
	    HouseInfo[houseid][hKlass]=6;
	    return 1;
	}
    else if(HouseInfo[houseid][hCost]>=500000)
	{
	    HouseInfo[houseid][hCost]=400000;
	    HouseInfo[houseid][hKlass]=5;
	    return 1;
	}
    else if(HouseInfo[houseid][hCost]>=400000)
	{
	    HouseInfo[houseid][hCost]=300000;
	    HouseInfo[houseid][hKlass]=4;
	    return 1;
	}
    else if(HouseInfo[houseid][hCost]>=300000)
	{
	    HouseInfo[houseid][hCost]=200000;
	    HouseInfo[houseid][hKlass]=3;
	    return 1;
	}
	else if(HouseInfo[houseid][hCost]>=200000)
	{
	    HouseInfo[houseid][hCost]=100000;
	    HouseInfo[houseid][hKlass]=2;
	    return 1;
	}
	else if(HouseInfo[houseid][hCost]>=180000)
	{
	    HouseInfo[houseid][hCost]=100000;
	    HouseInfo[houseid][hKlass]=2;
	    return 1;
	}
	else if(HouseInfo[houseid][hCost]>=150000)
	{
	    HouseInfo[houseid][hCost]=75000;
	    HouseInfo[houseid][hKlass]=1;
	    return 1;
	}
	else if(HouseInfo[houseid][hCost]>=100000)
	{
        HouseInfo[houseid][hCost]=75000;
        HouseInfo[houseid][hKlass]=1;
	    return 1;
	}
	else if(HouseInfo[houseid][hCost]<100000)
	{
        HouseInfo[houseid][hCost]=75000;
        HouseInfo[houseid][hKlass]=1;
	    return 1;
	}
	return 1;
}
stock AddCheater(playerid)
{
	if(lastcheatid == playerid)return 1;
	lastcheatid = playerid;
	format(StringCheaters[7], 64, StringCheaters[6]);
	format(StringCheaters[6], 64, StringCheaters[5]);
	format(StringCheaters[5], 64, StringCheaters[4]);
	format(StringCheaters[4], 64, StringCheaters[3]);
	format(StringCheaters[3], 64, StringCheaters[2]);
	format(StringCheaters[2], 64, StringCheaters[1]);
	format(StringCheaters[1], 64, StringCheaters[0]);
	format(StringCheaters[0], 64, "~w~ - ~y~ID %d ~w~- ~g~%s ~w~- ~r~KICKED ~w~-", playerid, PlayerName[playerid]);
	new str[1024];
	format(str, sizeof(str), "%s~n~%s~n~%s~n~%s~n~%s~n~%s~n~%s~n~%s~n~", StringCheaters[7], StringCheaters[6], StringCheaters[5], StringCheaters[4], StringCheaters[3], StringCheaters[2], StringCheaters[1], StringCheaters[0]);
	TextDrawSetString(CheaterList, str);
	return 1;
}
stock ToCheat(type,playerid)
{
	if(type == 1)
	{
	    SendClientMessage(playerid,COLOR_RED,"Вы были кикнуты за использование чит-программ");
 		J_Kick(playerid);
	}
	else AddCheater(playerid);
	return 1;
}
forward RouletteKiller(playerid);
public RouletteKiller(playerid)
{
	DeletePVar(playerid,"RouletteRolling");
	SelectTextDraw(playerid,0x0099FFAA);
	KillTimer(RouletteTimer[playerid]);
	PlayerTextDrawHide(playerid,PlayerRoulette[playerid][7]);
	PlayerTextDrawHide(playerid,PlayerRoulette[playerid][8]);
	for(new i = 1; i < 7; i++)
		DestroyPlayerTD(playerid, PlayerRoulette[playerid][i]);
	PlayerRoulette[playerid][1] = CreatePlayerTextDraw(playerid, 402.108642, 129.419815, "1 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][1], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][1], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][1], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][1], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][1], 255);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][1], 1);

	PlayerRoulette[playerid][2] = CreatePlayerTextDraw(playerid, 362.241851, 129.419815, "2 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][2], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][2], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][2], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][2], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][2], 255);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][2], 1);

	PlayerRoulette[playerid][3] = CreatePlayerTextDraw(playerid, 321.999969, 129.419815, "3 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][3], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][3], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][3], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][3], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][3], 255);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][3], 1);

	PlayerRoulette[playerid][4] = CreatePlayerTextDraw(playerid, 281.008239, 129.419815, "4 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][4], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][4], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][4], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][4], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][4], 255);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][4], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][4], 1);

	PlayerRoulette[playerid][5] = CreatePlayerTextDraw(playerid, 240.391357, 129.419815, "5 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][5], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][5], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][5], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][5], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][5], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][5], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][5], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][5], 255);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][5], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][5], 1);

	PlayerRoulette[playerid][6] = CreatePlayerTextDraw(playerid, 199.774459, 129.419815, "6 drop");
	PlayerTextDrawLetterSize(playerid, PlayerRoulette[playerid][6], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerRoulette[playerid][6], 38.617446, 44.506103);
	PlayerTextDrawAlignment(playerid, PlayerRoulette[playerid][6], 1);
	PlayerTextDrawColor(playerid, PlayerRoulette[playerid][6], -1);
	PlayerTextDrawUseBox(playerid, PlayerRoulette[playerid][6], true);
	PlayerTextDrawBoxColor(playerid, PlayerRoulette[playerid][6], 572662527);
	PlayerTextDrawSetShadow(playerid, PlayerRoulette[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, PlayerRoulette[playerid][6], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerRoulette[playerid][6], 255);
	PlayerTextDrawFont(playerid, PlayerRoulette[playerid][6], 5);
	PlayerTextDrawSetProportional(playerid, PlayerRoulette[playerid][6], 1);
	return true;
}
forward RollingRepeater(playerid);
public RollingRepeater(playerid)
{
	RouletteRepeat[playerid]--;
	PlayerTextDrawBackgroundColor(playerid,PlayerRoulette[playerid][6],GetCaseColor(RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][4]][prCase]));
	PlayerTextDrawSetPreviewModel(playerid,PlayerRoulette[playerid][6], RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][4]][prObject]);
	PlayerTextDrawSetPreviewRot(playerid,PlayerRoulette[playerid][6], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid,PlayerRoulette[playerid][6]);
	LastRollPlayer[playerid][4] = LastRollPlayer[playerid][3];
	PlayerTextDrawBackgroundColor(playerid,PlayerRoulette[playerid][5],GetCaseColor(RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][3]][prCase]));
	PlayerTextDrawSetPreviewModel(playerid,PlayerRoulette[playerid][5], RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][3]][prObject]);
	PlayerTextDrawSetPreviewRot(playerid,PlayerRoulette[playerid][5], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid,PlayerRoulette[playerid][5]);
	LastRollPlayer[playerid][3] = LastRollPlayer[playerid][2];
	PlayerTextDrawBackgroundColor(playerid,PlayerRoulette[playerid][4],GetCaseColor(RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][2]][prCase]));
	PlayerTextDrawSetPreviewModel(playerid,PlayerRoulette[playerid][4], RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][2]][prObject]);
	PlayerTextDrawSetPreviewRot(playerid,PlayerRoulette[playerid][4], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid,PlayerRoulette[playerid][4]);
	LastRollPlayer[playerid][2] = LastRollPlayer[playerid][1];
	PlayerTextDrawBackgroundColor(playerid,PlayerRoulette[playerid][3],GetCaseColor(RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][1]][prCase]));
	PlayerTextDrawSetPreviewModel(playerid,PlayerRoulette[playerid][3], RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][1]][prObject]);
	PlayerTextDrawSetPreviewRot(playerid,PlayerRoulette[playerid][3], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid,PlayerRoulette[playerid][3]);
	LastRollPlayer[playerid][1] = LastRollPlayer[playerid][0];
	PlayerTextDrawBackgroundColor(playerid,PlayerRoulette[playerid][2],GetCaseColor(RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prCase]));
	PlayerTextDrawSetPreviewModel(playerid,PlayerRoulette[playerid][2], RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prObject]);
	PlayerTextDrawSetPreviewRot(playerid,PlayerRoulette[playerid][2], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid,PlayerRoulette[playerid][2]);
	LastRollPlayer[playerid][0] = random(153);
	PlayerTextDrawBackgroundColor(playerid,PlayerRoulette[playerid][1],GetCaseColor(RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prCase]));
	PlayerTextDrawSetPreviewModel(playerid,PlayerRoulette[playerid][1], RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prObject]);
	PlayerTextDrawSetPreviewRot(playerid,PlayerRoulette[playerid][1], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid,PlayerRoulette[playerid][1]);
	PlayerPlaySound(playerid, 6400, 0.0,0.0,0.0);  
	if(!RouletteRepeat[playerid])
	{
		PlayerPlaySound(playerid, 31000, 0.0,0.0,0.0);  
		KillTimer(RouletteTimer[playerid]);
		PlayerTextDrawBackgroundColor(playerid,PlayerRoulette[playerid][7],GetCaseColor(RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prCase]));
		PlayerTextDrawSetPreviewModel(playerid,PlayerRoulette[playerid][7], RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prObject]);
		PlayerTextDrawSetPreviewRot(playerid,PlayerRoulette[playerid][7], 0.000000, 0.000000, 0.000000, 1.000000);
		PlayerTextDrawShow(playerid,PlayerRoulette[playerid][7]);
		PlayerTextDrawSetString(playerid, PlayerRoulette[playerid][8], ItemNamesEn[RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prID]]);
		PlayerTextDrawShow(playerid,PlayerRoulette[playerid][8]);
		TextDrawSetPreviewModel(Roulette[19], LastRoll[3][lrObject]);
		TextDrawSetPreviewRot(Roulette[19], 0.000000, 0.000000, 0.000000, 1.000000);
		TextDrawBackgroundColor(Roulette[19],GetCaseColor(LastRoll[3][lrColor]));
		TextDrawSetString(Roulette[20],LastRoll[3][lrWinner]);
		TextDrawSetPreviewModel(Roulette[17], LastRoll[2][lrObject]);
		TextDrawSetPreviewRot(Roulette[17], 0.000000, 0.000000, 0.000000, 1.000000);
		TextDrawBackgroundColor(Roulette[17],GetCaseColor(LastRoll[2][lrColor]));
		TextDrawSetString(Roulette[18],LastRoll[2][lrWinner]);
		LastRoll[3][lrObject] = LastRoll[2][lrObject];
		LastRoll[3][lrColor] = LastRoll[2][lrColor];
		strmid(LastRoll[3][lrWinner],LastRoll[2][lrWinner],0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
		TextDrawSetPreviewModel(Roulette[15], LastRoll[1][lrObject]);
		TextDrawSetPreviewRot(Roulette[15], 0.000000, 0.000000, 0.000000, 1.000000);
		TextDrawBackgroundColor(Roulette[15],GetCaseColor(LastRoll[1][lrColor]));
		TextDrawSetString(Roulette[16],LastRoll[1][lrWinner]);
		LastRoll[2][lrObject] = LastRoll[1][lrObject];
		LastRoll[2][lrColor] = LastRoll[1][lrColor];
		strmid(LastRoll[2][lrWinner],LastRoll[1][lrWinner],0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
		TextDrawSetPreviewModel(Roulette[13], LastRoll[0][lrObject]);
		TextDrawSetPreviewRot(Roulette[13], 0.000000, 0.000000, 0.000000, 1.000000);
		TextDrawBackgroundColor(Roulette[13],GetCaseColor(LastRoll[0][lrColor]));
		TextDrawSetString(Roulette[14],LastRoll[0][lrWinner]);
		LastRoll[1][lrObject] = LastRoll[0][lrObject];
		LastRoll[1][lrColor] = LastRoll[0][lrColor];
		strmid(LastRoll[1][lrWinner],LastRoll[0][lrWinner],0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
		TextDrawSetPreviewModel(Roulette[11], RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prObject]);
		TextDrawSetPreviewRot(Roulette[11], 0.000000, 0.000000, 0.000000, 1.000000);
		TextDrawBackgroundColor(Roulette[11],GetCaseColor(RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prCase]));
		TextDrawSetString(Roulette[12],Name(playerid));
		LastRoll[0][lrObject] = RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prObject];
		LastRoll[0][lrColor] = RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prCase];
		strmid(LastRoll[0][lrWinner],Name(playerid),0,MAX_PLAYER_NAME,MAX_PLAYER_NAME);
		new string[256];
		f(string, "INSERT INTO `roul_prizes`(`Owner`, `Prize`, `Case`, `Price`) VALUES ('%d','%d','%d','%d')",
		PlayerInfo[playerid][pID],
		RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prID],
		RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prCase],
		RouletteInfo[SelectCase[playerid]-1][LastRollPlayer[playerid][0]][prPrice]);
		mysql_query(mysql, string, false);
		LoadItems(playerid);
		foreach(Player, i)
		{
			if(GetPVarInt(i, "PlayingRoulette"))
			{
				for(new s = 11; s < 21; s++)
					TextDrawShowForPlayer(i, Roulette[s]);
			}
		}
		RouletteTimer[playerid] = SetTimerEx("RouletteKiller", 7000, false ,"i", playerid);
	}
	return true;
}
stock CreateTextDraws()
{
	//тир
	TirBGDraw = TextDrawCreate(601.666564, 391.585205, "LD_SPAC:white");
	TextDrawLetterSize(TirBGDraw, 0.000000, 0.000000);
	TextDrawTextSize(TirBGDraw, 32.000000, 49.000000);
	TextDrawAlignment(TirBGDraw, 1);
	TextDrawColor(TirBGDraw, 255);
	TextDrawSetShadow(TirBGDraw, 0);
	TextDrawSetOutline(TirBGDraw, 0);
	TextDrawFont(TirBGDraw, 4);

	TirDraw[0] = TextDrawCreate(604.000000, 394.488891, "LD_SPAC:white");
	TextDrawLetterSize(TirDraw[0], 0.000000, 0.000000);
	TextDrawTextSize(TirDraw[0], 13.000000, 13.000000);
	TextDrawAlignment(TirDraw[0], 1);
	TextDrawColor(TirDraw[0], -3437313);
	TextDrawSetShadow(TirDraw[0], 0);
	TextDrawSetOutline(TirDraw[0], 0);
	TextDrawFont(TirDraw[0], 4);

	TirDraw[1] = TextDrawCreate(618.333190, 394.488891, "LD_SPAC:white");
	TextDrawLetterSize(TirDraw[1], 0.000000, 0.000000);
	TextDrawTextSize(TirDraw[1], 13.000000, 13.000000);
	TextDrawAlignment(TirDraw[1], 1);
	TextDrawColor(TirDraw[1], -3437313);
	TextDrawSetShadow(TirDraw[1], 0);
	TextDrawSetOutline(TirDraw[1], 0);
	TextDrawFont(TirDraw[1], 4);

	TirDraw[2] = TextDrawCreate(604.00000, 409.488891, "LD_SPAC:white");
	TextDrawLetterSize(TirDraw[2], 0.000000, 0.000000);
	TextDrawTextSize(TirDraw[2], 13.000000, 13.000000);
	TextDrawAlignment(TirDraw[2], 1);
	TextDrawColor(TirDraw[2], -3437313);
	TextDrawSetShadow(TirDraw[2], 0);
	TextDrawSetOutline(TirDraw[2], 0);
	TextDrawFont(TirDraw[2], 4);

	TirDraw[3] = TextDrawCreate(618.333190, 409.488891, "LD_SPAC:white");
	TextDrawLetterSize(TirDraw[3], 0.000000, 0.000000);
	TextDrawTextSize(TirDraw[3], 13.000000, 13.000000);
	TextDrawAlignment(TirDraw[3], 1);
	TextDrawColor(TirDraw[3], -3437313);
	TextDrawSetShadow(TirDraw[3], 0);
	TextDrawSetOutline(TirDraw[3], 0);
	TextDrawFont(TirDraw[3], 4);

	TirDraw[4] = TextDrawCreate(604.00000, 424.488891, "LD_SPAC:white");
	TextDrawLetterSize(TirDraw[4], 0.000000, 0.000000);
	TextDrawTextSize(TirDraw[4], 13.000000, 13.000000);
	TextDrawAlignment(TirDraw[4], 1);
	TextDrawColor(TirDraw[4], -3437313);
	TextDrawSetShadow(TirDraw[4], 0);
	TextDrawSetOutline(TirDraw[4], 0);
	TextDrawFont(TirDraw[4], 4);

	TirDraw[5] = TextDrawCreate(618.333190, 424.488891, "LD_SPAC:white");
	TextDrawLetterSize(TirDraw[5], 0.000000, 0.000000);
	TextDrawTextSize(TirDraw[5], 13.000000, 13.000000);
	TextDrawAlignment(TirDraw[5], 1);
	TextDrawColor(TirDraw[5], -3437313);
	TextDrawSetShadow(TirDraw[5], 0);
	TextDrawSetOutline(TirDraw[5], 0);
	TextDrawFont(TirDraw[5], 4);
	//intro
	INTROTD[0] = TextDrawCreate(-0.333333, -0.829629, "LD_SPAC:white");
	TextDrawLetterSize(INTROTD[0], 0.000000, 0.000000);
	TextDrawTextSize(INTROTD[0], 641.333374, 39.822219);
	TextDrawAlignment(INTROTD[0], 1);
	TextDrawColor(INTROTD[0], 255);
	TextDrawSetShadow(INTROTD[0], 0);
	TextDrawSetOutline(INTROTD[0], 0);
	TextDrawFont(INTROTD[0], 4);

	INTROTD[1] = TextDrawCreate(-0.999997, 409.178100, "LD_SPAC:white");
	TextDrawLetterSize(INTROTD[1], 0.000000, 0.000000);
	TextDrawTextSize(INTROTD[1], 641.333374, 39.822219);
	TextDrawAlignment(INTROTD[1], 1);
	TextDrawColor(INTROTD[1], 255);
	TextDrawSetShadow(INTROTD[1], 0);
	TextDrawSetOutline(INTROTD[1], 0);
	TextDrawFont(INTROTD[1], 4);
	//MatchMaking
	MMTD[0] = TextDrawCreate(164.190582, 173.226684, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[0], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[0], 310.475921, 188.586669);
	TextDrawAlignment(MMTD[0], 1);
	TextDrawColor(MMTD[0], 255);
	TextDrawSetShadow(MMTD[0], 0);
	TextDrawSetOutline(MMTD[0], 0);
	TextDrawFont(MMTD[0], 4);

	MMTD[1] = TextDrawCreate(164.190505, 170.240005, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[1], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[1], 310.476074, 3.840011);
	TextDrawAlignment(MMTD[1], 1);
	TextDrawColor(MMTD[1], 1939274751);
	TextDrawSetShadow(MMTD[1], 0);
	TextDrawSetOutline(MMTD[1], 0);
	TextDrawFont(MMTD[1], 4);

	MMTD[2] = TextDrawCreate(211.047515, 186.880004, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[2], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[2], 215.238235, 0.853331);
	TextDrawAlignment(MMTD[2], 1);
	TextDrawColor(MMTD[2], 1939274751);
	TextDrawSetShadow(MMTD[2], 0);
	TextDrawSetOutline(MMTD[2], 0);
	TextDrawFont(MMTD[2], 4);
	TextDrawSetPreviewModel(MMTD[2], 0);
	TextDrawSetPreviewRot(MMTD[2], 0.000000, 0.000000, 0.000000, 0.000000);

	MMTD[3] = TextDrawCreate(257.904846, 191.573333, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[3], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[3], 212.952316, 81.066642);
	TextDrawAlignment(MMTD[3], 1);
	TextDrawColor(MMTD[3], 1939274751);
	TextDrawSetShadow(MMTD[3], 0);
	TextDrawSetOutline(MMTD[3], 0);
	TextDrawFont(MMTD[3], 4);
	TextDrawSetPreviewModel(MMTD[3], 0);
	TextDrawSetPreviewRot(MMTD[3], 0.000000, 0.000000, 0.000000, 0.000000);

	MMTD[4] = TextDrawCreate(278.095275, 201.813323, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[4], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[4], 172.571411, 0.853347);
	TextDrawAlignment(MMTD[4], 1);
	TextDrawColor(MMTD[4], 255);
	TextDrawSetShadow(MMTD[4], 0);
	TextDrawSetOutline(MMTD[4], 0);
	TextDrawFont(MMTD[4], 4);

	MMTD[5] = TextDrawCreate(418.500000, 204.800003, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[5], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[5], 50.000000, 50.000000);
	TextDrawAlignment(MMTD[5], 1);
	TextDrawColor(MMTD[5], 572662391);
	TextDrawSetShadow(MMTD[5], 0);
	TextDrawSetOutline(MMTD[5], 0);
	TextDrawFont(MMTD[5], 4);
	TextDrawSetSelectable(MMTD[5], true);
	TextDrawSetPreviewModel(MMTD[5], 0);
	TextDrawSetPreviewRot(MMTD[5], 0.000000, 0.000000, 0.000000, 0.000000);

	MMTD[6] = TextDrawCreate(312.500000, 204.800003, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[6], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[6], 50.000000, 50.000000);
	TextDrawAlignment(MMTD[6], 1);
	TextDrawColor(MMTD[6], -650034825);
	TextDrawSetShadow(MMTD[6], 0);
	TextDrawSetOutline(MMTD[6], 0);
	TextDrawFont(MMTD[6], 4);
	TextDrawSetSelectable(MMTD[6], true);

	MMTD[7] = TextDrawCreate(259.500000, 204.800003, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[7], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[7], 50.000000, 50.000000);
	TextDrawAlignment(MMTD[7], 1);
	TextDrawColor(MMTD[7], 572662391);
	TextDrawSetShadow(MMTD[7], 0);
	TextDrawSetOutline(MMTD[7], 0);
	TextDrawFont(MMTD[7], 4);
	TextDrawSetSelectable(MMTD[7], true);
	TextDrawSetPreviewModel(MMTD[7], 0);
	TextDrawSetPreviewRot(MMTD[7], 0.000000, 0.000000, 0.000000, 0.000000);

	MMTD[8] = TextDrawCreate(365.500000, 204.800003, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[8], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[8], 50.000000, 50.000000);
	TextDrawAlignment(MMTD[8], 1);
	TextDrawColor(MMTD[8], 572662391);
	TextDrawSetShadow(MMTD[8], 0);
	TextDrawSetOutline(MMTD[8], 0);
	TextDrawFont(MMTD[8], 4);
	TextDrawSetSelectable(MMTD[8], true);
	TextDrawSetPreviewModel(MMTD[8], 0);
	TextDrawSetPreviewRot(MMTD[8], 0.000000, 0.000000, 0.000000, 0.000000);

	MMTD[9] = TextDrawCreate(310.850006, 213.000000, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[9], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[9], 0.500000, 34.000000);
	TextDrawAlignment(MMTD[9], 1);
	TextDrawColor(MMTD[9], 255);
	TextDrawSetShadow(MMTD[9], 0);
	TextDrawSetOutline(MMTD[9], 0);
	TextDrawFont(MMTD[9], 4);

	MMTD[10] = TextDrawCreate(363.469055, 213.000000, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[10], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[10], 0.800000, 34.000000);
	TextDrawAlignment(MMTD[10], 1);
	TextDrawColor(MMTD[10], 255);
	TextDrawSetShadow(MMTD[10], 0);
	TextDrawSetOutline(MMTD[10], 0);
	TextDrawFont(MMTD[10], 4);
	TextDrawSetPreviewModel(MMTD[10], 0);
	TextDrawSetPreviewRot(MMTD[10], 0.000000, 0.000000, 0.000000, 0.000000);

	MMTD[11] = TextDrawCreate(416.611907, 213.000000, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[11], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[11], 0.800000, 34.000000);
	TextDrawAlignment(MMTD[11], 1);
	TextDrawColor(MMTD[11], 255);
	TextDrawSetShadow(MMTD[11], 0);
	TextDrawSetOutline(MMTD[11], 0);
	TextDrawFont(MMTD[11], 4);
	TextDrawSetPreviewModel(MMTD[11], 0);
	TextDrawSetPreviewRot(MMTD[11], 0.000000, 0.000000, 0.000000, 0.000000);

	MMTD[12] = TextDrawCreate(168.380950, 191.573333, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[12], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[12], 86.860000, 80.846664);
	TextDrawAlignment(MMTD[12], 1);
	TextDrawColor(MMTD[12], 1939274751);
	TextDrawSetShadow(MMTD[12], 0);
	TextDrawSetOutline(MMTD[12], 0);
	TextDrawFont(MMTD[12], 4);
	TextDrawSetPreviewModel(MMTD[12], 46);
	TextDrawSetPreviewRot(MMTD[12], 0.000000, 0.000000, 0.000000, 0.000000);

	MMTD[13] = TextDrawCreate(170.000000, 193.300003, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[13], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[13], 83.500000, 14.000000);
	TextDrawAlignment(MMTD[13], 1);
	TextDrawColor(MMTD[13], 255);
	TextDrawSetShadow(MMTD[13], 0);
	TextDrawSetOutline(MMTD[13], 0);
	TextDrawFont(MMTD[13], 4);

	MMTD[14] = TextDrawCreate(170.000000, 209.300003, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[14], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[14], 83.500000, 14.000000);
	TextDrawAlignment(MMTD[14], 1);
	TextDrawColor(MMTD[14], 255);
	TextDrawSetShadow(MMTD[14], 0);
	TextDrawSetOutline(MMTD[14], 0);
	TextDrawFont(MMTD[14], 4);

	MMTD[15] = TextDrawCreate(170.000000, 225.300003, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[15], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[15], 83.500000, 14.000000);
	TextDrawAlignment(MMTD[15], 1);
	TextDrawColor(MMTD[15], 255);
	TextDrawSetShadow(MMTD[15], 0);
	TextDrawSetOutline(MMTD[15], 0);
	TextDrawFont(MMTD[15], 4);

	MMTD[16] = TextDrawCreate(170.000000, 241.300003, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[16], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[16], 83.500000, 14.000000);
	TextDrawAlignment(MMTD[16], 1);
	TextDrawColor(MMTD[16], 255);
	TextDrawSetShadow(MMTD[16], 0);
	TextDrawSetOutline(MMTD[16], 0);
	TextDrawFont(MMTD[16], 4);

	MMTD[17] = TextDrawCreate(208.999908, 276.199920, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[17], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[17], 215.238235, 0.853331);
	TextDrawAlignment(MMTD[17], 1);
	TextDrawColor(MMTD[17], 1939274751);
	TextDrawSetShadow(MMTD[17], 0);
	TextDrawSetOutline(MMTD[17], 0);
	TextDrawFont(MMTD[17], 4);
	TextDrawSetPreviewModel(MMTD[17], 0);
	TextDrawSetPreviewRot(MMTD[17], 0.000000, 0.000000, 0.000000, 0.000000);

	MMTD[18] = TextDrawCreate(168.380950, 289.706665, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[18], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[18], 302.476165, 49.920013);
	TextDrawAlignment(MMTD[18], 1);
	TextDrawColor(MMTD[18], 1939274751);
	TextDrawSetShadow(MMTD[18], 0);
	TextDrawSetOutline(MMTD[18], 0);
	TextDrawFont(MMTD[18], 4);

	MMTD[19] = TextDrawCreate(319.238098, 295.680053, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[19], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[19], 1.142852, 38.400024);
	TextDrawAlignment(MMTD[19], 1);
	TextDrawColor(MMTD[19], 255);
	TextDrawSetShadow(MMTD[19], 0);
	TextDrawSetOutline(MMTD[19], 0);
	TextDrawFont(MMTD[19], 4);

	MMTD[20] = TextDrawCreate(198.000000, 267.000000, "RACING");
	TextDrawLetterSize(MMTD[20], 0.449999, 1.600000);
	TextDrawTextSize(MMTD[20], 70.000000, 70.000000);
	TextDrawAlignment(MMTD[20], 1);
	TextDrawColor(MMTD[20], -1);
	TextDrawUseBox(MMTD[20], true);
	TextDrawBoxColor(MMTD[20], 0);
	TextDrawSetShadow(MMTD[20], 0);
	TextDrawSetOutline(MMTD[20], 0);
	TextDrawFont(MMTD[20], 5);
	TextDrawBackgroundColor(MMTD[20], 0x00000000);
	TextDrawSetProportional(MMTD[20], 1);
	TextDrawSetPreviewModel(MMTD[20], 411);
	TextDrawSetPreviewRot(MMTD[20], -20.000000, 0.000000, 30.000000, 1.000000);

	MMTD[21] = TextDrawCreate(378.000000, 268.500000, "GUN");
	TextDrawLetterSize(MMTD[21], 0.449999, 1.600000);
	TextDrawTextSize(MMTD[21], 70.000000, 70.000000);
	TextDrawAlignment(MMTD[21], 1);
	TextDrawColor(MMTD[21], -1);
	TextDrawUseBox(MMTD[21], true);
	TextDrawBoxColor(MMTD[21], 0);
	TextDrawSetShadow(MMTD[21], 0);
	TextDrawSetOutline(MMTD[21], 0);
	TextDrawBackgroundColor(MMTD[21], 0x00000000);
	TextDrawFont(MMTD[21], 5);
	TextDrawSetProportional(MMTD[21], 1);
	TextDrawSetPreviewModel(MMTD[21], 348);
	TextDrawSetPreviewRot(MMTD[21], -20.000000, 0.000000, -300.000000, 1.000000);

	MMTD[22] = TextDrawCreate(288.000030, 341.760009, "LD_SPAC:white");
	TextDrawLetterSize(MMTD[22], 0.000000, 0.000000);
	TextDrawTextSize(MMTD[22], 62.857177, 17.920013);
	TextDrawAlignment(MMTD[22], 1);
	TextDrawColor(MMTD[22], -3437313);
	TextDrawSetShadow(MMTD[22], 0);
	TextDrawSetOutline(MMTD[22], 0);
	TextDrawFont(MMTD[22], 4);
	TextDrawSetSelectable(MMTD[22], true);
	MMTD[23] = TextDrawCreate(0.380942, 417.279998, "SEARCH_BUTTON");
	TextDrawLetterSize(MMTD[23], 0.449999, 1.600000);
	TextDrawTextSize(MMTD[23], 30.000000, 30.000000);
	TextDrawAlignment(MMTD[23], 1);
	TextDrawColor(MMTD[23], -1);
	TextDrawUseBox(MMTD[23], true);
	TextDrawBoxColor(MMTD[23], 0);
	TextDrawSetShadow(MMTD[23], 0);
	TextDrawSetOutline(MMTD[23], 0);
	TextDrawBackgroundColor(MMTD[23], 1939274751);
	TextDrawFont(MMTD[23], 5);
	TextDrawSetProportional(MMTD[23], 1);
	TextDrawSetSelectable(MMTD[23], true);
	TextDrawSetPreviewModel(MMTD[23], 2035);
	TextDrawSetPreviewRot(MMTD[23], 90.000000, 180.000000, 40.000000, 1.000000);
	//Talents
	TalentsTD[0] = TextDrawCreate(430.000000, 133.000000, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[0], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[0], 120.380920, 129.279998);
	TextDrawAlignment(TalentsTD[0], 1);
	TextDrawColor(TalentsTD[0], 1939274751);
	TextDrawSetShadow(TalentsTD[0], 0);
	TextDrawSetOutline(TalentsTD[0], 0);
	TextDrawFont(TalentsTD[0], 4);
	TalentsTD[1] = TextDrawCreate(431.000000, 145.000000, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[1], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[1], 117.714256, 115.626678);
	TextDrawAlignment(TalentsTD[1], 1);
	TextDrawColor(TalentsTD[1], 255);
	TextDrawSetShadow(TalentsTD[1], 0);
	TextDrawSetOutline(TalentsTD[1], 0);
	TextDrawFont(TalentsTD[1], 4);
	TalentsTD[2] = TextDrawCreate(438.095245, 241.066665, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[2], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[2], 103.238128, 0.853347);
	TextDrawAlignment(TalentsTD[2], 1);
	TextDrawColor(TalentsTD[2], 1939274751);
	TextDrawSetShadow(TalentsTD[2], 0);
	TextDrawSetOutline(TalentsTD[2], 0);
	TextDrawFont(TalentsTD[2], 4);
	TalentsTD[3] = TextDrawCreate(490.666748, 244.053329, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[3], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[3], 39.238098, 14.080001);
	TextDrawAlignment(TalentsTD[3], 1);
	TextDrawColor(TalentsTD[3], 1939274751);
	TextDrawSetShadow(TalentsTD[3], 0);
	TextDrawSetOutline(TalentsTD[3], 0);
	TextDrawFont(TalentsTD[3], 4);
	TextDrawSetSelectable(TalentsTD[3], true);
	TalentsTD[4] = TextDrawCreate(449.381195, 244.053329, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[4], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[4], 39.238098, 14.080001);
	TextDrawAlignment(TalentsTD[4], 1);
	TextDrawColor(TalentsTD[4], 1939274751);
	TextDrawSetShadow(TalentsTD[4], 0);
	TextDrawSetOutline(TalentsTD[4], 0);
	TextDrawFont(TalentsTD[4], 4);
	TextDrawSetSelectable(TalentsTD[4], true);
	TalentsTD[5] = TextDrawCreate(467.428588, 155.733337, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[5], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[5], 42.666656, 0.853332);
	TextDrawAlignment(TalentsTD[5], 1);
	TextDrawColor(TalentsTD[5], 1939274751);
	TextDrawSetShadow(TalentsTD[5], 0);
	TextDrawSetOutline(TalentsTD[5], 0);
	TextDrawFont(TalentsTD[5], 4);
	TalentsTD[6] = TextDrawCreate(437.714263, 183.466659, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[6], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[6], 103.619110, 0.853332);
	TextDrawAlignment(TalentsTD[6], 1);
	TextDrawColor(TalentsTD[6], 1939274751);
	TextDrawSetShadow(TalentsTD[6], 0);
	TextDrawSetOutline(TalentsTD[6], 0);
	TextDrawFont(TalentsTD[6], 4);
	TalentsTD[7] = TextDrawCreate(437.571411, 213.906631, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[7], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[7], 103.619110, 0.853332);
	TextDrawAlignment(TalentsTD[7], 1);
	TextDrawColor(TalentsTD[7], 1939274751);
	TextDrawSetShadow(TalentsTD[7], 0);
	TextDrawSetOutline(TalentsTD[7], 0);
	TextDrawFont(TalentsTD[7], 4);
	TalentsTD[8] = TextDrawCreate(454.799987, 262.399993, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[8], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[8], 0.761901, 25.173339);
	TextDrawAlignment(TalentsTD[8], 1);
	TextDrawColor(TalentsTD[8], 10092543);
	TextDrawSetShadow(TalentsTD[8], 0);
	TextDrawSetOutline(TalentsTD[8], 0);
	TextDrawFont(TalentsTD[8], 4);
	TalentsTD[9] = TextDrawCreate(479.799987, 262.399993, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[9], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[9], 0.761901, 25.173339);
	TextDrawAlignment(TalentsTD[9], 1);
	TextDrawColor(TalentsTD[9], 10092543);
	TextDrawSetShadow(TalentsTD[9], 0);
	TextDrawSetOutline(TalentsTD[9], 0);
	TextDrawFont(TalentsTD[9], 4);
	TalentsTD[10] = TextDrawCreate(504.799987, 262.399993, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[10], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[10], 0.761901, 25.173339);
	TextDrawAlignment(TalentsTD[10], 1);
	TextDrawColor(TalentsTD[10], 10092543);
	TextDrawSetShadow(TalentsTD[10], 0);
	TextDrawSetOutline(TalentsTD[10], 0);
	TextDrawFont(TalentsTD[10], 4);
	TalentsTD[11] = TextDrawCreate(529.799987, 262.399993, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[11], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[11], 0.761901, 25.173339);
	TextDrawAlignment(TalentsTD[11], 1);
	TextDrawColor(TalentsTD[11], 10092543);
	TextDrawSetShadow(TalentsTD[11], 0);
	TextDrawSetOutline(TalentsTD[11], 0);
	TextDrawFont(TalentsTD[11], 4);
	TalentsTD[12] = TextDrawCreate(429.752380, 262.399993, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[12], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[12], 0.761901, 25.173339);
	TextDrawAlignment(TalentsTD[12], 1);
	TextDrawColor(TalentsTD[12], 10092543);
	TextDrawSetShadow(TalentsTD[12], 0);
	TextDrawSetOutline(TalentsTD[12], 0);
	TextDrawFont(TalentsTD[12], 4);
	TalentsTD[13] = TextDrawCreate(429.990478, 287.293304, "LD_SPAC:white");
	TextDrawLetterSize(TalentsTD[13], 0.000000, 0.000000);
	TextDrawTextSize(TalentsTD[13], 100.571357, 0.853343);
	TextDrawAlignment(TalentsTD[13], 1);
	TextDrawColor(TalentsTD[13], 10092543);
	TextDrawSetShadow(TalentsTD[13], 0);
	TextDrawSetOutline(TalentsTD[13], 0);
	TextDrawFont(TalentsTD[13], 4);
	//
	URL[0] = TextDrawCreate(628.066711, 24.748100, "particle:lamp_shad_64");
	TextDrawLetterSize(URL[0], 0.000000, 0.000000);
	TextDrawTextSize(URL[0], 8.000000, -18.000000);
	TextDrawAlignment(URL[0], 1);
	TextDrawColor(URL[0], 142);
	TextDrawSetShadow(URL[0], 0);
	TextDrawSetOutline(URL[0], 0);
	TextDrawBackgroundColor(URL[0], 255);
	TextDrawFont(URL[0], 4);
	TextDrawSetProportional(URL[0], 0);
	TextDrawSetShadow(URL[0], 0);

	URL[1] = TextDrawCreate(606.066528, 26.822099, "particle:lamp_shad_64");
	TextDrawLetterSize(URL[1], 0.000000, 0.000000);
	TextDrawTextSize(URL[1], 8.000000, -18.000000);
	TextDrawAlignment(URL[1], 1);
	TextDrawColor(URL[1], 142);
	TextDrawSetShadow(URL[1], 0);
	TextDrawSetOutline(URL[1], 0);
	TextDrawBackgroundColor(URL[1], 255);
	TextDrawFont(URL[1], 4);
	TextDrawSetProportional(URL[1], 0);
	TextDrawSetShadow(URL[1], 0);

	URL[2] = TextDrawCreate(586.233215, -33.625801, "");
	TextDrawLetterSize(URL[2], 0.000000, 0.000000);
	TextDrawTextSize(URL[2], 83.000000, 85.000000);
	TextDrawAlignment(URL[2], 1);
	TextDrawColor(URL[2], 1362755583);
	TextDrawSetShadow(URL[2], 0);
	TextDrawSetOutline(URL[2], 0);
	TextDrawBackgroundColor(URL[2], 0);
	TextDrawFont(URL[2], 5);
	TextDrawSetProportional(URL[2], 0);
	TextDrawSetShadow(URL[2], 0);
	TextDrawSetPreviewModel(URL[2], 19201);
	TextDrawSetPreviewRot(URL[2], 0.000000, 204.000000, 0.000000, 0.755900);

	URL[3] = TextDrawCreate(655.499877, -37.488800, "");
	TextDrawLetterSize(URL[3], 0.000000, 0.000000);
	TextDrawTextSize(URL[3], -82.000000, 93.000000);
	TextDrawAlignment(URL[3], 1);
	TextDrawColor(URL[3], 1047250687);
	TextDrawSetShadow(URL[3], 0);
	TextDrawSetOutline(URL[3], 0);
	TextDrawBackgroundColor(URL[3], 0);
	TextDrawFont(URL[3], 5);
	TextDrawSetProportional(URL[3], 0);
	TextDrawSetShadow(URL[3], 0);
	TextDrawSetPreviewModel(URL[3], 19201);
	TextDrawSetPreviewRot(URL[3], 0.000000, 203.000000, 0.000000, 0.755900);

	URL[4] = TextDrawCreate(606.166625, 30.788600, "");
	TextDrawLetterSize(URL[4], 0.000000, 0.000000);
	TextDrawTextSize(URL[4], 33.000000, -37.000000);
	TextDrawAlignment(URL[4], 1);
	TextDrawColor(URL[4], 1362755583);
	TextDrawSetShadow(URL[4], 0);
	TextDrawSetOutline(URL[4], 0);
	TextDrawBackgroundColor(URL[4], 0);
	TextDrawFont(URL[4], 5);
	TextDrawSetProportional(URL[4], 0);
	TextDrawSetShadow(URL[4], 0);
	TextDrawSetPreviewModel(URL[4], 19177);
	TextDrawSetPreviewRot(URL[4], 0.000000, 273.000000, 0.000000, 0.755900);

	URL[5] = TextDrawCreate(633.600219, -7.492499, "");
	TextDrawLetterSize(URL[5], 0.000000, 0.000000);
	TextDrawTextSize(URL[5], -29.000000, 39.000000);
	TextDrawAlignment(URL[5], 1);
	TextDrawColor(URL[5], 1047250687);
	TextDrawSetShadow(URL[5], 0);
	TextDrawSetOutline(URL[5], 0);
	TextDrawBackgroundColor(URL[5], 0);
	TextDrawFont(URL[5], 5);
	TextDrawSetProportional(URL[5], 0);
	TextDrawSetShadow(URL[5], 0);
	TextDrawSetPreviewModel(URL[5], 19177);
	TextDrawSetPreviewRot(URL[5], 0.000000, 270.000000, 0.000000, 0.755900);

	URL[6] = TextDrawCreate(622.966796, -14.173999, "");
	TextDrawLetterSize(URL[6], 0.000000, 0.000000);
	TextDrawTextSize(URL[6], -29.000000, 39.000000);
	TextDrawAlignment(URL[6], 1);
	TextDrawColor(URL[6], 1047250687);
	TextDrawSetShadow(URL[6], 0);
	TextDrawSetOutline(URL[6], 0);
	TextDrawBackgroundColor(URL[6], 0);
	TextDrawFont(URL[6], 5);
	TextDrawSetProportional(URL[6], 0);
	TextDrawSetShadow(URL[6], 0);
	TextDrawSetPreviewModel(URL[6], 19177);
	TextDrawSetPreviewRot(URL[6], 0.000000, 90.000000, 0.000000, 0.755900);

	URL[7] = TextDrawCreate(616.399902, -13.140500, "");
	TextDrawLetterSize(URL[7], 0.000000, 0.000000);
	TextDrawTextSize(URL[7], 34.000000, 38.000000);
	TextDrawAlignment(URL[7], 1);
	TextDrawColor(URL[7], 1362755583);
	TextDrawSetShadow(URL[7], 0);
	TextDrawSetOutline(URL[7], 0);
	TextDrawBackgroundColor(URL[7], 0);
	TextDrawFont(URL[7], 5);
	TextDrawSetProportional(URL[7], 0);
	TextDrawSetShadow(URL[7], 0);
	TextDrawSetPreviewModel(URL[7], 19177);
	TextDrawSetPreviewRot(URL[7], 0.000000, 90.000000, 0.000000, 0.755900);

	URL[8] = TextDrawCreate(597.966369, -40.333198, "");
	TextDrawLetterSize(URL[8], 0.000000, 0.000000);
	TextDrawTextSize(URL[8], 71.000000, 109.000000);
	TextDrawAlignment(URL[8], 1);
	TextDrawColor(URL[8], 1362755583);
	TextDrawSetShadow(URL[8], 0);
	TextDrawSetOutline(URL[8], 0);
	TextDrawBackgroundColor(URL[8], 0);
	TextDrawFont(URL[8], 5);
	TextDrawSetProportional(URL[8], 0);
	TextDrawSetShadow(URL[8], 0);
	TextDrawSetPreviewModel(URL[8], 19201);
	TextDrawSetPreviewRot(URL[8], 0.000000, 270.000000, 0.000000, 0.755900);

	URL[9] = TextDrawCreate(657.399902, -9.755399, "");
	TextDrawLetterSize(URL[9], 0.000000, 0.000000);
	TextDrawTextSize(URL[9], -56.000000, 70.000000);
	TextDrawAlignment(URL[9], 1);
	TextDrawColor(URL[9], 1362755571);
	TextDrawSetShadow(URL[9], 0);
	TextDrawSetOutline(URL[9], 0);
	TextDrawBackgroundColor(URL[9], 0);
	TextDrawFont(URL[9], 5);
	TextDrawSetProportional(URL[9], 0);
	TextDrawSetShadow(URL[9], 0);
	TextDrawSetPreviewModel(URL[9], 19201);
	TextDrawSetPreviewRot(URL[9], 0.000000, 158.000000, 0.000000, 0.677699);

	URL[10] = TextDrawCreate(573.233215, -40.618400, "");
	TextDrawLetterSize(URL[10], 0.000000, 0.000000);
	TextDrawTextSize(URL[10], 71.000000, 109.000000);
	TextDrawAlignment(URL[10], 1);
	TextDrawColor(URL[10], 1047250687);
	TextDrawSetShadow(URL[10], 0);
	TextDrawSetOutline(URL[10], 0);
	TextDrawBackgroundColor(URL[10], 0);
	TextDrawFont(URL[10], 5);
	TextDrawSetProportional(URL[10], 0);
	TextDrawSetShadow(URL[10], 0);
	TextDrawSetPreviewModel(URL[10], 19201);
	TextDrawSetPreviewRot(URL[10], 0.000000, 270.000000, 0.000000, 0.755900);

	URL[11] = TextDrawCreate(640.833190, -8.796099, "");
	TextDrawLetterSize(URL[11], 0.000000, 0.000000);
	TextDrawTextSize(URL[11], -56.000000, 69.000000);
	TextDrawAlignment(URL[11], 1);
	TextDrawColor(URL[11], 1047250687);
	TextDrawSetShadow(URL[11], 0);
	TextDrawSetOutline(URL[11], 0);
	TextDrawBackgroundColor(URL[11], 0);
	TextDrawFont(URL[11], 5);
	TextDrawSetProportional(URL[11], 0);
	TextDrawSetShadow(URL[11], 0);
	TextDrawSetPreviewModel(URL[11], 19201);
	TextDrawSetPreviewRot(URL[11], 0.000000, 203.000000, 0.000000, 0.683000);

	URL[12] = TextDrawCreate(631.333618, 8.166600, "");
	TextDrawLetterSize(URL[12], 0.000000, 0.000000);
	TextDrawTextSize(URL[12], -29.000000, 39.000000);
	TextDrawAlignment(URL[12], 1);
	TextDrawColor(URL[12], 1047250687);
	TextDrawSetShadow(URL[12], 0);
	TextDrawSetOutline(URL[12], 0);
	TextDrawBackgroundColor(URL[12], 0);
	TextDrawFont(URL[12], 5);
	TextDrawSetProportional(URL[12], 0);
	TextDrawSetShadow(URL[12], 0);
	TextDrawSetPreviewModel(URL[12], 19177);
	TextDrawSetPreviewRot(URL[12], 0.000000, 270.000000, 0.000000, 0.755900);

	URL[13] = TextDrawCreate(632.300170, 4.681499, "");
	TextDrawLetterSize(URL[13], 0.000000, 0.000000);
	TextDrawTextSize(URL[13], -29.000000, 39.000000);
	TextDrawAlignment(URL[13], 1);
	TextDrawColor(URL[13], 1047250687);
	TextDrawSetShadow(URL[13], 0);
	TextDrawSetOutline(URL[13], 0);
	TextDrawBackgroundColor(URL[13], 0);
	TextDrawFont(URL[13], 5);
	TextDrawSetProportional(URL[13], 0);
	TextDrawSetShadow(URL[13], 0);
	TextDrawSetPreviewModel(URL[13], 19177);
	TextDrawSetPreviewRot(URL[13], 0.000000, 140.000000, 0.000000, 0.755900);

	URL[14] = TextDrawCreate(605.399902, 18.525999, "LD_BEAT:chit");
	TextDrawLetterSize(URL[14], 0.000000, 0.000000);
	TextDrawTextSize(URL[14], 7.000000, 8.000000);
	TextDrawAlignment(URL[14], 1);
	TextDrawColor(URL[14], 1047250687);
	TextDrawSetShadow(URL[14], 0);
	TextDrawSetOutline(URL[14], 0);
	TextDrawBackgroundColor(URL[14], 255);
	TextDrawFont(URL[14], 4);
	TextDrawSetProportional(URL[14], 0);
	TextDrawSetShadow(URL[14], 0);

	URL[15] = TextDrawCreate(607.533203, 47.048198, "");
	TextDrawLetterSize(URL[15], 0.000000, 0.000000);
	TextDrawTextSize(URL[15], 36.000000, -39.000000);
	TextDrawAlignment(URL[15], 1);
	TextDrawColor(URL[15], 1362755583);
	TextDrawSetShadow(URL[15], 0);
	TextDrawSetOutline(URL[15], 0);
	TextDrawBackgroundColor(URL[15], 0);
	TextDrawFont(URL[15], 5);
	TextDrawSetProportional(URL[15], 0);
	TextDrawSetShadow(URL[15], 0);
	TextDrawSetPreviewModel(URL[15], 19177);
	TextDrawSetPreviewRot(URL[15], 0.000000, 271.000000, 0.000000, 0.755900);

	URL[16] = TextDrawCreate(608.433410, 4.588799, "");
	TextDrawLetterSize(URL[16], 0.000000, 0.000000);
	TextDrawTextSize(URL[16], 34.000000, 38.000000);
	TextDrawAlignment(URL[16], 1);
	TextDrawColor(URL[16], 1362755583);
	TextDrawSetShadow(URL[16], 0);
	TextDrawSetOutline(URL[16], 0);
	TextDrawBackgroundColor(URL[16], 0);
	TextDrawFont(URL[16], 5);
	TextDrawSetProportional(URL[16], 0);
	TextDrawSetShadow(URL[16], 0);
	TextDrawSetPreviewModel(URL[16], 19177);
	TextDrawSetPreviewRot(URL[16], 0.000000, 271.000000, 0.000000, 0.755900);

	URL[17] = TextDrawCreate(613.599792, 21.888799, "LD_BEAT:chit");
	TextDrawLetterSize(URL[17], 0.000000, 0.000000);
	TextDrawTextSize(URL[17], 6.000000, 9.000000);
	TextDrawAlignment(URL[17], 1);
	TextDrawColor(URL[17], 1047250687);
	TextDrawSetShadow(URL[17], 0);
	TextDrawSetOutline(URL[17], 0);
	TextDrawBackgroundColor(URL[17], 255);
	TextDrawFont(URL[17], 4);
	TextDrawSetProportional(URL[17], 0);
	TextDrawSetShadow(URL[17], 0);

	URL[18] = TextDrawCreate(616.299804, 7.370299, "LD_BEAT:chit");
	TextDrawLetterSize(URL[18], 0.000000, 0.000000);
	TextDrawTextSize(URL[18], 5.000000, 7.000000);
	TextDrawAlignment(URL[18], 1);
	TextDrawColor(URL[18], 1047250687);
	TextDrawSetShadow(URL[18], 0);
	TextDrawSetOutline(URL[18], 0);
	TextDrawBackgroundColor(URL[18], 255);
	TextDrawFont(URL[18], 4);
	TextDrawSetProportional(URL[18], 0);
	TextDrawSetShadow(URL[18], 0);

	URL[19] = TextDrawCreate(619.699890, 7.785099, "LD_BEAT:chit");
	TextDrawLetterSize(URL[19], 0.000000, 0.000000);
	TextDrawTextSize(URL[19], 7.000000, 7.000000);
	TextDrawAlignment(URL[19], 1);
	TextDrawColor(URL[19], 1362755583);
	TextDrawSetShadow(URL[19], 0);
	TextDrawSetOutline(URL[19], 0);
	TextDrawBackgroundColor(URL[19], 255);
	TextDrawFont(URL[19], 4);
	TextDrawSetProportional(URL[19], 0);
	TextDrawSetShadow(URL[19], 0);

	URL[20] = TextDrawCreate(630.500000, 15.381500, "LD_BEAT:chit");
	TextDrawLetterSize(URL[20], 0.000000, 0.000000);
	TextDrawTextSize(URL[20], 6.000000, 11.000000);
	TextDrawAlignment(URL[20], 1);
	TextDrawColor(URL[20], 1362755583);
	TextDrawSetShadow(URL[20], 0);
	TextDrawSetOutline(URL[20], 0);
	TextDrawBackgroundColor(URL[20], 255);
	TextDrawFont(URL[20], 4);
	TextDrawSetProportional(URL[20], 0);
	TextDrawSetShadow(URL[20], 0);

	URL[21] = TextDrawCreate(621.899902, 22.518400, "LD_BEAT:chit");
	TextDrawLetterSize(URL[21], 0.000000, 0.000000);
	TextDrawTextSize(URL[21], 7.000000, 7.000000);
	TextDrawAlignment(URL[21], 1);
	TextDrawColor(URL[21], 1362755583);
	TextDrawSetShadow(URL[21], 0);
	TextDrawSetOutline(URL[21], 0);
	TextDrawBackgroundColor(URL[21], 255);
	TextDrawFont(URL[21], 4);
	TextDrawSetProportional(URL[21], 0);
	TextDrawSetShadow(URL[21], 0);

	URL[22] = TextDrawCreate(604.433227, 33.759201, "particle:lamp_shad_64");
	TextDrawLetterSize(URL[22], 0.000000, 0.000000);
	TextDrawTextSize(URL[22], 35.000000, -2.000000);
	TextDrawAlignment(URL[22], 1);
	TextDrawColor(URL[22], 137);
	TextDrawSetShadow(URL[22], 0);
	TextDrawSetOutline(URL[22], 0);
	TextDrawBackgroundColor(URL[22], 255);
	TextDrawFont(URL[22], 4);
	TextDrawSetProportional(URL[22], 0);
	TextDrawSetShadow(URL[22], 0);
	
	StopAnimation = TextDrawCreate(392.00, 434.00, "~w~Press ~p~~k~~VEHICLE_ENTER_EXIT~ ~w~to stop anim");
    TextDrawBackgroundColor(StopAnimation, 0x000000FF);
    TextDrawFont(StopAnimation, 2);
    TextDrawSetOutline(StopAnimation, 1);
    TextDrawLetterSize(StopAnimation, 0.300000, 1.250000);
    TextDrawColor(StopAnimation, 0xFFFFFFFF);
    TextDrawSetProportional(StopAnimation, 1);  

 	BandDrawBG[0] = TextDrawCreate(203.000000, 110.000000, "Band1");
	TextDrawBackgroundColor(BandDrawBG[0], 255);
	TextDrawFont(BandDrawBG[0], 1);
	TextDrawLetterSize(BandDrawBG[0], -0.000000, 1.33);
	TextDrawColor(BandDrawBG[0], -1);
	TextDrawSetOutline(BandDrawBG[0], 0);
	TextDrawSetProportional(BandDrawBG[0], 1);
	TextDrawSetShadow(BandDrawBG[0], 1);
	TextDrawUseBox(BandDrawBG[0], 1);
	TextDrawBoxColor(BandDrawBG[0], 0x00000099);
	TextDrawTextSize(BandDrawBG[0], 445.000000, 0.000000);

	BandDrawBG[1] = TextDrawCreate(205.000000, 112.000000, "Band2");
	TextDrawBackgroundColor(BandDrawBG[1], 255);
	TextDrawFont(BandDrawBG[1], 1);
	TextDrawLetterSize(BandDrawBG[1], -0.000000, 0.899999);
	TextDrawColor(BandDrawBG[1], -1);
	TextDrawSetOutline(BandDrawBG[1], 0);
	TextDrawSetProportional(BandDrawBG[1], 1);
	TextDrawSetShadow(BandDrawBG[1], 1);
	TextDrawUseBox(BandDrawBG[1], 1);
	TextDrawBoxColor(BandDrawBG[1], 0x88990055);
	TextDrawTextSize(BandDrawBG[1], 443.000000, 0.000000);

	ActionMenu[0] = TextDrawCreate(320.000000, 370.000000, "usebox");
	TextDrawLetterSize(ActionMenu[0], 0.005247, 4.211384);
	TextDrawTextSize(ActionMenu[0], 312.188629, 136.037490);
	TextDrawAlignment(ActionMenu[0], 2);
	TextDrawColor(ActionMenu[0], 0);
	TextDrawUseBox(ActionMenu[0], true);
	TextDrawBoxColor(ActionMenu[0], -6749953);
	TextDrawSetShadow(ActionMenu[0], 0);
	TextDrawSetOutline(ActionMenu[0], 0);
	TextDrawFont(ActionMenu[0], 0);

	ActionMenu[1] = TextDrawCreate(320.000000, 371.000000, "usebox");
	TextDrawLetterSize(ActionMenu[1], 0.014622, 3.984657);
	TextDrawTextSize(ActionMenu[1], 312.938507, 134.777938);
	TextDrawAlignment(ActionMenu[1], 2);
	TextDrawColor(ActionMenu[1], 0);
	TextDrawUseBox(ActionMenu[1], true);
	TextDrawBoxColor(ActionMenu[1], 572662527);
	TextDrawSetShadow(ActionMenu[1], 0);
	TextDrawSetOutline(ActionMenu[1], 0);
	TextDrawFont(ActionMenu[1], 1);

	ActionMenu[2] = TextDrawCreate(260.949035, 392.577331, "LD_SPAC:white");
	TextDrawLetterSize(ActionMenu[2], 0.000000, 0.000000);
	TextDrawTextSize(ActionMenu[2], 116.977142, 0.839721);
	TextDrawAlignment(ActionMenu[2], 1);
	TextDrawColor(ActionMenu[2], -6749953);
	TextDrawSetShadow(ActionMenu[2], 0);
	TextDrawSetOutline(ActionMenu[2], 0);
	TextDrawFont(ActionMenu[2], 4);

	ActionMenu[3] = TextDrawCreate(260.574127, 370.0000, "left arrow");
	TextDrawLetterSize(ActionMenu[3], 0.449999, 1.600000);
	TextDrawTextSize(ActionMenu[3], 20.246046, 21.833179);
	TextDrawAlignment(ActionMenu[3], 1);
	TextDrawColor(ActionMenu[3], -1);
	TextDrawUseBox(ActionMenu[3], true);
	TextDrawBoxColor(ActionMenu[3], 0);
	TextDrawSetShadow(ActionMenu[3], 0);
	TextDrawSetOutline(ActionMenu[3], 1);
	TextDrawBackgroundColor(ActionMenu[3], 0x00000000);
	TextDrawFont(ActionMenu[3], 5);
	TextDrawSetProportional(ActionMenu[3], 1);
	TextDrawSetSelectable(ActionMenu[3], true);
	TextDrawSetPreviewModel(ActionMenu[3], 19134);
	TextDrawSetPreviewRot(ActionMenu[3], 0.000000, 90.000000, 90.000000, 1.000000);

	ActionMenu[4] = TextDrawCreate(357.555236, 370.0000, "right arrow");
	TextDrawLetterSize(ActionMenu[4], 0.449999, 1.600000);
	TextDrawTextSize(ActionMenu[4], 20.246046, 21.833179);
	TextDrawAlignment(ActionMenu[4], 1);
	TextDrawColor(ActionMenu[4], -1);
	TextDrawUseBox(ActionMenu[4], true);
	TextDrawBackgroundColor(ActionMenu[4], 0x00000000);
	TextDrawBoxColor(ActionMenu[4], 0);
	TextDrawSetShadow(ActionMenu[4], 0);
	TextDrawSetOutline(ActionMenu[4], 1);
	TextDrawFont(ActionMenu[4], 5);
	TextDrawSetProportional(ActionMenu[4], 1);
	TextDrawSetSelectable(ActionMenu[4], true);
	TextDrawSetPreviewModel(ActionMenu[4], 19134);
	TextDrawSetPreviewRot(ActionMenu[4], 0.000000, -90.000000, 90.000000, 1.000000);

	ActionMenu[5] = TextDrawCreate(320.000000, 376.000000, "~y~<<< ~w~SELECT ~y~>>>");
	TextDrawLetterSize(ActionMenu[5], 0.146684, 0.965997);
	TextDrawAlignment(ActionMenu[5], 2);
	TextDrawColor(ActionMenu[5], -1);
	TextDrawSetShadow(ActionMenu[5], 0);
	TextDrawSetOutline(ActionMenu[5], 0);
	TextDrawBackgroundColor(ActionMenu[5], 51);
	TextDrawFont(ActionMenu[5], 2);
	TextDrawSetProportional(ActionMenu[5], 1);

	ActionMenu[6] = TextDrawCreate(285.694183, 395.0000, "ACCEPT");
	TextDrawLetterSize(ActionMenu[6], 0.201423, 1.066766);
	TextDrawTextSize(ActionMenu[6], 15.746921, 34.009372);
	TextDrawAlignment(ActionMenu[6], 2);
	TextDrawColor(ActionMenu[6], 1453874943);
	TextDrawSetShadow(ActionMenu[6], 0);
	TextDrawSetOutline(ActionMenu[6], 0);
	TextDrawBackgroundColor(ActionMenu[6], 51);
	TextDrawFont(ActionMenu[6], 2);
	TextDrawSetProportional(ActionMenu[6], 1);
	TextDrawSetSelectable(ActionMenu[6], true);

	ActionMenu[7] = TextDrawCreate(353.806030, 395.0000, "CANCEL");
	TextDrawLetterSize(ActionMenu[7], 0.201423, 1.066766);
	TextDrawTextSize(ActionMenu[7], 15.746921, 34.009372);
	TextDrawAlignment(ActionMenu[7], 2);
	TextDrawColor(ActionMenu[7], -650034689);
	TextDrawSetShadow(ActionMenu[7], 0);
	TextDrawSetOutline(ActionMenu[7], 0);
	TextDrawBackgroundColor(ActionMenu[7], 51);
	TextDrawFont(ActionMenu[7], 2);
	TextDrawSetProportional(ActionMenu[7], 1);
	TextDrawSetSelectable(ActionMenu[7], true);

	ButtonDown = TextDrawCreate(300.0, 300.0, "LD_BEAT:down");
	TextDrawFont(ButtonDown, 4);
	TextDrawTextSize(ButtonDown, 50, 25);
	TextDrawSetSelectable(ButtonDown, 1);

	//Taximeter
	Taximeter[0] = TextDrawCreate(635.251281, 273.155120, "usebox");
	TextDrawLetterSize(Taximeter[0], 0.000000, 2.902323);
	TextDrawTextSize(Taximeter[0], 578.386657, 0.000000);
	TextDrawAlignment(Taximeter[0], 1);
	TextDrawColor(Taximeter[0], 0);
	TextDrawUseBox(Taximeter[0], true);
	TextDrawBoxColor(Taximeter[0], -6749953);
	TextDrawSetShadow(Taximeter[0], 0);
	TextDrawSetOutline(Taximeter[0], 0);
	TextDrawFont(Taximeter[0], 0);
	Taximeter[1] = TextDrawCreate(634.001647, 274.155120, "usebox");
	TextDrawLetterSize(Taximeter[1], 0.000000, 2.639874);
	TextDrawTextSize(Taximeter[1], 579.511474, 0.000000);
	TextDrawAlignment(Taximeter[1], 1);
	TextDrawColor(Taximeter[1], 0);
	TextDrawUseBox(Taximeter[1], true);
	TextDrawBoxColor(Taximeter[1], 572662527);
	TextDrawSetShadow(Taximeter[1], 0);
	TextDrawSetOutline(Taximeter[1], 0);
	TextDrawFont(Taximeter[1], 0);
	Taximeter[2] = TextDrawCreate(606.631835, 273.334472, "Taximeter");
	TextDrawLetterSize(Taximeter[2], 0.183052, 1.041574);
	TextDrawAlignment(Taximeter[2], 2);
	TextDrawColor(Taximeter[2], -650034689);
	TextDrawSetShadow(Taximeter[2], 0);
	TextDrawSetOutline(Taximeter[2], 0);
	TextDrawBackgroundColor(Taximeter[2], 51);
	TextDrawFont(Taximeter[2], 2);
	TextDrawSetProportional(Taximeter[2], 1);
	Taximeter[3] = TextDrawCreate(599.133117, 284.251159, "LD_SPAC:white");
	TextDrawLetterSize(Taximeter[3], 0.000000, -0.862331);
	TextDrawTextSize(Taximeter[3], 16.496765, 0.839721);
	TextDrawAlignment(Taximeter[3], 1);
	TextDrawColor(Taximeter[3], -6749953);
	TextDrawUseBox(Taximeter[3], true);
	TextDrawBoxColor(Taximeter[3], 0);
	TextDrawSetShadow(Taximeter[3], 0);
	TextDrawSetOutline(Taximeter[3], 0);
	TextDrawFont(Taximeter[3], 4);
	//
	ShieldBG[0] = TextDrawCreate(610.0,57.8,"_");
	TextDrawLetterSize(ShieldBG[0],0.0,0.57);
	TextDrawUseBox(ShieldBG[0],1);
	TextDrawBoxColor(ShieldBG[0],COLOR_SHBAR_BG);
	TextDrawTextSize(ShieldBG[0],544.5,0.0);

	ShieldBG[1] = TextDrawCreate(608.0,59.6,"_");
	TextDrawLetterSize(ShieldBG[1],0.0,0.135);
	TextDrawUseBox(ShieldBG[1],1);
	TextDrawBoxColor(ShieldBG[1],COLOR_SHBAR_BG2);
	TextDrawTextSize(ShieldBG[1],546.5,0.0);

    FuelTD[0] = TextDrawCreate(320.000000, 224.000000, "usebox");
	TextDrawLetterSize(FuelTD[0], 0.008629, 5.335300);
	TextDrawTextSize(FuelTD[0], 315.937927, 107.486396);
	TextDrawAlignment(FuelTD[0], 2);
	TextDrawColor(FuelTD[0], 0);
	TextDrawUseBox(FuelTD[0], true);
	TextDrawBoxColor(FuelTD[0], -6749953);
	TextDrawSetShadow(FuelTD[0], 0);
	TextDrawSetOutline(FuelTD[0], 0);

	FuelTD[1] = TextDrawCreate(320.000000, 225.000000, "usebox");
	TextDrawLetterSize(FuelTD[1], 0.015003, 5.121168);
	TextDrawTextSize(FuelTD[1], 316.687805, 104.967185);
	TextDrawAlignment(FuelTD[1], 2);
	TextDrawColor(FuelTD[1], 0);
	TextDrawUseBox(FuelTD[1], true);
	TextDrawBoxColor(FuelTD[1], 572662527);
	TextDrawSetShadow(FuelTD[1], 0);
	TextDrawSetOutline(FuelTD[1], 0);

	FuelTD[2] = TextDrawCreate(344.000000, 224.500000, "right arrow");
	TextDrawLetterSize(FuelTD[2], 0.449999, 1.600000);
	TextDrawTextSize(FuelTD[2], 19.121261, 14.695394);
	TextDrawAlignment(FuelTD[2], 1);
	TextDrawBackgroundColor(FuelTD[2], 0x00000000);
	TextDrawColor(FuelTD[2], -1);
	TextDrawUseBox(FuelTD[2], true);
	TextDrawBoxColor(FuelTD[2], 0);
	TextDrawSetShadow(FuelTD[2], 0);
	TextDrawSetOutline(FuelTD[2], 1);
	TextDrawFont(FuelTD[2], 5);
	TextDrawSetProportional(FuelTD[2], 1);
	TextDrawSetSelectable(FuelTD[2], true);
	TextDrawSetPreviewModel(FuelTD[2], 19132);
	TextDrawSetPreviewRot(FuelTD[2], 0.000000, 90.000000, 90.000000, 1.000000);

	FuelTD[3] = TextDrawCreate(276.000000, 224.500000, "left arrow");
	TextDrawLetterSize(FuelTD[3], 0.449999, 1.600000);
	TextDrawTextSize(FuelTD[3], 19.121261, 14.695394);
	TextDrawAlignment(FuelTD[3], 1);
	TextDrawBackgroundColor(FuelTD[3], 0x00000000);
	TextDrawColor(FuelTD[3], -1);
	TextDrawUseBox(FuelTD[3], true);
	TextDrawBoxColor(FuelTD[3], 0);
	TextDrawSetShadow(FuelTD[3], 0);
	TextDrawSetOutline(FuelTD[3], 1);
	TextDrawFont(FuelTD[3], 5);
	TextDrawSetProportional(FuelTD[3], 1);
	TextDrawSetSelectable(FuelTD[3], true);
	TextDrawSetPreviewModel(FuelTD[3], 19132);
	TextDrawSetPreviewRot(FuelTD[3], 0.000000, -90.000000, 90.000000, 1.000000);

	FuelTD[4] = TextDrawCreate(275.571166, 240.011245, "LD_SPAC:white");
	TextDrawLetterSize(FuelTD[4], 0.000000, 0.000000);
	TextDrawTextSize(FuelTD[4], 88.482696, 0.419876);
	TextDrawAlignment(FuelTD[4], 1);
	TextDrawColor(FuelTD[4], -6749953);
	TextDrawSetShadow(FuelTD[4], 0);
	TextDrawSetOutline(FuelTD[4], 0);
	TextDrawFont(FuelTD[4], 4);

	FuelTD[5] = TextDrawCreate(272.000000, 252.099349, "down arrow");
	TextDrawLetterSize(FuelTD[5], 0.449999, 1.600000);
	TextDrawTextSize(FuelTD[5], 11.622726, 14.695393);
	TextDrawAlignment(FuelTD[5], 1);
	TextDrawColor(FuelTD[5], 10092543);
	TextDrawBackgroundColor(FuelTD[5], 0x00000000);
	TextDrawUseBox(FuelTD[5], true);
	TextDrawBoxColor(FuelTD[5], 0);
	TextDrawSetShadow(FuelTD[5], 0);
	TextDrawSetOutline(FuelTD[5], 1);
	TextDrawFont(FuelTD[5], 5);
	TextDrawSetProportional(FuelTD[5], 1);
	TextDrawSetSelectable(FuelTD[5], true);
	TextDrawSetPreviewModel(FuelTD[5], 19134);
	TextDrawSetPreviewRot(FuelTD[5], 0.000000, 180.000000, 90.000000, 1.000000);

	FuelTD[6] = TextDrawCreate(272.000000, 240.000000, "up arrow");
	TextDrawLetterSize(FuelTD[6], 0.449999, 1.600000);
	TextDrawTextSize(FuelTD[6], 11.622726, 14.695393);
	TextDrawAlignment(FuelTD[6], 1);
	TextDrawColor(FuelTD[6], 10092543);
	TextDrawBackgroundColor(FuelTD[6], 0x00000000);
	TextDrawUseBox(FuelTD[6], true);
	TextDrawBoxColor(FuelTD[6], 0);
	TextDrawSetShadow(FuelTD[6], 0);
	TextDrawSetOutline(FuelTD[6], 1);
	TextDrawFont(FuelTD[6], 5);
	TextDrawSetProportional(FuelTD[6], 1);
	TextDrawSetSelectable(FuelTD[6], true);
	TextDrawSetPreviewModel(FuelTD[6], 19134);
	TextDrawSetPreviewRot(FuelTD[6], 0.000000, 0.000000, 90.000000, 1.000000);

	FuelTD[7] = TextDrawCreate(274.446380, 253.027175, "LD_SPAC:white");
	TextDrawLetterSize(FuelTD[7], 0.000000, 0.000000);
	TextDrawTextSize(FuelTD[7], 6.748687, 0.419876);
	TextDrawAlignment(FuelTD[7], 1);
	TextDrawColor(FuelTD[7], -6749953);
	TextDrawSetShadow(FuelTD[7], 0);
	TextDrawSetOutline(FuelTD[7], 0);
	TextDrawFont(FuelTD[7], 4);

	FuelTD[8] = TextDrawCreate(328.060913, 243.790069, "LD_SPAC:white");
	TextDrawLetterSize(FuelTD[8], 0.000000, 0.000000);
	TextDrawTextSize(FuelTD[8], 0.374938, 18.474227);
	TextDrawAlignment(FuelTD[8], 1);
	TextDrawColor(FuelTD[8], -6749953);
	TextDrawSetShadow(FuelTD[8], 0);
	TextDrawSetOutline(FuelTD[8], 0);
	TextDrawFont(FuelTD[8], 4);

	FuelTD[9] = TextDrawCreate(275.071411, 266.203552, "LD_SPAC:white");
	TextDrawLetterSize(FuelTD[9], 0.000000, 0.000000);
	TextDrawTextSize(FuelTD[9], 88.482696, 0.419876);
	TextDrawAlignment(FuelTD[9], 1);
	TextDrawColor(FuelTD[9], -6749953);
	TextDrawSetShadow(FuelTD[9], 0);
	TextDrawSetOutline(FuelTD[9], 0);
	TextDrawFont(FuelTD[9], 4);

	FuelTD[10] = TextDrawCreate(320.000000, 275.000000, "usebox");
	TextDrawLetterSize(FuelTD[10], 0.074241, 1.199593);
	TextDrawTextSize(FuelTD[10], 315.937927, 107.486396);
	TextDrawAlignment(FuelTD[10], 2);
	TextDrawColor(FuelTD[10], 0);
	TextDrawUseBox(FuelTD[10], true);
	TextDrawBoxColor(FuelTD[10], 572662527);
	TextDrawSetShadow(FuelTD[10], 0);
	TextDrawSetOutline(FuelTD[10], 0);

	FuelTD[11] = TextDrawCreate(320.000000, 276.000000, "usebox");
	TextDrawLetterSize(FuelTD[11], 0.083614, 0.985460);
	TextDrawTextSize(FuelTD[11], 316.312866, 104.547317);
	TextDrawAlignment(FuelTD[11], 2);
	TextDrawColor(FuelTD[11], 0);
	TextDrawUseBox(FuelTD[11], true);
	TextDrawBoxColor(FuelTD[11], -3342081);
	TextDrawSetShadow(FuelTD[11], 0);
	TextDrawSetOutline(FuelTD[11], 0);

	FuelTD[12] = TextDrawCreate(320.000000, 276.000000, "LD_SPAC:white");
	TextDrawLetterSize(FuelTD[12], 0.000000, 0.000000);
	TextDrawTextSize(FuelTD[12], 0.374938, 8.397384);
	TextDrawAlignment(FuelTD[12], 1);
	TextDrawColor(FuelTD[12], 572662527);
	TextDrawSetShadow(FuelTD[12], 0);
	TextDrawSetOutline(FuelTD[12], 0);
	TextDrawFont(FuelTD[12], 4);

	FuelTD[13] = TextDrawCreate(295.067321, 274.5, "FILL");
	TextDrawLetterSize(FuelTD[13], 0.195424, 1.167535);
	TextDrawTextSize(FuelTD[13], 12.000000, 60.000000);
	TextDrawAlignment(FuelTD[13], 2);
	TextDrawColor(FuelTD[13], 1453874943);
	TextDrawSetShadow(FuelTD[13], 0);
	TextDrawSetOutline(FuelTD[13], 0);
	TextDrawBackgroundColor(FuelTD[13], 51);
	TextDrawFont(FuelTD[13], 2);
	TextDrawSetProportional(FuelTD[13], 1);
	TextDrawSetSelectable(FuelTD[13], true);

	FuelTD[14] = TextDrawCreate(348.557006, 274.5, "CANCEL");
	TextDrawLetterSize(FuelTD[14], 0.195424, 1.167535);
	TextDrawTextSize(FuelTD[14], 12.000000, 60.000000);
	TextDrawAlignment(FuelTD[14], 2);
	TextDrawColor(FuelTD[14], -650034689);
	TextDrawSetShadow(FuelTD[14], 0);
	TextDrawSetOutline(FuelTD[14], 0);
	TextDrawBackgroundColor(FuelTD[14], 51);
	TextDrawFont(FuelTD[14], 2);
	TextDrawSetProportional(FuelTD[14], 1);
	TextDrawSetSelectable(FuelTD[14], true);
    //////////////////////////////////========++++++++

	kryg = TextDrawCreate(123.000000, 397.000000, "ld_beat:up");
	TextDrawBackgroundColor(kryg, 0);
	TextDrawFont(kryg, 5);
	TextDrawLetterSize(kryg, 0.500000, 10.000000);
	TextDrawColor(kryg, -208);
	TextDrawSetOutline(kryg, 0);
	TextDrawSetProportional(kryg, 1);
	TextDrawSetShadow(kryg, 1);
	TextDrawTextSize(kryg, 41.000000, 56.000000);
	TextDrawSetPreviewModel(kryg, 1953);
	TextDrawSetPreviewRot(kryg, 90.000000, 0.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(kryg, 0);

	/////////////////////////телефон
	Sphone[0] = TextDrawCreate(123.101348, 187.501876, "usebox");
	TextDrawLetterSize(Sphone[0], 0.000000, 13.492353);
	TextDrawTextSize(Sphone[0], 48.615116, 0.000000);
	TextDrawAlignment(Sphone[0], 1);
	TextDrawColor(Sphone[0], 0);
	TextDrawUseBox(Sphone[0], true);
	TextDrawBoxColor(Sphone[0], 255);
	TextDrawSetShadow(Sphone[0], 0);
	TextDrawSetOutline(Sphone[0], 0);
	TextDrawFont(Sphone[0], 1);

	Sphone[1] = TextDrawCreate(121.851791, 188.921737, "usebox");
	TextDrawLetterSize(Sphone[1], 0.000000, 13.154918);
	TextDrawTextSize(Sphone[1], 50.114826, 0.000000);
	TextDrawAlignment(Sphone[1], 1);
	TextDrawColor(Sphone[1], 0);
	TextDrawUseBox(Sphone[1], true);
	TextDrawBoxColor(Sphone[1], -690767617);
	TextDrawSetShadow(Sphone[1], 0);
	TextDrawSetOutline(Sphone[1], 0);
	TextDrawFont(Sphone[1], 1);

	Sphone[2] = TextDrawCreate(121.226715, 189.601226, "usebox");
	TextDrawLetterSize(Sphone[2], 0.000000, 0.569721);
	TextDrawTextSize(Sphone[2], 50.864673, 0.000000);
	TextDrawAlignment(Sphone[2], 1);
	TextDrawColor(Sphone[2], 0);
	TextDrawUseBox(Sphone[2], true);
	TextDrawBoxColor(Sphone[2], 255);
	TextDrawSetShadow(Sphone[2], 0);
	TextDrawSetOutline(Sphone[2], 0);
	TextDrawFont(Sphone[2], 0);

	Sphone[3] = TextDrawCreate(53.614521, 187.681350, "14:88");
	TextDrawLetterSize(Sphone[3], 0.133936, 0.840037);
	TextDrawAlignment(Sphone[3], 1);
	TextDrawColor(Sphone[3], -1);
	TextDrawSetShadow(Sphone[3], 0);
	TextDrawSetOutline(Sphone[3], 0);
	TextDrawBackgroundColor(Sphone[3], 51);
	TextDrawFont(Sphone[3], 2);
	TextDrawSetProportional(Sphone[3], 1);

	Sphone[4] = TextDrawCreate(118.726974, 187.841613, Mode_City);
	TextDrawLetterSize(Sphone[4], 0.133936, 0.840037);
	TextDrawAlignment(Sphone[4], 3);
	TextDrawColor(Sphone[4], -1);
	TextDrawSetShadow(Sphone[4], 0);
	TextDrawSetOutline(Sphone[4], 0);
	TextDrawBackgroundColor(Sphone[4], 51);
	TextDrawFont(Sphone[4], 2);
	TextDrawSetProportional(Sphone[4], 1);

	Sphone[5] = TextDrawCreate(85.608688, 200.178070, Mode_Name);
	TextDrawLetterSize(Sphone[5], 0.285032, 1.238911);
	TextDrawAlignment(Sphone[5], 2);
	TextDrawColor(Sphone[5], 255);
	TextDrawSetShadow(Sphone[5], 0);
	TextDrawSetOutline(Sphone[5], 0);
	TextDrawBackgroundColor(Sphone[5], -1);
	TextDrawFont(Sphone[5], 0);
	TextDrawSetProportional(Sphone[5], 1);

	Sphone[6] = TextDrawCreate(121.226715, 218.732406, "usebox");
	TextDrawLetterSize(Sphone[6], 0.000000, 1.057126);
	TextDrawTextSize(Sphone[6], 50.864673, 0.000000);
	TextDrawAlignment(Sphone[6], 1);
	TextDrawColor(Sphone[6], 0);
	TextDrawUseBox(Sphone[6], true);
	TextDrawBoxColor(Sphone[6], 255);
	TextDrawSetShadow(Sphone[6], 0);
	TextDrawSetOutline(Sphone[6], 0);
	TextDrawFont(Sphone[6], 0);

	Sphone[7] = TextDrawCreate(121.226715, 231.488800, "usebox");
	TextDrawLetterSize(Sphone[7], 0.000000, 1.057126);
	TextDrawTextSize(Sphone[7], 50.864673, 0.000000);
	TextDrawAlignment(Sphone[7], 1);
	TextDrawColor(Sphone[7], 0);
	TextDrawUseBox(Sphone[7], true);
	TextDrawBoxColor(Sphone[7], 255);
	TextDrawSetShadow(Sphone[7], 0);
	TextDrawSetOutline(Sphone[7], 0);
	TextDrawFont(Sphone[7], 0);

	Sphone[8] = TextDrawCreate(121.226715, 244.245300, "usebox");
	TextDrawLetterSize(Sphone[8], 0.000000, 1.057126);
	TextDrawTextSize(Sphone[8], 50.864673, 0.000000);
	TextDrawAlignment(Sphone[8], 1);
	TextDrawColor(Sphone[8], 0);
	TextDrawUseBox(Sphone[8], true);
	TextDrawBoxColor(Sphone[8], 255);
	TextDrawSetShadow(Sphone[8], 0);
	TextDrawSetOutline(Sphone[8], 0);
	TextDrawFont(Sphone[8], 0);

	Sphone[9] = TextDrawCreate(121.226715, 257.001617, "usebox");
	TextDrawLetterSize(Sphone[9], 0.000000, 1.057126);
	TextDrawTextSize(Sphone[9], 50.864673, 0.000000);
	TextDrawAlignment(Sphone[9], 1);
	TextDrawColor(Sphone[9], 0);
	TextDrawUseBox(Sphone[9], true);
	TextDrawBoxColor(Sphone[9], 255);
	TextDrawSetShadow(Sphone[9], 0);
	TextDrawSetOutline(Sphone[9], 0);
	TextDrawFont(Sphone[9], 0);

	Sphone[10] = TextDrawCreate(121.226715, 269.757904, "usebox");
	TextDrawLetterSize(Sphone[10], 0.000000, 1.057126);
	TextDrawTextSize(Sphone[10], 50.864673, 0.000000);
	TextDrawAlignment(Sphone[10], 1);
	TextDrawColor(Sphone[10], 0);
	TextDrawUseBox(Sphone[10], true);
	TextDrawBoxColor(Sphone[10], 255);
	TextDrawSetShadow(Sphone[10], 0);
	TextDrawSetOutline(Sphone[10], 0);
	TextDrawFont(Sphone[10], 0);

	Sphone[11] = TextDrawCreate(121.226715, 282.514373, "usebox");
	TextDrawLetterSize(Sphone[11], 0.000000, 1.057126);
	TextDrawTextSize(Sphone[11], 50.864673, 0.000000);
	TextDrawAlignment(Sphone[11], 1);
	TextDrawColor(Sphone[11], 0);
	TextDrawUseBox(Sphone[11], true);
	TextDrawBoxColor(Sphone[11], 255);
	TextDrawSetShadow(Sphone[11], 0);
	TextDrawSetOutline(Sphone[11], 0);
	TextDrawFont(Sphone[11], 0);

	Sphone[12] = TextDrawCreate(121.226715, 294.850677, "usebox");
	TextDrawLetterSize(Sphone[12], 0.000000, 1.057126);
	TextDrawTextSize(Sphone[12], 50.864673, 0.000000);
	TextDrawAlignment(Sphone[12], 1);
	TextDrawColor(Sphone[12], 0);
	TextDrawUseBox(Sphone[12], true);
	TextDrawBoxColor(Sphone[12], 255);
	TextDrawSetShadow(Sphone[12], 0);
	TextDrawSetOutline(Sphone[12], 0);
	TextDrawFont(Sphone[12], 0);

	SphoneKey[0] = TextDrawCreate(85.858207, 218.751693, "CONTACTS");
	TextDrawLetterSize(SphoneKey[0], 0.148933, 0.949203);
	TextDrawTextSize(SphoneKey[0], 12.000000, 60.000000);
	TextDrawAlignment(SphoneKey[0], 2);
	TextDrawColor(SphoneKey[0], -1);
	TextDrawSetShadow(SphoneKey[0], 0);
	TextDrawSetOutline(SphoneKey[0], 0);
	TextDrawBackgroundColor(SphoneKey[0], 51);
	TextDrawFont(SphoneKey[0], 2);
	TextDrawSetProportional(SphoneKey[0], 1);
	TextDrawSetSelectable(SphoneKey[0], true);

	SphoneKey[1] = TextDrawCreate(85.858207, 231.088180, "MESSAGES");
	TextDrawLetterSize(SphoneKey[1], 0.148933, 0.949203);
	TextDrawTextSize(SphoneKey[1], 12.000000, 60.000000);
	TextDrawAlignment(SphoneKey[1], 2);
	TextDrawColor(SphoneKey[1], -1);
	TextDrawSetShadow(SphoneKey[1], 0);
	TextDrawSetOutline(SphoneKey[1], 0);
	TextDrawBackgroundColor(SphoneKey[1], 51);
	TextDrawFont(SphoneKey[1], 2);
	TextDrawSetProportional(SphoneKey[1], 1);
	TextDrawSetSelectable(SphoneKey[1], true);

	SphoneKey[2] = TextDrawCreate(85.858207, 244.264450, "DIAL");
	TextDrawLetterSize(SphoneKey[2], 0.148933, 0.949203);
	TextDrawTextSize(SphoneKey[2], 12.000000, 60.000000);
	TextDrawAlignment(SphoneKey[2], 2);
	TextDrawColor(SphoneKey[2], -1);
	TextDrawSetShadow(SphoneKey[2], 0);
	TextDrawSetOutline(SphoneKey[2], 0);
	TextDrawBackgroundColor(SphoneKey[2], 51);
	TextDrawFont(SphoneKey[2], 2);
	TextDrawSetProportional(SphoneKey[2], 1);
	TextDrawSetSelectable(SphoneKey[2], true);

	SphoneKey[3] = TextDrawCreate(85.858207, 256.600891, "ROULETTE");
	TextDrawLetterSize(SphoneKey[3], 0.148933, 0.949203);
	TextDrawTextSize(SphoneKey[3], 12.000000, 60.000000);
	TextDrawAlignment(SphoneKey[3], 2);
	TextDrawColor(SphoneKey[3], -1);
	TextDrawSetShadow(SphoneKey[3], 0);
	TextDrawSetOutline(SphoneKey[3], 0);
	TextDrawBackgroundColor(SphoneKey[3], 51);
	TextDrawFont(SphoneKey[3], 2);
	TextDrawSetProportional(SphoneKey[3], 1);
	TextDrawSetSelectable(SphoneKey[3], true);

	SphoneKey[4] = TextDrawCreate(85.858207, 269.357238, "SETTINGS");
	TextDrawLetterSize(SphoneKey[4], 0.148933, 0.949203);
	TextDrawTextSize(SphoneKey[4], 12.000000, 60.000000);
	TextDrawAlignment(SphoneKey[4], 2);
	TextDrawColor(SphoneKey[4], -868543745);
	TextDrawSetShadow(SphoneKey[4], 0);
	TextDrawSetOutline(SphoneKey[4], 0);
	TextDrawBackgroundColor(SphoneKey[4], 51);
	TextDrawFont(SphoneKey[4], 2);
	TextDrawSetProportional(SphoneKey[4], 1);
	TextDrawSetSelectable(SphoneKey[4], true);

	SphoneKey[5] = TextDrawCreate(85.858207, 282.113647, "~g~ON~w~/~r~OFF ~w~PHONE");
	TextDrawLetterSize(SphoneKey[5], 0.148933, 0.949203);
	TextDrawTextSize(SphoneKey[5], 12.000000, 60.000000);
	TextDrawAlignment(SphoneKey[5], 2);
	TextDrawColor(SphoneKey[5], -1);
	TextDrawSetShadow(SphoneKey[5], 0);
	TextDrawSetOutline(SphoneKey[5], 0);
	TextDrawBackgroundColor(SphoneKey[5], 51);
	TextDrawFont(SphoneKey[5], 2);
	TextDrawSetProportional(SphoneKey[5], 1);
	TextDrawSetSelectable(SphoneKey[5], true);

	SphoneKey[6] = TextDrawCreate(85.858207, 294.869934, "~y~HIDE PHONE");
	TextDrawLetterSize(SphoneKey[6], 0.148933, 0.949203);
	TextDrawTextSize(SphoneKey[6], 12.000000, 60.000000);
	TextDrawAlignment(SphoneKey[6], 2);
	TextDrawColor(SphoneKey[6], -1);
	TextDrawSetShadow(SphoneKey[6], 0);
	TextDrawSetOutline(SphoneKey[6], 0);
	TextDrawBackgroundColor(SphoneKey[6], 51);
	TextDrawFont(SphoneKey[6], 2);
	TextDrawSetProportional(SphoneKey[6], 1);
	TextDrawSetSelectable(SphoneKey[6], true);
	
	SphoneKey[7] = TextDrawCreate(121.101943, 203.617172, "line_for_number");
	TextDrawLetterSize(SphoneKey[7], 0.000000, 1.094616);
	TextDrawTextSize(SphoneKey[7], 50.864673, 0.000000);
	TextDrawAlignment(SphoneKey[7], 1);
	TextDrawColor(SphoneKey[7], 0);
	TextDrawUseBox(SphoneKey[7], true);
	TextDrawBoxColor(SphoneKey[7], 255);
	TextDrawSetShadow(SphoneKey[7], 0);
	TextDrawSetOutline(SphoneKey[7], 0);
	TextDrawFont(SphoneKey[7], 0);

	SphoneKey[8] = TextDrawCreate(86.233177, 218.347549, "2");
	TextDrawLetterSize(SphoneKey[8], 0.449999, 1.600000);
	TextDrawTextSize(SphoneKey[8], 18.000000, 9.000000);
	TextDrawAlignment(SphoneKey[8], 2);
	TextDrawColor(SphoneKey[8], 255);
	TextDrawSetShadow(SphoneKey[8], 0);
	TextDrawSetOutline(SphoneKey[8], 0);
	TextDrawBackgroundColor(SphoneKey[8], 51);
	TextDrawFont(SphoneKey[8], 3);
	TextDrawSetProportional(SphoneKey[8], 1);
	TextDrawSetSelectable(SphoneKey[8], true);

	SphoneKey[9] = TextDrawCreate(86.233177, 232.347549, "5");
	TextDrawLetterSize(SphoneKey[9], 0.449999, 1.600000);
	TextDrawTextSize(SphoneKey[9], 16.000000, 9.000000);
	TextDrawAlignment(SphoneKey[9], 2);
	TextDrawColor(SphoneKey[9], 255);
	TextDrawSetShadow(SphoneKey[9], 0);
	TextDrawSetOutline(SphoneKey[9], 0);
	TextDrawBackgroundColor(SphoneKey[9], 51);
	TextDrawFont(SphoneKey[9], 3);
	TextDrawSetProportional(SphoneKey[9], 1);
	TextDrawSetSelectable(SphoneKey[9], true);

	SphoneKey[10] = TextDrawCreate(86.233177, 246.347549, "8");
	TextDrawLetterSize(SphoneKey[10], 0.449999, 1.600000);
	TextDrawTextSize(SphoneKey[10], 16.000000, 9.000000);
	TextDrawAlignment(SphoneKey[10], 2);
	TextDrawColor(SphoneKey[10], 255);
	TextDrawSetShadow(SphoneKey[10], 0);
	TextDrawSetOutline(SphoneKey[10], 0);
	TextDrawBackgroundColor(SphoneKey[10], 51);
	TextDrawFont(SphoneKey[10], 3);
	TextDrawSetProportional(SphoneKey[10], 1);
	TextDrawSetSelectable(SphoneKey[10], true);

	SphoneKey[11] = TextDrawCreate(86.233177, 260.347549, "0");
	TextDrawLetterSize(SphoneKey[11], 0.449999, 1.600000);
	TextDrawTextSize(SphoneKey[11], 16.000000, 9.000000);
	TextDrawAlignment(SphoneKey[11], 2);
	TextDrawColor(SphoneKey[11], 255);
	TextDrawSetShadow(SphoneKey[11], 0);
	TextDrawSetOutline(SphoneKey[11], 0);
	TextDrawBackgroundColor(SphoneKey[11], 51);
	TextDrawFont(SphoneKey[11], 3);
	TextDrawSetProportional(SphoneKey[11], 1);
	TextDrawSetSelectable(SphoneKey[11], true);

	SphoneKey[12] = TextDrawCreate(63.613395, 218.347549, "1");
	TextDrawLetterSize(SphoneKey[12], 0.449999, 1.600000);
	TextDrawTextSize(SphoneKey[12], 16.000000, 9.000000);
	TextDrawAlignment(SphoneKey[12], 2);
	TextDrawColor(SphoneKey[12], 255);
	TextDrawSetShadow(SphoneKey[12], 0);
	TextDrawSetOutline(SphoneKey[12], 0);
	TextDrawBackgroundColor(SphoneKey[12], 51);
	TextDrawFont(SphoneKey[12], 3);
	TextDrawSetProportional(SphoneKey[12], 1);
	TextDrawSetSelectable(SphoneKey[12], true);

	SphoneKey[13] = TextDrawCreate(63.613395, 232.347549, "4");
	TextDrawLetterSize(SphoneKey[13], 0.449999, 1.600000);
	TextDrawTextSize(SphoneKey[13], 16.000000, 9.000000);
	TextDrawAlignment(SphoneKey[13], 2);
	TextDrawColor(SphoneKey[13], 255);
	TextDrawSetShadow(SphoneKey[13], 0);
	TextDrawSetOutline(SphoneKey[13], 0);
	TextDrawBackgroundColor(SphoneKey[13], 51);
	TextDrawFont(SphoneKey[13], 3);
	TextDrawSetProportional(SphoneKey[13], 1);
	TextDrawSetSelectable(SphoneKey[13], true);

	SphoneKey[14] = TextDrawCreate(63.613395, 246.347549, "7");
	TextDrawLetterSize(SphoneKey[14], 0.449999, 1.600000);
	TextDrawTextSize(SphoneKey[14], 16.000000, 9.000000);
	TextDrawAlignment(SphoneKey[14], 2);
	TextDrawColor(SphoneKey[14], 255);
	TextDrawSetShadow(SphoneKey[14], 0);
	TextDrawSetOutline(SphoneKey[14], 0);
	TextDrawBackgroundColor(SphoneKey[14], 51);
	TextDrawFont(SphoneKey[14], 3);
	TextDrawSetProportional(SphoneKey[14], 1);
	TextDrawSetSelectable(SphoneKey[14], true);

	SphoneKey[15] = TextDrawCreate(108.605194, 218.347549, "3");
	TextDrawLetterSize(SphoneKey[15], 0.449999, 1.600000);
	TextDrawTextSize(SphoneKey[15], 16.000000, 9.000000);
	TextDrawAlignment(SphoneKey[15], 2);
	TextDrawColor(SphoneKey[15], 255);
	TextDrawSetShadow(SphoneKey[15], 0);
	TextDrawSetOutline(SphoneKey[15], 0);
	TextDrawBackgroundColor(SphoneKey[15], 51);
	TextDrawFont(SphoneKey[15], 3);
	TextDrawSetProportional(SphoneKey[15], 1);
	TextDrawSetSelectable(SphoneKey[15], true);

	SphoneKey[16] = TextDrawCreate(108.605194, 232.347549, "6");
	TextDrawLetterSize(SphoneKey[16], 0.449999, 1.600000);
	TextDrawTextSize(SphoneKey[16], 16.000000, 9.000000);
	TextDrawAlignment(SphoneKey[16], 2);
	TextDrawColor(SphoneKey[16], 255);
	TextDrawSetShadow(SphoneKey[16], 0);
	TextDrawSetOutline(SphoneKey[16], 0);
	TextDrawBackgroundColor(SphoneKey[16], 51);
	TextDrawFont(SphoneKey[16], 3);
	TextDrawSetProportional(SphoneKey[16], 1);
	TextDrawSetSelectable(SphoneKey[16], true);

	SphoneKey[17] = TextDrawCreate(108.605194, 246.347549, "9");
	TextDrawLetterSize(SphoneKey[17], 0.449999, 1.600000);
	TextDrawTextSize(SphoneKey[17], 16.000000, 9.000000);
	TextDrawAlignment(SphoneKey[17], 2);
	TextDrawColor(SphoneKey[17], 255);
	TextDrawSetShadow(SphoneKey[17], 0);
	TextDrawSetOutline(SphoneKey[17], 0);
	TextDrawBackgroundColor(SphoneKey[17], 51);
	TextDrawFont(SphoneKey[17], 3);
	TextDrawSetProportional(SphoneKey[17], 1);
	TextDrawSetSelectable(SphoneKey[17], true);

	SphoneKey[18] = TextDrawCreate(86.358505, 277.000000, "usebox");
	TextDrawLetterSize(SphoneKey[18], 0.000000, 0.989594);
	TextDrawTextSize(SphoneKey[18], 50.864677, 0.000000);
	TextDrawAlignment(SphoneKey[18], 1);
	TextDrawColor(SphoneKey[18], 0);
	TextDrawUseBox(SphoneKey[18], true);
	TextDrawBoxColor(SphoneKey[18], 255);
	TextDrawSetShadow(SphoneKey[18], 0);
	TextDrawSetOutline(SphoneKey[18], 0);
	TextDrawFont(SphoneKey[18], 0);

	SphoneKey[19] = TextDrawCreate(121.358505, 277.000000, "usebox");
	TextDrawLetterSize(SphoneKey[19], 0.000000, 0.989594);
	TextDrawTextSize(SphoneKey[19], 85.864677, 0.000000);
	TextDrawAlignment(SphoneKey[19], 1);
	TextDrawColor(SphoneKey[19], 0);
	TextDrawUseBox(SphoneKey[19], true);
	TextDrawBoxColor(SphoneKey[19], 255);
	TextDrawSetShadow(SphoneKey[19], 0);
	TextDrawSetOutline(SphoneKey[19], 0);
	TextDrawFont(SphoneKey[19], 0);

	SphoneKey[20] = TextDrawCreate(68.986511, 276.273590, "CALL");
	TextDrawLetterSize(SphoneKey[20], 0.147809, 1.003786);
	TextDrawTextSize(SphoneKey[20], 12.000000, 40.000000);
	TextDrawAlignment(SphoneKey[20], 2);
	TextDrawColor(SphoneKey[20], 1453874943);
	TextDrawSetShadow(SphoneKey[20], 0);
	TextDrawSetOutline(SphoneKey[20], 0);
	TextDrawBackgroundColor(SphoneKey[20], 51);
	TextDrawFont(SphoneKey[20], 2);
	TextDrawSetProportional(SphoneKey[20], 1);
	TextDrawSetSelectable(SphoneKey[20], true);

	SphoneKey[21] = TextDrawCreate(104.479782, 276.273590, "CLEAR");
	TextDrawLetterSize(SphoneKey[21], 0.147809, 1.003786);
	TextDrawTextSize(SphoneKey[21], 12.000000, 40.000000);
	TextDrawAlignment(SphoneKey[21], 2);
	TextDrawColor(SphoneKey[21], -3342081);
	TextDrawSetShadow(SphoneKey[21], 0);
	TextDrawSetOutline(SphoneKey[21], 0);
	TextDrawBackgroundColor(SphoneKey[21], 51);
	TextDrawFont(SphoneKey[21], 2);
	TextDrawSetProportional(SphoneKey[21], 1);
	TextDrawSetSelectable(SphoneKey[21], true);

	SphoneKey[22] = TextDrawCreate(85.983589, 292.129150, "<<< BACK");
	TextDrawLetterSize(SphoneKey[22], 0.147809, 1.003786);
	TextDrawTextSize(SphoneKey[22], 12.000000, 60.000000);
	TextDrawAlignment(SphoneKey[22], 2);
	TextDrawColor(SphoneKey[22], 255);
	TextDrawSetShadow(SphoneKey[22], 0);
	TextDrawSetOutline(SphoneKey[22], 0);
	TextDrawBackgroundColor(SphoneKey[22], 51);
	TextDrawFont(SphoneKey[22], 2);
	TextDrawSetProportional(SphoneKey[22], 1);
	TextDrawSetSelectable(SphoneKey[22], true);

	Calling[0] = TextDrawCreate(53.000000, 262.577789, "LD_SPAC:white");
	TextDrawLetterSize(Calling[0], 0.000000, 0.000000);
	TextDrawTextSize(Calling[0], 31.333335, 14.518524);
	TextDrawAlignment(Calling[0], 1);
	TextDrawColor(Calling[0], 255);
	TextDrawSetShadow(Calling[0], 0);
	TextDrawSetOutline(Calling[0], 0);
	TextDrawFont(Calling[0], 4);
	TextDrawSetSelectable( Calling[0], 1);

	Calling[1] = TextDrawCreate(87.666671, 262.577789, "LD_SPAC:white");
	TextDrawLetterSize(Calling[1], 0.000000, 0.000000);
	TextDrawTextSize(Calling[1], 31.333335, 14.518524);
	TextDrawAlignment(Calling[1], 1);
	TextDrawColor(Calling[1], 255);
	TextDrawSetShadow(Calling[1], 0);
	TextDrawSetOutline(Calling[1], 0);
	TextDrawFont(Calling[1], 4);
	TextDrawSetSelectable(Calling[1], 1);

	Calling[2] = TextDrawCreate(69.000022, 265.237182, "PICK");
	TextDrawLetterSize(Calling[2], 0.126665, 0.874073);
	TextDrawAlignment(Calling[2], 2);
	TextDrawColor(Calling[2], -1);
	TextDrawSetShadow(Calling[2], 0);
	TextDrawSetOutline(Calling[2], 0);
	TextDrawBackgroundColor(Calling[2], 51);
	TextDrawFont(Calling[2], 2);
	TextDrawSetProportional(Calling[2], 1);

	Calling[3] = TextDrawCreate(104.333351, 265.237182, "DECLINE");
	TextDrawLetterSize(Calling[3], 0.126665, 0.874073);
	TextDrawAlignment(Calling[3], 2);
	TextDrawColor(Calling[3], -650034689);
	TextDrawSetShadow(Calling[3], 0);
	TextDrawSetOutline(Calling[3], 0);
	TextDrawBackgroundColor(Calling[3], 51);
	TextDrawFont(Calling[3], 2);
	TextDrawSetProportional(Calling[3], 1);
	//////
	/////////////phonekey
	kbox[0] = TextDrawCreate(481.000000, 370.000000, "_");
	TextDrawBackgroundColor(kbox[0], 255);
	TextDrawFont(kbox[0], 1);
	TextDrawLetterSize(kbox[0], 0.500000, 7.099999);
	TextDrawColor(kbox[0], -1);
	TextDrawSetOutline(kbox[0], 0);
	TextDrawSetProportional(kbox[0], 1);
	TextDrawSetShadow(kbox[0], 1);
	TextDrawUseBox(kbox[0], 1);
	TextDrawBoxColor(kbox[0], 255);
	TextDrawTextSize(kbox[0], 631.000000, 0.000000);
	TextDrawSetSelectable(kbox[0], 0);

	kbox[1] = TextDrawCreate(483.000000, 373.000000, "_");
	TextDrawBackgroundColor(kbox[1], 255);
	TextDrawFont(kbox[1], 1);
	TextDrawLetterSize(kbox[1], 0.500000, 6.500000);
	TextDrawColor(kbox[1], -1);
	TextDrawSetOutline(kbox[1], 0);
	TextDrawSetProportional(kbox[1], 1);
	TextDrawSetShadow(kbox[1], 1);
	TextDrawUseBox(kbox[1], 1);
	TextDrawBoxColor(kbox[1], -1456788481);
	TextDrawTextSize(kbox[1], 629.000000, 0.000000);
	TextDrawSetSelectable(kbox[1], 0);
	////////////////////////////
	Bandito[0] = TextDrawCreate(320.000000, 225.000000, "usebox");
	TextDrawLetterSize(Bandito[0], 0.006372, 6.573379);
	TextDrawTextSize(Bandito[0], 316.312957, 63.400215);
	TextDrawAlignment(Bandito[0], 2);
	TextDrawColor(Bandito[0], 0);
	TextDrawUseBox(Bandito[0], true);
	TextDrawBoxColor(Bandito[0], -650034689);
	TextDrawSetShadow(Bandito[0], 0);
	TextDrawSetOutline(Bandito[0], 0);
	TextDrawFont(Bandito[0], 1);

	Bandito[1] = TextDrawCreate(320.000000, 226.000000, "usebox");
	TextDrawLetterSize(Bandito[1], 0.004499, 6.313055);
	TextDrawTextSize(Bandito[1], 306.189941, 61.300865);
	TextDrawAlignment(Bandito[1], 2);
	TextDrawColor(Bandito[1], 0);
	TextDrawUseBox(Bandito[1], true);
	TextDrawBoxColor(Bandito[1], 572662527);
	TextDrawSetShadow(Bandito[1], 0);
	TextDrawSetOutline(Bandito[1], 0);
	TextDrawFont(Bandito[1], 1);

	Bandito[2] = TextDrawCreate(320.000000, 264.000000, "BALANCE");
	TextDrawLetterSize(Bandito[2], 0.118564, 0.747666);
	TextDrawAlignment(Bandito[2], 2);
	TextDrawColor(Bandito[2], -1);
	TextDrawSetShadow(Bandito[2], 0);
	TextDrawSetOutline(Bandito[2], 0);
	TextDrawBackgroundColor(Bandito[2], 51);
	TextDrawFont(Bandito[2], 2);
	TextDrawSetProportional(Bandito[2], 1);

	Bandito[3] = TextDrawCreate(320.000000, 228.000000, "BET");
	TextDrawLetterSize(Bandito[3], 0.118564, 0.747666);
	TextDrawAlignment(Bandito[3], 2);
	TextDrawColor(Bandito[3], -1);
	TextDrawSetShadow(Bandito[3], 0);
	TextDrawSetOutline(Bandito[3], 0);
	TextDrawBackgroundColor(Bandito[3], 51);
	TextDrawFont(Bandito[3], 2);
	TextDrawSetProportional(Bandito[3], 1);

	Bandito[4] = TextDrawCreate(288.700000, 234.300000, "LEFT ARROW");
	TextDrawLetterSize(Bandito[4], 0.449999, 1.600000);
	TextDrawTextSize(Bandito[4], 13.872278, 17.634489);
	TextDrawAlignment(Bandito[4], 1);
	TextDrawColor(Bandito[4], -1);
	TextDrawUseBox(Bandito[4], true);
	TextDrawBoxColor(Bandito[4], 0);
	TextDrawSetShadow(Bandito[4], 0);
	TextDrawSetOutline(Bandito[4], 1);
	TextDrawBackgroundColor(Bandito[4], 0x00000000);
	TextDrawFont(Bandito[4], 5);
	TextDrawSetProportional(Bandito[4], 1);
	TextDrawSetSelectable(Bandito[4], true);
	TextDrawSetPreviewModel(Bandito[4], 19133);
	TextDrawSetPreviewRot(Bandito[4], 0.000000, -90.000000, 90.000000, 1.000000);

	Bandito[5] = TextDrawCreate(320.00000, 251.50000, "SPIN");
	TextDrawLetterSize(Bandito[5], 0.232538, 0.974394);
	TextDrawTextSize(Bandito[5], 11.997653, 57.102134);
	TextDrawAlignment(Bandito[5], 2);
	TextDrawColor(Bandito[5], 572662527);
	TextDrawUseBox(Bandito[5], true);
	TextDrawBoxColor(Bandito[5], -650034689);
	TextDrawSetShadow(Bandito[5], 0);
	TextDrawSetOutline(Bandito[5], 0);
	TextDrawBackgroundColor(Bandito[5], -650034689);
	TextDrawFont(Bandito[5], 3);
	TextDrawSetProportional(Bandito[5], 1);
	TextDrawSetSelectable(Bandito[5], true);
	TextDrawSetPreviewModel(Bandito[5], 0);
	TextDrawSetPreviewRot(Bandito[5], 0.000000, 0.000000, 0.000000, 0.000000);

	Bandito[6] = TextDrawCreate(337.700000, 234.300000, "RIGHT ARROW");
	TextDrawLetterSize(Bandito[6], 0.449999, 1.600000);
	TextDrawTextSize(Bandito[6], 13.872278, 17.634489);
	TextDrawAlignment(Bandito[6], 1);
	TextDrawColor(Bandito[6], -1);
	TextDrawUseBox(Bandito[6], true);
	TextDrawBoxColor(Bandito[6], 0);
	TextDrawSetShadow(Bandito[6], 0);
	TextDrawSetOutline(Bandito[6], 1);
	TextDrawBackgroundColor(Bandito[6], 0x00000000);
	TextDrawFont(Bandito[6], 5);
	TextDrawSetProportional(Bandito[6], 1);
	TextDrawSetSelectable(Bandito[6], true);
	TextDrawSetPreviewModel(Bandito[6], 19133);
	TextDrawSetPreviewRot(Bandito[6], 0.000000, 90.000000, 90.000000, 1.000000);

	Bandito[7] = TextDrawCreate(334.000000, 264.000000, "usebox");
	TextDrawLetterSize(Bandito[7], 0.000000, -0.130058);
	TextDrawTextSize(Bandito[7], 304.690093, 0.000000);
	TextDrawAlignment(Bandito[7], 1);
	TextDrawColor(Bandito[7], 0);
	TextDrawUseBox(Bandito[7], true);
	TextDrawBoxColor(Bandito[7], -650034689);
	TextDrawSetShadow(Bandito[7], 0);
	TextDrawSetOutline(Bandito[7], 0);
	TextDrawFont(Bandito[7], 3);

	Bandito[8] = TextDrawCreate(342.683135, 215.392745, "CLOSE");
	TextDrawLetterSize(Bandito[8], 0.128687, 0.827441);
	TextDrawTextSize(Bandito[8], 8.998240, 18.054357);
	TextDrawAlignment(Bandito[8], 2);
	TextDrawColor(Bandito[8], 572662527);
	TextDrawUseBox(Bandito[8], true);
	TextDrawBoxColor(Bandito[8], -650034689);
	TextDrawSetShadow(Bandito[8], 0);
	TextDrawSetOutline(Bandito[8], 0);
	TextDrawBackgroundColor(Bandito[8], 51);
	TextDrawFont(Bandito[8], 2);
	TextDrawSetProportional(Bandito[8], 1);
	TextDrawSetSelectable(Bandito[8], true);
	////////////////////////////

	klick[0] = TextDrawCreate(320.000000, 180.000000, "usebox");
	TextDrawLetterSize(klick[0], 0.013122, 11.776023);
	TextDrawTextSize(klick[0], 317.062683, 121.342071);
	TextDrawAlignment(klick[0], 2);
	TextDrawColor(klick[0], 0);
	TextDrawUseBox(klick[0], true);
	TextDrawBoxColor(klick[0], 572662527);
	TextDrawSetShadow(klick[0], 0);
	TextDrawSetOutline(klick[0], 0);
	TextDrawFont(klick[0], 1);

	klick[1] = TextDrawCreate(320.000000, 181.000000, "usebox");
	TextDrawLetterSize(klick[1], 0.025120, 11.557688);
	TextDrawTextSize(klick[1], 317.812561, 119.242729);
	TextDrawAlignment(klick[1], 2);
	TextDrawColor(klick[1], 0);
	TextDrawUseBox(klick[1], true);
	TextDrawBoxColor(klick[1], -218446849);
	TextDrawSetShadow(klick[1], 0);
	TextDrawSetOutline(klick[1], 0);
	TextDrawFont(klick[1], 1);

	klick[2] = TextDrawCreate(320.000000, 183.000000, "usebox");
	TextDrawLetterSize(klick[2], 0.173591, 1.724360);
	TextDrawTextSize(klick[2], 314.813079, 76.416145);
	TextDrawAlignment(klick[2], 2);
	TextDrawColor(klick[2], 0);
	TextDrawUseBox(klick[2], true);
	TextDrawBoxColor(klick[2], 572662527);
	TextDrawSetShadow(klick[2], 0);
	TextDrawSetOutline(klick[2], 0);
	TextDrawFont(klick[2], 3);

	klick[3] = TextDrawCreate(262.073822, 201.537063, "LD_SPAC:white");
	TextDrawLetterSize(klick[3], 0.000000, 0.000000);
	TextDrawTextSize(klick[3], 115.477447, 0.839736);
	TextDrawAlignment(klick[3], 1);
	TextDrawColor(klick[3], 572662527);
	TextDrawSetShadow(klick[3], 0);
	TextDrawSetOutline(klick[3], 0);
	TextDrawFont(klick[3], 4);

	klick[4] = TextDrawCreate(262.698883, 232.767730, "LD_SPAC:white");
	TextDrawLetterSize(klick[4], 0.000000, 0.000000);
	TextDrawTextSize(klick[4], 115.477447, 0.839736);
	TextDrawAlignment(klick[4], 1);
	TextDrawColor(klick[4], 572662527);
	TextDrawSetShadow(klick[4], 0);
	TextDrawSetOutline(klick[4], 0);
	TextDrawFont(klick[4], 4);

	klick[5] = TextDrawCreate(262.199127, 263.578521, "LD_SPAC:white");
	TextDrawLetterSize(klick[5], 0.000000, 0.000000);
	TextDrawTextSize(klick[5], 115.477447, 0.839736);
	TextDrawAlignment(klick[5], 1);
	TextDrawColor(klick[5], 572662527);
	TextDrawSetShadow(klick[5], 0);
	TextDrawSetOutline(klick[5], 0);
	TextDrawFont(klick[5], 4);

	klick[6] = TextDrawCreate(298.441741, 201.537017, "LD_SPAC:white");
	TextDrawLetterSize(klick[6], 0.000000, 0.000000);
	TextDrawTextSize(klick[6], 0.374938, 62.980323);
	TextDrawAlignment(klick[6], 1);
	TextDrawColor(klick[6], 572662527);
	TextDrawSetShadow(klick[6], 0);
	TextDrawSetOutline(klick[6], 0);
	TextDrawFont(klick[6], 4);

	klick[7] = TextDrawCreate(339.184020, 201.697280, "LD_SPAC:white");
	TextDrawLetterSize(klick[7], 0.000000, 0.000000);
	TextDrawTextSize(klick[7], 0.374938, 62.560455);
	TextDrawAlignment(klick[7], 1);
	TextDrawColor(klick[7], 572662527);
	TextDrawSetShadow(klick[7], 0);
	TextDrawSetOutline(klick[7], 0);
	TextDrawFont(klick[7], 4);

	klick[8] = TextDrawCreate(261.948852, 201.697265, "LD_SPAC:white");
	TextDrawLetterSize(klick[8], 0.000000, 0.000000);
	TextDrawTextSize(klick[8], 0.374938, 62.560455);
	TextDrawAlignment(klick[8], 1);
	TextDrawColor(klick[8], 572662527);
	TextDrawSetShadow(klick[8], 0);
	TextDrawSetOutline(klick[8], 0);
	TextDrawFont(klick[8], 4);

	klick[9] = TextDrawCreate(377.676391, 201.437713, "LD_SPAC:white");
	TextDrawLetterSize(klick[9], 0.000000, 0.000000);
	TextDrawTextSize(klick[9], 0.374938, 62.980323);
	TextDrawAlignment(klick[9], 1);
	TextDrawColor(klick[9], 572662527);
	TextDrawSetShadow(klick[9], 0);
	TextDrawSetOutline(klick[9], 0);
	TextDrawFont(klick[9], 4);

	klick[10] = TextDrawCreate(320.187835, 268.357147, "LD_SPAC:white");
	TextDrawLetterSize(klick[10], 0.000000, 0.000000);
	TextDrawTextSize(klick[10], 0.374938, 14.695410);
	TextDrawAlignment(klick[10], 1);
	TextDrawColor(klick[10], 572662527);
	TextDrawSetShadow(klick[10], 0);
	TextDrawSetOutline(klick[10], 0);
	TextDrawFont(klick[10], 4);

	klick[11] = TextDrawCreate(375.802001, 268.116668, "usebox");
	TextDrawLetterSize(klick[11], 0.000000, 1.549418);
	TextDrawTextSize(klick[11], 324.561218, 0.000000);
	TextDrawAlignment(klick[11], 1);
	TextDrawColor(klick[11], 0);
	TextDrawUseBox(klick[11], true);
	TextDrawBoxColor(klick[11], -868543745);
	TextDrawSetShadow(klick[11], 0);
	TextDrawSetOutline(klick[11], 0);
	TextDrawFont(klick[11], 0);

	klick[12] = TextDrawCreate(315.688934, 268.276947, "usebox");
	TextDrawLetterSize(klick[12], 0.000000, 1.549418);
	TextDrawTextSize(klick[12], 263.448150, 0.000000);
	TextDrawAlignment(klick[12], 1);
	TextDrawColor(klick[12], 0);
	TextDrawUseBox(klick[12], true);
	TextDrawBoxColor(klick[12], 1453874943);
	TextDrawSetShadow(klick[12], 0);
	TextDrawSetOutline(klick[12], 0);
	TextDrawFont(klick[12], 1);

	klick[13] = TextDrawCreate(280.0000, 204.896011, "_");
	TextDrawLetterSize(klick[13], 0.520111, 2.485923);
	TextDrawTextSize(klick[13], 18.0,18.0);
	TextDrawAlignment(klick[13], 2);
	TextDrawColor(klick[13], 255);
	TextDrawSetShadow(klick[13], 0);
	TextDrawSetOutline(klick[13], 1);
	TextDrawBackgroundColor(klick[13], 1453874943);
	TextDrawFont(klick[13], 3);
	TextDrawSetProportional(klick[13], 1);
	TextDrawSetSelectable(klick[13], true);

	klick[14] = TextDrawCreate(320.0000, 204.896011, "_");
	TextDrawLetterSize(klick[14], 0.520111, 2.485923);
	TextDrawTextSize(klick[14], 18.0,18.0);
	TextDrawAlignment(klick[14], 2);
	TextDrawColor(klick[14], 255);
	TextDrawSetShadow(klick[14], 0);
	TextDrawSetOutline(klick[14], 1);
	TextDrawBackgroundColor(klick[14], 1453874943);
	TextDrawFont(klick[14], 3);
	TextDrawSetProportional(klick[14], 1);
	TextDrawSetSelectable(klick[14], true);

	klick[15] = TextDrawCreate(360.0000, 204.896011, "_");
	TextDrawLetterSize(klick[15], 0.520111, 2.485923);
	TextDrawTextSize(klick[15], 18.0,18.0);
	TextDrawAlignment(klick[15], 2);
	TextDrawColor(klick[15], 255);
	TextDrawSetShadow(klick[15], 0);
	TextDrawSetOutline(klick[15], 1);
	TextDrawBackgroundColor(klick[15], 1453874943);
	TextDrawFont(klick[15], 3);
	TextDrawSetProportional(klick[15], 1);
	TextDrawSetSelectable(klick[15], true);

	klick[16] = TextDrawCreate(280.0000, 236.027267, "_");
	TextDrawLetterSize(klick[16], 0.520111, 2.485923);
	TextDrawTextSize(klick[16], 18.0,18.0);
	TextDrawAlignment(klick[16], 2);
	TextDrawColor(klick[16], 255);
	TextDrawSetShadow(klick[16], 0);
	TextDrawSetOutline(klick[16], 1);
	TextDrawBackgroundColor(klick[16], 1453874943);
	TextDrawFont(klick[16], 3);
	TextDrawSetProportional(klick[16], 1);
	TextDrawSetSelectable(klick[16], true);

	klick[17] = TextDrawCreate(320.0000, 236.027267, "_");
	TextDrawLetterSize(klick[17], 0.520111, 2.485923);
	TextDrawTextSize(klick[17], 18.0,18.0);
	TextDrawAlignment(klick[17], 2);
	TextDrawColor(klick[17], 255);
	TextDrawSetShadow(klick[17], 0);
	TextDrawSetOutline(klick[17], 1);
	TextDrawBackgroundColor(klick[17], 1453874943);
	TextDrawFont(klick[17], 3);
	TextDrawSetProportional(klick[17], 1);
	TextDrawSetSelectable(klick[17], true);

	klick[18] = TextDrawCreate(360.0000, 236.027267, "_");
	TextDrawLetterSize(klick[18], 0.520111, 2.485923);
	TextDrawTextSize(klick[18], 18.0,18.0);
	TextDrawAlignment(klick[18], 2);
	TextDrawColor(klick[18], 255);
	TextDrawSetShadow(klick[18], 0);
	TextDrawSetOutline(klick[18], 1);
	TextDrawBackgroundColor(klick[18], 1453874943);
	TextDrawFont(klick[18], 3);
	TextDrawSetProportional(klick[18], 1);
	TextDrawSetSelectable(klick[18], true);

	klick[19] = TextDrawCreate(290.194824, 268.837890, "ACCEPT");
	TextDrawLetterSize(klick[19], 0.213796, 1.230516);
	TextDrawTextSize(klick[19], 16.0,20.0);
	TextDrawAlignment(klick[19], 2);
	TextDrawColor(klick[19], 255);
	TextDrawSetShadow(klick[19], 0);
	TextDrawSetOutline(klick[19], 0);
	TextDrawBackgroundColor(klick[19], 1453874943);
	TextDrawFont(klick[19], 2);
	TextDrawSetProportional(klick[19], 1);
	TextDrawSetSelectable(klick[19], true);

	klick[20] = TextDrawCreate(351.183135, 268.998168, "CLOSE");
	TextDrawLetterSize(klick[20], 0.213796, 1.230516);
	TextDrawTextSize(klick[20], 16.0,20.0);
	TextDrawAlignment(klick[20], 2);
	TextDrawColor(klick[20], 255);
	TextDrawSetShadow(klick[20], 0);
	TextDrawSetOutline(klick[20], 0);
	TextDrawBackgroundColor(klick[20], 1453874943);
	TextDrawFont(klick[20], 2);
	TextDrawSetProportional(klick[20], 1);
	TextDrawSetSelectable(klick[20], true);
	/////
	CheaterList = TextDrawCreate(255.812530, 365.166839, "_");
	TextDrawLetterSize(CheaterList, 0.163733, 0.923332);
	TextDrawAlignment(CheaterList, 1);
	TextDrawColor(CheaterList, -1);
	TextDrawSetShadow(CheaterList, 0);
	TextDrawSetOutline(CheaterList, 0);
	TextDrawBackgroundColor(CheaterList, 0x000000FF);
	TextDrawFont(CheaterList, 2);
	TextDrawSetProportional(CheaterList, 1);
	/******************************Загрузка**************************/
	LoadingTextures[0] = TextDrawCreate(656.997253, -0.179476, "usebox");
	TextDrawLetterSize(LoadingTextures[0], 0.000000, 51.399246);
	TextDrawTextSize(LoadingTextures[0], -1.250146, 0.000000);
	TextDrawAlignment(LoadingTextures[0], 1);
	TextDrawColor(LoadingTextures[0], 0);
	TextDrawUseBox(LoadingTextures[0], true);
	TextDrawBoxColor(LoadingTextures[0], -690767617);
	TextDrawSetShadow(LoadingTextures[0], 0);
	TextDrawSetOutline(LoadingTextures[0], 0);
	TextDrawFont(LoadingTextures[0], 0);
	LoadingTextures[1] = TextDrawCreate(320.000000, 170.000000, "Loading objects");
	TextDrawLetterSize(LoadingTextures[1], 0.449999, 1.600000);
	TextDrawAlignment(LoadingTextures[1], 2);
	TextDrawColor(LoadingTextures[1], 255);
	TextDrawSetShadow(LoadingTextures[1], 0);
	TextDrawSetOutline(LoadingTextures[1], 0);
	TextDrawBackgroundColor(LoadingTextures[1], -1);
	TextDrawFont(LoadingTextures[1], 0);
	TextDrawSetProportional(LoadingTextures[1], 1);
	LoadingTextures[2] = TextDrawCreate(320.000000, 190.000000, "usebox");
	TextDrawLetterSize(LoadingTextures[2], 0.000748, 1.926831);
	TextDrawTextSize(LoadingTextures[2], 323.061523, 101.608230);
	TextDrawAlignment(LoadingTextures[2], 2);
	TextDrawColor(LoadingTextures[2], 0);
	TextDrawUseBox(LoadingTextures[2], true);
	TextDrawBoxColor(LoadingTextures[2], 255);
	TextDrawSetShadow(LoadingTextures[2], 0);
	TextDrawSetOutline(LoadingTextures[2], 0);
	TextDrawFont(LoadingTextures[2], 0);
	/**************************************************/
	//Рулетка телефона
	Roulette[0] = TextDrawCreate(649.873413, -4.798029, "usebox");
	TextDrawLetterSize(Roulette[0], 0.000000, 51.955295);
	TextDrawTextSize(Roulette[0], -5.749267, 0.000000);
	TextDrawAlignment(Roulette[0], 1);
	TextDrawColor(Roulette[0], 0);
	TextDrawUseBox(Roulette[0], true);
	TextDrawBoxColor(Roulette[0], 572662527);
	TextDrawSetShadow(Roulette[0], 0);
	TextDrawSetOutline(Roulette[0], 0);
	TextDrawFont(Roulette[0], 0);

	Roulette[1] = TextDrawCreate(205.459838, 172.146255, "basic");
	TextDrawLetterSize(Roulette[1], 0.449999, 1.600000);
	TextDrawTextSize(Roulette[1], 64.112518, 67.178985);
	TextDrawAlignment(Roulette[1], 3);
	TextDrawColor(Roulette[1], -1);
	TextDrawUseBox(Roulette[1], true);
	TextDrawBoxColor(Roulette[1], 0);
	TextDrawSetShadow(Roulette[1], 0);
	TextDrawSetOutline(Roulette[1], 0);
	TextDrawBackgroundColor(Roulette[1], -1397969665);
	TextDrawFont(Roulette[1], 5);
	TextDrawSetProportional(Roulette[1], 1);
	TextDrawSetSelectable(Roulette[1], true);
	TextDrawSetPreviewModel(Roulette[1], 1210);
	TextDrawSetPreviewRot(Roulette[1], 0.000000, 0.000000, 0.000000, 1.000000);

	Roulette[2] = TextDrawCreate(287.069122, 172.146255, "sweet");
	TextDrawLetterSize(Roulette[2], 0.449999, 1.600000);
	TextDrawTextSize(Roulette[2], 64.112518, 67.178985);
	TextDrawAlignment(Roulette[2], 1);
	TextDrawColor(Roulette[2], -1);
	TextDrawUseBox(Roulette[2], true);
	TextDrawBoxColor(Roulette[2], 0);
	TextDrawSetShadow(Roulette[2], 0);
	TextDrawSetOutline(Roulette[2], 0);
	TextDrawBackgroundColor(Roulette[2], -6749953);
	TextDrawFont(Roulette[2], 5);
	TextDrawSetProportional(Roulette[2], 1);
	TextDrawSetSelectable(Roulette[2], true);
	TextDrawSetPreviewModel(Roulette[2], 1210);
	TextDrawSetPreviewRot(Roulette[2], 0.000000, 0.000000, 0.000000, 1.000000);

	Roulette[3] = TextDrawCreate(369.053436, 172.146255, "major");
	TextDrawLetterSize(Roulette[3], 0.449999, 1.600000);
	TextDrawTextSize(Roulette[3], 64.112518, 67.178985);
	TextDrawAlignment(Roulette[3], 1);
	TextDrawColor(Roulette[3], -1);
	TextDrawUseBox(Roulette[3], true);
	TextDrawBoxColor(Roulette[3], 0);
	TextDrawSetShadow(Roulette[3], 0);
	TextDrawSetOutline(Roulette[3], 0);
	TextDrawBackgroundColor(Roulette[3], 1453874943);
	TextDrawFont(Roulette[3], 5);
	TextDrawSetProportional(Roulette[3], 1);
	TextDrawSetSelectable(Roulette[3], true);
	TextDrawSetPreviewModel(Roulette[3], 1210);
	TextDrawSetPreviewRot(Roulette[3], 0.000000, 0.000000, 0.000000, 1.000000);

	Roulette[4] = TextDrawCreate(287.069122, 284.312133, "elite");
	TextDrawLetterSize(Roulette[4], 0.449999, 1.600000);
	TextDrawTextSize(Roulette[4], 64.112518, 67.178985);
	TextDrawAlignment(Roulette[4], 1);
	TextDrawColor(Roulette[4], -1);
	TextDrawUseBox(Roulette[4], true);
	TextDrawBoxColor(Roulette[4], 0);
	TextDrawSetShadow(Roulette[4], 0);
	TextDrawSetOutline(Roulette[4], 0);
	TextDrawBackgroundColor(Roulette[4], -650034689);
	TextDrawFont(Roulette[4], 5);
	TextDrawSetProportional(Roulette[4], 1);
	TextDrawSetSelectable(Roulette[4], true);
	TextDrawSetPreviewModel(Roulette[4], 1210);
	TextDrawSetPreviewRot(Roulette[4], 0.000000, 0.000000, 0.000000, 1.000000);

	Roulette[5] = TextDrawCreate(238.078491, 146.954132, "BASIC CASE~n~~g~50 COINS");
	TextDrawLetterSize(Roulette[5], 0.247538, 1.171733);
	TextDrawAlignment(Roulette[5], 2);
	TextDrawColor(Roulette[5], -1397969665);
	TextDrawSetShadow(Roulette[5], 0);
	TextDrawSetOutline(Roulette[5], 1);
	TextDrawBackgroundColor(Roulette[5], 255);
	TextDrawFont(Roulette[5], 3);
	TextDrawSetProportional(Roulette[5], 1);

	Roulette[6] = TextDrawCreate(320.062713, 146.954132, "SWEET CASE~n~~g~125 COINS");
	TextDrawLetterSize(Roulette[6], 0.247538, 1.171733);
	TextDrawAlignment(Roulette[6], 2);
	TextDrawColor(Roulette[6], -6749953);
	TextDrawSetShadow(Roulette[6], 0);
	TextDrawSetOutline(Roulette[6], 1);
	TextDrawBackgroundColor(Roulette[6], 255);
	TextDrawFont(Roulette[6], 3);
	TextDrawSetProportional(Roulette[6], 1);

	Roulette[7] = TextDrawCreate(400.922241, 146.954132, "MAJOR CASE~n~~g~250 COINS");
	TextDrawLetterSize(Roulette[7], 0.247538, 1.171733);
	TextDrawAlignment(Roulette[7], 2);
	TextDrawColor(Roulette[7], 1453874943);
	TextDrawSetShadow(Roulette[7], 0);
	TextDrawSetOutline(Roulette[7], 1);
	TextDrawBackgroundColor(Roulette[7], 255);
	TextDrawFont(Roulette[7], 3);
	TextDrawSetProportional(Roulette[7], 1);

	Roulette[8] = TextDrawCreate(320.062713, 257.860351, "ELITE CASE~n~~g~600 COINS");
	TextDrawLetterSize(Roulette[8], 0.247538, 1.171733);
	TextDrawAlignment(Roulette[8], 2);
	TextDrawColor(Roulette[8], -650034689);
	TextDrawSetShadow(Roulette[8], 0);
	TextDrawSetOutline(Roulette[8], 1);
	TextDrawBackgroundColor(Roulette[8], 255);
	TextDrawFont(Roulette[8], 3);
	TextDrawSetProportional(Roulette[8], 1);

	Roulette[9] = TextDrawCreate(320.000000, 372.000000, "CLOSE");
	TextDrawLetterSize(Roulette[9], 0.375389, 2.066052);
	TextDrawTextSize(Roulette[9], 25.0000, 74.0000);
	TextDrawAlignment(Roulette[9], 2);
	TextDrawColor(Roulette[9], -868543745);
	TextDrawSetShadow(Roulette[9], 0);
	TextDrawSetOutline(Roulette[9], 0);
	TextDrawBackgroundColor(Roulette[9], 255);
	TextDrawFont(Roulette[9], 2);
	TextDrawSetProportional(Roulette[9], 1);
	TextDrawSetSelectable(Roulette[9], true);
	
	Roulette[10] = TextDrawCreate(83.359680, 106.188697, "Live drops");
	TextDrawLetterSize(Roulette[10], 0.235166, 1.318689);
	TextDrawAlignment(Roulette[10], 2);
	TextDrawColor(Roulette[10], 1453874943);
	TextDrawSetShadow(Roulette[10], 0);
	TextDrawSetOutline(Roulette[10], 1);
	TextDrawBackgroundColor(Roulette[10], 255);
	TextDrawFont(Roulette[10], 2);
	TextDrawSetProportional(Roulette[10], 1);

	Roulette[11] = TextDrawCreate(21.745754, 134.777877, "1 drop");
	TextDrawLetterSize(Roulette[11], 0.449999, 1.600000);
	TextDrawTextSize(Roulette[11], 42.366699, 44.086223);
	TextDrawAlignment(Roulette[11], 1);
	TextDrawColor(Roulette[11], -1);
	TextDrawUseBox(Roulette[11], true);
	TextDrawBoxColor(Roulette[11], 0);
	TextDrawSetShadow(Roulette[11], 0);
	TextDrawSetOutline(Roulette[11], 1);
	TextDrawBackgroundColor(Roulette[11], 0x497fa3FF);
	TextDrawFont(Roulette[11], 5);
	TextDrawSetProportional(Roulette[11], 1);
	TextDrawSetPreviewModel(Roulette[11], 19222);
	TextDrawSetPreviewRot(Roulette[11], 0.000000, 0.000000, 0.000000, 1.000000);

	Roulette[12] = TextDrawCreate(67.737541, 150.313034, "-");
	TextDrawLetterSize(Roulette[12], 0.235166, 1.318689);
	TextDrawAlignment(Roulette[12], 1);
	TextDrawColor(Roulette[12], -6749953);
	TextDrawSetShadow(Roulette[12], 0);
	TextDrawSetOutline(Roulette[12], 1);
	TextDrawBackgroundColor(Roulette[12], 255);
	TextDrawFont(Roulette[12], 2);
	TextDrawSetProportional(Roulette[12], 1);

	Roulette[13] = TextDrawCreate(21.745754, 179.864120, "2 drop");
	TextDrawLetterSize(Roulette[13], 0.449999, 1.600000);
	TextDrawTextSize(Roulette[13], 42.366699, 44.086223);
	TextDrawAlignment(Roulette[13], 1);
	TextDrawColor(Roulette[13], -1);
	TextDrawUseBox(Roulette[13], true);
	TextDrawBoxColor(Roulette[13], 0);
	TextDrawSetShadow(Roulette[13], 0);
	TextDrawSetOutline(Roulette[13], 1);
	TextDrawBackgroundColor(Roulette[13], 0x497fa3FF);
	TextDrawFont(Roulette[13], 5);
	TextDrawSetProportional(Roulette[13], 1);
	TextDrawSetPreviewModel(Roulette[13], 19222);
	TextDrawSetPreviewRot(Roulette[13], 0.000000, 0.000000, 0.000000, 1.000000);

	Roulette[14] = TextDrawCreate(67.737541, 196.239089, "-");
	TextDrawLetterSize(Roulette[14], 0.235166, 1.318689);
	TextDrawAlignment(Roulette[14], 1);
	TextDrawColor(Roulette[14], -6749953);
	TextDrawSetShadow(Roulette[14], 0);
	TextDrawSetOutline(Roulette[14], 1);
	TextDrawBackgroundColor(Roulette[14], 255);
	TextDrawFont(Roulette[14], 2);
	TextDrawSetProportional(Roulette[14], 1);

	Roulette[15] = TextDrawCreate(21.745754, 224.950302, "3 drop");
	TextDrawLetterSize(Roulette[15], 0.449999, 1.600000);
	TextDrawTextSize(Roulette[15], 42.366699, 44.086223);
	TextDrawAlignment(Roulette[15], 1);
	TextDrawColor(Roulette[15], -1);
	TextDrawUseBox(Roulette[15], true);
	TextDrawBoxColor(Roulette[15], 0);
	TextDrawSetShadow(Roulette[15], 0);
	TextDrawSetOutline(Roulette[15], 1);
	TextDrawBackgroundColor(Roulette[15], 0x497fa3FF);
	TextDrawFont(Roulette[15], 5);
	TextDrawSetProportional(Roulette[15], 1);
	TextDrawSetPreviewModel(Roulette[15], 19222);
	TextDrawSetPreviewRot(Roulette[15], 0.000000, 0.000000, 0.000000, 1.000000);

	Roulette[16] = TextDrawCreate(67.737541, 241.745254, "-");
	TextDrawLetterSize(Roulette[16], 0.235166, 1.318689);
	TextDrawAlignment(Roulette[16], 1);
	TextDrawColor(Roulette[16], -6749953);
	TextDrawSetShadow(Roulette[16], 0);
	TextDrawSetOutline(Roulette[16], 1);
	TextDrawBackgroundColor(Roulette[16], 255);
	TextDrawFont(Roulette[16], 2);
	TextDrawSetProportional(Roulette[16], 1);

	Roulette[17] = TextDrawCreate(21.745754, 270.456420, "4 drop");
	TextDrawLetterSize(Roulette[17], 0.449999, 1.600000);
	TextDrawTextSize(Roulette[17], 42.366699, 44.086223);
	TextDrawAlignment(Roulette[17], 1);
	TextDrawColor(Roulette[17], -1);
	TextDrawUseBox(Roulette[17], true);
	TextDrawBoxColor(Roulette[17], 0);
	TextDrawSetShadow(Roulette[17], 0);
	TextDrawSetOutline(Roulette[17], 1);
	TextDrawBackgroundColor(Roulette[17], 0x497fa3FF);
	TextDrawFont(Roulette[17], 5);
	TextDrawSetProportional(Roulette[17], 1);
	TextDrawSetPreviewModel(Roulette[17], 19222);
	TextDrawSetPreviewRot(Roulette[17], 0.000000, 0.000000, 0.000000, 1.000000);

	Roulette[18] = TextDrawCreate(67.737541, 287.671234, "-");
	TextDrawLetterSize(Roulette[18], 0.235166, 1.318689);
	TextDrawAlignment(Roulette[18], 1);
	TextDrawColor(Roulette[18], -6749953);
	TextDrawSetShadow(Roulette[18], 0);
	TextDrawSetOutline(Roulette[18], 1);
	TextDrawBackgroundColor(Roulette[18], 255);
	TextDrawFont(Roulette[18], 2);
	TextDrawSetProportional(Roulette[18], 1);

	Roulette[19] = TextDrawCreate(21.745754, 315.962554, "5 drop");
	TextDrawLetterSize(Roulette[19], 0.449999, 1.600000);
	TextDrawTextSize(Roulette[19], 42.366699, 44.086223);
	TextDrawAlignment(Roulette[19], 1);
	TextDrawColor(Roulette[19], -1);
	TextDrawUseBox(Roulette[19], true);
	TextDrawBoxColor(Roulette[19], 0);
	TextDrawSetShadow(Roulette[19], 0);
	TextDrawSetOutline(Roulette[19], 1);
	TextDrawBackgroundColor(Roulette[19], 0x497fa3FF);
	TextDrawFont(Roulette[19], 5);
	TextDrawSetProportional(Roulette[19], 1);
	TextDrawSetPreviewModel(Roulette[19], 19222);
	TextDrawSetPreviewRot(Roulette[19], 0.000000, 0.000000, 0.000000, 1.000000);

	Roulette[20] = TextDrawCreate(67.737541, 332.337707, "-");
	TextDrawLetterSize(Roulette[20], 0.235166, 1.318689);
	TextDrawAlignment(Roulette[20], 1);
	TextDrawColor(Roulette[20], -6749953);
	TextDrawSetShadow(Roulette[20], 0);
	TextDrawSetOutline(Roulette[20], 1);
	TextDrawBackgroundColor(Roulette[20], 255);
	TextDrawFont(Roulette[20], 2);
	TextDrawSetProportional(Roulette[20], 1);
	
	Roulette[21] = TextDrawCreate(320.000000, 130.000000, "usebox");
	TextDrawLetterSize(Roulette[21], 0.029244, 4.821130);
	TextDrawTextSize(Roulette[21], 315.188079, 240.584747);
	TextDrawAlignment(Roulette[21], 2);
	TextDrawColor(Roulette[21], 0);
	TextDrawUseBox(Roulette[21], true);
	TextDrawBoxColor(Roulette[21], -6749953);
	TextDrawSetShadow(Roulette[21], 0);
	TextDrawSetOutline(Roulette[21], 0);
	TextDrawFont(Roulette[21], 0);
	Roulette[22] = TextDrawCreate(-100.000000, -100.000000, "_");
	Roulette[23] = TextDrawCreate(583.511413, 190.860824, "usebox");
	TextDrawLetterSize(Roulette[23], 0.000000, 10.771990);
	TextDrawTextSize(Roulette[23], 502.276489, 0.000000);
	TextDrawAlignment(Roulette[23], 1);
	TextDrawColor(Roulette[23], 0);
	TextDrawUseBox(Roulette[23], true);
	TextDrawBoxColor(Roulette[23], -6749953);
	TextDrawSetShadow(Roulette[23], 0);
	TextDrawSetOutline(Roulette[23], 0);
	TextDrawFont(Roulette[23], 0);

	Roulette[24] = TextDrawCreate(582.636718, 191.860824, "usebox");
	TextDrawLetterSize(Roulette[24], 0.000000, 10.509539);
	TextDrawTextSize(Roulette[24], 503.401306, 0.000000);
	TextDrawAlignment(Roulette[24], 1);
	TextDrawColor(Roulette[24], 0);
	TextDrawUseBox(Roulette[24], true);
	TextDrawBoxColor(Roulette[24], 255);
	TextDrawSetShadow(Roulette[24], 0);
	TextDrawSetOutline(Roulette[24], 0);
	TextDrawFont(Roulette[24], 0);

	Roulette[25] = TextDrawCreate(542.894287, 205.315826, "ROLL CASE");
	TextDrawLetterSize(Roulette[25], 0.196549, 1.012183);
	TextDrawTextSize(Roulette[25], 17.0000, 74.0000);
	TextDrawAlignment(Roulette[25], 2);
	TextDrawColor(Roulette[25], 1453874943);
	TextDrawUseBox(Roulette[25], true);
	TextDrawBoxColor(Roulette[25], 255);
	TextDrawSetShadow(Roulette[25], 0);
	TextDrawSetOutline(Roulette[25], 0);
	TextDrawBackgroundColor(Roulette[25], -1);
	TextDrawFont(Roulette[25], 2);
	TextDrawSetProportional(Roulette[25], 1);
	TextDrawSetSelectable(Roulette[25], true);

	Roulette[26] = TextDrawCreate(542.894287, 223.950347, "MY PRIZES");
	TextDrawLetterSize(Roulette[26], 0.196549, 1.012183);
	TextDrawTextSize(Roulette[26], 17.0000, 74.0000);
	TextDrawAlignment(Roulette[26], 2);
	TextDrawColor(Roulette[26], -6749953);
	TextDrawUseBox(Roulette[26], true);
	TextDrawBoxColor(Roulette[26], 255);
	TextDrawSetShadow(Roulette[26], 0);
	TextDrawSetOutline(Roulette[26], 0);
	TextDrawBackgroundColor(Roulette[26], -1);
	TextDrawFont(Roulette[26], 2);
	TextDrawSetProportional(Roulette[26], 1);
	TextDrawSetSelectable(Roulette[26], true);

	Roulette[27] = TextDrawCreate(542.894287, 243.844497, "<< BACK");
	TextDrawLetterSize(Roulette[27], 0.196549, 1.012183);
	TextDrawTextSize(Roulette[27], 17.0000, 74.0000);
	TextDrawAlignment(Roulette[27], 2);
	TextDrawColor(Roulette[27], -1);
	TextDrawUseBox(Roulette[27], true);
	TextDrawBoxColor(Roulette[27], 255);
	TextDrawSetShadow(Roulette[27], 0);
	TextDrawSetOutline(Roulette[27], 0);
	TextDrawBackgroundColor(Roulette[27], -1);
	TextDrawFont(Roulette[27], 2);
	TextDrawSetProportional(Roulette[27], 1);
	TextDrawSetSelectable(Roulette[27], true);

	Roulette[28] = TextDrawCreate(542.894287, 263.738494, "EXIT");
	TextDrawLetterSize(Roulette[28], 0.196549, 1.012183);
	TextDrawTextSize(Roulette[28], 17.0000, 74.0000);
	TextDrawAlignment(Roulette[28], 2);
	TextDrawColor(Roulette[28], -650034689);
	TextDrawUseBox(Roulette[28], true);
	TextDrawBoxColor(Roulette[28], 255);
	TextDrawSetShadow(Roulette[28], 0);
	TextDrawSetOutline(Roulette[28], 0);
	TextDrawBackgroundColor(Roulette[28], -1);
	TextDrawFont(Roulette[28], 2);
	TextDrawSetProportional(Roulette[28], 1);
	TextDrawSetSelectable(Roulette[28], true);

	Roulette[29] = TextDrawCreate(571.513977, 220.671524, "usebox");
	TextDrawLetterSize(Roulette[29], 0.000000, -0.159246);
	TextDrawTextSize(Roulette[29], 514.274230, 0.000000);
	TextDrawAlignment(Roulette[29], 1);
	TextDrawColor(Roulette[29], 0);
	TextDrawUseBox(Roulette[29], true);
	TextDrawBoxColor(Roulette[29], -6749953);
	TextDrawSetShadow(Roulette[29], 0);
	TextDrawSetOutline(Roulette[29], 0);
	TextDrawFont(Roulette[29], 0);

	Roulette[30] = TextDrawCreate(571.513977, 240.671524, "usebox");
	TextDrawLetterSize(Roulette[30], 0.000000, -0.159246);
	TextDrawTextSize(Roulette[30], 514.274230, 0.000000);
	TextDrawAlignment(Roulette[30], 1);
	TextDrawColor(Roulette[30], 0);
	TextDrawUseBox(Roulette[30], true);
	TextDrawBoxColor(Roulette[30], -6749953);
	TextDrawSetShadow(Roulette[30], 0);
	TextDrawSetOutline(Roulette[30], 0);
	TextDrawFont(Roulette[30], 0);

	Roulette[33] = TextDrawCreate(571.513977, 260.671524, "usebox");
	TextDrawLetterSize(Roulette[33], 0.000000, -0.159246);
	TextDrawTextSize(Roulette[33], 514.274230, 0.000000);
	TextDrawAlignment(Roulette[33], 1);
	TextDrawColor(Roulette[33], 0);
	TextDrawUseBox(Roulette[33], true);
	TextDrawBoxColor(Roulette[33], -6749953);
	TextDrawSetShadow(Roulette[33], 0);
	TextDrawSetOutline(Roulette[33], 0);
	TextDrawFont(Roulette[33], 0);
	/********************************************Casino**********************************/
	//Рулетка
	roultd[0] = TextDrawCreate(246.666610, 226.111129, "0");
	TextDrawLetterSize(roultd[0], 0.000000, 8.566638);
	TextDrawTextSize(roultd[0], 60.333389, 15.103705);
	TextDrawAlignment(roultd[0], 2);
	TextDrawColor(roultd[0], 0);
	TextDrawUseBox(roultd[0], true);
	TextDrawBoxColor(roultd[0], 0);
	TextDrawSetShadow(roultd[0], 0);
	TextDrawSetOutline(roultd[0], 0);
	TextDrawFont(roultd[0], 0);
	TextDrawSetSelectable(roultd[0], true);
	new Float:RoulX = 265.999938, Float:RoulY = 225.500000, b = 0;
	for(new r = 1; r < 40; r++)
	{
		if(r == 14 || r == 27)RoulY += 27.303695,RoulX = 265.999938;
		if(b == 13)b = 0;
		if(b > 0 && b < 5)RoulX += 18.666687;
		if(b > 4 && b < 13)RoulX += 19.666687;
		roultd[r] = TextDrawCreate(RoulX, RoulY, "1-36");
		TextDrawLetterSize(roultd[r], 0.011333, 2.549111);
		TextDrawTextSize(roultd[r], 12.0, 11.5);
		TextDrawAlignment(roultd[r], 2);
		TextDrawColor(roultd[r], 0);
		TextDrawUseBox(roultd[r], true);
		TextDrawBoxColor(roultd[r], 0);
		TextDrawSetShadow(roultd[r], 0);
		TextDrawSetOutline(roultd[r], 0);
		TextDrawFont(roultd[r], 0);
		TextDrawSetSelectable(roultd[r], true);
		b++;
	}
	roultd[40] = TextDrawCreate(293.999908, 310.122161, "1-12");
	TextDrawLetterSize(roultd[40], 0.001333, 2.698574);
	TextDrawTextSize(roultd[40], 20.0, 74.666664);
	TextDrawAlignment(roultd[40], 2);
	TextDrawColor(roultd[40], 0);
	TextDrawUseBox(roultd[40], true);
	TextDrawBoxColor(roultd[40], 0);
	TextDrawSetShadow(roultd[40], 0);
	TextDrawSetOutline(roultd[40], 0);
	TextDrawFont(roultd[40], 0);
	TextDrawSetSelectable(roultd[40], true);
	roultd[41] = TextDrawCreate(372.333221, 310.292541, "2-12");
	TextDrawLetterSize(roultd[41], 0.001333, 2.698574);
	TextDrawTextSize(roultd[41], 20.0, 74.666664);
	TextDrawAlignment(roultd[41], 2);
	TextDrawColor(roultd[41], 0);
	TextDrawUseBox(roultd[41], true);
	TextDrawBoxColor(roultd[41], 0);
	TextDrawSetShadow(roultd[41], 0);
	TextDrawSetOutline(roultd[41], 0);
	TextDrawFont(roultd[41], 0);
	TextDrawSetSelectable(roultd[41], true);
	roultd[42] = TextDrawCreate(450.333312, 310.462890, "3-12");
	TextDrawLetterSize(roultd[42], 0.001333, 2.698574);
	TextDrawTextSize(roultd[42], 20.0, 74.666664);
	TextDrawAlignment(roultd[42], 2);
	TextDrawColor(roultd[42], 0);
	TextDrawUseBox(roultd[42], true);
	TextDrawBoxColor(roultd[42], 0);
	TextDrawSetShadow(roultd[42], 0);
	TextDrawSetOutline(roultd[42], 0);
	TextDrawFont(roultd[42], 0);
	TextDrawSetSelectable(roultd[42], true);
	RoulX = 274.333343, RoulY = 339.574066;
	for(new r = 43; r < 49; r++)
	{
		if(r > 43)RoulX += 39.333344;
		roultd[r] = TextDrawCreate(RoulX, RoulY, "1-36 odd/even");
		TextDrawLetterSize(roultd[r], -0.000666, 2.680137);
		TextDrawTextSize(roultd[r], 20.0, 35.259246);
		TextDrawAlignment(roultd[r], 2);
		TextDrawColor(roultd[r], 0);
		TextDrawUseBox(roultd[r], true);
		TextDrawBoxColor(roultd[r], 0);
		TextDrawSetShadow(roultd[r], 0);
		TextDrawSetOutline(roultd[r], 0);
		TextDrawFont(roultd[r], 0);
		TextDrawSetSelectable(roultd[r], true);
	}
	roultd[49] = TextDrawCreate(145.666702, 167.999923, "Exit");
	TextDrawLetterSize(roultd[49], 0.449999, 1.600000);
	TextDrawTextSize(roultd[49], 9.0, 54.755546);
	TextDrawAlignment(roultd[49], 2);
	TextDrawColor(roultd[49], -1);
	TextDrawSetShadow(roultd[49], 0);
	TextDrawSetOutline(roultd[49], 0);
	TextDrawBackgroundColor(roultd[49], 51);
	TextDrawFont(roultd[49], 3);
	TextDrawSetProportional(roultd[49], 1);
	TextDrawSetSelectable(roultd[49], true);
	for(new td; td < 4; td++)
	{
		roulinfo[td] = TextDrawCreate(138.666610, 245.985168, " ");
		TextDrawLetterSize(roulinfo[td], 0.449999, 1.600000);
		TextDrawTextSize(roulinfo[td], 74.333282, 27.792581);
		TextDrawAlignment(roulinfo[td], 2);
		TextDrawColor(roulinfo[td], 8388863);
		TextDrawSetShadow(roulinfo[td], 0);
		TextDrawSetOutline(roulinfo[td], 1);
		TextDrawBackgroundColor(roulinfo[td], 0x00000000);
		TextDrawFont(roulinfo[td], 3);
		TextDrawSetProportional(roulinfo[td], 1);
	}
	//Кости
	bonesmenu[0] = TextDrawCreate(620.000061, 185.677780, "usebox");
	TextDrawLetterSize(bonesmenu[0], 0.000000, 16.835180);
	TextDrawTextSize(bonesmenu[0], 548.000000, 0.000000);
	TextDrawAlignment(bonesmenu[0], 1);
	TextDrawColor(bonesmenu[0], 0);
	TextDrawUseBox(bonesmenu[0], true);
	TextDrawBoxColor(bonesmenu[0], 0x33333399);
	TextDrawSetShadow(bonesmenu[0], 0);
	TextDrawSetOutline(bonesmenu[0], 0);
	TextDrawFont(bonesmenu[0], 0);
	bonesmenu[1] = TextDrawCreate(584.000183, 284.562927, "BET");
	TextDrawLetterSize(bonesmenu[1], 0.182666, 1.064888);
	TextDrawTextSize(bonesmenu[1], 10.000007, 55.585170);
	TextDrawAlignment(bonesmenu[1], 2);
	TextDrawColor(bonesmenu[1], -1);
	TextDrawUseBox(bonesmenu[1], true);
	TextDrawBoxColor(bonesmenu[1], -2139062017);
	TextDrawSetShadow(bonesmenu[1], 0);
	TextDrawSetOutline(bonesmenu[1], 0);
	TextDrawFont(bonesmenu[1], 2);
	TextDrawSetProportional(bonesmenu[1], 1);
	TextDrawSetSelectable(bonesmenu[1], true);
	bonesmenu[2] = TextDrawCreate(584.000183, 302.155639, "PLAY");
	TextDrawLetterSize(bonesmenu[2], 0.182666, 1.064888);
	TextDrawTextSize(bonesmenu[2], 10.000007, 55.585170);
	TextDrawAlignment(bonesmenu[2], 2);
	TextDrawColor(bonesmenu[2], -1);
	TextDrawUseBox(bonesmenu[2], true);
	TextDrawBoxColor(bonesmenu[2], -2139062017);
	TextDrawSetShadow(bonesmenu[2], 0);
	TextDrawSetOutline(bonesmenu[2], 0);
	TextDrawFont(bonesmenu[2], 2);
	TextDrawSetProportional(bonesmenu[2], 1);
	TextDrawSetSelectable(bonesmenu[2], true);
	bonesmenu[3] = TextDrawCreate(584.000183, 319.748382, "INFORMATION");
	TextDrawLetterSize(bonesmenu[3], 0.182666, 1.064888);
	TextDrawTextSize(bonesmenu[3], 10.000007, 55.585170);
	TextDrawAlignment(bonesmenu[3], 2);
	TextDrawColor(bonesmenu[3], -1);
	TextDrawUseBox(bonesmenu[3], true);
	TextDrawBoxColor(bonesmenu[3], -2139062017);
	TextDrawSetShadow(bonesmenu[3], 0);
	TextDrawSetOutline(bonesmenu[3], 0);
	TextDrawFont(bonesmenu[3], 2);
	TextDrawSetProportional(bonesmenu[3], 1);
	TextDrawSetSelectable(bonesmenu[3], true);
	bonesmenu[4] = TextDrawCreate(614.000000, 185.422210, "X");
	TextDrawLetterSize(bonesmenu[4], 0.273999, 0.961185);
	TextDrawTextSize(bonesmenu[4], 6.637035, 6.637035);
	TextDrawAlignment(bonesmenu[4], 2);
	TextDrawColor(bonesmenu[4], -1);
	TextDrawUseBox(bonesmenu[4], false);
	TextDrawSetShadow(bonesmenu[4], 0);
	TextDrawSetOutline(bonesmenu[4], 0);
	TextDrawFont(bonesmenu[4], 1);
	TextDrawSetProportional(bonesmenu[4], 1);
	TextDrawSetSelectable(bonesmenu[4], true);
	new str[9];			
	for(new i; i < 4; i++)
	{
		format(str,sizeof str,"TABLE %i",i+1);
		bonestd[i] = TextDrawCreate(558.366931, 187.496292, str);
		TextDrawLetterSize(bonestd[i], 0.449999, 1.600000);
		TextDrawAlignment(bonestd[i], 1);
		TextDrawColor(bonestd[i], 1436155903);
		TextDrawSetShadow(bonestd[i], 0);
		TextDrawSetOutline(bonestd[i], 0);
		TextDrawFont(bonestd[i], 3);
		TextDrawSetProportional(bonestd[i], 1);
		bonesinfo[i] = TextDrawCreate(554.666442, 257.770, "Bet: $0~n~Bank: $0");
		TextDrawLetterSize(bonesinfo[i], 0.162999, 0.849185);
		TextDrawAlignment(bonesinfo[i], 1);
		TextDrawColor(bonesinfo[i], -1);
		TextDrawSetShadow(bonesinfo[i], 0);
		TextDrawSetOutline(bonesinfo[i], 0);
		TextDrawFont(bonesinfo[i], 1);
		TextDrawSetProportional(bonesinfo[i], 1);
		new Float:DrawFloat_Y = 205.333480;
		for(new s; s < 5; s++)
		{
			if(s)DrawFloat_Y += 9.296234;
			bonesnames[i][s] = TextDrawCreate(554.666442, DrawFloat_Y, "--");
			TextDrawLetterSize(bonesnames[i][s], 0.150999, 0.923851);
			TextDrawAlignment(bonesnames[i][s], 1);
			TextDrawColor(bonesnames[i][s], -1);
			TextDrawSetShadow(bonesnames[i][s], 0);
			TextDrawSetOutline(bonesnames[i][s], 0);
			TextDrawBackgroundColor(bonesnames[i][s], 51);
			TextDrawFont(bonesnames[i][s], 1);
			TextDrawSetProportional(bonesnames[i][s], 1);
			bonesscore[i][s] = TextDrawCreate(607.666625, DrawFloat_Y, "--");
			TextDrawLetterSize(bonesscore[i][s], 0.171333, 1.098073);
			TextDrawAlignment(bonesscore[i][s], 1);
			TextDrawColor(bonesscore[i][s], -1);
			TextDrawSetShadow(bonesscore[i][s], 0);
			TextDrawSetOutline(bonesscore[i][s], 0);
			TextDrawFont(bonesscore[i][s], 1);
			TextDrawSetProportional(bonesscore[i][s], 1);
		}
	}
	///////
	for(new i; i < 3; i++){
		CaptureTD[0][i] = TextDrawCreate(10.000000, 220.000000, "LD_SPAC:white");
		TextDrawLetterSize(CaptureTD[0][i], 0.000000, 0.000000);
		TextDrawTextSize(CaptureTD[0][i], 104.000000, 41.813320);
		TextDrawAlignment(CaptureTD[0][i], 1);
		TextDrawColor(CaptureTD[0][i], -313174529);
		TextDrawSetShadow(CaptureTD[0][i], 0);
		TextDrawSetOutline(CaptureTD[0][i], 0);
		TextDrawFont(CaptureTD[0][i], 4);
		TextDrawSetPreviewModel(CaptureTD[0][i], 0);
		TextDrawSetPreviewRot(CaptureTD[0][i], 0.000000, 0.000000, 0.000000, 0.000000);
		CaptureTD[1][i] = TextDrawCreate(11.000000, 221.000000, "LD_SPAC:white");
		TextDrawLetterSize(CaptureTD[1][i], 0.000000, 0.000000);
		TextDrawTextSize(CaptureTD[1][i], 102.476196, 40.106643);
		TextDrawAlignment(CaptureTD[1][i], 1);
		TextDrawColor(CaptureTD[1][i], 255);
		TextDrawSetShadow(CaptureTD[1][i], 0);
		TextDrawSetOutline(CaptureTD[1][i], 0);
		TextDrawFont(CaptureTD[1][i], 4);
		TextDrawSetPreviewModel(CaptureTD[1][i], 0);
		TextDrawSetPreviewRot(CaptureTD[1][i], 0.000000, 0.000000, 0.000000, 0.000000);
		CaptureTD[2][i] = TextDrawCreate(62.500000, 220.600006, (i == 3)? "MAFIA WAR" : "GANGS WAR");
		TextDrawLetterSize(CaptureTD[2][i], 0.158571, 1.002665);
		TextDrawAlignment(CaptureTD[2][i], 2);
		TextDrawColor(CaptureTD[2][i], -650034689);
		TextDrawSetShadow(CaptureTD[2][i], 0);
		TextDrawSetOutline(CaptureTD[2][i], 0);
		TextDrawBackgroundColor(CaptureTD[2][i], 51);
		TextDrawFont(CaptureTD[2][i], 2);
		TextDrawSetProportional(CaptureTD[2][i], 1);
		CaptureTD[3][i] = TextDrawCreate(36.952377, 230.826675, "LD_SPAC:white");
		TextDrawLetterSize(CaptureTD[3][i], 0.000000, 0.000000);
		TextDrawTextSize(CaptureTD[3][i], 51.809524, 0.426651);
		TextDrawAlignment(CaptureTD[3][i], 1);
		TextDrawColor(CaptureTD[3][i], -650034689);
		TextDrawSetShadow(CaptureTD[3][i], 0);
		TextDrawSetOutline(CaptureTD[3][i], 0);
		TextDrawFont(CaptureTD[3][i], 4);
		CaptureTD[4][i] = TextDrawCreate(62.500000, 231.399993, "attack team");
		TextDrawLetterSize(CaptureTD[4][i], 0.137619, 0.913066);
		TextDrawAlignment(CaptureTD[4][i], 2);
		TextDrawColor(CaptureTD[4][i], -650034689);
		TextDrawSetShadow(CaptureTD[4][i], 0);
		TextDrawSetOutline(CaptureTD[4][i], 0);
		TextDrawBackgroundColor(CaptureTD[4][i], 51);
		TextDrawFont(CaptureTD[4][i], 2);
		TextDrawSetProportional(CaptureTD[4][i], 1);
		CaptureTD[5][i] = TextDrawCreate(62.500000, 240.500000, "defence team");
		TextDrawLetterSize(CaptureTD[5][i], 0.137619, 0.913066);
		TextDrawAlignment(CaptureTD[5][i], 2);
		TextDrawColor(CaptureTD[5][i], 1453874943);
		TextDrawSetShadow(CaptureTD[5][i], 0);
		TextDrawSetOutline(CaptureTD[5][i], 0);
		TextDrawBackgroundColor(CaptureTD[5][i], 51);
		TextDrawFont(CaptureTD[5][i], 2);
		TextDrawSetProportional(CaptureTD[5][i], 1);
		CaptureTD[6][i] = TextDrawCreate(36.809524, 249.746658, "LD_SPAC:white");
		TextDrawLetterSize(CaptureTD[6][i], 0.000000, 0.000000);
		TextDrawTextSize(CaptureTD[6][i], 51.809524, 0.426651);
		TextDrawAlignment(CaptureTD[6][i], 1);
		TextDrawColor(CaptureTD[6][i], -650034689);
		TextDrawSetShadow(CaptureTD[6][i], 0);
		TextDrawSetOutline(CaptureTD[6][i], 0);
		TextDrawFont(CaptureTD[6][i], 4);
		CaptureTD[7][i] = TextDrawCreate(62.500000, 251.000000, "TIMELEFT 0:0");
		TextDrawLetterSize(CaptureTD[7][i], 0.137619, 0.913066);
		TextDrawAlignment(CaptureTD[7][i], 2);
		TextDrawColor(CaptureTD[7][i], -3437313);
		TextDrawSetShadow(CaptureTD[7][i], 0);
		TextDrawSetOutline(CaptureTD[7][i], 0);
		TextDrawBackgroundColor(CaptureTD[7][i], 51);
		TextDrawFont(CaptureTD[7][i], 2);
		TextDrawSetProportional(CaptureTD[7][i], 1);
		CaptureTD[8][i] = TextDrawCreate(115.400001, 220.000000, "LD_SPAC:white");
		TextDrawLetterSize(CaptureTD[8][i], 0.000000, 0.000000);
		TextDrawTextSize(CaptureTD[8][i], 16.380943, 41.813320);
		TextDrawAlignment(CaptureTD[8][i], 1);
		TextDrawColor(CaptureTD[8][i], -313174529);
		TextDrawSetShadow(CaptureTD[8][i], 0);
		TextDrawSetOutline(CaptureTD[8][i], 0);
		TextDrawFont(CaptureTD[8][i], 4);
		TextDrawSetPreviewModel(CaptureTD[8][i], 0);
		TextDrawSetPreviewRot(CaptureTD[8][i], 0.000000, 0.000000, 0.000000, 0.000000);
		CaptureTD[9][i] = TextDrawCreate(116.400001, 221.000000, "LD_SPAC:white");
		TextDrawLetterSize(CaptureTD[9][i], 0.000000, 0.000000);
		TextDrawTextSize(CaptureTD[9][i], 14.095226, 40.106655);
		TextDrawAlignment(CaptureTD[9][i], 1);
		TextDrawColor(CaptureTD[9][i], 255);
		TextDrawSetShadow(CaptureTD[9][i], 0);
		TextDrawSetOutline(CaptureTD[9][i], 0);
		TextDrawFont(CaptureTD[9][i], 4);
		TextDrawSetPreviewModel(CaptureTD[9][i], 0);
		TextDrawSetPreviewRot(CaptureTD[9][i], 0.000000, 0.000000, 0.000000, 0.000000);
		CaptureTD[10][i] = TextDrawCreate(118.857139, 240.639999, "LD_SPAC:white");
		TextDrawLetterSize(CaptureTD[10][i], 0.000000, 0.000000);
		TextDrawTextSize(CaptureTD[10][i], 9.142860, 0.853347);
		TextDrawAlignment(CaptureTD[10][i], 1);
		TextDrawColor(CaptureTD[10][i], -650034689);
		TextDrawSetShadow(CaptureTD[10][i], 0);
		TextDrawSetOutline(CaptureTD[10][i], 0);
		TextDrawFont(CaptureTD[10][i], 4);
		CaptureTD[11][i] = TextDrawCreate(123.428596, 225.279968, "0");
		TextDrawLetterSize(CaptureTD[11][i], 0.265238, 1.173333);
		TextDrawAlignment(CaptureTD[11][i], 2);
		TextDrawColor(CaptureTD[11][i], -650034689);
		TextDrawSetShadow(CaptureTD[11][i], 0);
		TextDrawSetOutline(CaptureTD[11][i], 0);
		TextDrawBackgroundColor(CaptureTD[11][i], 51);
		TextDrawFont(CaptureTD[11][i], 3);
		TextDrawSetProportional(CaptureTD[11][i], 1);
		CaptureTD[12][i] = TextDrawCreate(123.285743, 245.053283, "0");
		TextDrawLetterSize(CaptureTD[12][i], 0.265238, 1.173333);
		TextDrawAlignment(CaptureTD[12][i], 2);
		TextDrawColor(CaptureTD[12][i], 1453874943);
		TextDrawSetShadow(CaptureTD[12][i], 0);
		TextDrawSetOutline(CaptureTD[12][i], 0);
		TextDrawBackgroundColor(CaptureTD[12][i], 51);
		TextDrawFont(CaptureTD[12][i], 3);
		TextDrawSetProportional(CaptureTD[12][i], 1);
	}
	/********************************************Casino**********************************/
	/********************************************Интерфейс дурака**********************************/
	for(new i; i < MAX_FOOL; i++)
	{
		//Карты хода
		FoolCardsTD[i][0] = TextDrawCreate(241.333374, 225.659271, "_");
		TextDrawLetterSize(FoolCardsTD[i][0], 0.000000, 0.000000);
		TextDrawTextSize(FoolCardsTD[i][0], 24.666673, 41.896263);
		TextDrawAlignment(FoolCardsTD[i][0], 1);
		TextDrawColor(FoolCardsTD[i][0], -1);
		TextDrawSetShadow(FoolCardsTD[i][0], 0);
		TextDrawSetOutline(FoolCardsTD[i][0], 0);
		TextDrawFont(FoolCardsTD[i][0], 4);
		TextDrawSetSelectable(FoolCardsTD[i][0], true);

		FoolCardsTD[i][1] = TextDrawCreate(269.000030, 225.659271, "_");
		TextDrawLetterSize(FoolCardsTD[i][1], 0.000000, 0.000000);
		TextDrawTextSize(FoolCardsTD[i][1], 24.666673, 41.896263);
		TextDrawAlignment(FoolCardsTD[i][1], 1);
		TextDrawColor(FoolCardsTD[i][1], -1);
		TextDrawSetShadow(FoolCardsTD[i][1], 0);
		TextDrawSetOutline(FoolCardsTD[i][1], 0);
		TextDrawFont(FoolCardsTD[i][1], 4);
		TextDrawSetSelectable(FoolCardsTD[i][1], true);

		FoolCardsTD[i][2] = TextDrawCreate(296.666809, 225.659271, "_");
		TextDrawLetterSize(FoolCardsTD[i][2], 0.000000, 0.000000);
		TextDrawTextSize(FoolCardsTD[i][2], 24.666673, 41.896263);
		TextDrawAlignment(FoolCardsTD[i][2], 1);
		TextDrawColor(FoolCardsTD[i][2], -1);
		TextDrawSetShadow(FoolCardsTD[i][2], 0);
		TextDrawSetOutline(FoolCardsTD[i][2], 0);
		TextDrawFont(FoolCardsTD[i][2], 4);
		TextDrawSetSelectable(FoolCardsTD[i][2], true);

		FoolCardsTD[i][3] = TextDrawCreate(324.333526, 225.659271, "_");
		TextDrawLetterSize(FoolCardsTD[i][3], 0.000000, 0.000000);
		TextDrawTextSize(FoolCardsTD[i][3], 24.666673, 41.896263);
		TextDrawAlignment(FoolCardsTD[i][3], 1);
		TextDrawColor(FoolCardsTD[i][3], -1);
		TextDrawSetShadow(FoolCardsTD[i][3], 0);
		TextDrawSetOutline(FoolCardsTD[i][3], 0);
		TextDrawFont(FoolCardsTD[i][3], 4);
		TextDrawSetSelectable(FoolCardsTD[i][3], true);

		FoolCardsTD[i][4] = TextDrawCreate(351.666900, 225.659271, "_");
		TextDrawLetterSize(FoolCardsTD[i][4], 0.000000, 0.000000);
		TextDrawTextSize(FoolCardsTD[i][4], 24.666673, 41.896263);
		TextDrawAlignment(FoolCardsTD[i][4], 1);
		TextDrawColor(FoolCardsTD[i][4], -1);
		TextDrawSetShadow(FoolCardsTD[i][4], 0);
		TextDrawSetOutline(FoolCardsTD[i][4], 0);
		TextDrawFont(FoolCardsTD[i][4], 4);
		TextDrawSetSelectable(FoolCardsTD[i][4], true);

		FoolCardsTD[i][5] = TextDrawCreate(379.000213, 225.659271, "_");
		TextDrawLetterSize(FoolCardsTD[i][5], 0.000000, 0.000000);
		TextDrawTextSize(FoolCardsTD[i][5], 24.666673, 41.896263);
		TextDrawAlignment(FoolCardsTD[i][5], 1);
		TextDrawColor(FoolCardsTD[i][5], -1);
		TextDrawSetShadow(FoolCardsTD[i][5], 0);
		TextDrawSetOutline(FoolCardsTD[i][5], 0);
		TextDrawFont(FoolCardsTD[i][5], 4);
		TextDrawSetSelectable(FoolCardsTD[i][5], true);
		//Карты игрока, который отбивается
		BitCardsTD[i][0] = TextDrawCreate(244.000335, 238.296569, "_");
		TextDrawLetterSize(BitCardsTD[i][0], 0.000000, 0.000000);
		TextDrawTextSize(BitCardsTD[i][0], 24.666673, 41.896263);
		TextDrawAlignment(BitCardsTD[i][0], 1);
		TextDrawColor(BitCardsTD[i][0], -1);
		TextDrawSetShadow(BitCardsTD[i][0], 74);
		TextDrawSetOutline(BitCardsTD[i][0], 0);
		TextDrawFont(BitCardsTD[i][0], 4);

		BitCardsTD[i][1] = TextDrawCreate(272.000244, 238.296569, "_");
		TextDrawLetterSize(BitCardsTD[i][1], 0.000000, 0.000000);
		TextDrawTextSize(BitCardsTD[i][1], 24.666673, 41.896263);
		TextDrawAlignment(BitCardsTD[i][1], 1);
		TextDrawColor(BitCardsTD[i][1], -1);
		TextDrawSetShadow(BitCardsTD[i][1], 74);
		TextDrawSetOutline(BitCardsTD[i][1], 0);
		TextDrawFont(BitCardsTD[i][1], 4);

		BitCardsTD[i][2] = TextDrawCreate(300.000274, 238.296569, "_");
		TextDrawLetterSize(BitCardsTD[i][2], 0.000000, 0.000000);
		TextDrawTextSize(BitCardsTD[i][2], 24.666673, 41.896263);
		TextDrawAlignment(BitCardsTD[i][2], 1);
		TextDrawColor(BitCardsTD[i][2], -1);
		TextDrawSetShadow(BitCardsTD[i][2], 74);
		TextDrawSetOutline(BitCardsTD[i][2], 0);
		TextDrawFont(BitCardsTD[i][2], 4);

		BitCardsTD[i][3] = TextDrawCreate(327.000183, 238.296569, "_");
		TextDrawLetterSize(BitCardsTD[i][3], 0.000000, 0.000000);
		TextDrawTextSize(BitCardsTD[i][3], 24.666673, 41.896263);
		TextDrawAlignment(BitCardsTD[i][3], 1);
		TextDrawColor(BitCardsTD[i][3], -1);
		TextDrawSetShadow(BitCardsTD[i][3], 74);
		TextDrawSetOutline(BitCardsTD[i][3], 0);
		TextDrawFont(BitCardsTD[i][3], 4);

		BitCardsTD[i][4] = TextDrawCreate(354.666870, 238.296569, "_");
		TextDrawLetterSize(BitCardsTD[i][4], 0.000000, 0.000000);
		TextDrawTextSize(BitCardsTD[i][4], 24.666673, 41.896263);
		TextDrawAlignment(BitCardsTD[i][4], 1);
		TextDrawColor(BitCardsTD[i][4], -1);
		TextDrawSetShadow(BitCardsTD[i][4], 74);
		TextDrawSetOutline(BitCardsTD[i][4], 0);
		TextDrawFont(BitCardsTD[i][4], 4);

		BitCardsTD[i][5] = TextDrawCreate(382.333465, 238.296569, "_");
		TextDrawLetterSize(BitCardsTD[i][5], 0.000000, 0.000000);
		TextDrawTextSize(BitCardsTD[i][5], 24.666673, 41.896263);
		TextDrawAlignment(BitCardsTD[i][5], 1);
		TextDrawColor(BitCardsTD[i][5], -1);
		TextDrawSetShadow(BitCardsTD[i][5], 74);
		TextDrawSetOutline(BitCardsTD[i][5], 0);
		TextDrawFont(BitCardsTD[i][5], 4);
		//Козырь и колода
		TrumpCardsTD[i][0] = TextDrawCreate(386.666870, 290.341247, "_");
		TextDrawLetterSize(TrumpCardsTD[i][0], 0.000000, 0.000000);
		TextDrawTextSize(TrumpCardsTD[i][0], 24.666673, 41.896263);
		TextDrawAlignment(TrumpCardsTD[i][0], 1);
		TextDrawColor(TrumpCardsTD[i][0], -1);
		TextDrawSetShadow(TrumpCardsTD[i][0], 74);
		TextDrawSetOutline(TrumpCardsTD[i][0], 0);
		TextDrawFont(TrumpCardsTD[i][0], 4);

		TrumpCardsTD[i][1] = TextDrawCreate(391.333496, 297.978332, "LD_CARD:cdback");
		TextDrawLetterSize(TrumpCardsTD[i][1], 0.000000, 0.000000);
		TextDrawTextSize(TrumpCardsTD[i][1], 24.666673, 41.896263);
		TextDrawAlignment(TrumpCardsTD[i][1], 1);
		TextDrawColor(TrumpCardsTD[i][1], -1);
		TextDrawSetShadow(TrumpCardsTD[i][1], 74);
		TextDrawSetOutline(TrumpCardsTD[i][1], 0);
		TextDrawFont(TrumpCardsTD[i][1], 4);

		TrumpCardsTD[i][2] = TextDrawCreate(391.000213, 330.607604, "36 CARDS");
		TextDrawLetterSize(TrumpCardsTD[i][2], 0.149333, 0.940444);
		TextDrawAlignment(TrumpCardsTD[i][2], 3);
		TextDrawColor(TrumpCardsTD[i][2], 255);
		TextDrawSetShadow(TrumpCardsTD[i][2], 0);
		TextDrawSetOutline(TrumpCardsTD[i][2], 0);
		TextDrawBackgroundColor(TrumpCardsTD[i][2], 51);
		TextDrawFont(TrumpCardsTD[i][2], 2);
		TextDrawSetProportional(TrumpCardsTD[i][2], 1);
		//Интерфейс дурака
		FoolMenuTD[i][0] = TextDrawCreate(450.000000, 228.000000, "usebox");
		TextDrawLetterSize(FoolMenuTD[i][0], -0.011333, 10.065230);
		TextDrawTextSize(FoolMenuTD[i][0], 429.999969, 52.681453);
		TextDrawAlignment(FoolMenuTD[i][0], 2);
		TextDrawColor(FoolMenuTD[i][0], 0);
		TextDrawUseBox(FoolMenuTD[i][0], true);
		TextDrawBoxColor(FoolMenuTD[i][0], -12320513);
		TextDrawSetShadow(FoolMenuTD[i][0], 0);
		TextDrawSetOutline(FoolMenuTD[i][0], 0);
		TextDrawFont(FoolMenuTD[i][0], 0);

		FoolMenuTD[i][1] = TextDrawCreate(450.000000, 229.000000, "usebox");
		TextDrawLetterSize(FoolMenuTD[i][1], -0.011000, 9.861968);
		TextDrawTextSize(FoolMenuTD[i][1], 430.666656, 51.022205);
		TextDrawAlignment(FoolMenuTD[i][1], 2);
		TextDrawColor(FoolMenuTD[i][1], 0);
		TextDrawUseBox(FoolMenuTD[i][1], true);
		TextDrawBoxColor(FoolMenuTD[i][1], 572662527);
		TextDrawSetShadow(FoolMenuTD[i][1], 0);
		TextDrawSetOutline(FoolMenuTD[i][1], 0);
		TextDrawFont(FoolMenuTD[i][1], 0);

		FoolMenuTD[i][2] = TextDrawCreate(450.000000, 276.000000, "Set bet");
		TextDrawLetterSize(FoolMenuTD[i][2], 0.158666, 1.002666);
		TextDrawTextSize(FoolMenuTD[i][2], 12.000001, 47.288879);
		TextDrawAlignment(FoolMenuTD[i][2], 2);
		TextDrawColor(FoolMenuTD[i][2], -2147483393);
		TextDrawUseBox(FoolMenuTD[i][2], true);
		TextDrawBoxColor(FoolMenuTD[i][2], -12320513);
		TextDrawSetShadow(FoolMenuTD[i][2], 0);
		TextDrawSetOutline(FoolMenuTD[i][2], 0);
		TextDrawBackgroundColor(FoolMenuTD[i][2], 51);
		TextDrawFont(FoolMenuTD[i][2], 2);
		TextDrawSetProportional(FoolMenuTD[i][2], 1);
		TextDrawSetSelectable(FoolMenuTD[i][2], true);

		FoolMenuTD[i][3] = TextDrawCreate(424.333343, 271.288757, "LD_SPAC:white");
		TextDrawLetterSize(FoolMenuTD[i][3], 0.000000, 0.000000);
		TextDrawTextSize(FoolMenuTD[i][3], 51.000015, 0.414824);
		TextDrawAlignment(FoolMenuTD[i][3], 1);
		TextDrawColor(FoolMenuTD[i][3], -12320513);
		TextDrawSetShadow(FoolMenuTD[i][3], 0);
		TextDrawSetOutline(FoolMenuTD[i][3], 0);
		TextDrawFont(FoolMenuTD[i][3], 4);

		FoolMenuTD[i][4] = TextDrawCreate(450.000000, 305.378051, "LEAVE GAME");
		TextDrawLetterSize(FoolMenuTD[i][4], 0.158666, 1.002666);
		TextDrawTextSize(FoolMenuTD[i][4], 12.000001, 47.288879);
		TextDrawAlignment(FoolMenuTD[i][4], 2);
		TextDrawColor(FoolMenuTD[i][4], 255);
		TextDrawUseBox(FoolMenuTD[i][4], true);
		TextDrawBoxColor(FoolMenuTD[i][4], -12320513);
		TextDrawSetShadow(FoolMenuTD[i][4], 0);
		TextDrawSetOutline(FoolMenuTD[i][4], 0);
		TextDrawBackgroundColor(FoolMenuTD[i][4], 51);
		TextDrawFont(FoolMenuTD[i][4], 2);
		TextDrawSetProportional(FoolMenuTD[i][4], 1);
		TextDrawSetSelectable(FoolMenuTD[i][4], true);

		new table[12];
		f(table, "Table %d",i+1);
		FoolMenuTD[i][5] = TextDrawCreate(440.000030, 229.392593, table);
		TextDrawLetterSize(FoolMenuTD[i][5], 0.236666, 0.961185);
		TextDrawAlignment(FoolMenuTD[i][5], 1);
		TextDrawColor(FoolMenuTD[i][5], -12320513);
		TextDrawSetShadow(FoolMenuTD[i][5], 0);
		TextDrawSetOutline(FoolMenuTD[i][5], 0);
		TextDrawBackgroundColor(FoolMenuTD[i][5], 51);
		TextDrawFont(FoolMenuTD[i][5], 0);
		TextDrawSetProportional(FoolMenuTD[i][5], 1);

		FoolMenuTD[i][6] = TextDrawCreate(450.00000, 290.689056, "Ready");
		TextDrawLetterSize(FoolMenuTD[i][6], 0.158666, 1.002666);
		TextDrawTextSize(FoolMenuTD[i][6], 12.000001, 47.288879);
		TextDrawAlignment(FoolMenuTD[i][6], 2);
		TextDrawColor(FoolMenuTD[i][6], 255);
		TextDrawUseBox(FoolMenuTD[i][6], true);
		TextDrawBoxColor(FoolMenuTD[i][6], -12320513);
		TextDrawSetShadow(FoolMenuTD[i][6], 0);
		TextDrawSetOutline(FoolMenuTD[i][6], 0);
		TextDrawBackgroundColor(FoolMenuTD[i][6], 51);
		TextDrawFont(FoolMenuTD[i][6], 2);
		TextDrawSetProportional(FoolMenuTD[i][6], 1);
		TextDrawSetSelectable(FoolMenuTD[i][6], true);
		//Игроки и их статус
		FoolPlayersTD[i][0] = TextDrawCreate(424.999908, 240.177734, "--");
		TextDrawLetterSize(FoolPlayersTD[i][0], 0.112999, 0.720592);
		TextDrawAlignment(FoolPlayersTD[i][0], 1);
		TextDrawColor(FoolPlayersTD[i][0], -1);
		TextDrawUseBox(FoolPlayersTD[i][0], true);
		TextDrawBoxColor(FoolPlayersTD[i][0], 0);
		TextDrawSetShadow(FoolPlayersTD[i][0], 0);
		TextDrawSetOutline(FoolPlayersTD[i][0], 0);
		TextDrawBackgroundColor(FoolPlayersTD[i][0], 51);
		TextDrawFont(FoolPlayersTD[i][0], 2);
		TextDrawSetProportional(FoolPlayersTD[i][0], 1);

		FoolPlayersTD[i][1] = TextDrawCreate(424.999908, 247.399948, "--");
		TextDrawLetterSize(FoolPlayersTD[i][1], 0.112999, 0.720592);
		TextDrawAlignment(FoolPlayersTD[i][1], 1);
		TextDrawColor(FoolPlayersTD[i][1], -1);
		TextDrawUseBox(FoolPlayersTD[i][1], true);
		TextDrawBoxColor(FoolPlayersTD[i][1], 0);
		TextDrawSetShadow(FoolPlayersTD[i][1], 0);
		TextDrawSetOutline(FoolPlayersTD[i][1], 0);
		TextDrawBackgroundColor(FoolPlayersTD[i][1], 51);
		TextDrawFont(FoolPlayersTD[i][1], 2);
		TextDrawSetProportional(FoolPlayersTD[i][1], 1);

		FoolPlayersTD[i][2] = TextDrawCreate(424.999908, 254.207382, "--");
		TextDrawLetterSize(FoolPlayersTD[i][2], 0.112999, 0.720592);
		TextDrawAlignment(FoolPlayersTD[i][2], 1);
		TextDrawColor(FoolPlayersTD[i][2], -1);
		TextDrawUseBox(FoolPlayersTD[i][2], true);
		TextDrawBoxColor(FoolPlayersTD[i][2], 0);
		TextDrawSetShadow(FoolPlayersTD[i][2], 0);
		TextDrawSetOutline(FoolPlayersTD[i][2], 0);
		TextDrawBackgroundColor(FoolPlayersTD[i][2], 51);
		TextDrawFont(FoolPlayersTD[i][2], 2);
		TextDrawSetProportional(FoolPlayersTD[i][2], 1);

		FoolPlayersTD[i][3] = TextDrawCreate(424.999908, 261.429656, "--");
		TextDrawLetterSize(FoolPlayersTD[i][3], 0.112999, 0.720592);
		TextDrawAlignment(FoolPlayersTD[i][3], 1);
		TextDrawColor(FoolPlayersTD[i][3], -1);
		TextDrawUseBox(FoolPlayersTD[i][3], true);
		TextDrawBoxColor(FoolPlayersTD[i][3], 0);
		TextDrawSetShadow(FoolPlayersTD[i][3], 0);
		TextDrawSetOutline(FoolPlayersTD[i][3], 0);
		TextDrawBackgroundColor(FoolPlayersTD[i][3], 51);
		TextDrawFont(FoolPlayersTD[i][3], 2);
		TextDrawSetProportional(FoolPlayersTD[i][3], 1);

		FoolPlayersTD[i][4] = TextDrawCreate(469.333435, 239.933303, "--");
		TextDrawLetterSize(FoolPlayersTD[i][4], 0.112999, 0.720592);
		TextDrawAlignment(FoolPlayersTD[i][4], 1);
		TextDrawColor(FoolPlayersTD[i][4], -1);
		TextDrawUseBox(FoolPlayersTD[i][4], true);
		TextDrawBoxColor(FoolPlayersTD[i][4], 0);
		TextDrawSetShadow(FoolPlayersTD[i][4], 0);
		TextDrawSetOutline(FoolPlayersTD[i][4], 0);
		TextDrawBackgroundColor(FoolPlayersTD[i][4], 51);
		TextDrawFont(FoolPlayersTD[i][4], 2);
		TextDrawSetProportional(FoolPlayersTD[i][4], 1);

		FoolPlayersTD[i][5] = TextDrawCreate(469.333435, 247.155502, "--");
		TextDrawLetterSize(FoolPlayersTD[i][5], 0.112999, 0.720592);
		TextDrawAlignment(FoolPlayersTD[i][5], 1);
		TextDrawColor(FoolPlayersTD[i][5], -1);
		TextDrawUseBox(FoolPlayersTD[i][5], true);
		TextDrawBoxColor(FoolPlayersTD[i][5], 0);
		TextDrawSetShadow(FoolPlayersTD[i][5], 0);
		TextDrawSetOutline(FoolPlayersTD[i][5], 0);
		TextDrawBackgroundColor(FoolPlayersTD[i][5], 51);
		TextDrawFont(FoolPlayersTD[i][5], 2);
		TextDrawSetProportional(FoolPlayersTD[i][5], 1);

		FoolPlayersTD[i][6] = TextDrawCreate(469.333435, 254.207397, "--");
		TextDrawLetterSize(FoolPlayersTD[i][6], 0.112999, 0.720592);
		TextDrawAlignment(FoolPlayersTD[i][6], 1);
		TextDrawColor(FoolPlayersTD[i][6], -1);
		TextDrawUseBox(FoolPlayersTD[i][6], true);
		TextDrawBoxColor(FoolPlayersTD[i][6], 0);
		TextDrawSetShadow(FoolPlayersTD[i][6], 0);
		TextDrawSetOutline(FoolPlayersTD[i][6], 0);
		TextDrawBackgroundColor(FoolPlayersTD[i][6], 51);
		TextDrawFont(FoolPlayersTD[i][6], 2);
		TextDrawSetProportional(FoolPlayersTD[i][6], 1);

		FoolPlayersTD[i][7] = TextDrawCreate(469.333435, 261.014801, "--");
		TextDrawLetterSize(FoolPlayersTD[i][7], 0.112999, 0.720592);
		TextDrawAlignment(FoolPlayersTD[i][7], 1);
		TextDrawColor(FoolPlayersTD[i][7], -1);
		TextDrawUseBox(FoolPlayersTD[i][7], true);
		TextDrawBoxColor(FoolPlayersTD[i][7], 0);
		TextDrawSetShadow(FoolPlayersTD[i][7], 0);
		TextDrawSetOutline(FoolPlayersTD[i][7], 0);
		TextDrawBackgroundColor(FoolPlayersTD[i][7], 51);
		TextDrawFont(FoolPlayersTD[i][7], 2);
		TextDrawSetProportional(FoolPlayersTD[i][7], 1);
		//Остальные элементы
		FoolOtherTD[i][0] = TextDrawCreate(130.000000, 160.000000, "usebox");
		TextDrawLetterSize(FoolOtherTD[i][0], -0.079333, 28.758626);
		TextDrawTextSize(FoolOtherTD[i][0], 119.333297, 86.281494);
		TextDrawAlignment(FoolOtherTD[i][0], 2);
		TextDrawColor(FoolOtherTD[i][0], 0);
		TextDrawUseBox(FoolOtherTD[i][0], true);
		TextDrawBoxColor(FoolOtherTD[i][0], -12320513);
		TextDrawSetShadow(FoolOtherTD[i][0], 0);
		TextDrawSetOutline(FoolOtherTD[i][0], 0);
		TextDrawFont(FoolOtherTD[i][0], 0);

		FoolOtherTD[i][1] = TextDrawCreate(130.000000, 161.000000, "usebox");
		TextDrawLetterSize(FoolOtherTD[i][1], -0.079333, 28.534622);
		TextDrawTextSize(FoolOtherTD[i][1], 120.666641, 84.207397);
		TextDrawAlignment(FoolOtherTD[i][1], 2);
		TextDrawColor(FoolOtherTD[i][1], 0);
		TextDrawUseBox(FoolOtherTD[i][1], true);
		TextDrawBoxColor(FoolOtherTD[i][1], 572662527);
		TextDrawSetShadow(FoolOtherTD[i][1], 0);
		TextDrawSetOutline(FoolOtherTD[i][1], 0);
		TextDrawFont(FoolOtherTD[i][1], 0);

		FoolOtherTD[i][2] = TextDrawCreate(320.000000, 206.992782, "~r~-~n~~g~-");
		TextDrawLetterSize(FoolOtherTD[i][2], 0.147666, 0.824296);
		TextDrawTextSize(FoolOtherTD[i][2], 286.000000, 188.740768);
		TextDrawAlignment(FoolOtherTD[i][2], 2);
		TextDrawColor(FoolOtherTD[i][2], -1);
		TextDrawUseBox(FoolOtherTD[i][2], true);
		TextDrawBoxColor(FoolOtherTD[i][2], 119);
		TextDrawSetShadow(FoolOtherTD[i][2], 0);
		TextDrawSetOutline(FoolOtherTD[i][2], 0);
		TextDrawBackgroundColor(FoolOtherTD[i][2], 51);
		TextDrawFont(FoolOtherTD[i][2], 2);
		TextDrawSetProportional(FoolOtherTD[i][2], 1);

		FoolOtherTD[i][3] = TextDrawCreate(320.000000, 306.792816, "Take cards");
		TextDrawLetterSize(FoolOtherTD[i][3], 0.158666, 1.002666);
		TextDrawTextSize(FoolOtherTD[i][3], 12.000001, 47.288879);
		TextDrawAlignment(FoolOtherTD[i][3], 2);
		TextDrawColor(FoolOtherTD[i][3], -12320513);
		TextDrawUseBox(FoolOtherTD[i][3], true);
		TextDrawBoxColor(FoolOtherTD[i][3], 572662527);
		TextDrawSetShadow(FoolOtherTD[i][3], 0);
		TextDrawSetOutline(FoolOtherTD[i][3], 0);
		TextDrawBackgroundColor(FoolOtherTD[i][3], 51);
		TextDrawFont(FoolOtherTD[i][3], 2);
		TextDrawSetProportional(FoolOtherTD[i][3], 1);
		TextDrawSetSelectable(FoolOtherTD[i][3], true);
		
		FoolOtherTD[i][4] = TextDrawCreate(320.000000, 306.792816, "Fight off");
		TextDrawLetterSize(FoolOtherTD[i][4], 0.158666, 1.002666);
		TextDrawTextSize(FoolOtherTD[i][4], 12.000001, 47.288879);
		TextDrawAlignment(FoolOtherTD[i][4], 2);
		TextDrawColor(FoolOtherTD[i][4], -12320513);
		TextDrawUseBox(FoolOtherTD[i][4], true);
		TextDrawBoxColor(FoolOtherTD[i][4], 572662527);
		TextDrawSetShadow(FoolOtherTD[i][4], 0);
		TextDrawSetOutline(FoolOtherTD[i][4], 0);
		TextDrawBackgroundColor(FoolOtherTD[i][4], 51);
		TextDrawFont(FoolOtherTD[i][4], 2);
		TextDrawSetProportional(FoolOtherTD[i][4], 1);
		TextDrawSetSelectable(FoolOtherTD[i][4], true);
	}
	/********************************************Интерфейс монетки**********************************/
	CoinsMenu[0] = TextDrawCreate(320.000000, 280.000000, "usebox");
	TextDrawLetterSize(CoinsMenu[0], 0.029244, 9.520864);
	TextDrawTextSize(CoinsMenu[0], 299.816040, 176.764785);
	TextDrawAlignment(CoinsMenu[0], 2);
	TextDrawColor(CoinsMenu[0], 0);
	TextDrawUseBox(CoinsMenu[0], true);
	TextDrawBoxColor(CoinsMenu[0], -12320513);
	TextDrawSetShadow(CoinsMenu[0], 0);
	TextDrawSetOutline(CoinsMenu[0], 0);
	TextDrawFont(CoinsMenu[0], 1);

	CoinsMenu[1] = TextDrawCreate(320.000000, 281.000000, "usebox");
	TextDrawLetterSize(CoinsMenu[1], 0.044241, 9.260548);
	TextDrawTextSize(CoinsMenu[1], 301.315734, 174.665405);
	TextDrawAlignment(CoinsMenu[1], 2);
	TextDrawColor(CoinsMenu[1], 0);
	TextDrawUseBox(CoinsMenu[1], true);
	TextDrawBoxColor(CoinsMenu[1], 572662527);
	TextDrawSetShadow(CoinsMenu[1], 0);
	TextDrawSetOutline(CoinsMenu[1], 0);
	TextDrawFont(CoinsMenu[1], 3);

	CoinsMenu[2] = TextDrawCreate(402.671417, 278.372985, "X");
	TextDrawLetterSize(CoinsMenu[2], 0.184551, 0.991190);
	TextDrawTextSize(CoinsMenu[2], 407.920318, 5.038425);
	TextDrawAlignment(CoinsMenu[2], 1);
	TextDrawColor(CoinsMenu[2], -12320513);
	TextDrawSetShadow(CoinsMenu[2], 0);
	TextDrawSetOutline(CoinsMenu[2], 0);
	TextDrawBackgroundColor(CoinsMenu[2], 51);
	TextDrawFont(CoinsMenu[2], 2);
	TextDrawSetProportional(CoinsMenu[2], 1);
	TextDrawSetSelectable(CoinsMenu[2], true);

	CoinsMenu[3] = TextDrawCreate(261.323944, 306.084320, "LD_SPAC:white");
	TextDrawLetterSize(CoinsMenu[3], 0.000000, 0.000000);
	TextDrawTextSize(CoinsMenu[3], 116.227294, 0.839752);
	TextDrawAlignment(CoinsMenu[3], 1);
	TextDrawColor(CoinsMenu[3], -12320513);
	TextDrawUseBox(CoinsMenu[3], true);
	TextDrawBoxColor(CoinsMenu[3], 0);
	TextDrawSetShadow(CoinsMenu[3], 0);
	TextDrawSetOutline(CoinsMenu[3], 0);
	TextDrawFont(CoinsMenu[3], 4);

	CoinsMenu[4] = TextDrawCreate(320.000000, 309.000000, "Select your coin");
	TextDrawLetterSize(CoinsMenu[4], 0.184551, 1.037376);
	TextDrawAlignment(CoinsMenu[4], 2);
	TextDrawColor(CoinsMenu[4], 1453874943);
	TextDrawSetShadow(CoinsMenu[4], 0);
	TextDrawSetOutline(CoinsMenu[4], 0);
	TextDrawBackgroundColor(CoinsMenu[4], 51);
	TextDrawFont(CoinsMenu[4], 2);
	TextDrawSetProportional(CoinsMenu[4], 1);

	CoinsMenu[5] = TextDrawCreate(320.000000, 367.900543, "Help");
	TextDrawLetterSize(CoinsMenu[5], 0.121564, 0.709878);
	TextDrawTextSize(CoinsMenu[5], 4.124192, 18.894065);
	TextDrawAlignment(CoinsMenu[5], 2);
	TextDrawColor(CoinsMenu[5], 572662527);
	TextDrawUseBox(CoinsMenu[5], true);
	TextDrawBoxColor(CoinsMenu[5], -12320513);
	TextDrawSetShadow(CoinsMenu[5], 0);
	TextDrawSetOutline(CoinsMenu[5], 0);
	TextDrawBackgroundColor(CoinsMenu[5], 51);
	TextDrawFont(CoinsMenu[5], 2);
	TextDrawSetProportional(CoinsMenu[5], 1);
	TextDrawSetSelectable(CoinsMenu[5], true);
	
	/**************Alkatraz menu***************/
	AlkMenu[0] = TextDrawCreate(0.000000, 0.000000, "loadsc8:loadsc8");
	TextDrawLetterSize(AlkMenu[0], 0.000000, 0.000000);
	TextDrawTextSize(AlkMenu[0], 640.000000, 480.000000);
	TextDrawAlignment(AlkMenu[0], 1);
	TextDrawColor(AlkMenu[0], -1);
	TextDrawSetShadow(AlkMenu[0], 0);
	TextDrawSetOutline(AlkMenu[0], 0);
	TextDrawFont(AlkMenu[0], 4);

	AlkMenu[1] = TextDrawCreate(250.444442, 391.757812, "usebox");
	TextDrawLetterSize(AlkMenu[1], 0.000000, 4.661108);
	TextDrawTextSize(AlkMenu[1], 40.222221, 0.000000);
	TextDrawAlignment(AlkMenu[1], 1);
	TextDrawColor(AlkMenu[1], 0);
	TextDrawUseBox(AlkMenu[1], true);
	TextDrawBoxColor(AlkMenu[1], -2067671297);
	TextDrawSetShadow(AlkMenu[1], 0);
	TextDrawSetOutline(AlkMenu[1], 0);
	TextDrawFont(AlkMenu[1], 0);

	AlkMenu[2] = TextDrawCreate(231.777770, 260.842254, "usebox");
	TextDrawLetterSize(AlkMenu[2], 0.000000, 14.364809);
	TextDrawTextSize(AlkMenu[2], 43.777778, 0.000000);
	TextDrawAlignment(AlkMenu[2], 1);
	TextDrawColor(AlkMenu[2], 0);
	TextDrawUseBox(AlkMenu[2], true);
	TextDrawBoxColor(AlkMenu[2], 1571537919);
	TextDrawSetShadow(AlkMenu[2], 0);
	TextDrawSetOutline(AlkMenu[2], 0);
	TextDrawFont(AlkMenu[2], 0);

	AlkMenu[3] = TextDrawCreate(136.000015, 371.844360, "Escape from~n~Alkatraz");
	TextDrawLetterSize(AlkMenu[3], 0.469998, 2.048710);
	TextDrawAlignment(AlkMenu[3], 2);
	TextDrawColor(AlkMenu[3], -6749953);
	TextDrawSetShadow(AlkMenu[3], 0);
	TextDrawSetOutline(AlkMenu[3], 1);
	TextDrawBackgroundColor(AlkMenu[3], 572662527);
	TextDrawFont(AlkMenu[3], 0);
	TextDrawSetProportional(AlkMenu[3], 1);

	AlkMenu[4] = TextDrawCreate(136.000015, 343.964355, Mode_Name);
	TextDrawLetterSize(AlkMenu[4], 0.799776, 3.063466);
	TextDrawAlignment(AlkMenu[4], 2);
	TextDrawColor(AlkMenu[4], 572662527);
	TextDrawSetShadow(AlkMenu[4], 0);
	TextDrawSetOutline(AlkMenu[4], 1);
	TextDrawBackgroundColor(AlkMenu[4], -1);
	TextDrawFont(AlkMenu[4], 0);
	TextDrawSetProportional(AlkMenu[4], 1);

	AlkMenu[5] = TextDrawCreate(136.888870, 58.737758, "New Textdraw");
	TextDrawLetterSize(AlkMenu[5], 0.449999, 1.600000);
	TextDrawTextSize(AlkMenu[5], 362.222320, 371.342224);
	TextDrawAlignment(AlkMenu[5], 1);
	TextDrawColor(AlkMenu[5], -1);
	TextDrawUseBox(AlkMenu[5], true);
	TextDrawBoxColor(AlkMenu[5], 0);
	TextDrawBackgroundColor(AlkMenu[5], 0x00000000);
	TextDrawSetShadow(AlkMenu[5], 0);
	TextDrawSetOutline(AlkMenu[5], 1);
	TextDrawFont(AlkMenu[5], 5);
	TextDrawSetProportional(AlkMenu[5], 1);
	TextDrawSetPreviewModel(AlkMenu[5], 19804);
	TextDrawSetPreviewRot(AlkMenu[5], 0.000000, 0.000000, 0.000000, 1.000000);

	AlkMenu[6] = TextDrawCreate(320.000000, 70.000000, "STOP BREAK");
	TextDrawLetterSize(AlkMenu[6], 0.318443, 1.535287);
	TextDrawTextSize(AlkMenu[6], 21.0, 54.755485);
	TextDrawAlignment(AlkMenu[6], 2);
	TextDrawColor(AlkMenu[6], -12320513);
	TextDrawUseBox(AlkMenu[6], true);
	TextDrawBoxColor(AlkMenu[6], 572662527);
	TextDrawSetShadow(AlkMenu[6], 0);
	TextDrawSetOutline(AlkMenu[6], 0);
	TextDrawBackgroundColor(AlkMenu[6], 51);
	TextDrawFont(AlkMenu[6], 2);
	TextDrawSetProportional(AlkMenu[6], 1);
	TextDrawSetSelectable(AlkMenu[6], true);

	AlkMenu[7] = TextDrawCreate(320.000000, 100.000000, "HELP");
	TextDrawLetterSize(AlkMenu[7], 0.318443, 1.535287);
	TextDrawTextSize(AlkMenu[7], 13.0, 54.755466);
	TextDrawAlignment(AlkMenu[7], 2);
	TextDrawColor(AlkMenu[7], 1724645631);
	TextDrawUseBox(AlkMenu[7], true);
	TextDrawBoxColor(AlkMenu[7], 572662527);
	TextDrawSetShadow(AlkMenu[7], 0);
	TextDrawSetOutline(AlkMenu[7], 0);
	TextDrawBackgroundColor(AlkMenu[7], 51);
	TextDrawFont(AlkMenu[7], 2);
	TextDrawSetProportional(AlkMenu[7], 1);
	TextDrawSetSelectable(AlkMenu[7], true);

	AlkMenu[8] = TextDrawCreate(374.000000, 244.415542, "usebox");
	TextDrawLetterSize(AlkMenu[8], 0.000000, 1.176668);
	TextDrawTextSize(AlkMenu[8], 268.222229, 0.000000);
	TextDrawAlignment(AlkMenu[8], 1);
	TextDrawColor(AlkMenu[8], 0);
	TextDrawUseBox(AlkMenu[8], true);
	TextDrawBoxColor(AlkMenu[8], 572662391);
	TextDrawSetShadow(AlkMenu[8], 0);
	TextDrawSetOutline(AlkMenu[8], 0);
	TextDrawFont(AlkMenu[8], 0);

	AlkMenu[9] = TextDrawCreate(374.000000, 257.859893, "usebox");
	TextDrawLetterSize(AlkMenu[9], 0.000000, 1.176668);
	TextDrawTextSize(AlkMenu[9], 268.222229, 0.000000);
	TextDrawAlignment(AlkMenu[9], 1);
	TextDrawColor(AlkMenu[9], 0);
	TextDrawUseBox(AlkMenu[9], true);
	TextDrawBoxColor(AlkMenu[9], 572662391);
	TextDrawSetShadow(AlkMenu[9], 0);
	TextDrawSetOutline(AlkMenu[9], 0);
	TextDrawFont(AlkMenu[9], 0);

	AlkMenu[10] = TextDrawCreate(374.000000, 271.304290, "usebox");
	TextDrawLetterSize(AlkMenu[10], 0.000000, 1.176668);
	TextDrawTextSize(AlkMenu[10], 268.222229, 0.000000);
	TextDrawAlignment(AlkMenu[10], 1);
	TextDrawColor(AlkMenu[10], 0);
	TextDrawUseBox(AlkMenu[10], true);
	TextDrawBoxColor(AlkMenu[10], 572662391);
	TextDrawSetShadow(AlkMenu[10], 0);
	TextDrawSetOutline(AlkMenu[10], 0);
	TextDrawFont(AlkMenu[10], 0);

	AlkMenu[11] = TextDrawCreate(374.000000, 284.748596, "usebox");
	TextDrawLetterSize(AlkMenu[11], 0.000000, 1.176668);
	TextDrawTextSize(AlkMenu[11], 268.222229, 0.000000);
	TextDrawAlignment(AlkMenu[11], 1);
	TextDrawColor(AlkMenu[11], 0);
	TextDrawUseBox(AlkMenu[11], true);
	TextDrawBoxColor(AlkMenu[11], 572662391);
	TextDrawSetShadow(AlkMenu[11], 0);
	TextDrawSetOutline(AlkMenu[11], 0);
	TextDrawFont(AlkMenu[11], 0);

	AlkMenu[12] = TextDrawCreate(374.000000, 298.192962, "usebox");
	TextDrawLetterSize(AlkMenu[12], 0.000000, 1.176668);
	TextDrawTextSize(AlkMenu[12], 268.222229, 0.000000);
	TextDrawAlignment(AlkMenu[12], 1);
	TextDrawColor(AlkMenu[12], 0);
	TextDrawUseBox(AlkMenu[12], true);
	TextDrawBoxColor(AlkMenu[12], 572662391);
	TextDrawSetShadow(AlkMenu[12], 0);
	TextDrawSetOutline(AlkMenu[12], 0);
	TextDrawFont(AlkMenu[12], 0);

	AlkMenu[13] = TextDrawCreate(374.000000, 311.637298, "usebox");
	TextDrawLetterSize(AlkMenu[13], 0.000000, 1.176668);
	TextDrawTextSize(AlkMenu[13], 268.222229, 0.000000);
	TextDrawAlignment(AlkMenu[13], 1);
	TextDrawColor(AlkMenu[13], 0);
	TextDrawUseBox(AlkMenu[13], true);
	TextDrawBoxColor(AlkMenu[13], 572662391);
	TextDrawSetShadow(AlkMenu[13], 0);
	TextDrawSetOutline(AlkMenu[13], 0);
	TextDrawFont(AlkMenu[13], 0);

	AlkMenu[14] = TextDrawCreate(374.000000, 325.081726, "usebox");
	TextDrawLetterSize(AlkMenu[14], 0.000000, 1.176668);
	TextDrawTextSize(AlkMenu[14], 268.222229, 0.000000);
	TextDrawAlignment(AlkMenu[14], 1);
	TextDrawColor(AlkMenu[14], 0);
	TextDrawUseBox(AlkMenu[14], true);
	TextDrawBoxColor(AlkMenu[14], 572662391);
	TextDrawSetShadow(AlkMenu[14], 0);
	TextDrawSetOutline(AlkMenu[14], 0);
	TextDrawFont(AlkMenu[14], 0);
	//
	//Miner GG
	FactoryGame[0] = TextDrawCreate(320.000000, 180.000000, "usebox");
	TextDrawLetterSize(FactoryGame[0], 0.037111, 12.292046);
	TextDrawTextSize(FactoryGame[0], 298.666748, 110.008804);
	TextDrawAlignment(FactoryGame[0], 2);
	TextDrawColor(FactoryGame[0], 0);
	TextDrawUseBox(FactoryGame[0], true);
	TextDrawBoxColor(FactoryGame[0], 572662527);
	TextDrawSetShadow(FactoryGame[0], 0);
	TextDrawSetOutline(FactoryGame[0], 0);
	TextDrawFont(FactoryGame[0], 0);
	FactoryGame[1] = TextDrawCreate(267.778106, 182.435562, "LD_SPAC:white");
	TextDrawLetterSize(FactoryGame[1], 0.000000, 0.000000);
	TextDrawTextSize(FactoryGame[1], 33.111114, 33.102218);
	TextDrawAlignment(FactoryGame[1], 1);
	TextDrawColor(FactoryGame[1], -2100297729);
	TextDrawSetShadow(FactoryGame[1], 0);
	TextDrawSetOutline(FactoryGame[1], 0);
	TextDrawFont(FactoryGame[1], 4);
	TextDrawSetPreviewModel(FactoryGame[1], 0);
	TextDrawSetPreviewRot(FactoryGame[1], 0.000000, 0.000000, 0.000000, 0.000000);
	FactoryGame[2] = TextDrawCreate(303.666809, 182.191116, "LD_SPAC:white");
	TextDrawLetterSize(FactoryGame[2], 0.000000, 0.000000);
	TextDrawTextSize(FactoryGame[2], 33.111114, 33.102218);
	TextDrawAlignment(FactoryGame[2], 1);
	TextDrawColor(FactoryGame[2], -2100297729);
	TextDrawSetShadow(FactoryGame[2], 0);
	TextDrawSetOutline(FactoryGame[2], 0);
	TextDrawFont(FactoryGame[2], 4);
	FactoryGame[3] = TextDrawCreate(339.777954, 182.435562, "LD_SPAC:white");
	TextDrawLetterSize(FactoryGame[3], 0.000000, 0.000000);
	TextDrawTextSize(FactoryGame[3], 33.111114, 33.102218);
	TextDrawAlignment(FactoryGame[3], 1);
	TextDrawColor(FactoryGame[3], -2100297729);
	TextDrawSetShadow(FactoryGame[3], 0);
	TextDrawSetOutline(FactoryGame[3], 0);
	TextDrawFont(FactoryGame[3], 4);
	FactoryGame[4] = TextDrawCreate(267.778106, 218.528854, "LD_SPAC:white");
	TextDrawLetterSize(FactoryGame[4], 0.000000, 0.000000);
	TextDrawTextSize(FactoryGame[4], 33.111114, 33.102218);
	TextDrawAlignment(FactoryGame[4], 1);
	TextDrawColor(FactoryGame[4], -2100297729);
	TextDrawSetShadow(FactoryGame[4], 0);
	TextDrawSetOutline(FactoryGame[4], 0);
	TextDrawFont(FactoryGame[4], 4);
	FactoryGame[5] = TextDrawCreate(303.666809, 218.528854, "LD_SPAC:white");
	TextDrawLetterSize(FactoryGame[5], 0.000000, 0.000000);
	TextDrawTextSize(FactoryGame[5], 33.111114, 33.102218);
	TextDrawAlignment(FactoryGame[5], 1);
	TextDrawColor(FactoryGame[5], -2100297729);
	TextDrawSetShadow(FactoryGame[5], 0);
	TextDrawSetOutline(FactoryGame[5], 0);
	TextDrawFont(FactoryGame[5], 4);
	FactoryGame[6] = TextDrawCreate(339.777954, 218.528854, "LD_SPAC:white");
	TextDrawLetterSize(FactoryGame[6], 0.000000, 0.000000);
	TextDrawTextSize(FactoryGame[6], 33.111114, 33.102218);
	TextDrawAlignment(FactoryGame[6], 1);
	TextDrawColor(FactoryGame[6], -2100297729);
	TextDrawSetShadow(FactoryGame[6], 0);
	TextDrawSetOutline(FactoryGame[6], 0);
	TextDrawFont(FactoryGame[6], 4);
	FactoryGame[7] = TextDrawCreate(267.778106, 255.128829, "LD_SPAC:white");
	TextDrawLetterSize(FactoryGame[7], 0.000000, 0.000000);
	TextDrawTextSize(FactoryGame[7], 33.111114, 33.102218);
	TextDrawAlignment(FactoryGame[7], 1);
	TextDrawColor(FactoryGame[7], -2100297729);
	TextDrawSetShadow(FactoryGame[7], 0);
	TextDrawSetOutline(FactoryGame[7], 0);
	TextDrawFont(FactoryGame[7], 4);
	FactoryGame[8] = TextDrawCreate(303.666809, 255.128829, "LD_SPAC:white");
	TextDrawLetterSize(FactoryGame[8], 0.000000, 0.000000);
	TextDrawTextSize(FactoryGame[8], 33.111114, 33.102218);
	TextDrawAlignment(FactoryGame[8], 1);
	TextDrawColor(FactoryGame[8], -2100297729);
	TextDrawSetShadow(FactoryGame[8], 0);
	TextDrawSetOutline(FactoryGame[8], 0);
	TextDrawFont(FactoryGame[8], 4);
	FactoryGame[9] = TextDrawCreate(339.777954, 255.128829, "LD_SPAC:white");
	TextDrawLetterSize(FactoryGame[9], 0.000000, 0.000000);
	TextDrawTextSize(FactoryGame[9], 33.111114, 33.102218);
	TextDrawAlignment(FactoryGame[9], 1);
	TextDrawColor(FactoryGame[9], -2100297729);
	TextDrawSetShadow(FactoryGame[9], 0);
	TextDrawSetOutline(FactoryGame[9], 0);
	TextDrawFont(FactoryGame[9], 4);
	
	#include <inventory/inv_global_td.pwn>//ТД инвентаря глобальные
	
	print("Textdraws created");
}
ShowPlayerCards(playerid)
{
	FoolCards[playerid][0] = CreatePlayerTextDraw(playerid, 87.333374, 160.288909, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][0], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][0], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][0], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][0], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][0], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][0]);
	
	FoolCards[playerid][1] = CreatePlayerTextDraw(playerid, 117.666664, 160.288909, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][1], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][1], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][1], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][1], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][1], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][1], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][1]);

	FoolCards[playerid][2] = CreatePlayerTextDraw(playerid, 148.333328, 160.288909, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][2], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][2], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][2], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][2], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][2], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][2], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][2]);

	FoolCards[playerid][3] = CreatePlayerTextDraw(playerid, 87.333374, 203.526016, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][3], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][3], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][3], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][3], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][3], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][3], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][3]);

	FoolCards[playerid][4] = CreatePlayerTextDraw(playerid, 117.666664, 203.526016, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][4], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][4], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][4], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][4], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][4], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][4], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][4]);

	FoolCards[playerid][5] = CreatePlayerTextDraw(playerid, 148.333328, 203.526016, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][5], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][5], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][5], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][5], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][5], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][5], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][5]);

	FoolCards[playerid][6] = CreatePlayerTextDraw(playerid, 87.333374, 246.763107, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][6], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][6], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][6], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][6], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][6], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][6], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][6], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][6]);

	FoolCards[playerid][7] = CreatePlayerTextDraw(playerid, 117.666664, 246.763107, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][7], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][7], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][7], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][7], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][7], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][7], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][7], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][7]);

	FoolCards[playerid][8] = CreatePlayerTextDraw(playerid, 148.333328, 246.763107, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][8], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][8], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][8], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][8], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][8], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][8], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][8], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][8]);

	FoolCards[playerid][9] = CreatePlayerTextDraw(playerid, 87.333374, 290.000213, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][9], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][9], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][9], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][9], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][9], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][9], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][9], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][9]);

	FoolCards[playerid][10] = CreatePlayerTextDraw(playerid, 117.666664, 290.000213, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][10], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][10], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][10], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][10], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][10], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][10], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][10], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][10]);

	FoolCards[playerid][11] = CreatePlayerTextDraw(playerid, 148.333328, 290.000213, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][11], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][11], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][11], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][11], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][11], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][11], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][11], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][11]);

	FoolCards[playerid][12] = CreatePlayerTextDraw(playerid, 87.333374, 333.237152, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][12], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][12], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][12], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][12], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][12], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][12], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][12], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][12], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][12]);

	FoolCards[playerid][13] = CreatePlayerTextDraw(playerid, 117.666664, 333.237152, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][13], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][13], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][13], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][13], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][13], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][13], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][13], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][13], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][13]);

	FoolCards[playerid][14] = CreatePlayerTextDraw(playerid, 148.333328, 333.237152, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][14], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][14], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][14], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][14], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][14], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][14], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][14], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][14], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][14]);

	FoolCards[playerid][15] = CreatePlayerTextDraw(playerid, 87.333374, 376.474182, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][15], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][15], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][15], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][15], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][15], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][15], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][15], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][15], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][15]);

	FoolCards[playerid][16] = CreatePlayerTextDraw(playerid, 117.666664, 376.474182, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][16], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][16], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][16], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][16], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][16], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][16], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][16], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][16], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][16]);

	FoolCards[playerid][17] = CreatePlayerTextDraw(playerid, 148.333328, 376.474182, "_");
	PlayerTextDrawLetterSize(playerid, FoolCards[playerid][17], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, FoolCards[playerid][17], 24.666673, 41.896263);
	PlayerTextDrawAlignment(playerid, FoolCards[playerid][17], 1);
	PlayerTextDrawColor(playerid, FoolCards[playerid][17], -1);
	PlayerTextDrawSetShadow(playerid, FoolCards[playerid][17], 0);
	PlayerTextDrawSetOutline(playerid, FoolCards[playerid][17], 0);
	PlayerTextDrawFont(playerid, FoolCards[playerid][17], 4);
	PlayerTextDrawSetSelectable(playerid, FoolCards[playerid][17], true);
	PlayerTextDrawShow(playerid, FoolCards[playerid][17]);
	return 1;
}
HidePlayerCards(playerid)
{
	for(new i; i < 18; i++)
		DestroyPlayerTD(playerid, FoolCards[playerid][i]);
	return 1;
}
SwitchTurn(foolid, s)
{
	FoolInfo[foolid][foolDefCards] = 0;
	FoolInfo[foolid][foolBito] = 0;
	FoolInfo[foolid][foolUpcards] = 0;
	FoolInfo[foolid][foolDowncards] = 0;
	new attackplayer = -1, defenceplayer = -1;
	new string[86];
	for(new x; x < 4; x++){
		if(FoolGamers[foolid][x] != INVALID_PLAYER_ID && GetPVarInt(FoolGamers[foolid][x], "FoolBet")){
			SetPVarInt(FoolGamers[foolid][x], "NeedCards", 1);
			PlayerTextDrawColor(FoolGamers[foolid][x], FoolCards[FoolGamers[foolid][x]][GetPVarInt(FoolGamers[foolid][x], "SelectCard")], 0xFFFFFFFF);
			PlayerTextDrawShow(FoolGamers[foolid][x], FoolCards[FoolGamers[foolid][x]][GetPVarInt(FoolGamers[foolid][x], "SelectCard")]);
			DeletePVar(FoolGamers[foolid][x], "SelectedCard");
			DeletePVar(FoolGamers[foolid][x], "SelectCard");
			TextDrawHideForPlayer(FoolGamers[foolid][x], FoolOtherTD[foolid][4]);
			TextDrawHideForPlayer(FoolGamers[foolid][x], FoolOtherTD[foolid][3]);
		}
	}
	switch(s)
	{
	case 0:
		{
			for(new i; i < 4; i++){
				if(FoolGamers[foolid][i] == FoolInfo[foolid][foolDefence]){
					repeat_case_0_attack:attackplayer = (attackplayer == FoolInfo[foolid][foolPlayers]-1) ? 0 : attackplayer+1;
					if(!GetPVarInt(FoolGamers[foolid][attackplayer], "FoolBet"))goto repeat_case_0_attack;
					defenceplayer = attackplayer;
					repeat_case_0_defence:defenceplayer = (defenceplayer == FoolInfo[foolid][foolPlayers]-1) ? 0 : defenceplayer+1;
					if(!GetPVarInt(FoolGamers[foolid][defenceplayer], "FoolBet"))goto repeat_case_0_defence;
					FoolInfo[foolid][foolAttack] = FoolGamers[foolid][attackplayer];
					FoolInfo[foolid][foolDefence] = FoolGamers[foolid][defenceplayer];
					break;
				}
			}
		}
	case 1:
		{
			loop: attackplayer = random(FoolInfo[foolid][foolPlayers]);
			if(FoolGamers[foolid][attackplayer] == INVALID_PLAYER_ID || !GetPVarInt(FoolGamers[foolid][attackplayer], "FoolBet"))goto loop;
			defenceplayer = attackplayer;
			repeat_case_1:defenceplayer = (defenceplayer == FoolInfo[foolid][foolPlayers]-1) ? 0 : defenceplayer+1;
			if(!GetPVarInt(FoolGamers[foolid][defenceplayer], "FoolBet"))goto repeat_case_1;
			FoolInfo[foolid][foolAttack] = FoolGamers[foolid][attackplayer];
			FoolInfo[foolid][foolDefence] = FoolGamers[foolid][defenceplayer];
			FoolInfo[foolid][foolDefCards] = 6;
		}
	case 2:
		{
			for(new i; i < 4; i++){
				if(FoolGamers[foolid][i] == FoolInfo[foolid][foolDefence]){
					attackplayer = i;
					defenceplayer = attackplayer;
					repeat_case_2:defenceplayer = (defenceplayer == FoolInfo[foolid][foolPlayers]-1) ? 0 : defenceplayer+1;
					if(!GetPVarInt(FoolGamers[foolid][defenceplayer], "FoolBet"))goto repeat_case_2;
					FoolInfo[foolid][foolAttack] = FoolGamers[foolid][attackplayer];
					FoolInfo[foolid][foolDefence] = FoolGamers[foolid][defenceplayer];
					break;
				}
			}
		}
	case 3:
		{
			for(new i; i < 4; i++){
				if(FoolGamers[foolid][i] == FoolInfo[foolid][foolDefence]){
					defenceplayer = i;
					attackplayer = (defenceplayer == FoolInfo[foolid][foolPlayers]-1) ? 0 : defenceplayer+1;
					FoolInfo[foolid][foolAttack] = FoolGamers[foolid][attackplayer];
					FoolInfo[foolid][foolDefence] = FoolGamers[foolid][defenceplayer];
					break;
				}
			}
		}
	}
	f(string, "~r~Attack: %s~n~~g~Defence: %s", Name(FoolGamers[foolid][attackplayer]), Name(FoolGamers[foolid][defenceplayer]));
	TextDrawSetString(FoolOtherTD[foolid][2], string);
	SetPVarInt(FoolInfo[foolid][foolAttack], "FoolTimer", 30);
	SetPVarInt(FoolInfo[foolid][foolDefence], "FoolTimer", 30);
	TakeCards(foolid);
	return 1;
}
SetBit(playerid, foolid, hand, table, i, kozir = 0){
	if((kozir == 0 && ((hand > table || hand == 1) && table != 1)) || kozir == 1){
		new card = GetPVarInt(playerid, "SelectCard");
		SetString(DownCards[foolid][i], PlayerCards[playerid][card]);
		TextDrawSetString(BitCardsTD[foolid][i], PlayerCards[playerid][card]);
		SetString(PlayerCards[playerid][card], "");
		PlayerTextDrawSetString(playerid, FoolCards[playerid][card], "_");
		FoolInfo[foolid][foolDowncards]++;
		SetPVarInt(playerid, "FoolTimer", GetPVarInt(playerid, "FoolTimer")+15);
		DeletePVar(playerid, "SelectedCard");
		DeletePVar(playerid, "SelectCard");
		if(FoolInfo[foolid][foolDowncards] == FoolInfo[foolid][foolUpcards]){
			for(new x; x < 4; x++){
				if(FoolGamers[foolid][x] != INVALID_PLAYER_ID && FoolGamers[foolid][x] != FoolInfo[foolid][foolDefence]){
					TextDrawShowForPlayer(FoolGamers[foolid][x], FoolOtherTD[foolid][4]);
				}
			}
			TextDrawHideForPlayer(FoolInfo[foolid][foolDefence], FoolOtherTD[foolid][3]);
		}
		return 1;
	}else{
		SendClientMessage(playerid, COLOR_LIGHTRED, "Эта карта ниже по достоинству. Ей нельзя отбиться");
		DeletePVar(playerid, "SelectedCard");
		DeletePVar(playerid, "SelectCard");
		return 1;
	}
}
EndFoolPlayer(playerid)
{
	DeletePVar(playerid,"FoolScore");
	DeletePVar(playerid,"FoolBet");
	DeletePVar(playerid,"FoolLost");
	DeletePVar(playerid,"FoolTimer");
	new foolid = GetPVarInt(playerid, "FoolTable");
	FoolInfo[foolid][foolTotal]--;
	if(FoolInfo[foolid][foolTotal] == 1)
	{
		for(new i; i < 4; i++)
		{
			if(GetPVarInt(FoolGamers[foolid][i], "FoolBet"))
			{
				SendClientMessage(FoolGamers[foolid][i], COLOR_LIGHTRED, "К сожалению. Вы проиграли эту партию");
				EndFoolPlayer(FoolGamers[foolid][i]);
				break;
			}
		}
		FoolEndGame(foolid);
	}
	for(new i; i < 36; i++){
		if(i < 18)PlayerTextDrawSetString(playerid, FoolCards[playerid][i], "_");
		SetString(PlayerCards[playerid][i], "");
	}
	return 1;
}
SetCoinsPlayers(starterid, opponentid, bet)
{
	CoinsOpponent[starterid] = opponentid;
	CoinsOpponent[opponentid] = starterid;
	CoinsBet[starterid] = bet;
	CoinsBet[opponentid] = bet;
	new string[144];
	f(string, "\n\n\\c{ffffff}%s[%d] предлагает Вам сыграть с ним в монетку на $%d\n\n\\c{C9EAFF}Нажмите 'Принять' для игры или 'Отказаться' для отмены\n\n", Name(starterid), starterid, bet);
	Dialog_Open(opponentid, 1483, 0, "Приглашение на игру", string, "Принять", "Отказаться");
	return 1;
}
ClearCoinsPlayers(opponent, playerid)
{
	CoinsBet[playerid] = 0;
	CoinsSelect[playerid] = -1;
	CoinsOpponent[playerid] = INVALID_PLAYER_ID;
	if(opponent != INVALID_PLAYER_ID){
		CoinsBet[opponent] = 0;
		CoinsSelect[opponent] = -1;
		CoinsOpponent[opponent] = INVALID_PLAYER_ID;
	}
	return 1;
}
forward ShowPlayerCoins(playerid);
public ShowPlayerCoins(playerid)
{
	if(CoinsOpponent[playerid] == INVALID_PLAYER_ID)return SendError(playerid, "Начните игру заново");
	new string[MAX_PLAYER_NAME + 36];
	f(string, "Your opponent: %s~n~~y~Bet: $%d", Name(CoinsOpponent[playerid]), CoinsBet[playerid]);
	CoinsTD[playerid][0] = CreatePlayerTextDraw(playerid, 320.000000, 282.000000, string);
	PlayerTextDrawLetterSize(playerid, CoinsTD[playerid][0], 0.195799, 1.150740);
	PlayerTextDrawAlignment(playerid, CoinsTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, CoinsTD[playerid][0], -12320513);
	PlayerTextDrawSetShadow(playerid, CoinsTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, CoinsTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, CoinsTD[playerid][0], 51);
	PlayerTextDrawFont(playerid, CoinsTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, CoinsTD[playerid][0], 1);
	PlayerTextDrawShow(playerid, CoinsTD[playerid][0]);

	CoinsTD[playerid][1] = CreatePlayerTextDraw(playerid, 292.067810, 314.061737, "middle coin");
	PlayerTextDrawLetterSize(playerid, CoinsTD[playerid][1], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, CoinsTD[playerid][1], 55.489189, 56.262397);
	PlayerTextDrawAlignment(playerid, CoinsTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, CoinsTD[playerid][1], (CoinsSelect[playerid] == 1) ? 0xFF440077 : -1);
	PlayerTextDrawUseBox(playerid, CoinsTD[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, CoinsTD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, CoinsTD[playerid][1], 0x00000000);
	PlayerTextDrawSetShadow(playerid, CoinsTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, CoinsTD[playerid][1], 1);
	PlayerTextDrawFont(playerid, CoinsTD[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid, CoinsTD[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, CoinsTD[playerid][1], true);
	PlayerTextDrawSetPreviewModel(playerid, CoinsTD[playerid][1], 1853);
	PlayerTextDrawSetPreviewRot(playerid, CoinsTD[playerid][1], 90.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid, CoinsTD[playerid][1]);

	CoinsTD[playerid][2] = CreatePlayerTextDraw(playerid, 347.807098, 314.061737, "right coin");
	PlayerTextDrawLetterSize(playerid, CoinsTD[playerid][2], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, CoinsTD[playerid][2], 55.489189, 56.262397);
	PlayerTextDrawAlignment(playerid, CoinsTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, CoinsTD[playerid][2], (CoinsSelect[playerid] == 2) ? 0xFF440077 : -1);
	PlayerTextDrawUseBox(playerid, CoinsTD[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, CoinsTD[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, CoinsTD[playerid][2], 0x00000000);
	PlayerTextDrawSetShadow(playerid, CoinsTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, CoinsTD[playerid][2], 1);
	PlayerTextDrawFont(playerid, CoinsTD[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, CoinsTD[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, CoinsTD[playerid][2], true);
	PlayerTextDrawSetPreviewModel(playerid, CoinsTD[playerid][2], 1857);
	PlayerTextDrawSetPreviewRot(playerid, CoinsTD[playerid][2], 90.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid, CoinsTD[playerid][2]);

	CoinsTD[playerid][3] = CreatePlayerTextDraw(playerid, 234.829315, 314.061737, "left coin");
	PlayerTextDrawLetterSize(playerid, CoinsTD[playerid][3], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, CoinsTD[playerid][3], 55.489189, 56.262397);
	PlayerTextDrawAlignment(playerid, CoinsTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, CoinsTD[playerid][3], (CoinsSelect[playerid] == 3) ? 0xFF440077 : -1);
	PlayerTextDrawUseBox(playerid, CoinsTD[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, CoinsTD[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, CoinsTD[playerid][3], 0x00000000);
	PlayerTextDrawSetShadow(playerid, CoinsTD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, CoinsTD[playerid][3], 1);
	PlayerTextDrawFont(playerid, CoinsTD[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, CoinsTD[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, CoinsTD[playerid][3], true);
	PlayerTextDrawSetPreviewModel(playerid, CoinsTD[playerid][3], 1855);
	PlayerTextDrawSetPreviewRot(playerid, CoinsTD[playerid][3], 90.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawShow(playerid, CoinsTD[playerid][3]);
	return 1;
}
HidePlayerCoins(playerid)
{
	for(new i; i < 4; i++)
		DestroyPlayerTD(playerid, CoinsTD[playerid][i]);
	return 1;
}
ShowCoins(playerid)
{
	TogglePlayerControllable(playerid,0);
	for(new i;i < sizeof CoinsMenu;i++)TextDrawShowForPlayer(playerid,CoinsMenu[i]);
	ShowPlayerCoins(playerid);
	SetPVarInt(playerid,"showedcoins",1);
	SelectTextDraw(playerid,0xFF4400AA);
	return 1;
}
HideCoins(playerid)
{
	TogglePlayerControllable(playerid,1);
	for(new i;i < sizeof CoinsMenu;i++)TextDrawHideForPlayer(playerid,CoinsMenu[i]);
	HidePlayerCoins(playerid);
	DeletePVar(playerid,"showedcoins");
	CancelSelectTextDraw(playerid);
	ClearCoinsPlayers(CoinsOpponent[playerid], playerid);
	return 1;
}
forward ShowCoinsResult(playerid);
public ShowCoinsResult(playerid)
{
	if(CoinsOpponent[playerid] == INVALID_PLAYER_ID){
		SendError(playerid, "Ваш оппонент покинул игру");
		return HideCoins(playerid);
	}
	if(CoinsSelect[playerid] == CoinsSelect[CoinsOpponent[playerid]])
	{
		GiveMoney(CoinsOpponent[playerid], -CoinsBet[playerid], "Монетка проигрыш");
		GiveMoney(playerid, CoinsBet[playerid], "Монетка выигрыш");
		new logtime[3],logdate[3],logtimestring[16];
		getdate(logdate[2],logdate[1],logdate[0]);
		gettime(logtime[0],logtime[1],logtime[2]);
		f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
		WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[CoinsOpponent[playerid]][pID],Name(CoinsOpponent[playerid]),PlayerInfo[playerid][pID],Name(playerid),"Проигрыш в монетку",-CoinsBet[playerid],PlayerIp[CoinsOpponent[playerid]],PlayerIp[playerid],GetMoney(CoinsOpponent[playerid]));
		GameTextForPlayer(CoinsOpponent[playerid], "~r~You lose", 3000, 6);
		GameTextForPlayer(playerid, "~g~You won", 3000, 6);
	}
	else
	{
		GiveMoney(playerid, -CoinsBet[playerid], "Монетка проигрыш");
		GiveMoney(CoinsOpponent[playerid], CoinsBet[playerid], "Монетка выигрыш");
		new logtime[3],logdate[3],logtimestring[16];
		getdate(logdate[2],logdate[1],logdate[0]);
		gettime(logtime[0],logtime[1],logtime[2]);
		f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
		WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),PlayerInfo[CoinsOpponent[playerid]][pID],Name(CoinsOpponent[playerid]),"Проигрыш в монетку",-CoinsBet[playerid],PlayerIp[playerid],PlayerIp[CoinsOpponent[playerid]],GetMoney(playerid));
		GameTextForPlayer(playerid, "~r~You lose", 3000, 6);
		GameTextForPlayer(CoinsOpponent[playerid], "~g~You won", 3000, 6);
	}
	CoinsSelect[CoinsOpponent[playerid]] = -1;
	CoinsSelect[playerid] = -1;
	HidePlayerCoins(playerid);
	HidePlayerCoins(CoinsOpponent[playerid]);
	SetPlayerTimer(playerid, "ShowPlayerCoins", 3000, false);
	SetPlayerTimer(CoinsOpponent[playerid], "ShowPlayerCoins", 3000, false);
	return true;
}
TakeCards(foolid){
	new cards[12];
	new playerid = -1;
	loop:playerid++;
	if(FoolGamers[foolid][playerid] != INVALID_PLAYER_ID && GetPVarInt(FoolGamers[foolid][playerid], "NeedCards")){
		DeletePVar(FoolGamers[foolid][playerid], "NeedCards");
		new num = -1;
		for(new i = 6; i < 36; i++){
			if(i < 18){
				if(strlen(PlayerCards[FoolGamers[foolid][playerid]][i]) > 5){
					PlayerTextDrawSetString(FoolGamers[foolid][playerid], FoolCards[FoolGamers[foolid][playerid]][i], PlayerCards[FoolGamers[foolid][playerid]][i]);
				}
			}
			if(strlen(PlayerCards[FoolGamers[foolid][playerid]][i]) > 5){
				repeat:num++;
				if(strlen(PlayerCards[playerid][num]) < 5){
					SetString(PlayerCards[FoolGamers[foolid][playerid]][num], PlayerCards[FoolGamers[foolid][playerid]][i]);
					PlayerTextDrawSetString(FoolGamers[foolid][playerid], FoolCards[FoolGamers[foolid][playerid]][num], PlayerCards[FoolGamers[foolid][playerid]][i]);
					PlayerTextDrawSetString(FoolGamers[foolid][playerid], FoolCards[FoolGamers[foolid][playerid]][i], "_");
					SetString(PlayerCards[FoolGamers[foolid][playerid]][i], "");
				}
				else if(num < 6)goto repeat;
			}
		}
		num = 0;	
		for(new i; i < 6; i++){
			if(strlen(PlayerCards[FoolGamers[foolid][playerid]][i]) > 5){
				num++;
				continue;
			}
			if(FoolInfo[foolid][foolNum] >= 36){
				TextDrawHideForPlayer(FoolGamers[foolid][playerid], TrumpCardsTD[foolid][1]);
				break;
			}
			SetString(PlayerCards[FoolGamers[foolid][playerid]][i], AllCards[FoolInfo[foolid][foolPos]][FoolInfo[foolid][foolNum]]);
			PlayerTextDrawSetString(FoolGamers[foolid][playerid], FoolCards[FoolGamers[foolid][playerid]][i], PlayerCards[FoolGamers[foolid][playerid]][i]);
			FoolInfo[foolid][foolNum]++;
			num++;
			f(cards, "%d CARDS",36-FoolInfo[foolid][foolNum]);
			TextDrawSetString(TrumpCardsTD[foolid][2], cards);
			if(num == 6)break;
		}
	}
	for(new x; x < 6; x++){
		if(strlen(PlayerCards[FoolInfo[foolid][foolDefence]][x]) > 5){
			FoolInfo[foolid][foolDefCards]++;
		}
	}
	if(playerid < 4)goto loop;
	return 1;
}
GiveCards(playerid, foolid)
{
	new num;
	for(new i = 6; i < 36; i++){
		if(i >= 34){
			new message[72];
			f(message, "%s проиграл эту партию, собрав у себя всю колоду", Name(FoolInfo[foolid][foolDefence]));
			for(new x; x < 4; x++){
				if(FoolGamers[foolid][x] != INVALID_PLAYER_ID && FoolGamers[foolid][x] != FoolInfo[foolid][foolDefence]){
					ShowFoolResult(playerid, foolid, 60);
					EndFoolPlayer(playerid);
					SendClientMessage(FoolGamers[foolid][x], COLOR_PURPLE, message);
				}
			}
			SendClientMessage(FoolInfo[foolid][foolDefence], COLOR_PURPLE, message);
		}
		if(strlen(UpCards[foolid][num]) < 5)break;
		if(strlen(PlayerCards[playerid][i]) > 5)continue;
		SetString(PlayerCards[playerid][i], UpCards[foolid][num]);
		SetString(UpCards[foolid][num], "");
		TextDrawSetString(FoolCardsTD[foolid][num], "_");
		num++;
		if(num == 6)break;
	}
	num = 0;
	for(new i = 6; i < 36; i++){
		if(i >= 34){
			new message[72];
			f(message, "%s проиграл эту партию, собрав у себя всю колоду", Name(FoolInfo[foolid][foolDefence]));
			for(new x; x < 4; x++){
				if(FoolGamers[foolid][x] != INVALID_PLAYER_ID && FoolGamers[foolid][x] != FoolInfo[foolid][foolDefence]){
					ShowFoolResult(playerid, foolid, 60);
					EndFoolPlayer(playerid);
					SendClientMessage(FoolGamers[foolid][x], COLOR_PURPLE, message);
				}
			}
			SendClientMessage(FoolInfo[foolid][foolDefence], COLOR_PURPLE, message);
		}
		if(strlen(DownCards[foolid][num]) < 5)break;
		if(strlen(PlayerCards[playerid][i]) > 5 )continue;
		SetString(PlayerCards[playerid][i], DownCards[foolid][num]);
		SetString(DownCards[foolid][num], "");
		TextDrawSetString(BitCardsTD[foolid][num], "_");
		num++;
		if(num == 6)break;
	}
	return 1;
}
StartGame(foolid)
{
	UpdateFoolTable(foolid);
	if(FoolInfo[foolid][foolTotal] == FoolInfo[foolid][foolPlayers] && FoolInfo[foolid][foolPlayers] >= 2){
		FoolInfo[foolid][foolGamestart] = 1;
		FoolInfo[foolid][foolPos] = random(6);
		for(new x; x < 4; x++){
			if(FoolGamers[foolid][x] != INVALID_PLAYER_ID){
				TextDrawShowForPlayer(FoolGamers[foolid][x], FoolOtherTD[foolid][2]);
				for(new i; i < 3; i++)
				TextDrawShowForPlayer(FoolGamers[foolid][x], TrumpCardsTD[foolid][i]);
			}
		}
		TextDrawSetString(TrumpCardsTD[foolid][0], AllCards[FoolInfo[foolid][foolPos]][35]);
		strmid(FoolInfo[foolid][foolTrump], AllCards[FoolInfo[foolid][foolPos]][35], strlen(AllCards[FoolInfo[foolid][foolPos]][35])-1, strlen(AllCards[FoolInfo[foolid][foolPos]][35]));
		SwitchTurn(foolid, 1);
	}else{
		for(new i; i < 4; i++){
			if(FoolGamers[foolid][i] != INVALID_PLAYER_ID){
				DeletePVar(FoolGamers[foolid][i],"FoolScore");
				DeletePVar(FoolGamers[foolid][i],"FoolBet");
				FoolInfo[foolid][foolBank] -= FoolInfo[foolid][foolBet];
				FoolInfo[foolid][foolTotal]--;
				GiveMoney(FoolGamers[foolid][i], FoolInfo[foolid][foolBet], "Возврат ставки в дурака");
				TextDrawSetString(FoolPlayersTD[foolid][GetPVarInt(FoolGamers[foolid][i], "FoolSlot")+4],"--");
				SendClientMessage(FoolGamers[foolid][i], COLOR_ORANGE, "Игра была отменена из-за недостаточного количества участников");
			}
		}
	}
	return 1;
}
BitCard(playerid, foolid, i){
	for(new c; c <= 6; c++){
		if(c == 6)return SendClientMessage(playerid, COLOR_ORANGE, "Отбой не может быть больше 6 карт");
		if(strlen(UpCards[foolid][c]) < 5){
			if(c){
				new check;
				new number[3], card[6], cards[6], botcards[6];
				strmid(card, PlayerCards[playerid][i], 10, strlen(PlayerCards[playerid][i])-1);
				sscanf(card, "d", number[0]);
				for(new x = 5; x >= 0; x--){
					if(strlen(UpCards[foolid][x]) < 5)continue;
					strmid(cards, UpCards[foolid][x], 10, strlen(UpCards[foolid][x])-1);
					strmid(botcards, DownCards[foolid][x], 10, strlen(DownCards[foolid][x])-1);
					sscanf(cards, "d", number[1]);
					sscanf(botcards, "d", number[2]);
					if(number[0] == number[1] || number[0] == number[2]){
						check = 1488;
						break;
					}
				}
				if(!check)return SendClientMessage(playerid, COLOR_ORANGE, "На столе нет карт такого же достоинства. Эту карту нельзя подкинуть");
			}
			SetString(UpCards[foolid][c], PlayerCards[playerid][i]);
			TextDrawSetString(FoolCardsTD[foolid][c], PlayerCards[playerid][i]);
			SetString(PlayerCards[playerid][i], "");
			PlayerTextDrawSetString(playerid, FoolCards[playerid][i], "_");
			DeletePVar(playerid, "SelectedCard");
			DeletePVar(playerid, "SelectCard");
			FoolInfo[foolid][foolUpcards]++;
			FoolInfo[foolid][foolBito] = 0;
			SetPVarInt(FoolInfo[foolid][foolAttack], "FoolTimer", GetPVarInt(FoolInfo[foolid][foolAttack], "FoolTimer")+15);
			if(36-FoolInfo[foolid][foolNum] <= 0){
				for(new l; l <= 36; l++){
					if(l == 36){
						ShowFoolResult(playerid, foolid, 60);
						EndFoolPlayer(playerid);
					}
					if(strlen(PlayerCards[playerid][l]) > 5)break;
				}
			}
			for(new x; x < 4; x++){
				if(FoolGamers[foolid][x] != INVALID_PLAYER_ID && FoolGamers[foolid][x] != FoolInfo[foolid][foolDefence]){
					TextDrawHideForPlayer(FoolGamers[foolid][x], FoolOtherTD[foolid][4]);
				}
			}
			TextDrawShowForPlayer(FoolInfo[foolid][foolDefence], FoolOtherTD[foolid][3]);
			return 1;
		}
	}
	return 1;
}
stock GetFreeSlot(playerid, type = 0){
	switch(type){
	case 0:
		{
			for(new i = 25; i < 75; i++)
				if(!SlotValue[playerid][i])return i;
			return -1;
		}
	case 1:
		{
			for(new i = 6; i < 25; i++)
				if(!FamilyValue[PlayerInfo[playerid][FamilyID]][i])return i;
			return -1;
		}
	case 2:
		{
			for(new i = 5; i < 25; i++)
				if(!FractionValue[PlayerInfo[playerid][pMember]][i])return i;
			return -1;
		}
	case 3:
		{
			for(new i = 3; i < 25; i++)
				if(!ClosetValue[SlotValue[playerid][1]][i])return i;
			return -1;
		}
	case 4:
		{
			for(new i = 5; i < 24; i++)
				if(!TrunkValue[idaofcar[playerid]][i])return i;
			return -1;
		}
	case 5:
		{
			for(new i; i < 4; i++)
				if(TradeSelected[playerid][i] == -1)return i;
			return -1;
		}
	}
	return -1;
}
stock GetPlayerCars(playerid){
	new cars;
	SlotValue[playerid][5] = 0;
	SlotValue[playerid][6] = 0;
	SlotValue[playerid][7] = 0;
	SlotValue[playerid][8] = 0;
	SlotValue[playerid][9] = 0;
	foreach(OWNABLECARS, i){
		new number = OwnableCar[i];
		if(IsPlayerHaveCar(playerid,number)){
		    SlotValue[playerid][cars+5] = number;
			cars++;
		}
	}
}
stock GetPlayerCasino(playerid)return SlotValue[playerid][10] = (GetString(CasinoInfo[0][casOwner],PlayerName[playerid])) ? 1 : 0;
stock ShowInventory(playerid){
	GetPlayerCasino(playerid);
	ListSlot[playerid] = 0;
	#include <inventory/inv_player_td.pwn>
	for(new i; i < 36; i++){
		PlayerTextDrawShow(playerid, InventarOther[playerid][i]);
		if(i < 19)TextDrawShowForPlayer(playerid, InventarTD[i]);
		if(i < 25){
			PlayerTextDrawShow(playerid, InventarItems[playerid][i]);
			new value[16];
			if(i >= 1 && i <= 4 && SlotValue[playerid][i+ListSlot[playerid]] >= 0)f(value, "ID %d", SlotValue[playerid][i]);
			else if(i >= 5 && i <= 9 && SlotValue[playerid][i+ListSlot[playerid]] >= 1)f(value, "ID %d", SlotValue[playerid][i]);
			else if(SlotValue[playerid][i+ListSlot[playerid]] > 1 && SlotValue[playerid][i+ListSlot[playerid]] < 100000000000)f(value, "%d", SlotValue[playerid][i+ListSlot[playerid]]);
			else f(value, "_");
			InventarValue[playerid][i] = CreatePlayerTextDraw(playerid, InventarItemPos[i][0]+28.500000, InventarItemPos[i][1]+23.500000, value);
			PlayerTextDrawLetterSize(playerid, InventarValue[playerid][i], 0.094443, 0.596976);
			PlayerTextDrawAlignment(playerid, InventarValue[playerid][i], 3);
			PlayerTextDrawColor(playerid, InventarValue[playerid][i], 255);
			PlayerTextDrawSetShadow(playerid, InventarValue[playerid][i], 0);
			PlayerTextDrawSetOutline(playerid, InventarValue[playerid][i], 0);
			PlayerTextDrawBackgroundColor(playerid, InventarValue[playerid][i], 51);
			PlayerTextDrawFont(playerid, InventarValue[playerid][i], 2);
			PlayerTextDrawSetProportional(playerid, InventarValue[playerid][i], 1);
			PlayerTextDrawShow(playerid, InventarValue[playerid][i]);
		}
	}
	SelectTextDraw(playerid, 0x0099FFAA);
	if(GetPVarInt(playerid, "NeedAssistance"))PlayerTextDrawHide(playerid, NeedAssistance[playerid]);
	SetPVarInt(playerid, "showedinv", 1);
	return 1;
}
stock ShowItems(playerid){
	GetPlayerCasino(playerid);
	#include <inventory/inv_player_td.pwn>
	for(new i; i < 25; i++){
		if(i >= 14 && i < 19)TextDrawShowForPlayer(playerid, InventarTD[i]);
		PlayerTextDrawShow(playerid, InventarItems[playerid][i]);
		new value[16];
		if(i >= 1 && i <= 4 && SlotValue[playerid][i+ListSlot[playerid]] >= 0)f(value, "ID %d", SlotValue[playerid][i]);
		else if(i >= 5 && i <= 9 && SlotValue[playerid][i+ListSlot[playerid]] >= 1)f(value, "ID %d", SlotValue[playerid][i]);
		else if(SlotValue[playerid][i+ListSlot[playerid]] > 1 && SlotValue[playerid][i+ListSlot[playerid]] < 100000000000)f(value, "%d", SlotValue[playerid][i+ListSlot[playerid]]);
		else f(value, "_");
		InventarValue[playerid][i] = CreatePlayerTextDraw(playerid, InventarItemPos[i][0]+28.500000, InventarItemPos[i][1]+23.500000, value);
		PlayerTextDrawLetterSize(playerid, InventarValue[playerid][i], 0.094443, 0.596976);
		PlayerTextDrawAlignment(playerid, InventarValue[playerid][i], 3);
		PlayerTextDrawColor(playerid, InventarValue[playerid][i], 255);
		PlayerTextDrawSetShadow(playerid, InventarValue[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, InventarValue[playerid][i], 0);
		PlayerTextDrawBackgroundColor(playerid, InventarValue[playerid][i], 51);
		PlayerTextDrawFont(playerid, InventarValue[playerid][i], 2);
		PlayerTextDrawSetProportional(playerid, InventarValue[playerid][i], 1);
		PlayerTextDrawShow(playerid, InventarValue[playerid][i]);
	}
	PlayerTextDrawShow(playerid, InventarOther[playerid][21]);
	PlayerTextDrawShow(playerid, InventarOther[playerid][22]);
	PlayerTextDrawShow(playerid, InventarOther[playerid][23]);
	PlayerTextDrawShow(playerid, InventarOther[playerid][24]);
	PlayerTextDrawShow(playerid, InventarOther[playerid][35]);
	SelectTextDraw(playerid, 0x0099FFAA);
	SetPVarInt(playerid, "showedinv", 1);
	if(GetPVarInt(playerid, "NeedAssistance"))PlayerTextDrawHide(playerid, NeedAssistance[playerid]);
	ListSlot[playerid] = 0;
	return 1;
}
stock ShowTrade(playerid){
	#include <inventory/inv_trade_td.pwn>
	for(new i; i < 12; i++){
		if(i < 4)TradeSelected[playerid][i] = -1;
		if(i < 5)TextDrawShowForPlayer(playerid, TradeTD[i]);
		if(i < 8)PlayerTextDrawShow(playerid, TradeValue[playerid][i]);
		PlayerTextDrawShow(playerid, TradeSlots[playerid][i]);
	}
	SetPVarInt(playerid, "showedtrade", 1);
	return 1;
}
stock HideTrade(playerid){
	for(new i; i < 12; i++){
		PlayerTextDrawHide(playerid, TradeSlots[playerid][i]);
		DestroyPlayerTD(playerid, TradeSlots[playerid][i]);
		if(i < 5)TextDrawHideForPlayer(playerid, TradeTD[i]);
		if(i < 8){
			PlayerTextDrawHide(playerid, TradeValue[playerid][i]);
			DestroyPlayerTD(playerid, TradeValue[playerid][i]);
		}
	}
	TradeOffer[playerid] = INVALID_PLAYER_ID;
	DeletePVar(playerid, "showedtrade");
	DeletePVar(playerid, "tradeaccept");
	return 1;
}
stock UseInventoryItem(playerid){
	new i = SelectedSlot[playerid] + ListSlot[playerid];
	switch(i){
	case 1:return callcmd::houseinfo(playerid);
	case 2:return callcmd::apart(playerid);
	case 3:return callcmd::bizinfo(playerid);
	case 4:return callcmd::stoinfo(playerid);
	case 5..9:
		{
			new carid = SlotValue[playerid][i];
			ShowVeh[playerid] = carid;
			if(IsPlayerHaveCar(playerid,carid))
			{
				new string[218];
				new str[25];
				SetString(str, VehicleName[GetVehicleModelEx(carid)-400]);
				new number = GetVehicleID(carid);
				if(CarInfo[number][cShtraf] > 0) return SendError(playerid,"Транспорт стоит на штрафстоянке");
				strcat(string,"{7396FB}[1] {FFFFFF}Припарковать\n");
				strcat(string,"{7396FB}[2] {FFFFFF}Найти\n");
				if(CarInfo[number][cAlarmON]) strcat(string,"{7396FB}[3] {7396FB}Выключить сигнализацию\n");
				else strcat(string,"{7396FB}[3] {7396FB}Включить сигнализацию\n");
				strcat(string,"{7396FB}[4] {7396FB}Информация о транспорт (ПТС)\n");
				if(IsPlayerRegCar(playerid,carid)) strcat(string,"{7396FB}[5] {7396FB}Очистить список посредников\n");
				else strcat(string,"{7396FB}[5] {7396FB}Вернуть ключи\n");
				ShowPlayerDialogEx(playerid,163,2,str,string,"Выбор","Отмена");
				return 1;
			}
		}
	case 10:return callcmd::casinoinfo(playerid);
	case 12:return callcmd::usemed_gg(playerid);
	case 13:return callcmd::usemask_gg(playerid);
	case 14:return callcmd::usedrugs_gg(playerid);
	case 15:return callcmd::usesmoke_gg(playerid);
	case 17:return callcmd::repcar_gg(playerid);
	case 18:return callcmd::killme_gg(playerid);
	case 20:return callcmd::fillcar_gg(playerid);
	case 21:return callcmd::first_help(playerid);
	case 23:return callcmd::out_gg(playerid);
	case 22:return callcmd::fixcar_tal(playerid);
	case 24:return callcmd::second_health(playerid);
	default:
		{
			switch(SlotValue[playerid][i]){
			case 19042..19053:return SetPlayerAcs(playerid, 2, i);//часы
			case 19421..19424:return SetPlayerAcs(playerid, 4, i);//наушники
			case 18911..18920,18910,18909,18908,18907,18906:return SetPlayerAcs(playerid, 3, i);//банданы
			case 19011..19019,19024,19027,19028,19029,19022,19035,19031,19032,19033:return SetPlayerAcs(playerid, 1, i);//очки
			case 19064..19066,19069,19068,19067,19554,18953,18954:return SetPlayerAcs(playerid, 0, i);//шапки
			case 19054..19058,3026,371,19559,19515:return SetPlayerAcs(playerid, 5, i);//рюкзаки
			case 18968,18967,18969:return SetPlayerAcs(playerid, 0, i);//панамки
			case 18955,18956,18957,18959:return SetPlayerAcs(playerid, 0, i);//кепки назад
			case 18926,18927,18928,18929,18930,18931,18932,18933:return SetPlayerAcs(playerid, 0, i);//кепки вперёд
			case 19104,19105,19106,19107,19108,19109:return SetPlayerAcs(playerid, 0, i);//каски
			case 19519,19274:return SetPlayerAcs(playerid, 0, i);//парики
			case 18925,18922,18923,18924,18921:return SetPlayerAcs(playerid, 0, i);//береты
			case 18947,18948,18949,18950,18951,18970,18973,18972,18971,19487,19352,19137,19528,18977,18978,18979,18645:return SetPlayerAcs(playerid, 0, i);//шляпы 11704,19472,19037,19036,19038,
			case 19351,19350:return SetPlayerAcs(playerid, 3, i);//усы
			case 19319,19318,19317:return SetPlayerAcs(playerid, 5, i);//гитары
			case 19085:return SetPlayerAcs(playerid, 1, i);//повязка
			case 19878:return SetPlayerAcs(playerid, 5, i);//скейт
			case 1..311:return UseSkin(playerid, i);//скины
			case 100000000001,100000000002:return PlayerPrint(playerid, 0, SlotValue[playerid][i]-100000000000, i);
			case 100000000011,100000000012:return PlayerPrint(playerid, 1, SlotValue[playerid][i]-100000000010, i);
			case 100000000021,100000000022:return PlayerPrint(playerid, 2, SlotValue[playerid][i]-100000000020, i);
			case 100000000081..100000000088:return PlayerCase(playerid, SlotValue[playerid][i]-100000000080, i);
			}
		}
	}
	return 1;
}
stock CreateActionMenu(playerid, i){
	new Float:pos[2];
	new ad = (!ListSlot[playerid]) ? i : 26;
	pos[0] = InventarItemPos[i][0]+14.800000;
	pos[1] = InventarItemPos[i][1]+13.200000;
	InventarAction[playerid][0] = CreatePlayerTextDraw(playerid, pos[0], pos[1], "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, InventarAction[playerid][0], 0.000000, 0.0);
	PlayerTextDrawTextSize(playerid, InventarAction[playerid][0], 40.222213, 42.053329);
	PlayerTextDrawAlignment(playerid, InventarAction[playerid][0], 1);
	PlayerTextDrawColor(playerid, InventarAction[playerid][0], 119);
	PlayerTextDrawFont(playerid, InventarAction[playerid][0], 4);
	PlayerTextDrawSetShadow(playerid, InventarAction[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, InventarAction[playerid][0], 0);
	PlayerTextDrawShow(playerid, InventarAction[playerid][0]);
	pos[0] = InventarItemPos[i][0]+35.000000;
	pos[1] = InventarItemPos[i][1]+16.500000;
	if(SelectedSlot[playerid] < 25){
		if(ItemsInfo[ad][invUse] && !GetPVarInt(playerid, "showedwindow") && !GetPVarInt(playerid, "showedtrade") && 
		((SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]] >= 1 && (SelectedSlot[playerid] + ListSlot[playerid] < 1 || SelectedSlot[playerid] + ListSlot[playerid] >= 5)) || 
		(SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]] > -1 && (SelectedSlot[playerid] + ListSlot[playerid] >= 1 && SelectedSlot[playerid] + ListSlot[playerid] <= 4)) ||
		(SelectedSlot[playerid]+ListSlot[playerid] == 21 && TalentsInfo[playerid][0][2] == 1) || (SelectedSlot[playerid]+ListSlot[playerid] == 22 && TalentsInfo[playerid][1][1] == 2) ||
		(SelectedSlot[playerid]+ListSlot[playerid] == 23 && TalentsInfo[playerid][3][2] == 1) || (SelectedSlot[playerid]+ListSlot[playerid] == 24 && TalentsInfo[playerid][0][2] == 3))){
			InventarAction[playerid][1] = CreatePlayerTextDraw(playerid, pos[0], pos[1], Translate(Language[11][PlayerInfo[playerid][pLanguage]]));
			PlayerTextDrawLetterSize(playerid, InventarAction[playerid][1], 0.112222, 0.641777);
			PlayerTextDrawTextSize(playerid, InventarAction[playerid][1], 6.777777, 34.346660);
			PlayerTextDrawAlignment(playerid, InventarAction[playerid][1], 2);
			PlayerTextDrawColor(playerid, InventarAction[playerid][1], 255);
			PlayerTextDrawUseBox(playerid, InventarAction[playerid][1], true);
			PlayerTextDrawBoxColor(playerid, InventarAction[playerid][1], 0xFFCB8CFF);
			PlayerTextDrawSetShadow(playerid, InventarAction[playerid][1], 0);
			PlayerTextDrawSetOutline(playerid, InventarAction[playerid][1], 0);
			PlayerTextDrawBackgroundColor(playerid, InventarAction[playerid][1], 51);
			PlayerTextDrawFont(playerid, InventarAction[playerid][1], 2);
			PlayerTextDrawSetProportional(playerid, InventarAction[playerid][1], 1);
			PlayerTextDrawSetSelectable(playerid, InventarAction[playerid][1], true);
			PlayerTextDrawShow(playerid, InventarAction[playerid][1]);
			pos[1] += 9.000000;
		}
	}
	if(SelectedSlot[playerid] < 25){
		if(((SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]] >= 1 && (SelectedSlot[playerid] + ListSlot[playerid] < 1 || SelectedSlot[playerid] + ListSlot[playerid] >= 5)) || 
					(SlotValue[playerid][SelectedSlot[playerid] + ListSlot[playerid]] > -1 && (SelectedSlot[playerid] + ListSlot[playerid] >= 1 && SelectedSlot[playerid] + ListSlot[playerid] <= 4)))){
			if(SelectedSlot[playerid] == 19 && SlotValue[playerid][19] <= 1)goto skip;
			if(GetPVarInt(playerid, "showedwindow") == 1){
				switch(SelectedSlot[playerid] + ListSlot[playerid]){
				case 1..10,12,15,16,18,19,21..24:goto skip;
				}
			}
			if(GetPVarInt(playerid, "showedwindow") == 2){
				switch(SelectedSlot[playerid] + ListSlot[playerid]){
				case 0..10,12,15,16,18,19,21..24:goto skip;
				}
			}
			if(GetPVarInt(playerid, "showedwindow") == 3){
				switch(SelectedSlot[playerid] + ListSlot[playerid]){
				case 1..10,12,13,15..24:goto skip;
				}
			}
			if(GetPVarInt(playerid, "showedwindow") == 4){
				switch(SelectedSlot[playerid] + ListSlot[playerid]){
				case 1..10,13,15,16,17,18,19,21..24:goto skip;
				}
			}
			if(GetPVarInt(playerid, "showedwindow"))CreateButtonAction(playerid, pos[0], pos[1], 22);
			if(GetPVarInt(playerid, "showedtrade") && ItemsInfo[ad][invTrade])CreateButtonAction(playerid, pos[0], pos[1], 12);	
			else if(!GetPVarInt(playerid, "showedtrade") && !GetPVarInt(playerid, "showedwindow"))CreateButtonAction(playerid, pos[0], pos[1], 21);	
		}
	}else{
		switch(GetPVarInt(playerid, "showedwindow")){
		case 1:if(FamilyValue[PlayerInfo[playerid][FamilyID]][SelectedSlot[playerid]-25] >= 1)CreateButtonAction(playerid, pos[0], pos[1], 34);
		case 2:if(FractionValue[PlayerInfo[playerid][pMember]][SelectedSlot[playerid]-25] >= 1)CreateButtonAction(playerid, pos[0], pos[1], 34);
		case 3:if(ClosetValue[SlotValue[playerid][1]][SelectedSlot[playerid]-25] >= 1)CreateButtonAction(playerid, pos[0], pos[1], 34);
		case 4:
			{
				if(SelectedSlot[playerid] == 25)CreateButtonAction(playerid, pos[0], pos[1], 11);
				else if(TrunkValue[idaofcar[playerid]][SelectedSlot[playerid]-26] >= 1 && SelectedSlot[playerid] != 25)CreateButtonAction(playerid, pos[0], pos[1], 34);
			}
		}
	}
	skip:
	if(SelectedSlot[playerid] < 25){
		InventarAction[playerid][3] = CreatePlayerTextDraw(playerid, pos[0], pos[1], Translate(Language[13][PlayerInfo[playerid][pLanguage]]));
		PlayerTextDrawLetterSize(playerid, InventarAction[playerid][3], 0.112222, 0.641777);
		PlayerTextDrawTextSize(playerid, InventarAction[playerid][3], 6.777777, 34.346660);
		PlayerTextDrawAlignment(playerid, InventarAction[playerid][3], 2);
		PlayerTextDrawColor(playerid, InventarAction[playerid][3], 255);
		PlayerTextDrawUseBox(playerid, InventarAction[playerid][3], true);
		PlayerTextDrawBoxColor(playerid, InventarAction[playerid][3], 0xFFCB8CFF);
		PlayerTextDrawSetShadow(playerid, InventarAction[playerid][3], 0);
		PlayerTextDrawSetOutline(playerid, InventarAction[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, InventarAction[playerid][3], 51);
		PlayerTextDrawFont(playerid, InventarAction[playerid][3], 2);
		PlayerTextDrawSetProportional(playerid, InventarAction[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, InventarAction[playerid][3], true);
		PlayerTextDrawShow(playerid, InventarAction[playerid][3]);
		pos[1] += 9.000000;
	}
	InventarAction[playerid][4] = CreatePlayerTextDraw(playerid, pos[0], pos[1], Translate(Language[10][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, InventarAction[playerid][4], 0.112222, 0.641777);
	PlayerTextDrawTextSize(playerid, InventarAction[playerid][4], 6.777777, 34.346660);
	PlayerTextDrawAlignment(playerid, InventarAction[playerid][4], 2);
	PlayerTextDrawColor(playerid, InventarAction[playerid][4], 255);
	PlayerTextDrawUseBox(playerid, InventarAction[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, InventarAction[playerid][4], 0xFFCB8CFF);
	PlayerTextDrawSetShadow(playerid, InventarAction[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, InventarAction[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, InventarAction[playerid][4], 51);
	PlayerTextDrawFont(playerid, InventarAction[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, InventarAction[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, InventarAction[playerid][4], true);
	PlayerTextDrawShow(playerid, InventarAction[playerid][4]);
	SetPVarInt(playerid, "showedaction", 1);
	return 1;
}
stock HideActionMenu(playerid){
	for(new x; x < 5; x++){
		if(InventarAction[playerid][x] != PlayerText:INVALID_TEXT_DRAW){
			PlayerTextDrawHide(playerid, InventarAction[playerid][x]);
			DestroyPlayerTD(playerid, InventarAction[playerid][x]);
		}
	}
	DeletePVar(playerid, "showedaction");
	if(SelectedSlot[playerid] < 25)UpdateItem(playerid, SelectedSlot[playerid], 1);
	else UpdateItem(playerid, SelectedSlot[playerid], (GetPVarInt(playerid, "showedwindow")) ? GetPVarInt(playerid, "showedwindow")+1 : 1);
	return 1;
}
stock CreateTalentMenu(playerid){
	new Float:pos[2];
	pos[0] = TalentEnum[SelectedTalent[playerid]][talX]+14.800000;
	pos[1] = (SelectedTalent[playerid] > 2) ? TalentEnum[SelectedTalent[playerid]][talY]-19.500000 : TalentEnum[SelectedTalent[playerid]][talY]+13.200000;
	InventarAction[playerid][0] = CreatePlayerTextDraw(playerid, pos[0], pos[1], "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, InventarAction[playerid][0], 0.000000, 0.0);
	PlayerTextDrawTextSize(playerid, InventarAction[playerid][0], 40.222213, 34.053329);
	PlayerTextDrawAlignment(playerid, InventarAction[playerid][0], 1);
	PlayerTextDrawColor(playerid, InventarAction[playerid][0], 119);
	PlayerTextDrawFont(playerid, InventarAction[playerid][0], 4);
	PlayerTextDrawSetShadow(playerid, InventarAction[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, InventarAction[playerid][0], 0);
	PlayerTextDrawShow(playerid, InventarAction[playerid][0]);
	pos[0] = TalentEnum[SelectedTalent[playerid]][talX]+35.000000;
	pos[1] = (SelectedTalent[playerid] > 2) ? TalentEnum[SelectedTalent[playerid]][talY]-16.500000 : TalentEnum[SelectedTalent[playerid]][talY]+16.500000;
	
	InventarAction[playerid][1] = CreatePlayerTextDraw(playerid, pos[0], pos[1], Translate(Language[35][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, InventarAction[playerid][1], 0.112222, 0.641777);
	PlayerTextDrawTextSize(playerid, InventarAction[playerid][1], 6.777777, 34.346660);
	PlayerTextDrawAlignment(playerid, InventarAction[playerid][1], 2);
	PlayerTextDrawColor(playerid, InventarAction[playerid][1], 255);
	PlayerTextDrawUseBox(playerid, InventarAction[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, InventarAction[playerid][1], 0x7396FBFF);
	PlayerTextDrawSetShadow(playerid, InventarAction[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, InventarAction[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, InventarAction[playerid][1], 51);
	PlayerTextDrawFont(playerid, InventarAction[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, InventarAction[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, InventarAction[playerid][1], true);
	PlayerTextDrawShow(playerid, InventarAction[playerid][1]);
	pos[1] += 9.000000;

	InventarAction[playerid][2] = CreatePlayerTextDraw(playerid, pos[0], pos[1], Translate(Language[13][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, InventarAction[playerid][2], 0.112222, 0.641777);
	PlayerTextDrawTextSize(playerid, InventarAction[playerid][2], 6.777777, 34.346660);
	PlayerTextDrawAlignment(playerid, InventarAction[playerid][2], 2);
	PlayerTextDrawColor(playerid, InventarAction[playerid][2], 255);
	PlayerTextDrawUseBox(playerid, InventarAction[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, InventarAction[playerid][2], 0x7396FBFF);
	PlayerTextDrawSetShadow(playerid, InventarAction[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, InventarAction[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, InventarAction[playerid][2], 51);
	PlayerTextDrawFont(playerid, InventarAction[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, InventarAction[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, InventarAction[playerid][2], true);
	PlayerTextDrawShow(playerid, InventarAction[playerid][2]);
	pos[1] += 9.000000;
	
	InventarAction[playerid][3] = CreatePlayerTextDraw(playerid, pos[0], pos[1], Translate(Language[10][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, InventarAction[playerid][3], 0.112222, 0.641777);
	PlayerTextDrawTextSize(playerid, InventarAction[playerid][3], 6.777777, 34.346660);
	PlayerTextDrawAlignment(playerid, InventarAction[playerid][3], 2);
	PlayerTextDrawColor(playerid, InventarAction[playerid][3], 255);
	PlayerTextDrawUseBox(playerid, InventarAction[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, InventarAction[playerid][3], 0x7396FBFF);
	PlayerTextDrawSetShadow(playerid, InventarAction[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, InventarAction[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, InventarAction[playerid][3], 51);
	PlayerTextDrawFont(playerid, InventarAction[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, InventarAction[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, InventarAction[playerid][3], true);
	PlayerTextDrawShow(playerid, InventarAction[playerid][3]);
	SetPVarInt(playerid, "showedaction", 1);
	return 1;
}	
stock HideTalentMenu(playerid){
	for(new x; x < 4; x++){
		if(InventarAction[playerid][x] != PlayerText:INVALID_TEXT_DRAW){
			PlayerTextDrawHide(playerid, InventarAction[playerid][x]);
			DestroyPlayerTD(playerid, InventarAction[playerid][x]);
		}
	}
	DeletePVar(playerid, "showedaction");
	return 1;
}
stock HideInventory(playerid){
	if(GetPVarInt(playerid, "showedtrade") && !GetPVarInt(playerid, "tradedecline")){
		SelectTextDraw(playerid, 0x0099FFAA);
		return SendError(playerid, "Чтобы закрыть это окно, откажитесь от текущего обмена");
	}
	for(new i; i < 36; i++){
		PlayerTextDrawHide(playerid, InventarOther[playerid][i]);
		DestroyPlayerTD(playerid, InventarOther[playerid][i]);
		if(i < 19)TextDrawHideForPlayer(playerid, InventarTD[i]);
		if(i < 25){
			PlayerTextDrawHide(playerid, InventarItems[playerid][i]);
			DestroyPlayerTD(playerid, InventarItems[playerid][i]);
			PlayerTextDrawHide(playerid, InventarValue[playerid][i]);
			DestroyPlayerTD(playerid, InventarValue[playerid][i]);
		}
	}
	if(GetPVarInt(playerid, "NeedAssistance"))PlayerTextDrawShow(playerid, NeedAssistance[playerid]);
	HideActionMenu(playerid);
	CancelSelectTextDraw(playerid);
	DeletePVar(playerid, "showedinv");
	DeletePVar(playerid, "tradedecline");
	if(GetPVarInt(playerid, "showedwindow"))HideWindow(playerid);
	if(GetPVarInt(playerid, "showedtrade"))HideTrade(playerid);
	return 1;
}
stock HideWindow(playerid){
	PlayerTextDrawHide(playerid, ClosetOther[playerid][0]);
	DestroyPlayerTD(playerid, ClosetOther[playerid][0]);
	PlayerTextDrawHide(playerid, ClosetOther[playerid][1]);
	DestroyPlayerTD(playerid, ClosetOther[playerid][1]);
	for(new i; i < 25; i++){
		if(i < 5)TextDrawHideForPlayer(playerid, ClosetTD[i]);
		PlayerTextDrawHide(playerid, InventarItems[playerid][i+25]);
		DestroyPlayerTD(playerid, InventarItems[playerid][i+25]);
		PlayerTextDrawHide(playerid, InventarValue[playerid][i+25]);
		DestroyPlayerTD(playerid, InventarValue[playerid][i+25]);
	}
	DeletePVar(playerid, "showedwindow");
	return 1;
}
stock UpdateGunSlot(playerid, slot){
	new obj[3] = {348,355,349};
	PlayerTextDrawSetPreviewModel(playerid, InventarOther[playerid][17+slot], (!PlayerInfo[playerid][pGun][slot]) ? FREE_SLOT_OBJECT : obj[slot]);
	PlayerTextDrawColor(playerid, InventarOther[playerid][17+slot], GunColor[PlayerInfo[playerid][pGun][slot]]);
	PlayerTextDrawShow(playerid, InventarOther[playerid][17+slot]);
	return 1;
}
stock UpdateCaseSlot(playerid){
	PlayerTextDrawSetPreviewModel(playerid, InventarOther[playerid][20], (!PlayerInfo[playerid][pCCase]) ? FREE_SLOT_OBJECT : 1210);
	PlayerTextDrawColor(playerid, InventarOther[playerid][20], CaseColor[PlayerInfo[playerid][pCCase]]);
	PlayerTextDrawShow(playerid, InventarOther[playerid][20]);
	return 1;
}
stock CreateButtonAction(playerid, Float:xpos, &Float:pos, num){
	InventarAction[playerid][2] = CreatePlayerTextDraw(playerid, xpos, pos, Translate(Language[num][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, InventarAction[playerid][2], 0.112222, 0.641777);
	PlayerTextDrawTextSize(playerid, InventarAction[playerid][2], 6.777777, 34.346660);
	PlayerTextDrawAlignment(playerid, InventarAction[playerid][2], 2);
	PlayerTextDrawColor(playerid, InventarAction[playerid][2], 255);
	PlayerTextDrawUseBox(playerid, InventarAction[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, InventarAction[playerid][2], 0xFFCB8CFF);
	PlayerTextDrawSetShadow(playerid, InventarAction[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, InventarAction[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, InventarAction[playerid][2], 51);
	PlayerTextDrawFont(playerid, InventarAction[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, InventarAction[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, InventarAction[playerid][2], true);
	PlayerTextDrawShow(playerid, InventarAction[playerid][2]);
	pos += 9.000000;
}
stock UpdateInventory(playerid, i){
	PlayerTextDrawHide(playerid, InventarItems[playerid][i]);
	PlayerTextDrawColor(playerid, InventarItems[playerid][i], -1);
	new viewobj = (SlotValue[playerid][i+ListSlot[playerid]] <= 0) ? FREE_SLOT_OBJECT : SlotValue[playerid][i+ListSlot[playerid]];
	PlayerTextDrawBackgroundColor(playerid, InventarItems[playerid][i], (SlotValue[playerid][i+ListSlot[playerid]] <= 0) ? EMPTY_SLOT_BG : DEFAULT_SLOT_BG);
	PlayerTextDrawSetPreviewModel(playerid, InventarItems[playerid][i], (!ListSlot[playerid]) ? ItemsInfo[i][invObj] : viewobj);
	if(!ListSlot[playerid]){
		switch(i){
		case 1..4: PlayerTextDrawBackgroundColor(playerid, InventarItems[playerid][i], (SlotValue[playerid][i] < 0) ? EMPTY_SLOT_BG : DEFAULT_SLOT_BG);
		case 19: PlayerTextDrawBackgroundColor(playerid, InventarItems[playerid][i], (SlotValue[playerid][19] <= 1) ? EMPTY_SLOT_BG : DEFAULT_SLOT_BG);
		case 5..9: PlayerTextDrawSetPreviewModel(playerid, InventarItems[playerid][i], (!SlotValue[playerid][i+ListSlot[playerid]]) ? ItemsInfo[i][invObj] : GetVehicleModelEx(SlotValue[playerid][i+ListSlot[playerid]]));
		case 21: PlayerTextDrawBackgroundColor(playerid, InventarItems[playerid][i], (TalentsInfo[playerid][0][2] != 1) ? EMPTY_SLOT_BG : DEFAULT_SLOT_BG);
		case 22: PlayerTextDrawBackgroundColor(playerid, InventarItems[playerid][i], (TalentsInfo[playerid][1][1] != 2) ? EMPTY_SLOT_BG : DEFAULT_SLOT_BG);
		case 24: PlayerTextDrawBackgroundColor(playerid, InventarItems[playerid][i], (TalentsInfo[playerid][0][2] != 3) ? EMPTY_SLOT_BG : DEFAULT_SLOT_BG);
		case 23: PlayerTextDrawBackgroundColor(playerid, InventarItems[playerid][i], (TalentsInfo[playerid][3][2] != 1) ? EMPTY_SLOT_BG : DEFAULT_SLOT_BG);
		}
	}else{
		if(SlotValue[playerid][i+ListSlot[playerid]] > 100000000000){
			switch(SlotValue[playerid][i+ListSlot[playerid]]){
			case 100000000001:{
					PlayerTextDrawSetPreviewModel(playerid, InventarItems[playerid][i], 348);
					PlayerTextDrawColor(playerid, InventarItems[playerid][i], 0xD94141FF);
				}
			case 100000000002:{
					PlayerTextDrawSetPreviewModel(playerid, InventarItems[playerid][i], 348);
					PlayerTextDrawColor(playerid, InventarItems[playerid][i], 0x696969FF);
				}
			case 100000000011:{
					PlayerTextDrawSetPreviewModel(playerid, InventarItems[playerid][i], 355);
					PlayerTextDrawColor(playerid, InventarItems[playerid][i], 0xD94141FF);
				}
			case 100000000012:{
					PlayerTextDrawSetPreviewModel(playerid, InventarItems[playerid][i], 355);
					PlayerTextDrawColor(playerid, InventarItems[playerid][i], 0x696969FF);
				}
			case 100000000021:{
					PlayerTextDrawSetPreviewModel(playerid, InventarItems[playerid][i], 349);
					PlayerTextDrawColor(playerid, InventarItems[playerid][i], 0xD94141FF);
				}
			case 100000000022:{
					PlayerTextDrawSetPreviewModel(playerid, InventarItems[playerid][i], 349);
					PlayerTextDrawColor(playerid, InventarItems[playerid][i], 0x696969FF);
				}
			case 100000000081..100000000088:{
					PlayerTextDrawSetPreviewModel(playerid, InventarItems[playerid][i], 1210);
					PlayerTextDrawColor(playerid, InventarItems[playerid][i], CaseColor[SlotValue[playerid][i+ListSlot[playerid]]-100000000080]);
				}
			}
		}
	}
	PlayerTextDrawShow(playerid, InventarItems[playerid][i]);
	new value[16];
	if(i >= 1 && i <= 4 && SlotValue[playerid][i] >= 0 && !ListSlot[playerid])f(value, "ID %d", SlotValue[playerid][i]);
	else if(i >= 5 && i <= 9 && SlotValue[playerid][i] >= 1 && !ListSlot[playerid])f(value, "ID %d", SlotValue[playerid][i]);
	else if(SlotValue[playerid][i+ListSlot[playerid]] > 1 && SlotValue[playerid][i+ListSlot[playerid]] < 100000000000)f(value, "%d", SlotValue[playerid][i+ListSlot[playerid]]);
	else f(value, "_");
	PlayerTextDrawSetString(playerid, InventarValue[playerid][i], value);
}
stock UpdateTrade(playerid, i){
	new x = TradeSelected[playerid][i];
	new player = TradeOffer[playerid];
	PlayerTextDrawColor(player, TradeSlots[player][i+4], -1);
	PlayerTextDrawColor(playerid, TradeSlots[playerid][i], -1);
	PlayerTextDrawBackgroundColor(player, TradeSlots[player][i+4], (x == -1) ? EMPTY_SLOT_BG : 0xFFCB8CFF);
	PlayerTextDrawBackgroundColor(playerid, TradeSlots[playerid][i], (x == -1) ? EMPTY_SLOT_BG : 0xFFCB8CFF);
	if(x < 25){
		PlayerTextDrawSetPreviewModel(playerid, TradeSlots[playerid][i], (x == -1) ? FREE_SLOT_OBJECT : ItemsInfo[x][invObj]);
		PlayerTextDrawSetPreviewModel(player, TradeSlots[player][i+4], (x == -1) ? FREE_SLOT_OBJECT : ItemsInfo[x][invObj]);
	}else{
		PlayerTextDrawSetPreviewModel(playerid, TradeSlots[playerid][i], (x == -1) ? FREE_SLOT_OBJECT : ValueTrade[playerid][i]);
		PlayerTextDrawSetPreviewModel(player, TradeSlots[player][i+4], (x == -1) ? FREE_SLOT_OBJECT : ValueTrade[playerid][i]);
	}
	switch(x){
	case 5..9:{
			PlayerTextDrawSetPreviewModel(playerid, TradeSlots[playerid][i], (!ValueTrade[playerid][i]) ? ItemsInfo[x][invObj] : GetVehicleModelEx(ValueTrade[playerid][i]));
			PlayerTextDrawSetPreviewModel(player, TradeSlots[player][i+4], (!ValueTrade[playerid][i]) ? ItemsInfo[x][invObj] : GetVehicleModelEx(ValueTrade[playerid][i]));
		}
	}
	if(x != -1){
		if(ValueTrade[playerid][i] > 100000000000){
			switch(ValueTrade[playerid][i]){
			case 100000000001:{
					PlayerTextDrawSetPreviewModel(playerid, TradeSlots[playerid][i], 348);
					PlayerTextDrawColor(playerid, TradeSlots[playerid][i], 0xD94141FF);
					PlayerTextDrawSetPreviewModel(player, TradeSlots[player][i+4], 348);
					PlayerTextDrawColor(player, TradeSlots[player][i+4], 0xD94141FF);
				}
			case 100000000002:{
					PlayerTextDrawSetPreviewModel(playerid, TradeSlots[playerid][i], 348);
					PlayerTextDrawColor(playerid, TradeSlots[playerid][i], 0x696969FF);
					PlayerTextDrawSetPreviewModel(player, TradeSlots[player][i+4], 348);
					PlayerTextDrawColor(player, TradeSlots[player][i+4], 0x696969FF);
				}
			case 100000000011:{
					PlayerTextDrawSetPreviewModel(playerid, TradeSlots[playerid][i], 355);
					PlayerTextDrawColor(playerid, TradeSlots[playerid][i], 0xD94141FF);
					PlayerTextDrawSetPreviewModel(player, TradeSlots[player][i+4], 355);
					PlayerTextDrawColor(player, TradeSlots[player][i+4], 0xD94141FF);
				}
			case 100000000012:{
					PlayerTextDrawSetPreviewModel(playerid, TradeSlots[playerid][i], 355);
					PlayerTextDrawColor(playerid, TradeSlots[playerid][i], 0x696969FF);
					PlayerTextDrawSetPreviewModel(player, TradeSlots[player][i+4], 355);
					PlayerTextDrawColor(player, TradeSlots[player][i+4], 0x696969FF);
				}
			case 100000000021:{
					PlayerTextDrawSetPreviewModel(playerid, TradeSlots[playerid][i], 349);
					PlayerTextDrawColor(playerid, TradeSlots[playerid][i], 0xD94141FF);
					PlayerTextDrawSetPreviewModel(player, TradeSlots[player][i+4], 349);
					PlayerTextDrawColor(player, TradeSlots[player][i+4], 0xD94141FF);
				}
			case 100000000022:{
					PlayerTextDrawSetPreviewModel(playerid, TradeSlots[playerid][i], 349);
					PlayerTextDrawColor(playerid, TradeSlots[playerid][i], 0x696969FF);
					PlayerTextDrawSetPreviewModel(player, TradeSlots[player][i+4], 349);
					PlayerTextDrawColor(player, TradeSlots[player][i+4], 0x696969FF);
				}
			case 100000000081..100000000088:{
					PlayerTextDrawSetPreviewModel(playerid, TradeSlots[playerid][i], 1210);
					PlayerTextDrawColor(playerid, TradeSlots[playerid][i], CaseColor[ValueTrade[playerid][i]-100000000080]);
					PlayerTextDrawSetPreviewModel(player, TradeSlots[player][i+4], 1210);
					PlayerTextDrawColor(player, TradeSlots[player][i+4], CaseColor[ValueTrade[playerid][i]-100000000080]);
				}
			}
		}
	}
	PlayerTextDrawShow(playerid, TradeSlots[playerid][i]);
	PlayerTextDrawShow(player, TradeSlots[player][i+4]);
	new value[16];
	f(value, "_");
	if(x != -1){
		if(x >= 1 && x <= 4 && ValueTrade[playerid][i] >= 0 && !ListSlot[playerid])f(value, "ID %d", ValueTrade[playerid][i]);
		else if(x >= 5 && x <= 9 && ValueTrade[playerid][i] >= 1 && !ListSlot[playerid])f(value, "ID %d", ValueTrade[playerid][i]);
		else if(ValueTrade[playerid][i] > 1 && ValueTrade[playerid][i] < 100000000000)f(value, "%d", ValueTrade[playerid][i]);
	}
	PlayerTextDrawSetString(playerid, TradeValue[playerid][i], value);
	PlayerTextDrawSetString(player, TradeValue[player][i+4], value);
	return 1;
}
stock ConfirmTrade(playerid){
	new player = TradeOffer[playerid];
	PlayerPlaySound(playerid, 30800, 0.0, 0.0, 0.0);
	PlayerPlaySound(player, 30800, 0.0, 0.0, 0.0);
	new tempvalue;
	new string[256];
	for(new i; i < 4; i++){
		if(TradeSelected[playerid][i] == -1)continue;
		switch(TradeSelected[playerid][i]){
		case 0:
			{
				GiveMoney(playerid, -ValueTrade[playerid][i], "Передача наличных (обмен)");
				GiveMoney(player, ValueTrade[playerid][i], "Получение наличных (обмен)");
				SaveAccount(playerid);
				SaveAccount(player);
				new logtime[3],logdate[3],logtimestring[16];
				getdate(logdate[2],logdate[1],logdate[0]);
				gettime(logtime[0],logtime[1],logtime[2]);
				f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
				WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),PlayerInfo[player][pID],Name(player),"Передача наличных (обмен)",-ValueTrade[playerid][i],PlayerIp[playerid],PlayerIp[player],GetMoney(playerid));
			}
		case 1:
			{
				tempvalue = -1;
				for(new x; x < 4; x++){
					if(TradeSelected[player][x] == 1){
						tempvalue = ValueTrade[player][x];
						TradeSelected[player][x] = -1;
						break;
					}
				}
				if(tempvalue == -1){
					if(SlotValue[player][1] != -1){
						SendError(playerid, "У этого игрока уже есть дом. Чтобы обменяться домами, он должен предложить свой дом к обмену");
						SendError(player, "У Вас уже есть дом. Чтобы обменяться домами, вы должны предложить свой дом к обмену");
						TradeSelected[playerid][i] = -1;
						continue;
					}
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы купили дом №%d у игрока %s[%d]",ValueTrade[playerid][i], PlayerName[playerid], playerid);
					SendClientMessage(player,COLOR_LIGHTBLUE,string);
					format(string,sizeof(string),"[Информация] {FFFFFF}Игрок %s[%d] купил у вас дом №%d",PlayerName[player],player,ValueTrade[playerid][i]);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				}else{
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы обменяли дом №%d(ваш) на дом №%d(%s[%d])",ValueTrade[playerid][i], tempvalue, PlayerName[player], player);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы обменяли дом №%d(ваш) на дом №%d(%s[%d])",tempvalue, ValueTrade[playerid][i], PlayerName[playerid], playerid);
					SendClientMessage(player,COLOR_LIGHTBLUE,string);
					SetString(HouseInfo[tempvalue][hOwner],PlayerName[playerid]);
					UpdateHouse(tempvalue);
				}
				PlayerInfo[playerid][pDCTime]=0;
				SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
				PlayerInfo[player][pDCTime]=2;
				SendClientMessage(player,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ваш дом. Изменить место спавна >> /setspawn");
				SetString(HouseInfo[ValueTrade[playerid][i]][hOwner],PlayerName[player]);
				UpdateHouse(ValueTrade[playerid][i]);
				SlotValue[player][1] = ValueTrade[playerid][i];
				foreach(new j:Player)
				{
					if(HouseNalog[j] == ValueTrade[playerid][i])
					{
						callcmd::stopjob(j);
						SendClientMessage(j,COLOR_RED,"[Информация] {FFFFFF}Дом, над которым вы работаете, был перепродан. Начните работу заново");
					}
				}
				SlotValue[playerid][1] = tempvalue;
				SaveAccount(playerid);
				SaveAccount(player);
			}
		case 3:
			{
				tempvalue = -1;
				for(new x; x < 4; x++){
					if(TradeSelected[player][x] == 3){
						tempvalue = ValueTrade[player][x];
						TradeSelected[player][x] = -1;
						break;
					}
				}
				if(tempvalue == -1){
					if(SlotValue[player][3] != -1){
						SendError(playerid, "У этого игрока уже есть бизнес. Чтобы обменяться бизнесами, он должен предложить свой бизнес к обмену");
						SendError(player, "У Вас уже есть бизнес. Чтобы обменяться бизнесами, вы должны предложить свой бизнес к обмену");
						TradeSelected[playerid][i] = -1;
						continue;
					}
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы купили %s(№%d) у игрока %s[%d]",BizInfo[ValueTrade[playerid][i]][bName],ValueTrade[playerid][i], PlayerName[playerid], playerid);
					SendClientMessage(player,COLOR_LIGHTBLUE,string);
					format(string,sizeof(string),"[Информация] {FFFFFF}Игрок %s[%d] купил у вас %s(№%d)",PlayerName[player],player,BizInfo[ValueTrade[playerid][i]][bName],ValueTrade[playerid][i]);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				}else{
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы обменяли %s(№%d(ваш)) на %s(№%d(%s[%d]))",BizInfo[ValueTrade[playerid][i]][bName],ValueTrade[playerid][i], BizInfo[tempvalue][bName],tempvalue, PlayerName[player], player);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы обменяли %s(№%d(ваш)) на %s(№%d(%s[%d]))",BizInfo[tempvalue][bName],tempvalue, BizInfo[ValueTrade[playerid][i]][bName],ValueTrade[playerid][i], PlayerName[playerid], playerid);
					SendClientMessage(player,COLOR_LIGHTBLUE,string);
					SetString(BizInfo[tempvalue][bOwner],Name(playerid));
					UpdateBiz(tempvalue,1);
				}
				SlotValue[player][3] = ValueTrade[playerid][i];
				SetString(BizInfo[ValueTrade[playerid][i]][bOwner],Name(player));
				SlotValue[playerid][3] = tempvalue;
				BizInfo[ValueTrade[playerid][i]][bLevel]=0;
				UpdateBiz(ValueTrade[playerid][i],1);
				SaveAccount(player);
				SaveAccount(playerid);
			}
		case 4:
			{
				tempvalue = -1;
				for(new x; x < 4; x++){
					if(TradeSelected[player][x] == 4){
						tempvalue = ValueTrade[player][x];
						TradeSelected[player][x] = -1;
						break;
					}
				}
				if(tempvalue == -1){
					if(SlotValue[player][4] != -1){
						SendError(playerid, "У этого игрока уже есть СТО. Чтобы обменяться СТО, он должен предложить свою СТО к обмену");
						SendError(player, "У Вас уже есть СТО. Чтобы обменяться СТО, вы должны предложить свою СТО к обмену");
						TradeSelected[playerid][i] = -1;
						continue;
					}
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы купили СТО №%d у игрока %s[%d]",ValueTrade[playerid][i], PlayerName[playerid], playerid);
					SendClientMessage(player,COLOR_LIGHTBLUE,string);
					format(string,sizeof(string),"[Информация] {FFFFFF}Игрок %s[%d] купил у вас СТО №%d",PlayerName[player],player,ValueTrade[playerid][i]);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				}else{
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы обменяли СТО №%d(ваша) на СТО №%d(%s[%d])",ValueTrade[playerid][i], tempvalue, PlayerName[player], player);
					SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					format(string,sizeof(string),"[Информация] {FFFFFF}Вы обменяли СТО №%d(ваша) на СТО №%d(%s[%d])",tempvalue, ValueTrade[playerid][i], PlayerName[playerid], playerid);
					SendClientMessage(player,COLOR_LIGHTBLUE,string);
					SetString(TuningInfo[tempvalue][stoOwner],Name(playerid));
					UpdateSTO(tempvalue);
				}
				SlotValue[player][4] = ValueTrade[playerid][i];
				SetString(TuningInfo[ValueTrade[playerid][i]][stoOwner],Name(player));
				SlotValue[playerid][4] = tempvalue;
				UpdateBiz(ValueTrade[playerid][i],1);
				UpdateSTO(ValueTrade[playerid][i]);
				SaveAccount(player);
				SaveAccount(playerid);
			}
		case 5..9:
			{
				tempvalue = -1;
				for(new x; x < 4; x++){
					if(TradeSelected[player][x] == 5 || TradeSelected[player][x] == 6 || TradeSelected[player][x] == 7 || TradeSelected[player][x] == 8 || TradeSelected[player][x] == 9){
						tempvalue = ValueTrade[player][x];
						TradeSelected[player][x] = -1;
						break;
					}
				}
				if(IsValidNumberCars(player)){
					if(tempvalue == -1){
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы купили %s[ID %d] у игрока %s[%d]",VehicleName[GetVehicleModelEx(ValueTrade[playerid][i])-400],ValueTrade[playerid][i], PlayerName[playerid], playerid);
						SendClientMessage(player,COLOR_LIGHTBLUE,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}Игрок %s[%d] купил у вас %s[ID %d]",PlayerName[player],player,VehicleName[GetVehicleModelEx(ValueTrade[playerid][i])-400],ValueTrade[playerid][i]);
						SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
					}else{
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы обменяли %s[ID %d(ваша)] на %s[ID %d(%s[%d])]",VehicleName[GetVehicleModelEx(ValueTrade[playerid][i])-400],ValueTrade[playerid][i], VehicleName[GetVehicleModelEx(tempvalue)-400],tempvalue, PlayerName[player], player);
						SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
						format(string,sizeof(string),"[Информация] {FFFFFF}Вы обменяли %s[ID %d(ваша)] на %s[ID %d(%s[%d])]",VehicleName[GetVehicleModelEx(tempvalue)-400],tempvalue, VehicleName[GetVehicleModelEx(ValueTrade[playerid][i])-400],ValueTrade[playerid][i], PlayerName[playerid], playerid);
						SendClientMessage(player,COLOR_LIGHTBLUE,string);
						SetCarOwner(tempvalue,Name(playerid));
						SetCarKeyer(tempvalue,Name(playerid));
						SaveOwnableCar(GetVehicleID(tempvalue));
						CarInfo[GetVehicleID(tempvalue)][cShtrafer] = 0;
					}
					if(PlayerInfo[playerid][pDCTime] >= 400){
						PlayerInfo[playerid][pDCTime]=0;
						SendClientMessage(playerid,COLOR_LIGHTBLUE,"Местом спавна автоматически назначен ЖД Вокзал. Изменить место спавна >> /setspawn");
					}
					SetCarOwner(ValueTrade[playerid][i],Name(player));
				    SetCarKeyer(ValueTrade[playerid][i],Name(player));
					GetNumberCars(playerid,PlayerInfo[playerid][pCars]);
				    GetNumberCars(player,PlayerInfo[player][pCars]);
					SaveOwnableCar(GetVehicleID(ValueTrade[playerid][i]));
				    CarInfo[GetVehicleID(ValueTrade[playerid][i])][cShtrafer] = 0;
					GetPlayerCars(player);
					GetPlayerCars(playerid);
					SaveAccount(player);
					SaveAccount(playerid);
				}else{
				    if((PlayerInfo[player][pCars]+2) <= ValidNumberCars(player)){
					    SendError(player,"Ваш уровень VIP недостаточно высок чтобы иметь столько авто");
	    			}
	    			else SendError(player,"Ваш уровень VIP недостаточно высок чтобы иметь столько авто");
				}
			}
		case 10:
			{
				format(string,sizeof(string),"[Информация] {FFFFFF}Вы купили Casino Royal у игрока %s[%d]",PlayerName[playerid], playerid);
				SendClientMessage(player,COLOR_LIGHTBLUE,string);
				format(string,sizeof(string),"[Информация] {FFFFFF}Игрок %s[%d] купил у вас Casino Royal",PlayerName[player],player);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				GetPlayerCasino(playerid);
				GetPlayerCasino(player);
				SetString(CasinoInfo[0][casOwner],PlayerName[player]);
				SaveCasino(0);
			}
		case 19:
			{
				SlotValue[player][TradeSelected[playerid][i]] = ValueTrade[playerid][i];
				SlotValue[playerid][TradeSelected[playerid][i]] = 1;
			}
		case 11..18, 20:
			{
				SlotValue[player][TradeSelected[playerid][i]] += ValueTrade[playerid][i];
				SlotValue[playerid][TradeSelected[playerid][i]] -= ValueTrade[playerid][i];
			}
		default:
			{
				new im = GetFreeSlot(player);
				if(im == -1){
					SendError(player, "В инвентаре нет места, чтобы поместить вымениваемый предмет");
					SendError(playerid, "В инвентаре игрока нет места, чтобы поместить ваш предмет");
					continue;
				}
				SlotValue[player][im] += ValueTrade[playerid][i];
				SlotValue[playerid][TradeSelected[playerid][i]] -= ValueTrade[playerid][i];
			}
		}
		ValueTrade[playerid][i] = 0;
		TradeSelected[playerid][i] = -1;
	}
	return 1;
}
stock ShowTalents(playerid){
	HideInventory(playerid);
	SelectedBrunch[playerid] = 0;
	for(new i; i < 14; i++)TextDrawShowForPlayer(playerid, TalentsTD[i]);
	PlayerTalents[playerid][0] = CreatePlayerTextDraw(playerid, 489.142791, 134.399993, Translate(Language[31][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, PlayerTalents[playerid][0], 0.156666, 0.917333);
	PlayerTextDrawAlignment(playerid, PlayerTalents[playerid][0], 2);
	PlayerTextDrawColor(playerid, PlayerTalents[playerid][0], 255);
	PlayerTextDrawSetShadow(playerid, PlayerTalents[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTalents[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTalents[playerid][0], 51);
	PlayerTextDrawFont(playerid, PlayerTalents[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTalents[playerid][0], 1);
	PlayerTextDrawShow(playerid, PlayerTalents[playerid][0]);
	PlayerTalents[playerid][1] = CreatePlayerTextDraw(playerid, 430.000000, 262.399993, "medic_button");
	PlayerTextDrawLetterSize(playerid, PlayerTalents[playerid][1], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerTalents[playerid][1], 25.000000, 25.000000);
	PlayerTextDrawAlignment(playerid, PlayerTalents[playerid][1], 1);
	PlayerTextDrawColor(playerid, PlayerTalents[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerTalents[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, PlayerTalents[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTalents[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTalents[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTalents[playerid][1], 1939274751);
	PlayerTextDrawFont(playerid, PlayerTalents[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid, PlayerTalents[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTalents[playerid][1], true);
	PlayerTextDrawSetPreviewModel(playerid, PlayerTalents[playerid][1], 1240);
	PlayerTextDrawSetPreviewRot(playerid, PlayerTalents[playerid][1], -10.000000, 0.000000, 30.000000, 1.000000);
	PlayerTextDrawShow(playerid, PlayerTalents[playerid][1]);
	PlayerTalents[playerid][2] = CreatePlayerTextDraw(playerid, 455.000000, 262.399993, "driver_button");
	PlayerTextDrawLetterSize(playerid, PlayerTalents[playerid][2], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerTalents[playerid][2], 25.000000, 25.000000);
	PlayerTextDrawAlignment(playerid, PlayerTalents[playerid][2], 1);
	PlayerTextDrawColor(playerid, PlayerTalents[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerTalents[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, PlayerTalents[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTalents[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTalents[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTalents[playerid][2], 572662527);
	PlayerTextDrawFont(playerid, PlayerTalents[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, PlayerTalents[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTalents[playerid][2], true);
	PlayerTextDrawSetPreviewModel(playerid, PlayerTalents[playerid][2], 1085);
	PlayerTextDrawSetPreviewRot(playerid, PlayerTalents[playerid][2], -10.000000, 0.000000, 120.000000, 1.000000);
	PlayerTextDrawShow(playerid, PlayerTalents[playerid][2]);
	PlayerTalents[playerid][3] = CreatePlayerTextDraw(playerid, 480.000000, 262.399993, "sniper_button");
	PlayerTextDrawLetterSize(playerid, PlayerTalents[playerid][3], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerTalents[playerid][3], 25.000000, 25.000000);
	PlayerTextDrawAlignment(playerid, PlayerTalents[playerid][3], 1);
	PlayerTextDrawColor(playerid, PlayerTalents[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerTalents[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, PlayerTalents[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTalents[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTalents[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTalents[playerid][3], 572662527);
	PlayerTextDrawFont(playerid, PlayerTalents[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, PlayerTalents[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTalents[playerid][3], true);
	PlayerTextDrawSetPreviewModel(playerid, PlayerTalents[playerid][3], 2049);
	PlayerTextDrawSetPreviewRot(playerid, PlayerTalents[playerid][3], -10.000000, 0.000000, -30.000000, 1.000000);
	PlayerTextDrawShow(playerid, PlayerTalents[playerid][3]);
	PlayerTalents[playerid][4] = CreatePlayerTextDraw(playerid, 505.000000, 262.399993, "sport_button");
	PlayerTextDrawLetterSize(playerid, PlayerTalents[playerid][4], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerTalents[playerid][4], 25.000000, 25.000000);
	PlayerTextDrawAlignment(playerid, PlayerTalents[playerid][4], 1);
	PlayerTextDrawColor(playerid, PlayerTalents[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, PlayerTalents[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, PlayerTalents[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTalents[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTalents[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTalents[playerid][4], 572662527);
	PlayerTextDrawFont(playerid, PlayerTalents[playerid][4], 5);
	PlayerTextDrawSetProportional(playerid, PlayerTalents[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTalents[playerid][4], true);
	PlayerTextDrawSetPreviewModel(playerid, PlayerTalents[playerid][4], 1985);
	PlayerTextDrawSetPreviewRot(playerid, PlayerTalents[playerid][4], -10.000000, 0.000000, -30.000000, 1.000000);
	PlayerTextDrawShow(playerid, PlayerTalents[playerid][4]);
	new amount[32];
	f(amount, Language[32][PlayerInfo[playerid][pLanguage]], PlayerInfo[playerid][pTalents][0]);
	PlayerTalents[playerid][5] = CreatePlayerTextDraw(playerid, 489.523437, 145.920013, Translate(amount));
	PlayerTextDrawLetterSize(playerid, PlayerTalents[playerid][5], 0.141428, 0.895999);
	PlayerTextDrawAlignment(playerid, PlayerTalents[playerid][5], 2);
	PlayerTextDrawColor(playerid, PlayerTalents[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, PlayerTalents[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTalents[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTalents[playerid][5], 51);
	PlayerTextDrawFont(playerid, PlayerTalents[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTalents[playerid][5], 1);
	PlayerTextDrawShow(playerid, PlayerTalents[playerid][5]);
	PlayerTalents[playerid][6] = CreatePlayerTextDraw(playerid, 469.600006, 246.500000, Translate(Language[33][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, PlayerTalents[playerid][6], 0.141428, 0.895999);
	PlayerTextDrawAlignment(playerid, PlayerTalents[playerid][6], 2);
	PlayerTextDrawColor(playerid, PlayerTalents[playerid][6], 255);
	PlayerTextDrawSetShadow(playerid, PlayerTalents[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTalents[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTalents[playerid][6], 51);
	PlayerTextDrawFont(playerid, PlayerTalents[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTalents[playerid][6], 1);
	PlayerTextDrawShow(playerid, PlayerTalents[playerid][6]);
	PlayerTalents[playerid][7] = CreatePlayerTextDraw(playerid, 510.200012, 246.500000, Translate(Language[10][PlayerInfo[playerid][pLanguage]]));
	PlayerTextDrawLetterSize(playerid, PlayerTalents[playerid][7], 0.141428, 0.895999);
	PlayerTextDrawAlignment(playerid, PlayerTalents[playerid][7], 2);
	PlayerTextDrawColor(playerid, PlayerTalents[playerid][7], 255);
	PlayerTextDrawSetShadow(playerid, PlayerTalents[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, PlayerTalents[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerTalents[playerid][7], 51);
	PlayerTextDrawFont(playerid, PlayerTalents[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, PlayerTalents[playerid][7], 1);
	PlayerTextDrawShow(playerid, PlayerTalents[playerid][7]);
	for(new i; i < 9; i++){
		TalentItems[playerid][i] = CreatePlayerTextDraw(playerid, TalentEnum[i][talX], TalentEnum[i][talY], TalentEnum[i][talIcon]);
		PlayerTextDrawLetterSize(playerid, TalentItems[playerid][i], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, TalentItems[playerid][i], 25.000000, 25.000000);
		PlayerTextDrawAlignment(playerid, TalentItems[playerid][i], 1);
		PlayerTextDrawSetShadow(playerid, TalentItems[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, TalentItems[playerid][i], 0);
		PlayerTextDrawFont(playerid, TalentItems[playerid][i], 4);
		PlayerTextDrawSetSelectable(playerid, TalentItems[playerid][i], true);
		switch(i){
		case 0..2:PlayerTextDrawColor(playerid, TalentItems[playerid][i], (TalentsInfo[playerid][0][0] == i+1) ? 10092543 : -1);
		case 3..5:PlayerTextDrawColor(playerid, TalentItems[playerid][i], (TalentsInfo[playerid][0][1] == i-2) ? 10092543 : -1);
		case 6..8:PlayerTextDrawColor(playerid, TalentItems[playerid][i], (TalentsInfo[playerid][0][2] == i-5) ? 10092543 : -1);
		}
		PlayerTextDrawShow(playerid, TalentItems[playerid][i]);
	}
	SetPVarInt(playerid, "showedtalents", 1);
	SelectTextDraw(playerid, 0x0099FFAA);
	return 1;
}
stock UpdateTalent(playerid, i){
	switch(i){
	case 0..2:PlayerTextDrawColor(playerid, TalentItems[playerid][i], (TalentsInfo[playerid][SelectedBrunch[playerid]][0] == i+1) ? 10092543 : -1);
	case 3..5:PlayerTextDrawColor(playerid, TalentItems[playerid][i], (TalentsInfo[playerid][SelectedBrunch[playerid]][1] == i-2) ? 10092543 : -1);
	case 6..8:PlayerTextDrawColor(playerid, TalentItems[playerid][i], (TalentsInfo[playerid][SelectedBrunch[playerid]][2] == i-5) ? 10092543 : -1);
	}
	if(strlen(TalentDesc[SelectedBrunch[playerid]][i][talName]) < 2){
		PlayerTextDrawSetSelectable(playerid, TalentItems[playerid][i], false);
		PlayerTextDrawSetString(playerid, TalentItems[playerid][i], "_");
	}else{
		PlayerTextDrawSetSelectable(playerid, TalentItems[playerid][i], true);
		PlayerTextDrawSetString(playerid, TalentItems[playerid][i], TalentEnum[i][talIcon]);
	}
	PlayerTextDrawShow(playerid, TalentItems[playerid][i]);
}
stock HideTalents(playerid){
	for(new i; i < 14; i++){
		TextDrawHideForPlayer(playerid, TalentsTD[i]);
		if(i < 9){
			PlayerTextDrawHide(playerid, TalentItems[playerid][i]);
			DestroyPlayerTD(playerid, TalentItems[playerid][i]);
		}
		if(i < 8){
			PlayerTextDrawHide(playerid, PlayerTalents[playerid][i]);
			DestroyPlayerTD(playerid, PlayerTalents[playerid][i]);
		}
	}
	HideTalentMenu(playerid);
	DeletePVar(playerid, "showedtalents");
	return 1;
}
/*public GPS_WhenRouteIsCalculated(routeid,node_id_array[],amount_of_nodes,Float:distance,Float:Polygon[],Polygon_Size,Float:NodePosX[],Float:NodePosY[],Float:NodePosZ[])
{
    PlayerRoute[routeid][calculating] = false;
    if(amount_of_nodes > 1){
		new Float:pos[4];
		GetPlayerPos(routeid, pos[0], pos[1], pos[2]);
		GetPlayerFacingAngle(routeid, pos[3]);
		new Float:angle = GetAngleToPoint(pos[0],pos[1],pos[3],NodePosX[0], NodePosY[0]);
        PlayerRoute[routeid][Lenght] = amount_of_nodes;
        PlayerRoute[routeid][Destination] = node_id_array[amount_of_nodes-1];
        PlayerRoute[routeid][GPS_Polygon] = CreateDynamicPolygon(Polygon,.maxpoints = Polygon_Size,.playerid = routeid);
        PlayerRoute[routeid][IsInGPS_Polygon] = IsPlayerInDynamicArea(routeid,PlayerRoute[routeid][GPS_Polygon]) == 1;
        gps_AddPlayer(routeid);
		if(!PlayerRoute[routeid][Object]){
			PlayerRoute[routeid][Object] = CreateObject(1318, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
			SetObjectMaterial(PlayerRoute[routeid][Object], 0, -1, "none", "none", GPSCOLORS[PlayerInfo[routeid][pGPS]][gps_color]);
			AttachObjectToPlayer(PlayerRoute[routeid][Object], routeid, 0.0, 0.0, 2.0, 0.0, 80.0, angle);
		}
		else MoveObject(PlayerRoute[routeid][Object], 0.0, 0.0, 0.0, 2.00, 0.0, 80.0, angle);
    }
    return 1;
}
public OnPlayerClosestNodeIDChange(playerid,old_NodeID,new_NodeID)
{
    if(new_NodeID != -1){
        if(PlayerRoute[playerid][Destination] != -1){
            if(PlayerRoute[playerid][Destination] == new_NodeID)return DisableGPSForPlayer(playerid);
            if(!PlayerRoute[playerid][IsInGPS_Polygon]){
                if(!PlayerRoute[playerid][calculating]){
					if(CalculatePath(new_NodeID, PlayerRoute[playerid][Destination], playerid, .CreatePolygon = true, .GrabNodePositions = true)){
                        DisableGPSForPlayer(playerid);
						PlayerRoute[playerid][calculating] = true;
                    }
                }
            }
        }
    }
    return 1;
}*/
GetFreeCars(){
	for(new i; i < MAX_OWNABLECARS; i++)
		if(CarInfo[i][cModel] < 400)
			return i;
	return -1;
}
GetFreePlant(){
	for(new i; i < MAX_PLANTS; i++)
		if(!PlantInfo[i][plantCreatedID])
			return i;
	return -1;
}
forward UpdatePosition(playerid);
public UpdatePosition(playerid)
{
    new Float:pos[3];
    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
    new Float:p_distance =
        floatpower(pos[0] - acPos[playerid][0],2.0) +
        floatpower(pos[1] - acPos[playerid][1],2.0) +
        floatpower(pos[2] - acPos[playerid][2],2.0);
    if((
	(!IsPlayerInAnyVehicle(playerid) && !PlayerSpeed(playerid) && GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID && p_distance > 300.0) ||
	(IsPlayerInAnyVehicle(playerid) && SpeedVehicle(playerid) && p_distance > 7100.0) ||
	(!IsPlayerInAnyVehicle(playerid) && PlayerSpeed(playerid) && GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID && p_distance > 500.0) ||
	(!IsPlayerInAnyVehicle(playerid) && floatround(pos[2] - acPos[playerid][2]) > 30.0 && floatround(pos[1] - acPos[playerid][1]) > 35.0)) && !GetPVarInt(playerid,"PauseUpdate"))
    {
        SetPVarInt(playerid,"KickPlayer",GetPVarInt(playerid,"KickPlayer")+1);
        if(GetPVarInt(playerid,"KickPlayer") >= 2)return ToCheat(1,playerid);
    }
	acPos[playerid][0] = pos[0];
    acPos[playerid][1] = pos[1];
    acPos[playerid][2] = pos[2];
    if(p_distance == 0.0 && GetPVarInt(playerid,"KickPlayer"))DeletePVar(playerid,"KickPlayer");
    return 1;
}
stock SaveQuest(playerid, id){
	new query[256];
	format(query, sizeof(query), "UPDATE `quests` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, Name(playerid));
	mysql_tquery(mysql, query);
	return 1;
}
forward LoadQuestMysql(playerid);
public LoadQuestMysql(playerid)
{
	new maxt = cache_get_row_count(mysql);
	for(new i; i < maxt; i++)
	{
		new idquest = cache_get_row_int(i, 0, mysql);
		QuestProgress[playerid][idquest] = cache_get_row_int(i, 1, mysql);
		AcceptQuest[playerid][idquest] = cache_get_row_int(i, 2, mysql);
	}
	return 1;
}
stock SendRequest(slot, team, i, const text[], const sender[]){
	RequestInfo[slot][req_Team] = team;
	RequestInfo[slot][req_Slot] = i;
	SetString(RequestInfo[slot][req_Text], text);
	SetString(RequestInfo[slot][req_Sender], sender);
	foreach(Admins, a)
	{
		if(ADuty[a]!=228)continue;
		PlayerPlaySound(a, 45400, 0.0, 0.0, 0.0);
		GameTextForPlayer(a, "~n~~n~~n~~n~~n~~g~+REQUEST TO CHANGE NAME", 3000, 5);
	}
}
public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ) return EditObject(playerid,objectid);
public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	if(GetPVarInt(playerid, "StoWaiting")){
		new vehicleid = GetPlayerVehicleID(playerid);
		new cid = TPInfo[playerid][tID];
		if(response == 1){
			if(GetMoney(playerid) < StickersInfo[TPInfo[playerid][tID]][st_Price]) return SendError(playerid, "У Вас недостаточно средств для покупки этого стикера");
			GiveMoney(playerid, -StickersInfo[TPInfo[playerid][tID]][st_Price]);
			TuningInfo[GetPVarInt(playerid, "StoWaiting")-1][stoBalance] += StickersInfo[TPInfo[playerid][tID]][st_Price]/10;
			TuningInfo[GetPVarInt(playerid, "StoWaiting")-1][stoWin] += StickersInfo[TPInfo[playerid][tID]][st_Price]/10;
			SetDynamicObjectPos(objectid,x,y,z);
			SetDynamicObjectRot(objectid,rx,ry,rz);
			new carid = GetVehicleID(vehicleid), Float:Pos[3];
			GetVehiclePos(vehicleid, Pos[0],Pos[1],Pos[2]);
			TunInfo[carid][nSticker][cid] = StickersInfo[cid][st_ID];
			StickerPos[carid][cid][0] = (Pos[0] - x);
			StickerPos[carid][cid][1] = (Pos[1] - y);
			StickerPos[carid][cid][2] = (Pos[2] - z);
			StickerPos[carid][cid][3] = rx;
			StickerPos[carid][cid][4] = ry;
			StickerPos[carid][cid][5] = (rz - 90.0);
			SaveSticker(GetVehicleID(vehicleid), StickersInfo[cid][st_ID], StickerPos[carid][cid][0], StickerPos[carid][cid][1], StickerPos[carid][cid][2], rx, ry, rz);
			DestroySticker(vehicleid, cid);
			DeletePVar(playerid, "tempstick");
			new logtime[3],logdate[3],logtimestring[16];
			getdate(logdate[2],logdate[1],logdate[0]);
			gettime(logtime[0],logtime[1],logtime[2]);
			f(logtimestring,"%02d:%02d:%02d",logtime[0],logtime[1],logtime[2]);
			WriteLog(logdate[0],logdate[1],logdate[2],logtimestring,PlayerInfo[playerid][pID],Name(playerid),-1,"Система","Покупка стикера",-StickersInfo[TPInfo[playerid][tID]][st_Price],PlayerIp[playerid],"127.0.0.1",GetMoney(playerid));
			SetCameraBehindPlayer(playerid);
			PlayerTextDrawHide(playerid, InfoText[playerid]);
			SelectTextDraw(playerid, COLOR_ORANGE);
			ShowTuning(playerid);
			CreateSticker(vehicleid, cid, 1);
			Streamer_Update(playerid);
			return 1;
		}
		else if(response == 0){
			DestroySticker(vehicleid, cid);
			SetCameraBehindPlayer(playerid);
			PlayerTextDrawHide(playerid, InfoText[playerid]);
			SelectTextDraw(playerid, COLOR_ORANGE);
			ShowTuning(playerid);
			DeletePVar(playerid, "tempstick");
			return 1;
		}
		else{
			SetDynamicObjectPos(objectid,x,y,z);
			SetDynamicObjectRot(objectid,rx,ry,rz);
			EditDynamicObject(playerid, VehObjects[GetPlayerVehicleID(playerid)][4]);
		}
	}
	return true;
}
stock CreateSticker(vehicleid, id, check = 0){
	new carid = GetVehicleID(vehicleid);
	switch(id){
	case 0:
		{
			VehObjects[vehicleid][4] = CreateDynamicObjectEx(19177, StickerPos[carid][id][0], StickerPos[carid][id][2], StickerPos[carid][id][1], StickerPos[carid][id][3],StickerPos[carid][id][4],90.0);
			SetDynamicObjectMaterialText(VehObjects[vehicleid][4], 0, " ", 80, "Calibri", 20, 1, 0x00000000, 0x00000000, 0);
			if(check == 1)AttachDynamicObjectToVehicle(VehObjects[vehicleid][4], vehicleid, StickerPos[carid][id][0], StickerPos[carid][id][2], StickerPos[carid][id][1], StickerPos[carid][id][3],StickerPos[carid][id][4],StickerPos[carid][id][5]);			
			VehObjects[vehicleid][5] = CreateDynamicObject(2722, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterialText(VehObjects[vehicleid][5], 0, "GUCCI", 130, "courier", 20, 1, 0xFFFFCD00, 0x00000000, 1); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][5], VehObjects[vehicleid][4], -0.354248, 0.0, 0.110023, 0.0, 0.0, 0.0, 1);
			VehObjects[vehicleid][6] = CreateDynamicObject(2722, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterialText(VehObjects[vehicleid][6], 0, "GUCCI", 130, "courier", 20, 1, 0xFFFFCD00, 0x00000000, 1); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][6], VehObjects[vehicleid][4], 0.376465, 0.0, -0.109982, 0.0, 180.0, 0.0, 1);
			VehObjects[vehicleid][7] = CreateDynamicObject(2722, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterialText(VehObjects[vehicleid][7], 0, "GUCCI", 130, "courier", 20, 1, 0xFF000000, 0x00000000, 1); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][7], VehObjects[vehicleid][4], -0.134033, 0.0, -0.369988, 0.0, 270.0, 0.0, 1);
			VehObjects[vehicleid][8] = CreateDynamicObject(2722, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterialText(VehObjects[vehicleid][8], 0, "GUCCI", 130, "courier", 20, 1, 0xFF000000, 0x00000000, 1); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][8], VehObjects[vehicleid][4], 0.15625, 0.0, 0.360025, 0.0, 450.0, 0.0, 1);
			VehObjects[vehicleid][9] = CreateDynamicObject(19792, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterial(VehObjects[vehicleid][9], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF56A85E);
			AttachDynamicObjectToObject(VehObjects[vehicleid][9], VehObjects[vehicleid][4], -0.060058, 0.0, 0.050001, 90.0, 0.0, 0.0, 1);
			VehObjects[vehicleid][10] = CreateDynamicObject(19792, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterial(VehObjects[vehicleid][10], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF56A85E); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][10], VehObjects[vehicleid][4], 0.0, 0.0, 0.050001, 90.0, 0.0, 0.0, 1);
			VehObjects[vehicleid][11] = CreateDynamicObject(19792, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterial(VehObjects[vehicleid][11], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF56A85E); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][11], VehObjects[vehicleid][4], 0.080078, 0.0, 0.050001, 90.0, 0.0, 0.0, 1);
			VehObjects[vehicleid][12] = CreateDynamicObject(19792, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterial(VehObjects[vehicleid][12], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFD94141); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][12], VehObjects[vehicleid][4], 0.080078, 0.0, 0.0, 90.0, 0.0, 0.0, 1);
			VehObjects[vehicleid][13] = CreateDynamicObject(19792, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterial(VehObjects[vehicleid][13], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFD94141); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][13], VehObjects[vehicleid][4], 0.0, 0.0, 0.0, 90.0, 0.0, 0.0, 1);
			VehObjects[vehicleid][14] = CreateDynamicObject(19792, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterial(VehObjects[vehicleid][14], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFD94141); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][14], VehObjects[vehicleid][4], -0.060058, 0.0, 0.0, 90.0, 0.0, 0.0, 1);
			VehObjects[vehicleid][15] = CreateDynamicObject(19792, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterial(VehObjects[vehicleid][15], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF56A85E); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][15], VehObjects[vehicleid][4], -0.060058, 0.0, -0.050001, 90.0, 0.0, 0.0, 1);
			VehObjects[vehicleid][16] = CreateDynamicObject(19792, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterial(VehObjects[vehicleid][16], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF56A85E); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][16], VehObjects[vehicleid][4], 0.0, 0.0, -0.050001, 90.0, 0.0, 0.0, 1);
			VehObjects[vehicleid][17] = CreateDynamicObject(19792, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterial(VehObjects[vehicleid][17], 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF56A85E); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][17], VehObjects[vehicleid][4], 0.080078, 0.0, -0.050001, 90.0, 0.0, 0.0, 1);
			VehObjects[vehicleid][18] = CreateDynamicObject(1942, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterialText(VehObjects[vehicleid][18], 0, "C", 140, "Engravers MT", 100, 0, 0xFFFF9900, 0x00000000, 1); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][18], VehObjects[vehicleid][4], -0.00354, 0.009155, 0.010025, 0.0, 180.000000, 180.000000, 1);
			VehObjects[vehicleid][19] = CreateDynamicObject(1942, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterialText(VehObjects[vehicleid][19], 0, "C", 140, "Engravers MT", 100, 0, 0xFFFF9900, 0x00000000, 1); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][19], VehObjects[vehicleid][4], 0.026489, -0.000855, 0.010025, 0.0, 180.000000, 360.000000, 1);
			VehObjects[vehicleid][20] = CreateDynamicObject(1942, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterialText(VehObjects[vehicleid][20], 0, "-", 130, "Engravers MT", 50, 0, 0xFFFF9900, 0x00000000, 1); 
			AttachDynamicObjectToObject(VehObjects[vehicleid][20], VehObjects[vehicleid][4], -0.005493, 0.001343, 0.010025, 0.0, 180.000000, 360.000000, 1);
			VehObjects[vehicleid][21] = CreateDynamicObject(1942, 0.0,0.0,0.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			SetDynamicObjectMaterialText(VehObjects[vehicleid][21], 0, "-", 130, "Engravers MT", 50, 0, 0xFFFF9900, 0x00000000, 1);
			AttachDynamicObjectToObject(VehObjects[vehicleid][21], VehObjects[vehicleid][4], 0.000466, -0.006348, 0.010025, 0.0, 180.000000, 360.000000, 1);	
		}
	}
}
stock UpdateSticker(vehicleid, id){
	new Float:Pos[3];
	GetVehiclePos(vehicleid, Pos[0], Pos[1], Pos[2]);
	switch(id){
	case 0:
		{
			for(new i = 4; i < 22; i++){
				SetDynamicObjectPos(VehObjects[vehicleid][i],Pos[0],Pos[1],Pos[2]);
			}
		}
	}
}
stock DestroySticker(vehicleid, id){
	switch(id){
	case 0:
		{
			for(new i = 4; i < 22; i++)
				DestroyDynamicObject(VehObjects[vehicleid][i]);
		}
	}
}
const UNOCCUPIED_SYNC = 209;
IPacket:UNOCCUPIED_SYNC(playerid, BitStream:bs)
{
    new unoccupiedData[PR_UnoccupiedSync];
    BS_IgnoreBits(bs, 8);
    BS_ReadUnoccupiedSync(bs, unoccupiedData);
    if(floatcmp(floatabs(unoccupiedData[PR_roll][0]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_roll][1]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_roll][2]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_direction][0]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_direction][1]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_direction][2]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_position][0]), 20000.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_position][1]), 20000.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_position][2]), 20000.00000) == 1
    ) 
	{
        return false;
    }
    return true;
}
/*public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags) 
{ 
    if(result == -1) 
    { 
        SendInfo(playerid, "Неизвестная команда. Посмотреть список доступных команд можно в '/help'"); 
        return 0; 
    } 
    return 1; 
} */
cmd:sp(playerid, const params[]){
	return callcmd::spec(playerid, params);
}
cmd:re(playerid, const params[]){
	return callcmd::spec(playerid,params);
}
cmd:g(playerid, params[]){
	return callcmd::goto(playerid, params);
} 
cmd:mn(playerid){
	return callcmd::menu(playerid);
}
cmd:mm(playerid){
	return callcmd::menu(playerid);
}
cmd:anim(playerid, const params[]){
	return callcmd::anims(playerid, params);
}
cmd:n(playerid, const params[]){
	return callcmd::b(playerid, params);
}
cmd:members(playerid){
	return callcmd::flist(playerid);
}
cmd:ratp(playerid){
	return callcmd::ztp(playerid);
}
cmd:klog(playerid, const params[]){
	return callcmd::killlog(playerid, params);
}
cmd:dlog(playerid, const params[]){
	return callcmd::deathlog(playerid, params);
}
cmd:clog(playerid, const params[]){
	return callcmd::chatlog(playerid, params);
}
cmd:gh(playerid, const params[]){
	return callcmd::gethere(playerid, params);
}